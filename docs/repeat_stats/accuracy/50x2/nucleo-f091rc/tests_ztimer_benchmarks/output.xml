<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:40:42.296" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:42.860" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:42.868" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:43.970" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:42.858" endtime="20201117 14:40:43.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:43.973" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:43.972" endtime="20201117 14:40:43.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.857" endtime="20201117 14:40:43.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:43.976" endtime="20201117 14:40:44.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:43.975" endtime="20201117 14:40:44.161"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.174" endtime="20201117 14:40:44.189"></status>
</kw>
<msg timestamp="20201117 14:40:44.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201117 14:40:44.172" endtime="20201117 14:40:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201117 14:40:44.193" endtime="20201117 14:40:44.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:44.199" endtime="20201117 14:40:44.204"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.170" endtime="20201117 14:40:44.205"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.167" endtime="20201117 14:40:44.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.166" endtime="20201117 14:40:44.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:44.216" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:44.214" endtime="20201117 14:40:44.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.209" endtime="20201117 14:40:44.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.165" endtime="20201117 14:40:44.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.165" endtime="20201117 14:40:44.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.220" endtime="20201117 14:40:44.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.163" endtime="20201117 14:40:44.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.226" endtime="20201117 14:40:44.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.162" endtime="20201117 14:40:44.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:42.855" endtime="20201117 14:40:44.231"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:44.245" endtime="20201117 14:40:44.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.242" endtime="20201117 14:40:44.268"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.298" endtime="20201117 14:40:44.312"></status>
</kw>
<msg timestamp="20201117 14:40:44.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.295" endtime="20201117 14:40:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.314" endtime="20201117 14:40:44.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.318" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:44.316" endtime="20201117 14:40:44.319"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.289" endtime="20201117 14:40:44.319"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:44.283" endtime="20201117 14:40:44.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.280" endtime="20201117 14:40:44.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:44.324" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:44.323" endtime="20201117 14:40:44.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.321" endtime="20201117 14:40:44.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.278" endtime="20201117 14:40:44.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.276" endtime="20201117 14:40:44.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.326" endtime="20201117 14:40:44.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.273" endtime="20201117 14:40:44.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.270" endtime="20201117 14:40:44.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.239" endtime="20201117 14:40:44.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.336" endtime="20201117 14:40:44.346"></status>
</kw>
<msg timestamp="20201117 14:40:44.347" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.335" endtime="20201117 14:40:44.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.350" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:44.348" endtime="20201117 14:40:44.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:44.351" endtime="20201117 14:40:44.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.332" endtime="20201117 14:40:44.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.330" endtime="20201117 14:40:44.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.358" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:40:44.357" endtime="20201117 14:40:44.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.360" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:40:44.359" endtime="20201117 14:40:44.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.354" endtime="20201117 14:40:44.361"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:44.232" endtime="20201117 14:40:44.362" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:42.408" endtime="20201117 14:40:44.365"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:40:44.417" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:40:44.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:40:45.567" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:40:44.416" endtime="20201117 14:40:45.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.570" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:40:45.569" endtime="20201117 14:40:45.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.415" endtime="20201117 14:40:45.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.573" endtime="20201117 14:40:45.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.572" endtime="20201117 14:40:45.794"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.808" endtime="20201117 14:40:45.824"></status>
</kw>
<msg timestamp="20201117 14:40:45.825" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.806" endtime="20201117 14:40:45.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.827" endtime="20201117 14:40:45.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.837" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:45.833" endtime="20201117 14:40:45.838"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.804" endtime="20201117 14:40:45.839"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.802" endtime="20201117 14:40:45.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.800" endtime="20201117 14:40:45.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:45.850" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:45.848" endtime="20201117 14:40:45.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.843" endtime="20201117 14:40:45.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.799" endtime="20201117 14:40:45.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.798" endtime="20201117 14:40:45.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.853" endtime="20201117 14:40:45.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.797" endtime="20201117 14:40:45.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.859" endtime="20201117 14:40:45.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.795" endtime="20201117 14:40:45.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:44.413" endtime="20201117 14:40:45.865"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:45.880" endtime="20201117 14:40:45.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.874" endtime="20201117 14:40:45.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.924" endtime="20201117 14:40:45.938"></status>
</kw>
<msg timestamp="20201117 14:40:45.939" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.922" endtime="20201117 14:40:45.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.940" endtime="20201117 14:40:45.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:40:45.943" endtime="20201117 14:40:45.945"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.919" endtime="20201117 14:40:45.946"></status>
</kw>
<status status="FAIL" starttime="20201117 14:40:45.917" endtime="20201117 14:40:45.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.915" endtime="20201117 14:40:45.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:40:45.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:40:45.950" endtime="20201117 14:40:45.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.947" endtime="20201117 14:40:45.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.913" endtime="20201117 14:40:45.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.911" endtime="20201117 14:40:45.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.952" endtime="20201117 14:40:45.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.908" endtime="20201117 14:40:45.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.905" endtime="20201117 14:40:45.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.872" endtime="20201117 14:40:45.955"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.959" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.969" endtime="20201117 14:40:45.985"></status>
</kw>
<msg timestamp="20201117 14:40:45.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.966" endtime="20201117 14:40:45.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:45.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:45.986" endtime="20201117 14:40:45.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.989" endtime="20201117 14:40:45.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.963" endtime="20201117 14:40:45.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.961" endtime="20201117 14:40:45.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:45.998" endtime="20201117 14:40:46.289"></status>
</kw>
<msg timestamp="20201117 14:40:46.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.08062425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:45.997" endtime="20201117 14:40:46.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080601792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.08062425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:46.294" endtime="20201117 14:40:46.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.302" endtime="20201117 14:40:46.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.994" endtime="20201117 14:40:46.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.992" endtime="20201117 14:40:46.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.310" level="INFO">${RESULT} = [{'time': 0.08062425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2457999999989098e-05, 'source_diff': 2.2457999999989098e-05}, {'time': 0.08066925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:46.306" endtime="20201117 14:40:46.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:46.311" endtime="20201117 14:40:46.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.328" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.327" endtime="20201117 14:40:46.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.331" level="INFO">VALUE: [2.2457999999989098e-05, 2.3082999999993192e-05, 2.29169999999973e-05, 2.268099999999662e-05, 2.2999999999995246e-05, 2.3097999999999175e-05, 2.2583999999992166e-05, 2.2583999999992166e-05, 2.3098000000013053e-05, 2.29169999999973e-05, 2.2848000000005864e-05, 2.311100000000621e-05, 2.27770000000016e-05, 2.3082999999993192e-05, 2.3264000000008944e-05, 2.336099999999952e-05, 2.340300000000517e-05, 2.256900000000006e-05, 2.2763999999994566e-05, 2.258300000000657e-05, 2.3429999999990958e-05, 2.2679999999997147e-05, 2.2999999999995246e-05, 2.306900000000056e-05, 2.2999999999995246e-05, 2.294499999999644e-05, 2.309700000001358e-05, 2.2806000000000215e-05, 2.318099999999712e-05, 2.2763999999994566e-05, 2.2584000000006044e-05, 2.2971999999996107e-05, 2.2833999999999355e-05, 2.293100000000381e-05, 2.2763999999994566e-05, 2.3250000000002435e-05, 2.3402999999991292e-05, 2.301300000000228e-05, 2.3070000000000035e-05, 2.3415999999998327e-05, 2.3179999999997647e-05, 2.3028000000008264e-05, 2.3291999999994206e-05, 2.3415999999998327e-05, 2.3179999999997647e-05, 2.3208000000010665e-05, 2.281900000000725e-05, 2.3250000000002435e-05, 2.2749999999988058e-05, 2.3070000000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.330" endtime="20201117 14:40:46.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.325" endtime="20201117 14:40:46.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.334" endtime="20201117 14:40:46.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.338" endtime="20201117 14:40:46.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.336" endtime="20201117 14:40:46.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.333" endtime="20201117 14:40:46.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.959" endtime="20201117 14:40:46.359"></status>
</kw>
<msg timestamp="20201117 14:40:46.359" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.368" endtime="20201117 14:40:46.384"></status>
</kw>
<msg timestamp="20201117 14:40:46.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.366" endtime="20201117 14:40:46.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.386" endtime="20201117 14:40:46.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.388" endtime="20201117 14:40:46.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.363" endtime="20201117 14:40:46.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.361" endtime="20201117 14:40:46.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.398" endtime="20201117 14:40:46.684"></status>
</kw>
<msg timestamp="20201117 14:40:46.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.396" endtime="20201117 14:40:46.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.688" endtime="20201117 14:40:46.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.703" endtime="20201117 14:40:46.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.393" endtime="20201117 14:40:46.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.392" endtime="20201117 14:40:46.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:46.711" level="INFO">${RESULT} = [{'time': 0.022978083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3151999999998507e-05, 'source_diff': 2.3151999999998507e-05}, {'time': 0.023022083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:46.707" endtime="20201117 14:40:46.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:46.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:46.712" endtime="20201117 14:40:46.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.729" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:40:46.728" endtime="20201117 14:40:46.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.732" level="INFO">VALUE: [2.3151999999998507e-05, 2.2540999999997452e-05, 2.306900000000056e-05, 2.2915999999997827e-05, 2.283299999999988e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.2764000000001505e-05, 2.3472000000000076e-05, 2.270899999999923e-05, 2.2999999999998716e-05, 2.343100000000084e-05, 2.316699999999755e-05, 2.3306000000000715e-05, 2.291700000000077e-05, 2.2777999999997606e-05, 2.3249999999998966e-05, 2.2542000000000395e-05, 2.2569999999999535e-05, 2.29030000000012e-05, 2.318100000000059e-05, 2.3014000000001755e-05, 2.341700000000127e-05, 2.316699999999755e-05, 2.284699999999945e-05, 2.2762999999998562e-05, 2.3401999999998757e-05, 2.283299999999988e-05, 2.3250000000002435e-05, 2.2915999999997827e-05, 2.2458000000002976e-05, 2.306900000000056e-05, 2.34030000000017e-05, 2.331900000000081e-05, 2.3278000000001575e-05, 2.293100000000034e-05, 2.283299999999988e-05, 2.29169999999973e-05, 2.2833999999999355e-05, 2.34169999999978e-05, 2.334699999999995e-05, 2.3083999999999605e-05, 2.340299999999823e-05, 2.293099999999687e-05, 2.2583999999999105e-05, 2.3458000000000506e-05, 2.316699999999755e-05, 2.3333999999999855e-05, 2.3070000000000035e-05, 2.2570000000003004e-05]</msg>
<status status="PASS" starttime="20201117 14:40:46.731" endtime="20201117 14:40:46.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.726" endtime="20201117 14:40:46.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.735" endtime="20201117 14:40:46.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:46.739" endtime="20201117 14:40:46.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.737" endtime="20201117 14:40:46.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.734" endtime="20201117 14:40:46.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.360" endtime="20201117 14:40:46.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.957" endtime="20201117 14:40:46.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.956" endtime="20201117 14:40:46.760"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.763" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.771" endtime="20201117 14:40:46.788"></status>
</kw>
<msg timestamp="20201117 14:40:46.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.770" endtime="20201117 14:40:46.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:46.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:46.789" endtime="20201117 14:40:46.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.792" endtime="20201117 14:40:46.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.767" endtime="20201117 14:40:46.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.765" endtime="20201117 14:40:46.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:46.802" endtime="20201117 14:40:47.087"></status>
</kw>
<msg timestamp="20201117 14:40:47.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:46.800" endtime="20201117 14:40:47.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025561486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.092" endtime="20201117 14:40:47.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.100" endtime="20201117 14:40:47.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.797" endtime="20201117 14:40:47.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.795" endtime="20201117 14:40:47.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.107" level="INFO">${RESULT} = [{'time': 0.025561486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.338900000000213e-05, 'source_diff': 2.338900000000213e-05}, {'time': 0.025605417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:47.104" endtime="20201117 14:40:47.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.122" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.108" endtime="20201117 14:40:47.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.127" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.126" endtime="20201117 14:40:47.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.129" level="INFO">VALUE: [2.338900000000213e-05, 2.3013999999998286e-05, 2.2750000000001935e-05, 2.3098000000002644e-05, 2.288899999999816e-05, 2.2792000000000645e-05, 2.323700000000234e-05, 2.304100000000142e-05, 2.3262999999999062e-05, 2.2916000000001296e-05, 2.3180000000001116e-05, 2.2666000000001046e-05, 2.3013999999998286e-05, 2.3415999999998327e-05, 2.287500000000206e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.3027999999997856e-05, 2.29030000000012e-05, 2.2499999999998216e-05, 2.341700000000127e-05, 2.2834000000002824e-05, 2.261099999999877e-05, 2.343100000000084e-05, 2.3333999999999855e-05, 2.2569999999999535e-05, 2.2583999999999105e-05, 2.341700000000127e-05, 2.286100000000249e-05, 2.2583999999999105e-05, 2.2749999999998466e-05, 2.334699999999995e-05, 2.2735999999998896e-05, 2.312500000000231e-05, 2.3264000000002005e-05, 2.3068999999997092e-05, 2.2930000000000866e-05, 2.312499999999884e-05, 2.2499999999998216e-05, 2.311099999999927e-05, 2.2750000000001935e-05, 2.336100000000299e-05, 2.281900000000031e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.3249999999998966e-05, 2.341700000000127e-05, 2.2999999999998716e-05, 2.2763999999998036e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.128" endtime="20201117 14:40:47.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.123" endtime="20201117 14:40:47.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.133" endtime="20201117 14:40:47.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.136" endtime="20201117 14:40:47.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.135" endtime="20201117 14:40:47.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.131" endtime="20201117 14:40:47.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.763" endtime="20201117 14:40:47.157"></status>
</kw>
<msg timestamp="20201117 14:40:47.157" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.166" endtime="20201117 14:40:47.182"></status>
</kw>
<msg timestamp="20201117 14:40:47.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.164" endtime="20201117 14:40:47.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.184" endtime="20201117 14:40:47.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.186" endtime="20201117 14:40:47.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.161" endtime="20201117 14:40:47.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.159" endtime="20201117 14:40:47.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.197" endtime="20201117 14:40:47.483"></status>
</kw>
<msg timestamp="20201117 14:40:47.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.195" endtime="20201117 14:40:47.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.488" endtime="20201117 14:40:47.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.496" endtime="20201117 14:40:47.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.193" endtime="20201117 14:40:47.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.191" endtime="20201117 14:40:47.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.503" level="INFO">${RESULT} = [{'time': 0.022156611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.022198611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:47.500" endtime="20201117 14:40:47.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.517" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.504" endtime="20201117 14:40:47.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.522" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.521" endtime="20201117 14:40:47.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.524" level="INFO">VALUE: [2.2792000000000645e-05, 2.283299999999988e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.3250000000002435e-05, 2.2749999999998466e-05, 2.25969999999992e-05, 2.30969999999997e-05, 2.290299999999773e-05, 2.2833999999999355e-05, 2.2750000000001935e-05, 2.311099999999927e-05, 2.2735999999998896e-05, 2.290299999999773e-05, 2.2833999999999355e-05, 2.3070000000000035e-05, 2.2764000000001505e-05, 2.3236000000002865e-05, 2.2916000000001296e-05, 2.2472000000002545e-05, 2.3430000000001366e-05, 2.2499999999998216e-05, 2.3250000000002435e-05, 2.2764000000001505e-05, 2.3264000000002005e-05, 2.340299999999823e-05, 2.316700000000102e-05, 2.283299999999988e-05, 2.293099999999687e-05, 2.266700000000052e-05, 2.2985999999999146e-05, 2.3221999999999826e-05, 2.341700000000127e-05, 2.2999999999998716e-05, 2.34169999999978e-05, 2.316700000000102e-05, 2.3333999999999855e-05, 2.2750000000001935e-05, 2.3083999999999605e-05, 2.291700000000077e-05, 2.2819999999999785e-05, 2.3084000000003074e-05, 2.2778000000001075e-05, 2.25830000000031e-05, 2.25969999999992e-05, 2.263900000000138e-05, 2.2763999999998036e-05, 2.2930000000000866e-05, 2.315300000000145e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.523" endtime="20201117 14:40:47.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.518" endtime="20201117 14:40:47.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.527" endtime="20201117 14:40:47.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.531" endtime="20201117 14:40:47.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.529" endtime="20201117 14:40:47.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.526" endtime="20201117 14:40:47.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.158" endtime="20201117 14:40:47.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.761" endtime="20201117 14:40:47.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:46.760" endtime="20201117 14:40:47.552"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.555" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.564" endtime="20201117 14:40:47.580"></status>
</kw>
<msg timestamp="20201117 14:40:47.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.562" endtime="20201117 14:40:47.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.582" endtime="20201117 14:40:47.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.584" endtime="20201117 14:40:47.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.559" endtime="20201117 14:40:47.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.557" endtime="20201117 14:40:47.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.595" endtime="20201117 14:40:47.880"></status>
</kw>
<msg timestamp="20201117 14:40:47.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025460181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.593" endtime="20201117 14:40:47.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025460181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.884" endtime="20201117 14:40:47.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.893" endtime="20201117 14:40:47.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.590" endtime="20201117 14:40:47.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.589" endtime="20201117 14:40:47.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:47.900" level="INFO">${RESULT} = [{'time': 0.025483472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.329100000000167e-05, 'source_diff': 2.329100000000167e-05}, {'time': 0.025522472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:47.896" endtime="20201117 14:40:47.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:47.914" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:47.901" endtime="20201117 14:40:47.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.919" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:47.917" endtime="20201117 14:40:47.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.921" level="INFO">VALUE: [2.329100000000167e-05, 2.2486000000002115e-05, 2.2778000000001075e-05, 2.3249999999998966e-05, 2.2514000000001255e-05, 2.259700000000267e-05, 2.25969999999992e-05, 2.341700000000127e-05, 2.2958000000000006e-05, 2.288899999999816e-05, 2.315299999999798e-05, 2.3014000000001755e-05, 2.3083999999999605e-05, 2.3263999999998536e-05, 2.341700000000127e-05, 2.244500000000288e-05, 2.3097999999999175e-05, 2.291700000000077e-05, 2.2500000000001685e-05, 2.3444000000000936e-05, 2.331900000000081e-05, 2.2915999999997827e-05, 2.284699999999945e-05, 2.255500000000049e-05, 2.3401999999998757e-05, 2.3332999999996912e-05, 2.291700000000077e-05, 2.2985999999999146e-05, 2.341700000000127e-05, 2.2818999999996842e-05, 2.290299999999773e-05, 2.319500000000016e-05, 2.269499999999966e-05, 2.2472000000002545e-05, 2.2764000000001505e-05, 2.3249999999998966e-05, 2.293100000000034e-05, 2.2999999999998716e-05, 2.270899999999923e-05, 2.343100000000084e-05, 2.2485999999998646e-05, 2.3262999999999062e-05, 2.2749999999998466e-05, 2.323699999999887e-05, 2.2749999999998466e-05, 2.311099999999927e-05, 2.3415999999998327e-05, 2.333300000000038e-05, 2.2847999999998925e-05, 2.30969999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:40:47.920" endtime="20201117 14:40:47.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.915" endtime="20201117 14:40:47.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.924" endtime="20201117 14:40:47.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:47.928" endtime="20201117 14:40:47.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.926" endtime="20201117 14:40:47.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.923" endtime="20201117 14:40:47.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.555" endtime="20201117 14:40:47.949"></status>
</kw>
<msg timestamp="20201117 14:40:47.949" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.958" endtime="20201117 14:40:47.973"></status>
</kw>
<msg timestamp="20201117 14:40:47.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.956" endtime="20201117 14:40:47.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:47.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:47.975" endtime="20201117 14:40:47.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.977" endtime="20201117 14:40:47.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.954" endtime="20201117 14:40:47.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.952" endtime="20201117 14:40:47.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:47.988" endtime="20201117 14:40:48.274"></status>
</kw>
<msg timestamp="20201117 14:40:48.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:47.986" endtime="20201117 14:40:48.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022848194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.278" endtime="20201117 14:40:48.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.286" endtime="20201117 14:40:48.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.984" endtime="20201117 14:40:48.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.982" endtime="20201117 14:40:48.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.293" level="INFO">${RESULT} = [{'time': 0.022870806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2612000000001714e-05, 'source_diff': 2.2612000000001714e-05}, {'time': 0.022908819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:48.290" endtime="20201117 14:40:48.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.307" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:48.294" endtime="20201117 14:40:48.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.312" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.311" endtime="20201117 14:40:48.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.314" level="INFO">VALUE: [2.2612000000001714e-05, 2.2930000000000866e-05, 2.316699999999755e-05, 2.2958000000000006e-05, 2.308300000000013e-05, 2.2736000000002365e-05, 2.262499999999834e-05, 2.2694000000000186e-05, 2.2749999999998466e-05, 2.308300000000013e-05, 2.3444000000000936e-05, 2.2528000000000825e-05, 2.343100000000084e-05, 2.283299999999988e-05, 2.294499999999991e-05, 2.2958000000000006e-05, 2.29169999999973e-05, 2.306900000000056e-05, 2.287499999999859e-05, 2.318100000000059e-05, 2.318099999999712e-05, 2.316699999999755e-05, 2.2500000000001685e-05, 2.2583999999999105e-05, 2.293100000000034e-05, 2.268100000000009e-05, 2.2833999999999355e-05, 2.3249999999998966e-05, 2.323699999999887e-05, 2.2916000000001296e-05, 2.333300000000038e-05, 2.256900000000006e-05, 2.340299999999823e-05, 2.3166000000001546e-05, 2.2542000000000395e-05, 2.2929999999997397e-05, 2.2999999999998716e-05, 2.25969999999992e-05, 2.338899999999866e-05, 2.320899999999973e-05, 2.284699999999945e-05, 2.29169999999973e-05, 2.283299999999988e-05, 2.30969999999997e-05, 2.2749999999998466e-05, 2.30969999999997e-05, 2.2598000000002144e-05, 2.29030000000012e-05, 2.312499999999884e-05, 2.266700000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.313" endtime="20201117 14:40:48.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.308" endtime="20201117 14:40:48.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.317" endtime="20201117 14:40:48.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.322" endtime="20201117 14:40:48.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.320" endtime="20201117 14:40:48.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.316" endtime="20201117 14:40:48.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.950" endtime="20201117 14:40:48.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.553" endtime="20201117 14:40:48.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:47.553" endtime="20201117 14:40:48.343"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.345" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.354" endtime="20201117 14:40:48.371"></status>
</kw>
<msg timestamp="20201117 14:40:48.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.352" endtime="20201117 14:40:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.372" endtime="20201117 14:40:48.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.375" endtime="20201117 14:40:48.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.350" endtime="20201117 14:40:48.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.347" endtime="20201117 14:40:48.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.384" endtime="20201117 14:40:48.668"></status>
</kw>
<msg timestamp="20201117 14:40:48.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025520125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02554325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:48.383" endtime="20201117 14:40:48.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025520125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02554325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:48.672" endtime="20201117 14:40:48.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.681" endtime="20201117 14:40:48.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.380" endtime="20201117 14:40:48.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.378" endtime="20201117 14:40:48.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:48.688" level="INFO">${RESULT} = [{'time': 0.02554325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.312499999999884e-05, 'source_diff': 2.312499999999884e-05}, {'time': 0.02559025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:40:48.684" endtime="20201117 14:40:48.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:48.703" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:48.689" endtime="20201117 14:40:48.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.707" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:48.706" endtime="20201117 14:40:48.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.710" level="INFO">VALUE: [2.312499999999884e-05, 2.2735999999998896e-05, 2.2764000000001505e-05, 2.3152000000001977e-05, 2.2750000000001935e-05, 2.293100000000034e-05, 2.2513999999997786e-05, 2.338899999999866e-05, 2.2833999999999355e-05, 2.3249999999998966e-05, 2.3070000000000035e-05, 2.2833999999999355e-05, 2.298700000000209e-05, 2.3416000000001796e-05, 2.295899999999948e-05, 2.3263999999998536e-05, 2.3263999999998536e-05, 2.3430000000001366e-05, 2.3152000000001977e-05, 2.2651999999998007e-05, 2.284699999999945e-05, 2.2736000000002365e-05, 2.2915999999997827e-05, 2.333300000000038e-05, 2.3250000000002435e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.3235999999999396e-05, 2.340299999999823e-05, 2.266700000000052e-05, 2.316699999999755e-05, 2.265299999999748e-05, 2.3083999999999605e-05, 2.2833999999999355e-05, 2.3263999999998536e-05, 2.34030000000017e-05, 2.3306000000000715e-05, 2.3097999999999175e-05, 2.291700000000077e-05, 2.2721999999999326e-05, 2.301300000000228e-05, 2.2930000000000866e-05, 2.2999999999998716e-05, 2.2902000000001727e-05, 2.3152000000001977e-05, 2.281900000000031e-05, 2.287499999999859e-05, 2.318100000000059e-05, 2.2513999999997786e-05, 2.308300000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:40:48.708" endtime="20201117 14:40:48.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.704" endtime="20201117 14:40:48.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.714" endtime="20201117 14:40:48.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:48.717" endtime="20201117 14:40:48.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.716" endtime="20201117 14:40:48.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.712" endtime="20201117 14:40:48.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.346" endtime="20201117 14:40:48.738"></status>
</kw>
<msg timestamp="20201117 14:40:48.738" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.747" endtime="20201117 14:40:48.763"></status>
</kw>
<msg timestamp="20201117 14:40:48.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.745" endtime="20201117 14:40:48.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:48.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:48.765" endtime="20201117 14:40:48.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.767" endtime="20201117 14:40:48.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.743" endtime="20201117 14:40:48.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.740" endtime="20201117 14:40:48.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:48.778" endtime="20201117 14:40:49.064"></status>
</kw>
<msg timestamp="20201117 14:40:49.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:48.776" endtime="20201117 14:40:49.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.069" endtime="20201117 14:40:49.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.077" endtime="20201117 14:40:49.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.774" endtime="20201117 14:40:49.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.772" endtime="20201117 14:40:49.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.084" level="INFO">${RESULT} = [{'time': 0.022223389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2457999999999506e-05, 'source_diff': 2.2457999999999506e-05}, {'time': 0.022264403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.081" endtime="20201117 14:40:49.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.085" endtime="20201117 14:40:49.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.103" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.102" endtime="20201117 14:40:49.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.105" level="INFO">VALUE: [2.2457999999999506e-05, 2.3249999999998966e-05, 2.3263999999998536e-05, 2.2736000000002365e-05, 2.340299999999823e-05, 2.3193999999997217e-05, 2.265300000000095e-05, 2.2694000000000186e-05, 2.301300000000228e-05, 2.2930000000000866e-05, 2.3166000000001546e-05, 2.2513999999997786e-05, 2.2916000000001296e-05, 2.283299999999988e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.2915999999997827e-05, 2.331900000000081e-05, 2.2750000000001935e-05, 2.308300000000013e-05, 2.2764000000001505e-05, 2.256900000000006e-05, 2.2764000000001505e-05, 2.291700000000077e-05, 2.283299999999988e-05, 2.291700000000077e-05, 2.316699999999755e-05, 2.2847999999998925e-05, 2.2790999999997702e-05, 2.3250000000002435e-05, 2.262500000000181e-05, 2.3097999999999175e-05, 2.343100000000084e-05, 2.2500000000001685e-05, 2.2750000000001935e-05, 2.3083999999999605e-05, 2.2916000000001296e-05, 2.283299999999988e-05, 2.308300000000013e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.305500000000099e-05, 2.2791999999997176e-05, 2.2916000000001296e-05, 2.284699999999945e-05, 2.3235999999999396e-05, 2.3068999999997092e-05, 2.341700000000127e-05, 2.2513999999997786e-05, 2.34030000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.104" endtime="20201117 14:40:49.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.099" endtime="20201117 14:40:49.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.109" endtime="20201117 14:40:49.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.113" endtime="20201117 14:40:49.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.111" endtime="20201117 14:40:49.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.107" endtime="20201117 14:40:49.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.739" endtime="20201117 14:40:49.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.344" endtime="20201117 14:40:49.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:48.343" endtime="20201117 14:40:49.134"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.136" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.145" endtime="20201117 14:40:49.161"></status>
</kw>
<msg timestamp="20201117 14:40:49.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.143" endtime="20201117 14:40:49.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.163" endtime="20201117 14:40:49.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.165" endtime="20201117 14:40:49.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.141" endtime="20201117 14:40:49.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.138" endtime="20201117 14:40:49.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.175" endtime="20201117 14:40:49.460"></status>
</kw>
<msg timestamp="20201117 14:40:49.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.173" endtime="20201117 14:40:49.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024838139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.465" endtime="20201117 14:40:49.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.473" endtime="20201117 14:40:49.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.171" endtime="20201117 14:40:49.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.169" endtime="20201117 14:40:49.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.480" level="INFO">${RESULT} = [{'time': 0.024838139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2777999999997606e-05, 'source_diff': 2.2777999999997606e-05}, {'time': 0.024875139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:49.477" endtime="20201117 14:40:49.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.494" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.481" endtime="20201117 14:40:49.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.499" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.497" endtime="20201117 14:40:49.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.502" level="INFO">VALUE: [2.2777999999997606e-05, 2.316700000000102e-05, 2.266700000000052e-05, 2.2499999999998216e-05, 2.2555999999999965e-05, 2.340299999999823e-05, 2.266700000000052e-05, 2.3264000000002005e-05, 2.3292000000001145e-05, 2.319500000000016e-05, 2.2915999999997827e-05, 2.3165999999998077e-05, 2.283299999999988e-05, 2.25969999999992e-05, 2.3401999999998757e-05, 2.3000000000002185e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.308300000000013e-05, 2.341700000000127e-05, 2.283299999999988e-05, 2.2749999999998466e-05, 2.294499999999991e-05, 2.266700000000052e-05, 2.3318999999997342e-05, 2.30969999999997e-05, 2.259700000000267e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.3249999999998966e-05, 2.2583999999999105e-05, 2.2542000000000395e-05, 2.2763999999998036e-05, 2.34169999999978e-05, 2.3194000000000686e-05, 2.2792000000000645e-05, 2.3250000000002435e-05, 2.308300000000013e-05, 2.3249999999998966e-05, 2.3402000000002227e-05, 2.2985999999999146e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.3278000000001575e-05, 2.287499999999859e-05, 2.316699999999755e-05, 2.3000000000002185e-05, 2.34169999999978e-05, 2.2736000000002365e-05, 2.3014000000001755e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.500" endtime="20201117 14:40:49.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.495" endtime="20201117 14:40:49.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.505" endtime="20201117 14:40:49.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.508" endtime="20201117 14:40:49.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.507" endtime="20201117 14:40:49.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.503" endtime="20201117 14:40:49.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.137" endtime="20201117 14:40:49.529"></status>
</kw>
<msg timestamp="20201117 14:40:49.530" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.538" endtime="20201117 14:40:49.554"></status>
</kw>
<msg timestamp="20201117 14:40:49.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.536" endtime="20201117 14:40:49.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.555" endtime="20201117 14:40:49.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.558" endtime="20201117 14:40:49.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.534" endtime="20201117 14:40:49.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.532" endtime="20201117 14:40:49.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.568" endtime="20201117 14:40:49.854"></status>
</kw>
<msg timestamp="20201117 14:40:49.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.567" endtime="20201117 14:40:49.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.859" endtime="20201117 14:40:49.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.867" endtime="20201117 14:40:49.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.564" endtime="20201117 14:40:49.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.562" endtime="20201117 14:40:49.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:49.874" level="INFO">${RESULT} = [{'time': 0.022147208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.312500000000231e-05, 'source_diff': 2.312500000000231e-05}, {'time': 0.022185194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:49.871" endtime="20201117 14:40:49.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:49.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:49.875" endtime="20201117 14:40:49.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.893" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:40:49.892" endtime="20201117 14:40:49.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.896" level="INFO">VALUE: [2.312500000000231e-05, 2.2735999999998896e-05, 2.2985999999999146e-05, 2.2485999999998646e-05, 2.259700000000267e-05, 2.3082999999996662e-05, 2.2986000000002615e-05, 2.2999999999998716e-05, 2.2763999999998036e-05, 2.345899999999998e-05, 2.268100000000009e-05, 2.316700000000102e-05, 2.315299999999798e-05, 2.2999999999998716e-05, 2.2763999999998036e-05, 2.3278000000001575e-05, 2.3137999999998937e-05, 2.291700000000077e-05, 2.2999999999998716e-05, 2.3070000000000035e-05, 2.340299999999823e-05, 2.2833999999999355e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.2762999999998562e-05, 2.2958000000000006e-05, 2.2665999999997577e-05, 2.2652000000001477e-05, 2.311100000000274e-05, 2.2666000000001046e-05, 2.283299999999988e-05, 2.3416000000001796e-05, 2.333300000000038e-05, 2.30969999999997e-05, 2.2929999999997397e-05, 2.2958000000000006e-05, 2.3249999999998966e-05, 2.2541999999996926e-05, 2.306900000000056e-05, 2.306900000000056e-05, 2.261100000000224e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.3250000000002435e-05, 2.3083999999999605e-05, 2.3097999999999175e-05, 2.34030000000017e-05, 2.2485999999998646e-05, 2.3083999999999605e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:40:49.894" endtime="20201117 14:40:49.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.889" endtime="20201117 14:40:49.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.899" endtime="20201117 14:40:49.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:49.903" endtime="20201117 14:40:49.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.901" endtime="20201117 14:40:49.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.897" endtime="20201117 14:40:49.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.530" endtime="20201117 14:40:49.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.135" endtime="20201117 14:40:49.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.134" endtime="20201117 14:40:49.924"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.926" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.935" endtime="20201117 14:40:49.952"></status>
</kw>
<msg timestamp="20201117 14:40:49.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.933" endtime="20201117 14:40:49.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:49.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:49.954" endtime="20201117 14:40:49.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.956" endtime="20201117 14:40:49.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.931" endtime="20201117 14:40:49.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.928" endtime="20201117 14:40:49.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:49.966" endtime="20201117 14:40:50.251"></status>
</kw>
<msg timestamp="20201117 14:40:50.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025577361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:49.964" endtime="20201117 14:40:50.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025554694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025577361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.255" endtime="20201117 14:40:50.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.264" endtime="20201117 14:40:50.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.961" endtime="20201117 14:40:50.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.960" endtime="20201117 14:40:50.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.271" level="INFO">${RESULT} = [{'time': 0.025577361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.025623333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:50.268" endtime="20201117 14:40:50.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.286" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:50.272" endtime="20201117 14:40:50.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.291" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.290" endtime="20201117 14:40:50.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.293" level="INFO">VALUE: [2.266700000000052e-05, 2.3236000000002865e-05, 2.256900000000006e-05, 2.3263999999998536e-05, 2.261099999999877e-05, 2.340299999999823e-05, 2.2680000000000616e-05, 2.3000000000002185e-05, 2.29169999999973e-05, 2.2805999999996746e-05, 2.291700000000077e-05, 2.333300000000038e-05, 2.25969999999992e-05, 2.293099999999687e-05, 2.263900000000138e-05, 2.284699999999945e-05, 2.3112000000002214e-05, 2.340299999999823e-05, 2.266700000000052e-05, 2.2694000000000186e-05, 2.316699999999755e-05, 2.3012999999998812e-05, 2.341700000000127e-05, 2.2833999999999355e-05, 2.2750000000001935e-05, 2.3263999999998536e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.2721999999999326e-05, 2.3040999999997952e-05, 2.340299999999823e-05, 2.3165999999998077e-05, 2.286100000000249e-05, 2.308300000000013e-05, 2.290299999999773e-05, 2.318100000000059e-05, 2.3208000000000256e-05, 2.283299999999988e-05, 2.291700000000077e-05, 2.283299999999988e-05, 2.3264000000002005e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2750000000001935e-05, 2.2570000000003004e-05, 2.329100000000167e-05, 2.3249999999998966e-05, 2.2569999999999535e-05, 2.337500000000256e-05, 2.3320000000000285e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.292" endtime="20201117 14:40:50.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.287" endtime="20201117 14:40:50.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.297" endtime="20201117 14:40:50.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.300" endtime="20201117 14:40:50.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.299" endtime="20201117 14:40:50.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.295" endtime="20201117 14:40:50.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.927" endtime="20201117 14:40:50.321"></status>
</kw>
<msg timestamp="20201117 14:40:50.321" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.330" endtime="20201117 14:40:50.346"></status>
</kw>
<msg timestamp="20201117 14:40:50.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.328" endtime="20201117 14:40:50.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.347" endtime="20201117 14:40:50.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.350" endtime="20201117 14:40:50.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.326" endtime="20201117 14:40:50.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.323" endtime="20201117 14:40:50.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.360" endtime="20201117 14:40:50.646"></status>
</kw>
<msg timestamp="20201117 14:40:50.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022148903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.359" endtime="20201117 14:40:50.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022148903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.651" endtime="20201117 14:40:50.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.660" endtime="20201117 14:40:50.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.356" endtime="20201117 14:40:50.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.354" endtime="20201117 14:40:50.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:50.667" level="INFO">${RESULT} = [{'time': 0.022148903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3320000000000285e-05, 'source_diff': 2.3320000000000285e-05}, {'time': 0.022192889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:50.663" endtime="20201117 14:40:50.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:50.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:50.668" endtime="20201117 14:40:50.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.685" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:40:50.684" endtime="20201117 14:40:50.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.688" level="INFO">VALUE: [2.3320000000000285e-05, 2.316700000000102e-05, 2.2999999999998716e-05, 2.34169999999978e-05, 2.269499999999966e-05, 2.3013999999998286e-05, 2.2736000000002365e-05, 2.3264000000002005e-05, 2.3263999999998536e-05, 2.3262999999999062e-05, 2.308300000000013e-05, 2.341700000000127e-05, 2.334699999999995e-05, 2.308300000000013e-05, 2.3415999999998327e-05, 2.2499999999998216e-05, 2.305500000000099e-05, 2.258299999999963e-05, 2.3263999999998536e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.341700000000127e-05, 2.2528000000000825e-05, 2.345899999999998e-05, 2.294499999999991e-05, 2.34169999999978e-05, 2.2999999999998716e-05, 2.3472000000000076e-05, 2.284699999999945e-05, 2.343100000000084e-05, 2.315300000000145e-05, 2.312499999999884e-05, 2.3361999999998995e-05, 2.288900000000163e-05, 2.316699999999755e-05, 2.286100000000249e-05, 2.3070000000000035e-05, 2.2569999999999535e-05, 2.25969999999992e-05, 2.2819999999999785e-05, 2.3263999999998536e-05, 2.3249999999998966e-05, 2.306900000000056e-05, 2.3416000000001796e-05, 2.283299999999988e-05, 2.306900000000056e-05, 2.2749999999998466e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.2735999999998896e-05]</msg>
<status status="PASS" starttime="20201117 14:40:50.686" endtime="20201117 14:40:50.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.681" endtime="20201117 14:40:50.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.691" endtime="20201117 14:40:50.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:50.695" endtime="20201117 14:40:50.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.693" endtime="20201117 14:40:50.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.689" endtime="20201117 14:40:50.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.322" endtime="20201117 14:40:50.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.925" endtime="20201117 14:40:50.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:49.924" endtime="20201117 14:40:50.716"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.718" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.727" endtime="20201117 14:40:50.743"></status>
</kw>
<msg timestamp="20201117 14:40:50.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.725" endtime="20201117 14:40:50.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:50.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:50.745" endtime="20201117 14:40:50.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.748" endtime="20201117 14:40:50.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.723" endtime="20201117 14:40:50.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.720" endtime="20201117 14:40:50.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:50.758" endtime="20201117 14:40:51.044"></status>
</kw>
<msg timestamp="20201117 14:40:51.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025090486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:50.756" endtime="20201117 14:40:51.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025090486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.049" endtime="20201117 14:40:51.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.057" endtime="20201117 14:40:51.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.753" endtime="20201117 14:40:51.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.751" endtime="20201117 14:40:51.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.064" level="INFO">${RESULT} = [{'time': 0.025113236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2750000000001935e-05, 'source_diff': 2.2750000000001935e-05}, {'time': 0.025151264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.061" endtime="20201117 14:40:51.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.078" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:51.065" endtime="20201117 14:40:51.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.083" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.082" endtime="20201117 14:40:51.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.085" level="INFO">VALUE: [2.2750000000001935e-05, 2.3013999999998286e-05, 2.2806000000000215e-05, 2.2707999999999756e-05, 2.2764000000001505e-05, 2.337499999999909e-05, 2.2500000000001685e-05, 2.3249999999998966e-05, 2.2735999999998896e-05, 2.3070000000000035e-05, 2.3290999999998202e-05, 2.290299999999773e-05, 2.2499999999998216e-05, 2.3264000000002005e-05, 2.323699999999887e-05, 2.323699999999887e-05, 2.3264000000002005e-05, 2.256900000000006e-05, 2.2944000000000436e-05, 2.283300000000335e-05, 2.3194000000000686e-05, 2.308300000000013e-05, 2.2722000000002796e-05, 2.3235999999999396e-05, 2.3416000000001796e-05, 2.286100000000249e-05, 2.3235999999999396e-05, 2.265300000000095e-05, 2.341700000000127e-05, 2.2499999999998216e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.258299999999963e-05, 2.2569999999999535e-05, 2.340299999999823e-05, 2.2833999999999355e-05, 2.344500000000041e-05, 2.262499999999834e-05, 2.3306000000000715e-05, 2.341700000000127e-05, 2.2499999999998216e-05, 2.336100000000299e-05, 2.2665999999997577e-05, 2.2721999999999326e-05, 2.283299999999988e-05, 2.30969999999997e-05, 2.284699999999945e-05, 2.25969999999992e-05, 2.2666000000001046e-05, 2.316699999999755e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.084" endtime="20201117 14:40:51.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.079" endtime="20201117 14:40:51.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.089" endtime="20201117 14:40:51.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.092" endtime="20201117 14:40:51.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.091" endtime="20201117 14:40:51.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.087" endtime="20201117 14:40:51.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.719" endtime="20201117 14:40:51.113"></status>
</kw>
<msg timestamp="20201117 14:40:51.113" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.122" endtime="20201117 14:40:51.137"></status>
</kw>
<msg timestamp="20201117 14:40:51.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.120" endtime="20201117 14:40:51.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.139" endtime="20201117 14:40:51.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.142" endtime="20201117 14:40:51.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.118" endtime="20201117 14:40:51.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.115" endtime="20201117 14:40:51.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.152" endtime="20201117 14:40:51.439"></status>
</kw>
<msg timestamp="20201117 14:40:51.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.150" endtime="20201117 14:40:51.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.443" endtime="20201117 14:40:51.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.451" endtime="20201117 14:40:51.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.148" endtime="20201117 14:40:51.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.146" endtime="20201117 14:40:51.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.458" level="INFO">${RESULT} = [{'time': 0.022125778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2791999999997176e-05, 'source_diff': 2.2791999999997176e-05}, {'time': 0.022170819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:51.455" endtime="20201117 14:40:51.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.472" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:51.459" endtime="20201117 14:40:51.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.477" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.476" endtime="20201117 14:40:51.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.479" level="INFO">VALUE: [2.2791999999997176e-05, 2.3208000000000256e-05, 2.3000000000002185e-05, 2.3070000000000035e-05, 2.2583999999999105e-05, 2.3070000000000035e-05, 2.3249999999998966e-05, 2.263900000000138e-05, 2.258299999999963e-05, 2.3401999999998757e-05, 2.2985999999999146e-05, 2.3430000000001366e-05, 2.283299999999988e-05, 2.3443999999997467e-05, 2.283299999999988e-05, 2.2764000000001505e-05, 2.2763999999998036e-05, 2.290299999999773e-05, 2.2486000000002115e-05, 2.294499999999991e-05, 2.293100000000034e-05, 2.341700000000127e-05, 2.2485999999998646e-05, 2.341700000000127e-05, 2.316700000000102e-05, 2.316699999999755e-05, 2.3000000000002185e-05, 2.2513999999997786e-05, 2.308300000000013e-05, 2.3235999999999396e-05, 2.2735999999998896e-05, 2.291700000000077e-05, 2.3000000000002185e-05, 2.291700000000077e-05, 2.281900000000031e-05, 2.258299999999963e-05, 2.25969999999992e-05, 2.2930000000000866e-05, 2.2818999999996842e-05, 2.2930000000000866e-05, 2.2513999999997786e-05, 2.25969999999992e-05, 2.29030000000012e-05, 2.2999999999998716e-05, 2.329100000000167e-05, 2.286099999999902e-05, 2.266700000000052e-05, 2.2486000000002115e-05, 2.3472000000000076e-05, 2.2985999999999146e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.478" endtime="20201117 14:40:51.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.473" endtime="20201117 14:40:51.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.483" endtime="20201117 14:40:51.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.486" endtime="20201117 14:40:51.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.485" endtime="20201117 14:40:51.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.481" endtime="20201117 14:40:51.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.114" endtime="20201117 14:40:51.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.717" endtime="20201117 14:40:51.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:50.716" endtime="20201117 14:40:51.507"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.510" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.519" endtime="20201117 14:40:51.536"></status>
</kw>
<msg timestamp="20201117 14:40:51.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.517" endtime="20201117 14:40:51.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.538" endtime="20201117 14:40:51.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.541" endtime="20201117 14:40:51.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.514" endtime="20201117 14:40:51.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.512" endtime="20201117 14:40:51.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.550" endtime="20201117 14:40:51.836"></status>
</kw>
<msg timestamp="20201117 14:40:51.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026368014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026390569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.548" endtime="20201117 14:40:51.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026368014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026390569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.840" endtime="20201117 14:40:51.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.849" endtime="20201117 14:40:51.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.546" endtime="20201117 14:40:51.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.544" endtime="20201117 14:40:51.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:51.856" level="INFO">${RESULT} = [{'time': 0.026390569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.255500000000049e-05, 'source_diff': 2.255500000000049e-05}, {'time': 0.026430569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:51.852" endtime="20201117 14:40:51.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:51.871" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:51.857" endtime="20201117 14:40:51.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.876" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:51.874" endtime="20201117 14:40:51.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.879" level="INFO">VALUE: [2.255500000000049e-05, 2.3416000000001796e-05, 2.2666000000001046e-05, 2.3000000000002185e-05, 2.308300000000013e-05, 2.261099999999877e-05, 2.261100000000224e-05, 2.2749999999998466e-05, 2.293100000000034e-05, 2.316700000000102e-05, 2.3013999999998286e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.25969999999992e-05, 2.29030000000012e-05, 2.266700000000052e-05, 2.266700000000052e-05, 2.2999999999998716e-05, 2.2750000000001935e-05, 2.291700000000077e-05, 2.2514000000001255e-05, 2.29030000000012e-05, 2.316700000000102e-05, 2.266699999999705e-05, 2.3151999999998507e-05, 2.2999999999998716e-05, 2.30969999999997e-05, 2.3278000000001575e-05, 2.308300000000013e-05, 2.258299999999963e-05, 2.2721999999999326e-05, 2.306900000000056e-05, 2.29030000000012e-05, 2.315300000000145e-05, 2.283299999999988e-05, 2.3028000000001325e-05, 2.2749999999998466e-05, 2.2764000000001505e-05, 2.341700000000127e-05, 2.3221999999999826e-05, 2.270899999999923e-05, 2.263900000000138e-05, 2.316700000000102e-05, 2.266700000000052e-05, 2.2848000000002394e-05, 2.2861999999998495e-05, 2.244499999999941e-05, 2.293099999999687e-05, 2.284699999999945e-05, 2.323699999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:40:51.877" endtime="20201117 14:40:51.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.872" endtime="20201117 14:40:51.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.882" endtime="20201117 14:40:51.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:51.886" endtime="20201117 14:40:51.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.885" endtime="20201117 14:40:51.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.880" endtime="20201117 14:40:51.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.511" endtime="20201117 14:40:51.913"></status>
</kw>
<msg timestamp="20201117 14:40:51.913" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.922" endtime="20201117 14:40:51.938"></status>
</kw>
<msg timestamp="20201117 14:40:51.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.920" endtime="20201117 14:40:51.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:51.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:51.939" endtime="20201117 14:40:51.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.942" endtime="20201117 14:40:51.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.918" endtime="20201117 14:40:51.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.915" endtime="20201117 14:40:51.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:51.952" endtime="20201117 14:40:52.239"></status>
</kw>
<msg timestamp="20201117 14:40:52.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028040528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028063639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:51.951" endtime="20201117 14:40:52.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028040528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028063639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.243" endtime="20201117 14:40:52.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.252" endtime="20201117 14:40:52.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.948" endtime="20201117 14:40:52.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.946" endtime="20201117 14:40:52.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.259" level="INFO">${RESULT} = [{'time': 0.028063639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.311100000000274e-05, 'source_diff': 2.311100000000274e-05}, {'time': 0.028100639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:52.255" endtime="20201117 14:40:52.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.272" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:52.260" endtime="20201117 14:40:52.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.277" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.276" endtime="20201117 14:40:52.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.280" level="INFO">VALUE: [2.311100000000274e-05, 2.258299999999963e-05, 2.2749999999998466e-05, 2.2569999999999535e-05, 2.3083999999999605e-05, 2.2763999999998036e-05, 2.330500000000124e-05, 2.2764000000001505e-05, 2.258299999999963e-05, 2.323700000000234e-05, 2.258299999999963e-05, 2.262500000000181e-05, 2.2958000000000006e-05, 2.2513999999997786e-05, 2.3263999999998536e-05, 2.2749999999998466e-05, 2.3028000000001325e-05, 2.258299999999963e-05, 2.2930000000000866e-05, 2.2499999999998216e-05, 2.3250000000002435e-05, 2.258299999999963e-05, 2.340299999999823e-05, 2.283299999999988e-05, 2.3263999999998536e-05, 2.341700000000127e-05, 2.2514000000001255e-05, 2.258299999999963e-05, 2.3083999999999605e-05, 2.27770000000016e-05, 2.313900000000188e-05, 2.323699999999887e-05, 2.258299999999963e-05, 2.3249999999998966e-05, 2.2569999999999535e-05, 2.341700000000127e-05, 2.301300000000228e-05, 2.2944000000000436e-05, 2.2708000000003226e-05, 2.3000000000002185e-05, 2.3416000000001796e-05, 2.2528000000000825e-05, 2.2694000000000186e-05, 2.3235999999999396e-05, 2.3416000000001796e-05, 2.316699999999755e-05, 2.2958000000000006e-05, 2.291700000000077e-05, 2.266700000000052e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.278" endtime="20201117 14:40:52.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.273" endtime="20201117 14:40:52.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.283" endtime="20201117 14:40:52.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.287" endtime="20201117 14:40:52.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.285" endtime="20201117 14:40:52.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.282" endtime="20201117 14:40:52.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.914" endtime="20201117 14:40:52.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.509" endtime="20201117 14:40:52.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:51.508" endtime="20201117 14:40:52.308"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.311" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.319" endtime="20201117 14:40:52.335"></status>
</kw>
<msg timestamp="20201117 14:40:52.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.318" endtime="20201117 14:40:52.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.337" endtime="20201117 14:40:52.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.340" endtime="20201117 14:40:52.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.315" endtime="20201117 14:40:52.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.313" endtime="20201117 14:40:52.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.349" endtime="20201117 14:40:52.635"></status>
</kw>
<msg timestamp="20201117 14:40:52.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.348" endtime="20201117 14:40:52.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024988681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.640" endtime="20201117 14:40:52.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.648" endtime="20201117 14:40:52.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.345" endtime="20201117 14:40:52.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.343" endtime="20201117 14:40:52.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:52.655" level="INFO">${RESULT} = [{'time': 0.025011306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.262500000000181e-05, 'source_diff': 2.262500000000181e-05}, {'time': 0.025052389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:52.652" endtime="20201117 14:40:52.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:52.669" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:52.656" endtime="20201117 14:40:52.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.673" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:52.672" endtime="20201117 14:40:52.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.676" level="INFO">VALUE: [2.262500000000181e-05, 2.265300000000095e-05, 2.309700000000317e-05, 2.311100000000274e-05, 2.3415999999998327e-05, 2.3194000000000686e-05, 2.333300000000038e-05, 2.308300000000013e-05, 2.258299999999963e-05, 2.3249999999998966e-05, 2.29169999999973e-05, 2.336099999999952e-05, 2.2569999999999535e-05, 2.293100000000034e-05, 2.315299999999798e-05, 2.3000000000002185e-05, 2.258299999999963e-05, 2.259700000000267e-05, 2.3083999999999605e-05, 2.341700000000127e-05, 2.316700000000102e-05, 2.3000000000002185e-05, 2.2750000000001935e-05, 2.279100000000117e-05, 2.2749999999998466e-05, 2.341700000000127e-05, 2.2819999999999785e-05, 2.3429999999997897e-05, 2.331900000000081e-05, 2.3000000000002185e-05, 2.2915999999997827e-05, 2.281900000000031e-05, 2.256900000000006e-05, 2.308300000000013e-05, 2.2749999999998466e-05, 2.3264000000002005e-05, 2.258299999999963e-05, 2.3249999999998966e-05, 2.3264000000002005e-05, 2.311099999999927e-05, 2.341700000000127e-05, 2.266700000000052e-05, 2.2999999999998716e-05, 2.3097999999999175e-05, 2.262499999999834e-05, 2.291700000000077e-05, 2.266700000000052e-05, 2.312500000000231e-05, 2.262499999999834e-05, 2.247299999999855e-05]</msg>
<status status="PASS" starttime="20201117 14:40:52.675" endtime="20201117 14:40:52.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.670" endtime="20201117 14:40:52.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.680" endtime="20201117 14:40:52.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:52.683" endtime="20201117 14:40:52.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.682" endtime="20201117 14:40:52.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.678" endtime="20201117 14:40:52.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.311" endtime="20201117 14:40:52.704"></status>
</kw>
<msg timestamp="20201117 14:40:52.704" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.713" endtime="20201117 14:40:52.729"></status>
</kw>
<msg timestamp="20201117 14:40:52.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.711" endtime="20201117 14:40:52.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:52.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:52.731" endtime="20201117 14:40:52.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.733" endtime="20201117 14:40:52.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.709" endtime="20201117 14:40:52.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.706" endtime="20201117 14:40:52.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:52.744" endtime="20201117 14:40:53.030"></status>
</kw>
<msg timestamp="20201117 14:40:53.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:52.742" endtime="20201117 14:40:53.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.034" endtime="20201117 14:40:53.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.043" endtime="20201117 14:40:53.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.740" endtime="20201117 14:40:53.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.738" endtime="20201117 14:40:53.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.050" level="INFO">${RESULT} = [{'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.022314986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:53.046" endtime="20201117 14:40:53.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.064" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.051" endtime="20201117 14:40:53.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.068" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.067" endtime="20201117 14:40:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.071" level="INFO">VALUE: [2.2958000000000006e-05, 2.34169999999978e-05, 2.2443999999999936e-05, 2.34169999999978e-05, 2.2514000000001255e-05, 2.261099999999877e-05, 2.3152000000001977e-05, 2.294499999999991e-05, 2.3387999999999187e-05, 2.2583999999999105e-05, 2.263900000000138e-05, 2.293100000000034e-05, 2.2999999999998716e-05, 2.2749999999998466e-05, 2.2762999999998562e-05, 2.2930000000000866e-05, 2.2499999999998216e-05, 2.3306000000000715e-05, 2.256900000000006e-05, 2.308300000000013e-05, 2.2930000000000866e-05, 2.2944000000000436e-05, 2.3193999999997217e-05, 2.3221999999999826e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.298699999999862e-05, 2.263900000000138e-05, 2.315300000000145e-05, 2.333300000000038e-05, 2.308300000000013e-05, 2.263900000000138e-05, 2.29169999999973e-05, 2.2514000000001255e-05, 2.25969999999992e-05, 2.3111999999998745e-05, 2.2749999999998466e-05, 2.293100000000034e-05, 2.268100000000009e-05, 2.252700000000135e-05, 2.268100000000009e-05, 2.3208000000000256e-05, 2.291700000000077e-05, 2.2680000000000616e-05, 2.3318999999997342e-05, 2.305500000000099e-05, 2.2735999999998896e-05, 2.2554999999997022e-05, 2.2749999999998466e-05, 2.3054999999997522e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.069" endtime="20201117 14:40:53.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.065" endtime="20201117 14:40:53.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.075" endtime="20201117 14:40:53.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.078" endtime="20201117 14:40:53.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.077" endtime="20201117 14:40:53.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.073" endtime="20201117 14:40:53.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.705" endtime="20201117 14:40:53.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.309" endtime="20201117 14:40:53.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:52.309" endtime="20201117 14:40:53.100"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.102" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.111" endtime="20201117 14:40:53.128"></status>
</kw>
<msg timestamp="20201117 14:40:53.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.109" endtime="20201117 14:40:53.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.130" endtime="20201117 14:40:53.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.132" endtime="20201117 14:40:53.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.106" endtime="20201117 14:40:53.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.104" endtime="20201117 14:40:53.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.142" endtime="20201117 14:40:53.428"></status>
</kw>
<msg timestamp="20201117 14:40:53.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025686083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025708556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.140" endtime="20201117 14:40:53.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025686083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025708556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.432" endtime="20201117 14:40:53.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.441" endtime="20201117 14:40:53.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.137" endtime="20201117 14:40:53.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.136" endtime="20201117 14:40:53.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.447" level="INFO">${RESULT} = [{'time': 0.025708556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.247300000000202e-05, 'source_diff': 2.247300000000202e-05}, {'time': 0.025755556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:53.444" endtime="20201117 14:40:53.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.462" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.448" endtime="20201117 14:40:53.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.467" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.466" endtime="20201117 14:40:53.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.470" level="INFO">VALUE: [2.247300000000202e-05, 2.3027999999997856e-05, 2.2944000000000436e-05, 2.2680000000000616e-05, 2.2500000000001685e-05, 2.3249999999998966e-05, 2.2901999999998257e-05, 2.334699999999995e-05, 2.2694000000000186e-05, 2.2901999999998257e-05, 2.3180000000001116e-05, 2.287499999999859e-05, 2.338900000000213e-05, 2.336099999999952e-05, 2.25969999999992e-05, 2.3235999999999396e-05, 2.3472000000000076e-05, 2.2999999999998716e-05, 2.29030000000012e-05, 2.2888000000002157e-05, 2.2764000000001505e-05, 2.293100000000034e-05, 2.2528000000000825e-05, 2.2583999999999105e-05, 2.2598000000002144e-05, 2.3250000000002435e-05, 2.3084000000003074e-05, 2.2930000000000866e-05, 2.3194000000000686e-05, 2.2666000000001046e-05, 2.2443999999999936e-05, 2.311099999999927e-05, 2.305500000000099e-05, 2.306900000000056e-05, 2.2806000000000215e-05, 2.3249999999998966e-05, 2.2916000000001296e-05, 2.2500000000001685e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.256900000000006e-05, 2.30969999999997e-05, 2.3249999999998966e-05, 2.3278000000001575e-05, 2.308300000000013e-05, 2.3278000000001575e-05, 2.2735999999998896e-05, 2.344500000000041e-05, 2.293100000000034e-05, 2.3235999999999396e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.468" endtime="20201117 14:40:53.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.463" endtime="20201117 14:40:53.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.474" endtime="20201117 14:40:53.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.477" endtime="20201117 14:40:53.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.476" endtime="20201117 14:40:53.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.472" endtime="20201117 14:40:53.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.103" endtime="20201117 14:40:53.498"></status>
</kw>
<msg timestamp="20201117 14:40:53.498" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.507" endtime="20201117 14:40:53.523"></status>
</kw>
<msg timestamp="20201117 14:40:53.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.505" endtime="20201117 14:40:53.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.525" endtime="20201117 14:40:53.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.527" endtime="20201117 14:40:53.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.502" endtime="20201117 14:40:53.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.500" endtime="20201117 14:40:53.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.538" endtime="20201117 14:40:53.823"></status>
</kw>
<msg timestamp="20201117 14:40:53.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.536" endtime="20201117 14:40:53.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.828" endtime="20201117 14:40:53.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.836" endtime="20201117 14:40:53.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.533" endtime="20201117 14:40:53.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.532" endtime="20201117 14:40:53.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:53.843" level="INFO">${RESULT} = [{'time': 0.022212792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.261099999999877e-05, 'source_diff': 2.261099999999877e-05}, {'time': 0.022255819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:53.840" endtime="20201117 14:40:53.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:53.857" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:53.844" endtime="20201117 14:40:53.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.862" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:40:53.861" endtime="20201117 14:40:53.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.865" level="INFO">VALUE: [2.261099999999877e-05, 2.254100000000092e-05, 2.2847999999998925e-05, 2.29030000000012e-05, 2.308300000000013e-05, 2.258299999999963e-05, 2.259700000000267e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.286099999999902e-05, 2.331900000000081e-05, 2.258299999999963e-05, 2.3263999999998536e-05, 2.2764000000001505e-05, 2.2750000000001935e-05, 2.2735999999998896e-05, 2.34169999999978e-05, 2.3000000000002185e-05, 2.308300000000013e-05, 2.3208000000000256e-05, 2.29169999999973e-05, 2.2901999999998257e-05, 2.3235999999999396e-05, 2.2597999999998675e-05, 2.3070000000000035e-05, 2.286099999999902e-05, 2.3333999999999855e-05, 2.25969999999992e-05, 2.290299999999773e-05, 2.2680000000000616e-05, 2.2499999999998216e-05, 2.3429999999997897e-05, 2.3165999999998077e-05, 2.336099999999952e-05, 2.3402000000002227e-05, 2.337499999999909e-05, 2.25969999999992e-05, 2.258299999999963e-05, 2.2930000000000866e-05, 2.268100000000009e-05, 2.3277999999998106e-05, 2.258299999999963e-05, 2.341700000000127e-05, 2.268100000000009e-05, 2.2471999999999076e-05, 2.341700000000127e-05, 2.316699999999755e-05, 2.2986000000002615e-05, 2.319500000000016e-05, 2.340299999999823e-05]</msg>
<status status="PASS" starttime="20201117 14:40:53.863" endtime="20201117 14:40:53.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.858" endtime="20201117 14:40:53.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.868" endtime="20201117 14:40:53.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:53.872" endtime="20201117 14:40:53.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.870" endtime="20201117 14:40:53.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.866" endtime="20201117 14:40:53.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.499" endtime="20201117 14:40:53.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.101" endtime="20201117 14:40:53.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.100" endtime="20201117 14:40:53.893"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.895" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.904" endtime="20201117 14:40:53.921"></status>
</kw>
<msg timestamp="20201117 14:40:53.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.902" endtime="20201117 14:40:53.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:53.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:53.922" endtime="20201117 14:40:53.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.925" endtime="20201117 14:40:53.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.900" endtime="20201117 14:40:53.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.897" endtime="20201117 14:40:53.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:53.934" endtime="20201117 14:40:54.221"></status>
</kw>
<msg timestamp="20201117 14:40:54.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025211667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:53.933" endtime="20201117 14:40:54.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025187361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025211667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.225" endtime="20201117 14:40:54.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.234" endtime="20201117 14:40:54.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.930" endtime="20201117 14:40:54.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.928" endtime="20201117 14:40:54.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.241" level="INFO">${RESULT} = [{'time': 0.025211667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4306000000001715e-05, 'source_diff': 2.4306000000001715e-05}, {'time': 0.025249653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:54.238" endtime="20201117 14:40:54.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:54.242" endtime="20201117 14:40:54.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.260" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.259" endtime="20201117 14:40:54.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.262" level="INFO">VALUE: [2.4306000000001715e-05, 2.3485999999999646e-05, 2.3763999999999036e-05, 2.4084000000000605e-05, 2.388900000000263e-05, 2.3512999999999312e-05, 2.363900000000238e-05, 2.3750000000002935e-05, 2.383300000000088e-05, 2.3986000000000146e-05, 2.3929999999998397e-05, 2.4318999999998342e-05, 2.356900000000106e-05, 2.4263999999999536e-05, 2.4236000000000396e-05, 2.408300000000113e-05, 2.408300000000113e-05, 2.340299999999823e-05, 2.3999999999999716e-05, 2.3763999999999036e-05, 2.3735999999999896e-05, 2.358300000000063e-05, 2.408300000000113e-05, 2.3750000000002935e-05, 2.4082999999997662e-05, 2.381900000000131e-05, 2.343100000000084e-05, 2.4096999999997232e-05, 2.416699999999855e-05, 2.436100000000052e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.341700000000127e-05, 2.434700000000095e-05, 2.3915999999998827e-05, 2.3986000000000146e-05, 2.361099999999977e-05, 2.40970000000007e-05, 2.4249999999999966e-05, 2.358300000000063e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.358300000000063e-05, 2.415299999999898e-05, 2.343100000000084e-05, 2.434700000000095e-05, 2.341700000000127e-05, 2.361099999999977e-05, 2.3999999999999716e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.261" endtime="20201117 14:40:54.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.256" endtime="20201117 14:40:54.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.266" endtime="20201117 14:40:54.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.269" endtime="20201117 14:40:54.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.268" endtime="20201117 14:40:54.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.264" endtime="20201117 14:40:54.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.896" endtime="20201117 14:40:54.290"></status>
</kw>
<msg timestamp="20201117 14:40:54.290" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.299" endtime="20201117 14:40:54.315"></status>
</kw>
<msg timestamp="20201117 14:40:54.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.297" endtime="20201117 14:40:54.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.317" endtime="20201117 14:40:54.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.320" endtime="20201117 14:40:54.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.295" endtime="20201117 14:40:54.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.292" endtime="20201117 14:40:54.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.331" endtime="20201117 14:40:54.617"></status>
</kw>
<msg timestamp="20201117 14:40:54.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.330" endtime="20201117 14:40:54.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022624653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.621" endtime="20201117 14:40:54.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.630" endtime="20201117 14:40:54.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.327" endtime="20201117 14:40:54.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.325" endtime="20201117 14:40:54.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:54.638" level="INFO">${RESULT} = [{'time': 0.022624653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3472000000000076e-05, 'source_diff': 2.3472000000000076e-05}, {'time': 0.022670653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:54.634" endtime="20201117 14:40:54.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:54.652" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:54.639" endtime="20201117 14:40:54.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.656" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:40:54.655" endtime="20201117 14:40:54.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.659" level="INFO">VALUE: [2.3472000000000076e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.4070000000001035e-05, 2.34169999999978e-05, 2.4013999999999286e-05, 2.423699999999987e-05, 2.3597999999999675e-05, 2.393099999999787e-05, 2.398699999999962e-05, 2.390299999999873e-05, 2.3499999999999216e-05, 2.3750000000002935e-05, 2.3749999999999466e-05, 2.358300000000063e-05, 2.3901999999999257e-05, 2.3666000000002047e-05, 2.3499999999999216e-05, 2.391700000000177e-05, 2.3514000000002255e-05, 2.356900000000106e-05, 2.408300000000113e-05, 2.391700000000177e-05, 2.4305999999998246e-05, 2.3763999999999036e-05, 2.345899999999998e-05, 2.416700000000202e-05, 2.3999999999999716e-05, 2.4292000000002145e-05, 2.3499999999999216e-05, 2.3584000000000105e-05, 2.39169999999983e-05, 2.3499999999999216e-05, 2.4263999999999536e-05, 2.3930000000001866e-05, 2.3499999999999216e-05, 2.3429999999997897e-05, 2.436100000000052e-05, 2.3916000000002297e-05, 2.3499999999999216e-05, 2.3749999999999466e-05, 2.408300000000113e-05, 2.3763999999999036e-05, 2.361099999999977e-05, 2.358300000000063e-05, 2.408300000000113e-05, 2.40970000000007e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:40:54.657" endtime="20201117 14:40:54.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.652" endtime="20201117 14:40:54.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.662" endtime="20201117 14:40:54.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:54.666" endtime="20201117 14:40:54.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.664" endtime="20201117 14:40:54.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.660" endtime="20201117 14:40:54.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.291" endtime="20201117 14:40:54.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.894" endtime="20201117 14:40:54.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:53.893" endtime="20201117 14:40:54.687"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.689" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.698" endtime="20201117 14:40:54.714"></status>
</kw>
<msg timestamp="20201117 14:40:54.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.696" endtime="20201117 14:40:54.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:54.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:54.716" endtime="20201117 14:40:54.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.719" endtime="20201117 14:40:54.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.694" endtime="20201117 14:40:54.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.691" endtime="20201117 14:40:54.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:54.729" endtime="20201117 14:40:55.024"></status>
</kw>
<msg timestamp="20201117 14:40:55.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:54.727" endtime="20201117 14:40:55.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.029" endtime="20201117 14:40:55.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.037" endtime="20201117 14:40:55.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.724" endtime="20201117 14:40:55.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.722" endtime="20201117 14:40:55.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.044" level="INFO">${RESULT} = [{'time': 0.025801389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4806000000002215e-05, 'source_diff': 2.4806000000002215e-05}, {'time': 0.025850403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.041" endtime="20201117 14:40:55.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.045" endtime="20201117 14:40:55.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.064" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.063" endtime="20201117 14:40:55.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.067" level="INFO">VALUE: [2.4806000000002215e-05, 2.5000000000000716e-05, 2.520900000000173e-05, 2.4777999999999606e-05, 2.436100000000052e-05, 2.4528000000002825e-05, 2.4597999999997205e-05, 2.511100000000127e-05, 2.4597999999997205e-05, 2.4750000000000466e-05, 2.4762999999997093e-05, 2.4429999999998897e-05, 2.4472000000001076e-05, 2.4415999999999327e-05, 2.516700000000302e-05, 2.469499999999819e-05, 2.4665999999999577e-05, 2.4832999999998412e-05, 2.5264000000000536e-05, 2.4582999999998162e-05, 2.5278000000000106e-05, 2.4500000000000216e-05, 2.49169999999993e-05, 2.465299999999948e-05, 2.4986000000001146e-05, 2.5264000000000536e-05, 2.4750000000000466e-05, 2.4778000000003075e-05, 2.4582999999998162e-05, 2.443100000000184e-05, 2.516699999999955e-05, 2.4513999999999786e-05, 2.441700000000227e-05, 2.4500000000000216e-05, 2.4804999999999272e-05, 2.5084000000001605e-05, 2.4930000000002867e-05, 2.4985999999997677e-05, 2.458300000000163e-05, 2.4457999999998037e-05, 2.4500000000000216e-05, 2.508300000000213e-05, 2.512500000000084e-05, 2.5068999999999092e-05, 2.491700000000277e-05, 2.4986000000001146e-05, 2.5250000000000966e-05, 2.5082999999998662e-05, 2.4708000000001756e-05, 2.508300000000213e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.065" endtime="20201117 14:40:55.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.060" endtime="20201117 14:40:55.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.070" endtime="20201117 14:40:55.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.074" endtime="20201117 14:40:55.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.072" endtime="20201117 14:40:55.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.068" endtime="20201117 14:40:55.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.690" endtime="20201117 14:40:55.094"></status>
</kw>
<msg timestamp="20201117 14:40:55.094" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.103" endtime="20201117 14:40:55.120"></status>
</kw>
<msg timestamp="20201117 14:40:55.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.102" endtime="20201117 14:40:55.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.121" endtime="20201117 14:40:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.124" endtime="20201117 14:40:55.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.099" endtime="20201117 14:40:55.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.097" endtime="20201117 14:40:55.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.135" endtime="20201117 14:40:55.423"></status>
</kw>
<msg timestamp="20201117 14:40:55.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.133" endtime="20201117 14:40:55.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.427" endtime="20201117 14:40:55.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.436" endtime="20201117 14:40:55.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.130" endtime="20201117 14:40:55.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.129" endtime="20201117 14:40:55.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.443" level="INFO">${RESULT} = [{'time': 0.022406542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.022445611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.439" endtime="20201117 14:40:55.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.444" endtime="20201117 14:40:55.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.461" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.460" endtime="20201117 14:40:55.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.464" level="INFO">VALUE: [2.5278000000000106e-05, 2.5027999999999856e-05, 2.5083999999998136e-05, 2.44169999999988e-05, 2.4569999999998066e-05, 2.5250000000000966e-05, 2.4929999999999397e-05, 2.5332999999998912e-05, 2.5264000000000536e-05, 2.4596999999997732e-05, 2.5250000000000966e-05, 2.5068999999999092e-05, 2.4693999999998717e-05, 2.5250000000000966e-05, 2.5235999999997927e-05, 2.5278000000000106e-05, 2.49030000000032e-05, 2.4819999999998316e-05, 2.5250000000000966e-05, 2.469499999999819e-05, 2.5083999999998136e-05, 2.441700000000227e-05, 2.516699999999955e-05, 2.5334000000001855e-05, 2.5027999999999856e-05, 2.5069999999998566e-05, 2.4570000000001535e-05, 2.5069999999998566e-05, 2.4944000000002436e-05, 2.4652000000000007e-05, 2.538900000000066e-05, 2.5096999999998232e-05, 2.4554999999999022e-05, 2.4764000000000036e-05, 2.4929999999999397e-05, 2.4832999999998412e-05, 2.4957999999998537e-05, 2.5014000000000286e-05, 2.440299999999923e-05, 2.518100000000259e-05, 2.481900000000231e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.4750000000000466e-05, 2.438899999999966e-05, 2.5014000000000286e-05, 2.4583999999997636e-05, 2.5098000000001175e-05, 2.5070000000002035e-05, 2.5084000000001605e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.462" endtime="20201117 14:40:55.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.457" endtime="20201117 14:40:55.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.467" endtime="20201117 14:40:55.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.471" endtime="20201117 14:40:55.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.469" endtime="20201117 14:40:55.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.465" endtime="20201117 14:40:55.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.095" endtime="20201117 14:40:55.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.688" endtime="20201117 14:40:55.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:54.687" endtime="20201117 14:40:55.492"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.494" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.503" endtime="20201117 14:40:55.520"></status>
</kw>
<msg timestamp="20201117 14:40:55.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.502" endtime="20201117 14:40:55.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.522" endtime="20201117 14:40:55.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.524" endtime="20201117 14:40:55.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.498" endtime="20201117 14:40:55.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.496" endtime="20201117 14:40:55.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.534" endtime="20201117 14:40:55.821"></status>
</kw>
<msg timestamp="20201117 14:40:55.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.532" endtime="20201117 14:40:55.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025158417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025184389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.825" endtime="20201117 14:40:55.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.834" endtime="20201117 14:40:55.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.529" endtime="20201117 14:40:55.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.527" endtime="20201117 14:40:55.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:55.841" level="INFO">${RESULT} = [{'time': 0.025184389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5972000000002576e-05, 'source_diff': 2.5972000000002576e-05}, {'time': 0.025227403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:55.837" endtime="20201117 14:40:55.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:55.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:55.842" endtime="20201117 14:40:55.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.859" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:55.858" endtime="20201117 14:40:55.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.862" level="INFO">VALUE: [2.5972000000002576e-05, 2.5583999999998636e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.590300000000073e-05, 2.6347999999998956e-05, 2.5750000000001466e-05, 2.6083999999999136e-05, 2.5416000000000327e-05, 2.6334000000002855e-05, 2.622299999999883e-05, 2.5750000000001466e-05, 2.6319999999999816e-05, 2.5429999999999897e-05, 2.5999999999998247e-05, 2.563900000000091e-05, 2.5457999999999037e-05, 2.5790999999997233e-05, 2.5610999999998302e-05, 2.590300000000073e-05, 2.583300000000288e-05, 2.544499999999894e-05, 2.5999999999998247e-05, 2.593099999999987e-05, 2.5985999999998677e-05, 2.6028000000000856e-05, 2.6096999999999232e-05, 2.6263999999998067e-05, 2.5624999999997872e-05, 2.59170000000003e-05, 2.563900000000091e-05, 2.618100000000012e-05, 2.5846999999998982e-05, 2.587500000000159e-05, 2.5513000000001312e-05, 2.5582999999999162e-05, 2.537499999999762e-05, 2.5680000000000147e-05, 2.5832999999999412e-05, 2.5915999999997358e-05, 2.5999999999998247e-05, 2.5750000000001466e-05, 2.6082999999999662e-05, 2.540300000000023e-05, 2.565300000000048e-05, 2.6332999999999912e-05, 2.6249999999998497e-05, 2.540300000000023e-05, 2.5500000000001216e-05, 2.5541999999999926e-05]</msg>
<status status="PASS" starttime="20201117 14:40:55.861" endtime="20201117 14:40:55.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.856" endtime="20201117 14:40:55.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.865" endtime="20201117 14:40:55.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:55.869" endtime="20201117 14:40:55.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.867" endtime="20201117 14:40:55.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.863" endtime="20201117 14:40:55.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.495" endtime="20201117 14:40:55.890"></status>
</kw>
<msg timestamp="20201117 14:40:55.890" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.899" endtime="20201117 14:40:55.915"></status>
</kw>
<msg timestamp="20201117 14:40:55.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.897" endtime="20201117 14:40:55.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:55.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:55.917" endtime="20201117 14:40:55.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.920" endtime="20201117 14:40:55.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.894" endtime="20201117 14:40:55.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.892" endtime="20201117 14:40:55.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:55.930" endtime="20201117 14:40:56.217"></status>
</kw>
<msg timestamp="20201117 14:40:56.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:55.928" endtime="20201117 14:40:56.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.221" endtime="20201117 14:40:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.230" endtime="20201117 14:40:56.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.926" endtime="20201117 14:40:56.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.924" endtime="20201117 14:40:56.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.237" level="INFO">${RESULT} = [{'time': 0.022975153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.611100000000227e-05, 'source_diff': 2.611100000000227e-05}, {'time': 0.023023181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:56.233" endtime="20201117 14:40:56.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.251" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:56.238" endtime="20201117 14:40:56.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.255" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.254" endtime="20201117 14:40:56.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.258" level="INFO">VALUE: [2.611100000000227e-05, 2.5764000000001036e-05, 2.6069999999999566e-05, 2.5805000000000272e-05, 2.6250000000001966e-05, 2.5764000000001036e-05, 2.6110999999998802e-05, 2.6082999999999662e-05, 2.5582999999999162e-05, 2.6082999999999662e-05, 2.6249999999998497e-05, 2.5915999999997358e-05, 2.5999999999998247e-05, 2.5750000000001466e-05, 2.6082999999999662e-05, 2.593100000000334e-05, 2.569499999999919e-05, 2.586100000000202e-05, 2.5568999999999592e-05, 2.5749999999997997e-05, 2.543099999999937e-05, 2.6388000000002187e-05, 2.54169999999998e-05, 2.5971999999999107e-05, 2.5763999999997567e-05, 2.543099999999937e-05, 2.5847999999998456e-05, 2.6250000000001966e-05, 2.5514000000000786e-05, 2.6250000000001966e-05, 2.5583999999998636e-05, 2.6082999999999662e-05, 2.6250000000001966e-05, 2.534700000000195e-05, 2.6151999999998038e-05, 2.6346999999999482e-05, 2.55970000000022e-05, 2.5416000000000327e-05, 2.5750000000001466e-05, 2.6277999999997637e-05, 2.5568999999999592e-05, 2.5764000000001036e-05, 2.6069000000000092e-05, 2.6096999999999232e-05, 2.6263999999998067e-05, 2.545899999999851e-05, 2.6333999999999386e-05, 2.6263999999998067e-05, 2.5569999999999066e-05, 2.563900000000091e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.256" endtime="20201117 14:40:56.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.252" endtime="20201117 14:40:56.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.262" endtime="20201117 14:40:56.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.265" endtime="20201117 14:40:56.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.264" endtime="20201117 14:40:56.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.260" endtime="20201117 14:40:56.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.891" endtime="20201117 14:40:56.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.493" endtime="20201117 14:40:56.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:55.492" endtime="20201117 14:40:56.286"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.289" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.297" endtime="20201117 14:40:56.316"></status>
</kw>
<msg timestamp="20201117 14:40:56.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.296" endtime="20201117 14:40:56.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.317" endtime="20201117 14:40:56.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.320" endtime="20201117 14:40:56.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.293" endtime="20201117 14:40:56.322"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.291" endtime="20201117 14:40:56.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.330" endtime="20201117 14:40:56.617"></status>
</kw>
<msg timestamp="20201117 14:40:56.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025756361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.328" endtime="20201117 14:40:56.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025756361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.621" endtime="20201117 14:40:56.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.629" endtime="20201117 14:40:56.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.325" endtime="20201117 14:40:56.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.323" endtime="20201117 14:40:56.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:56.636" level="INFO">${RESULT} = [{'time': 0.025756361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6624999999998872e-05, 'source_diff': 2.6624999999998872e-05}, {'time': 0.025797389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:56.633" endtime="20201117 14:40:56.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:56.651" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:56.637" endtime="20201117 14:40:56.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.656" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:56.655" endtime="20201117 14:40:56.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.659" level="INFO">VALUE: [2.6624999999998872e-05, 2.694500000000044e-05, 2.6833000000000412e-05, 2.6750000000002466e-05, 2.7264000000002536e-05, 2.6818999999997373e-05, 2.7250000000002966e-05, 2.7084000000000136e-05, 2.7084000000000136e-05, 2.6611999999998776e-05, 2.7084000000000136e-05, 2.7250000000002966e-05, 2.7276999999999163e-05, 2.6583999999999636e-05, 2.7097000000000232e-05, 2.7068999999997623e-05, 2.6915999999998358e-05, 2.7333000000000912e-05, 2.7235999999999927e-05, 2.7097000000000232e-05, 2.7263999999999067e-05, 2.6583000000000162e-05, 2.6429999999997428e-05, 2.666700000000105e-05, 2.7347000000000482e-05, 2.7263999999999067e-05, 2.7083000000000662e-05, 2.636100000000252e-05, 2.6805999999997276e-05, 2.690299999999826e-05, 2.7027999999998387e-05, 2.669500000000019e-05, 2.64170000000008e-05, 2.6833999999999886e-05, 2.6749999999998997e-05, 2.7291000000002202e-05, 2.7249999999999497e-05, 2.690299999999826e-05, 2.7124999999999372e-05, 2.7165999999998608e-05, 2.6999999999999247e-05, 2.6429999999997428e-05, 2.6874999999999122e-05, 2.7249999999999497e-05, 2.6749999999998997e-05, 2.6416000000001327e-05, 2.6513999999998317e-05, 2.6735999999999427e-05, 2.6750000000002466e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:40:56.657" endtime="20201117 14:40:56.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.652" endtime="20201117 14:40:56.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.662" endtime="20201117 14:40:56.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:56.666" endtime="20201117 14:40:56.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.664" endtime="20201117 14:40:56.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.661" endtime="20201117 14:40:56.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.290" endtime="20201117 14:40:56.687"></status>
</kw>
<msg timestamp="20201117 14:40:56.687" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.695" endtime="20201117 14:40:56.712"></status>
</kw>
<msg timestamp="20201117 14:40:56.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.694" endtime="20201117 14:40:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:56.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:56.713" endtime="20201117 14:40:56.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.716" endtime="20201117 14:40:56.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.691" endtime="20201117 14:40:56.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.689" endtime="20201117 14:40:56.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:56.727" endtime="20201117 14:40:57.013"></status>
</kw>
<msg timestamp="20201117 14:40:57.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:56.725" endtime="20201117 14:40:57.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.017" endtime="20201117 14:40:57.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.026" endtime="20201117 14:40:57.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.722" endtime="20201117 14:40:57.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.720" endtime="20201117 14:40:57.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.033" level="INFO">${RESULT} = [{'time': 0.022455986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.662500000000234e-05, 'source_diff': 2.662500000000234e-05}, {'time': 0.022496986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:40:57.030" endtime="20201117 14:40:57.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.047" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.034" endtime="20201117 14:40:57.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.057" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.056" endtime="20201117 14:40:57.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.059" level="INFO">VALUE: [2.662500000000234e-05, 2.640300000000123e-05, 2.666700000000105e-05, 2.6499999999998747e-05, 2.690299999999826e-05, 2.6999999999999247e-05, 2.6583999999999636e-05, 2.7097000000000232e-05, 2.7249999999999497e-05, 2.7318999999997873e-05, 2.6444000000000467e-05, 2.716700000000155e-05, 2.6847999999999456e-05, 2.6944000000000967e-05, 2.6721999999999857e-05, 2.6485999999999177e-05, 2.7263999999999067e-05, 2.7083000000000662e-05, 2.7235999999999927e-05, 2.6569000000000592e-05, 2.7069000000001092e-05, 2.6958000000000537e-05, 2.6833000000000412e-05, 2.7110999999999802e-05, 2.6749999999998997e-05, 2.7138999999998942e-05, 2.7083000000000662e-05, 2.7249999999999497e-05, 2.7249999999999497e-05, 2.7082999999997193e-05, 2.6749999999998997e-05, 2.7111999999999276e-05, 2.690299999999826e-05, 2.6499999999998747e-05, 2.6764000000002036e-05, 2.693100000000087e-05, 2.7027000000002382e-05, 2.7249999999999497e-05, 2.7084000000000136e-05, 2.7236000000003396e-05, 2.7083000000000662e-05, 2.6901999999998788e-05, 2.6458000000000037e-05, 2.6429999999997428e-05, 2.7304999999998303e-05, 2.6528000000001356e-05, 2.6763999999998567e-05, 2.695900000000001e-05, 2.668099999999715e-05, 2.666699999999758e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.058" endtime="20201117 14:40:57.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.053" endtime="20201117 14:40:57.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.063" endtime="20201117 14:40:57.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.066" endtime="20201117 14:40:57.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.065" endtime="20201117 14:40:57.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.061" endtime="20201117 14:40:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.688" endtime="20201117 14:40:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.288" endtime="20201117 14:40:57.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:56.287" endtime="20201117 14:40:57.087"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.090" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.099" endtime="20201117 14:40:57.116"></status>
</kw>
<msg timestamp="20201117 14:40:57.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.097" endtime="20201117 14:40:57.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.118" endtime="20201117 14:40:57.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.120" endtime="20201117 14:40:57.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.094" endtime="20201117 14:40:57.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.092" endtime="20201117 14:40:57.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.130" endtime="20201117 14:40:57.415"></status>
</kw>
<msg timestamp="20201117 14:40:57.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.128" endtime="20201117 14:40:57.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.419" endtime="20201117 14:40:57.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.427" endtime="20201117 14:40:57.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.125" endtime="20201117 14:40:57.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.124" endtime="20201117 14:40:57.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.435" level="INFO">${RESULT} = [{'time': 0.025281472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8068999999998623e-05, 'source_diff': 2.8068999999998623e-05}, {'time': 0.025326486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:57.431" endtime="20201117 14:40:57.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.436" endtime="20201117 14:40:57.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.453" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.452" endtime="20201117 14:40:57.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.456" level="INFO">VALUE: [2.8068999999998623e-05, 2.8264000000000067e-05, 2.8222000000001357e-05, 2.8291999999999207e-05, 2.7597000000000732e-05, 2.7764000000003036e-05, 2.7749999999999997e-05, 2.790300000000273e-05, 2.7805999999998277e-05, 2.7597000000000732e-05, 2.770900000000076e-05, 2.8250000000000497e-05, 2.791699999999883e-05, 2.7514000000002786e-05, 2.8236000000000927e-05, 2.8098000000000706e-05, 2.791699999999883e-05, 2.8333000000001912e-05, 2.7861000000000552e-05, 2.7665999999999108e-05, 2.8332999999998443e-05, 2.7597000000000732e-05, 2.8068999999998623e-05, 2.8236000000000927e-05, 2.7569000000001592e-05, 2.8082999999998193e-05, 2.8097000000001232e-05, 2.8068999999998623e-05, 2.768099999999815e-05, 2.8069000000002092e-05, 2.741699999999833e-05, 2.8000000000000247e-05, 2.818099999999865e-05, 2.741699999999833e-05, 2.7820000000001316e-05, 2.79170000000023e-05, 2.747300000000008e-05, 2.790300000000273e-05, 2.8319999999998346e-05, 2.8250000000000497e-05, 2.8250000000000497e-05, 2.7554999999998553e-05, 2.7401999999999288e-05, 2.7971999999997638e-05, 2.8097000000001232e-05, 2.7749999999999997e-05, 2.8334000000001386e-05, 2.8346999999998013e-05, 2.8083000000001662e-05, 2.7929999999998928e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.455" endtime="20201117 14:40:57.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.450" endtime="20201117 14:40:57.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.459" endtime="20201117 14:40:57.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.463" endtime="20201117 14:40:57.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.461" endtime="20201117 14:40:57.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.458" endtime="20201117 14:40:57.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.091" endtime="20201117 14:40:57.484"></status>
</kw>
<msg timestamp="20201117 14:40:57.484" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.493" endtime="20201117 14:40:57.509"></status>
</kw>
<msg timestamp="20201117 14:40:57.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.491" endtime="20201117 14:40:57.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.511" endtime="20201117 14:40:57.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.513" endtime="20201117 14:40:57.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.488" endtime="20201117 14:40:57.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.486" endtime="20201117 14:40:57.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.523" endtime="20201117 14:40:57.809"></status>
</kw>
<msg timestamp="20201117 14:40:57.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.522" endtime="20201117 14:40:57.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.814" endtime="20201117 14:40:57.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.823" endtime="20201117 14:40:57.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.519" endtime="20201117 14:40:57.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.517" endtime="20201117 14:40:57.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:57.830" level="INFO">${RESULT} = [{'time': 0.022425986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7457999999997568e-05, 'source_diff': 2.7457999999997568e-05}, {'time': 0.022468986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:57.826" endtime="20201117 14:40:57.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:57.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:57.831" endtime="20201117 14:40:57.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.848" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:40:57.847" endtime="20201117 14:40:57.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.851" level="INFO">VALUE: [2.7457999999997568e-05, 2.7888999999999692e-05, 2.766699999999858e-05, 2.816700000000255e-05, 2.7499999999999747e-05, 2.8236000000000927e-05, 2.8235999999997458e-05, 2.8083000000001662e-05, 2.8278000000003106e-05, 2.8084000000001136e-05, 2.8013999999999817e-05, 2.7584000000000636e-05, 2.74309999999979e-05, 2.7486000000000177e-05, 2.74170000000018e-05, 2.766700000000205e-05, 2.7458000000001037e-05, 2.7749999999999997e-05, 2.7583000000001162e-05, 2.7430000000001897e-05, 2.7986000000000677e-05, 2.7583000000001162e-05, 2.740300000000223e-05, 2.8165999999999608e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.8236000000000927e-05, 2.7776999999999663e-05, 2.79309999999984e-05, 2.8027999999999387e-05, 2.7597000000000732e-05, 2.790300000000273e-05, 2.7875000000000122e-05, 2.7722000000000857e-05, 2.744500000000094e-05, 2.765300000000248e-05, 2.7819999999997846e-05, 2.8069999999998096e-05, 2.7583000000001162e-05, 2.7930000000002397e-05, 2.7833000000001412e-05, 2.7415999999998858e-05, 2.790300000000273e-05, 2.8083000000001662e-05, 2.7415999999998858e-05, 2.8193999999998748e-05, 2.7680000000002147e-05, 2.7499999999999747e-05, 2.7749999999999997e-05, 2.741699999999833e-05]</msg>
<status status="PASS" starttime="20201117 14:40:57.849" endtime="20201117 14:40:57.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.844" endtime="20201117 14:40:57.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.854" endtime="20201117 14:40:57.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:57.858" endtime="20201117 14:40:57.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.856" endtime="20201117 14:40:57.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.852" endtime="20201117 14:40:57.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.485" endtime="20201117 14:40:57.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.089" endtime="20201117 14:40:57.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.088" endtime="20201117 14:40:57.879"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.881" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.890" endtime="20201117 14:40:57.907"></status>
</kw>
<msg timestamp="20201117 14:40:57.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.888" endtime="20201117 14:40:57.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:57.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:57.909" endtime="20201117 14:40:57.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.911" endtime="20201117 14:40:57.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.886" endtime="20201117 14:40:57.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.883" endtime="20201117 14:40:57.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:57.921" endtime="20201117 14:40:58.208"></status>
</kw>
<msg timestamp="20201117 14:40:58.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025836139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:57.920" endtime="20201117 14:40:58.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025807542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025836139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.212" endtime="20201117 14:40:58.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.221" endtime="20201117 14:40:58.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.917" endtime="20201117 14:40:58.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.914" endtime="20201117 14:40:58.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.228" level="INFO">${RESULT} = [{'time': 0.025836139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8597000000001732e-05, 'source_diff': 2.8597000000001732e-05}, {'time': 0.025882153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.224" endtime="20201117 14:40:58.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.243" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:58.229" endtime="20201117 14:40:58.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.247" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.246" endtime="20201117 14:40:58.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.250" level="INFO">VALUE: [2.8597000000001732e-05, 2.8584000000001636e-05, 2.8736000000001427e-05, 2.9236000000001927e-05, 2.8764000000000567e-05, 2.9083999999998666e-05, 2.8598000000001206e-05, 2.9250000000001497e-05, 2.8916999999999832e-05, 2.8666000000000108e-05, 2.9000000000001247e-05, 2.8430000000002897e-05, 2.8443999999998998e-05, 2.9221999999998888e-05, 2.9082999999999193e-05, 2.8568999999999123e-05, 2.9236000000001927e-05, 2.8750000000000997e-05, 2.9082999999999193e-05, 2.9083000000002662e-05, 2.9082999999999193e-05, 2.9069999999999097e-05, 2.8582999999998693e-05, 2.8625000000000872e-05, 2.9083999999998666e-05, 2.8749999999997528e-05, 2.9264000000001067e-05, 2.8443999999998998e-05, 2.8514000000000317e-05, 2.8916999999999832e-05, 2.9152999999997042e-05, 2.9180000000000178e-05, 2.8818999999999373e-05, 2.8778000000000137e-05, 2.8902000000000788e-05, 2.9361000000002052e-05, 2.8415999999999858e-05, 2.8832999999998943e-05, 2.841699999999933e-05, 2.8625000000000872e-05, 2.8611000000001302e-05, 2.918099999999965e-05, 2.8500000000000747e-05, 2.8763999999997097e-05, 2.8569999999998597e-05, 2.8736000000001427e-05, 2.89309999999994e-05, 2.8472000000001607e-05, 2.8347000000001482e-05, 2.9167000000000082e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.249" endtime="20201117 14:40:58.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.244" endtime="20201117 14:40:58.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.253" endtime="20201117 14:40:58.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.257" endtime="20201117 14:40:58.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.255" endtime="20201117 14:40:58.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.252" endtime="20201117 14:40:58.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.882" endtime="20201117 14:40:58.278"></status>
</kw>
<msg timestamp="20201117 14:40:58.278" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.286" endtime="20201117 14:40:58.303"></status>
</kw>
<msg timestamp="20201117 14:40:58.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.285" endtime="20201117 14:40:58.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.305" endtime="20201117 14:40:58.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.308" endtime="20201117 14:40:58.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.282" endtime="20201117 14:40:58.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.280" endtime="20201117 14:40:58.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.318" endtime="20201117 14:40:58.605"></status>
</kw>
<msg timestamp="20201117 14:40:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.317" endtime="20201117 14:40:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.609" endtime="20201117 14:40:58.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.618" endtime="20201117 14:40:58.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.314" endtime="20201117 14:40:58.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.312" endtime="20201117 14:40:58.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:58.625" level="INFO">${RESULT} = [{'time': 0.022208625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9292000000000207e-05, 'source_diff': 2.9292000000000207e-05}, {'time': 0.022258639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:58.621" endtime="20201117 14:40:58.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:58.638" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:58.626" endtime="20201117 14:40:58.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.643" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:40:58.642" endtime="20201117 14:40:58.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.646" level="INFO">VALUE: [2.9292000000000207e-05, 2.8486000000001177e-05, 2.9264000000001067e-05, 2.89309999999994e-05, 2.8819999999998847e-05, 2.8736000000001427e-05, 2.9014000000000817e-05, 2.8597999999997736e-05, 2.9097000000002232e-05, 2.9070000000002566e-05, 2.9069999999999097e-05, 2.9250000000001497e-05, 2.9000000000001247e-05, 2.8415999999999858e-05, 2.8500000000000747e-05, 2.8929999999999928e-05, 2.8514000000000317e-05, 2.891599999999689e-05, 2.8846999999998513e-05, 2.9235999999998458e-05, 2.9263999999997597e-05, 2.8750000000000997e-05, 2.9068999999999623e-05, 2.9096999999998763e-05, 2.9236000000001927e-05, 2.840300000000323e-05, 2.866700000000305e-05, 2.8666999999999582e-05, 2.868099999999915e-05, 2.8500000000000747e-05, 2.9083999999998666e-05, 2.9250000000001497e-05, 2.8750000000000997e-05, 2.8749999999997528e-05, 2.8888999999997222e-05, 2.9000000000001247e-05, 2.8929999999999928e-05, 2.9333000000002912e-05, 2.8415999999999858e-05, 2.8500000000000747e-05, 2.8903000000000262e-05, 2.8514000000000317e-05, 2.8916999999999832e-05, 2.9193999999999748e-05, 2.9082999999999193e-05, 2.9082999999999193e-05, 2.8597000000001732e-05, 2.8847000000001982e-05, 2.8805999999999277e-05, 2.9084000000002136e-05]</msg>
<status status="PASS" starttime="20201117 14:40:58.644" endtime="20201117 14:40:58.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.639" endtime="20201117 14:40:58.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.649" endtime="20201117 14:40:58.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:58.653" endtime="20201117 14:40:58.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.651" endtime="20201117 14:40:58.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.647" endtime="20201117 14:40:58.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.279" endtime="20201117 14:40:58.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.880" endtime="20201117 14:40:58.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:57.879" endtime="20201117 14:40:58.674"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.676" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.685" endtime="20201117 14:40:58.702"></status>
</kw>
<msg timestamp="20201117 14:40:58.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.684" endtime="20201117 14:40:58.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:58.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:58.704" endtime="20201117 14:40:58.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.706" endtime="20201117 14:40:58.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.681" endtime="20201117 14:40:58.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.678" endtime="20201117 14:40:58.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:58.716" endtime="20201117 14:40:59.002"></status>
</kw>
<msg timestamp="20201117 14:40:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:58.714" endtime="20201117 14:40:59.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.006" endtime="20201117 14:40:59.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.015" endtime="20201117 14:40:59.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.712" endtime="20201117 14:40:59.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.710" endtime="20201117 14:40:59.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.022" level="INFO">${RESULT} = [{'time': 0.025255194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0125000000002372e-05, 'source_diff': 3.0125000000002372e-05}, {'time': 0.025300181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:59.018" endtime="20201117 14:40:59.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.023" endtime="20201117 14:40:59.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.041" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.039" endtime="20201117 14:40:59.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.043" level="INFO">VALUE: [3.0125000000002372e-05, 2.9570000000003066e-05, 2.9930000000000928e-05, 2.9680000000000678e-05, 3.0166000000001608e-05, 2.9819000000000373e-05, 3.0221999999999888e-05, 2.9416000000000858e-05, 2.9430000000000428e-05, 2.9917000000000832e-05, 2.9653000000001012e-05, 2.9500000000001747e-05, 3.0056000000000527e-05, 2.9917000000000832e-05, 2.9832999999999943e-05, 2.9763999999998098e-05, 3.0070000000000097e-05, 3.0263999999998598e-05, 2.9583999999999167e-05, 3.0097999999999236e-05, 3.0110999999999333e-05, 2.9986000000002677e-05, 2.9555000000000553e-05, 2.973699999999843e-05, 2.9556000000000027e-05, 2.9527000000001413e-05, 2.9569000000000123e-05, 3.0263999999998598e-05, 3.0041000000001483e-05, 3.0111000000002802e-05, 2.9417000000000332e-05, 2.9499999999998278e-05, 3.0096999999999763e-05, 3.0083000000000193e-05, 2.9778000000001137e-05, 3.0083000000000193e-05, 3.0277999999998167e-05, 2.9596999999999263e-05, 3.0250000000002497e-05, 2.9931000000000402e-05, 3.0167000000001082e-05, 2.9681000000000152e-05, 3.0012999999998874e-05, 2.9598000000002206e-05, 3.0110999999999333e-05, 2.9763000000002093e-05, 3.023699999999893e-05, 2.9666000000001108e-05, 2.9764000000001567e-05, 2.9443999999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.042" endtime="20201117 14:40:59.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.037" endtime="20201117 14:40:59.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.046" endtime="20201117 14:40:59.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.050" endtime="20201117 14:40:59.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.048" endtime="20201117 14:40:59.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.045" endtime="20201117 14:40:59.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.677" endtime="20201117 14:40:59.071"></status>
</kw>
<msg timestamp="20201117 14:40:59.072" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.080" endtime="20201117 14:40:59.097"></status>
</kw>
<msg timestamp="20201117 14:40:59.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.079" endtime="20201117 14:40:59.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.099" endtime="20201117 14:40:59.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.101" endtime="20201117 14:40:59.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.076" endtime="20201117 14:40:59.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.074" endtime="20201117 14:40:59.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.112" endtime="20201117 14:40:59.398"></status>
</kw>
<msg timestamp="20201117 14:40:59.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.110" endtime="20201117 14:40:59.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:40:59.403" endtime="20201117 14:40:59.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.411" endtime="20201117 14:40:59.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.107" endtime="20201117 14:40:59.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.106" endtime="20201117 14:40:59.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.418" level="INFO">${RESULT} = [{'time': 0.022285375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.022329403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:40:59.415" endtime="20201117 14:40:59.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.432" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.419" endtime="20201117 14:40:59.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.437" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.436" endtime="20201117 14:40:59.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.439" level="INFO">VALUE: [3.0277999999998167e-05, 3.0014000000001817e-05, 2.9763999999998098e-05, 3.0235999999999458e-05, 2.9931000000000402e-05, 3.0153000000001512e-05, 3.0361999999999056e-05, 2.9749999999998528e-05, 3.0153000000001512e-05, 2.9430000000000428e-05, 2.948699999999818e-05, 3.0110999999999333e-05, 2.9930000000000928e-05, 2.9846999999999513e-05, 2.9749999999998528e-05, 2.9582999999999693e-05, 2.9763999999998098e-05, 2.9582999999999693e-05, 3.0235999999999458e-05, 2.9917000000000832e-05, 3.0180000000001178e-05, 2.944499999999947e-05, 2.9985999999999208e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 3.0083000000000193e-05, 3.0264000000002067e-05, 3.0083999999999667e-05, 2.9736000000002427e-05, 2.9931000000000402e-05, 3.0333999999999917e-05, 2.9750000000001997e-05, 2.9749999999998528e-05, 2.9819999999999847e-05, 2.9430000000000428e-05, 2.9832999999999943e-05, 2.9596999999999263e-05, 2.9750000000001997e-05, 2.9958000000000068e-05, 2.9653000000001012e-05, 2.9513999999997848e-05, 2.9764000000001567e-05, 2.9417000000000332e-05, 2.9639000000001442e-05, 2.9513999999997848e-05, 2.9749999999998528e-05, 2.94309999999999e-05, 3.0110999999999333e-05, 2.9583000000003162e-05, 2.9917000000000832e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.438" endtime="20201117 14:40:59.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.433" endtime="20201117 14:40:59.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.443" endtime="20201117 14:40:59.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.447" endtime="20201117 14:40:59.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.445" endtime="20201117 14:40:59.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.441" endtime="20201117 14:40:59.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.072" endtime="20201117 14:40:59.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.675" endtime="20201117 14:40:59.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:58.674" endtime="20201117 14:40:59.468"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.471" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.479" endtime="20201117 14:40:59.497"></status>
</kw>
<msg timestamp="20201117 14:40:59.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.477" endtime="20201117 14:40:59.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.498" endtime="20201117 14:40:59.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.501" endtime="20201117 14:40:59.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.475" endtime="20201117 14:40:59.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.473" endtime="20201117 14:40:59.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.510" endtime="20201117 14:40:59.797"></status>
</kw>
<msg timestamp="20201117 14:40:59.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025917917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02594925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:59.509" endtime="20201117 14:40:59.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025917917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02594925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:59.801" endtime="20201117 14:40:59.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.810" endtime="20201117 14:40:59.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.506" endtime="20201117 14:40:59.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.504" endtime="20201117 14:40:59.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:40:59.816" level="INFO">${RESULT} = [{'time': 0.02594925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.133300000000144e-05, 'source_diff': 3.133300000000144e-05}, {'time': 0.026002222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:40:59.813" endtime="20201117 14:40:59.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:40:59.832" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:40:59.817" endtime="20201117 14:40:59.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.836" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:40:59.835" endtime="20201117 14:40:59.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.839" level="INFO">VALUE: [3.133300000000144e-05, 3.1332999999997974e-05, 3.074999999999953e-05, 3.076400000000257e-05, 3.0402999999998293e-05, 3.119500000000122e-05, 3.0513999999998848e-05, 3.079200000000171e-05, 3.108300000000119e-05, 3.0416999999997862e-05, 3.0486000000003177e-05, 3.093099999999793e-05, 3.11249999999999e-05, 3.101399999999935e-05, 3.094399999999803e-05, 3.074999999999953e-05, 3.138899999999972e-05, 3.123699999999993e-05, 3.1068999999998154e-05, 3.129199999999874e-05, 3.109700000000076e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.059700000000026e-05, 3.07639999999991e-05, 3.0402999999998293e-05, 3.116700000000208e-05, 3.133300000000144e-05, 3.125000000000003e-05, 3.0582999999997224e-05, 3.05700000000006e-05, 3.09310000000014e-05, 3.072199999999692e-05, 3.098600000000021e-05, 3.108400000000067e-05, 3.09310000000014e-05, 3.118100000000165e-05, 3.111100000000033e-05, 3.12639999999996e-05, 3.116700000000208e-05, 3.066599999999864e-05, 3.092999999999846e-05, 3.094399999999803e-05, 3.116599999999914e-05, 3.052799999999842e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.0416999999997862e-05, 3.0513999999998848e-05, 3.125000000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:40:59.837" endtime="20201117 14:40:59.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.833" endtime="20201117 14:40:59.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.843" endtime="20201117 14:40:59.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:40:59.846" endtime="20201117 14:40:59.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.845" endtime="20201117 14:40:59.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.841" endtime="20201117 14:40:59.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.471" endtime="20201117 14:40:59.867"></status>
</kw>
<msg timestamp="20201117 14:40:59.867" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.876" endtime="20201117 14:40:59.893"></status>
</kw>
<msg timestamp="20201117 14:40:59.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.874" endtime="20201117 14:40:59.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:40:59.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:40:59.894" endtime="20201117 14:40:59.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.897" endtime="20201117 14:40:59.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.872" endtime="20201117 14:40:59.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.869" endtime="20201117 14:40:59.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:40:59.907" endtime="20201117 14:41:00.194"></status>
</kw>
<msg timestamp="20201117 14:41:00.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:40:59.906" endtime="20201117 14:41:00.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:00.199" endtime="20201117 14:41:00.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.207" endtime="20201117 14:41:00.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.903" endtime="20201117 14:41:00.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.901" endtime="20201117 14:41:00.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.214" level="INFO">${RESULT} = [{'time': 0.022292917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.116699999999861e-05, 'source_diff': 3.116699999999861e-05}, {'time': 0.022341903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.211" endtime="20201117 14:41:00.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.228" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:00.215" endtime="20201117 14:41:00.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.233" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.232" endtime="20201117 14:41:00.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.235" level="INFO">VALUE: [3.116699999999861e-05, 3.083400000000042e-05, 3.074999999999953e-05, 3.13050000000023e-05, 3.091699999999836e-05, 3.133400000000092e-05, 3.073699999999943e-05, 3.047199999999667e-05, 3.066600000000211e-05, 3.083300000000094e-05, 3.070799999999735e-05, 3.093000000000193e-05, 3.119400000000175e-05, 3.083300000000094e-05, 3.12639999999996e-05, 3.061099999999983e-05, 3.059700000000026e-05, 3.091699999999836e-05, 3.084700000000051e-05, 3.045900000000004e-05, 3.131999999999788e-05, 3.125000000000003e-05, 3.106999999999763e-05, 3.125000000000003e-05, 3.0431000000000902e-05, 3.066700000000158e-05, 3.0847999999999987e-05, 3.073699999999943e-05, 3.122300000000036e-05, 3.06249999999994e-05, 3.0444000000000998e-05, 3.054199999999799e-05, 3.125000000000003e-05, 3.0596999999996793e-05, 3.122200000000089e-05, 3.058300000000069e-05, 3.042999999999796e-05, 3.133300000000144e-05, 3.059700000000026e-05, 3.074999999999953e-05, 3.090299999999879e-05, 3.1346999999997543e-05, 3.105600000000153e-05, 3.0417000000001332e-05, 3.116699999999861e-05, 3.083400000000042e-05, 3.090300000000226e-05, 3.066700000000158e-05, 3.101399999999935e-05, 3.05700000000006e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.234" endtime="20201117 14:41:00.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.229" endtime="20201117 14:41:00.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.239" endtime="20201117 14:41:00.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.242" endtime="20201117 14:41:00.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.241" endtime="20201117 14:41:00.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.237" endtime="20201117 14:41:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.868" endtime="20201117 14:41:00.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.469" endtime="20201117 14:41:00.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:59.468" endtime="20201117 14:41:00.264"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.266" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.275" endtime="20201117 14:41:00.291"></status>
</kw>
<msg timestamp="20201117 14:41:00.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.273" endtime="20201117 14:41:00.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.293" endtime="20201117 14:41:00.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.295" endtime="20201117 14:41:00.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.270" endtime="20201117 14:41:00.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.268" endtime="20201117 14:41:00.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.305" endtime="20201117 14:41:00.591"></status>
</kw>
<msg timestamp="20201117 14:41:00.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024880792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.303" endtime="20201117 14:41:00.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024848653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024880792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.595" endtime="20201117 14:41:00.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.604" endtime="20201117 14:41:00.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.301" endtime="20201117 14:41:00.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.299" endtime="20201117 14:41:00.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:00.611" level="INFO">${RESULT} = [{'time': 0.024880792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.213900000000047e-05, 'source_diff': 3.213900000000047e-05}, {'time': 0.024927833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:00.608" endtime="20201117 14:41:00.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:00.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:00.612" endtime="20201117 14:41:00.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.630" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:00.629" endtime="20201117 14:41:00.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.633" level="INFO">VALUE: [3.213900000000047e-05, 3.16250000000004e-05, 3.226399999999713e-05, 3.225000000000103e-05, 3.223700000000093e-05, 3.190299999999979e-05, 3.151400000000332e-05, 3.141599999999939e-05, 3.166599999999964e-05, 3.2304999999999834e-05, 3.21250000000009e-05, 3.215300000000004e-05, 3.141599999999939e-05, 3.1846999999998044e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.198599999999774e-05, 3.1804999999999334e-05, 3.20700000000021e-05, 3.224999999999756e-05, 3.134700000000101e-05, 3.199999999999731e-05, 3.20839999999982e-05, 3.17640000000001e-05, 3.2110999999997863e-05, 3.19579999999986e-05, 3.181999999999838e-05, 3.211100000000133e-05, 3.209700000000176e-05, 3.158300000000169e-05, 3.175000000000053e-05, 3.2082999999998724e-05, 3.1596999999997794e-05, 3.22640000000006e-05, 3.194399999999903e-05, 3.150000000000028e-05, 3.141699999999886e-05, 3.148600000000071e-05, 3.209700000000176e-05, 3.17640000000001e-05, 3.2082999999998724e-05, 3.191699999999936e-05, 3.216700000000308e-05, 3.183400000000142e-05, 3.191699999999936e-05, 3.216699999999961e-05, 3.184700000000151e-05, 3.224999999999756e-05, 3.159700000000126e-05, 3.180599999999881e-05]</msg>
<status status="PASS" starttime="20201117 14:41:00.631" endtime="20201117 14:41:00.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.626" endtime="20201117 14:41:00.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.636" endtime="20201117 14:41:00.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:00.639" endtime="20201117 14:41:00.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.638" endtime="20201117 14:41:00.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.634" endtime="20201117 14:41:00.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.267" endtime="20201117 14:41:00.660"></status>
</kw>
<msg timestamp="20201117 14:41:00.660" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.669" endtime="20201117 14:41:00.686"></status>
</kw>
<msg timestamp="20201117 14:41:00.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.667" endtime="20201117 14:41:00.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:00.687" endtime="20201117 14:41:00.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.690" endtime="20201117 14:41:00.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.665" endtime="20201117 14:41:00.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.663" endtime="20201117 14:41:00.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.700" endtime="20201117 14:41:00.985"></status>
</kw>
<msg timestamp="20201117 14:41:00.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.699" endtime="20201117 14:41:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:00.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022250681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:00.990" endtime="20201117 14:41:00.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:00.999" endtime="20201117 14:41:01.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.696" endtime="20201117 14:41:01.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.694" endtime="20201117 14:41:01.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.006" level="INFO">${RESULT} = [{'time': 0.022282972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2291000000000264e-05, 'source_diff': 3.2291000000000264e-05}, {'time': 0.022333028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:01.002" endtime="20201117 14:41:01.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.007" endtime="20201117 14:41:01.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.025" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.024" endtime="20201117 14:41:01.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.028" level="INFO">VALUE: [3.2291000000000264e-05, 3.202799999999992e-05, 3.177800000000314e-05, 3.220799999999885e-05, 3.215300000000004e-05, 3.141700000000233e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.172200000000139e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.2318999999999404e-05, 3.138899999999972e-05, 3.240300000000029e-05, 3.225000000000103e-05, 3.1862000000000557e-05, 3.169399999999878e-05, 3.150000000000028e-05, 3.193000000000293e-05, 3.217999999999971e-05, 3.141599999999939e-05, 3.166599999999964e-05, 3.170800000000182e-05, 3.191699999999936e-05, 3.216699999999961e-05, 3.233300000000244e-05, 3.2082999999998724e-05, 3.175000000000053e-05, 3.17640000000001e-05, 3.191699999999936e-05, 3.166699999999911e-05, 3.232000000000235e-05, 3.144500000000147e-05, 3.220800000000232e-05, 3.150000000000028e-05, 3.1596999999997794e-05, 3.220800000000232e-05, 3.208300000000219e-05, 3.223600000000146e-05, 3.22640000000006e-05, 3.148600000000071e-05, 3.166599999999964e-05, 3.151399999999985e-05, 3.1582999999998224e-05, 3.159700000000126e-05, 3.191699999999936e-05, 3.215300000000004e-05, 3.147200000000114e-05, 3.141699999999886e-05, 3.168099999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.026" endtime="20201117 14:41:01.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.021" endtime="20201117 14:41:01.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.031" endtime="20201117 14:41:01.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.035" endtime="20201117 14:41:01.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.033" endtime="20201117 14:41:01.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.029" endtime="20201117 14:41:01.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.661" endtime="20201117 14:41:01.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.265" endtime="20201117 14:41:01.056"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:00.264" endtime="20201117 14:41:01.056"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.058" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.067" endtime="20201117 14:41:01.084"></status>
</kw>
<msg timestamp="20201117 14:41:01.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.065" endtime="20201117 14:41:01.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.086" endtime="20201117 14:41:01.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.089" endtime="20201117 14:41:01.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.063" endtime="20201117 14:41:01.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.061" endtime="20201117 14:41:01.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.099" endtime="20201117 14:41:01.385"></status>
</kw>
<msg timestamp="20201117 14:41:01.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025803514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.097" endtime="20201117 14:41:01.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025770556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025803514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.390" endtime="20201117 14:41:01.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.400" endtime="20201117 14:41:01.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.094" endtime="20201117 14:41:01.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.092" endtime="20201117 14:41:01.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.409" level="INFO">${RESULT} = [{'time': 0.025803514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29579999999996e-05, 'source_diff': 3.29579999999996e-05}, {'time': 0.025854514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:01.405" endtime="20201117 14:41:01.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.429" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.410" endtime="20201117 14:41:01.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.436" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.435" endtime="20201117 14:41:01.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.440" level="INFO">VALUE: [3.29579999999996e-05, 3.241699999999986e-05, 3.251400000000085e-05, 3.25839999999987e-05, 3.248599999999824e-05, 3.315300000000104e-05, 3.266700000000011e-05, 3.254199999999999e-05, 3.306999999999963e-05, 3.2777000000001194e-05, 3.2596999999998794e-05, 3.265300000000054e-05, 3.324999999999856e-05, 3.3069000000000154e-05, 3.3096999999999294e-05, 3.3082999999999724e-05, 3.266600000000064e-05, 3.275000000000153e-05, 3.241699999999986e-05, 3.299999999999831e-05, 3.3124999999998433e-05, 3.258300000000269e-05, 3.241699999999986e-05, 3.252800000000042e-05, 3.30839999999992e-05, 3.291699999999689e-05, 3.315300000000104e-05, 3.273599999999849e-05, 3.283399999999895e-05, 3.3263000000002124e-05, 3.323599999999899e-05, 3.242999999999996e-05, 3.316599999999767e-05, 3.300000000000178e-05, 3.281999999999938e-05, 3.275000000000153e-05, 3.234700000000201e-05, 3.316700000000061e-05, 3.324999999999856e-05, 3.2596999999998794e-05, 3.27779999999972e-05, 3.327800000000117e-05, 3.241699999999986e-05, 3.316700000000061e-05, 3.301400000000135e-05, 3.243099999999943e-05, 3.3110999999998864e-05, 3.284800000000199e-05, 3.274999999999806e-05, 3.25839999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.438" endtime="20201117 14:41:01.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.431" endtime="20201117 14:41:01.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.444" endtime="20201117 14:41:01.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.450" endtime="20201117 14:41:01.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.448" endtime="20201117 14:41:01.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.442" endtime="20201117 14:41:01.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.059" endtime="20201117 14:41:01.471"></status>
</kw>
<msg timestamp="20201117 14:41:01.471" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.480" endtime="20201117 14:41:01.496"></status>
</kw>
<msg timestamp="20201117 14:41:01.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.478" endtime="20201117 14:41:01.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.498" endtime="20201117 14:41:01.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.501" endtime="20201117 14:41:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.475" endtime="20201117 14:41:01.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.473" endtime="20201117 14:41:01.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.511" endtime="20201117 14:41:01.798"></status>
</kw>
<msg timestamp="20201117 14:41:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.510" endtime="20201117 14:41:01.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.802" endtime="20201117 14:41:01.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.811" endtime="20201117 14:41:01.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.507" endtime="20201117 14:41:01.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.505" endtime="20201117 14:41:01.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:01.818" level="INFO">${RESULT} = [{'time': 0.022602014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.279200000000024e-05, 'source_diff': 3.279200000000024e-05}, {'time': 0.022655014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:01.814" endtime="20201117 14:41:01.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:01.832" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:01.819" endtime="20201117 14:41:01.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.836" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:41:01.835" endtime="20201117 14:41:01.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.839" level="INFO">VALUE: [3.279200000000024e-05, 3.301400000000135e-05, 3.241699999999986e-05, 3.265299999999707e-05, 3.301400000000135e-05, 3.309800000000224e-05, 3.2791000000000764e-05, 3.261100000000183e-05, 3.2596999999998794e-05, 3.254199999999999e-05, 3.247199999999867e-05, 3.315200000000157e-05, 3.2832999999999474e-05, 3.3069000000000154e-05, 3.276399999999763e-05, 3.323600000000246e-05, 3.3069000000000154e-05, 3.261100000000183e-05, 3.251400000000085e-05, 3.273600000000196e-05, 3.241699999999986e-05, 3.299999999999831e-05, 3.2596999999998794e-05, 3.2582999999999224e-05, 3.273599999999849e-05, 3.283300000000294e-05, 3.291700000000036e-05, 3.249999999999781e-05, 3.27640000000011e-05, 3.244399999999953e-05, 3.3026999999997975e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.3082999999999724e-05, 3.291599999999742e-05, 3.319400000000028e-05, 3.273699999999796e-05, 3.3332999999999974e-05, 3.324999999999856e-05, 3.3069000000000154e-05, 3.324999999999856e-05, 3.291700000000036e-05, 3.3332999999999974e-05, 3.243099999999943e-05, 3.266700000000011e-05, 3.283399999999895e-05, 3.243099999999943e-05, 3.266700000000011e-05, 3.298600000000221e-05, 3.258400000000217e-05]</msg>
<status status="PASS" starttime="20201117 14:41:01.837" endtime="20201117 14:41:01.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.833" endtime="20201117 14:41:01.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.842" endtime="20201117 14:41:01.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:01.846" endtime="20201117 14:41:01.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.844" endtime="20201117 14:41:01.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.840" endtime="20201117 14:41:01.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.472" endtime="20201117 14:41:01.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.057" endtime="20201117 14:41:01.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.056" endtime="20201117 14:41:01.867"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.869" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.879" endtime="20201117 14:41:01.895"></status>
</kw>
<msg timestamp="20201117 14:41:01.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.877" endtime="20201117 14:41:01.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:01.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:01.897" endtime="20201117 14:41:01.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.900" endtime="20201117 14:41:01.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.874" endtime="20201117 14:41:01.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.872" endtime="20201117 14:41:01.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:01.909" endtime="20201117 14:41:02.195"></status>
</kw>
<msg timestamp="20201117 14:41:02.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:01.908" endtime="20201117 14:41:02.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.200" endtime="20201117 14:41:02.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.208" endtime="20201117 14:41:02.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.905" endtime="20201117 14:41:02.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.903" endtime="20201117 14:41:02.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.215" level="INFO">${RESULT} = [{'time': 0.025486431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.411199999999934e-05, 'source_diff': 3.411199999999934e-05}, {'time': 0.025543444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:02.212" endtime="20201117 14:41:02.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.229" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:02.216" endtime="20201117 14:41:02.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.234" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.232" endtime="20201117 14:41:02.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.236" level="INFO">VALUE: [3.411199999999934e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.340199999999835e-05, 3.4318999999997934e-05, 3.3583000000000224e-05, 3.426399999999913e-05, 3.4083000000000724e-05, 3.42640000000026e-05, 3.391700000000136e-05, 3.4097000000000294e-05, 3.4347000000000544e-05, 3.427800000000217e-05, 3.351399999999838e-05, 3.423599999999999e-05, 3.4096999999996824e-05, 3.341699999999739e-05, 3.352799999999795e-05, 3.35839999999997e-05, 3.40840000000002e-05, 3.3596999999999794e-05, 3.340300000000129e-05, 3.34580000000001e-05, 3.4083000000000724e-05, 3.374999999999906e-05, 3.391600000000189e-05, 3.416599999999867e-05, 3.4319000000001404e-05, 3.4083000000000724e-05, 3.343100000000043e-05, 3.348599999999924e-05, 3.375000000000253e-05, 3.4083000000000724e-05, 3.341700000000086e-05, 3.4152999999998573e-05, 3.420900000000032e-05, 3.419500000000075e-05, 3.374999999999906e-05, 3.393100000000093e-05, 3.349999999999881e-05, 3.409799999999977e-05, 3.4262999999999655e-05, 3.375000000000253e-05, 3.3583000000000224e-05, 3.424999999999956e-05, 3.3583000000000224e-05, 3.373599999999949e-05, 3.3596999999999794e-05, 3.4083000000000724e-05, 3.343000000000096e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.235" endtime="20201117 14:41:02.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.230" endtime="20201117 14:41:02.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.239" endtime="20201117 14:41:02.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.243" endtime="20201117 14:41:02.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.241" endtime="20201117 14:41:02.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.238" endtime="20201117 14:41:02.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.870" endtime="20201117 14:41:02.270"></status>
</kw>
<msg timestamp="20201117 14:41:02.270" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.280" endtime="20201117 14:41:02.296"></status>
</kw>
<msg timestamp="20201117 14:41:02.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.278" endtime="20201117 14:41:02.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.297" endtime="20201117 14:41:02.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.300" endtime="20201117 14:41:02.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.275" endtime="20201117 14:41:02.303"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.273" endtime="20201117 14:41:02.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.310" endtime="20201117 14:41:02.596"></status>
</kw>
<msg timestamp="20201117 14:41:02.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.309" endtime="20201117 14:41:02.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029142208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029175681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.600" endtime="20201117 14:41:02.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.608" endtime="20201117 14:41:02.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.306" endtime="20201117 14:41:02.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.304" endtime="20201117 14:41:02.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:02.615" level="INFO">${RESULT} = [{'time': 0.029175681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347299999999914e-05, 'source_diff': 3.347299999999914e-05}, {'time': 0.02923175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:02.612" endtime="20201117 14:41:02.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:02.629" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:02.616" endtime="20201117 14:41:02.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.634" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:41:02.633" endtime="20201117 14:41:02.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.636" level="INFO">VALUE: [3.347299999999914e-05, 3.348599999999924e-05, 3.418000000000171e-05, 3.3819000000000904e-05, 3.391599999999842e-05, 3.4333000000000974e-05, 3.374999999999906e-05, 3.3860999999999614e-05, 3.3832999999997004e-05, 3.4097000000000294e-05, 3.343100000000043e-05, 3.399999999999931e-05, 3.3596999999999794e-05, 3.343099999999696e-05, 3.365300000000154e-05, 3.416700000000161e-05, 3.433400000000045e-05, 3.375000000000253e-05, 3.397200000000017e-05, 3.433400000000045e-05, 3.343100000000043e-05, 3.433400000000045e-05, 3.394399999999756e-05, 3.367999999999774e-05, 3.366600000000164e-05, 3.347199999999967e-05, 3.416599999999867e-05, 3.4097000000000294e-05, 3.4083000000000724e-05, 3.427800000000217e-05, 3.3847000000000044e-05, 3.423599999999999e-05, 3.374999999999906e-05, 3.376399999999863e-05, 3.3804999999997865e-05, 3.3596999999999794e-05, 3.411199999999934e-05, 3.424999999999956e-05, 3.425000000000303e-05, 3.408399999999673e-05, 3.3916999999994424e-05, 3.418000000000171e-05, 3.397299999999964e-05, 3.351399999999838e-05, 3.374999999999906e-05, 3.423599999999999e-05, 3.341599999999445e-05, 3.3832999999997004e-05, 3.3582999999996754e-05, 3.4068999999997684e-05]</msg>
<status status="PASS" starttime="20201117 14:41:02.635" endtime="20201117 14:41:02.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.630" endtime="20201117 14:41:02.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.640" endtime="20201117 14:41:02.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:02.644" endtime="20201117 14:41:02.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.642" endtime="20201117 14:41:02.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.638" endtime="20201117 14:41:02.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.271" endtime="20201117 14:41:02.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.868" endtime="20201117 14:41:02.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:01.867" endtime="20201117 14:41:02.665"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.667" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.676" endtime="20201117 14:41:02.694"></status>
</kw>
<msg timestamp="20201117 14:41:02.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.674" endtime="20201117 14:41:02.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:02.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:02.695" endtime="20201117 14:41:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.698" endtime="20201117 14:41:02.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.672" endtime="20201117 14:41:02.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.670" endtime="20201117 14:41:02.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:02.707" endtime="20201117 14:41:02.994"></status>
</kw>
<msg timestamp="20201117 14:41:02.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025719917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025755208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.706" endtime="20201117 14:41:02.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025719917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025755208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:02.998" endtime="20201117 14:41:03.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.007" endtime="20201117 14:41:03.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.703" endtime="20201117 14:41:03.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.701" endtime="20201117 14:41:03.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.014" level="INFO">${RESULT} = [{'time': 0.025755208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5291000000003264e-05, 'source_diff': 3.5291000000003264e-05}, {'time': 0.025805208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:03.010" endtime="20201117 14:41:03.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:03.015" endtime="20201117 14:41:03.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.034" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.033" endtime="20201117 14:41:03.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.037" level="INFO">VALUE: [3.5291000000003264e-05, 3.516599999999967e-05, 3.449999999999981e-05, 3.491599999999942e-05, 3.501399999999988e-05, 3.481999999999791e-05, 3.5139000000000004e-05, 3.5083000000001724e-05, 3.5055000000002584e-05, 3.525000000000056e-05, 3.5082999999998254e-05, 3.4582999999997754e-05, 3.5097000000001294e-05, 3.45840000000007e-05, 3.45840000000007e-05, 3.5318999999998935e-05, 3.491699999999889e-05, 3.533400000000145e-05, 3.4583000000001224e-05, 3.475000000000006e-05, 3.5097000000001294e-05, 3.52779999999997e-05, 3.493000000000246e-05, 3.4832999999998004e-05, 3.524999999999709e-05, 3.491599999999942e-05, 3.4832999999998004e-05, 3.5082999999998254e-05, 3.491699999999889e-05, 3.498600000000074e-05, 3.524999999999709e-05, 3.526400000000013e-05, 3.475000000000006e-05, 3.441700000000186e-05, 3.516700000000261e-05, 3.5166999999999143e-05, 3.533399999999798e-05, 3.459800000000027e-05, 3.4624999999999934e-05, 3.525000000000056e-05, 3.492999999999899e-05, 3.4611000000000364e-05, 3.449999999999981e-05, 3.526400000000013e-05, 3.5096999999997824e-05, 3.526400000000013e-05, 3.473600000000049e-05, 3.526400000000013e-05, 3.500000000000031e-05, 3.5082999999998254e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.035" endtime="20201117 14:41:03.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.030" endtime="20201117 14:41:03.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.041" endtime="20201117 14:41:03.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.045" endtime="20201117 14:41:03.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.043" endtime="20201117 14:41:03.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.039" endtime="20201117 14:41:03.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.668" endtime="20201117 14:41:03.066"></status>
</kw>
<msg timestamp="20201117 14:41:03.066" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.075" endtime="20201117 14:41:03.092"></status>
</kw>
<msg timestamp="20201117 14:41:03.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.073" endtime="20201117 14:41:03.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.094" endtime="20201117 14:41:03.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.096" endtime="20201117 14:41:03.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.070" endtime="20201117 14:41:03.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.068" endtime="20201117 14:41:03.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.107" endtime="20201117 14:41:03.393"></status>
</kw>
<msg timestamp="20201117 14:41:03.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.105" endtime="20201117 14:41:03.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.398" endtime="20201117 14:41:03.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.406" endtime="20201117 14:41:03.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.102" endtime="20201117 14:41:03.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.101" endtime="20201117 14:41:03.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.413" level="INFO">${RESULT} = [{'time': 0.022292431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.447300000000014e-05, 'source_diff': 3.447300000000014e-05}, {'time': 0.022343431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:03.410" endtime="20201117 14:41:03.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:03.414" endtime="20201117 14:41:03.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.432" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.431" endtime="20201117 14:41:03.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.434" level="INFO">VALUE: [3.447300000000014e-05, 3.457000000000113e-05, 3.523700000000046e-05, 3.499999999999684e-05, 3.501399999999988e-05, 3.441600000000239e-05, 3.516599999999967e-05, 3.4833000000001474e-05, 3.5097000000001294e-05, 3.525000000000056e-05, 3.4861000000000614e-05, 3.5332999999998504e-05, 3.5110999999997394e-05, 3.470799999999788e-05, 3.5097000000001294e-05, 3.5082999999998254e-05, 3.493099999999846e-05, 3.466700000000211e-05, 3.466699999999864e-05, 3.468100000000168e-05, 3.533400000000145e-05, 3.526400000000013e-05, 3.45840000000007e-05, 3.4763000000000155e-05, 3.4554999999998615e-05, 3.525000000000056e-05, 3.5040999999999545e-05, 3.5139000000000004e-05, 3.4875000000000184e-05, 3.4818999999998435e-05, 3.475000000000006e-05, 3.475000000000006e-05, 3.491700000000236e-05, 3.4861000000000614e-05, 3.4611000000000364e-05, 3.50840000000012e-05, 3.4611000000000364e-05, 3.506999999999816e-05, 3.526400000000013e-05, 3.4861000000000614e-05, 3.526400000000013e-05, 3.4804999999998865e-05, 3.5097000000001294e-05, 3.5097000000001294e-05, 3.441599999999892e-05, 3.4624999999999934e-05, 3.516599999999967e-05, 3.5346999999998074e-05, 3.5097000000001294e-05, 3.4596999999997324e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.433" endtime="20201117 14:41:03.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.428" endtime="20201117 14:41:03.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.438" endtime="20201117 14:41:03.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.442" endtime="20201117 14:41:03.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.440" endtime="20201117 14:41:03.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.436" endtime="20201117 14:41:03.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.067" endtime="20201117 14:41:03.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.666" endtime="20201117 14:41:03.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:02.665" endtime="20201117 14:41:03.463"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.465" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.474" endtime="20201117 14:41:03.490"></status>
</kw>
<msg timestamp="20201117 14:41:03.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.472" endtime="20201117 14:41:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.492" endtime="20201117 14:41:03.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.494" endtime="20201117 14:41:03.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.470" endtime="20201117 14:41:03.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.467" endtime="20201117 14:41:03.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.504" endtime="20201117 14:41:03.789"></status>
</kw>
<msg timestamp="20201117 14:41:03.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.502" endtime="20201117 14:41:03.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024932403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024968042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.793" endtime="20201117 14:41:03.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.802" endtime="20201117 14:41:03.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.500" endtime="20201117 14:41:03.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.498" endtime="20201117 14:41:03.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:03.809" level="INFO">${RESULT} = [{'time': 0.024968042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5639000000000504e-05, 'source_diff': 3.5639000000000504e-05}, {'time': 0.025019111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:03.805" endtime="20201117 14:41:03.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:03.822" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:03.810" endtime="20201117 14:41:03.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.827" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:03.826" endtime="20201117 14:41:03.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.830" level="INFO">VALUE: [3.5639000000000504e-05, 3.5653000000000074e-05, 3.594399999999956e-05, 3.598700000000121e-05, 3.5916999999999893e-05, 3.56520000000006e-05, 3.619399999999981e-05, 3.56520000000006e-05, 3.616600000000067e-05, 3.5847000000002044e-05, 3.5582999999998755e-05, 3.575000000000106e-05, 3.574999999999759e-05, 3.625000000000156e-05, 3.574999999999759e-05, 3.573599999999802e-05, 3.5416999999999393e-05, 3.549999999999734e-05, 3.55979999999978e-05, 3.625000000000156e-05, 3.5402999999999823e-05, 3.550000000000081e-05, 3.5416999999999393e-05, 3.6167000000000143e-05, 3.5846999999998574e-05, 3.6082999999999255e-05, 3.6082999999999255e-05, 3.6082999999999255e-05, 3.5583000000002224e-05, 3.624999999999809e-05, 3.541599999999992e-05, 3.5666999999999643e-05, 3.576400000000063e-05, 3.6096999999998824e-05, 3.575000000000106e-05, 3.6096999999998824e-05, 3.543099999999896e-05, 3.5666999999999643e-05, 3.569399999999931e-05, 3.598600000000174e-05, 3.5903000000000324e-05, 3.5653000000000074e-05, 3.5832999999999005e-05, 3.575000000000106e-05, 3.6082999999999255e-05, 3.626400000000113e-05, 3.5582999999998755e-05, 3.541599999999992e-05, 3.618000000000024e-05, 3.599999999999784e-05]</msg>
<status status="PASS" starttime="20201117 14:41:03.828" endtime="20201117 14:41:03.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.823" endtime="20201117 14:41:03.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.833" endtime="20201117 14:41:03.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:03.837" endtime="20201117 14:41:03.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.835" endtime="20201117 14:41:03.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.832" endtime="20201117 14:41:03.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.466" endtime="20201117 14:41:03.858"></status>
</kw>
<msg timestamp="20201117 14:41:03.858" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.867" endtime="20201117 14:41:03.884"></status>
</kw>
<msg timestamp="20201117 14:41:03.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.865" endtime="20201117 14:41:03.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:03.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:03.885" endtime="20201117 14:41:03.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.888" endtime="20201117 14:41:03.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.863" endtime="20201117 14:41:03.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.860" endtime="20201117 14:41:03.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:03.898" endtime="20201117 14:41:04.185"></status>
</kw>
<msg timestamp="20201117 14:41:04.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:03.897" endtime="20201117 14:41:04.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.190" endtime="20201117 14:41:04.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.198" endtime="20201117 14:41:04.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.894" endtime="20201117 14:41:04.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.892" endtime="20201117 14:41:04.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.205" level="INFO">${RESULT} = [{'time': 0.022771097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54580000000021e-05, 'source_diff': 3.54580000000021e-05}, {'time': 0.022824111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:04.202" endtime="20201117 14:41:04.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:04.206" endtime="20201117 14:41:04.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.224" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.223" endtime="20201117 14:41:04.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.226" level="INFO">VALUE: [3.54580000000021e-05, 3.6097000000002294e-05, 3.6068999999999685e-05, 3.5611000000001364e-05, 3.5416999999999393e-05, 3.5832999999999005e-05, 3.5347000000001544e-05, 3.5832999999999005e-05, 3.5903000000000324e-05, 3.636200000000159e-05, 3.576400000000063e-05, 3.602800000000045e-05, 3.6262999999998186e-05, 3.6096999999998824e-05, 3.6276999999997755e-05, 3.590200000000085e-05, 3.601399999999741e-05, 3.5583000000002224e-05, 3.592999999999999e-05, 3.618000000000024e-05, 3.544400000000253e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.5582999999998755e-05, 3.6083000000002724e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.626399999999766e-05, 3.543100000000243e-05, 3.584799999999805e-05, 3.6096999999998824e-05, 3.5610999999997894e-05, 3.626400000000113e-05, 3.574999999999759e-05, 3.591599999999695e-05, 3.622199999999895e-05, 3.567999999999974e-05, 3.5889000000000754e-05, 3.591600000000042e-05, 3.618000000000024e-05, 3.598599999999827e-05, 3.552799999999995e-05, 3.543099999999896e-05, 3.5832999999999005e-05, 3.579199999999977e-05, 3.6097000000002294e-05, 3.575000000000106e-05, 3.576400000000063e-05, 3.5847000000002044e-05, 3.633399999999898e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.225" endtime="20201117 14:41:04.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.220" endtime="20201117 14:41:04.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.230" endtime="20201117 14:41:04.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.233" endtime="20201117 14:41:04.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.232" endtime="20201117 14:41:04.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.228" endtime="20201117 14:41:04.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.859" endtime="20201117 14:41:04.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.464" endtime="20201117 14:41:04.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:03.463" endtime="20201117 14:41:04.255"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.257" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.266" endtime="20201117 14:41:04.283"></status>
</kw>
<msg timestamp="20201117 14:41:04.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.264" endtime="20201117 14:41:04.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.285" endtime="20201117 14:41:04.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.288" endtime="20201117 14:41:04.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.261" endtime="20201117 14:41:04.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.259" endtime="20201117 14:41:04.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.297" endtime="20201117 14:41:04.583"></status>
</kw>
<msg timestamp="20201117 14:41:04.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025783181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.295" endtime="20201117 14:41:04.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025783181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.587" endtime="20201117 14:41:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.596" endtime="20201117 14:41:04.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.293" endtime="20201117 14:41:04.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.291" endtime="20201117 14:41:04.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:04.603" level="INFO">${RESULT} = [{'time': 0.025783181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.67919999999973e-05, 'source_diff': 3.67919999999973e-05}, {'time': 0.025839181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:04.600" endtime="20201117 14:41:04.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:04.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:04.604" endtime="20201117 14:41:04.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.623" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:04.622" endtime="20201117 14:41:04.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.626" level="INFO">VALUE: [3.67919999999973e-05, 3.681999999999991e-05, 3.7305000000001365e-05, 3.7319000000000935e-05, 3.675000000000206e-05, 3.6582999999999755e-05, 3.643000000000049e-05, 3.701400000000188e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6402999999997354e-05, 3.720900000000332e-05, 3.654200000000052e-05, 3.7083000000000255e-05, 3.650000000000181e-05, 3.681999999999991e-05, 3.69719999999997e-05, 3.7416999999997924e-05, 3.708399999999973e-05, 3.705600000000059e-05, 3.720899999999985e-05, 3.733399999999998e-05, 3.7096999999999825e-05, 3.675000000000206e-05, 3.7124999999998964e-05, 3.641600000000092e-05, 3.7333000000000505e-05, 3.7096999999999825e-05, 3.648699999999824e-05, 3.7333000000000505e-05, 3.6931000000000463e-05, 3.6819000000000435e-05, 3.722200000000342e-05, 3.6610999999998894e-05, 3.676400000000163e-05, 3.724999999999909e-05, 3.65979999999988e-05, 3.723599999999952e-05, 3.7305000000001365e-05, 3.6916999999997424e-05, 3.675000000000206e-05, 3.693000000000099e-05, 3.6819000000000435e-05, 3.7083000000000255e-05, 3.724999999999909e-05, 3.674999999999859e-05, 3.691600000000142e-05, 3.702799999999798e-05, 3.674999999999859e-05, 3.669400000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:41:04.624" endtime="20201117 14:41:04.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.619" endtime="20201117 14:41:04.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.629" endtime="20201117 14:41:04.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:04.632" endtime="20201117 14:41:04.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.631" endtime="20201117 14:41:04.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.627" endtime="20201117 14:41:04.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.258" endtime="20201117 14:41:04.653"></status>
</kw>
<msg timestamp="20201117 14:41:04.653" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.662" endtime="20201117 14:41:04.679"></status>
</kw>
<msg timestamp="20201117 14:41:04.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.661" endtime="20201117 14:41:04.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:04.680" endtime="20201117 14:41:04.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.683" endtime="20201117 14:41:04.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.658" endtime="20201117 14:41:04.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.656" endtime="20201117 14:41:04.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.693" endtime="20201117 14:41:04.980"></status>
</kw>
<msg timestamp="20201117 14:41:04.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.692" endtime="20201117 14:41:04.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:04.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:04.984" endtime="20201117 14:41:04.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:04.993" endtime="20201117 14:41:04.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.689" endtime="20201117 14:41:04.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.687" endtime="20201117 14:41:04.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.000" level="INFO">${RESULT} = [{'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.726399999999866e-05, 'source_diff': 3.726399999999866e-05}, {'time': 0.022294236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:04.997" endtime="20201117 14:41:05.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:05.001" endtime="20201117 14:41:05.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.019" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.018" endtime="20201117 14:41:05.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.021" level="INFO">VALUE: [3.726399999999866e-05, 3.6652999999997604e-05, 3.6652999999997604e-05, 3.668000000000074e-05, 3.7167000000001144e-05, 3.6653000000001074e-05, 3.654200000000052e-05, 3.669499999999978e-05, 3.6582999999999755e-05, 3.661199999999837e-05, 3.659800000000227e-05, 3.6403000000000824e-05, 3.6819000000000435e-05, 3.708399999999973e-05, 3.7305000000001365e-05, 3.6903000000001324e-05, 3.7013000000002405e-05, 3.6569000000000185e-05, 3.692999999999752e-05, 3.650000000000181e-05, 3.6568999999996715e-05, 3.6582999999999755e-05, 3.694399999999709e-05, 3.7167000000001144e-05, 3.7333000000000505e-05, 3.6597000000002794e-05, 3.724999999999909e-05, 3.6597000000002794e-05, 3.6417000000000394e-05, 3.6569000000000185e-05, 3.675000000000206e-05, 3.6653000000001074e-05, 3.656999999999966e-05, 3.70979999999993e-05, 3.7069000000000685e-05, 3.6917000000000894e-05, 3.724999999999909e-05, 3.6569000000000185e-05, 3.695800000000013e-05, 3.7402999999998354e-05, 3.641599999999745e-05, 3.6833000000000005e-05, 3.726399999999866e-05, 3.724999999999909e-05, 3.705599999999712e-05, 3.694500000000003e-05, 3.695800000000013e-05, 3.64719999999992e-05, 3.7333000000000505e-05, 3.711199999999887e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.020" endtime="20201117 14:41:05.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.015" endtime="20201117 14:41:05.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.025" endtime="20201117 14:41:05.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.028" endtime="20201117 14:41:05.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.027" endtime="20201117 14:41:05.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.023" endtime="20201117 14:41:05.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.654" endtime="20201117 14:41:05.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.256" endtime="20201117 14:41:05.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:04.255" endtime="20201117 14:41:05.049"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.052" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.060" endtime="20201117 14:41:05.077"></status>
</kw>
<msg timestamp="20201117 14:41:05.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.059" endtime="20201117 14:41:05.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.079" endtime="20201117 14:41:05.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.082" endtime="20201117 14:41:05.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.056" endtime="20201117 14:41:05.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.054" endtime="20201117 14:41:05.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.092" endtime="20201117 14:41:05.378"></status>
</kw>
<msg timestamp="20201117 14:41:05.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.090" endtime="20201117 14:41:05.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024819347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024857458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.382" endtime="20201117 14:41:05.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.391" endtime="20201117 14:41:05.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.087" endtime="20201117 14:41:05.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.085" endtime="20201117 14:41:05.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.397" level="INFO">${RESULT} = [{'time': 0.024857458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8111000000000395e-05, 'source_diff': 3.8111000000000395e-05}, {'time': 0.024915472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.394" endtime="20201117 14:41:05.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:05.399" endtime="20201117 14:41:05.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.416" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.415" endtime="20201117 14:41:05.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.419" level="INFO">VALUE: [3.8111000000000395e-05, 3.7610999999999895e-05, 3.77780000000022e-05, 3.823600000000052e-05, 3.822199999999748e-05, 3.7930999999997994e-05, 3.799999999999984e-05, 3.826399999999966e-05, 3.8068999999998215e-05, 3.823600000000052e-05, 3.7445000000000533e-05, 3.7666999999998174e-05, 3.79720000000007e-05, 3.80980000000003e-05, 3.7416999999997924e-05, 3.8318999999998465e-05, 3.7776999999999256e-05, 3.8054999999998645e-05, 3.777799999999873e-05, 3.744400000000106e-05, 3.7624999999999464e-05, 3.749999999999934e-05, 3.793000000000199e-05, 3.7847000000000575e-05, 3.7597000000000325e-05, 3.8068999999998215e-05, 3.7958999999997134e-05, 3.8333000000001505e-05, 3.77780000000022e-05, 3.7917000000001894e-05, 3.7667000000001644e-05, 3.799999999999984e-05, 3.757000000000066e-05, 3.794400000000156e-05, 3.783400000000048e-05, 3.7917000000001894e-05, 3.768000000000174e-05, 3.799999999999984e-05, 3.7875000000003184e-05, 3.801400000000288e-05, 3.741599999999845e-05, 3.820799999999791e-05, 3.767999999999827e-05, 3.752799999999848e-05, 3.7916999999998424e-05, 3.750000000000281e-05, 3.7916999999998424e-05, 3.7666999999998174e-05, 3.8333000000001505e-05, 3.7805000000001865e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.417" endtime="20201117 14:41:05.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.412" endtime="20201117 14:41:05.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.422" endtime="20201117 14:41:05.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.426" endtime="20201117 14:41:05.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.424" endtime="20201117 14:41:05.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.420" endtime="20201117 14:41:05.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.053" endtime="20201117 14:41:05.446"></status>
</kw>
<msg timestamp="20201117 14:41:05.447" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.455" endtime="20201117 14:41:05.472"></status>
</kw>
<msg timestamp="20201117 14:41:05.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.454" endtime="20201117 14:41:05.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.474" endtime="20201117 14:41:05.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.477" endtime="20201117 14:41:05.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.451" endtime="20201117 14:41:05.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.449" endtime="20201117 14:41:05.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.487" endtime="20201117 14:41:05.773"></status>
</kw>
<msg timestamp="20201117 14:41:05.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.486" endtime="20201117 14:41:05.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.777" endtime="20201117 14:41:05.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.786" endtime="20201117 14:41:05.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.483" endtime="20201117 14:41:05.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.481" endtime="20201117 14:41:05.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:05.793" level="INFO">${RESULT} = [{'time': 0.022237931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7388999999998784e-05, 'source_diff': 3.7388999999998784e-05}, {'time': 0.022298931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:05.789" endtime="20201117 14:41:05.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:05.806" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:05.794" endtime="20201117 14:41:05.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.811" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:41:05.810" endtime="20201117 14:41:05.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.814" level="INFO">VALUE: [3.7388999999998784e-05, 3.774999999999959e-05, 3.742999999999802e-05, 3.7833000000001005e-05, 3.743000000000149e-05, 3.766600000000217e-05, 3.751399999999891e-05, 3.768000000000174e-05, 3.823600000000052e-05, 3.824999999999662e-05, 3.8097000000000825e-05, 3.7430999999997494e-05, 3.8096999999997355e-05, 3.8181000000001714e-05, 3.7681000000001214e-05, 3.833399999999751e-05, 3.7375000000002684e-05, 3.7917000000001894e-05, 3.75979999999998e-05, 3.744399999999759e-05, 3.833400000000098e-05, 3.743000000000149e-05, 3.7610999999999895e-05, 3.799999999999984e-05, 3.741599999999845e-05, 3.801400000000288e-05, 3.7403000000001824e-05, 3.749999999999934e-05, 3.8069000000001685e-05, 3.7916999999998424e-05, 3.8181000000001714e-05, 3.751399999999891e-05, 3.813800000000006e-05, 3.7417000000001394e-05, 3.8152999999999104e-05, 3.783400000000048e-05, 3.757000000000066e-05, 3.825000000000009e-05, 3.7818999999997965e-05, 3.752799999999848e-05, 3.827799999999923e-05, 3.791599999999895e-05, 3.822200000000095e-05, 3.7819000000001435e-05, 3.776399999999916e-05, 3.7583000000000755e-05, 3.741599999999845e-05, 3.7832999999997535e-05, 3.7431000000000964e-05, 3.782000000000091e-05]</msg>
<status status="PASS" starttime="20201117 14:41:05.812" endtime="20201117 14:41:05.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.807" endtime="20201117 14:41:05.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.817" endtime="20201117 14:41:05.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:05.821" endtime="20201117 14:41:05.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.819" endtime="20201117 14:41:05.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.815" endtime="20201117 14:41:05.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.447" endtime="20201117 14:41:05.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.051" endtime="20201117 14:41:05.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.050" endtime="20201117 14:41:05.842"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.844" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.853" endtime="20201117 14:41:05.871"></status>
</kw>
<msg timestamp="20201117 14:41:05.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.852" endtime="20201117 14:41:05.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:05.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:05.873" endtime="20201117 14:41:05.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.875" endtime="20201117 14:41:05.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.848" endtime="20201117 14:41:05.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.846" endtime="20201117 14:41:05.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:05.885" endtime="20201117 14:41:06.171"></status>
</kw>
<msg timestamp="20201117 14:41:06.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026110361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:05.883" endtime="20201117 14:41:06.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026110361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026148972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.175" endtime="20201117 14:41:06.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.184" endtime="20201117 14:41:06.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.881" endtime="20201117 14:41:06.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.879" endtime="20201117 14:41:06.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.191" level="INFO">${RESULT} = [{'time': 0.026148972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8611000000000895e-05, 'source_diff': 3.8611000000000895e-05}, {'time': 0.026211, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:06.187" endtime="20201117 14:41:06.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.192" endtime="20201117 14:41:06.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.211" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.210" endtime="20201117 14:41:06.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.213" level="INFO">VALUE: [3.8611000000000895e-05, 3.8431000000001964e-05, 3.899999999999737e-05, 3.852800000000295e-05, 3.926400000000066e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.90980000000013e-05, 3.873600000000102e-05, 3.858400000000123e-05, 3.858400000000123e-05, 3.894399999999909e-05, 3.931999999999894e-05, 3.8762999999997216e-05, 3.926399999999719e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.9097000000001825e-05, 3.925000000000109e-05, 3.8582999999998285e-05, 3.8431000000001964e-05, 3.929200000000327e-05, 3.923599999999805e-05, 3.8916999999999424e-05, 3.9332999999999035e-05, 3.875000000000059e-05, 3.8902999999999854e-05, 3.898600000000127e-05, 3.8930999999998994e-05, 3.899999999999737e-05, 3.9054999999999646e-05, 3.8611000000000895e-05, 3.925000000000109e-05, 3.877799999999973e-05, 3.875000000000059e-05, 3.876400000000016e-05, 3.892999999999952e-05, 3.850000000000034e-05, 3.876400000000016e-05, 3.9110999999997925e-05, 3.8916999999999424e-05, 3.900000000000084e-05, 3.9097000000001825e-05, 3.875000000000059e-05, 3.9124999999997495e-05, 3.895800000000213e-05, 3.897300000000117e-05, 3.8916999999999424e-05, 3.9153000000000104e-05, 3.924999999999762e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.212" endtime="20201117 14:41:06.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.207" endtime="20201117 14:41:06.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.217" endtime="20201117 14:41:06.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.220" endtime="20201117 14:41:06.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.219" endtime="20201117 14:41:06.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.215" endtime="20201117 14:41:06.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.845" endtime="20201117 14:41:06.241"></status>
</kw>
<msg timestamp="20201117 14:41:06.242" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.250" endtime="20201117 14:41:06.267"></status>
</kw>
<msg timestamp="20201117 14:41:06.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.249" endtime="20201117 14:41:06.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.269" endtime="20201117 14:41:06.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.271" endtime="20201117 14:41:06.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.246" endtime="20201117 14:41:06.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.244" endtime="20201117 14:41:06.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.282" endtime="20201117 14:41:06.569"></status>
</kw>
<msg timestamp="20201117 14:41:06.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.280" endtime="20201117 14:41:06.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.573" endtime="20201117 14:41:06.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.582" endtime="20201117 14:41:06.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.278" endtime="20201117 14:41:06.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.276" endtime="20201117 14:41:06.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.589" level="INFO">${RESULT} = [{'time': 0.022756389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9124999999997495e-05, 'source_diff': 3.9124999999997495e-05}, {'time': 0.022819403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:06.586" endtime="20201117 14:41:06.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:06.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.590" endtime="20201117 14:41:06.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.607" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:41:06.606" endtime="20201117 14:41:06.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.610" level="INFO">VALUE: [3.9124999999997495e-05, 3.908399999999826e-05, 3.8388999999999784e-05, 3.8680999999998744e-05, 3.9166999999999674e-05, 3.873600000000102e-05, 3.8625000000000465e-05, 3.919399999999934e-05, 3.901400000000041e-05, 3.876400000000016e-05, 3.891599999999995e-05, 3.917999999999977e-05, 3.8833000000002005e-05, 3.87919999999993e-05, 3.873600000000102e-05, 3.8916999999999424e-05, 3.9332999999999035e-05, 3.915200000000063e-05, 3.9083000000002255e-05, 3.874999999999712e-05, 3.900000000000084e-05, 3.92919999999998e-05, 3.8402999999999354e-05, 3.850000000000034e-05, 3.905600000000259e-05, 3.8736999999997024e-05, 3.9082999999998785e-05, 3.8568999999998715e-05, 3.9097000000001825e-05, 3.875000000000059e-05, 3.897199999999823e-05, 3.850000000000034e-05, 3.892999999999952e-05, 3.901400000000041e-05, 3.8430999999998494e-05, 3.8847000000001575e-05, 3.8902999999999854e-05, 3.900000000000084e-05, 3.926400000000066e-05, 3.911200000000087e-05, 3.908400000000173e-05, 3.8416999999998924e-05, 3.8541000000003045e-05, 3.907000000000216e-05, 3.8916999999999424e-05, 3.8832999999998535e-05, 3.894399999999909e-05, 3.8860999999997675e-05, 3.8611000000000895e-05, 3.891599999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:06.609" endtime="20201117 14:41:06.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.604" endtime="20201117 14:41:06.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.614" endtime="20201117 14:41:06.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:06.618" endtime="20201117 14:41:06.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.616" endtime="20201117 14:41:06.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.612" endtime="20201117 14:41:06.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.242" endtime="20201117 14:41:06.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.843" endtime="20201117 14:41:06.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:05.842" endtime="20201117 14:41:06.639"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.641" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.650" endtime="20201117 14:41:06.667"></status>
</kw>
<msg timestamp="20201117 14:41:06.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.648" endtime="20201117 14:41:06.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:06.668" endtime="20201117 14:41:06.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.671" endtime="20201117 14:41:06.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.646" endtime="20201117 14:41:06.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.643" endtime="20201117 14:41:06.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.680" endtime="20201117 14:41:06.967"></status>
</kw>
<msg timestamp="20201117 14:41:06.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.679" endtime="20201117 14:41:06.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:06.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024812542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024852333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:06.971" endtime="20201117 14:41:06.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:06.980" endtime="20201117 14:41:06.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.676" endtime="20201117 14:41:06.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.674" endtime="20201117 14:41:06.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:06.987" level="INFO">${RESULT} = [{'time': 0.024852333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9791000000000826e-05, 'source_diff': 3.9791000000000826e-05}, {'time': 0.024907375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:06.984" endtime="20201117 14:41:06.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.001" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:06.988" endtime="20201117 14:41:07.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.006" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.005" endtime="20201117 14:41:07.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.008" level="INFO">VALUE: [3.9791000000000826e-05, 3.9860999999998675e-05, 4.0111000000002395e-05, 3.9555000000000146e-05, 3.9416999999999924e-05, 3.9653000000000604e-05, 3.9875000000001715e-05, 3.9416999999999924e-05, 4.0194999999999814e-05, 4.0082999999999785e-05, 3.977799999999726e-05, 3.958399999999876e-05, 3.95980000000018e-05, 4.026400000000166e-05, 3.9917000000000424e-05, 4.0194999999999814e-05, 4.026400000000166e-05, 3.940200000000088e-05, 3.999999999999837e-05, 3.991600000000095e-05, 3.99859999999988e-05, 3.943000000000002e-05, 3.999999999999837e-05, 3.9610999999998425e-05, 3.998700000000174e-05, 4.0374999999998745e-05, 4.023599999999905e-05, 3.975000000000159e-05, 3.9416999999999924e-05, 4.000000000000184e-05, 3.973600000000202e-05, 4.024999999999862e-05, 3.958399999999876e-05, 4.0277000000001756e-05, 3.9903000000000854e-05, 3.9512999999997966e-05, 3.9527000000001006e-05, 4.026400000000166e-05, 4.0069000000000216e-05, 3.945799999999916e-05, 3.9833000000003005e-05, 3.974999999999812e-05, 3.972200000000245e-05, 3.9930999999999994e-05, 4.004200000000055e-05, 3.9403000000000354e-05, 4.031999999999994e-05, 3.9403000000000354e-05, 3.984800000000205e-05, 3.9917000000000424e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.007" endtime="20201117 14:41:07.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.002" endtime="20201117 14:41:07.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.012" endtime="20201117 14:41:07.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.016" endtime="20201117 14:41:07.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.014" endtime="20201117 14:41:07.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.010" endtime="20201117 14:41:07.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.642" endtime="20201117 14:41:07.036"></status>
</kw>
<msg timestamp="20201117 14:41:07.037" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.045" endtime="20201117 14:41:07.062"></status>
</kw>
<msg timestamp="20201117 14:41:07.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.044" endtime="20201117 14:41:07.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.064" endtime="20201117 14:41:07.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.066" endtime="20201117 14:41:07.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.041" endtime="20201117 14:41:07.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.039" endtime="20201117 14:41:07.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.077" endtime="20201117 14:41:07.363"></status>
</kw>
<msg timestamp="20201117 14:41:07.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.075" endtime="20201117 14:41:07.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.368" endtime="20201117 14:41:07.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.376" endtime="20201117 14:41:07.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.072" endtime="20201117 14:41:07.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.070" endtime="20201117 14:41:07.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.383" level="INFO">${RESULT} = [{'time': 0.022207333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0305000000000896e-05, 'source_diff': 4.0305000000000896e-05}, {'time': 0.022267333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:07.380" endtime="20201117 14:41:07.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:07.384" endtime="20201117 14:41:07.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.402" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.401" endtime="20201117 14:41:07.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.404" level="INFO">VALUE: [4.0305000000000896e-05, 3.950000000000134e-05, 3.994400000000009e-05, 3.968000000000027e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 4.02920000000008e-05, 3.9903000000000854e-05, 3.951400000000091e-05, 3.9430999999999494e-05, 4.0208999999999384e-05, 4.0167000000000674e-05, 3.9527000000001006e-05, 3.958399999999876e-05, 3.9722999999998454e-05, 4.0237000000001993e-05, 4.0333000000000035e-05, 3.974999999999812e-05, 3.993000000000052e-05, 4.019400000000034e-05, 3.941600000000045e-05, 4.019400000000034e-05, 4.000000000000184e-05, 4.0082999999999785e-05, 4.0082999999999785e-05, 3.9416999999999924e-05, 3.950000000000134e-05, 3.956999999999919e-05, 4.0304999999997426e-05, 4.025000000000209e-05, 3.976399999999769e-05, 3.958399999999876e-05, 3.9611000000001895e-05, 3.9416999999999924e-05, 3.9653000000000604e-05, 3.9847000000002575e-05, 4.0069000000000216e-05, 4.0111000000002395e-05, 3.941600000000045e-05, 3.9818999999999966e-05, 3.991600000000095e-05, 3.9818999999999966e-05, 3.9916999999996955e-05, 4.031999999999994e-05, 3.9458999999998634e-05, 4.0181000000000244e-05, 3.999999999999837e-05, 4.024999999999862e-05, 3.9903000000000854e-05, 4.033399999999951e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.403" endtime="20201117 14:41:07.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.398" endtime="20201117 14:41:07.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.414" endtime="20201117 14:41:07.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.418" endtime="20201117 14:41:07.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.416" endtime="20201117 14:41:07.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.412" endtime="20201117 14:41:07.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.037" endtime="20201117 14:41:07.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.640" endtime="20201117 14:41:07.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:06.639" endtime="20201117 14:41:07.439"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.441" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.450" endtime="20201117 14:41:07.468"></status>
</kw>
<msg timestamp="20201117 14:41:07.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.448" endtime="20201117 14:41:07.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.470" endtime="20201117 14:41:07.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.473" endtime="20201117 14:41:07.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.446" endtime="20201117 14:41:07.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.444" endtime="20201117 14:41:07.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.482" endtime="20201117 14:41:07.769"></status>
</kw>
<msg timestamp="20201117 14:41:07.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025912542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025953194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.481" endtime="20201117 14:41:07.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025912542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025953194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.773" endtime="20201117 14:41:07.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.781" endtime="20201117 14:41:07.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.478" endtime="20201117 14:41:07.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.476" endtime="20201117 14:41:07.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:07.788" level="INFO">${RESULT} = [{'time': 0.025953194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.065199999999866e-05, 'source_diff': 4.065199999999866e-05}, {'time': 0.026015181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:07.785" endtime="20201117 14:41:07.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:07.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:07.789" endtime="20201117 14:41:07.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.808" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:07.807" endtime="20201117 14:41:07.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.811" level="INFO">VALUE: [4.065199999999866e-05, 4.074999999999912e-05, 4.123600000000005e-05, 4.074999999999912e-05, 4.079199999999783e-05, 4.127800000000223e-05, 4.043000000000102e-05, 4.045800000000016e-05, 4.076399999999869e-05, 4.0916999999997955e-05, 4.1347000000000605e-05, 4.0888999999998815e-05, 4.051399999999844e-05, 4.1209000000000384e-05, 4.0653000000001605e-05, 4.1374999999999745e-05, 4.059799999999933e-05, 4.109799999999983e-05, 4.0777000000002256e-05, 4.041600000000145e-05, 4.11660000000022e-05, 4.0860999999999675e-05, 4.0596999999999855e-05, 4.123600000000005e-05, 4.090199999999891e-05, 4.1347000000000605e-05, 4.093000000000152e-05, 4.09859999999998e-05, 4.0583000000000286e-05, 4.0902999999998385e-05, 4.1181000000001244e-05, 4.1333000000001036e-05, 4.0417000000000924e-05, 4.1027000000002506e-05, 4.059799999999933e-05, 4.124999999999962e-05, 4.083400000000001e-05, 4.0624999999998995e-05, 4.0512999999998967e-05, 4.124999999999962e-05, 4.095800000000066e-05, 4.04859999999993e-05, 4.07920000000013e-05, 4.0959000000000134e-05, 4.049999999999887e-05, 4.0431000000000494e-05, 4.101400000000241e-05, 4.1305000000001896e-05, 4.102799999999851e-05, 4.074999999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:07.809" endtime="20201117 14:41:07.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.804" endtime="20201117 14:41:07.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.815" endtime="20201117 14:41:07.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:07.818" endtime="20201117 14:41:07.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.817" endtime="20201117 14:41:07.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.813" endtime="20201117 14:41:07.839"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.442" endtime="20201117 14:41:07.839"></status>
</kw>
<msg timestamp="20201117 14:41:07.839" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.848" endtime="20201117 14:41:07.865"></status>
</kw>
<msg timestamp="20201117 14:41:07.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.846" endtime="20201117 14:41:07.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:07.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:07.866" endtime="20201117 14:41:07.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.869" endtime="20201117 14:41:07.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.844" endtime="20201117 14:41:07.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.841" endtime="20201117 14:41:07.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:07.880" endtime="20201117 14:41:08.167"></status>
</kw>
<msg timestamp="20201117 14:41:08.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:07.878" endtime="20201117 14:41:08.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022261708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.171" endtime="20201117 14:41:08.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.180" endtime="20201117 14:41:08.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.875" endtime="20201117 14:41:08.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.873" endtime="20201117 14:41:08.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.187" level="INFO">${RESULT} = [{'time': 0.022261708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1347000000000605e-05, 'source_diff': 4.1347000000000605e-05}, {'time': 0.022322708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:08.183" endtime="20201117 14:41:08.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.200" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.188" endtime="20201117 14:41:08.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.205" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.204" endtime="20201117 14:41:08.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.208" level="INFO">VALUE: [4.1347000000000605e-05, 4.124999999999962e-05, 4.0888999999998815e-05, 4.051399999999844e-05, 4.0596999999999855e-05, 4.125000000000309e-05, 4.080600000000087e-05, 4.0931000000000994e-05, 4.080600000000087e-05, 4.077800000000173e-05, 4.099999999999937e-05, 4.108400000000026e-05, 4.0903000000001855e-05, 4.099999999999937e-05, 4.108399999999679e-05, 4.041600000000145e-05, 4.099999999999937e-05, 4.0596999999999855e-05, 4.082000000000044e-05, 4.093000000000152e-05, 4.1347000000000605e-05, 4.080600000000087e-05, 4.1097000000000355e-05, 4.074999999999912e-05, 4.0583000000000286e-05, 4.105599999999765e-05, 4.0931000000000994e-05, 4.07920000000013e-05, 4.1083000000000786e-05, 4.1153000000002105e-05, 4.123600000000005e-05, 4.124999999999962e-05, 4.0417000000000924e-05, 4.066599999999823e-05, 4.133400000000051e-05, 4.101399999999894e-05, 4.094400000000109e-05, 4.1333000000001036e-05, 4.1082999999997316e-05, 4.091599999999848e-05, 4.04859999999993e-05, 4.0582999999996816e-05, 4.126400000000266e-05, 4.072199999999998e-05, 4.138799999999984e-05, 4.076399999999869e-05, 4.106999999999722e-05, 4.0416999999997455e-05, 4.049999999999887e-05, 4.0445000000000064e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.207" endtime="20201117 14:41:08.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.202" endtime="20201117 14:41:08.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.211" endtime="20201117 14:41:08.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.215" endtime="20201117 14:41:08.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.213" endtime="20201117 14:41:08.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.210" endtime="20201117 14:41:08.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.840" endtime="20201117 14:41:08.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.440" endtime="20201117 14:41:08.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:07.439" endtime="20201117 14:41:08.236"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.239" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.247" endtime="20201117 14:41:08.264"></status>
</kw>
<msg timestamp="20201117 14:41:08.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.246" endtime="20201117 14:41:08.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.266" endtime="20201117 14:41:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.268" endtime="20201117 14:41:08.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.243" endtime="20201117 14:41:08.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.241" endtime="20201117 14:41:08.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.278" endtime="20201117 14:41:08.565"></status>
</kw>
<msg timestamp="20201117 14:41:08.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.276" endtime="20201117 14:41:08.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024778917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.569" endtime="20201117 14:41:08.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.577" endtime="20201117 14:41:08.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.274" endtime="20201117 14:41:08.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.272" endtime="20201117 14:41:08.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.585" level="INFO">${RESULT} = [{'time': 0.024778917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1388999999999315e-05, 'source_diff': 4.1388999999999315e-05}, {'time': 0.024844917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:08.581" endtime="20201117 14:41:08.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.586" endtime="20201117 14:41:08.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.604" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.602" endtime="20201117 14:41:08.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.606" level="INFO">VALUE: [4.1388999999999315e-05, 4.1902999999999385e-05, 4.2152999999999635e-05, 4.1652999999999135e-05, 4.1833000000001536e-05, 4.175000000000012e-05, 4.191599999999948e-05, 4.165199999999966e-05, 4.1819000000001966e-05, 4.1417000000001924e-05, 4.1846999999997636e-05, 4.175000000000012e-05, 4.1416999999998455e-05, 4.227799999999976e-05, 4.2083000000001786e-05, 4.1930999999998525e-05, 4.201399999999994e-05, 4.177799999999926e-05, 4.206999999999822e-05, 4.1374999999999745e-05, 4.183400000000101e-05, 4.1596999999997386e-05, 4.190199999999991e-05, 4.201399999999994e-05, 4.191599999999948e-05, 4.1833000000001536e-05, 4.143000000000202e-05, 4.202799999999951e-05, 4.149999999999987e-05, 4.201399999999994e-05, 4.1861000000000675e-05, 4.2111000000000925e-05, 4.151399999999944e-05, 4.1402999999998885e-05, 4.183400000000101e-05, 4.209800000000083e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.2027000000000037e-05, 4.141599999999898e-05, 4.2332999999998566e-05, 4.226400000000019e-05, 4.1597000000000856e-05, 4.225000000000062e-05, 4.191599999999948e-05, 4.201399999999994e-05, 4.176399999999969e-05, 4.2082999999998316e-05, 4.225000000000062e-05, 4.157000000000119e-05]</msg>
<status status="PASS" starttime="20201117 14:41:08.605" endtime="20201117 14:41:08.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.600" endtime="20201117 14:41:08.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.609" endtime="20201117 14:41:08.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:08.613" endtime="20201117 14:41:08.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.611" endtime="20201117 14:41:08.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.608" endtime="20201117 14:41:08.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.239" endtime="20201117 14:41:08.634"></status>
</kw>
<msg timestamp="20201117 14:41:08.634" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.643" endtime="20201117 14:41:08.660"></status>
</kw>
<msg timestamp="20201117 14:41:08.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.641" endtime="20201117 14:41:08.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:08.662" endtime="20201117 14:41:08.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.664" endtime="20201117 14:41:08.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.638" endtime="20201117 14:41:08.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.636" endtime="20201117 14:41:08.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.675" endtime="20201117 14:41:08.961"></status>
</kw>
<msg timestamp="20201117 14:41:08.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.673" endtime="20201117 14:41:08.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:08.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022222139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022263931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:08.965" endtime="20201117 14:41:08.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:08.974" endtime="20201117 14:41:08.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.670" endtime="20201117 14:41:08.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.669" endtime="20201117 14:41:08.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:08.981" level="INFO">${RESULT} = [{'time': 0.022263931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.17920000000023e-05, 'source_diff': 4.17920000000023e-05}, {'time': 0.022327931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:08.978" endtime="20201117 14:41:08.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:08.995" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:08.982" endtime="20201117 14:41:08.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.000" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:41:08.999" endtime="20201117 14:41:09.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.003" level="INFO">VALUE: [4.17920000000023e-05, 4.2180999999998775e-05, 4.233400000000151e-05, 4.225000000000062e-05, 4.1388999999999315e-05, 4.1833000000001536e-05, 4.2083000000001786e-05, 4.2083000000001786e-05, 4.231999999999847e-05, 4.175000000000012e-05, 4.226400000000019e-05, 4.1568999999998246e-05, 4.23059999999989e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.157000000000119e-05, 4.208399999999779e-05, 4.209799999999736e-05, 4.154200000000205e-05, 4.226400000000019e-05, 4.1916999999998955e-05, 4.1846999999997636e-05, 4.192999999999905e-05, 4.1819000000001966e-05, 4.1568999999998246e-05, 4.227799999999976e-05, 4.149999999999987e-05, 4.227799999999976e-05, 4.23059999999989e-05, 4.2124999999997026e-05, 4.1416999999998455e-05, 4.2346999999998136e-05, 4.176399999999969e-05, 4.173600000000055e-05, 4.200000000000037e-05, 4.19999999999969e-05, 4.209800000000083e-05, 4.176399999999969e-05, 4.2290999999999856e-05, 4.194400000000209e-05, 4.145800000000116e-05, 4.2040999999999606e-05, 4.141600000000245e-05, 4.1833000000001536e-05, 4.192999999999905e-05, 4.201399999999994e-05, 4.1930999999998525e-05, 4.202799999999951e-05, 4.1916999999998955e-05, 4.1624999999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.001" endtime="20201117 14:41:09.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.996" endtime="20201117 14:41:09.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.006" endtime="20201117 14:41:09.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.010" endtime="20201117 14:41:09.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.008" endtime="20201117 14:41:09.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.004" endtime="20201117 14:41:09.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.635" endtime="20201117 14:41:09.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.237" endtime="20201117 14:41:09.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:08.237" endtime="20201117 14:41:09.031"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.033" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.042" endtime="20201117 14:41:09.060"></status>
</kw>
<msg timestamp="20201117 14:41:09.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.040" endtime="20201117 14:41:09.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.062" endtime="20201117 14:41:09.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.064" endtime="20201117 14:41:09.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.038" endtime="20201117 14:41:09.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.035" endtime="20201117 14:41:09.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.074" endtime="20201117 14:41:09.359"></status>
</kw>
<msg timestamp="20201117 14:41:09.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025691653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.073" endtime="20201117 14:41:09.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025648361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025691653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.363" endtime="20201117 14:41:09.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.372" endtime="20201117 14:41:09.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.069" endtime="20201117 14:41:09.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.068" endtime="20201117 14:41:09.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.379" level="INFO">${RESULT} = [{'time': 0.025691653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.329199999999686e-05, 'source_diff': 4.329199999999686e-05}, {'time': 0.025751653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:09.375" endtime="20201117 14:41:09.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.394" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:09.380" endtime="20201117 14:41:09.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.399" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.397" endtime="20201117 14:41:09.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.401" level="INFO">VALUE: [4.329199999999686e-05, 4.28059999999994e-05, 4.275000000000112e-05, 4.2611000000001426e-05, 4.324999999999815e-05, 4.2723000000001454e-05, 4.327699999999782e-05, 4.250000000000087e-05, 4.291600000000048e-05, 4.316600000000073e-05, 4.2610999999997956e-05, 4.277800000000026e-05, 4.279199999999983e-05, 4.2888999999997346e-05, 4.3167000000000205e-05, 4.301400000000094e-05, 4.275000000000112e-05, 4.263800000000109e-05, 4.309799999999836e-05, 4.2930999999999525e-05, 4.29860000000018e-05, 4.326399999999772e-05, 4.302800000000051e-05, 4.241599999999998e-05, 4.2819000000002966e-05, 4.326400000000119e-05, 4.2402999999999885e-05, 4.3318999999999996e-05, 4.2639000000000565e-05, 4.3096999999998886e-05, 4.273600000000155e-05, 4.327800000000076e-05, 4.3082999999999316e-05, 4.2597000000001856e-05, 4.3083000000002786e-05, 4.2930999999999525e-05, 4.301400000000094e-05, 4.255599999999915e-05, 4.273600000000155e-05, 4.2736999999997555e-05, 4.258400000000176e-05, 4.275000000000112e-05, 4.327800000000076e-05, 4.3068999999999746e-05, 4.293000000000005e-05, 4.250000000000087e-05, 4.327800000000076e-05, 4.2597000000001856e-05, 4.2944999999999095e-05, 4.250000000000087e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.400" endtime="20201117 14:41:09.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.395" endtime="20201117 14:41:09.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.404" endtime="20201117 14:41:09.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.408" endtime="20201117 14:41:09.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.406" endtime="20201117 14:41:09.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.403" endtime="20201117 14:41:09.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.034" endtime="20201117 14:41:09.429"></status>
</kw>
<msg timestamp="20201117 14:41:09.429" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.438" endtime="20201117 14:41:09.455"></status>
</kw>
<msg timestamp="20201117 14:41:09.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.436" endtime="20201117 14:41:09.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.457" endtime="20201117 14:41:09.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.460" endtime="20201117 14:41:09.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.433" endtime="20201117 14:41:09.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.431" endtime="20201117 14:41:09.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.470" endtime="20201117 14:41:09.757"></status>
</kw>
<msg timestamp="20201117 14:41:09.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.469" endtime="20201117 14:41:09.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.762" endtime="20201117 14:41:09.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.771" endtime="20201117 14:41:09.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.466" endtime="20201117 14:41:09.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.464" endtime="20201117 14:41:09.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:09.777" level="INFO">${RESULT} = [{'time': 0.022363458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2639000000000565e-05, 'source_diff': 4.2639000000000565e-05}, {'time': 0.0224225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:09.774" endtime="20201117 14:41:09.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:09.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:09.779" endtime="20201117 14:41:09.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.796" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:41:09.795" endtime="20201117 14:41:09.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.799" level="INFO">VALUE: [4.2639000000000565e-05, 4.3125000000001495e-05, 4.2402999999999885e-05, 4.266600000000023e-05, 4.3361000000002176e-05, 4.2402999999999885e-05, 4.29860000000018e-05, 4.2930999999999525e-05, 4.3167000000000205e-05, 4.306999999999922e-05, 4.308399999999879e-05, 4.326400000000119e-05, 4.298599999999833e-05, 4.308400000000226e-05, 4.242999999999955e-05, 4.282000000000244e-05, 4.291600000000048e-05, 4.266600000000023e-05, 4.266600000000023e-05, 4.3332999999999566e-05, 4.3068999999999746e-05, 4.319399999999987e-05, 4.2402999999999885e-05, 4.3194999999999345e-05, 4.2832999999999066e-05, 4.325000000000162e-05, 4.2846999999998636e-05, 4.251400000000044e-05, 4.2916999999999955e-05, 4.301400000000094e-05, 4.2916999999999955e-05, 4.2680999999999275e-05, 4.3167000000000205e-05, 4.26799999999998e-05, 4.29999999999979e-05, 4.293000000000005e-05, 4.3332999999999566e-05, 4.277800000000026e-05, 4.2568999999999246e-05, 4.276400000000069e-05, 4.322199999999901e-05, 4.326399999999772e-05, 4.323599999999858e-05, 4.3082999999999316e-05, 4.2596999999998386e-05, 4.2680999999999275e-05, 4.273599999999808e-05, 4.2402999999999885e-05, 4.2624999999997526e-05, 4.3125000000001495e-05]</msg>
<status status="PASS" starttime="20201117 14:41:09.797" endtime="20201117 14:41:09.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.792" endtime="20201117 14:41:09.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.802" endtime="20201117 14:41:09.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:09.805" endtime="20201117 14:41:09.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.804" endtime="20201117 14:41:09.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.800" endtime="20201117 14:41:09.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.430" endtime="20201117 14:41:09.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.032" endtime="20201117 14:41:09.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.031" endtime="20201117 14:41:09.826"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.829" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.838" endtime="20201117 14:41:09.856"></status>
</kw>
<msg timestamp="20201117 14:41:09.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.836" endtime="20201117 14:41:09.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:09.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:09.857" endtime="20201117 14:41:09.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.860" endtime="20201117 14:41:09.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.833" endtime="20201117 14:41:09.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.831" endtime="20201117 14:41:09.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:09.870" endtime="20201117 14:41:10.155"></status>
</kw>
<msg timestamp="20201117 14:41:10.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025747944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:09.868" endtime="20201117 14:41:10.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025747944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.160" endtime="20201117 14:41:10.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.168" endtime="20201117 14:41:10.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.865" endtime="20201117 14:41:10.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.863" endtime="20201117 14:41:10.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.175" level="INFO">${RESULT} = [{'time': 0.025747944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.420799999999697e-05, 'source_diff': 4.420799999999697e-05}, {'time': 0.025806958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:10.172" endtime="20201117 14:41:10.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:10.176" endtime="20201117 14:41:10.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.194" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.193" endtime="20201117 14:41:10.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.196" level="INFO">VALUE: [4.420799999999697e-05, 4.401400000000194e-05, 4.373600000000255e-05, 4.394400000000062e-05, 4.345799999999969e-05, 4.343000000000055e-05, 4.3694999999999845e-05, 4.402799999999804e-05, 4.377800000000126e-05, 4.3945000000000095e-05, 4.377799999999779e-05, 4.3388999999997846e-05, 4.350000000000187e-05, 4.408399999999979e-05, 4.380499999999746e-05, 4.374999999999865e-05, 4.347199999999926e-05, 4.3819000000000496e-05, 4.422200000000001e-05, 4.390199999999844e-05, 4.402800000000151e-05, 4.377800000000126e-05, 4.377799999999779e-05, 4.369400000000037e-05, 4.3958999999999665e-05, 4.347199999999926e-05, 4.425000000000262e-05, 4.427799999999829e-05, 4.3888999999998346e-05, 4.434800000000308e-05, 4.409799999999936e-05, 4.358399999999929e-05, 4.3403000000000885e-05, 4.3903000000001385e-05, 4.35129999999985e-05, 4.4110999999999456e-05, 4.343000000000055e-05, 4.367999999999733e-05, 4.401399999999847e-05, 4.375000000000212e-05, 4.3889000000001815e-05, 4.398599999999933e-05, 4.3582999999999816e-05, 4.3582999999999816e-05, 4.3902999999997916e-05, 4.4347000000000136e-05, 4.3917000000000955e-05, 4.4181000000000775e-05, 4.434799999999961e-05, 4.426399999999872e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.195" endtime="20201117 14:41:10.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.190" endtime="20201117 14:41:10.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.200" endtime="20201117 14:41:10.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.203" endtime="20201117 14:41:10.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.202" endtime="20201117 14:41:10.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.198" endtime="20201117 14:41:10.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.830" endtime="20201117 14:41:10.225"></status>
</kw>
<msg timestamp="20201117 14:41:10.225" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.233" endtime="20201117 14:41:10.250"></status>
</kw>
<msg timestamp="20201117 14:41:10.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.232" endtime="20201117 14:41:10.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.252" endtime="20201117 14:41:10.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.254" endtime="20201117 14:41:10.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.229" endtime="20201117 14:41:10.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.227" endtime="20201117 14:41:10.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.265" endtime="20201117 14:41:10.551"></status>
</kw>
<msg timestamp="20201117 14:41:10.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.263" endtime="20201117 14:41:10.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.555" endtime="20201117 14:41:10.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.564" endtime="20201117 14:41:10.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.260" endtime="20201117 14:41:10.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.258" endtime="20201117 14:41:10.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.571" level="INFO">${RESULT} = [{'time': 0.022638167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3931000000000525e-05, 'source_diff': 4.3931000000000525e-05}, {'time': 0.022697181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.567" endtime="20201117 14:41:10.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:10.572" endtime="20201117 14:41:10.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.589" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.588" endtime="20201117 14:41:10.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.592" level="INFO">VALUE: [4.3931000000000525e-05, 4.376400000000169e-05, 4.351399999999797e-05, 4.345799999999969e-05, 4.415200000000216e-05, 4.352800000000101e-05, 4.424999999999915e-05, 4.4083000000000316e-05, 4.3596999999999386e-05, 4.4096999999999886e-05, 4.4096999999999886e-05, 4.427799999999829e-05, 4.4319000000000996e-05, 4.376400000000169e-05, 4.3388999999997846e-05, 4.384800000000258e-05, 4.383399999999954e-05, 4.3666999999997236e-05, 4.39999999999989e-05, 4.374999999999865e-05, 4.425000000000262e-05, 4.3582999999999816e-05, 4.390199999999844e-05, 4.4319000000000996e-05, 4.375000000000212e-05, 4.427799999999829e-05, 4.3472999999998735e-05, 4.3652999999997666e-05, 4.4319000000000996e-05, 4.3902999999997916e-05, 4.4181000000000775e-05, 4.4167000000001205e-05, 4.3681000000000275e-05, 4.436199999999918e-05, 4.409799999999936e-05, 4.345799999999969e-05, 4.372199999999951e-05, 4.345799999999969e-05, 4.4083000000000316e-05, 4.424999999999915e-05, 4.391600000000148e-05, 4.367999999999733e-05, 4.351400000000144e-05, 4.402800000000151e-05, 4.3582999999999816e-05, 4.3388999999997846e-05, 4.3681000000000275e-05, 4.373600000000255e-05, 4.391600000000148e-05, 4.379100000000136e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.590" endtime="20201117 14:41:10.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.585" endtime="20201117 14:41:10.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.595" endtime="20201117 14:41:10.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.599" endtime="20201117 14:41:10.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.597" endtime="20201117 14:41:10.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.593" endtime="20201117 14:41:10.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.225" endtime="20201117 14:41:10.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.828" endtime="20201117 14:41:10.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:09.827" endtime="20201117 14:41:10.621"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.623" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.632" endtime="20201117 14:41:10.650"></status>
</kw>
<msg timestamp="20201117 14:41:10.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.630" endtime="20201117 14:41:10.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:10.652" endtime="20201117 14:41:10.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.654" endtime="20201117 14:41:10.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.627" endtime="20201117 14:41:10.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.625" endtime="20201117 14:41:10.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.664" endtime="20201117 14:41:10.950"></status>
</kw>
<msg timestamp="20201117 14:41:10.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026035292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026079931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.662" endtime="20201117 14:41:10.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026035292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026079931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:10.954" endtime="20201117 14:41:10.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.963" endtime="20201117 14:41:10.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.659" endtime="20201117 14:41:10.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.658" endtime="20201117 14:41:10.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:10.970" level="INFO">${RESULT} = [{'time': 0.026079931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4638999999999096e-05, 'source_diff': 4.4638999999999096e-05}, {'time': 0.026138944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:10.966" endtime="20201117 14:41:10.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:10.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:10.971" endtime="20201117 14:41:10.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.989" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:10.988" endtime="20201117 14:41:10.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:10.992" level="INFO">VALUE: [4.4638999999999096e-05, 4.4597000000000386e-05, 4.491599999999901e-05, 4.48329999999976e-05, 4.441599999999851e-05, 4.49999999999999e-05, 4.4402999999998416e-05, 4.534699999999767e-05, 4.4430999999997556e-05, 4.4624999999999526e-05, 4.481899999999803e-05, 4.5097000000000886e-05, 4.474999999999965e-05, 4.479199999999836e-05, 4.5138999999999596e-05, 4.4417000000001455e-05, 4.484800000000011e-05, 4.508400000000079e-05, 4.4416999999997986e-05, 4.448599999999983e-05, 4.441599999999851e-05, 4.501399999999947e-05, 4.5111000000000456e-05, 4.474999999999965e-05, 4.476400000000269e-05, 4.4931000000001525e-05, 4.501399999999947e-05, 4.4388999999998846e-05, 4.498600000000033e-05, 4.522199999999754e-05, 4.475000000000312e-05, 4.522200000000101e-05, 4.525000000000015e-05, 4.523600000000058e-05, 4.4417000000001455e-05, 4.530499999999896e-05, 4.456899999999778e-05, 4.493000000000205e-05, 4.51939999999984e-05, 4.44999999999994e-05, 4.4403000000001885e-05, 4.5361000000000706e-05, 4.476400000000269e-05, 4.4638999999999096e-05, 4.474999999999965e-05, 4.4695000000000845e-05, 4.445799999999722e-05, 4.501399999999947e-05, 4.4610999999999956e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:41:10.991" endtime="20201117 14:41:10.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.986" endtime="20201117 14:41:10.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:10.996" endtime="20201117 14:41:10.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:10.999" endtime="20201117 14:41:11.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.998" endtime="20201117 14:41:11.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.994" endtime="20201117 14:41:11.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.624" endtime="20201117 14:41:11.020"></status>
</kw>
<msg timestamp="20201117 14:41:11.020" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.029" endtime="20201117 14:41:11.047"></status>
</kw>
<msg timestamp="20201117 14:41:11.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.027" endtime="20201117 14:41:11.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.049" endtime="20201117 14:41:11.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.051" endtime="20201117 14:41:11.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.025" endtime="20201117 14:41:11.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.023" endtime="20201117 14:41:11.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.062" endtime="20201117 14:41:11.349"></status>
</kw>
<msg timestamp="20201117 14:41:11.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.060" endtime="20201117 14:41:11.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.353" endtime="20201117 14:41:11.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.362" endtime="20201117 14:41:11.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.058" endtime="20201117 14:41:11.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.056" endtime="20201117 14:41:11.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.368" level="INFO">${RESULT} = [{'time': 0.022710056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4959000000000665e-05, 'source_diff': 4.4959000000000665e-05}, {'time': 0.022770069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.365" endtime="20201117 14:41:11.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:11.369" endtime="20201117 14:41:11.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.387" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.386" endtime="20201117 14:41:11.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.390" level="INFO">VALUE: [4.4959000000000665e-05, 4.441600000000198e-05, 4.501399999999947e-05, 4.443000000000155e-05, 4.450000000000287e-05, 4.491599999999901e-05, 4.467999999999833e-05, 4.4847000000000636e-05, 4.4638999999999096e-05, 4.4931000000001525e-05, 4.5152999999999166e-05, 4.4861000000000206e-05, 4.452799999999854e-05, 4.4402999999998416e-05, 4.4666999999998236e-05, 4.501399999999947e-05, 4.508400000000079e-05, 4.476299999999975e-05, 4.525000000000015e-05, 4.476399999999922e-05, 4.511099999999699e-05, 4.5083000000001316e-05, 4.5083000000001316e-05, 4.526399999999972e-05, 4.502800000000251e-05, 4.526399999999972e-05, 4.525000000000015e-05, 4.509699999999742e-05, 4.4625000000002996e-05, 4.459799999999986e-05, 4.458400000000029e-05, 4.506999999999775e-05, 4.495799999999772e-05, 4.502699999999957e-05, 4.4597000000000386e-05, 4.490199999999944e-05, 4.501399999999947e-05, 4.525000000000015e-05, 4.529199999999886e-05, 4.491600000000248e-05, 4.49999999999999e-05, 4.4917000000001955e-05, 4.5319000000001997e-05, 4.4431000000001025e-05, 4.44999999999994e-05, 4.4945000000001095e-05, 4.532000000000147e-05, 4.4430999999997556e-05, 4.49999999999999e-05, 4.476299999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.388" endtime="20201117 14:41:11.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.383" endtime="20201117 14:41:11.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.393" endtime="20201117 14:41:11.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.397" endtime="20201117 14:41:11.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.395" endtime="20201117 14:41:11.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.392" endtime="20201117 14:41:11.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.021" endtime="20201117 14:41:11.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.622" endtime="20201117 14:41:11.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:10.621" endtime="20201117 14:41:11.418"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.421" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.429" endtime="20201117 14:41:11.447"></status>
</kw>
<msg timestamp="20201117 14:41:11.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.428" endtime="20201117 14:41:11.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.449" endtime="20201117 14:41:11.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.451" endtime="20201117 14:41:11.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.425" endtime="20201117 14:41:11.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.423" endtime="20201117 14:41:11.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.461" endtime="20201117 14:41:11.748"></status>
</kw>
<msg timestamp="20201117 14:41:11.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.459" endtime="20201117 14:41:11.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.752" endtime="20201117 14:41:11.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.761" endtime="20201117 14:41:11.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.456" endtime="20201117 14:41:11.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.455" endtime="20201117 14:41:11.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:11.767" level="INFO">${RESULT} = [{'time': 0.024972375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6361000000001706e-05, 'source_diff': 4.6361000000001706e-05}, {'time': 0.025037319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:11.764" endtime="20201117 14:41:11.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:11.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:11.769" endtime="20201117 14:41:11.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.786" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:11.785" endtime="20201117 14:41:11.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.789" level="INFO">VALUE: [4.6361000000001706e-05, 4.55000000000004e-05, 4.626400000000072e-05, 4.608299999999885e-05, 4.558299999999835e-05, 4.591600000000001e-05, 4.601400000000047e-05, 4.559699999999792e-05, 4.611200000000093e-05, 4.6097000000001886e-05, 4.5709000000001415e-05, 4.561099999999749e-05, 4.5902999999999916e-05, 4.6180999999999306e-05, 4.598600000000133e-05, 4.5402999999999416e-05, 4.5652999999999666e-05, 4.5666999999999236e-05, 4.55000000000004e-05, 4.556899999999878e-05, 4.559699999999792e-05, 4.5569000000002247e-05, 4.594400000000262e-05, 4.58329999999986e-05, 4.580599999999893e-05, 4.555499999999921e-05, 4.576400000000022e-05, 4.5583000000001817e-05, 4.5611000000000956e-05, 4.5597000000001386e-05, 4.5930999999999056e-05, 4.5681000000002275e-05, 4.598600000000133e-05, 4.5930999999999056e-05, 4.569400000000237e-05, 4.583399999999807e-05, 4.572199999999804e-05, 4.6153000000000166e-05, 4.576399999999675e-05, 4.594399999999915e-05, 4.6139000000000596e-05, 4.5861000000001206e-05, 4.5875000000000776e-05, 4.6347000000002136e-05, 4.558299999999835e-05, 4.576400000000022e-05, 4.608299999999885e-05, 4.558399999999782e-05, 4.558399999999782e-05, 4.625000000000115e-05]</msg>
<status status="PASS" starttime="20201117 14:41:11.787" endtime="20201117 14:41:11.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.782" endtime="20201117 14:41:11.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.793" endtime="20201117 14:41:11.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:11.796" endtime="20201117 14:41:11.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.794" endtime="20201117 14:41:11.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.791" endtime="20201117 14:41:11.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.421" endtime="20201117 14:41:11.817"></status>
</kw>
<msg timestamp="20201117 14:41:11.817" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.826" endtime="20201117 14:41:11.843"></status>
</kw>
<msg timestamp="20201117 14:41:11.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.824" endtime="20201117 14:41:11.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:11.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:11.844" endtime="20201117 14:41:11.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.847" endtime="20201117 14:41:11.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.822" endtime="20201117 14:41:11.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.819" endtime="20201117 14:41:11.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:11.858" endtime="20201117 14:41:12.144"></status>
</kw>
<msg timestamp="20201117 14:41:12.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:11.856" endtime="20201117 14:41:12.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.149" endtime="20201117 14:41:12.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.157" endtime="20201117 14:41:12.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.853" endtime="20201117 14:41:12.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.852" endtime="20201117 14:41:12.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.164" level="INFO">${RESULT} = [{'time': 0.022458111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.545799999999822e-05, 'source_diff': 4.545799999999822e-05}, {'time': 0.022520167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.161" endtime="20201117 14:41:12.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:12.165" endtime="20201117 14:41:12.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.184" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.183" endtime="20201117 14:41:12.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.186" level="INFO">VALUE: [4.545799999999822e-05, 4.6319999999999e-05, 4.624999999999768e-05, 4.626400000000072e-05, 4.609699999999842e-05, 4.608399999999832e-05, 4.5930999999999056e-05, 4.5681000000002275e-05, 4.583399999999807e-05, 4.604199999999961e-05, 4.608399999999832e-05, 4.592999999999958e-05, 4.561099999999749e-05, 4.566599999999976e-05, 4.636099999999824e-05, 4.626400000000072e-05, 4.629199999999986e-05, 4.629199999999986e-05, 4.5902999999999916e-05, 4.6180999999999306e-05, 4.5652999999999666e-05, 4.6166999999999736e-05, 4.58329999999986e-05, 4.558399999999782e-05, 4.575000000000065e-05, 4.5944999999998626e-05, 4.6195000000002345e-05, 4.558400000000129e-05, 4.597200000000176e-05, 4.60000000000009e-05, 4.602700000000057e-05, 4.575000000000065e-05, 4.623599999999811e-05, 4.608299999999885e-05, 4.577800000000326e-05, 4.622199999999854e-05, 4.5375000000000276e-05, 4.58329999999986e-05, 4.572200000000151e-05, 4.625000000000115e-05, 4.607000000000222e-05, 4.629100000000039e-05, 4.558400000000129e-05, 4.576300000000075e-05, 4.555499999999921e-05, 4.55130000000005e-05, 4.5583000000001817e-05, 4.626400000000072e-05, 4.626399999999725e-05, 4.558299999999835e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.185" endtime="20201117 14:41:12.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.180" endtime="20201117 14:41:12.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.190" endtime="20201117 14:41:12.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.193" endtime="20201117 14:41:12.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.192" endtime="20201117 14:41:12.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.188" endtime="20201117 14:41:12.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.818" endtime="20201117 14:41:12.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.419" endtime="20201117 14:41:12.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:11.418" endtime="20201117 14:41:12.215"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.217" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.226" endtime="20201117 14:41:12.244"></status>
</kw>
<msg timestamp="20201117 14:41:12.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.224" endtime="20201117 14:41:12.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.245" endtime="20201117 14:41:12.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.248" endtime="20201117 14:41:12.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.221" endtime="20201117 14:41:12.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.219" endtime="20201117 14:41:12.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.257" endtime="20201117 14:41:12.544"></status>
</kw>
<msg timestamp="20201117 14:41:12.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025853375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025900514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.256" endtime="20201117 14:41:12.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025853375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025900514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.549" endtime="20201117 14:41:12.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.557" endtime="20201117 14:41:12.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.253" endtime="20201117 14:41:12.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.251" endtime="20201117 14:41:12.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.569" level="INFO">${RESULT} = [{'time': 0.025900514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.713899999999813e-05, 'source_diff': 4.713899999999813e-05}, {'time': 0.025970542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.565" endtime="20201117 14:41:12.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:12.570" endtime="20201117 14:41:12.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.589" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.588" endtime="20201117 14:41:12.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.592" level="INFO">VALUE: [4.713899999999813e-05, 4.6444999999999126e-05, 4.734699999999967e-05, 4.658400000000229e-05, 4.659799999999839e-05, 4.6889000000001346e-05, 4.684699999999917e-05, 4.6403000000000416e-05, 4.668000000000033e-05, 4.716600000000126e-05, 4.706999999999975e-05, 4.658299999999935e-05, 4.647199999999879e-05, 4.716600000000126e-05, 4.73330000000001e-05, 4.6430999999999556e-05, 4.7180999999996837e-05, 4.6931000000000056e-05, 4.648599999999836e-05, 4.727800000000129e-05, 4.645799999999922e-05, 4.65000000000014e-05, 4.725000000000215e-05, 4.658399999999882e-05, 4.724999999999868e-05, 4.676399999999775e-05, 4.693000000000058e-05, 4.736099999999924e-05, 4.727799999999782e-05, 4.720799999999997e-05, 4.6680999999999806e-05, 4.70000000000019e-05, 4.6430999999999556e-05, 4.6847000000002637e-05, 4.657000000000272e-05, 4.659699999999892e-05, 4.726399999999825e-05, 4.677800000000079e-05, 4.658400000000229e-05, 4.688899999999788e-05, 4.6653000000000666e-05, 4.688899999999788e-05, 4.675000000000165e-05, 4.690199999999797e-05, 4.652800000000054e-05, 4.676399999999775e-05, 4.709699999999942e-05, 4.708299999999985e-05, 4.6931000000000056e-05, 4.732e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.590" endtime="20201117 14:41:12.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.585" endtime="20201117 14:41:12.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.595" endtime="20201117 14:41:12.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.599" endtime="20201117 14:41:12.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.597" endtime="20201117 14:41:12.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.593" endtime="20201117 14:41:12.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.218" endtime="20201117 14:41:12.619"></status>
</kw>
<msg timestamp="20201117 14:41:12.620" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.628" endtime="20201117 14:41:12.646"></status>
</kw>
<msg timestamp="20201117 14:41:12.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.627" endtime="20201117 14:41:12.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:12.648" endtime="20201117 14:41:12.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.650" endtime="20201117 14:41:12.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.624" endtime="20201117 14:41:12.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.622" endtime="20201117 14:41:12.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.661" endtime="20201117 14:41:12.947"></status>
</kw>
<msg timestamp="20201117 14:41:12.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.659" endtime="20201117 14:41:12.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:12.951" endtime="20201117 14:41:12.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.961" endtime="20201117 14:41:12.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.656" endtime="20201117 14:41:12.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.654" endtime="20201117 14:41:12.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:12.967" level="INFO">${RESULT} = [{'time': 0.022464889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729199999999739e-05, 'source_diff': 4.729199999999739e-05}, {'time': 0.022534875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:12.964" endtime="20201117 14:41:12.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:12.981" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:12.968" endtime="20201117 14:41:12.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.986" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:41:12.985" endtime="20201117 14:41:12.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:12.989" level="INFO">VALUE: [4.729199999999739e-05, 4.699999999999843e-05, 4.659699999999892e-05, 4.6917000000000486e-05, 4.651400000000097e-05, 4.6416999999999986e-05, 4.649999999999793e-05, 4.725000000000215e-05, 4.708399999999932e-05, 4.694400000000015e-05, 4.70000000000019e-05, 4.661099999999849e-05, 4.691600000000101e-05, 4.701400000000147e-05, 4.658299999999935e-05, 4.7153000000001166e-05, 4.679200000000036e-05, 4.724999999999868e-05, 4.655599999999968e-05, 4.673599999999861e-05, 4.713799999999865e-05, 4.708400000000279e-05, 4.659800000000186e-05, 4.6917000000000486e-05, 4.7167000000000736e-05, 4.668000000000033e-05, 4.677700000000132e-05, 4.6875000000001776e-05, 4.649999999999793e-05, 4.709699999999942e-05, 4.724999999999868e-05, 4.674999999999818e-05, 4.658299999999935e-05, 4.6931000000000056e-05, 4.70000000000019e-05, 4.726399999999825e-05, 4.723600000000258e-05, 4.6917000000000486e-05, 4.6667000000000236e-05, 4.65139999999975e-05, 4.6430999999999556e-05, 4.6987000000001805e-05, 4.708299999999985e-05, 4.7111000000002456e-05, 4.641600000000051e-05, 4.667999999999686e-05, 4.6653000000000666e-05, 4.648600000000183e-05, 4.675000000000165e-05, 4.6931000000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:41:12.987" endtime="20201117 14:41:12.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.982" endtime="20201117 14:41:12.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:12.992" endtime="20201117 14:41:12.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:12.996" endtime="20201117 14:41:13.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.994" endtime="20201117 14:41:13.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.990" endtime="20201117 14:41:13.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.620" endtime="20201117 14:41:13.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.216" endtime="20201117 14:41:13.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:12.215" endtime="20201117 14:41:13.017"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.019" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.028" endtime="20201117 14:41:13.046"></status>
</kw>
<msg timestamp="20201117 14:41:13.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.026" endtime="20201117 14:41:13.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.047" endtime="20201117 14:41:13.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.050" endtime="20201117 14:41:13.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.024" endtime="20201117 14:41:13.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.021" endtime="20201117 14:41:13.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.060" endtime="20201117 14:41:13.346"></status>
</kw>
<msg timestamp="20201117 14:41:13.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.058" endtime="20201117 14:41:13.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025121972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.351" endtime="20201117 14:41:13.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.359" endtime="20201117 14:41:13.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.055" endtime="20201117 14:41:13.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.053" endtime="20201117 14:41:13.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.366" level="INFO">${RESULT} = [{'time': 0.025121972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.813899999999913e-05, 'source_diff': 4.813899999999913e-05}, {'time': 0.025190972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.363" endtime="20201117 14:41:13.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:13.367" endtime="20201117 14:41:13.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.385" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.384" endtime="20201117 14:41:13.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.387" level="INFO">VALUE: [4.813899999999913e-05, 4.808299999999738e-05, 4.8153000000002166e-05, 4.794399999999768e-05, 4.8013999999999e-05, 4.7430999999997087e-05, 4.840199999999947e-05, 4.7403000000001416e-05, 4.798599999999986e-05, 4.758399999999982e-05, 4.776399999999875e-05, 4.759699999999992e-05, 4.808400000000032e-05, 4.758400000000329e-05, 4.809700000000042e-05, 4.824999999999968e-05, 4.824999999999968e-05, 4.772200000000004e-05, 4.802800000000204e-05, 4.827800000000229e-05, 4.774999999999918e-05, 4.793099999999759e-05, 4.816699999999827e-05, 4.802799999999857e-05, 4.774999999999918e-05, 4.777800000000179e-05, 4.775000000000265e-05, 4.7431000000000556e-05, 4.780599999999746e-05, 4.824999999999968e-05, 4.824999999999968e-05, 4.761099999999949e-05, 4.784799999999964e-05, 4.758300000000035e-05, 4.798599999999986e-05, 4.76940000000009e-05, 4.798599999999986e-05, 4.774999999999918e-05, 4.773600000000308e-05, 4.7431000000000556e-05, 4.8153000000002166e-05, 4.805499999999824e-05, 4.761200000000243e-05, 4.745800000000022e-05, 4.769399999999743e-05, 4.76529999999982e-05, 4.784700000000017e-05, 4.824999999999968e-05, 4.756900000000078e-05, 4.742999999999761e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.386" endtime="20201117 14:41:13.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.381" endtime="20201117 14:41:13.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.391" endtime="20201117 14:41:13.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.394" endtime="20201117 14:41:13.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.393" endtime="20201117 14:41:13.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.389" endtime="20201117 14:41:13.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.020" endtime="20201117 14:41:13.415"></status>
</kw>
<msg timestamp="20201117 14:41:13.415" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.424" endtime="20201117 14:41:13.441"></status>
</kw>
<msg timestamp="20201117 14:41:13.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.422" endtime="20201117 14:41:13.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.443" endtime="20201117 14:41:13.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.446" endtime="20201117 14:41:13.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.420" endtime="20201117 14:41:13.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.417" endtime="20201117 14:41:13.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.456" endtime="20201117 14:41:13.743"></status>
</kw>
<msg timestamp="20201117 14:41:13.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.455" endtime="20201117 14:41:13.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022204972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.748" endtime="20201117 14:41:13.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.756" endtime="20201117 14:41:13.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.452" endtime="20201117 14:41:13.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.450" endtime="20201117 14:41:13.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:13.763" level="INFO">${RESULT} = [{'time': 0.022253278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.830600000000143e-05, 'source_diff': 4.830600000000143e-05}, {'time': 0.022320264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:13.760" endtime="20201117 14:41:13.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:13.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:13.764" endtime="20201117 14:41:13.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.782" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:41:13.781" endtime="20201117 14:41:13.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.784" level="INFO">VALUE: [4.830600000000143e-05, 4.799999999999943e-05, 4.791699999999802e-05, 4.784799999999964e-05, 4.774999999999918e-05, 4.794400000000115e-05, 4.836100000000024e-05, 4.808300000000085e-05, 4.806900000000128e-05, 4.777800000000179e-05, 4.825000000000315e-05, 4.826399999999925e-05, 4.776399999999875e-05, 4.791699999999802e-05, 4.83330000000011e-05, 4.808300000000085e-05, 4.811099999999999e-05, 4.758300000000035e-05, 4.7431000000000556e-05, 4.8209000000000446e-05, 4.7417000000000986e-05, 4.748600000000283e-05, 4.758399999999982e-05, 4.791600000000201e-05, 4.819399999999793e-05, 4.831899999999806e-05, 4.809699999999695e-05, 4.776400000000222e-05, 4.808300000000085e-05, 4.761099999999949e-05, 4.824999999999968e-05, 4.738899999999838e-05, 4.748599999999936e-05, 4.809700000000042e-05, 4.823600000000011e-05, 4.758400000000329e-05, 4.7931000000001056e-05, 4.783400000000007e-05, 4.807000000000075e-05, 4.7736999999999086e-05, 4.806899999999781e-05, 4.774999999999918e-05, 4.824999999999968e-05, 4.809700000000042e-05, 4.824999999999968e-05, 4.759699999999992e-05, 4.7639000000002096e-05, 4.824999999999968e-05, 4.774999999999918e-05, 4.826399999999925e-05]</msg>
<status status="PASS" starttime="20201117 14:41:13.783" endtime="20201117 14:41:13.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.778" endtime="20201117 14:41:13.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.788" endtime="20201117 14:41:13.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:13.791" endtime="20201117 14:41:13.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.790" endtime="20201117 14:41:13.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.786" endtime="20201117 14:41:13.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.416" endtime="20201117 14:41:13.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.018" endtime="20201117 14:41:13.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.017" endtime="20201117 14:41:13.812"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.815" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.824" endtime="20201117 14:41:13.842"></status>
</kw>
<msg timestamp="20201117 14:41:13.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.822" endtime="20201117 14:41:13.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:13.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:13.844" endtime="20201117 14:41:13.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.846" endtime="20201117 14:41:13.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.819" endtime="20201117 14:41:13.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.817" endtime="20201117 14:41:13.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:13.856" endtime="20201117 14:41:14.141"></status>
</kw>
<msg timestamp="20201117 14:41:14.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026195875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026245167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:13.854" endtime="20201117 14:41:14.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026195875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026245167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.145" endtime="20201117 14:41:14.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.153" endtime="20201117 14:41:14.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.851" endtime="20201117 14:41:14.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.850" endtime="20201117 14:41:14.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.160" level="INFO">${RESULT} = [{'time': 0.026245167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.929199999999939e-05, 'source_diff': 4.929199999999939e-05}, {'time': 0.026311153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:14.157" endtime="20201117 14:41:14.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.176" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:14.161" endtime="20201117 14:41:14.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.180" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.179" endtime="20201117 14:41:14.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.183" level="INFO">VALUE: [4.929199999999939e-05, 4.866699999999877e-05, 4.916699999999927e-05, 4.92079999999985e-05, 4.93339999999981e-05, 4.891599999999954e-05, 4.88330000000016e-05, 4.891600000000301e-05, 4.900000000000043e-05, 4.909699999999795e-05, 4.923600000000111e-05, 4.873600000000061e-05, 4.879199999999889e-05, 4.837499999999981e-05, 4.85139999999995e-05, 4.875000000000018e-05, 4.8931000000002056e-05, 4.916699999999927e-05, 4.916699999999927e-05, 4.912499999999709e-05, 4.86940000000019e-05, 4.91940000000024e-05, 4.940299999999995e-05, 4.842999999999861e-05, 4.849999999999993e-05, 4.912500000000056e-05, 4.891699999999902e-05, 4.930599999999896e-05, 4.877799999999932e-05, 4.875000000000018e-05, 4.919499999999841e-05, 4.876399999999975e-05, 4.908399999999785e-05, 4.840299999999895e-05, 4.900000000000043e-05, 4.858400000000082e-05, 4.843000000000208e-05, 4.93330000000021e-05, 4.925000000000068e-05, 4.838899999999938e-05, 4.866599999999929e-05, 4.930499999999949e-05, 4.925000000000068e-05, 4.923600000000111e-05, 4.904200000000261e-05, 4.891699999999902e-05, 4.9014e-05, 4.859700000000092e-05, 4.875000000000018e-05, 4.8403000000002416e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.181" endtime="20201117 14:41:14.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.177" endtime="20201117 14:41:14.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.186" endtime="20201117 14:41:14.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.190" endtime="20201117 14:41:14.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.188" endtime="20201117 14:41:14.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.184" endtime="20201117 14:41:14.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.815" endtime="20201117 14:41:14.211"></status>
</kw>
<msg timestamp="20201117 14:41:14.211" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.220" endtime="20201117 14:41:14.237"></status>
</kw>
<msg timestamp="20201117 14:41:14.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.218" endtime="20201117 14:41:14.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.239" endtime="20201117 14:41:14.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.242" endtime="20201117 14:41:14.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.216" endtime="20201117 14:41:14.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.213" endtime="20201117 14:41:14.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.252" endtime="20201117 14:41:14.539"></status>
</kw>
<msg timestamp="20201117 14:41:14.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:14.251" endtime="20201117 14:41:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:14.544" endtime="20201117 14:41:14.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.552" endtime="20201117 14:41:14.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.248" endtime="20201117 14:41:14.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.246" endtime="20201117 14:41:14.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.559" level="INFO">${RESULT} = [{'time': 0.022870556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930599999999896e-05, 'source_diff': 4.930599999999896e-05}, {'time': 0.022941542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:14.556" endtime="20201117 14:41:14.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.573" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:14.560" endtime="20201117 14:41:14.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.578" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.576" endtime="20201117 14:41:14.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.580" level="INFO">VALUE: [4.930599999999896e-05, 4.866699999999877e-05, 4.922200000000154e-05, 4.91529999999997e-05, 4.929099999999992e-05, 4.892999999999911e-05, 4.884700000000117e-05, 4.861100000000049e-05, 4.854099999999917e-05, 4.909699999999795e-05, 4.884700000000117e-05, 4.894400000000215e-05, 4.925000000000068e-05, 4.890299999999945e-05, 4.86529999999992e-05, 4.916699999999927e-05, 4.916699999999927e-05, 4.916699999999927e-05, 4.931899999999906e-05, 4.925000000000068e-05, 4.891599999999954e-05, 4.916599999999979e-05, 4.866599999999929e-05, 4.936100000000124e-05, 4.924999999999721e-05, 4.841699999999852e-05, 4.8653000000002666e-05, 4.912500000000056e-05, 4.898600000000086e-05, 4.8695000000001376e-05, 4.911100000000099e-05, 4.908400000000132e-05, 4.847200000000079e-05, 4.848600000000036e-05, 4.876300000000028e-05, 4.840299999999895e-05, 4.913800000000065e-05, 4.886100000000074e-05, 4.890199999999997e-05, 4.93469999999982e-05, 4.909700000000142e-05, 4.926400000000025e-05, 4.838899999999938e-05, 4.934700000000167e-05, 4.861100000000049e-05, 4.8958999999997727e-05, 4.868099999999834e-05, 4.883400000000107e-05, 4.876399999999975e-05, 4.890299999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.579" endtime="20201117 14:41:14.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.574" endtime="20201117 14:41:14.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.584" endtime="20201117 14:41:14.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.588" endtime="20201117 14:41:14.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.586" endtime="20201117 14:41:14.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.582" endtime="20201117 14:41:14.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.212" endtime="20201117 14:41:14.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.814" endtime="20201117 14:41:14.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:13.813" endtime="20201117 14:41:14.609"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.612" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.620" endtime="20201117 14:41:14.638"></status>
</kw>
<msg timestamp="20201117 14:41:14.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.618" endtime="20201117 14:41:14.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:14.639" endtime="20201117 14:41:14.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.642" endtime="20201117 14:41:14.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.616" endtime="20201117 14:41:14.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.614" endtime="20201117 14:41:14.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.656" endtime="20201117 14:41:14.942"></status>
</kw>
<msg timestamp="20201117 14:41:14.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025422972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.654" endtime="20201117 14:41:14.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025372833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025422972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:14.946" endtime="20201117 14:41:14.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.954" endtime="20201117 14:41:14.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.652" endtime="20201117 14:41:14.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.645" endtime="20201117 14:41:14.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:14.962" level="INFO">${RESULT} = [{'time': 0.025422972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.013899999999766e-05, 'source_diff': 5.013899999999766e-05}, {'time': 0.025489972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:14.958" endtime="20201117 14:41:14.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:14.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:14.963" endtime="20201117 14:41:14.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.980" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:14.979" endtime="20201117 14:41:14.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:14.983" level="INFO">VALUE: [5.013899999999766e-05, 4.990300000000045e-05, 5.000000000000143e-05, 5.025000000000168e-05, 4.959699999999845e-05, 4.959700000000192e-05, 4.998600000000186e-05, 4.9695000000002376e-05, 4.998600000000186e-05, 5.016700000000027e-05, 5.023600000000211e-05, 4.991700000000002e-05, 5.018000000000036e-05, 5.0151999999997754e-05, 4.967999999999986e-05, 4.984700000000217e-05, 4.940299999999995e-05, 4.952800000000007e-05, 4.993099999999959e-05, 4.98330000000026e-05, 5.026400000000125e-05, 4.937500000000081e-05, 4.995799999999925e-05, 5.026400000000125e-05, 4.98339999999986e-05, 4.975000000000118e-05, 4.956899999999931e-05, 5.009699999999895e-05, 5.011099999999852e-05, 4.941600000000004e-05, 4.966600000000029e-05, 4.98469999999987e-05, 5.008300000000285e-05, 4.977800000000032e-05, 5.008299999999938e-05, 4.961100000000149e-05, 4.991700000000002e-05, 4.952800000000007e-05, 4.990300000000045e-05, 5.033400000000257e-05, 4.977800000000032e-05, 4.990300000000045e-05, 4.950000000000093e-05, 5.026399999999778e-05, 5.0137999999998184e-05, 4.998599999999839e-05, 5.024999999999821e-05, 4.993000000000011e-05, 4.986100000000174e-05, 4.938900000000038e-05]</msg>
<status status="PASS" starttime="20201117 14:41:14.981" endtime="20201117 14:41:14.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.976" endtime="20201117 14:41:14.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:14.986" endtime="20201117 14:41:14.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:14.990" endtime="20201117 14:41:15.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.988" endtime="20201117 14:41:15.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.985" endtime="20201117 14:41:15.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.612" endtime="20201117 14:41:15.011"></status>
</kw>
<msg timestamp="20201117 14:41:15.011" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.021" endtime="20201117 14:41:15.039"></status>
</kw>
<msg timestamp="20201117 14:41:15.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.019" endtime="20201117 14:41:15.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.041" endtime="20201117 14:41:15.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.044" endtime="20201117 14:41:15.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.016" endtime="20201117 14:41:15.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.014" endtime="20201117 14:41:15.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.054" endtime="20201117 14:41:15.340"></status>
</kw>
<msg timestamp="20201117 14:41:15.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.053" endtime="20201117 14:41:15.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024377417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024427042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.344" endtime="20201117 14:41:15.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.353" endtime="20201117 14:41:15.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.050" endtime="20201117 14:41:15.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.048" endtime="20201117 14:41:15.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.360" level="INFO">${RESULT} = [{'time': 0.024427042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.962500000000106e-05, 'source_diff': 4.962500000000106e-05}, {'time': 0.024501056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:15.356" endtime="20201117 14:41:15.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.373" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:15.361" endtime="20201117 14:41:15.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.378" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.377" endtime="20201117 14:41:15.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.381" level="INFO">VALUE: [4.962500000000106e-05, 4.986200000000121e-05, 4.950000000000093e-05, 4.951300000000103e-05, 4.991600000000054e-05, 4.990300000000045e-05, 5.009700000000242e-05, 4.994399999999968e-05, 4.983299999999913e-05, 5.029200000000039e-05, 5.005599999999971e-05, 4.954199999999964e-05, 4.979199999999989e-05, 5.008399999999885e-05, 4.940299999999995e-05, 5.016700000000027e-05, 4.975000000000118e-05, 4.986100000000174e-05, 4.942999999999961e-05, 5.009699999999895e-05, 4.966600000000029e-05, 4.966600000000029e-05, 5.018000000000036e-05, 5.016600000000079e-05, 5.033299999999963e-05, 4.9431000000002556e-05, 4.979199999999989e-05, 5.027799999999735e-05, 4.9431000000002556e-05, 4.950000000000093e-05, 5.024999999999821e-05, 4.977699999999738e-05, 4.9695000000002376e-05, 4.958399999999835e-05, 5.005500000000024e-05, 4.944399999999918e-05, 4.955599999999921e-05, 4.940200000000047e-05, 5.016600000000079e-05, 5.031900000000006e-05, 4.940299999999995e-05, 5.03469999999992e-05, 4.938900000000038e-05, 5.03469999999992e-05, 4.969499999999891e-05, 5.008400000000232e-05, 4.976400000000075e-05, 4.975000000000118e-05, 4.991700000000002e-05, 5.03339999999991e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.379" endtime="20201117 14:41:15.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.374" endtime="20201117 14:41:15.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.384" endtime="20201117 14:41:15.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.388" endtime="20201117 14:41:15.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.386" endtime="20201117 14:41:15.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.383" endtime="20201117 14:41:15.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.012" endtime="20201117 14:41:15.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.610" endtime="20201117 14:41:15.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:14.609" endtime="20201117 14:41:15.409"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.412" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.420" endtime="20201117 14:41:15.439"></status>
</kw>
<msg timestamp="20201117 14:41:15.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.419" endtime="20201117 14:41:15.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.441" endtime="20201117 14:41:15.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.444" endtime="20201117 14:41:15.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.416" endtime="20201117 14:41:15.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.414" endtime="20201117 14:41:15.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.453" endtime="20201117 14:41:15.740"></status>
</kw>
<msg timestamp="20201117 14:41:15.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.452" endtime="20201117 14:41:15.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025859944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.745" endtime="20201117 14:41:15.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.753" endtime="20201117 14:41:15.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.449" endtime="20201117 14:41:15.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.447" endtime="20201117 14:41:15.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:15.760" level="INFO">${RESULT} = [{'time': 0.025910403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045899999999923e-05, 'source_diff': 5.045899999999923e-05}, {'time': 0.025977403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:15.757" endtime="20201117 14:41:15.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:15.775" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:15.761" endtime="20201117 14:41:15.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.780" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:15.779" endtime="20201117 14:41:15.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.783" level="INFO">VALUE: [5.045899999999923e-05, 5.040300000000095e-05, 5.084799999999917e-05, 5.058399999999935e-05, 5.088899999999841e-05, 5.137499999999934e-05, 5.125000000000268e-05, 5.074999999999871e-05, 5.086099999999927e-05, 5.100000000000243e-05, 5.041600000000104e-05, 5.049999999999846e-05, 5.066600000000129e-05, 5.081900000000056e-05, 5.126399999999878e-05, 5.041700000000052e-05, 5.069400000000043e-05, 5.13340000000001e-05, 5.041700000000052e-05, 5.13340000000001e-05, 5.111100000000299e-05, 5.055499999999727e-05, 5.126399999999878e-05, 5.11530000000017e-05, 5.109699999999995e-05, 5.122200000000007e-05, 5.041700000000052e-05, 5.044400000000018e-05, 5.108300000000038e-05, 5.074999999999871e-05, 5.068100000000034e-05, 5.041700000000052e-05, 5.049999999999846e-05, 5.095800000000025e-05, 5.066700000000077e-05, 5.11669999999978e-05, 5.058400000000282e-05, 5.074999999999871e-05, 5.091600000000154e-05, 5.069499999999991e-05, 5.13470000000002e-05, 5.109699999999995e-05, 5.091700000000102e-05, 5.050000000000193e-05, 5.076399999999828e-05, 5.127800000000182e-05, 5.099999999999896e-05, 5.041700000000052e-05, 5.05140000000015e-05, 5.076399999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:41:15.781" endtime="20201117 14:41:15.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.776" endtime="20201117 14:41:15.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.786" endtime="20201117 14:41:15.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:15.790" endtime="20201117 14:41:15.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.788" endtime="20201117 14:41:15.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.785" endtime="20201117 14:41:15.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.412" endtime="20201117 14:41:15.811"></status>
</kw>
<msg timestamp="20201117 14:41:15.811" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.820" endtime="20201117 14:41:15.837"></status>
</kw>
<msg timestamp="20201117 14:41:15.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.818" endtime="20201117 14:41:15.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:15.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:15.839" endtime="20201117 14:41:15.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.842" endtime="20201117 14:41:15.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.815" endtime="20201117 14:41:15.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.813" endtime="20201117 14:41:15.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:15.852" endtime="20201117 14:41:16.138"></status>
</kw>
<msg timestamp="20201117 14:41:16.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:15.851" endtime="20201117 14:41:16.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022697653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022748958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.142" endtime="20201117 14:41:16.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.151" endtime="20201117 14:41:16.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.848" endtime="20201117 14:41:16.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.846" endtime="20201117 14:41:16.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.158" level="INFO">${RESULT} = [{'time': 0.022748958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.130499999999802e-05, 'source_diff': 5.130499999999802e-05}, {'time': 0.022815972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:16.154" endtime="20201117 14:41:16.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.172" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:16.159" endtime="20201117 14:41:16.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.177" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.176" endtime="20201117 14:41:16.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.179" level="INFO">VALUE: [5.130499999999802e-05, 5.045799999999975e-05, 5.126400000000225e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.093100000000059e-05, 5.116700000000127e-05, 5.118100000000084e-05, 5.097199999999982e-05, 5.037500000000181e-05, 5.069499999999991e-05, 5.099999999999896e-05, 5.126400000000225e-05, 5.124999999999921e-05, 5.059699999999945e-05, 5.105500000000124e-05, 5.091600000000154e-05, 5.118100000000084e-05, 5.094500000000016e-05, 5.08469999999997e-05, 5.058299999999988e-05, 5.091700000000102e-05, 5.099999999999896e-05, 5.111099999999952e-05, 5.043100000000009e-05, 5.050000000000193e-05, 5.123599999999964e-05, 5.061099999999902e-05, 5.056999999999978e-05, 5.059699999999945e-05, 5.0929999999997644e-05, 5.116600000000179e-05, 5.131900000000106e-05, 5.109699999999995e-05, 5.061100000000249e-05, 5.108300000000038e-05, 5.093100000000059e-05, 5.048599999999889e-05, 5.107000000000028e-05, 5.090300000000145e-05, 5.049999999999846e-05, 5.108399999999985e-05, 5.058399999999935e-05, 5.056999999999978e-05, 5.122299999999955e-05, 5.075000000000218e-05, 5.10409999999982e-05, 5.124999999999921e-05, 5.062499999999859e-05, 5.043000000000061e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.178" endtime="20201117 14:41:16.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.173" endtime="20201117 14:41:16.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.183" endtime="20201117 14:41:16.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.186" endtime="20201117 14:41:16.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.185" endtime="20201117 14:41:16.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.181" endtime="20201117 14:41:16.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.812" endtime="20201117 14:41:16.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.410" endtime="20201117 14:41:16.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:15.410" endtime="20201117 14:41:16.207"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.210" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.218" endtime="20201117 14:41:16.235"></status>
</kw>
<msg timestamp="20201117 14:41:16.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.217" endtime="20201117 14:41:16.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.237" endtime="20201117 14:41:16.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.240" endtime="20201117 14:41:16.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.214" endtime="20201117 14:41:16.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.212" endtime="20201117 14:41:16.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.250" endtime="20201117 14:41:16.536"></status>
</kw>
<msg timestamp="20201117 14:41:16.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.248" endtime="20201117 14:41:16.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024916389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024967875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.540" endtime="20201117 14:41:16.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.549" endtime="20201117 14:41:16.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.245" endtime="20201117 14:41:16.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.244" endtime="20201117 14:41:16.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.556" level="INFO">${RESULT} = [{'time': 0.024967875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.148599999999989e-05, 'source_diff': 5.148599999999989e-05}, {'time': 0.025038861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:16.553" endtime="20201117 14:41:16.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:16.557" endtime="20201117 14:41:16.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.575" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.574" endtime="20201117 14:41:16.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.577" level="INFO">VALUE: [5.148599999999989e-05, 5.226399999999978e-05, 5.159700000000045e-05, 5.156899999999784e-05, 5.193100000000159e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.184800000000017e-05, 5.175000000000318e-05, 5.140300000000195e-05, 5.166700000000177e-05, 5.18470000000007e-05, 5.225000000000021e-05, 5.147200000000032e-05, 5.198600000000039e-05, 5.159700000000045e-05, 5.1916000000002543e-05, 5.199999999999996e-05, 5.158300000000088e-05, 5.218099999999837e-05, 5.209700000000095e-05, 5.175000000000318e-05, 5.208400000000085e-05, 5.223600000000064e-05, 5.191699999999855e-05, 5.201399999999953e-05, 5.162499999999959e-05, 5.1916000000002543e-05, 5.1666000000002293e-05, 5.183300000000113e-05, 5.191699999999855e-05, 5.212500000000009e-05, 5.2179999999998894e-05, 5.223700000000012e-05, 5.168100000000134e-05, 5.151399999999903e-05, 5.168100000000134e-05, 5.141700000000152e-05, 5.231999999999806e-05, 5.176399999999928e-05, 5.141700000000152e-05, 5.1679999999998394e-05, 5.227699999999988e-05, 5.173600000000014e-05, 5.176399999999928e-05, 5.1915999999999074e-05, 5.18470000000007e-05, 5.2207999999998034e-05, 5.191700000000202e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.576" endtime="20201117 14:41:16.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.571" endtime="20201117 14:41:16.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.581" endtime="20201117 14:41:16.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.584" endtime="20201117 14:41:16.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.583" endtime="20201117 14:41:16.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.579" endtime="20201117 14:41:16.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.211" endtime="20201117 14:41:16.605"></status>
</kw>
<msg timestamp="20201117 14:41:16.605" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.614" endtime="20201117 14:41:16.631"></status>
</kw>
<msg timestamp="20201117 14:41:16.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.612" endtime="20201117 14:41:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:16.633" endtime="20201117 14:41:16.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.635" endtime="20201117 14:41:16.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.610" endtime="20201117 14:41:16.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.607" endtime="20201117 14:41:16.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.646" endtime="20201117 14:41:16.933"></status>
</kw>
<msg timestamp="20201117 14:41:16.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.644" endtime="20201117 14:41:16.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:16.937" endtime="20201117 14:41:16.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.946" endtime="20201117 14:41:16.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.642" endtime="20201117 14:41:16.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.640" endtime="20201117 14:41:16.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:16.953" level="INFO">${RESULT} = [{'time': 0.022239194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15409999999987e-05, 'source_diff': 5.15409999999987e-05}, {'time': 0.022312139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:16.949" endtime="20201117 14:41:16.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:16.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:16.954" endtime="20201117 14:41:16.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.971" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:41:16.970" endtime="20201117 14:41:16.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:16.974" level="INFO">VALUE: [5.15409999999987e-05, 5.226400000000325e-05, 5.229199999999892e-05, 5.158299999999741e-05, 5.158400000000035e-05, 5.225000000000021e-05, 5.220900000000098e-05, 5.176399999999928e-05, 5.208399999999738e-05, 5.226399999999978e-05, 5.227799999999935e-05, 5.1916000000002543e-05, 5.236100000000077e-05, 5.162499999999959e-05, 5.208299999999791e-05, 5.226399999999978e-05, 5.168100000000134e-05, 5.218100000000184e-05, 5.233299999999816e-05, 5.141700000000152e-05, 5.181999999999756e-05, 5.176400000000275e-05, 5.169400000000143e-05, 5.158400000000035e-05, 5.1415999999998574e-05, 5.218000000000236e-05, 5.168000000000186e-05, 5.233299999999816e-05, 5.226399999999978e-05, 5.209699999999748e-05, 5.1693999999997964e-05, 5.141699999999805e-05, 5.218100000000184e-05, 5.149999999999946e-05, 5.194500000000116e-05, 5.16530000000022e-05, 5.18340000000006e-05, 5.225000000000021e-05, 5.137499999999934e-05, 5.1679999999998394e-05, 5.199999999999996e-05, 5.144400000000118e-05, 5.236100000000077e-05, 5.225000000000021e-05, 5.176399999999928e-05, 5.144500000000066e-05, 5.166700000000177e-05, 5.186100000000027e-05, 5.175000000000318e-05, 5.161100000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:41:16.973" endtime="20201117 14:41:16.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.968" endtime="20201117 14:41:16.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:16.977" endtime="20201117 14:41:16.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:16.981" endtime="20201117 14:41:17.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.979" endtime="20201117 14:41:17.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.976" endtime="20201117 14:41:17.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.606" endtime="20201117 14:41:17.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.209" endtime="20201117 14:41:17.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:16.208" endtime="20201117 14:41:17.002"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.005" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.013" endtime="20201117 14:41:17.031"></status>
</kw>
<msg timestamp="20201117 14:41:17.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.012" endtime="20201117 14:41:17.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.033" endtime="20201117 14:41:17.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.035" endtime="20201117 14:41:17.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.009" endtime="20201117 14:41:17.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.007" endtime="20201117 14:41:17.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.045" endtime="20201117 14:41:17.332"></status>
</kw>
<msg timestamp="20201117 14:41:17.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025832333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.044" endtime="20201117 14:41:17.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025832333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.336" endtime="20201117 14:41:17.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.345" endtime="20201117 14:41:17.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.040" endtime="20201117 14:41:17.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.039" endtime="20201117 14:41:17.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.351" level="INFO">${RESULT} = [{'time': 0.025832333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.313900000000066e-05, 'source_diff': 5.313900000000066e-05}, {'time': 0.025902333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:17.348" endtime="20201117 14:41:17.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:17.352" endtime="20201117 14:41:17.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.371" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.370" endtime="20201117 14:41:17.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.374" level="INFO">VALUE: [5.313900000000066e-05, 5.325000000000121e-05, 5.276400000000028e-05, 5.325000000000121e-05, 5.259699999999798e-05, 5.309700000000195e-05, 5.277799999999985e-05, 5.276400000000028e-05, 5.241699999999905e-05, 5.315300000000023e-05, 5.3013999999997063e-05, 5.277799999999985e-05, 5.3249999999997744e-05, 5.2930000000003113e-05, 5.283399999999813e-05, 5.323600000000164e-05, 5.25409999999997e-05, 5.2415999999999574e-05, 5.3179999999999894e-05, 5.250000000000046e-05, 5.305600000000271e-05, 5.327800000000035e-05, 5.309699999999848e-05, 5.243100000000209e-05, 5.31669999999998e-05, 5.284699999999823e-05, 5.3249999999997744e-05, 5.241699999999905e-05, 5.28470000000017e-05, 5.281900000000256e-05, 5.259700000000145e-05, 5.258300000000188e-05, 5.259699999999798e-05, 5.2415999999999574e-05, 5.3166000000000324e-05, 5.251400000000003e-05, 5.261099999999755e-05, 5.293100000000259e-05, 5.281899999999909e-05, 5.291699999999955e-05, 5.250000000000046e-05, 5.309799999999795e-05, 5.244500000000166e-05, 5.340300000000048e-05, 5.290299999999998e-05, 5.3166000000000324e-05, 5.284699999999823e-05, 5.272200000000157e-05, 5.309700000000195e-05, 5.2735999999997674e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.372" endtime="20201117 14:41:17.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.367" endtime="20201117 14:41:17.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.377" endtime="20201117 14:41:17.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.381" endtime="20201117 14:41:17.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.379" endtime="20201117 14:41:17.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.375" endtime="20201117 14:41:17.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.005" endtime="20201117 14:41:17.401"></status>
</kw>
<msg timestamp="20201117 14:41:17.402" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.410" endtime="20201117 14:41:17.427"></status>
</kw>
<msg timestamp="20201117 14:41:17.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.409" endtime="20201117 14:41:17.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.429" endtime="20201117 14:41:17.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.432" endtime="20201117 14:41:17.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.406" endtime="20201117 14:41:17.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.404" endtime="20201117 14:41:17.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.442" endtime="20201117 14:41:17.729"></status>
</kw>
<msg timestamp="20201117 14:41:17.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.441" endtime="20201117 14:41:17.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022170986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.734" endtime="20201117 14:41:17.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.742" endtime="20201117 14:41:17.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.438" endtime="20201117 14:41:17.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.436" endtime="20201117 14:41:17.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:17.749" level="INFO">${RESULT} = [{'time': 0.022170986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277799999999985e-05, 'source_diff': 5.277799999999985e-05}, {'time': 0.022245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:17.746" endtime="20201117 14:41:17.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:17.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:17.750" endtime="20201117 14:41:17.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.768" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:41:17.767" endtime="20201117 14:41:17.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.770" level="INFO">VALUE: [5.277799999999985e-05, 5.28470000000017e-05, 5.241699999999905e-05, 5.301400000000053e-05, 5.293099999999912e-05, 5.250000000000046e-05, 5.263900000000016e-05, 5.290299999999998e-05, 5.284699999999823e-05, 5.2749999999997244e-05, 5.325000000000121e-05, 5.30410000000002e-05, 5.2902000000000504e-05, 5.283299999999866e-05, 5.2916000000000074e-05, 5.283299999999866e-05, 5.293100000000259e-05, 5.26669999999993e-05, 5.338900000000091e-05, 5.275000000000071e-05, 5.319499999999894e-05, 5.25279999999996e-05, 5.291699999999955e-05, 5.31669999999998e-05, 5.333399999999863e-05, 5.329199999999992e-05, 5.308300000000238e-05, 5.308299999999891e-05, 5.276400000000028e-05, 5.2430000000002613e-05, 5.286100000000127e-05, 5.276400000000028e-05, 5.268099999999887e-05, 5.293099999999912e-05, 5.31669999999998e-05, 5.318099999999937e-05, 5.26669999999993e-05, 5.315300000000023e-05, 5.3013999999997063e-05, 5.273700000000062e-05, 5.2916000000000074e-05, 5.284699999999823e-05, 5.2693999999998964e-05, 5.326400000000078e-05, 5.3207999999999034e-05, 5.293099999999912e-05, 5.26669999999993e-05, 5.28470000000017e-05, 5.259700000000145e-05, 5.309699999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:41:17.769" endtime="20201117 14:41:17.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.764" endtime="20201117 14:41:17.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.774" endtime="20201117 14:41:17.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:17.777" endtime="20201117 14:41:17.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.776" endtime="20201117 14:41:17.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.772" endtime="20201117 14:41:17.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.402" endtime="20201117 14:41:17.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.003" endtime="20201117 14:41:17.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.003" endtime="20201117 14:41:17.798"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.801" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.818" endtime="20201117 14:41:17.836"></status>
</kw>
<msg timestamp="20201117 14:41:17.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.816" endtime="20201117 14:41:17.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:17.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:17.837" endtime="20201117 14:41:17.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.840" endtime="20201117 14:41:17.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.805" endtime="20201117 14:41:17.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.803" endtime="20201117 14:41:17.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:17.850" endtime="20201117 14:41:18.136"></status>
</kw>
<msg timestamp="20201117 14:41:18.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032982736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033036667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:17.848" endtime="20201117 14:41:18.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032982736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033036667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.140" endtime="20201117 14:41:18.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.149" endtime="20201117 14:41:18.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.845" endtime="20201117 14:41:18.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.844" endtime="20201117 14:41:18.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.156" level="INFO">${RESULT} = [{'time': 0.033036667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.393100000000012e-05, 'source_diff': 5.393100000000012e-05}, {'time': 0.033109653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:18.152" endtime="20201117 14:41:18.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:18.156" endtime="20201117 14:41:18.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.174" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.173" endtime="20201117 14:41:18.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.177" level="INFO">VALUE: [5.393100000000012e-05, 5.425000000000568e-05, 5.35140000000045e-05, 5.3763999999997814e-05, 5.3902000000001504e-05, 5.4180000000000894e-05, 5.4013999999998064e-05, 5.406900000000381e-05, 5.3430000000000144e-05, 5.4166000000001324e-05, 5.3999999999998494e-05, 5.391700000000055e-05, 5.350000000000493e-05, 5.395899999999926e-05, 5.384699999999576e-05, 5.430499999999755e-05, 5.358399999999541e-05, 5.390300000000098e-05, 5.380599999999652e-05, 5.407000000000328e-05, 5.3916000000001074e-05, 5.38470000000027e-05, 5.4221999999999604e-05, 5.343099999999962e-05, 5.3499999999997994e-05, 5.359700000000245e-05, 5.394499999999969e-05, 5.3971999999999354e-05, 5.343099999999962e-05, 5.402800000000457e-05, 5.341700000000005e-05, 5.350000000000493e-05, 5.420899999999951e-05, 5.3430000000000144e-05, 5.402699999999816e-05, 5.352699999999766e-05, 5.356900000000331e-05, 5.3416000000000574e-05, 5.38470000000027e-05, 5.391699999999361e-05, 5.36670000000003e-05, 5.3777999999997383e-05, 5.361100000000202e-05, 5.341700000000005e-05, 5.36670000000003e-05, 5.432000000000353e-05, 5.3527999999997133e-05, 5.426400000000525e-05, 5.433399999999616e-05, 5.3930000000000644e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.175" endtime="20201117 14:41:18.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.170" endtime="20201117 14:41:18.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.180" endtime="20201117 14:41:18.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.184" endtime="20201117 14:41:18.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.182" endtime="20201117 14:41:18.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.178" endtime="20201117 14:41:18.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.802" endtime="20201117 14:41:18.205"></status>
</kw>
<msg timestamp="20201117 14:41:18.205" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.214" endtime="20201117 14:41:18.231"></status>
</kw>
<msg timestamp="20201117 14:41:18.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.212" endtime="20201117 14:41:18.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.233" endtime="20201117 14:41:18.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.235" endtime="20201117 14:41:18.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.209" endtime="20201117 14:41:18.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.207" endtime="20201117 14:41:18.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.246" endtime="20201117 14:41:18.532"></status>
</kw>
<msg timestamp="20201117 14:41:18.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.244" endtime="20201117 14:41:18.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:18.536" endtime="20201117 14:41:18.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.544" endtime="20201117 14:41:18.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.242" endtime="20201117 14:41:18.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.240" endtime="20201117 14:41:18.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.551" level="INFO">${RESULT} = [{'time': 0.022633528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.432000000000006e-05, 'source_diff': 5.432000000000006e-05}, {'time': 0.022709597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:18.548" endtime="20201117 14:41:18.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:18.552" endtime="20201117 14:41:18.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.570" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.569" endtime="20201117 14:41:18.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.572" level="INFO">VALUE: [5.432000000000006e-05, 5.425000000000221e-05, 5.3485999999998424e-05, 5.391700000000055e-05, 5.41670000000008e-05, 5.383399999999913e-05, 5.361100000000202e-05, 5.412499999999862e-05, 5.358299999999941e-05, 5.356899999999984e-05, 5.382000000000303e-05, 5.376400000000128e-05, 5.3749999999998244e-05, 5.393100000000012e-05, 5.433300000000016e-05, 5.344499999999919e-05, 5.41670000000008e-05, 5.384699999999923e-05, 5.3763999999997814e-05, 5.343099999999962e-05, 5.433399999999963e-05, 5.372299999999858e-05, 5.3944000000000214e-05, 5.398600000000239e-05, 5.380599999999999e-05, 5.361099999999855e-05, 5.429200000000092e-05, 5.341700000000005e-05, 5.411099999999905e-05, 5.405600000000024e-05, 5.343099999999962e-05, 5.419499999999994e-05, 5.341700000000005e-05, 5.388900000000141e-05, 5.343099999999962e-05, 5.43479999999992e-05, 5.340300000000048e-05, 5.3693999999999964e-05, 5.38609999999988e-05, 5.3735999999998674e-05, 5.359699999999898e-05, 5.358299999999941e-05, 5.358299999999941e-05, 5.343099999999962e-05, 5.431899999999712e-05, 5.375000000000171e-05, 5.3749999999998244e-05, 5.425000000000221e-05, 5.409799999999895e-05, 5.4263999999998314e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.571" endtime="20201117 14:41:18.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.566" endtime="20201117 14:41:18.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.576" endtime="20201117 14:41:18.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.580" endtime="20201117 14:41:18.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.578" endtime="20201117 14:41:18.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.574" endtime="20201117 14:41:18.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.206" endtime="20201117 14:41:18.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.800" endtime="20201117 14:41:18.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:17.799" endtime="20201117 14:41:18.601"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.604" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.612" endtime="20201117 14:41:18.630"></status>
</kw>
<msg timestamp="20201117 14:41:18.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.611" endtime="20201117 14:41:18.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:18.632" endtime="20201117 14:41:18.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.634" endtime="20201117 14:41:18.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.608" endtime="20201117 14:41:18.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.606" endtime="20201117 14:41:18.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.644" endtime="20201117 14:41:18.930"></status>
</kw>
<msg timestamp="20201117 14:41:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025769125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02582375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:18.642" endtime="20201117 14:41:18.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025769125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02582375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:18.935" endtime="20201117 14:41:18.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.943" endtime="20201117 14:41:18.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.639" endtime="20201117 14:41:18.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.638" endtime="20201117 14:41:18.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:18.950" level="INFO">${RESULT} = [{'time': 0.02582375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.462499999999912e-05, 'source_diff': 5.462499999999912e-05}, {'time': 0.025897764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:18.947" endtime="20201117 14:41:18.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:18.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:18.951" endtime="20201117 14:41:18.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.970" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:18.969" endtime="20201117 14:41:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:18.972" level="INFO">VALUE: [5.462499999999912e-05, 5.458300000000041e-05, 5.5249999999999744e-05, 5.444500000000019e-05, 5.4499999999998994e-05, 5.493100000000112e-05, 5.452699999999866e-05, 5.508399999999691e-05, 5.509700000000048e-05, 5.4429999999997675e-05, 5.46670000000013e-05, 5.5180000000001894e-05, 5.459699999999998e-05, 5.4958000000000784e-05, 5.5249999999999744e-05, 5.441700000000105e-05, 5.468100000000087e-05, 5.480600000000099e-05, 5.50280000000021e-05, 5.472299999999958e-05, 5.515299999999876e-05, 5.476300000000281e-05, 5.491699999999808e-05, 5.4665999999998355e-05, 5.484700000000023e-05, 5.508300000000091e-05, 5.4430000000001144e-05, 5.4666000000001824e-05, 5.538899999999944e-05, 5.491700000000155e-05, 5.465300000000173e-05, 5.515299999999876e-05, 5.51670000000018e-05, 5.5027999999998634e-05, 5.462499999999912e-05, 5.509799999999995e-05, 5.458399999999988e-05, 5.506899999999787e-05, 5.4901999999999035e-05, 5.4958000000000784e-05, 5.4749999999999244e-05, 5.4499999999998994e-05, 5.455500000000127e-05, 5.5249999999999744e-05, 5.533300000000116e-05, 5.508299999999744e-05, 5.459699999999998e-05, 5.5277999999998884e-05, 5.509799999999995e-05, 5.4763999999998814e-05]</msg>
<status status="PASS" starttime="20201117 14:41:18.971" endtime="20201117 14:41:18.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.966" endtime="20201117 14:41:18.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:18.976" endtime="20201117 14:41:18.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:18.980" endtime="20201117 14:41:18.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.978" endtime="20201117 14:41:19.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.975" endtime="20201117 14:41:19.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.604" endtime="20201117 14:41:19.001"></status>
</kw>
<msg timestamp="20201117 14:41:19.001" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.010" endtime="20201117 14:41:19.028"></status>
</kw>
<msg timestamp="20201117 14:41:19.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.008" endtime="20201117 14:41:19.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.029" endtime="20201117 14:41:19.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.032" endtime="20201117 14:41:19.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.005" endtime="20201117 14:41:19.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.003" endtime="20201117 14:41:19.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.042" endtime="20201117 14:41:19.329"></status>
</kw>
<msg timestamp="20201117 14:41:19.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.041" endtime="20201117 14:41:19.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.333" endtime="20201117 14:41:19.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.342" endtime="20201117 14:41:19.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.038" endtime="20201117 14:41:19.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.036" endtime="20201117 14:41:19.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.349" level="INFO">${RESULT} = [{'time': 0.022514944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4957999999997315e-05, 'source_diff': 5.4957999999997315e-05}, {'time': 0.022592903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:19.345" endtime="20201117 14:41:19.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.363" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:19.350" endtime="20201117 14:41:19.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.367" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.366" endtime="20201117 14:41:19.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.370" level="INFO">VALUE: [5.4957999999997315e-05, 5.475000000000271e-05, 5.509799999999995e-05, 5.508400000000038e-05, 5.4430000000001144e-05, 5.452699999999866e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.506900000000134e-05, 5.4763999999998814e-05, 5.506900000000134e-05, 5.497299999999983e-05, 5.533299999999769e-05, 5.4735999999999674e-05, 5.443100000000062e-05, 5.536199999999977e-05, 5.511100000000005e-05, 5.491700000000155e-05, 5.484700000000023e-05, 5.4749999999999244e-05, 5.5249999999999744e-05, 5.5277999999998884e-05, 5.476400000000228e-05, 5.527800000000235e-05, 5.4777999999998384e-05, 5.434699999999973e-05, 5.531899999999812e-05, 5.493099999999765e-05, 5.483400000000013e-05, 5.509799999999995e-05, 5.475000000000271e-05, 5.507000000000081e-05, 5.459699999999998e-05, 5.476300000000281e-05, 5.527699999999941e-05, 5.4916000000002074e-05, 5.5179999999998425e-05, 5.4693999999997495e-05, 5.5179999999998425e-05, 5.4513999999998564e-05, 5.441700000000105e-05, 5.533300000000116e-05, 5.493099999999765e-05, 5.4777999999998384e-05, 5.508400000000038e-05, 5.5249999999999744e-05, 5.508400000000038e-05, 5.4763999999998814e-05, 5.475000000000271e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.369" endtime="20201117 14:41:19.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.364" endtime="20201117 14:41:19.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.374" endtime="20201117 14:41:19.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.377" endtime="20201117 14:41:19.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.376" endtime="20201117 14:41:19.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.372" endtime="20201117 14:41:19.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.002" endtime="20201117 14:41:19.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.602" endtime="20201117 14:41:19.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:18.602" endtime="20201117 14:41:19.399"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.401" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.410" endtime="20201117 14:41:19.427"></status>
</kw>
<msg timestamp="20201117 14:41:19.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.408" endtime="20201117 14:41:19.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.429" endtime="20201117 14:41:19.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.431" endtime="20201117 14:41:19.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.405" endtime="20201117 14:41:19.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.403" endtime="20201117 14:41:19.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.441" endtime="20201117 14:41:19.727"></status>
</kw>
<msg timestamp="20201117 14:41:19.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.439" endtime="20201117 14:41:19.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.731" endtime="20201117 14:41:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.740" endtime="20201117 14:41:19.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.437" endtime="20201117 14:41:19.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.435" endtime="20201117 14:41:19.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:19.747" level="INFO">${RESULT} = [{'time': 0.025056528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582000000000156e-05, 'source_diff': 5.582000000000156e-05}, {'time': 0.025135528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:19.743" endtime="20201117 14:41:19.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:19.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:19.748" endtime="20201117 14:41:19.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.765" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:19.764" endtime="20201117 14:41:19.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.768" level="INFO">VALUE: [5.582000000000156e-05, 5.618100000000237e-05, 5.619500000000194e-05, 5.6000000000000494e-05, 5.588899999999994e-05, 5.63610000000013e-05, 5.540299999999901e-05, 5.6014000000000064e-05, 5.5763999999999814e-05, 5.5915999999999605e-05, 5.5527999999999134e-05, 5.6264000000000314e-05, 5.595899999999779e-05, 5.56809999999984e-05, 5.583300000000166e-05, 5.556999999999784e-05, 5.5777999999999384e-05, 5.5763999999999814e-05, 5.580499999999905e-05, 5.5693999999998495e-05, 5.609700000000148e-05, 5.554099999999923e-05, 5.558300000000141e-05, 5.5416000000002574e-05, 5.6179999999999425e-05, 5.6179999999999425e-05, 5.5513999999999564e-05, 5.6249999999997274e-05, 5.608299999999844e-05, 5.590299999999951e-05, 5.583300000000166e-05, 5.5750000000000244e-05, 5.6277999999999884e-05, 5.5736000000000674e-05, 5.543100000000162e-05, 5.6000000000000494e-05, 5.609699999999801e-05, 5.609700000000148e-05, 5.5750000000000244e-05, 5.5763999999999814e-05, 5.606899999999887e-05, 5.576400000000328e-05, 5.5791999999998954e-05, 5.5763999999999814e-05, 5.541700000000205e-05, 5.6000000000000494e-05, 5.53610000000003e-05, 5.5527999999999134e-05, 5.537499999999987e-05, 5.584799999999723e-05]</msg>
<status status="PASS" starttime="20201117 14:41:19.766" endtime="20201117 14:41:19.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.761" endtime="20201117 14:41:19.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.772" endtime="20201117 14:41:19.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:19.775" endtime="20201117 14:41:19.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.774" endtime="20201117 14:41:19.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.770" endtime="20201117 14:41:19.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.402" endtime="20201117 14:41:19.796"></status>
</kw>
<msg timestamp="20201117 14:41:19.796" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.805" endtime="20201117 14:41:19.823"></status>
</kw>
<msg timestamp="20201117 14:41:19.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.803" endtime="20201117 14:41:19.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:19.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:19.824" endtime="20201117 14:41:19.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.827" endtime="20201117 14:41:19.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.800" endtime="20201117 14:41:19.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.798" endtime="20201117 14:41:19.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:19.837" endtime="20201117 14:41:20.123"></status>
</kw>
<msg timestamp="20201117 14:41:20.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:19.836" endtime="20201117 14:41:20.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.128" endtime="20201117 14:41:20.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.136" endtime="20201117 14:41:20.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.833" endtime="20201117 14:41:20.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.831" endtime="20201117 14:41:20.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.143" level="INFO">${RESULT} = [{'time': 0.022281583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.613900000000019e-05, 'source_diff': 5.613900000000019e-05}, {'time': 0.022357597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.140" endtime="20201117 14:41:20.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:20.144" endtime="20201117 14:41:20.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.162" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.161" endtime="20201117 14:41:20.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.165" level="INFO">VALUE: [5.613900000000019e-05, 5.5929999999999175e-05, 5.5693999999998495e-05, 5.633299999999869e-05, 5.558299999999794e-05, 5.611099999999758e-05, 5.590299999999951e-05, 5.634700000000173e-05, 5.6277999999999884e-05, 5.583400000000113e-05, 5.5735999999997204e-05, 5.559800000000045e-05, 5.580499999999905e-05, 5.616699999999933e-05, 5.579200000000242e-05, 5.5929999999999175e-05, 5.580499999999905e-05, 5.5750000000000244e-05, 5.591699999999908e-05, 5.566699999999883e-05, 5.616699999999933e-05, 5.6014000000000064e-05, 5.557000000000131e-05, 5.545900000000076e-05, 5.5513999999999564e-05, 5.559800000000045e-05, 5.5943999999998745e-05, 5.6165999999999855e-05, 5.6165999999999855e-05, 5.63610000000013e-05, 5.554099999999923e-05, 5.6250000000000744e-05, 5.611099999999758e-05, 5.6264000000000314e-05, 5.590299999999951e-05, 5.616699999999933e-05, 5.563899999999969e-05, 5.634699999999826e-05, 5.591699999999908e-05, 5.5513999999999564e-05, 5.557000000000131e-05, 5.6263999999996844e-05, 5.561100000000055e-05, 5.5387999999999965e-05, 5.633299999999869e-05, 5.5915999999999605e-05, 5.631899999999912e-05, 5.5943999999998745e-05, 5.618100000000237e-05, 5.6207999999998565e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.163" endtime="20201117 14:41:20.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.158" endtime="20201117 14:41:20.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.168" endtime="20201117 14:41:20.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.171" endtime="20201117 14:41:20.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.170" endtime="20201117 14:41:20.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.166" endtime="20201117 14:41:20.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.797" endtime="20201117 14:41:20.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.400" endtime="20201117 14:41:20.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:19.399" endtime="20201117 14:41:20.193"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.195" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.204" endtime="20201117 14:41:20.223"></status>
</kw>
<msg timestamp="20201117 14:41:20.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.202" endtime="20201117 14:41:20.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.224" endtime="20201117 14:41:20.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.227" endtime="20201117 14:41:20.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.199" endtime="20201117 14:41:20.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.197" endtime="20201117 14:41:20.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.236" endtime="20201117 14:41:20.522"></status>
</kw>
<msg timestamp="20201117 14:41:20.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025955444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026012431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.235" endtime="20201117 14:41:20.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025955444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026012431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:20.526" endtime="20201117 14:41:20.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.535" endtime="20201117 14:41:20.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.232" endtime="20201117 14:41:20.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.230" endtime="20201117 14:41:20.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.542" level="INFO">${RESULT} = [{'time': 0.026012431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.698699999999793e-05, 'source_diff': 5.698699999999793e-05}, {'time': 0.026085431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:20.539" endtime="20201117 14:41:20.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:20.543" endtime="20201117 14:41:20.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.562" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.561" endtime="20201117 14:41:20.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.564" level="INFO">VALUE: [5.698699999999793e-05, 5.693099999999965e-05, 5.683399999999866e-05, 5.6429999999999675e-05, 5.734699999999926e-05, 5.6805999999999524e-05, 5.659700000000198e-05, 5.684699999999876e-05, 5.733299999999969e-05, 5.693099999999965e-05, 5.683299999999919e-05, 5.638900000000044e-05, 5.665300000000026e-05, 5.73749999999984e-05, 5.659800000000145e-05, 5.6763999999997344e-05, 5.6749999999997774e-05, 5.6721999999998635e-05, 5.658299999999894e-05, 5.709699999999901e-05, 5.6416000000000105e-05, 5.683299999999919e-05, 5.661099999999808e-05, 5.7249999999998274e-05, 5.656899999999937e-05, 5.661100000000155e-05, 5.6750000000001244e-05, 5.641699999999958e-05, 5.6805999999999524e-05, 5.641699999999958e-05, 5.6514000000000564e-05, 5.640300000000001e-05, 5.687500000000137e-05, 5.711099999999858e-05, 5.6749999999997774e-05, 5.6930000000000175e-05, 5.6666000000000355e-05, 5.683299999999919e-05, 5.7000000000001494e-05, 5.7000000000001494e-05, 5.7278000000000884e-05, 5.657000000000231e-05, 5.6528000000000134e-05, 5.659799999999798e-05, 5.6764000000000814e-05, 5.638900000000044e-05, 5.693099999999965e-05, 5.6416000000000105e-05, 5.683300000000266e-05, 5.709699999999901e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.563" endtime="20201117 14:41:20.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.558" endtime="20201117 14:41:20.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.568" endtime="20201117 14:41:20.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.571" endtime="20201117 14:41:20.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.570" endtime="20201117 14:41:20.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.566" endtime="20201117 14:41:20.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.196" endtime="20201117 14:41:20.592"></status>
</kw>
<msg timestamp="20201117 14:41:20.592" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.601" endtime="20201117 14:41:20.618"></status>
</kw>
<msg timestamp="20201117 14:41:20.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.599" endtime="20201117 14:41:20.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.620" endtime="20201117 14:41:20.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.623" endtime="20201117 14:41:20.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.597" endtime="20201117 14:41:20.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.594" endtime="20201117 14:41:20.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.633" endtime="20201117 14:41:20.919"></status>
</kw>
<msg timestamp="20201117 14:41:20.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:20.632" endtime="20201117 14:41:20.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022150875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:20.923" endtime="20201117 14:41:20.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.932" endtime="20201117 14:41:20.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.629" endtime="20201117 14:41:20.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.627" endtime="20201117 14:41:20.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:20.939" level="INFO">${RESULT} = [{'time': 0.0222075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.662500000000112e-05, 'source_diff': 5.662500000000112e-05}, {'time': 0.0222785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201117 14:41:20.936" endtime="20201117 14:41:20.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:20.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:20.940" endtime="20201117 14:41:20.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.958" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:41:20.957" endtime="20201117 14:41:20.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.960" level="INFO">VALUE: [5.662500000000112e-05, 5.641699999999958e-05, 5.7014000000001064e-05, 5.691700000000008e-05, 5.66809999999994e-05, 5.666699999999983e-05, 5.6679999999999925e-05, 5.7193999999999995e-05, 5.6500000000000994e-05, 5.6429999999999675e-05, 5.6915999999997136e-05, 5.6750000000001244e-05, 5.659700000000198e-05, 5.659699999999851e-05, 5.6736000000001674e-05, 5.6555999999999274e-05, 5.7235999999998705e-05, 5.640300000000001e-05, 5.733299999999969e-05, 5.711099999999858e-05, 5.693099999999965e-05, 5.7333999999999163e-05, 5.7249999999998274e-05, 5.6930000000000175e-05, 5.7166000000000855e-05, 5.7151999999997816e-05, 5.6985999999998455e-05, 5.658299999999894e-05, 5.711099999999858e-05, 5.6763999999997344e-05, 5.730500000000055e-05, 5.7264000000001314e-05, 5.6749999999997774e-05, 5.658399999999841e-05, 5.7264000000001314e-05, 5.709799999999848e-05, 5.690300000000051e-05, 5.6999999999998024e-05, 5.7207999999999565e-05, 5.709699999999901e-05, 5.6985999999998455e-05, 5.733299999999969e-05, 5.659699999999851e-05, 5.63610000000013e-05, 5.731900000000012e-05, 5.693099999999965e-05, 5.683300000000266e-05, 5.659700000000198e-05, 5.7028000000000634e-05, 5.68480000000017e-05]</msg>
<status status="PASS" starttime="20201117 14:41:20.959" endtime="20201117 14:41:20.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.954" endtime="20201117 14:41:20.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.964" endtime="20201117 14:41:20.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:20.967" endtime="20201117 14:41:20.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.966" endtime="20201117 14:41:20.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.962" endtime="20201117 14:41:20.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.593" endtime="20201117 14:41:20.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.194" endtime="20201117 14:41:20.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.193" endtime="20201117 14:41:20.988"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:20.991" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:20.999" endtime="20201117 14:41:21.016"></status>
</kw>
<msg timestamp="20201117 14:41:21.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:20.998" endtime="20201117 14:41:21.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.018" endtime="20201117 14:41:21.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.021" endtime="20201117 14:41:21.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.995" endtime="20201117 14:41:21.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.993" endtime="20201117 14:41:21.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.031" endtime="20201117 14:41:21.317"></status>
</kw>
<msg timestamp="20201117 14:41:21.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.029" endtime="20201117 14:41:21.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024809111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024866597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.322" endtime="20201117 14:41:21.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.330" endtime="20201117 14:41:21.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.026" endtime="20201117 14:41:21.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.024" endtime="20201117 14:41:21.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.337" level="INFO">${RESULT} = [{'time': 0.024866597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7486000000002424e-05, 'source_diff': 5.7486000000002424e-05}, {'time': 0.024941597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:21.334" endtime="20201117 14:41:21.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:21.338" endtime="20201117 14:41:21.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.356" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.355" endtime="20201117 14:41:21.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.358" level="INFO">VALUE: [5.7486000000002424e-05, 5.7416000000001105e-05, 5.7665999999997886e-05, 5.772299999999911e-05, 5.7499999999998525e-05, 5.741700000000058e-05, 5.783300000000019e-05, 5.759700000000298e-05, 5.788900000000194e-05, 5.7514000000001564e-05, 5.741700000000058e-05, 5.8347999999999733e-05, 5.756900000000037e-05, 5.7930000000001175e-05, 5.783300000000019e-05, 5.806900000000087e-05, 5.806900000000087e-05, 5.7778000000001384e-05, 5.8249999999999275e-05, 5.8277999999998414e-05, 5.8014000000002064e-05, 5.8069999999996874e-05, 5.787500000000237e-05, 5.7514000000001564e-05, 5.816699999999786e-05, 5.7444000000000245e-05, 5.7499999999998525e-05, 5.802699999999869e-05, 5.8193999999997525e-05, 5.758299999999994e-05, 5.8249999999999275e-05, 5.761099999999908e-05, 5.759699999999951e-05, 5.740300000000101e-05, 5.783300000000019e-05, 5.759699999999951e-05, 5.793100000000065e-05, 5.8028000000001634e-05, 5.790299999999804e-05, 5.81810000000009e-05, 5.80550000000013e-05, 5.7402000000001535e-05, 5.7500000000001994e-05, 5.761100000000255e-05, 5.741700000000058e-05, 5.786099999999933e-05, 5.743100000000015e-05, 5.768099999999693e-05, 5.833300000000069e-05, 5.8070000000000344e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.357" endtime="20201117 14:41:21.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.352" endtime="20201117 14:41:21.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.362" endtime="20201117 14:41:21.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.365" endtime="20201117 14:41:21.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.364" endtime="20201117 14:41:21.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.360" endtime="20201117 14:41:21.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.991" endtime="20201117 14:41:21.386"></status>
</kw>
<msg timestamp="20201117 14:41:21.386" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.395" endtime="20201117 14:41:21.412"></status>
</kw>
<msg timestamp="20201117 14:41:21.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.393" endtime="20201117 14:41:21.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.414" endtime="20201117 14:41:21.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.417" endtime="20201117 14:41:21.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.391" endtime="20201117 14:41:21.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.388" endtime="20201117 14:41:21.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.428" endtime="20201117 14:41:21.714"></status>
</kw>
<msg timestamp="20201117 14:41:21.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.426" endtime="20201117 14:41:21.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.718" endtime="20201117 14:41:21.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.727" endtime="20201117 14:41:21.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.423" endtime="20201117 14:41:21.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.421" endtime="20201117 14:41:21.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:21.734" level="INFO">${RESULT} = [{'time': 0.022285403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7805999999997054e-05, 'source_diff': 5.7805999999997054e-05}, {'time': 0.022362389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:21.730" endtime="20201117 14:41:21.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:21.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:21.735" endtime="20201117 14:41:21.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.752" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:41:21.751" endtime="20201117 14:41:21.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.755" level="INFO">VALUE: [5.7805999999997054e-05, 5.815299999999829e-05, 5.786099999999933e-05, 5.8083999999999913e-05, 5.743100000000015e-05, 5.8334000000000163e-05, 5.7430000000000675e-05, 5.7680000000000925e-05, 5.8193999999997525e-05, 5.7499999999998525e-05, 5.7444000000000245e-05, 5.787500000000237e-05, 5.7680000000000925e-05, 5.7764000000001814e-05, 5.8042000000001204e-05, 5.7777999999997914e-05, 5.8083999999999913e-05, 5.7958000000000315e-05, 5.7833999999999663e-05, 5.738899999999797e-05, 5.8319999999997124e-05, 5.762500000000212e-05, 5.756900000000037e-05, 5.8013999999998594e-05, 5.836099999999983e-05, 5.808300000000044e-05, 5.7929999999997706e-05, 5.816700000000133e-05, 5.78749999999989e-05, 5.809700000000001e-05, 5.758299999999994e-05, 5.8264000000002314e-05, 5.8277999999998414e-05, 5.829100000000198e-05, 5.7416000000001105e-05, 5.751300000000209e-05, 5.7735999999999205e-05, 5.7929999999997706e-05, 5.7666000000001355e-05, 5.7569999999999844e-05, 5.806900000000087e-05, 5.758299999999994e-05, 5.759699999999951e-05, 5.793100000000065e-05, 5.783300000000019e-05, 5.759800000000245e-05, 5.741700000000058e-05, 5.766700000000083e-05, 5.8236000000003174e-05, 5.756900000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:41:21.753" endtime="20201117 14:41:21.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.748" endtime="20201117 14:41:21.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.758" endtime="20201117 14:41:21.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:21.762" endtime="20201117 14:41:21.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.760" endtime="20201117 14:41:21.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.756" endtime="20201117 14:41:21.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.387" endtime="20201117 14:41:21.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.990" endtime="20201117 14:41:21.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:20.989" endtime="20201117 14:41:21.783"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.785" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.794" endtime="20201117 14:41:21.813"></status>
</kw>
<msg timestamp="20201117 14:41:21.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.793" endtime="20201117 14:41:21.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:21.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:21.815" endtime="20201117 14:41:21.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.817" endtime="20201117 14:41:21.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.790" endtime="20201117 14:41:21.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.787" endtime="20201117 14:41:21.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:21.827" endtime="20201117 14:41:22.113"></status>
</kw>
<msg timestamp="20201117 14:41:22.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026719167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:21.825" endtime="20201117 14:41:22.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026719167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.117" endtime="20201117 14:41:22.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.126" endtime="20201117 14:41:22.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.822" endtime="20201117 14:41:22.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.821" endtime="20201117 14:41:22.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.133" level="INFO">${RESULT} = [{'time': 0.026778319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9151999999999816e-05, 'source_diff': 5.9151999999999816e-05}, {'time': 0.026855319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:22.129" endtime="20201117 14:41:22.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:22.134" endtime="20201117 14:41:22.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.153" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.152" endtime="20201117 14:41:22.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.155" level="INFO">VALUE: [5.9151999999999816e-05, 5.8929999999998706e-05, 5.884700000000076e-05, 5.8736000000000205e-05, 5.9263999999999845e-05, 5.8778000000002384e-05, 5.858299999999747e-05, 5.891700000000208e-05, 5.8805999999998054e-05, 5.844500000000072e-05, 5.86810000000014e-05, 5.884700000000076e-05, 5.888899999999947e-05, 5.9347999999997264e-05, 5.9056000000001774e-05, 5.923700000000018e-05, 5.858300000000094e-05, 5.858300000000094e-05, 5.8749999999999775e-05, 5.8749999999999775e-05, 5.8749999999999775e-05, 5.909699999999754e-05, 5.8764000000002814e-05, 5.890299999999904e-05, 5.870900000000054e-05, 5.9207999999998095e-05, 5.919500000000147e-05, 5.918099999999843e-05, 5.8513999999999095e-05, 5.9070000000001344e-05, 5.8429999999998206e-05, 5.8570000000000844e-05, 5.8915999999999136e-05, 5.8972000000000885e-05, 5.840300000000201e-05, 5.9000000000000025e-05, 5.891699999999861e-05, 5.8986000000000455e-05, 5.859700000000051e-05, 5.8777999999998914e-05, 5.843100000000115e-05, 5.8834000000000664e-05, 5.9098000000000483e-05, 5.873699999999968e-05, 5.9250000000000275e-05, 5.9305999999998554e-05, 5.908300000000144e-05, 5.8430000000001675e-05, 5.933300000000169e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.154" endtime="20201117 14:41:22.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.149" endtime="20201117 14:41:22.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.158" endtime="20201117 14:41:22.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.162" endtime="20201117 14:41:22.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.160" endtime="20201117 14:41:22.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.157" endtime="20201117 14:41:22.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.786" endtime="20201117 14:41:22.183"></status>
</kw>
<msg timestamp="20201117 14:41:22.183" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.192" endtime="20201117 14:41:22.211"></status>
</kw>
<msg timestamp="20201117 14:41:22.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.191" endtime="20201117 14:41:22.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.213" endtime="20201117 14:41:22.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.215" endtime="20201117 14:41:22.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.188" endtime="20201117 14:41:22.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.186" endtime="20201117 14:41:22.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.226" endtime="20201117 14:41:22.512"></status>
</kw>
<msg timestamp="20201117 14:41:22.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.224" endtime="20201117 14:41:22.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.517" endtime="20201117 14:41:22.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.526" endtime="20201117 14:41:22.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.221" endtime="20201117 14:41:22.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.220" endtime="20201117 14:41:22.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.532" level="INFO">${RESULT} = [{'time': 0.023100097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.911100000000058e-05, 'source_diff': 5.911100000000058e-05}, {'time': 0.023179111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:22.529" endtime="20201117 14:41:22.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:22.534" endtime="20201117 14:41:22.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.551" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.550" endtime="20201117 14:41:22.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.554" level="INFO">VALUE: [5.911100000000058e-05, 5.908299999999797e-05, 5.841699999999811e-05, 5.86810000000014e-05, 5.916699999999886e-05, 5.866699999999836e-05, 5.918099999999843e-05, 5.9194999999998e-05, 5.8749999999999775e-05, 5.9083999999997444e-05, 5.8763999999999345e-05, 5.908300000000144e-05, 5.8415999999998636e-05, 5.886100000000033e-05, 5.9028000000002634e-05, 5.890300000000251e-05, 5.9013999999999595e-05, 5.859700000000051e-05, 5.9250000000000275e-05, 5.8764000000002814e-05, 5.8749999999999775e-05, 5.844500000000072e-05, 5.8694000000001495e-05, 5.845900000000029e-05, 5.8416000000002105e-05, 5.881900000000162e-05, 5.911100000000058e-05, 5.9263999999999845e-05, 5.8750000000003244e-05, 5.9250000000000275e-05, 5.893099999999818e-05, 5.8499999999999525e-05, 5.8736000000000205e-05, 5.859700000000051e-05, 5.9056000000001774e-05, 5.8736000000000205e-05, 5.893100000000165e-05, 5.8693999999998026e-05, 5.886100000000033e-05, 5.90689999999984e-05, 5.9221999999997665e-05, 5.909699999999754e-05, 5.8749999999999775e-05, 5.9236000000000705e-05, 5.9250000000000275e-05, 5.843100000000115e-05, 5.870900000000054e-05, 5.86810000000014e-05, 5.88749999999999e-05, 5.9250000000000275e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.552" endtime="20201117 14:41:22.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.547" endtime="20201117 14:41:22.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.557" endtime="20201117 14:41:22.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.561" endtime="20201117 14:41:22.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.559" endtime="20201117 14:41:22.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.556" endtime="20201117 14:41:22.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.184" endtime="20201117 14:41:22.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.784" endtime="20201117 14:41:22.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:21.783" endtime="20201117 14:41:22.582"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.585" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.593" endtime="20201117 14:41:22.611"></status>
</kw>
<msg timestamp="20201117 14:41:22.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.592" endtime="20201117 14:41:22.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.613" endtime="20201117 14:41:22.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.615" endtime="20201117 14:41:22.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.589" endtime="20201117 14:41:22.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.587" endtime="20201117 14:41:22.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.625" endtime="20201117 14:41:22.911"></status>
</kw>
<msg timestamp="20201117 14:41:22.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.623" endtime="20201117 14:41:22.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025047778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:22.915" endtime="20201117 14:41:22.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.924" endtime="20201117 14:41:22.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.621" endtime="20201117 14:41:22.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.619" endtime="20201117 14:41:22.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:22.931" level="INFO">${RESULT} = [{'time': 0.025047778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9805999999999054e-05, 'source_diff': 5.9805999999999054e-05}, {'time': 0.025130778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:22.927" endtime="20201117 14:41:22.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:22.944" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:22.932" endtime="20201117 14:41:22.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.949" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:22.948" endtime="20201117 14:41:22.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:22.952" level="INFO">VALUE: [5.9805999999999054e-05, 6.015300000000029e-05, 5.954099999999976e-05, 5.9598000000000984e-05, 5.9750000000000775e-05, 6.009699999999854e-05, 6.0291999999999984e-05, 6.00689999999994e-05, 5.9944000000002745e-05, 6.0014000000000595e-05, 5.991699999999961e-05, 5.9500000000000525e-05, 6.008300000000244e-05, 6.008299999999897e-05, 5.941699999999911e-05, 5.9819999999998624e-05, 5.941699999999911e-05, 6.0333999999998694e-05, 5.9750000000000775e-05, 6.009700000000201e-05, 5.9750000000000775e-05, 5.9722000000001635e-05, 6.0250000000001275e-05, 6.0249999999997805e-05, 5.990300000000004e-05, 6.016699999999986e-05, 6.0028000000000165e-05, 6.0263999999997375e-05, 6.0264000000000845e-05, 5.991699999999961e-05, 5.9500000000000525e-05, 6.015300000000029e-05, 5.958300000000194e-05, 6.0250000000001275e-05, 6.00550000000033e-05, 5.9750000000000775e-05, 6.0264000000000845e-05, 5.9429999999999206e-05, 5.9514000000000095e-05, 6.0264000000000845e-05, 5.9764000000000345e-05, 6.0069999999998874e-05, 6.0235999999998235e-05, 5.9597999999997514e-05, 5.986099999999786e-05, 5.954099999999976e-05, 6.0250000000001275e-05, 6.013900000000072e-05, 5.938899999999997e-05, 5.9500000000000525e-05]</msg>
<status status="PASS" starttime="20201117 14:41:22.950" endtime="20201117 14:41:22.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.945" endtime="20201117 14:41:22.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.962" endtime="20201117 14:41:22.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:22.965" endtime="20201117 14:41:22.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.964" endtime="20201117 14:41:22.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.960" endtime="20201117 14:41:22.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.585" endtime="20201117 14:41:22.986"></status>
</kw>
<msg timestamp="20201117 14:41:22.986" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:22.995" endtime="20201117 14:41:23.012"></status>
</kw>
<msg timestamp="20201117 14:41:23.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:22.993" endtime="20201117 14:41:23.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.014" endtime="20201117 14:41:23.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.016" endtime="20201117 14:41:23.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.991" endtime="20201117 14:41:23.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.988" endtime="20201117 14:41:23.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.027" endtime="20201117 14:41:23.313"></status>
</kw>
<msg timestamp="20201117 14:41:23.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.025" endtime="20201117 14:41:23.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022309944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022370083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.317" endtime="20201117 14:41:23.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.326" endtime="20201117 14:41:23.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.023" endtime="20201117 14:41:23.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.021" endtime="20201117 14:41:23.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.333" level="INFO">${RESULT} = [{'time': 0.022370083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.013899999999725e-05, 'source_diff': 6.013899999999725e-05}, {'time': 0.022448097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.330" endtime="20201117 14:41:23.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.347" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:23.334" endtime="20201117 14:41:23.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.352" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.351" endtime="20201117 14:41:23.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.355" level="INFO">VALUE: [6.013899999999725e-05, 6.008299999999897e-05, 5.9916000000000136e-05, 6.03750000000014e-05, 5.961099999999761e-05, 5.940299999999954e-05, 6.0014000000000595e-05, 6.0236000000001705e-05, 5.9570000000001844e-05, 5.994499999999875e-05, 6.0000000000001025e-05, 6.02629999999979e-05, 6.027700000000094e-05, 6.009700000000201e-05, 6.0250000000001275e-05, 6.0264000000000845e-05, 6.008300000000244e-05, 6.008300000000244e-05, 5.958299999999847e-05, 6.009700000000201e-05, 5.9764000000000345e-05, 6.0097999999998014e-05, 5.991699999999961e-05, 6.0334000000002164e-05, 6.027699999999747e-05, 5.976300000000087e-05, 5.9429999999999206e-05, 5.9486000000000955e-05, 5.9402000000000066e-05, 6.0014000000000595e-05, 5.9750000000000775e-05, 5.991699999999961e-05, 6.034699999999879e-05, 5.993099999999918e-05, 5.984699999999829e-05, 5.9763999999996875e-05, 5.9584000000001414e-05, 6.0084000000001914e-05, 5.977700000000044e-05, 5.9930000000003175e-05, 5.952700000000019e-05, 5.955499999999933e-05, 5.9916000000000136e-05, 5.983299999999872e-05, 5.9430000000002675e-05, 5.972299999999764e-05, 5.9555999999998804e-05, 5.940300000000301e-05, 5.966699999999936e-05, 6.018099999999943e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.353" endtime="20201117 14:41:23.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.348" endtime="20201117 14:41:23.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.359" endtime="20201117 14:41:23.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.362" endtime="20201117 14:41:23.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.361" endtime="20201117 14:41:23.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.357" endtime="20201117 14:41:23.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.987" endtime="20201117 14:41:23.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.583" endtime="20201117 14:41:23.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:22.583" endtime="20201117 14:41:23.383"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.386" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.395" endtime="20201117 14:41:23.413"></status>
</kw>
<msg timestamp="20201117 14:41:23.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.393" endtime="20201117 14:41:23.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.414" endtime="20201117 14:41:23.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.417" endtime="20201117 14:41:23.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.390" endtime="20201117 14:41:23.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.388" endtime="20201117 14:41:23.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.426" endtime="20201117 14:41:23.712"></status>
</kw>
<msg timestamp="20201117 14:41:23.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025934653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.425" endtime="20201117 14:41:23.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025873972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025934653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.716" endtime="20201117 14:41:23.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.725" endtime="20201117 14:41:23.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.422" endtime="20201117 14:41:23.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.420" endtime="20201117 14:41:23.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:23.732" level="INFO">${RESULT} = [{'time': 0.025934653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.068099999999993e-05, 'source_diff': 6.068099999999993e-05}, {'time': 0.026016611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:23.728" endtime="20201117 14:41:23.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:23.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:23.733" endtime="20201117 14:41:23.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.751" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:23.750" endtime="20201117 14:41:23.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.755" level="INFO">VALUE: [6.068099999999993e-05, 6.0749999999998305e-05, 6.043099999999968e-05, 6.1195e-05, 6.118100000000043e-05, 6.0750000000001775e-05, 6.125000000000227e-05, 6.0569999999999374e-05, 6.076300000000187e-05, 6.091700000000061e-05, 6.1013999999998125e-05, 6.126399999999838e-05, 6.108299999999997e-05, 6.090300000000104e-05, 6.1027999999997695e-05, 6.090300000000104e-05, 6.116700000000086e-05, 6.134699999999979e-05, 6.0750000000001775e-05, 6.108399999999944e-05, 6.043099999999968e-05, 6.0999999999998555e-05, 6.0430000000000206e-05, 6.134699999999979e-05, 6.0764000000001345e-05, 6.0402000000001066e-05, 6.133300000000022e-05, 6.0930000000000706e-05, 6.118000000000096e-05, 6.0528000000000665e-05, 6.058299999999947e-05, 6.059700000000251e-05, 6.093099999999671e-05, 6.066700000000036e-05, 6.069500000000297e-05, 6.0819999999999624e-05, 6.07629999999984e-05, 6.0763999999997875e-05, 6.059699999999904e-05, 6.08750000000019e-05, 6.084699999999929e-05, 6.126399999999838e-05, 6.116700000000086e-05, 6.111100000000258e-05, 6.0721999999999166e-05, 6.108299999999997e-05, 6.113800000000225e-05, 6.079100000000101e-05, 6.091700000000061e-05, 6.0999999999998555e-05]</msg>
<status status="PASS" starttime="20201117 14:41:23.753" endtime="20201117 14:41:23.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.748" endtime="20201117 14:41:23.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.758" endtime="20201117 14:41:23.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:23.761" endtime="20201117 14:41:23.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.760" endtime="20201117 14:41:23.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.756" endtime="20201117 14:41:23.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.387" endtime="20201117 14:41:23.782"></status>
</kw>
<msg timestamp="20201117 14:41:23.782" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.791" endtime="20201117 14:41:23.809"></status>
</kw>
<msg timestamp="20201117 14:41:23.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.790" endtime="20201117 14:41:23.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:23.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:23.811" endtime="20201117 14:41:23.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.813" endtime="20201117 14:41:23.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.787" endtime="20201117 14:41:23.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.785" endtime="20201117 14:41:23.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:23.824" endtime="20201117 14:41:24.110"></status>
</kw>
<msg timestamp="20201117 14:41:24.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:23.822" endtime="20201117 14:41:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022359403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.115" endtime="20201117 14:41:24.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.123" endtime="20201117 14:41:24.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.820" endtime="20201117 14:41:24.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.818" endtime="20201117 14:41:24.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.130" level="INFO">${RESULT} = [{'time': 0.022420014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.061099999999861e-05, 'source_diff': 6.061099999999861e-05}, {'time': 0.022495042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.126" endtime="20201117 14:41:24.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.144" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:24.131" endtime="20201117 14:41:24.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.149" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.148" endtime="20201117 14:41:24.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.152" level="INFO">VALUE: [6.061099999999861e-05, 6.129200000000098e-05, 6.13339999999997e-05, 6.0750000000001775e-05, 6.0569999999999374e-05, 6.0985999999998985e-05, 6.13889999999985e-05, 6.108299999999997e-05, 6.127800000000141e-05, 6.054100000000076e-05, 6.108299999999997e-05, 6.109699999999954e-05, 6.12499999999988e-05, 6.091699999999714e-05, 6.0513999999997625e-05, 6.041700000000011e-05, 6.13339999999997e-05, 6.0486000000001955e-05, 6.13339999999997e-05, 6.0430000000000206e-05, 6.084699999999929e-05, 6.0416000000000636e-05, 6.133299999999675e-05, 6.091699999999714e-05, 6.081900000000015e-05, 6.034700000000226e-05, 6.084699999999929e-05, 6.058299999999947e-05, 6.043099999999968e-05, 6.068099999999993e-05, 6.102699999999822e-05, 6.091700000000061e-05, 6.116600000000139e-05, 6.115199999999835e-05, 6.0666000000000886e-05, 6.112500000000215e-05, 6.115300000000129e-05, 6.116700000000086e-05, 6.1013999999998125e-05, 6.041700000000011e-05, 6.134699999999979e-05, 6.12499999999988e-05, 6.043099999999968e-05, 6.126400000000184e-05, 6.106999999999987e-05, 6.125000000000227e-05, 6.079100000000101e-05, 6.0971999999999416e-05, 6.133300000000022e-05, 6.0735999999998735e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.150" endtime="20201117 14:41:24.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.145" endtime="20201117 14:41:24.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.155" endtime="20201117 14:41:24.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.158" endtime="20201117 14:41:24.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.157" endtime="20201117 14:41:24.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.153" endtime="20201117 14:41:24.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.783" endtime="20201117 14:41:24.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.385" endtime="20201117 14:41:24.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:23.384" endtime="20201117 14:41:24.180"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.182" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.191" endtime="20201117 14:41:24.208"></status>
</kw>
<msg timestamp="20201117 14:41:24.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.189" endtime="20201117 14:41:24.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.210" endtime="20201117 14:41:24.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.213" endtime="20201117 14:41:24.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.186" endtime="20201117 14:41:24.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.184" endtime="20201117 14:41:24.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.222" endtime="20201117 14:41:24.508"></status>
</kw>
<msg timestamp="20201117 14:41:24.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024923306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.220" endtime="20201117 14:41:24.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024861347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024923306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.512" endtime="20201117 14:41:24.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.521" endtime="20201117 14:41:24.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.218" endtime="20201117 14:41:24.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.216" endtime="20201117 14:41:24.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.528" level="INFO">${RESULT} = [{'time': 0.024923306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.195900000000032e-05, 'source_diff': 6.195900000000032e-05}, {'time': 0.025007319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:24.525" endtime="20201117 14:41:24.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:24.529" endtime="20201117 14:41:24.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.547" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.546" endtime="20201117 14:41:24.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.550" level="INFO">VALUE: [6.195900000000032e-05, 6.22629999999999e-05, 6.176399999999888e-05, 6.192999999999824e-05, 6.233300000000122e-05, 6.19300000000017e-05, 6.218099999999796e-05, 6.234700000000079e-05, 6.158300000000047e-05, 6.208300000000097e-05, 6.157000000000037e-05, 6.208400000000044e-05, 6.223600000000024e-05, 6.141699999999764e-05, 6.234700000000079e-05, 6.211100000000011e-05, 6.226399999999938e-05, 6.13889999999985e-05, 6.199999999999956e-05, 6.179200000000148e-05, 6.143099999999721e-05, 6.166700000000136e-05, 6.186099999999986e-05, 6.22499999999998e-05, 6.208400000000044e-05, 6.159799999999951e-05, 6.141700000000111e-05, 6.163899999999875e-05, 6.201299999999965e-05, 6.191600000000214e-05, 6.234700000000079e-05, 6.227799999999895e-05, 6.14300000000012e-05, 6.149999999999906e-05, 6.159700000000004e-05, 6.173599999999974e-05, 6.158300000000047e-05, 6.194500000000075e-05, 6.218100000000143e-05, 6.18340000000002e-05, 6.212499999999968e-05, 6.207000000000087e-05, 6.17499999999993e-05, 6.209700000000054e-05, 6.206899999999793e-05, 6.197200000000042e-05, 6.15279999999982e-05, 6.193100000000118e-05, 6.183300000000072e-05, 6.134699999999979e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.548" endtime="20201117 14:41:24.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.543" endtime="20201117 14:41:24.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.553" endtime="20201117 14:41:24.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.556" endtime="20201117 14:41:24.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.555" endtime="20201117 14:41:24.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.551" endtime="20201117 14:41:24.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.183" endtime="20201117 14:41:24.577"></status>
</kw>
<msg timestamp="20201117 14:41:24.577" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.586" endtime="20201117 14:41:24.604"></status>
</kw>
<msg timestamp="20201117 14:41:24.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.584" endtime="20201117 14:41:24.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.605" endtime="20201117 14:41:24.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.608" endtime="20201117 14:41:24.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.582" endtime="20201117 14:41:24.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.580" endtime="20201117 14:41:24.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.618" endtime="20201117 14:41:24.905"></status>
</kw>
<msg timestamp="20201117 14:41:24.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.617" endtime="20201117 14:41:24.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022215806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:24.909" endtime="20201117 14:41:24.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.918" endtime="20201117 14:41:24.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.614" endtime="20201117 14:41:24.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.612" endtime="20201117 14:41:24.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:24.925" level="INFO">${RESULT} = [{'time': 0.022278056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.22499999999998e-05, 'source_diff': 6.22499999999998e-05}, {'time': 0.022363125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:24.921" endtime="20201117 14:41:24.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:24.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:24.926" endtime="20201117 14:41:24.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.943" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:41:24.942" endtime="20201117 14:41:24.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.946" level="INFO">VALUE: [6.22499999999998e-05, 6.20690000000014e-05, 6.22499999999998e-05, 6.14439999999973e-05, 6.166599999999842e-05, 6.218000000000196e-05, 6.218000000000196e-05, 6.19300000000017e-05, 6.176399999999888e-05, 6.22499999999998e-05, 6.143099999999721e-05, 6.18340000000002e-05, 6.143099999999721e-05, 6.155500000000133e-05, 6.190299999999857e-05, 6.163800000000275e-05, 6.216600000000239e-05, 6.169399999999756e-05, 6.199999999999956e-05, 6.208300000000097e-05, 6.140299999999807e-05, 6.216699999999839e-05, 6.198599999999999e-05, 6.223600000000024e-05, 6.22499999999998e-05, 6.143100000000068e-05, 6.183299999999725e-05, 6.208400000000044e-05, 6.159700000000004e-05, 6.177799999999845e-05, 6.176399999999888e-05, 6.227799999999895e-05, 6.229099999999904e-05, 6.159700000000004e-05, 6.144499999999678e-05, 6.194400000000128e-05, 6.191700000000161e-05, 6.184700000000029e-05, 6.233299999999775e-05, 6.188900000000247e-05, 6.236100000000036e-05, 6.140299999999807e-05, 6.149999999999906e-05, 6.14300000000012e-05, 6.149999999999906e-05, 6.227800000000241e-05, 6.193100000000118e-05, 6.201399999999913e-05, 6.208300000000097e-05, 6.209700000000054e-05]</msg>
<status status="PASS" starttime="20201117 14:41:24.944" endtime="20201117 14:41:24.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.939" endtime="20201117 14:41:24.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.949" endtime="20201117 14:41:24.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:24.953" endtime="20201117 14:41:24.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.951" endtime="20201117 14:41:24.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.947" endtime="20201117 14:41:24.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.578" endtime="20201117 14:41:24.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.181" endtime="20201117 14:41:24.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.180" endtime="20201117 14:41:24.974"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:24.976" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:24.985" endtime="20201117 14:41:25.003"></status>
</kw>
<msg timestamp="20201117 14:41:25.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:24.983" endtime="20201117 14:41:25.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.005" endtime="20201117 14:41:25.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.007" endtime="20201117 14:41:25.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.981" endtime="20201117 14:41:25.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.978" endtime="20201117 14:41:25.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.017" endtime="20201117 14:41:25.304"></status>
</kw>
<msg timestamp="20201117 14:41:25.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025759375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025822014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.016" endtime="20201117 14:41:25.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025759375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025822014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.308" endtime="20201117 14:41:25.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.317" endtime="20201117 14:41:25.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.013" endtime="20201117 14:41:25.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.011" endtime="20201117 14:41:25.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.324" level="INFO">${RESULT} = [{'time': 0.025822014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.263899999999975e-05, 'source_diff': 6.263899999999975e-05}, {'time': 0.025907028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:25.320" endtime="20201117 14:41:25.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:25.325" endtime="20201117 14:41:25.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.344" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.343" endtime="20201117 14:41:25.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.346" level="INFO">VALUE: [6.263899999999975e-05, 6.308399999999798e-05, 6.261100000000061e-05, 6.291699999999914e-05, 6.316700000000286e-05, 6.280499999999911e-05, 6.292999999999924e-05, 6.313800000000078e-05, 6.334699999999832e-05, 6.326400000000038e-05, 6.27500000000003e-05, 6.30829999999985e-05, 6.327799999999995e-05, 6.241699999999864e-05, 6.283299999999825e-05, 6.293099999999871e-05, 6.300000000000056e-05, 6.308399999999798e-05, 6.293099999999871e-05, 6.298700000000046e-05, 6.241599999999917e-05, 6.284699999999782e-05, 6.240299999999907e-05, 6.318000000000296e-05, 6.251399999999963e-05, 6.311100000000111e-05, 6.32500000000008e-05, 6.276400000000334e-05, 6.27500000000003e-05, 6.291699999999914e-05, 6.268100000000193e-05, 6.330599999999909e-05, 6.323700000000071e-05, 6.292999999999924e-05, 6.331899999999918e-05, 6.291600000000314e-05, 6.267999999999899e-05, 6.300000000000056e-05, 6.290299999999957e-05, 6.319499999999853e-05, 6.295799999999838e-05, 6.262500000000018e-05, 6.244499999999778e-05, 6.331999999999866e-05, 6.30699999999984e-05, 6.273700000000021e-05, 6.32500000000008e-05, 6.326400000000038e-05, 6.276399999999988e-05, 6.29439999999988e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.345" endtime="20201117 14:41:25.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.340" endtime="20201117 14:41:25.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.349" endtime="20201117 14:41:25.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.353" endtime="20201117 14:41:25.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.351" endtime="20201117 14:41:25.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.348" endtime="20201117 14:41:25.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.977" endtime="20201117 14:41:25.374"></status>
</kw>
<msg timestamp="20201117 14:41:25.374" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.383" endtime="20201117 14:41:25.401"></status>
</kw>
<msg timestamp="20201117 14:41:25.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.381" endtime="20201117 14:41:25.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.402" endtime="20201117 14:41:25.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.405" endtime="20201117 14:41:25.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.379" endtime="20201117 14:41:25.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.376" endtime="20201117 14:41:25.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.416" endtime="20201117 14:41:25.703"></status>
</kw>
<msg timestamp="20201117 14:41:25.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.414" endtime="20201117 14:41:25.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.707" endtime="20201117 14:41:25.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.716" endtime="20201117 14:41:25.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.412" endtime="20201117 14:41:25.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.410" endtime="20201117 14:41:25.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:25.723" level="INFO">${RESULT} = [{'time': 0.022555278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.022642278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:25.719" endtime="20201117 14:41:25.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:25.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:25.724" endtime="20201117 14:41:25.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.741" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:41:25.740" endtime="20201117 14:41:25.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.744" level="INFO">VALUE: [6.27500000000003e-05, 6.283399999999773e-05, 6.272300000000064e-05, 6.269499999999803e-05, 6.241700000000211e-05, 6.319400000000253e-05, 6.333299999999875e-05, 6.292999999999924e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.293099999999871e-05, 6.320799999999863e-05, 6.240300000000254e-05, 6.333299999999875e-05, 6.308400000000144e-05, 6.290299999999957e-05, 6.300000000000056e-05, 6.293100000000218e-05, 6.298700000000046e-05, 6.27500000000003e-05, 6.326400000000038e-05, 6.308300000000197e-05, 6.291599999999967e-05, 6.286100000000086e-05, 6.2582999999998e-05, 6.30829999999985e-05, 6.258300000000147e-05, 6.240299999999907e-05, 6.266699999999889e-05, 6.33479999999978e-05, 6.326400000000038e-05, 6.280500000000258e-05, 6.273600000000074e-05, 6.294400000000228e-05, 6.333299999999875e-05, 6.323599999999777e-05, 6.273599999999727e-05, 6.2582999999998e-05, 6.306899999999893e-05, 6.32500000000008e-05, 6.32500000000008e-05, 6.3276999999997e-05, 6.261200000000008e-05, 6.30699999999984e-05, 6.258400000000094e-05, 6.327700000000047e-05, 6.301400000000013e-05, 6.295799999999838e-05, 6.315299999999982e-05, 6.333300000000222e-05]</msg>
<status status="PASS" starttime="20201117 14:41:25.742" endtime="20201117 14:41:25.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.737" endtime="20201117 14:41:25.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.747" endtime="20201117 14:41:25.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:25.750" endtime="20201117 14:41:25.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.749" endtime="20201117 14:41:25.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.745" endtime="20201117 14:41:25.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.375" endtime="20201117 14:41:25.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.975" endtime="20201117 14:41:25.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:24.974" endtime="20201117 14:41:25.772"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.774" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.783" endtime="20201117 14:41:25.801"></status>
</kw>
<msg timestamp="20201117 14:41:25.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.782" endtime="20201117 14:41:25.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:25.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:25.802" endtime="20201117 14:41:25.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.805" endtime="20201117 14:41:25.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.778" endtime="20201117 14:41:25.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.776" endtime="20201117 14:41:25.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:25.815" endtime="20201117 14:41:26.100"></status>
</kw>
<msg timestamp="20201117 14:41:26.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025433431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:25.813" endtime="20201117 14:41:26.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025433431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.104" endtime="20201117 14:41:26.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.113" endtime="20201117 14:41:26.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.810" endtime="20201117 14:41:26.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.808" endtime="20201117 14:41:26.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.120" level="INFO">${RESULT} = [{'time': 0.025433431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.391700000000014e-05, 'source_diff': 6.391700000000014e-05}, {'time': 0.025517431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.116" endtime="20201117 14:41:26.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.133" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:26.121" endtime="20201117 14:41:26.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.138" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.137" endtime="20201117 14:41:26.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.141" level="INFO">VALUE: [6.391700000000014e-05, 6.391700000000014e-05, 6.418000000000049e-05, 6.367999999999999e-05, 6.401400000000113e-05, 6.34439999999993e-05, 6.349999999999759e-05, 6.376400000000088e-05, 6.390300000000057e-05, 6.401400000000113e-05, 6.40829999999995e-05, 6.393100000000318e-05, 6.43479999999988e-05, 6.42500000000018e-05, 6.34439999999993e-05, 6.363900000000075e-05, 6.349999999999759e-05, 6.415300000000082e-05, 6.379200000000002e-05, 6.40690000000034e-05, 6.42500000000018e-05, 6.374999999999784e-05, 6.393099999999971e-05, 6.419499999999953e-05, 6.38479999999983e-05, 6.358400000000194e-05, 6.424999999999834e-05, 6.347300000000139e-05, 6.337500000000093e-05, 6.436099999999889e-05, 6.411100000000211e-05, 6.426400000000138e-05, 6.3582999999999e-05, 6.376400000000088e-05, 6.361100000000161e-05, 6.373600000000174e-05, 6.354199999999977e-05, 6.391700000000014e-05, 6.368100000000293e-05, 6.397299999999842e-05, 6.411099999999864e-05, 6.347200000000192e-05, 6.416600000000092e-05, 6.434699999999932e-05, 6.373600000000174e-05, 6.377800000000045e-05, 6.376400000000088e-05, 6.380599999999959e-05, 6.393099999999971e-05, 6.368099999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.139" endtime="20201117 14:41:26.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.134" endtime="20201117 14:41:26.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.144" endtime="20201117 14:41:26.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.148" endtime="20201117 14:41:26.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.146" endtime="20201117 14:41:26.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.142" endtime="20201117 14:41:26.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.775" endtime="20201117 14:41:26.169"></status>
</kw>
<msg timestamp="20201117 14:41:26.169" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.178" endtime="20201117 14:41:26.195"></status>
</kw>
<msg timestamp="20201117 14:41:26.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.176" endtime="20201117 14:41:26.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.197" endtime="20201117 14:41:26.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.199" endtime="20201117 14:41:26.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.174" endtime="20201117 14:41:26.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.171" endtime="20201117 14:41:26.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.210" endtime="20201117 14:41:26.496"></status>
</kw>
<msg timestamp="20201117 14:41:26.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.208" endtime="20201117 14:41:26.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.501" endtime="20201117 14:41:26.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.509" endtime="20201117 14:41:26.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.206" endtime="20201117 14:41:26.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.204" endtime="20201117 14:41:26.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.516" level="INFO">${RESULT} = [{'time': 0.022819056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.381999999999916e-05, 'source_diff': 6.381999999999916e-05}, {'time': 0.022902028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:26.513" endtime="20201117 14:41:26.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:26.517" endtime="20201117 14:41:26.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.535" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.534" endtime="20201117 14:41:26.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.537" level="INFO">VALUE: [6.381999999999916e-05, 6.36950000000025e-05, 6.393099999999971e-05, 6.359699999999857e-05, 6.365300000000032e-05, 6.37500000000013e-05, 6.361100000000161e-05, 6.37769999999975e-05, 6.379200000000002e-05, 6.358300000000247e-05, 6.376400000000088e-05, 6.373599999999827e-05, 6.34439999999993e-05, 6.350000000000106e-05, 6.406899999999993e-05, 6.411100000000211e-05, 6.362499999999771e-05, 6.408399999999898e-05, 6.37500000000013e-05, 6.37500000000013e-05, 6.341699999999964e-05, 6.384699999999882e-05, 6.431999999999966e-05, 6.374999999999784e-05, 6.373600000000174e-05, 6.406899999999993e-05, 6.393099999999971e-05, 6.383299999999925e-05, 6.37500000000013e-05, 6.391699999999667e-05, 6.366699999999989e-05, 6.351400000000063e-05, 6.358399999999848e-05, 6.374999999999784e-05, 6.3582999999999e-05, 6.42630000000019e-05, 6.386099999999839e-05, 6.342999999999974e-05, 6.399999999999809e-05, 6.423600000000224e-05, 6.376400000000088e-05, 6.343099999999921e-05, 6.434699999999932e-05, 6.408399999999898e-05, 6.42639999999979e-05, 6.373599999999827e-05, 6.413900000000125e-05, 6.342999999999974e-05, 6.431900000000018e-05, 6.409699999999907e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.536" endtime="20201117 14:41:26.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.531" endtime="20201117 14:41:26.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.541" endtime="20201117 14:41:26.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.545" endtime="20201117 14:41:26.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.543" endtime="20201117 14:41:26.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.539" endtime="20201117 14:41:26.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.170" endtime="20201117 14:41:26.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.773" endtime="20201117 14:41:26.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:25.772" endtime="20201117 14:41:26.566"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.568" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.577" endtime="20201117 14:41:26.596"></status>
</kw>
<msg timestamp="20201117 14:41:26.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.575" endtime="20201117 14:41:26.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.598" endtime="20201117 14:41:26.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.601" endtime="20201117 14:41:26.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.573" endtime="20201117 14:41:26.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.571" endtime="20201117 14:41:26.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.610" endtime="20201117 14:41:26.895"></status>
</kw>
<msg timestamp="20201117 14:41:26.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.609" endtime="20201117 14:41:26.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025876431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:26.900" endtime="20201117 14:41:26.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.908" endtime="20201117 14:41:26.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.606" endtime="20201117 14:41:26.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.604" endtime="20201117 14:41:26.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:26.915" level="INFO">${RESULT} = [{'time': 0.025876431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.47639999999984e-05, 'source_diff': 6.47639999999984e-05}, {'time': 0.025958444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:26.911" endtime="20201117 14:41:26.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:26.930" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:26.916" endtime="20201117 14:41:26.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.935" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:26.934" endtime="20201117 14:41:26.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.937" level="INFO">VALUE: [6.47639999999984e-05, 6.450000000000206e-05, 6.455500000000086e-05, 6.509700000000007e-05, 6.47500000000023e-05, 6.474999999999884e-05, 6.491699999999767e-05, 6.531899999999771e-05, 6.456900000000043e-05, 6.47639999999984e-05, 6.474999999999884e-05, 6.523600000000324e-05, 6.473599999999927e-05, 6.527799999999848e-05, 6.458399999999948e-05, 6.449999999999859e-05, 6.498600000000299e-05, 6.517999999999802e-05, 6.466600000000142e-05, 6.501400000000213e-05, 6.47639999999984e-05, 6.493100000000071e-05, 6.483300000000025e-05, 6.493100000000071e-05, 6.48479999999993e-05, 6.52500000000028e-05, 6.493100000000071e-05, 6.501299999999918e-05, 6.486099999999939e-05, 6.487500000000243e-05, 6.469400000000056e-05, 6.456900000000043e-05, 6.47639999999984e-05, 6.47500000000023e-05, 6.481900000000068e-05, 6.441700000000064e-05, 6.451400000000163e-05, 6.523699999999924e-05, 6.47089999999996e-05, 6.44440000000003e-05, 6.518000000000149e-05, 6.448600000000249e-05, 6.504100000000179e-05, 6.4583e-05, 6.47639999999984e-05, 6.443100000000021e-05, 6.479200000000102e-05, 6.493100000000071e-05, 6.484699999999982e-05, 6.443100000000021e-05]</msg>
<status status="PASS" starttime="20201117 14:41:26.936" endtime="20201117 14:41:26.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.931" endtime="20201117 14:41:26.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.941" endtime="20201117 14:41:26.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:26.945" endtime="20201117 14:41:26.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.943" endtime="20201117 14:41:26.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.939" endtime="20201117 14:41:26.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.569" endtime="20201117 14:41:26.965"></status>
</kw>
<msg timestamp="20201117 14:41:26.966" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.974" endtime="20201117 14:41:26.992"></status>
</kw>
<msg timestamp="20201117 14:41:26.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.973" endtime="20201117 14:41:26.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:26.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:26.994" endtime="20201117 14:41:26.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:26.997" endtime="20201117 14:41:26.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.970" endtime="20201117 14:41:27.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.968" endtime="20201117 14:41:27.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.007" endtime="20201117 14:41:27.293"></status>
</kw>
<msg timestamp="20201117 14:41:27.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:27.006" endtime="20201117 14:41:27.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022281, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:27.298" endtime="20201117 14:41:27.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.306" endtime="20201117 14:41:27.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.003" endtime="20201117 14:41:27.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.001" endtime="20201117 14:41:27.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.313" level="INFO">${RESULT} = [{'time': 0.022281, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.494399999999734e-05, 'source_diff': 6.494399999999734e-05}, {'time': 0.022362014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:27.310" endtime="20201117 14:41:27.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.327" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:27.314" endtime="20201117 14:41:27.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.332" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.331" endtime="20201117 14:41:27.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.334" level="INFO">VALUE: [6.494399999999734e-05, 6.52639999999989e-05, 6.493100000000071e-05, 6.499999999999909e-05, 6.4889000000002e-05, 6.536099999999989e-05, 6.445799999999988e-05, 6.45699999999999e-05, 6.47639999999984e-05, 6.47219999999997e-05, 6.52500000000028e-05, 6.4583e-05, 6.529200000000152e-05, 6.441699999999717e-05, 6.501399999999866e-05, 6.509700000000007e-05, 6.458399999999948e-05, 6.509799999999955e-05, 6.491700000000114e-05, 6.533400000000023e-05, 6.443000000000074e-05, 6.47219999999997e-05, 6.504200000000127e-05, 6.49440000000008e-05, 6.445799999999988e-05, 6.518000000000149e-05, 6.50830000000005e-05, 6.524999999999934e-05, 6.477800000000145e-05, 6.458399999999948e-05, 6.493100000000071e-05, 6.509799999999955e-05, 6.466700000000089e-05, 6.499999999999909e-05, 6.52639999999989e-05, 6.441600000000117e-05, 6.484699999999982e-05, 6.524999999999934e-05, 6.491700000000114e-05, 6.516700000000139e-05, 6.484699999999982e-05, 6.523599999999977e-05, 6.445799999999988e-05, 6.536199999999937e-05, 6.441700000000064e-05, 6.517999999999802e-05, 6.484699999999982e-05, 6.492999999999777e-05, 6.500000000000256e-05, 6.461099999999914e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.333" endtime="20201117 14:41:27.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.328" endtime="20201117 14:41:27.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.338" endtime="20201117 14:41:27.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.342" endtime="20201117 14:41:27.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.340" endtime="20201117 14:41:27.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.336" endtime="20201117 14:41:27.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.966" endtime="20201117 14:41:27.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.567" endtime="20201117 14:41:27.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:26.566" endtime="20201117 14:41:27.363"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.365" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.374" endtime="20201117 14:41:27.392"></status>
</kw>
<msg timestamp="20201117 14:41:27.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.372" endtime="20201117 14:41:27.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.394" endtime="20201117 14:41:27.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.397" endtime="20201117 14:41:27.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.370" endtime="20201117 14:41:27.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.367" endtime="20201117 14:41:27.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.407" endtime="20201117 14:41:27.693"></status>
</kw>
<msg timestamp="20201117 14:41:27.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.405" endtime="20201117 14:41:27.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024926764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.697" endtime="20201117 14:41:27.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.705" endtime="20201117 14:41:27.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.403" endtime="20201117 14:41:27.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.401" endtime="20201117 14:41:27.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:27.712" level="INFO">${RESULT} = [{'time': 0.024992708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.594399999999834e-05, 'source_diff': 6.594399999999834e-05}, {'time': 0.025074708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:27.709" endtime="20201117 14:41:27.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:27.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:27.713" endtime="20201117 14:41:27.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.731" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:27.730" endtime="20201117 14:41:27.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.734" level="INFO">VALUE: [6.594399999999834e-05, 6.60830000000015e-05, 6.558299999999753e-05, 6.60969999999976e-05, 6.60830000000015e-05, 6.60830000000015e-05, 6.627800000000295e-05, 6.594500000000128e-05, 6.616699999999892e-05, 6.616699999999892e-05, 6.616700000000239e-05, 6.584700000000082e-05, 6.609700000000107e-05, 6.594399999999834e-05, 6.633299999999828e-05, 6.59159999999992e-05, 6.637500000000046e-05, 6.591699999999867e-05, 6.583300000000125e-05, 6.561100000000014e-05, 6.627799999999948e-05, 6.55700000000009e-05, 6.558400000000048e-05, 6.572300000000017e-05, 6.626300000000043e-05, 6.609700000000107e-05, 6.57639999999994e-05, 6.608299999999803e-05, 6.54440000000013e-05, 6.629200000000252e-05, 6.627799999999948e-05, 6.625000000000034e-05, 6.62359999999973e-05, 6.609700000000107e-05, 6.611200000000012e-05, 6.57769999999995e-05, 6.558400000000048e-05, 6.60830000000015e-05, 6.574999999999984e-05, 6.627799999999948e-05, 6.556900000000143e-05, 6.592999999999877e-05, 6.551399999999916e-05, 6.5583000000001e-05, 6.62639999999999e-05, 6.623600000000077e-05, 6.591699999999867e-05, 6.551400000000263e-05, 6.5583999999997e-05, 6.555499999999839e-05]</msg>
<status status="PASS" starttime="20201117 14:41:27.732" endtime="20201117 14:41:27.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.727" endtime="20201117 14:41:27.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.737" endtime="20201117 14:41:27.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:27.741" endtime="20201117 14:41:27.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.739" endtime="20201117 14:41:27.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.736" endtime="20201117 14:41:27.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.366" endtime="20201117 14:41:27.762"></status>
</kw>
<msg timestamp="20201117 14:41:27.762" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.771" endtime="20201117 14:41:27.789"></status>
</kw>
<msg timestamp="20201117 14:41:27.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.769" endtime="20201117 14:41:27.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:27.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:27.791" endtime="20201117 14:41:27.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.793" endtime="20201117 14:41:27.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.766" endtime="20201117 14:41:27.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.764" endtime="20201117 14:41:27.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:27.804" endtime="20201117 14:41:28.090"></status>
</kw>
<msg timestamp="20201117 14:41:28.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:27.802" endtime="20201117 14:41:28.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.094" endtime="20201117 14:41:28.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.103" endtime="20201117 14:41:28.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.800" endtime="20201117 14:41:28.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.798" endtime="20201117 14:41:28.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.110" level="INFO">${RESULT} = [{'time': 0.022422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.577799999999898e-05, 'source_diff': 6.577799999999898e-05}, {'time': 0.022505208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.106" endtime="20201117 14:41:28.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:28.111" endtime="20201117 14:41:28.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.134" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.133" endtime="20201117 14:41:28.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.136" level="INFO">VALUE: [6.577799999999898e-05, 6.601399999999966e-05, 6.602699999999975e-05, 6.573600000000027e-05, 6.594399999999834e-05, 6.616599999999945e-05, 6.631900000000218e-05, 6.541700000000164e-05, 6.569500000000103e-05, 6.612500000000021e-05, 6.584700000000082e-05, 6.545800000000088e-05, 6.549999999999959e-05, 6.606900000000193e-05, 6.611100000000064e-05, 6.625000000000034e-05, 6.593000000000224e-05, 6.549999999999959e-05, 6.559700000000057e-05, 6.5583000000001e-05, 6.60830000000015e-05, 6.555600000000134e-05, 6.625000000000034e-05, 6.53890000000025e-05, 6.551399999999916e-05, 6.54440000000013e-05, 6.616699999999892e-05, 6.569400000000156e-05, 6.636100000000089e-05, 6.623600000000077e-05, 6.5583000000001e-05, 6.627799999999948e-05, 6.606900000000193e-05, 6.60830000000015e-05, 6.543100000000121e-05, 6.616699999999892e-05, 6.618099999999849e-05, 6.574999999999984e-05, 6.543100000000121e-05, 6.562499999999971e-05, 6.583299999999778e-05, 6.577799999999898e-05, 6.556899999999796e-05, 6.62639999999999e-05, 6.57500000000033e-05, 6.62220000000012e-05, 6.574999999999984e-05, 6.625000000000034e-05, 6.574999999999984e-05, 6.60839999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.135" endtime="20201117 14:41:28.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.130" endtime="20201117 14:41:28.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.140" endtime="20201117 14:41:28.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.143" endtime="20201117 14:41:28.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.142" endtime="20201117 14:41:28.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.138" endtime="20201117 14:41:28.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.763" endtime="20201117 14:41:28.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.364" endtime="20201117 14:41:28.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:27.363" endtime="20201117 14:41:28.165"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.167" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.176" endtime="20201117 14:41:28.194"></status>
</kw>
<msg timestamp="20201117 14:41:28.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.174" endtime="20201117 14:41:28.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.196" endtime="20201117 14:41:28.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.198" endtime="20201117 14:41:28.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.171" endtime="20201117 14:41:28.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.169" endtime="20201117 14:41:28.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.208" endtime="20201117 14:41:28.495"></status>
</kw>
<msg timestamp="20201117 14:41:28.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025787917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025854722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.206" endtime="20201117 14:41:28.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025787917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025854722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.499" endtime="20201117 14:41:28.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.508" endtime="20201117 14:41:28.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.203" endtime="20201117 14:41:28.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.202" endtime="20201117 14:41:28.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.515" level="INFO">${RESULT} = [{'time': 0.025854722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680499999999964e-05, 'source_diff': 6.680499999999964e-05}, {'time': 0.025941722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.512" endtime="20201117 14:41:28.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:28.516" endtime="20201117 14:41:28.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.535" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.534" endtime="20201117 14:41:28.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.538" level="INFO">VALUE: [6.680499999999964e-05, 6.650000000000059e-05, 6.713900000000078e-05, 6.658299999999853e-05, 6.706899999999946e-05, 6.70830000000025e-05, 6.675000000000084e-05, 6.65700000000019e-05, 6.709700000000207e-05, 6.67640000000004e-05, 6.6583999999998e-05, 6.690200000000063e-05, 6.702800000000023e-05, 6.694399999999934e-05, 6.727800000000048e-05, 6.708299999999903e-05, 6.643100000000221e-05, 6.684699999999835e-05, 6.69030000000001e-05, 6.668100000000246e-05, 6.73619999999979e-05, 6.709800000000155e-05, 6.713900000000078e-05, 6.676300000000093e-05, 6.70830000000025e-05, 6.638900000000003e-05, 6.672199999999823e-05, 6.668100000000246e-05, 6.669500000000203e-05, 6.699999999999762e-05, 6.643100000000221e-05, 6.734699999999885e-05, 6.658400000000148e-05, 6.715300000000035e-05, 6.694400000000281e-05, 6.733400000000223e-05, 6.72640000000009e-05, 6.642999999999927e-05, 6.649999999999712e-05, 6.67640000000004e-05, 6.70969999999986e-05, 6.70969999999986e-05, 6.6583000000002e-05, 6.693100000000271e-05, 6.661100000000114e-05, 6.716699999999992e-05, 6.649999999999712e-05, 6.731899999999971e-05, 6.706999999999894e-05, 6.706899999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.536" endtime="20201117 14:41:28.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.531" endtime="20201117 14:41:28.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.541" endtime="20201117 14:41:28.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.545" endtime="20201117 14:41:28.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.543" endtime="20201117 14:41:28.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.539" endtime="20201117 14:41:28.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.168" endtime="20201117 14:41:28.565"></status>
</kw>
<msg timestamp="20201117 14:41:28.566" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.574" endtime="20201117 14:41:28.593"></status>
</kw>
<msg timestamp="20201117 14:41:28.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.573" endtime="20201117 14:41:28.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.595" endtime="20201117 14:41:28.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.597" endtime="20201117 14:41:28.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.570" endtime="20201117 14:41:28.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.568" endtime="20201117 14:41:28.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.608" endtime="20201117 14:41:28.893"></status>
</kw>
<msg timestamp="20201117 14:41:28.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.606" endtime="20201117 14:41:28.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:28.897" endtime="20201117 14:41:28.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.906" endtime="20201117 14:41:28.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.603" endtime="20201117 14:41:28.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.602" endtime="20201117 14:41:28.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:28.913" level="INFO">${RESULT} = [{'time': 0.022521944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.676299999999746e-05, 'source_diff': 6.676299999999746e-05}, {'time': 0.022609944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:28.910" endtime="20201117 14:41:28.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:28.927" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:28.914" endtime="20201117 14:41:28.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.932" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:41:28.931" endtime="20201117 14:41:28.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.935" level="INFO">VALUE: [6.676299999999746e-05, 6.658299999999853e-05, 6.715300000000035e-05, 6.643000000000274e-05, 6.663900000000028e-05, 6.665300000000332e-05, 6.67090000000016e-05, 6.702800000000023e-05, 6.647200000000145e-05, 6.682000000000216e-05, 6.686100000000139e-05, 6.650000000000059e-05, 6.642999999999927e-05, 6.74030000000006e-05, 6.692999999999977e-05, 6.700000000000109e-05, 6.675000000000084e-05, 6.67640000000004e-05, 6.729200000000005e-05, 6.638900000000003e-05, 6.718099999999949e-05, 6.650000000000059e-05, 6.680499999999964e-05, 6.640300000000307e-05, 6.702700000000075e-05, 6.641699999999917e-05, 6.718000000000002e-05, 6.688900000000053e-05, 6.642999999999927e-05, 6.716600000000045e-05, 6.684699999999835e-05, 6.727800000000048e-05, 6.65969999999981e-05, 6.70969999999986e-05, 6.643099999999874e-05, 6.668099999999899e-05, 6.683399999999826e-05, 6.6583999999998e-05, 6.661099999999767e-05, 6.659700000000157e-05, 6.65969999999981e-05, 6.642999999999927e-05, 6.656999999999844e-05, 6.65969999999981e-05, 6.643100000000221e-05, 6.718099999999949e-05, 6.72640000000009e-05, 6.64440000000023e-05, 6.669500000000203e-05, 6.650000000000059e-05]</msg>
<status status="PASS" starttime="20201117 14:41:28.933" endtime="20201117 14:41:28.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.928" endtime="20201117 14:41:28.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.938" endtime="20201117 14:41:28.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:28.941" endtime="20201117 14:41:28.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.940" endtime="20201117 14:41:28.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.936" endtime="20201117 14:41:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.566" endtime="20201117 14:41:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.166" endtime="20201117 14:41:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.165" endtime="20201117 14:41:28.963"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.965" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.974" endtime="20201117 14:41:28.991"></status>
</kw>
<msg timestamp="20201117 14:41:28.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.972" endtime="20201117 14:41:28.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:28.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:28.993" endtime="20201117 14:41:28.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:28.996" endtime="20201117 14:41:28.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.969" endtime="20201117 14:41:28.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.967" endtime="20201117 14:41:28.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.006" endtime="20201117 14:41:29.292"></status>
</kw>
<msg timestamp="20201117 14:41:29.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024911236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.004" endtime="20201117 14:41:29.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024911236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.296" endtime="20201117 14:41:29.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.305" endtime="20201117 14:41:29.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.001" endtime="20201117 14:41:29.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.999" endtime="20201117 14:41:29.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.312" level="INFO">${RESULT} = [{'time': 0.024978694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745799999999941e-05, 'source_diff': 6.745799999999941e-05}, {'time': 0.025061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.309" endtime="20201117 14:41:29.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:29.313" endtime="20201117 14:41:29.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.331" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.330" endtime="20201117 14:41:29.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.333" level="INFO">VALUE: [6.745799999999941e-05, 6.82359999999993e-05, 6.790299999999763e-05, 6.794400000000034e-05, 6.806900000000046e-05, 6.826399999999844e-05, 6.793100000000024e-05, 6.830600000000062e-05, 6.736099999999842e-05, 6.769499999999956e-05, 6.834799999999933e-05, 6.774999999999837e-05, 6.776300000000193e-05, 6.74299999999968e-05, 6.831900000000071e-05, 6.808300000000003e-05, 6.808300000000003e-05, 6.774999999999837e-05, 6.79030000000011e-05, 6.751400000000116e-05, 6.827799999999801e-05, 6.759800000000205e-05, 6.738900000000103e-05, 6.769400000000009e-05, 6.80969999999996e-05, 6.779100000000107e-05, 6.782000000000316e-05, 6.75969999999991e-05, 6.756899999999996e-05, 6.793000000000077e-05, 6.747199999999898e-05, 6.758299999999953e-05, 6.793100000000024e-05, 6.769499999999956e-05, 6.802800000000123e-05, 6.790299999999763e-05, 6.791700000000067e-05, 6.74160000000007e-05, 6.799999999999862e-05, 6.806900000000046e-05, 6.774999999999837e-05, 6.759700000000257e-05, 6.756899999999996e-05, 6.736099999999842e-05, 6.750000000000159e-05, 6.776399999999794e-05, 6.741700000000017e-05, 6.801399999999819e-05, 6.774999999999837e-05, 6.823700000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.332" endtime="20201117 14:41:29.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.327" endtime="20201117 14:41:29.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.336" endtime="20201117 14:41:29.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.340" endtime="20201117 14:41:29.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.338" endtime="20201117 14:41:29.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.335" endtime="20201117 14:41:29.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.966" endtime="20201117 14:41:29.361"></status>
</kw>
<msg timestamp="20201117 14:41:29.361" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.370" endtime="20201117 14:41:29.389"></status>
</kw>
<msg timestamp="20201117 14:41:29.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.368" endtime="20201117 14:41:29.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.390" endtime="20201117 14:41:29.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.393" endtime="20201117 14:41:29.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.365" endtime="20201117 14:41:29.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.363" endtime="20201117 14:41:29.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.404" endtime="20201117 14:41:29.689"></status>
</kw>
<msg timestamp="20201117 14:41:29.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.402" endtime="20201117 14:41:29.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.693" endtime="20201117 14:41:29.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.702" endtime="20201117 14:41:29.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.399" endtime="20201117 14:41:29.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.397" endtime="20201117 14:41:29.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:29.709" level="INFO">${RESULT} = [{'time': 0.022578597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.777799999999751e-05, 'source_diff': 6.777799999999751e-05}, {'time': 0.022666625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:29.705" endtime="20201117 14:41:29.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:29.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:29.710" endtime="20201117 14:41:29.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.728" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:41:29.726" endtime="20201117 14:41:29.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.730" level="INFO">VALUE: [6.777799999999751e-05, 6.830600000000062e-05, 6.743099999999974e-05, 6.770899999999913e-05, 6.768099999999999e-05, 6.799999999999862e-05, 6.793100000000024e-05, 6.836099999999942e-05, 6.820899999999963e-05, 6.80969999999996e-05, 6.774999999999837e-05, 6.743000000000027e-05, 6.818000000000102e-05, 6.766700000000042e-05, 6.768099999999999e-05, 6.820800000000016e-05, 6.779200000000055e-05, 6.776399999999794e-05, 6.80839999999995e-05, 6.756999999999944e-05, 6.776300000000193e-05, 6.8277000000002e-05, 6.758299999999953e-05, 6.744399999999984e-05, 6.784699999999935e-05, 6.741599999999723e-05, 6.833299999999681e-05, 6.798699999999852e-05, 6.802800000000123e-05, 6.808300000000003e-05, 6.829199999999758e-05, 6.833399999999976e-05, 6.741700000000017e-05, 6.763899999999781e-05, 6.818000000000102e-05, 6.802800000000123e-05, 6.768000000000052e-05, 6.770799999999966e-05, 6.776399999999794e-05, 6.824999999999887e-05, 6.791700000000067e-05, 6.832000000000019e-05, 6.762500000000171e-05, 6.775000000000184e-05, 6.82359999999993e-05, 6.827699999999853e-05, 6.766700000000042e-05, 6.806900000000046e-05, 6.794400000000034e-05, 6.777799999999751e-05]</msg>
<status status="PASS" starttime="20201117 14:41:29.729" endtime="20201117 14:41:29.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.724" endtime="20201117 14:41:29.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.733" endtime="20201117 14:41:29.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:29.737" endtime="20201117 14:41:29.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.735" endtime="20201117 14:41:29.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.732" endtime="20201117 14:41:29.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.362" endtime="20201117 14:41:29.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.964" endtime="20201117 14:41:29.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:28.963" endtime="20201117 14:41:29.758"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.761" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.770" endtime="20201117 14:41:29.788"></status>
</kw>
<msg timestamp="20201117 14:41:29.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.768" endtime="20201117 14:41:29.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:29.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:29.790" endtime="20201117 14:41:29.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.793" endtime="20201117 14:41:29.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.765" endtime="20201117 14:41:29.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.763" endtime="20201117 14:41:29.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:29.802" endtime="20201117 14:41:30.087"></status>
</kw>
<msg timestamp="20201117 14:41:30.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026343486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026412417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:29.800" endtime="20201117 14:41:30.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026343486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026412417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.092" endtime="20201117 14:41:30.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.100" endtime="20201117 14:41:30.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.798" endtime="20201117 14:41:30.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.796" endtime="20201117 14:41:30.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.107" level="INFO">${RESULT} = [{'time': 0.026412417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.893100000000124e-05, 'source_diff': 6.893100000000124e-05}, {'time': 0.026496417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.104" endtime="20201117 14:41:30.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.122" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.108" endtime="20201117 14:41:30.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.127" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.126" endtime="20201117 14:41:30.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.130" level="INFO">VALUE: [6.893100000000124e-05, 6.89030000000021e-05, 6.918099999999802e-05, 6.919400000000159e-05, 6.901399999999919e-05, 6.926399999999944e-05, 6.909699999999713e-05, 6.908300000000103e-05, 6.902799999999876e-05, 6.926399999999944e-05, 6.85970000000001e-05, 6.893099999999777e-05, 6.88619999999994e-05, 6.845800000000041e-05, 6.883400000000026e-05, 6.8584e-05, 6.90970000000006e-05, 6.85970000000001e-05, 6.908299999999756e-05, 6.848599999999955e-05, 6.884700000000035e-05, 6.87640000000024e-05, 6.908299999999756e-05, 6.894500000000081e-05, 6.919500000000106e-05, 6.849999999999912e-05, 6.894500000000081e-05, 6.869399999999762e-05, 6.884700000000035e-05, 6.908299999999756e-05, 6.89160000000022e-05, 6.869399999999762e-05, 6.851399999999869e-05, 6.858300000000053e-05, 6.908300000000103e-05, 6.863899999999881e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.84030000000016e-05, 6.918099999999802e-05, 6.852800000000173e-05, 6.926299999999996e-05, 6.934699999999738e-05, 6.85970000000001e-05, 6.845800000000041e-05, 6.865299999999838e-05, 6.868099999999752e-05, 6.850000000000259e-05, 6.891700000000167e-05, 6.884700000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.128" endtime="20201117 14:41:30.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.123" endtime="20201117 14:41:30.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.133" endtime="20201117 14:41:30.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.136" endtime="20201117 14:41:30.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.135" endtime="20201117 14:41:30.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.131" endtime="20201117 14:41:30.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.761" endtime="20201117 14:41:30.158"></status>
</kw>
<msg timestamp="20201117 14:41:30.158" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.167" endtime="20201117 14:41:30.184"></status>
</kw>
<msg timestamp="20201117 14:41:30.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.165" endtime="20201117 14:41:30.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.186" endtime="20201117 14:41:30.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.188" endtime="20201117 14:41:30.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.162" endtime="20201117 14:41:30.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.160" endtime="20201117 14:41:30.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.199" endtime="20201117 14:41:30.484"></status>
</kw>
<msg timestamp="20201117 14:41:30.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.197" endtime="20201117 14:41:30.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.489" endtime="20201117 14:41:30.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.497" endtime="20201117 14:41:30.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.194" endtime="20201117 14:41:30.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.193" endtime="20201117 14:41:30.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.504" level="INFO">${RESULT} = [{'time': 0.022631125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.927799999999901e-05, 'source_diff': 6.927799999999901e-05}, {'time': 0.022720153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.501" endtime="20201117 14:41:30.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.518" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.505" endtime="20201117 14:41:30.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.523" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.522" endtime="20201117 14:41:30.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.525" level="INFO">VALUE: [6.927799999999901e-05, 6.915299999999888e-05, 6.930600000000162e-05, 6.893099999999777e-05, 6.899999999999962e-05, 6.9277000000003e-05, 6.895800000000091e-05, 6.852800000000173e-05, 6.893000000000177e-05, 6.902799999999876e-05, 6.924999999999987e-05, 6.924999999999987e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.893100000000124e-05, 6.886099999999992e-05, 6.876399999999894e-05, 6.849999999999912e-05, 6.849999999999912e-05, 6.926299999999996e-05, 6.861099999999967e-05, 6.891599999999873e-05, 6.936100000000042e-05, 6.844400000000084e-05, 6.879199999999808e-05, 6.855600000000087e-05, 6.90970000000006e-05, 6.876399999999894e-05, 6.907000000000094e-05, 6.875000000000284e-05, 6.893099999999777e-05, 6.883300000000078e-05, 6.893000000000177e-05, 6.884699999999688e-05, 6.92640000000029e-05, 6.84030000000016e-05, 6.851399999999869e-05, 6.844500000000031e-05, 6.886099999999992e-05, 6.890299999999863e-05, 6.915299999999888e-05, 6.897299999999995e-05, 6.891700000000167e-05, 6.917999999999855e-05, 6.934700000000085e-05, 6.909699999999713e-05, 6.891599999999873e-05, 6.934699999999738e-05, 6.894400000000134e-05, 6.936100000000042e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.524" endtime="20201117 14:41:30.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.519" endtime="20201117 14:41:30.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.529" endtime="20201117 14:41:30.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.533" endtime="20201117 14:41:30.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.531" endtime="20201117 14:41:30.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.527" endtime="20201117 14:41:30.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.159" endtime="20201117 14:41:30.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.759" endtime="20201117 14:41:30.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:29.759" endtime="20201117 14:41:30.554"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.556" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.565" endtime="20201117 14:41:30.584"></status>
</kw>
<msg timestamp="20201117 14:41:30.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.563" endtime="20201117 14:41:30.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.586" endtime="20201117 14:41:30.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.588" endtime="20201117 14:41:30.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.561" endtime="20201117 14:41:30.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.559" endtime="20201117 14:41:30.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.598" endtime="20201117 14:41:30.884"></status>
</kw>
<msg timestamp="20201117 14:41:30.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.596" endtime="20201117 14:41:30.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024885236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.888" endtime="20201117 14:41:30.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.896" endtime="20201117 14:41:30.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.593" endtime="20201117 14:41:30.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.592" endtime="20201117 14:41:30.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:30.903" level="INFO">${RESULT} = [{'time': 0.024885236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013900000000031e-05, 'source_diff': 7.013900000000031e-05}, {'time': 0.024979236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:30.900" endtime="20201117 14:41:30.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:30.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:30.904" endtime="20201117 14:41:30.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.922" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:30.921" endtime="20201117 14:41:30.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.925" level="INFO">VALUE: [7.013900000000031e-05, 6.973599999999733e-05, 6.975000000000037e-05, 6.991700000000267e-05, 7.018099999999902e-05, 7.033400000000176e-05, 6.962499999999677e-05, 6.991700000000267e-05, 6.952699999999978e-05, 6.944399999999837e-05, 6.981899999999874e-05, 7.00420000000028e-05, 6.97360000000008e-05, 7.00559999999989e-05, 7.009699999999813e-05, 7.020799999999869e-05, 6.958300000000153e-05, 6.975000000000037e-05, 6.943100000000174e-05, 6.954099999999935e-05, 6.97499999999969e-05, 6.994399999999887e-05, 7.036099999999795e-05, 6.94299999999988e-05, 6.948600000000055e-05, 6.99169999999992e-05, 6.952799999999926e-05, 6.976399999999994e-05, 6.981900000000221e-05, 6.991700000000267e-05, 6.951399999999969e-05, 7.008399999999804e-05, 7.007000000000194e-05, 6.981999999999822e-05, 6.993000000000277e-05, 7.015200000000041e-05, 6.966599999999948e-05, 6.947200000000098e-05, 7.011100000000117e-05, 6.936099999999695e-05, 6.951399999999969e-05, 6.993099999999877e-05, 6.952799999999926e-05, 6.993099999999877e-05, 7.000000000000062e-05, 6.977700000000003e-05, 6.975000000000037e-05, 6.940199999999966e-05, 7.033299999999881e-05, 6.991700000000267e-05]</msg>
<status status="PASS" starttime="20201117 14:41:30.923" endtime="20201117 14:41:30.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.918" endtime="20201117 14:41:30.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.928" endtime="20201117 14:41:30.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:30.932" endtime="20201117 14:41:30.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.930" endtime="20201117 14:41:30.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.927" endtime="20201117 14:41:30.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.557" endtime="20201117 14:41:30.953"></status>
</kw>
<msg timestamp="20201117 14:41:30.953" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.962" endtime="20201117 14:41:30.981"></status>
</kw>
<msg timestamp="20201117 14:41:30.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.960" endtime="20201117 14:41:30.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:30.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:30.982" endtime="20201117 14:41:30.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.985" endtime="20201117 14:41:30.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.957" endtime="20201117 14:41:30.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.955" endtime="20201117 14:41:30.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:30.995" endtime="20201117 14:41:31.281"></status>
</kw>
<msg timestamp="20201117 14:41:31.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:30.994" endtime="20201117 14:41:31.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.286" endtime="20201117 14:41:31.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.294" endtime="20201117 14:41:31.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.991" endtime="20201117 14:41:31.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.989" endtime="20201117 14:41:31.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.301" level="INFO">${RESULT} = [{'time': 0.022375639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.947200000000098e-05, 'source_diff': 6.947200000000098e-05}, {'time': 0.022464639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.298" endtime="20201117 14:41:31.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.315" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:31.302" endtime="20201117 14:41:31.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.320" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.318" endtime="20201117 14:41:31.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.322" level="INFO">VALUE: [6.947200000000098e-05, 6.95970000000011e-05, 7.009699999999813e-05, 6.940299999999913e-05, 7.015299999999988e-05, 6.968100000000199e-05, 6.963800000000034e-05, 7.017999999999955e-05, 6.987500000000049e-05, 6.994400000000234e-05, 7.019399999999912e-05, 6.968099999999852e-05, 7.019399999999912e-05, 7.004199999999933e-05, 6.976399999999994e-05, 6.993100000000224e-05, 7.018099999999902e-05, 7.034799999999786e-05, 6.962500000000024e-05, 6.956899999999849e-05, 6.958299999999806e-05, 7.025000000000087e-05, 6.941599999999923e-05, 6.987500000000049e-05, 6.943100000000174e-05, 7.016700000000292e-05, 7.000000000000062e-05, 6.993099999999877e-05, 7.002799999999976e-05, 6.959800000000058e-05, 7.02360000000013e-05, 6.975000000000037e-05, 6.976399999999994e-05, 6.991599999999973e-05, 7.033299999999881e-05, 6.965299999999938e-05, 7.00970000000016e-05, 6.940299999999913e-05, 7.000000000000062e-05, 7.031899999999924e-05, 6.97360000000008e-05, 7.00979999999976e-05, 6.943099999999827e-05, 6.984700000000135e-05, 6.975000000000037e-05, 7.027800000000001e-05, 7.009699999999813e-05, 7.02360000000013e-05, 6.975000000000037e-05, 6.941700000000217e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.321" endtime="20201117 14:41:31.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.316" endtime="20201117 14:41:31.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.326" endtime="20201117 14:41:31.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.329" endtime="20201117 14:41:31.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.328" endtime="20201117 14:41:31.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.324" endtime="20201117 14:41:31.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.954" endtime="20201117 14:41:31.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.555" endtime="20201117 14:41:31.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:30.554" endtime="20201117 14:41:31.351"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.353" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.362" endtime="20201117 14:41:31.381"></status>
</kw>
<msg timestamp="20201117 14:41:31.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.360" endtime="20201117 14:41:31.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.382" endtime="20201117 14:41:31.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.385" endtime="20201117 14:41:31.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.358" endtime="20201117 14:41:31.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.355" endtime="20201117 14:41:31.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.394" endtime="20201117 14:41:31.680"></status>
</kw>
<msg timestamp="20201117 14:41:31.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.393" endtime="20201117 14:41:31.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025883667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.685" endtime="20201117 14:41:31.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.693" endtime="20201117 14:41:31.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.390" endtime="20201117 14:41:31.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.388" endtime="20201117 14:41:31.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:31.700" level="INFO">${RESULT} = [{'time': 0.025883667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.134799999999886e-05, 'source_diff': 7.134799999999886e-05}, {'time': 0.025969639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:31.697" endtime="20201117 14:41:31.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:31.715" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:31.701" endtime="20201117 14:41:31.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.720" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:31.719" endtime="20201117 14:41:31.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.723" level="INFO">VALUE: [7.134799999999886e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.072200000000223e-05, 7.100000000000162e-05, 7.04169999999997e-05, 7.086100000000192e-05, 7.130500000000067e-05, 7.100000000000162e-05, 7.127799999999754e-05, 7.04299999999998e-05, 7.05559999999994e-05, 7.12499999999984e-05, 7.115300000000088e-05, 7.108299999999956e-05, 7.061100000000167e-05, 7.058399999999854e-05, 7.094499999999934e-05, 7.137499999999852e-05, 7.052800000000026e-05, 7.041600000000023e-05, 7.084699999999888e-05, 7.059699999999863e-05, 7.059699999999863e-05, 7.04169999999997e-05, 7.134699999999938e-05, 7.037499999999752e-05, 7.116700000000045e-05, 7.068099999999952e-05, 7.066699999999995e-05, 7.134799999999886e-05, 7.10840000000025e-05, 7.075000000000137e-05, 7.108299999999956e-05, 7.043099999999927e-05, 7.066600000000048e-05, 7.050000000000112e-05, 7.044500000000231e-05, 7.118100000000002e-05, 7.116700000000045e-05, 7.118100000000002e-05, 7.084799999999836e-05, 7.04169999999997e-05, 7.100000000000162e-05, 7.098600000000205e-05, 7.119400000000012e-05, 7.101400000000119e-05, 7.091600000000073e-05, 7.101399999999772e-05, 7.058300000000253e-05]</msg>
<status status="PASS" starttime="20201117 14:41:31.721" endtime="20201117 14:41:31.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.716" endtime="20201117 14:41:31.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.726" endtime="20201117 14:41:31.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:31.730" endtime="20201117 14:41:31.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.728" endtime="20201117 14:41:31.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.724" endtime="20201117 14:41:31.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.354" endtime="20201117 14:41:31.751"></status>
</kw>
<msg timestamp="20201117 14:41:31.751" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.760" endtime="20201117 14:41:31.778"></status>
</kw>
<msg timestamp="20201117 14:41:31.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.758" endtime="20201117 14:41:31.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:31.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:31.780" endtime="20201117 14:41:31.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.782" endtime="20201117 14:41:31.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.755" endtime="20201117 14:41:31.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.753" endtime="20201117 14:41:31.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:31.793" endtime="20201117 14:41:32.079"></status>
</kw>
<msg timestamp="20201117 14:41:32.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:31.791" endtime="20201117 14:41:32.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.083" endtime="20201117 14:41:32.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.092" endtime="20201117 14:41:32.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.788" endtime="20201117 14:41:32.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.786" endtime="20201117 14:41:32.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.099" level="INFO">${RESULT} = [{'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.127800000000101e-05, 'source_diff': 7.127800000000101e-05}, {'time': 0.022461, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:32.095" endtime="20201117 14:41:32.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.112" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.100" endtime="20201117 14:41:32.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.117" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.116" endtime="20201117 14:41:32.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.120" level="INFO">VALUE: [7.127800000000101e-05, 7.062499999999777e-05, 7.051400000000069e-05, 7.090299999999716e-05, 7.116700000000045e-05, 7.058399999999854e-05, 7.0762999999998e-05, 7.109800000000208e-05, 7.07499999999979e-05, 7.126400000000144e-05, 7.1069e-05, 7.07499999999979e-05, 7.083299999999931e-05, 7.108300000000303e-05, 7.094499999999934e-05, 7.043099999999927e-05, 7.073599999999833e-05, 7.125000000000187e-05, 7.076399999999747e-05, 7.093099999999977e-05, 7.094399999999987e-05, 7.125000000000187e-05, 7.12499999999984e-05, 7.041700000000317e-05, 7.051400000000069e-05, 7.061100000000167e-05, 7.109699999999913e-05, 7.04169999999997e-05, 7.084699999999888e-05, 7.097199999999901e-05, 7.098599999999858e-05, 7.126300000000196e-05, 7.12499999999984e-05, 7.076400000000094e-05, 7.091600000000073e-05, 7.066600000000048e-05, 7.133299999999981e-05, 7.05689999999995e-05, 7.090300000000063e-05, 7.099999999999815e-05, 7.094499999999934e-05, 7.14170000000007e-05, 7.04169999999997e-05, 7.084800000000183e-05, 7.077699999999756e-05, 7.044399999999937e-05, 7.086100000000192e-05, 7.120799999999969e-05, 7.043099999999927e-05, 7.083299999999931e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.119" endtime="20201117 14:41:32.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.114" endtime="20201117 14:41:32.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.123" endtime="20201117 14:41:32.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.127" endtime="20201117 14:41:32.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.125" endtime="20201117 14:41:32.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.122" endtime="20201117 14:41:32.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.751" endtime="20201117 14:41:32.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.352" endtime="20201117 14:41:32.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:31.351" endtime="20201117 14:41:32.148"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.151" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.159" endtime="20201117 14:41:32.177"></status>
</kw>
<msg timestamp="20201117 14:41:32.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.158" endtime="20201117 14:41:32.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.179" endtime="20201117 14:41:32.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.182" endtime="20201117 14:41:32.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.155" endtime="20201117 14:41:32.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.153" endtime="20201117 14:41:32.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.191" endtime="20201117 14:41:32.478"></status>
</kw>
<msg timestamp="20201117 14:41:32.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.190" endtime="20201117 14:41:32.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.482" endtime="20201117 14:41:32.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.491" endtime="20201117 14:41:32.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.187" endtime="20201117 14:41:32.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.185" endtime="20201117 14:41:32.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.498" level="INFO">${RESULT} = [{'time': 0.025055583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.236099999999995e-05, 'source_diff': 7.236099999999995e-05}, {'time': 0.025146528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.495" endtime="20201117 14:41:32.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.499" endtime="20201117 14:41:32.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.517" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.516" endtime="20201117 14:41:32.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.519" level="INFO">VALUE: [7.236099999999995e-05, 7.233400000000029e-05, 7.159799999999911e-05, 7.159699999999963e-05, 7.141600000000123e-05, 7.198599999999958e-05, 7.141600000000123e-05, 7.151399999999822e-05, 7.14300000000008e-05, 7.183300000000031e-05, 7.143100000000027e-05, 7.168100000000052e-05, 7.219500000000059e-05, 7.233400000000029e-05, 7.143100000000027e-05, 7.209799999999961e-05, 7.199999999999915e-05, 7.14300000000008e-05, 7.151399999999822e-05, 7.226400000000244e-05, 7.209700000000013e-05, 7.158300000000006e-05, 7.226399999999897e-05, 7.209700000000013e-05, 7.143100000000027e-05, 7.162499999999877e-05, 7.165300000000138e-05, 7.163900000000181e-05, 7.201299999999924e-05, 7.191600000000173e-05, 7.151399999999822e-05, 7.176400000000194e-05, 7.179200000000108e-05, 7.158300000000006e-05, 7.159699999999963e-05, 7.22499999999994e-05, 7.208300000000056e-05, 7.17360000000028e-05, 7.140300000000113e-05, 7.179099999999813e-05, 7.165299999999791e-05, 7.158300000000006e-05, 7.158300000000006e-05, 7.212499999999927e-05, 7.19170000000012e-05, 7.168100000000052e-05, 7.233300000000081e-05, 7.209700000000013e-05, 7.158399999999954e-05, 7.140300000000113e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.518" endtime="20201117 14:41:32.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.513" endtime="20201117 14:41:32.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.523" endtime="20201117 14:41:32.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.526" endtime="20201117 14:41:32.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.525" endtime="20201117 14:41:32.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.521" endtime="20201117 14:41:32.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.151" endtime="20201117 14:41:32.547"></status>
</kw>
<msg timestamp="20201117 14:41:32.547" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.556" endtime="20201117 14:41:32.575"></status>
</kw>
<msg timestamp="20201117 14:41:32.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.554" endtime="20201117 14:41:32.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.577" endtime="20201117 14:41:32.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.579" endtime="20201117 14:41:32.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.552" endtime="20201117 14:41:32.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.549" endtime="20201117 14:41:32.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.590" endtime="20201117 14:41:32.876"></status>
</kw>
<msg timestamp="20201117 14:41:32.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022323861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.588" endtime="20201117 14:41:32.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022323861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.881" endtime="20201117 14:41:32.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.890" endtime="20201117 14:41:32.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.585" endtime="20201117 14:41:32.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.583" endtime="20201117 14:41:32.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:32.897" level="INFO">${RESULT} = [{'time': 0.022323861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.148599999999908e-05, 'source_diff': 7.148599999999908e-05}, {'time': 0.022413833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:32.893" endtime="20201117 14:41:32.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:32.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:32.898" endtime="20201117 14:41:32.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.915" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:41:32.914" endtime="20201117 14:41:32.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.918" level="INFO">VALUE: [7.148599999999908e-05, 7.15690000000005e-05, 7.192999999999783e-05, 7.20560000000009e-05, 7.158300000000006e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.22499999999994e-05, 7.191699999999773e-05, 7.198599999999958e-05, 7.138800000000209e-05, 7.201399999999872e-05, 7.227699999999906e-05, 7.198599999999958e-05, 7.227800000000201e-05, 7.143100000000027e-05, 7.149999999999865e-05, 7.226399999999897e-05, 7.168100000000052e-05, 7.193100000000077e-05, 7.183399999999979e-05, 7.22499999999994e-05, 7.191699999999773e-05, 7.15690000000005e-05, 7.176400000000194e-05, 7.22499999999994e-05, 7.19300000000013e-05, 7.168000000000105e-05, 7.226400000000244e-05, 7.159699999999963e-05, 7.191699999999773e-05, 7.233400000000029e-05, 7.158399999999954e-05, 7.190300000000163e-05, 7.183399999999979e-05, 7.16109999999992e-05, 7.208300000000056e-05, 7.191600000000173e-05, 7.208400000000004e-05, 7.226399999999897e-05, 7.2069000000001e-05, 7.159699999999963e-05, 7.173599999999933e-05, 7.177799999999804e-05, 7.208400000000004e-05, 7.19170000000012e-05, 7.199999999999915e-05, 7.197200000000001e-05, 7.236099999999995e-05, 7.223599999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:32.916" endtime="20201117 14:41:32.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.911" endtime="20201117 14:41:32.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.921" endtime="20201117 14:41:32.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:32.925" endtime="20201117 14:41:32.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.923" endtime="20201117 14:41:32.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.919" endtime="20201117 14:41:32.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.548" endtime="20201117 14:41:32.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.149" endtime="20201117 14:41:32.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.148" endtime="20201117 14:41:32.946"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.948" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.957" endtime="20201117 14:41:32.977"></status>
</kw>
<msg timestamp="20201117 14:41:32.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.955" endtime="20201117 14:41:32.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:32.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:32.978" endtime="20201117 14:41:32.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.981" endtime="20201117 14:41:32.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.952" endtime="20201117 14:41:32.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.950" endtime="20201117 14:41:32.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:32.991" endtime="20201117 14:41:33.278"></status>
</kw>
<msg timestamp="20201117 14:41:33.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026042944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:32.989" endtime="20201117 14:41:33.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026042944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.282" endtime="20201117 14:41:33.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.291" endtime="20201117 14:41:33.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.986" endtime="20201117 14:41:33.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.984" endtime="20201117 14:41:33.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.297" level="INFO">${RESULT} = [{'time': 0.026042944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.291599999999926e-05, 'source_diff': 7.291599999999926e-05}, {'time': 0.026138958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.294" endtime="20201117 14:41:33.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:33.299" endtime="20201117 14:41:33.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.317" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.316" endtime="20201117 14:41:33.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.320" level="INFO">VALUE: [7.291599999999926e-05, 7.251399999999922e-05, 7.258300000000106e-05, 7.3069000000002e-05, 7.322199999999779e-05, 7.243100000000127e-05, 7.333300000000181e-05, 7.308300000000156e-05, 7.27499999999999e-05, 7.308400000000104e-05, 7.270900000000066e-05, 7.24170000000017e-05, 7.315199999999994e-05, 7.249999999999965e-05, 7.326399999999997e-05, 7.255500000000192e-05, 7.259699999999716e-05, 7.32500000000004e-05, 7.293100000000177e-05, 7.318100000000202e-05, 7.266700000000195e-05, 7.284800000000036e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.308300000000156e-05, 7.27499999999999e-05, 7.313899999999984e-05, 7.251299999999974e-05, 7.268100000000152e-05, 7.318099999999855e-05, 7.26110000000002e-05, 7.252799999999879e-05, 7.308399999999757e-05, 7.258400000000054e-05, 7.24170000000017e-05, 7.301300000000024e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.276399999999947e-05, 7.258300000000106e-05, 7.27499999999999e-05, 7.308300000000156e-05, 7.25829999999976e-05, 7.287500000000002e-05, 7.269400000000162e-05, 7.288899999999959e-05, 7.307000000000147e-05, 7.291599999999926e-05, 7.301399999999972e-05, 7.292999999999883e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.319" endtime="20201117 14:41:33.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.314" endtime="20201117 14:41:33.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.323" endtime="20201117 14:41:33.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.327" endtime="20201117 14:41:33.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.325" endtime="20201117 14:41:33.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.322" endtime="20201117 14:41:33.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.949" endtime="20201117 14:41:33.348"></status>
</kw>
<msg timestamp="20201117 14:41:33.348" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.356" endtime="20201117 14:41:33.375"></status>
</kw>
<msg timestamp="20201117 14:41:33.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.355" endtime="20201117 14:41:33.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.376" endtime="20201117 14:41:33.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.387" endtime="20201117 14:41:33.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.352" endtime="20201117 14:41:33.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.350" endtime="20201117 14:41:33.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.398" endtime="20201117 14:41:33.684"></status>
</kw>
<msg timestamp="20201117 14:41:33.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.396" endtime="20201117 14:41:33.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.688" endtime="20201117 14:41:33.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.697" endtime="20201117 14:41:33.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.394" endtime="20201117 14:41:33.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.392" endtime="20201117 14:41:33.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:33.704" level="INFO">${RESULT} = [{'time': 0.022192403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.283400000000079e-05, 'source_diff': 7.283400000000079e-05}, {'time': 0.022279375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:33.700" endtime="20201117 14:41:33.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:33.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:33.705" endtime="20201117 14:41:33.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.722" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:41:33.721" endtime="20201117 14:41:33.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.725" level="INFO">VALUE: [7.283400000000079e-05, 7.268100000000152e-05, 7.252800000000226e-05, 7.277799999999904e-05, 7.290299999999916e-05, 7.251399999999922e-05, 7.259800000000011e-05, 7.309700000000113e-05, 7.323600000000083e-05, 7.287500000000002e-05, 7.284700000000088e-05, 7.283400000000079e-05, 7.308300000000156e-05, 7.29170000000022e-05, 7.268099999999805e-05, 7.319500000000159e-05, 7.279200000000208e-05, 7.308400000000104e-05, 7.245799999999747e-05, 7.338900000000009e-05, 7.263899999999934e-05, 7.308300000000156e-05, 7.29300000000023e-05, 7.268000000000205e-05, 7.331899999999877e-05, 7.32500000000004e-05, 7.309699999999766e-05, 7.293100000000177e-05, 7.284800000000036e-05, 7.24309999999978e-05, 7.333300000000181e-05, 7.32500000000004e-05, 7.29439999999984e-05, 7.300000000000015e-05, 7.279200000000208e-05, 7.244400000000137e-05, 7.248600000000008e-05, 7.308300000000156e-05, 7.236099999999995e-05, 7.334700000000138e-05, 7.326399999999997e-05, 7.308400000000104e-05, 7.245800000000094e-05, 7.267999999999858e-05, 7.283299999999784e-05, 7.24439999999979e-05, 7.316599999999951e-05, 7.300000000000015e-05, 7.326399999999997e-05, 7.259700000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:41:33.724" endtime="20201117 14:41:33.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.719" endtime="20201117 14:41:33.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.728" endtime="20201117 14:41:33.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:33.732" endtime="20201117 14:41:33.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.730" endtime="20201117 14:41:33.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.726" endtime="20201117 14:41:33.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.348" endtime="20201117 14:41:33.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.947" endtime="20201117 14:41:33.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:32.946" endtime="20201117 14:41:33.753"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.755" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.765" endtime="20201117 14:41:33.783"></status>
</kw>
<msg timestamp="20201117 14:41:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.763" endtime="20201117 14:41:33.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:33.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:33.785" endtime="20201117 14:41:33.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.788" endtime="20201117 14:41:33.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.760" endtime="20201117 14:41:33.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.757" endtime="20201117 14:41:33.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:33.797" endtime="20201117 14:41:34.083"></status>
</kw>
<msg timestamp="20201117 14:41:34.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025747375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025820792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:33.796" endtime="20201117 14:41:34.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025747375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025820792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.087" endtime="20201117 14:41:34.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.096" endtime="20201117 14:41:34.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.793" endtime="20201117 14:41:34.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.791" endtime="20201117 14:41:34.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.103" level="INFO">${RESULT} = [{'time': 0.025820792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.341699999999923e-05, 'source_diff': 7.341699999999923e-05}, {'time': 0.025915792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.099" endtime="20201117 14:41:34.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.116" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:34.104" endtime="20201117 14:41:34.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.121" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.120" endtime="20201117 14:41:34.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.124" level="INFO">VALUE: [7.341699999999923e-05, 7.351400000000022e-05, 7.358399999999807e-05, 7.373599999999786e-05, 7.422200000000226e-05, 7.379200000000308e-05, 7.342999999999933e-05, 7.350000000000065e-05, 7.390300000000016e-05, 7.419499999999912e-05, 7.349999999999718e-05, 7.358400000000154e-05, 7.37500000000009e-05, 7.409799999999814e-05, 7.377700000000056e-05, 7.40829999999991e-05, 7.424999999999793e-05, 7.408300000000256e-05, 7.359700000000163e-05, 7.391699999999973e-05, 7.433300000000281e-05, 7.343100000000227e-05, 7.369500000000209e-05, 7.368100000000252e-05, 7.368099999999905e-05, 7.388900000000059e-05, 7.341699999999923e-05, 7.434700000000238e-05, 7.409699999999866e-05, 7.355499999999945e-05, 7.36110000000012e-05, 7.426400000000097e-05, 7.426400000000097e-05, 7.394499999999887e-05, 7.427800000000054e-05, 7.342999999999933e-05, 7.402800000000029e-05, 7.359799999999764e-05, 7.37370000000008e-05, 7.413900000000084e-05, 7.39439999999994e-05, 7.401400000000072e-05, 7.42639999999975e-05, 7.427800000000054e-05, 7.354199999999936e-05, 7.409700000000213e-05, 7.344499999999837e-05, 7.349999999999718e-05, 7.393100000000277e-05, 7.386099999999798e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.122" endtime="20201117 14:41:34.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.117" endtime="20201117 14:41:34.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.127" endtime="20201117 14:41:34.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.131" endtime="20201117 14:41:34.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.129" endtime="20201117 14:41:34.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.125" endtime="20201117 14:41:34.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.756" endtime="20201117 14:41:34.152"></status>
</kw>
<msg timestamp="20201117 14:41:34.152" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.161" endtime="20201117 14:41:34.179"></status>
</kw>
<msg timestamp="20201117 14:41:34.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.159" endtime="20201117 14:41:34.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.180" endtime="20201117 14:41:34.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.183" endtime="20201117 14:41:34.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.156" endtime="20201117 14:41:34.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.154" endtime="20201117 14:41:34.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.193" endtime="20201117 14:41:34.482"></status>
</kw>
<msg timestamp="20201117 14:41:34.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.192" endtime="20201117 14:41:34.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.486" endtime="20201117 14:41:34.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.495" endtime="20201117 14:41:34.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.189" endtime="20201117 14:41:34.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.187" endtime="20201117 14:41:34.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.503" level="INFO">${RESULT} = [{'time': 0.022827181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422299999999826e-05, 'source_diff': 7.422299999999826e-05}, {'time': 0.022918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.499" endtime="20201117 14:41:34.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.517" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:34.504" endtime="20201117 14:41:34.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.521" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.520" endtime="20201117 14:41:34.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.524" level="INFO">VALUE: [7.422299999999826e-05, 7.4069999999999e-05, 7.342999999999933e-05, 7.384699999999841e-05, 7.426400000000097e-05, 7.348700000000055e-05, 7.351400000000022e-05, 7.386100000000145e-05, 7.350000000000065e-05, 7.34309999999988e-05, 7.434800000000186e-05, 7.402800000000029e-05, 7.37500000000009e-05, 7.390200000000069e-05, 7.369399999999915e-05, 7.395799999999897e-05, 7.36110000000012e-05, 7.409699999999866e-05, 7.40829999999991e-05, 7.391699999999973e-05, 7.384700000000188e-05, 7.374999999999743e-05, 7.39309999999993e-05, 7.434699999999891e-05, 7.42769999999976e-05, 7.359700000000163e-05, 7.341599999999976e-05, 7.415300000000041e-05, 7.419399999999965e-05, 7.344500000000184e-05, 7.366699999999948e-05, 7.363900000000034e-05, 7.416699999999998e-05, 7.369500000000209e-05, 7.437500000000152e-05, 7.42639999999975e-05, 7.363900000000034e-05, 7.373600000000133e-05, 7.391600000000026e-05, 7.351399999999675e-05, 7.340299999999966e-05, 7.394400000000287e-05, 7.361099999999773e-05, 7.390300000000016e-05, 7.416699999999998e-05, 7.432000000000272e-05, 7.39309999999993e-05, 7.355499999999945e-05, 7.388900000000059e-05, 7.370799999999872e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.523" endtime="20201117 14:41:34.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.517" endtime="20201117 14:41:34.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.528" endtime="20201117 14:41:34.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.531" endtime="20201117 14:41:34.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.530" endtime="20201117 14:41:34.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.525" endtime="20201117 14:41:34.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.153" endtime="20201117 14:41:34.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.754" endtime="20201117 14:41:34.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:33.753" endtime="20201117 14:41:34.553"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.555" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.564" endtime="20201117 14:41:34.584"></status>
</kw>
<msg timestamp="20201117 14:41:34.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.562" endtime="20201117 14:41:34.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.585" endtime="20201117 14:41:34.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.588" endtime="20201117 14:41:34.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.559" endtime="20201117 14:41:34.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.557" endtime="20201117 14:41:34.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.597" endtime="20201117 14:41:34.884"></status>
</kw>
<msg timestamp="20201117 14:41:34.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025930236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026005361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.596" endtime="20201117 14:41:34.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025930236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026005361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.889" endtime="20201117 14:41:34.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.899" endtime="20201117 14:41:34.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.593" endtime="20201117 14:41:34.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.591" endtime="20201117 14:41:34.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:34.905" level="INFO">${RESULT} = [{'time': 0.026005361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.512500000000227e-05, 'source_diff': 7.512500000000227e-05}, {'time': 0.026095375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:34.902" endtime="20201117 14:41:34.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:34.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:34.906" endtime="20201117 14:41:34.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.925" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:34.924" endtime="20201117 14:41:34.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.928" level="INFO">VALUE: [7.512500000000227e-05, 7.490300000000116e-05, 7.534699999999991e-05, 7.527799999999807e-05, 7.497199999999954e-05, 7.486100000000245e-05, 7.529099999999816e-05, 7.44439999999999e-05, 7.534699999999991e-05, 7.50830000000001e-05, 7.529200000000111e-05, 7.441700000000023e-05, 7.516700000000098e-05, 7.500000000000215e-05, 7.526400000000197e-05, 7.459800000000211e-05, 7.441700000000023e-05, 7.502700000000181e-05, 7.472199999999929e-05, 7.526299999999903e-05, 7.484699999999941e-05, 7.456900000000002e-05, 7.45829999999996e-05, 7.4763999999998e-05, 7.484699999999941e-05, 7.499999999999868e-05, 7.441700000000023e-05, 7.451399999999775e-05, 7.458399999999907e-05, 7.454200000000036e-05, 7.459699999999916e-05, 7.509699999999966e-05, 7.459700000000263e-05, 7.45829999999996e-05, 7.513899999999837e-05, 7.459700000000263e-05, 7.49310000000003e-05, 7.500000000000215e-05, 7.458399999999907e-05, 7.49310000000003e-05, 7.483399999999932e-05, 7.476299999999853e-05, 7.524999999999893e-05, 7.45829999999996e-05, 7.477800000000104e-05, 7.493000000000083e-05, 7.501399999999825e-05, 7.511099999999923e-05, 7.441700000000023e-05, 7.501400000000172e-05]</msg>
<status status="PASS" starttime="20201117 14:41:34.926" endtime="20201117 14:41:34.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.921" endtime="20201117 14:41:34.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.932" endtime="20201117 14:41:34.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:34.935" endtime="20201117 14:41:34.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.934" endtime="20201117 14:41:34.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.930" endtime="20201117 14:41:34.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.556" endtime="20201117 14:41:34.956"></status>
</kw>
<msg timestamp="20201117 14:41:34.956" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.965" endtime="20201117 14:41:34.983"></status>
</kw>
<msg timestamp="20201117 14:41:34.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.964" endtime="20201117 14:41:34.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:34.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:34.985" endtime="20201117 14:41:34.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.987" endtime="20201117 14:41:34.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.961" endtime="20201117 14:41:34.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.959" endtime="20201117 14:41:34.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:34.998" endtime="20201117 14:41:35.285"></status>
</kw>
<msg timestamp="20201117 14:41:35.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:34.996" endtime="20201117 14:41:35.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.290" endtime="20201117 14:41:35.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.298" endtime="20201117 14:41:35.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.994" endtime="20201117 14:41:35.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.992" endtime="20201117 14:41:35.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.305" level="INFO">${RESULT} = [{'time': 0.022448986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.518000000000108e-05, 'source_diff': 7.518000000000108e-05}, {'time': 0.022538944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.302" endtime="20201117 14:41:35.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.319" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:35.306" endtime="20201117 14:41:35.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.324" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.323" endtime="20201117 14:41:35.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.326" level="INFO">VALUE: [7.518000000000108e-05, 7.487500000000202e-05, 7.451400000000122e-05, 7.523600000000283e-05, 7.476400000000147e-05, 7.49440000000004e-05, 7.530600000000068e-05, 7.47500000000019e-05, 7.491700000000073e-05, 7.536100000000295e-05, 7.491700000000073e-05, 7.468100000000005e-05, 7.50830000000001e-05, 7.468000000000058e-05, 7.526400000000197e-05, 7.532000000000025e-05, 7.481999999999975e-05, 7.476400000000147e-05, 7.445899999999894e-05, 7.484700000000288e-05, 7.527800000000154e-05, 7.508399999999957e-05, 7.524999999999893e-05, 7.459799999999864e-05, 7.523600000000283e-05, 7.468000000000058e-05, 7.448600000000208e-05, 7.50830000000001e-05, 7.511099999999923e-05, 7.477799999999757e-05, 7.4763999999998e-05, 7.523599999999936e-05, 7.476400000000147e-05, 7.52639999999985e-05, 7.491700000000073e-05, 7.515299999999794e-05, 7.531900000000077e-05, 7.523599999999936e-05, 7.470799999999972e-05, 7.483300000000331e-05, 7.491700000000073e-05, 7.449999999999818e-05, 7.459700000000263e-05, 7.526400000000197e-05, 7.441700000000023e-05, 7.497300000000248e-05, 7.524999999999893e-05, 7.493000000000083e-05, 7.466600000000101e-05, 7.53189999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.325" endtime="20201117 14:41:35.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.320" endtime="20201117 14:41:35.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.330" endtime="20201117 14:41:35.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.334" endtime="20201117 14:41:35.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.332" endtime="20201117 14:41:35.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.328" endtime="20201117 14:41:35.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.957" endtime="20201117 14:41:35.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.554" endtime="20201117 14:41:35.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:34.553" endtime="20201117 14:41:35.355"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.357" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.366" endtime="20201117 14:41:35.384"></status>
</kw>
<msg timestamp="20201117 14:41:35.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.364" endtime="20201117 14:41:35.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.386" endtime="20201117 14:41:35.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.388" endtime="20201117 14:41:35.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.362" endtime="20201117 14:41:35.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.359" endtime="20201117 14:41:35.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.398" endtime="20201117 14:41:35.684"></status>
</kw>
<msg timestamp="20201117 14:41:35.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.396" endtime="20201117 14:41:35.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024837861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.688" endtime="20201117 14:41:35.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.697" endtime="20201117 14:41:35.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.393" endtime="20201117 14:41:35.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.392" endtime="20201117 14:41:35.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:35.704" level="INFO">${RESULT} = [{'time': 0.024913819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.595800000000097e-05, 'source_diff': 7.595800000000097e-05}, {'time': 0.025013889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:35.700" endtime="20201117 14:41:35.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:35.717" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:35.705" endtime="20201117 14:41:35.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.722" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:35.721" endtime="20201117 14:41:35.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.725" level="INFO">VALUE: [7.595800000000097e-05, 7.582000000000075e-05, 7.576400000000247e-05, 7.606900000000152e-05, 7.609700000000066e-05, 7.627799999999907e-05, 7.620899999999722e-05, 7.616700000000198e-05, 7.613899999999937e-05, 7.591700000000173e-05, 7.624999999999993e-05, 7.554099999999841e-05, 7.591600000000226e-05, 7.548599999999961e-05, 7.609700000000066e-05, 7.556899999999755e-05, 7.624999999999993e-05, 7.56249999999993e-05, 7.602799999999882e-05, 7.583300000000084e-05, 7.54310000000008e-05, 7.632000000000125e-05, 7.623699999999983e-05, 7.592999999999836e-05, 7.615199999999947e-05, 7.580499999999823e-05, 7.574999999999943e-05, 7.624999999999993e-05, 7.593099999999783e-05, 7.555500000000145e-05, 7.59029999999987e-05, 7.583400000000032e-05, 7.544500000000037e-05, 7.599999999999968e-05, 7.540199999999872e-05, 7.616599999999904e-05, 7.638899999999962e-05, 7.608299999999762e-05, 7.559700000000016e-05, 7.62639999999995e-05, 7.62639999999995e-05, 7.60830000000011e-05, 7.62639999999995e-05, 7.626400000000297e-05, 7.624999999999993e-05, 7.573599999999986e-05, 7.536099999999948e-05, 7.583300000000084e-05, 7.561099999999973e-05, 7.591599999999879e-05]</msg>
<status status="PASS" starttime="20201117 14:41:35.723" endtime="20201117 14:41:35.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.718" endtime="20201117 14:41:35.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.729" endtime="20201117 14:41:35.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:35.732" endtime="20201117 14:41:35.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.731" endtime="20201117 14:41:35.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.727" endtime="20201117 14:41:35.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.358" endtime="20201117 14:41:35.753"></status>
</kw>
<msg timestamp="20201117 14:41:35.753" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.762" endtime="20201117 14:41:35.780"></status>
</kw>
<msg timestamp="20201117 14:41:35.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.760" endtime="20201117 14:41:35.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:35.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:35.782" endtime="20201117 14:41:35.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.784" endtime="20201117 14:41:35.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.758" endtime="20201117 14:41:35.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.755" endtime="20201117 14:41:35.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:35.795" endtime="20201117 14:41:36.081"></status>
</kw>
<msg timestamp="20201117 14:41:36.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:35.793" endtime="20201117 14:41:36.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.085" endtime="20201117 14:41:36.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.094" endtime="20201117 14:41:36.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.791" endtime="20201117 14:41:36.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.789" endtime="20201117 14:41:36.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.101" level="INFO">${RESULT} = [{'time': 0.022729444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.584700000000041e-05, 'source_diff': 7.584700000000041e-05}, {'time': 0.022829403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.097" endtime="20201117 14:41:36.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:36.102" endtime="20201117 14:41:36.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.120" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.119" endtime="20201117 14:41:36.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.122" level="INFO">VALUE: [7.584700000000041e-05, 7.633400000000082e-05, 7.54440000000009e-05, 7.550000000000265e-05, 7.592999999999836e-05, 7.601399999999925e-05, 7.591600000000226e-05, 7.568000000000158e-05, 7.568000000000158e-05, 7.61249999999998e-05, 7.624999999999993e-05, 7.62639999999995e-05, 7.55700000000005e-05, 7.576400000000247e-05, 7.631900000000177e-05, 7.544500000000037e-05, 7.626300000000003e-05, 7.624999999999993e-05, 7.576400000000247e-05, 7.542999999999786e-05, 7.638899999999962e-05, 7.579199999999814e-05, 7.5763999999999e-05, 7.605599999999796e-05, 7.583300000000084e-05, 7.54310000000008e-05, 7.587499999999955e-05, 7.559700000000016e-05, 7.60830000000011e-05, 7.59029999999987e-05, 7.555600000000093e-05, 7.611100000000023e-05, 7.541700000000123e-05, 7.616700000000198e-05, 7.588899999999912e-05, 7.609800000000014e-05, 7.573599999999986e-05, 7.574999999999943e-05, 7.540300000000166e-05, 7.584700000000041e-05, 7.624999999999993e-05, 7.558299999999712e-05, 7.573599999999986e-05, 7.574999999999943e-05, 7.558299999999712e-05, 7.593099999999783e-05, 7.584700000000041e-05, 7.627800000000254e-05, 7.574999999999943e-05, 7.558400000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.121" endtime="20201117 14:41:36.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.116" endtime="20201117 14:41:36.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.125" endtime="20201117 14:41:36.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.129" endtime="20201117 14:41:36.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.127" endtime="20201117 14:41:36.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.124" endtime="20201117 14:41:36.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.754" endtime="20201117 14:41:36.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.356" endtime="20201117 14:41:36.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:35.355" endtime="20201117 14:41:36.150"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.153" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.161" endtime="20201117 14:41:36.181"></status>
</kw>
<msg timestamp="20201117 14:41:36.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.160" endtime="20201117 14:41:36.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.183" endtime="20201117 14:41:36.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.186" endtime="20201117 14:41:36.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.157" endtime="20201117 14:41:36.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.155" endtime="20201117 14:41:36.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.195" endtime="20201117 14:41:36.481"></status>
</kw>
<msg timestamp="20201117 14:41:36.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025741806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025818597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.193" endtime="20201117 14:41:36.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025741806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025818597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.485" endtime="20201117 14:41:36.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.494" endtime="20201117 14:41:36.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.191" endtime="20201117 14:41:36.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.189" endtime="20201117 14:41:36.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.501" level="INFO">${RESULT} = [{'time': 0.025818597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679099999999967e-05, 'source_diff': 7.679099999999967e-05}, {'time': 0.025916611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.497" endtime="20201117 14:41:36.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.516" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:36.502" endtime="20201117 14:41:36.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.521" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.520" endtime="20201117 14:41:36.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.524" level="INFO">VALUE: [7.679099999999967e-05, 7.700000000000068e-05, 7.72640000000005e-05, 7.70830000000021e-05, 7.658299999999812e-05, 7.715299999999994e-05, 7.709799999999767e-05, 7.661100000000073e-05, 7.655499999999898e-05, 7.706899999999905e-05, 7.716600000000004e-05, 7.658299999999812e-05, 7.673600000000086e-05, 7.658299999999812e-05, 7.643099999999833e-05, 7.665299999999944e-05, 7.683400000000132e-05, 7.709800000000114e-05, 7.693099999999883e-05, 7.651399999999975e-05, 7.658299999999812e-05, 7.640200000000319e-05, 7.699999999999721e-05, 7.641699999999876e-05, 7.699999999999721e-05, 7.643099999999833e-05, 7.684700000000141e-05, 7.658400000000107e-05, 7.661199999999674e-05, 7.709700000000166e-05, 7.659700000000116e-05, 7.691599999999979e-05, 7.681900000000227e-05, 7.641599999999929e-05, 7.719499999999865e-05, 7.681900000000227e-05, 7.64029999999992e-05, 7.716699999999951e-05, 7.720899999999822e-05, 7.69310000000023e-05, 7.659700000000116e-05, 7.691699999999926e-05, 7.668000000000258e-05, 7.683300000000184e-05, 7.674999999999696e-05, 7.70969999999982e-05, 7.691699999999926e-05, 7.733299999999887e-05, 7.693099999999883e-05, 7.734699999999844e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.523" endtime="20201117 14:41:36.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.517" endtime="20201117 14:41:36.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.528" endtime="20201117 14:41:36.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.532" endtime="20201117 14:41:36.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.530" endtime="20201117 14:41:36.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.526" endtime="20201117 14:41:36.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.153" endtime="20201117 14:41:36.553"></status>
</kw>
<msg timestamp="20201117 14:41:36.553" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.562" endtime="20201117 14:41:36.580"></status>
</kw>
<msg timestamp="20201117 14:41:36.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.560" endtime="20201117 14:41:36.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.581" endtime="20201117 14:41:36.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.584" endtime="20201117 14:41:36.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.557" endtime="20201117 14:41:36.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.555" endtime="20201117 14:41:36.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.594" endtime="20201117 14:41:36.881"></status>
</kw>
<msg timestamp="20201117 14:41:36.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.593" endtime="20201117 14:41:36.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.885" endtime="20201117 14:41:36.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.894" endtime="20201117 14:41:36.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.590" endtime="20201117 14:41:36.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.588" endtime="20201117 14:41:36.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:36.901" level="INFO">${RESULT} = [{'time': 0.022332319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.648600000000061e-05, 'source_diff': 7.648600000000061e-05}, {'time': 0.022429319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:36.898" endtime="20201117 14:41:36.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:36.915" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:36.902" endtime="20201117 14:41:36.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.920" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:41:36.919" endtime="20201117 14:41:36.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.922" level="INFO">VALUE: [7.648600000000061e-05, 7.726300000000103e-05, 7.706899999999905e-05, 7.724999999999746e-05, 7.675000000000043e-05, 7.694399999999893e-05, 7.715299999999994e-05, 7.665299999999944e-05, 7.698600000000111e-05, 7.709800000000114e-05, 7.677800000000304e-05, 7.643099999999833e-05, 7.705499999999949e-05, 7.642999999999886e-05, 7.736100000000148e-05, 7.642999999999886e-05, 7.666599999999954e-05, 7.650000000000018e-05, 7.69310000000023e-05, 7.665299999999944e-05, 7.736099999999801e-05, 7.658400000000107e-05, 7.658400000000107e-05, 7.651399999999975e-05, 7.648600000000061e-05, 7.723599999999789e-05, 7.691599999999979e-05, 7.684700000000141e-05, 7.692999999999936e-05, 7.651399999999975e-05, 7.6764e-05, 7.706999999999853e-05, 7.691699999999926e-05, 7.669500000000162e-05, 7.716699999999951e-05, 7.667999999999911e-05, 7.650000000000018e-05, 7.651399999999975e-05, 7.675000000000043e-05, 7.65969999999977e-05, 7.72640000000005e-05, 7.691700000000273e-05, 7.684700000000141e-05, 7.727800000000007e-05, 7.64310000000018e-05, 7.698700000000058e-05, 7.659700000000116e-05, 7.64440000000019e-05, 7.665299999999944e-05, 7.717999999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:41:36.921" endtime="20201117 14:41:36.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.916" endtime="20201117 14:41:36.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.925" endtime="20201117 14:41:36.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:36.929" endtime="20201117 14:41:36.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.927" endtime="20201117 14:41:36.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.924" endtime="20201117 14:41:36.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.554" endtime="20201117 14:41:36.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.152" endtime="20201117 14:41:36.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.151" endtime="20201117 14:41:36.950"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.953" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.961" endtime="20201117 14:41:36.980"></status>
</kw>
<msg timestamp="20201117 14:41:36.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.960" endtime="20201117 14:41:36.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:36.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:36.982" endtime="20201117 14:41:36.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.985" endtime="20201117 14:41:36.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.957" endtime="20201117 14:41:36.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.955" endtime="20201117 14:41:36.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:36.995" endtime="20201117 14:41:37.280"></status>
</kw>
<msg timestamp="20201117 14:41:37.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:36.993" endtime="20201117 14:41:37.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024767792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.284" endtime="20201117 14:41:37.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.292" endtime="20201117 14:41:37.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.990" endtime="20201117 14:41:37.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.988" endtime="20201117 14:41:37.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.300" level="INFO">${RESULT} = [{'time': 0.024767792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.797300000000201e-05, 'source_diff': 7.797300000000201e-05}, {'time': 0.024860778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.296" endtime="20201117 14:41:37.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.313" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:37.301" endtime="20201117 14:41:37.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.318" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.317" endtime="20201117 14:41:37.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.321" level="INFO">VALUE: [7.797300000000201e-05, 7.737500000000105e-05, 7.798599999999864e-05, 7.776300000000153e-05, 7.793000000000036e-05, 7.762499999999783e-05, 7.783299999999937e-05, 7.738900000000062e-05, 7.750000000000118e-05, 7.743099999999933e-05, 7.752799999999685e-05, 7.82640000000015e-05, 7.775000000000143e-05, 7.823600000000236e-05, 7.790299999999722e-05, 7.784699999999894e-05, 7.808299999999962e-05, 7.742999999999986e-05, 7.768000000000011e-05, 7.784700000000241e-05, 7.827800000000107e-05, 7.784700000000241e-05, 7.743099999999933e-05, 7.833399999999935e-05, 7.824999999999846e-05, 7.75839999999986e-05, 7.779100000000067e-05, 7.737499999999758e-05, 7.766600000000054e-05, 7.833299999999987e-05, 7.826399999999803e-05, 7.777800000000057e-05, 7.75969999999987e-05, 7.824999999999846e-05, 7.75839999999986e-05, 7.79449999999994e-05, 7.800000000000168e-05, 7.744399999999943e-05, 7.816600000000104e-05, 7.76519999999975e-05, 7.818000000000061e-05, 7.769399999999968e-05, 7.786100000000198e-05, 7.774999999999796e-05, 7.775000000000143e-05, 7.826399999999803e-05, 7.793099999999983e-05, 7.817999999999714e-05, 7.783399999999885e-05, 7.825000000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.319" endtime="20201117 14:41:37.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.314" endtime="20201117 14:41:37.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.324" endtime="20201117 14:41:37.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.328" endtime="20201117 14:41:37.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.326" endtime="20201117 14:41:37.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.322" endtime="20201117 14:41:37.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.953" endtime="20201117 14:41:37.348"></status>
</kw>
<msg timestamp="20201117 14:41:37.349" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.357" endtime="20201117 14:41:37.376"></status>
</kw>
<msg timestamp="20201117 14:41:37.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.355" endtime="20201117 14:41:37.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.377" endtime="20201117 14:41:37.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.380" endtime="20201117 14:41:37.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.353" endtime="20201117 14:41:37.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.351" endtime="20201117 14:41:37.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.391" endtime="20201117 14:41:37.676"></status>
</kw>
<msg timestamp="20201117 14:41:37.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022094986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.389" endtime="20201117 14:41:37.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022094986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.681" endtime="20201117 14:41:37.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.689" endtime="20201117 14:41:37.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.387" endtime="20201117 14:41:37.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.385" endtime="20201117 14:41:37.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:37.696" level="INFO">${RESULT} = [{'time': 0.022172958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.797199999999907e-05, 'source_diff': 7.797199999999907e-05}, {'time': 0.022271986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:37.693" endtime="20201117 14:41:37.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:37.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:37.697" endtime="20201117 14:41:37.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.715" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:41:37.713" endtime="20201117 14:41:37.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.717" level="INFO">VALUE: [7.797199999999907e-05, 7.777800000000057e-05, 7.774999999999796e-05, 7.75830000000026e-05, 7.791700000000026e-05, 7.784699999999894e-05, 7.80969999999992e-05, 7.805599999999996e-05, 7.787500000000155e-05, 7.799999999999821e-05, 7.825000000000193e-05, 7.772200000000229e-05, 7.777800000000057e-05, 7.747199999999857e-05, 7.755599999999946e-05, 7.743099999999933e-05, 7.751400000000075e-05, 7.7764000000001e-05, 7.768099999999958e-05, 7.74030000000002e-05, 7.781999999999928e-05, 7.804100000000092e-05, 7.774999999999796e-05, 7.75969999999987e-05, 7.773599999999839e-05, 7.830600000000021e-05, 7.741699999999976e-05, 7.812499999999833e-05, 7.834799999999892e-05, 7.824999999999846e-05, 7.741699999999976e-05, 7.783400000000232e-05, 7.772199999999882e-05, 7.830600000000021e-05, 7.761100000000173e-05, 7.7457999999999e-05, 7.768099999999958e-05, 7.751400000000075e-05, 7.75969999999987e-05, 7.78189999999998e-05, 7.774999999999796e-05, 7.79030000000007e-05, 7.748699999999761e-05, 7.827699999999813e-05, 7.794399999999993e-05, 7.833299999999987e-05, 7.826399999999803e-05, 7.809700000000266e-05, 7.826399999999803e-05, 7.793099999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:41:37.716" endtime="20201117 14:41:37.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.711" endtime="20201117 14:41:37.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.721" endtime="20201117 14:41:37.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:37.724" endtime="20201117 14:41:37.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.722" endtime="20201117 14:41:37.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.719" endtime="20201117 14:41:37.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.349" endtime="20201117 14:41:37.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.951" endtime="20201117 14:41:37.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:36.951" endtime="20201117 14:41:37.745"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.748" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.757" endtime="20201117 14:41:37.777"></status>
</kw>
<msg timestamp="20201117 14:41:37.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.755" endtime="20201117 14:41:37.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:37.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:37.778" endtime="20201117 14:41:37.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.781" endtime="20201117 14:41:37.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.752" endtime="20201117 14:41:37.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.750" endtime="20201117 14:41:37.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:37.790" endtime="20201117 14:41:38.077"></status>
</kw>
<msg timestamp="20201117 14:41:38.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026203611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026282042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:37.789" endtime="20201117 14:41:38.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026203611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026282042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.082" endtime="20201117 14:41:38.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.090" endtime="20201117 14:41:38.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.786" endtime="20201117 14:41:38.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.784" endtime="20201117 14:41:38.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.097" level="INFO">${RESULT} = [{'time': 0.026282042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843099999999686e-05, 'source_diff': 7.843099999999686e-05}, {'time': 0.026382069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.093" endtime="20201117 14:41:38.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.112" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:38.098" endtime="20201117 14:41:38.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.117" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.116" endtime="20201117 14:41:38.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.119" level="INFO">VALUE: [7.843099999999686e-05, 7.929100000000217e-05, 7.922200000000032e-05, 7.84030000000012e-05, 7.87909999999982e-05, 7.90970000000002e-05, 7.884699999999994e-05, 7.884699999999994e-05, 7.858300000000012e-05, 7.841700000000076e-05, 7.849999999999871e-05, 7.843100000000033e-05, 7.884799999999942e-05, 7.8458e-05, 7.884699999999994e-05, 7.90970000000002e-05, 7.893000000000136e-05, 7.884699999999994e-05, 7.8764000000002e-05, 7.926399999999903e-05, 7.858300000000012e-05, 7.90970000000002e-05, 7.861099999999926e-05, 7.87909999999982e-05, 7.926299999999956e-05, 7.90840000000001e-05, 7.90970000000002e-05, 7.85969999999997e-05, 7.933400000000035e-05, 7.876399999999853e-05, 7.925000000000293e-05, 7.84169999999973e-05, 7.916700000000151e-05, 7.901400000000225e-05, 7.93190000000013e-05, 7.8764000000002e-05, 7.930499999999827e-05, 7.841599999999782e-05, 7.861100000000273e-05, 7.863900000000187e-05, 7.936100000000001e-05, 7.908299999999716e-05, 7.855600000000046e-05, 7.92640000000025e-05, 7.90970000000002e-05, 7.893100000000083e-05, 7.897299999999954e-05, 7.927800000000207e-05, 7.852700000000185e-05, 7.856900000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.118" endtime="20201117 14:41:38.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.113" endtime="20201117 14:41:38.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.123" endtime="20201117 14:41:38.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.126" endtime="20201117 14:41:38.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.125" endtime="20201117 14:41:38.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.121" endtime="20201117 14:41:38.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.748" endtime="20201117 14:41:38.147"></status>
</kw>
<msg timestamp="20201117 14:41:38.147" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.156" endtime="20201117 14:41:38.175"></status>
</kw>
<msg timestamp="20201117 14:41:38.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.155" endtime="20201117 14:41:38.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.176" endtime="20201117 14:41:38.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.179" endtime="20201117 14:41:38.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.152" endtime="20201117 14:41:38.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.150" endtime="20201117 14:41:38.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.189" endtime="20201117 14:41:38.475"></status>
</kw>
<msg timestamp="20201117 14:41:38.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:38.188" endtime="20201117 14:41:38.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022575292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:38.479" endtime="20201117 14:41:38.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.487" endtime="20201117 14:41:38.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.185" endtime="20201117 14:41:38.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.183" endtime="20201117 14:41:38.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.494" level="INFO">${RESULT} = [{'time': 0.022654, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.870800000000025e-05, 'source_diff': 7.870800000000025e-05}, {'time': 0.022750014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:38.491" endtime="20201117 14:41:38.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.508" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:38.495" endtime="20201117 14:41:38.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.513" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.512" endtime="20201117 14:41:38.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.515" level="INFO">VALUE: [7.870800000000025e-05, 7.866699999999754e-05, 7.908299999999716e-05, 7.893099999999736e-05, 7.868100000000058e-05, 7.882000000000028e-05, 7.873599999999939e-05, 7.855600000000046e-05, 7.855500000000099e-05, 7.876399999999853e-05, 7.858300000000012e-05, 7.858299999999666e-05, 7.841700000000076e-05, 7.901400000000225e-05, 7.844400000000043e-05, 7.854100000000142e-05, 7.85969999999997e-05, 7.90970000000002e-05, 7.892999999999789e-05, 7.855600000000046e-05, 7.8458e-05, 7.936100000000001e-05, 7.841700000000076e-05, 7.849999999999871e-05, 7.924999999999946e-05, 7.893100000000083e-05, 7.851400000000175e-05, 7.926299999999956e-05, 7.902700000000235e-05, 7.924999999999946e-05, 7.859700000000316e-05, 7.89169999999978e-05, 7.868100000000058e-05, 7.901400000000225e-05, 7.858300000000012e-05, 7.92640000000025e-05, 7.893100000000083e-05, 7.872199999999982e-05, 7.919400000000118e-05, 7.856899999999709e-05, 7.92779999999986e-05, 7.85969999999997e-05, 7.924999999999946e-05, 7.908300000000063e-05, 7.911099999999976e-05, 7.873599999999939e-05, 7.89450000000004e-05, 7.936199999999949e-05, 7.877699999999863e-05, 7.908300000000063e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.514" endtime="20201117 14:41:38.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.509" endtime="20201117 14:41:38.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.519" endtime="20201117 14:41:38.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.528" endtime="20201117 14:41:38.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.526" endtime="20201117 14:41:38.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.517" endtime="20201117 14:41:38.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.148" endtime="20201117 14:41:38.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.746" endtime="20201117 14:41:38.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:37.746" endtime="20201117 14:41:38.549"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.552" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.561" endtime="20201117 14:41:38.581"></status>
</kw>
<msg timestamp="20201117 14:41:38.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.560" endtime="20201117 14:41:38.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.582" endtime="20201117 14:41:38.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.585" endtime="20201117 14:41:38.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.556" endtime="20201117 14:41:38.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.554" endtime="20201117 14:41:38.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.594" endtime="20201117 14:41:38.880"></status>
</kw>
<msg timestamp="20201117 14:41:38.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026602792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.593" endtime="20201117 14:41:38.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026523181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026602792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.884" endtime="20201117 14:41:38.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.893" endtime="20201117 14:41:38.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.590" endtime="20201117 14:41:38.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.588" endtime="20201117 14:41:38.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:38.900" level="INFO">${RESULT} = [{'time': 0.026602792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.961100000000026e-05, 'source_diff': 7.961100000000026e-05}, {'time': 0.026696806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:38.896" endtime="20201117 14:41:38.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:38.913" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:38.901" endtime="20201117 14:41:38.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.918" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:38.917" endtime="20201117 14:41:38.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.921" level="INFO">VALUE: [7.961100000000026e-05, 8.00840000000011e-05, 8.023599999999742e-05, 7.95970000000007e-05, 8.008300000000163e-05, 7.94030000000022e-05, 8.018100000000208e-05, 7.941700000000176e-05, 7.97779999999991e-05, 8.00970000000012e-05, 8.00840000000011e-05, 7.938899999999915e-05, 7.983300000000138e-05, 8.015299999999947e-05, 7.994399999999846e-05, 8.017999999999914e-05, 7.983300000000138e-05, 8.00970000000012e-05, 7.993100000000183e-05, 8.037500000000058e-05, 7.961100000000026e-05, 7.983300000000138e-05, 7.958399999999713e-05, 8.00840000000011e-05, 8.026300000000056e-05, 7.959699999999723e-05, 7.95970000000007e-05, 8.011100000000076e-05, 7.976399999999953e-05, 8.025000000000046e-05, 8.008299999999816e-05, 7.943099999999786e-05, 7.961100000000026e-05, 7.981999999999781e-05, 7.954099999999895e-05, 7.961100000000026e-05, 8.026400000000003e-05, 8.025000000000046e-05, 7.943100000000133e-05, 7.968100000000158e-05, 7.998600000000064e-05, 7.974999999999996e-05, 7.976399999999953e-05, 8.029199999999917e-05, 7.949999999999971e-05, 7.993000000000236e-05, 8.001399999999978e-05, 7.942999999999839e-05, 7.984700000000094e-05, 8.00970000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:41:38.920" endtime="20201117 14:41:38.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.914" endtime="20201117 14:41:38.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.925" endtime="20201117 14:41:38.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:38.928" endtime="20201117 14:41:38.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.927" endtime="20201117 14:41:38.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.923" endtime="20201117 14:41:38.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.553" endtime="20201117 14:41:38.949"></status>
</kw>
<msg timestamp="20201117 14:41:38.950" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.958" endtime="20201117 14:41:38.977"></status>
</kw>
<msg timestamp="20201117 14:41:38.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.957" endtime="20201117 14:41:38.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:38.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:38.979" endtime="20201117 14:41:38.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.982" endtime="20201117 14:41:38.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.954" endtime="20201117 14:41:38.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.952" endtime="20201117 14:41:38.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:38.992" endtime="20201117 14:41:39.277"></status>
</kw>
<msg timestamp="20201117 14:41:39.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:38.990" endtime="20201117 14:41:39.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022463056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.282" endtime="20201117 14:41:39.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.290" endtime="20201117 14:41:39.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.988" endtime="20201117 14:41:39.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.986" endtime="20201117 14:41:39.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.297" level="INFO">${RESULT} = [{'time': 0.022463056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.981999999999781e-05, 'source_diff': 7.981999999999781e-05}, {'time': 0.022559083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.294" endtime="20201117 14:41:39.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:39.298" endtime="20201117 14:41:39.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.316" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.314" endtime="20201117 14:41:39.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.318" level="INFO">VALUE: [7.981999999999781e-05, 7.970800000000125e-05, 8.0152e-05, 7.959699999999723e-05, 8.023600000000089e-05, 7.983400000000085e-05, 7.9764000000003e-05, 7.993099999999836e-05, 7.980599999999824e-05, 7.943099999999786e-05, 8.033400000000135e-05, 7.993100000000183e-05, 7.984800000000042e-05, 8.02779999999996e-05, 8.016599999999957e-05, 8.019499999999818e-05, 8.019399999999871e-05, 8.025000000000046e-05, 8.025000000000046e-05, 7.99169999999988e-05, 8.016699999999904e-05, 8.019499999999818e-05, 7.952799999999885e-05, 8.02909999999997e-05, 8.036100000000101e-05, 8.008299999999816e-05, 7.991599999999932e-05, 7.969400000000168e-05, 8.019399999999871e-05, 7.966699999999854e-05, 7.976399999999953e-05, 8.00840000000011e-05, 7.970900000000072e-05, 7.961199999999974e-05, 7.994399999999846e-05, 7.981899999999834e-05, 7.943000000000186e-05, 7.948600000000014e-05, 7.943000000000186e-05, 8.016699999999904e-05, 7.951399999999928e-05, 7.974999999999996e-05, 7.94450000000009e-05, 7.968099999999811e-05, 8.018099999999861e-05, 8.01109999999973e-05, 8.034700000000145e-05, 7.95970000000007e-05, 7.933300000000088e-05, 7.984699999999748e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.317" endtime="20201117 14:41:39.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.312" endtime="20201117 14:41:39.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.322" endtime="20201117 14:41:39.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.326" endtime="20201117 14:41:39.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.324" endtime="20201117 14:41:39.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.320" endtime="20201117 14:41:39.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.950" endtime="20201117 14:41:39.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.550" endtime="20201117 14:41:39.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:38.549" endtime="20201117 14:41:39.347"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.349" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.358" endtime="20201117 14:41:39.378"></status>
</kw>
<msg timestamp="20201117 14:41:39.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.356" endtime="20201117 14:41:39.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.379" endtime="20201117 14:41:39.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.382" endtime="20201117 14:41:39.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.353" endtime="20201117 14:41:39.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.351" endtime="20201117 14:41:39.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.391" endtime="20201117 14:41:39.678"></status>
</kw>
<msg timestamp="20201117 14:41:39.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026182139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.390" endtime="20201117 14:41:39.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026182139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.682" endtime="20201117 14:41:39.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.691" endtime="20201117 14:41:39.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.387" endtime="20201117 14:41:39.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.385" endtime="20201117 14:41:39.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:39.698" level="INFO">${RESULT} = [{'time': 0.026182139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.112500000000133e-05, 'source_diff': 8.112500000000133e-05}, {'time': 0.026278167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:39.694" endtime="20201117 14:41:39.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:39.713" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:39.699" endtime="20201117 14:41:39.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.718" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:39.717" endtime="20201117 14:41:39.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.721" level="INFO">VALUE: [8.112500000000133e-05, 8.061100000000126e-05, 8.095799999999903e-05, 8.051400000000028e-05, 8.112499999999787e-05, 8.07780000000001e-05, 8.056899999999909e-05, 8.059699999999823e-05, 8.04169999999993e-05, 8.129200000000017e-05, 8.08329999999989e-05, 8.10970000000022e-05, 8.108399999999863e-05, 8.12910000000007e-05, 8.068099999999911e-05, 8.125000000000146e-05, 8.044399999999896e-05, 8.067999999999964e-05, 8.120799999999928e-05, 8.079199999999967e-05, 8.05970000000017e-05, 8.093099999999936e-05, 8.051400000000028e-05, 8.040299999999972e-05, 8.082000000000228e-05, 8.126399999999756e-05, 8.109699999999873e-05, 8.133400000000235e-05, 8.041600000000329e-05, 8.081899999999934e-05, 8.073599999999792e-05, 8.059699999999823e-05, 8.04169999999993e-05, 8.118099999999961e-05, 8.068099999999911e-05, 8.072199999999835e-05, 8.115300000000047e-05, 8.101400000000078e-05, 8.10970000000022e-05, 8.06109999999978e-05, 8.126400000000103e-05, 8.075000000000096e-05, 8.068099999999911e-05, 8.125000000000146e-05, 8.076399999999706e-05, 8.076400000000053e-05, 8.113899999999744e-05, 8.12780000000006e-05, 8.05130000000008e-05, 8.042999999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:41:39.719" endtime="20201117 14:41:39.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.714" endtime="20201117 14:41:39.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.724" endtime="20201117 14:41:39.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:39.728" endtime="20201117 14:41:39.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.726" endtime="20201117 14:41:39.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.722" endtime="20201117 14:41:39.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.350" endtime="20201117 14:41:39.748"></status>
</kw>
<msg timestamp="20201117 14:41:39.749" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.757" endtime="20201117 14:41:39.776"></status>
</kw>
<msg timestamp="20201117 14:41:39.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.756" endtime="20201117 14:41:39.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:39.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:39.778" endtime="20201117 14:41:39.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.781" endtime="20201117 14:41:39.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.753" endtime="20201117 14:41:39.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.751" endtime="20201117 14:41:39.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:39.791" endtime="20201117 14:41:40.077"></status>
</kw>
<msg timestamp="20201117 14:41:40.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:39.790" endtime="20201117 14:41:40.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022192111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022270542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.082" endtime="20201117 14:41:40.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.090" endtime="20201117 14:41:40.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.787" endtime="20201117 14:41:40.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.785" endtime="20201117 14:41:40.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.097" level="INFO">${RESULT} = [{'time': 0.022270542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843100000000033e-05, 'source_diff': 7.843100000000033e-05}, {'time': 0.022374569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.094" endtime="20201117 14:41:40.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.111" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:40.098" endtime="20201117 14:41:40.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.116" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.115" endtime="20201117 14:41:40.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.119" level="INFO">VALUE: [7.843100000000033e-05, 8.076300000000106e-05, 8.041599999999982e-05, 8.101400000000078e-05, 8.05970000000017e-05, 8.07780000000001e-05, 8.093099999999936e-05, 8.118099999999961e-05, 8.068100000000258e-05, 8.051400000000028e-05, 8.109800000000167e-05, 8.120899999999875e-05, 8.05970000000017e-05, 8.083399999999838e-05, 8.076400000000053e-05, 8.090300000000022e-05, 8.116700000000004e-05, 8.086099999999805e-05, 8.108299999999916e-05, 8.093100000000283e-05, 8.134799999999845e-05, 8.072299999999782e-05, 8.059800000000117e-05, 8.125000000000146e-05, 8.126399999999756e-05, 8.075000000000096e-05, 8.091600000000032e-05, 8.136100000000202e-05, 8.043100000000233e-05, 8.101399999999731e-05, 8.113899999999744e-05, 8.094499999999893e-05, 8.136100000000202e-05, 8.044399999999896e-05, 8.123600000000189e-05, 8.051400000000028e-05, 8.108299999999916e-05, 8.126400000000103e-05, 8.112499999999787e-05, 8.106899999999959e-05, 8.076399999999706e-05, 8.04169999999993e-05, 8.133399999999888e-05, 8.076400000000053e-05, 8.09169999999998e-05, 8.066600000000007e-05, 8.050000000000071e-05, 8.095799999999903e-05, 8.136099999999855e-05, 8.040299999999972e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.117" endtime="20201117 14:41:40.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.112" endtime="20201117 14:41:40.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.122" endtime="20201117 14:41:40.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.125" endtime="20201117 14:41:40.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.124" endtime="20201117 14:41:40.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.120" endtime="20201117 14:41:40.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.749" endtime="20201117 14:41:40.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.348" endtime="20201117 14:41:40.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:39.347" endtime="20201117 14:41:40.147"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.149" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.158" endtime="20201117 14:41:40.177"></status>
</kw>
<msg timestamp="20201117 14:41:40.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.156" endtime="20201117 14:41:40.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.178" endtime="20201117 14:41:40.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.181" endtime="20201117 14:41:40.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.153" endtime="20201117 14:41:40.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.151" endtime="20201117 14:41:40.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.190" endtime="20201117 14:41:40.477"></status>
</kw>
<msg timestamp="20201117 14:41:40.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.189" endtime="20201117 14:41:40.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024801153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.481" endtime="20201117 14:41:40.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.490" endtime="20201117 14:41:40.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.186" endtime="20201117 14:41:40.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.184" endtime="20201117 14:41:40.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.497" level="INFO">${RESULT} = [{'time': 0.024883264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.21109999999993e-05, 'source_diff': 8.21109999999993e-05}, {'time': 0.024981278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:40.493" endtime="20201117 14:41:40.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.511" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:40.498" endtime="20201117 14:41:40.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.516" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.514" endtime="20201117 14:41:40.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.518" level="INFO">VALUE: [8.21109999999993e-05, 8.14170000000003e-05, 8.148599999999867e-05, 8.19170000000008e-05, 8.168100000000011e-05, 8.217999999999767e-05, 8.162499999999837e-05, 8.230500000000127e-05, 8.159699999999923e-05, 8.206899999999712e-05, 8.144499999999943e-05, 8.151400000000128e-05, 8.19170000000008e-05, 8.218100000000061e-05, 8.216699999999758e-05, 8.199999999999874e-05, 8.190200000000175e-05, 8.151400000000128e-05, 8.226400000000203e-05, 8.226399999999856e-05, 8.159699999999923e-05, 8.158300000000313e-05, 8.23049999999978e-05, 8.165300000000097e-05, 8.150000000000171e-05, 8.193100000000036e-05, 8.167999999999717e-05, 8.148599999999867e-05, 8.156900000000009e-05, 8.159699999999923e-05, 8.144399999999996e-05, 8.236099999999955e-05, 8.211100000000277e-05, 8.195800000000003e-05, 8.165300000000097e-05, 8.188900000000165e-05, 8.226399999999856e-05, 8.1458000000003e-05, 8.149999999999824e-05, 8.208300000000016e-05, 8.188899999999819e-05, 8.151400000000128e-05, 8.194499999999993e-05, 8.201400000000178e-05, 8.21109999999993e-05, 8.193100000000036e-05, 8.166699999999708e-05, 8.183399999999938e-05, 8.208300000000016e-05, 8.229200000000117e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.517" endtime="20201117 14:41:40.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.512" endtime="20201117 14:41:40.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.522" endtime="20201117 14:41:40.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.525" endtime="20201117 14:41:40.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.523" endtime="20201117 14:41:40.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.520" endtime="20201117 14:41:40.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.150" endtime="20201117 14:41:40.546"></status>
</kw>
<msg timestamp="20201117 14:41:40.546" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.555" endtime="20201117 14:41:40.574"></status>
</kw>
<msg timestamp="20201117 14:41:40.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.553" endtime="20201117 14:41:40.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.575" endtime="20201117 14:41:40.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.578" endtime="20201117 14:41:40.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.550" endtime="20201117 14:41:40.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.548" endtime="20201117 14:41:40.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.590" endtime="20201117 14:41:40.875"></status>
</kw>
<msg timestamp="20201117 14:41:40.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.588" endtime="20201117 14:41:40.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022593347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.879" endtime="20201117 14:41:40.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.888" endtime="20201117 14:41:40.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.585" endtime="20201117 14:41:40.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.583" endtime="20201117 14:41:40.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:40.895" level="INFO">${RESULT} = [{'time': 0.022593347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.231900000000084e-05, 'source_diff': 8.231900000000084e-05}, {'time': 0.022689306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:40.892" endtime="20201117 14:41:40.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:40.909" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:40.896" endtime="20201117 14:41:40.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.913" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:41:40.912" endtime="20201117 14:41:40.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.916" level="INFO">VALUE: [8.231900000000084e-05, 8.201399999999831e-05, 8.159699999999923e-05, 8.226400000000203e-05, 8.209699999999973e-05, 8.208300000000016e-05, 8.158299999999966e-05, 8.21109999999993e-05, 8.226400000000203e-05, 8.15970000000027e-05, 8.14170000000003e-05, 8.183399999999938e-05, 8.209699999999973e-05, 8.194400000000046e-05, 8.184699999999948e-05, 8.194400000000046e-05, 8.165300000000097e-05, 8.220899999999975e-05, 8.202800000000135e-05, 8.159699999999923e-05, 8.22780000000016e-05, 8.223600000000289e-05, 8.140300000000072e-05, 8.199999999999874e-05, 8.173600000000239e-05, 8.192999999999742e-05, 8.151400000000128e-05, 8.21109999999993e-05, 8.209699999999973e-05, 8.175000000000196e-05, 8.176400000000153e-05, 8.227799999999813e-05, 8.201399999999831e-05, 8.209800000000267e-05, 8.161100000000227e-05, 8.175000000000196e-05, 8.138900000000115e-05, 8.234699999999998e-05, 8.15970000000027e-05, 8.176400000000153e-05, 8.209699999999973e-05, 8.175000000000196e-05, 8.226400000000203e-05, 8.144499999999943e-05, 8.218100000000061e-05, 8.234699999999998e-05, 8.176400000000153e-05, 8.206900000000059e-05, 8.226399999999856e-05, 8.15970000000027e-05]</msg>
<status status="PASS" starttime="20201117 14:41:40.915" endtime="20201117 14:41:40.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.910" endtime="20201117 14:41:40.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.919" endtime="20201117 14:41:40.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:40.923" endtime="20201117 14:41:40.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.921" endtime="20201117 14:41:40.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.918" endtime="20201117 14:41:40.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.547" endtime="20201117 14:41:40.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.148" endtime="20201117 14:41:40.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.147" endtime="20201117 14:41:40.944"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.947" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.955" endtime="20201117 14:41:40.976"></status>
</kw>
<msg timestamp="20201117 14:41:40.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.954" endtime="20201117 14:41:40.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:40.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:40.978" endtime="20201117 14:41:40.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.981" endtime="20201117 14:41:40.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.951" endtime="20201117 14:41:40.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.949" endtime="20201117 14:41:40.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:40.991" endtime="20201117 14:41:41.277"></status>
</kw>
<msg timestamp="20201117 14:41:41.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025568458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025650944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:40.989" endtime="20201117 14:41:41.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025568458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025650944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.281" endtime="20201117 14:41:41.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.290" endtime="20201117 14:41:41.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.986" endtime="20201117 14:41:41.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.984" endtime="20201117 14:41:41.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.297" level="INFO">${RESULT} = [{'time': 0.025650944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.248599999999967e-05, 'source_diff': 8.248599999999967e-05}, {'time': 0.025756958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.293" endtime="20201117 14:41:41.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:41.298" endtime="20201117 14:41:41.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.316" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.315" endtime="20201117 14:41:41.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.319" level="INFO">VALUE: [8.248599999999967e-05, 8.31110000000003e-05, 8.243000000000139e-05, 8.316699999999858e-05, 8.24720000000001e-05, 8.290300000000222e-05, 8.28330000000009e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.24170000000013e-05, 8.251299999999934e-05, 8.308400000000063e-05, 8.256900000000109e-05, 8.242999999999792e-05, 8.249999999999924e-05, 8.332000000000131e-05, 8.290299999999876e-05, 8.251400000000228e-05, 8.24170000000013e-05, 8.31390000000029e-05, 8.251399999999881e-05, 8.327699999999966e-05, 8.26109999999998e-05, 8.306900000000159e-05, 8.308300000000116e-05, 8.276399999999906e-05, 8.274999999999949e-05, 8.259700000000023e-05, 8.31110000000003e-05, 8.266600000000207e-05, 8.32919999999987e-05, 8.316700000000204e-05, 8.251400000000228e-05, 8.324999999999999e-05, 8.276400000000253e-05, 8.309699999999726e-05, 8.290299999999876e-05, 8.318100000000161e-05, 8.268100000000111e-05, 8.249999999999924e-05, 8.309700000000073e-05, 8.25979999999997e-05, 8.27369999999994e-05, 8.258300000000066e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.276399999999906e-05, 8.324999999999999e-05, 8.258299999999719e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.318" endtime="20201117 14:41:41.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.313" endtime="20201117 14:41:41.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.322" endtime="20201117 14:41:41.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.326" endtime="20201117 14:41:41.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.324" endtime="20201117 14:41:41.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.321" endtime="20201117 14:41:41.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.947" endtime="20201117 14:41:41.347"></status>
</kw>
<msg timestamp="20201117 14:41:41.347" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.356" endtime="20201117 14:41:41.375"></status>
</kw>
<msg timestamp="20201117 14:41:41.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.354" endtime="20201117 14:41:41.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.376" endtime="20201117 14:41:41.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.379" endtime="20201117 14:41:41.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.351" endtime="20201117 14:41:41.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.349" endtime="20201117 14:41:41.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.390" endtime="20201117 14:41:41.677"></status>
</kw>
<msg timestamp="20201117 14:41:41.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.388" endtime="20201117 14:41:41.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.681" endtime="20201117 14:41:41.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.690" endtime="20201117 14:41:41.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.385" endtime="20201117 14:41:41.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.384" endtime="20201117 14:41:41.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:41.697" level="INFO">${RESULT} = [{'time': 0.022629069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.327700000000313e-05, 'source_diff': 8.327700000000313e-05}, {'time': 0.022735083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:41.693" endtime="20201117 14:41:41.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:41.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:41.698" endtime="20201117 14:41:41.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.715" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:41:41.714" endtime="20201117 14:41:41.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.718" level="INFO">VALUE: [8.327700000000313e-05, 8.248599999999967e-05, 8.274999999999949e-05, 8.29170000000018e-05, 8.286100000000005e-05, 8.277799999999863e-05, 8.258400000000013e-05, 8.258400000000013e-05, 8.308399999999716e-05, 8.290199999999928e-05, 8.313799999999996e-05, 8.251400000000228e-05, 8.241600000000182e-05, 8.318000000000214e-05, 8.302799999999888e-05, 8.276399999999906e-05, 8.326399999999956e-05, 8.29309999999979e-05, 8.316700000000204e-05, 8.26529999999985e-05, 8.317999999999867e-05, 8.26659999999986e-05, 8.331900000000184e-05, 8.276399999999906e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.256900000000109e-05, 8.258300000000066e-05, 8.276399999999906e-05, 8.25979999999997e-05, 8.31110000000003e-05, 8.274999999999949e-05, 8.24309999999974e-05, 8.252800000000185e-05, 8.259700000000023e-05, 8.240300000000172e-05, 8.318099999999815e-05, 8.316700000000204e-05, 8.31110000000003e-05, 8.266700000000154e-05, 8.265300000000197e-05, 8.301399999999931e-05, 8.259699999999676e-05, 8.258300000000066e-05, 8.274999999999949e-05, 8.26109999999998e-05, 8.274999999999949e-05, 8.326399999999956e-05, 8.309700000000073e-05, 8.240300000000172e-05]</msg>
<status status="PASS" starttime="20201117 14:41:41.716" endtime="20201117 14:41:41.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.711" endtime="20201117 14:41:41.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.721" endtime="20201117 14:41:41.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:41.724" endtime="20201117 14:41:41.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.723" endtime="20201117 14:41:41.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.719" endtime="20201117 14:41:41.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.348" endtime="20201117 14:41:41.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.945" endtime="20201117 14:41:41.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:40.944" endtime="20201117 14:41:41.746"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.748" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.757" endtime="20201117 14:41:41.777"></status>
</kw>
<msg timestamp="20201117 14:41:41.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.756" endtime="20201117 14:41:41.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:41.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:41.778" endtime="20201117 14:41:41.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.781" endtime="20201117 14:41:41.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.752" endtime="20201117 14:41:41.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.750" endtime="20201117 14:41:41.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:41.791" endtime="20201117 14:41:42.076"></status>
</kw>
<msg timestamp="20201117 14:41:42.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025690347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:41.789" endtime="20201117 14:41:42.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025690347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.081" endtime="20201117 14:41:42.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.090" endtime="20201117 14:41:42.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.786" endtime="20201117 14:41:42.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.784" endtime="20201117 14:41:42.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.096" level="INFO">${RESULT} = [{'time': 0.025690347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.427800000000013e-05, 'source_diff': 8.427800000000013e-05}, {'time': 0.025797375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.093" endtime="20201117 14:41:42.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.110" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:42.097" endtime="20201117 14:41:42.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.115" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.114" endtime="20201117 14:41:42.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.118" level="INFO">VALUE: [8.427800000000013e-05, 8.368100000000211e-05, 8.352799999999938e-05, 8.427800000000013e-05, 8.34170000000023e-05, 8.348600000000067e-05, 8.391699999999933e-05, 8.416699999999958e-05, 8.400000000000074e-05, 8.426399999999709e-05, 8.411099999999783e-05, 8.37919999999992e-05, 8.394499999999847e-05, 8.399999999999727e-05, 8.341699999999883e-05, 8.420899999999829e-05, 8.358400000000113e-05, 8.394399999999899e-05, 8.366699999999908e-05, 8.433299999999894e-05, 8.341599999999935e-05, 8.400000000000074e-05, 8.409700000000173e-05, 8.426400000000056e-05, 8.423599999999795e-05, 8.358299999999819e-05, 8.352799999999938e-05, 8.358399999999766e-05, 8.427700000000066e-05, 8.342999999999892e-05, 8.436099999999808e-05, 8.377799999999963e-05, 8.409700000000173e-05, 8.430599999999927e-05, 8.408299999999869e-05, 8.404199999999945e-05, 8.409699999999826e-05, 8.340199999999978e-05, 8.402700000000041e-05, 8.408300000000216e-05, 8.341599999999935e-05, 8.36659999999996e-05, 8.400000000000074e-05, 8.395899999999804e-05, 8.419499999999872e-05, 8.368099999999865e-05, 8.419500000000218e-05, 8.374999999999702e-05, 8.40980000000012e-05, 8.390299999999976e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.116" endtime="20201117 14:41:42.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.111" endtime="20201117 14:41:42.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.121" endtime="20201117 14:41:42.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.125" endtime="20201117 14:41:42.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.123" endtime="20201117 14:41:42.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.119" endtime="20201117 14:41:42.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.749" endtime="20201117 14:41:42.146"></status>
</kw>
<msg timestamp="20201117 14:41:42.146" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.155" endtime="20201117 14:41:42.173"></status>
</kw>
<msg timestamp="20201117 14:41:42.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.153" endtime="20201117 14:41:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.175" endtime="20201117 14:41:42.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.177" endtime="20201117 14:41:42.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.150" endtime="20201117 14:41:42.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.148" endtime="20201117 14:41:42.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.188" endtime="20201117 14:41:42.473"></status>
</kw>
<msg timestamp="20201117 14:41:42.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.186" endtime="20201117 14:41:42.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.478" endtime="20201117 14:41:42.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.486" endtime="20201117 14:41:42.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.184" endtime="20201117 14:41:42.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.182" endtime="20201117 14:41:42.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.493" level="INFO">${RESULT} = [{'time': 0.022815625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.345799999999806e-05, 'source_diff': 8.345799999999806e-05}, {'time': 0.022915625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:42.490" endtime="20201117 14:41:42.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.507" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:42.494" endtime="20201117 14:41:42.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.511" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.510" endtime="20201117 14:41:42.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.514" level="INFO">VALUE: [8.345799999999806e-05, 8.341699999999883e-05, 8.382000000000181e-05, 8.376400000000006e-05, 8.393100000000236e-05, 8.352699999999991e-05, 8.343000000000239e-05, 8.39859999999977e-05, 8.341599999999935e-05, 8.418099999999915e-05, 8.351399999999981e-05, 8.422199999999838e-05, 8.409699999999826e-05, 8.338900000000316e-05, 8.383399999999791e-05, 8.391699999999933e-05, 8.400000000000074e-05, 8.392999999999942e-05, 8.38330000000019e-05, 8.394399999999899e-05, 8.436100000000155e-05, 8.39170000000028e-05, 8.433299999999894e-05, 8.375000000000049e-05, 8.408399999999816e-05, 8.358400000000113e-05, 8.374999999999702e-05, 8.392999999999942e-05, 8.400000000000074e-05, 8.359700000000123e-05, 8.341599999999935e-05, 8.436100000000155e-05, 8.36110000000008e-05, 8.375000000000049e-05, 8.376400000000006e-05, 8.341699999999883e-05, 8.416699999999958e-05, 8.419399999999924e-05, 8.370799999999831e-05, 8.38330000000019e-05, 8.392999999999942e-05, 8.398600000000117e-05, 8.376400000000006e-05, 8.405599999999902e-05, 8.409699999999826e-05, 8.34309999999984e-05, 8.384800000000095e-05, 8.35980000000007e-05, 8.377799999999963e-05, 8.426400000000056e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.513" endtime="20201117 14:41:42.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.508" endtime="20201117 14:41:42.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.518" endtime="20201117 14:41:42.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.522" endtime="20201117 14:41:42.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.520" endtime="20201117 14:41:42.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.516" endtime="20201117 14:41:42.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.147" endtime="20201117 14:41:42.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.747" endtime="20201117 14:41:42.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:41.746" endtime="20201117 14:41:42.543"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.545" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.554" endtime="20201117 14:41:42.574"></status>
</kw>
<msg timestamp="20201117 14:41:42.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.552" endtime="20201117 14:41:42.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.576" endtime="20201117 14:41:42.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.579" endtime="20201117 14:41:42.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.550" endtime="20201117 14:41:42.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.547" endtime="20201117 14:41:42.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.588" endtime="20201117 14:41:42.875"></status>
</kw>
<msg timestamp="20201117 14:41:42.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:42.586" endtime="20201117 14:41:42.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025743917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:42.879" endtime="20201117 14:41:42.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.888" endtime="20201117 14:41:42.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.584" endtime="20201117 14:41:42.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.582" endtime="20201117 14:41:42.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:42.895" level="INFO">${RESULT} = [{'time': 0.025829, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.508299999999969e-05, 'source_diff': 8.508299999999969e-05}, {'time': 0.025928042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:42.891" endtime="20201117 14:41:42.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:42.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:42.896" endtime="20201117 14:41:42.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.914" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:42.913" endtime="20201117 14:41:42.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.917" level="INFO">VALUE: [8.508299999999969e-05, 8.509799999999873e-05, 8.474999999999802e-05, 8.477800000000063e-05, 8.525000000000199e-05, 8.509700000000273e-05, 8.459700000000223e-05, 8.506900000000012e-05, 8.441600000000035e-05, 8.484700000000248e-05, 8.46110000000018e-05, 8.49859999999987e-05, 8.451400000000081e-05, 8.49309999999999e-05, 8.49729999999986e-05, 8.509699999999926e-05, 8.52920000000007e-05, 8.442999999999992e-05, 8.501399999999784e-05, 8.448600000000167e-05, 8.466700000000008e-05, 8.518100000000015e-05, 8.466700000000008e-05, 8.516700000000058e-05, 8.49859999999987e-05, 8.494399999999999e-05, 8.501299999999837e-05, 8.530600000000027e-05, 8.51110000000023e-05, 8.441600000000035e-05, 8.46530000000005e-05, 8.477799999999716e-05, 8.49309999999999e-05, 8.483399999999891e-05, 8.476400000000106e-05, 8.49309999999999e-05, 8.468000000000017e-05, 8.463800000000146e-05, 8.533299999999994e-05, 8.475000000000149e-05, 8.509699999999926e-05, 8.461099999999833e-05, 8.511099999999883e-05, 8.491700000000033e-05, 8.483400000000238e-05, 8.476400000000106e-05, 8.472200000000235e-05, 8.530600000000027e-05, 8.523600000000242e-05, 8.51110000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:41:42.916" endtime="20201117 14:41:42.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.911" endtime="20201117 14:41:42.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.921" endtime="20201117 14:41:42.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:42.924" endtime="20201117 14:41:42.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.923" endtime="20201117 14:41:42.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.919" endtime="20201117 14:41:42.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.546" endtime="20201117 14:41:42.945"></status>
</kw>
<msg timestamp="20201117 14:41:42.945" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.954" endtime="20201117 14:41:42.973"></status>
</kw>
<msg timestamp="20201117 14:41:42.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.953" endtime="20201117 14:41:42.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:42.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:42.975" endtime="20201117 14:41:42.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.978" endtime="20201117 14:41:42.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.950" endtime="20201117 14:41:42.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.948" endtime="20201117 14:41:42.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:42.988" endtime="20201117 14:41:43.275"></status>
</kw>
<msg timestamp="20201117 14:41:43.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:42.986" endtime="20201117 14:41:43.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.279" endtime="20201117 14:41:43.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.287" endtime="20201117 14:41:43.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.984" endtime="20201117 14:41:43.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.982" endtime="20201117 14:41:43.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.294" level="INFO">${RESULT} = [{'time': 0.022395847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.497199999999913e-05, 'source_diff': 8.497199999999913e-05}, {'time': 0.022497847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:43.291" endtime="20201117 14:41:43.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.308" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:43.295" endtime="20201117 14:41:43.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.313" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.312" endtime="20201117 14:41:43.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.315" level="INFO">VALUE: [8.497199999999913e-05, 8.493000000000042e-05, 8.502800000000088e-05, 8.441699999999983e-05, 8.483299999999944e-05, 8.459699999999876e-05, 8.490300000000076e-05, 8.51669999999971e-05, 8.483400000000238e-05, 8.444399999999949e-05, 8.450000000000124e-05, 8.529199999999723e-05, 8.474999999999802e-05, 8.526400000000156e-05, 8.458299999999919e-05, 8.491700000000033e-05, 8.49859999999987e-05, 8.474999999999802e-05, 8.495799999999956e-05, 8.4846999999999e-05, 8.442999999999992e-05, 8.450000000000124e-05, 8.458300000000266e-05, 8.504200000000045e-05, 8.508299999999969e-05, 8.444499999999897e-05, 8.470899999999879e-05, 8.466700000000008e-05, 8.468099999999965e-05, 8.516700000000058e-05, 8.468000000000017e-05, 8.450000000000124e-05, 8.527799999999766e-05, 8.525000000000199e-05, 8.44309999999994e-05, 8.540199999999831e-05, 8.44309999999994e-05, 8.483399999999891e-05, 8.465299999999704e-05, 8.46110000000018e-05, 8.477700000000116e-05, 8.491599999999738e-05, 8.4846999999999e-05, 8.524999999999852e-05, 8.491699999999686e-05, 8.499999999999827e-05, 8.494499999999947e-05, 8.46530000000005e-05, 8.484800000000195e-05, 8.438900000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.314" endtime="20201117 14:41:43.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.309" endtime="20201117 14:41:43.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.319" endtime="20201117 14:41:43.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.323" endtime="20201117 14:41:43.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.321" endtime="20201117 14:41:43.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.317" endtime="20201117 14:41:43.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.946" endtime="20201117 14:41:43.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.544" endtime="20201117 14:41:43.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:42.543" endtime="20201117 14:41:43.344"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.346" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.355" endtime="20201117 14:41:43.374"></status>
</kw>
<msg timestamp="20201117 14:41:43.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.353" endtime="20201117 14:41:43.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.376" endtime="20201117 14:41:43.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.379" endtime="20201117 14:41:43.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.351" endtime="20201117 14:41:43.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.348" endtime="20201117 14:41:43.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.388" endtime="20201117 14:41:43.675"></status>
</kw>
<msg timestamp="20201117 14:41:43.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.386" endtime="20201117 14:41:43.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024827125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.679" endtime="20201117 14:41:43.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.688" endtime="20201117 14:41:43.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.384" endtime="20201117 14:41:43.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.382" endtime="20201117 14:41:43.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:43.695" level="INFO">${RESULT} = [{'time': 0.024827125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.58189999999974e-05, 'source_diff': 8.58189999999974e-05}, {'time': 0.024935125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:43.691" endtime="20201117 14:41:43.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:43.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:43.696" endtime="20201117 14:41:43.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.713" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:43.712" endtime="20201117 14:41:43.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.721" level="INFO">VALUE: [8.58189999999974e-05, 8.568100000000065e-05, 8.563900000000194e-05, 8.56669999999976e-05, 8.618100000000115e-05, 8.584799999999948e-05, 8.593099999999743e-05, 8.583300000000044e-05, 8.626399999999909e-05, 8.561099999999933e-05, 8.573599999999945e-05, 8.608300000000069e-05, 8.624999999999952e-05, 8.574999999999902e-05, 8.624999999999952e-05, 8.591700000000133e-05, 8.5847e-05, 8.544400000000049e-05, 8.54859999999992e-05, 8.624999999999952e-05, 8.569400000000074e-05, 8.626399999999909e-05, 8.611099999999983e-05, 8.59310000000009e-05, 8.599999999999927e-05, 8.591699999999786e-05, 8.633400000000041e-05, 8.587499999999915e-05, 8.631900000000137e-05, 8.588899999999872e-05, 8.601399999999884e-05, 8.576399999999859e-05, 8.59310000000009e-05, 8.632000000000084e-05, 8.605599999999755e-05, 8.573600000000292e-05, 8.624999999999952e-05, 8.575000000000249e-05, 8.611099999999983e-05, 8.624999999999952e-05, 8.538900000000169e-05, 8.583300000000044e-05, 8.54310000000004e-05, 8.588799999999924e-05, 8.615299999999854e-05, 8.61249999999994e-05, 8.626400000000256e-05, 8.609799999999973e-05, 8.608300000000069e-05, 8.590199999999881e-05]</msg>
<status status="PASS" starttime="20201117 14:41:43.714" endtime="20201117 14:41:43.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.710" endtime="20201117 14:41:43.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.725" endtime="20201117 14:41:43.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:43.728" endtime="20201117 14:41:43.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.727" endtime="20201117 14:41:43.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.723" endtime="20201117 14:41:43.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.347" endtime="20201117 14:41:43.749"></status>
</kw>
<msg timestamp="20201117 14:41:43.749" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.758" endtime="20201117 14:41:43.777"></status>
</kw>
<msg timestamp="20201117 14:41:43.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.756" endtime="20201117 14:41:43.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:43.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:43.779" endtime="20201117 14:41:43.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.781" endtime="20201117 14:41:43.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.754" endtime="20201117 14:41:43.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.751" endtime="20201117 14:41:43.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:43.792" endtime="20201117 14:41:44.078"></status>
</kw>
<msg timestamp="20201117 14:41:44.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:43.790" endtime="20201117 14:41:44.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.082" endtime="20201117 14:41:44.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.091" endtime="20201117 14:41:44.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.788" endtime="20201117 14:41:44.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.786" endtime="20201117 14:41:44.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.098" level="INFO">${RESULT} = [{'time': 0.022375681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.62920000000017e-05, 'source_diff': 8.62920000000017e-05}, {'time': 0.022482681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:44.094" endtime="20201117 14:41:44.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.111" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:44.099" endtime="20201117 14:41:44.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.117" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.116" endtime="20201117 14:41:44.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.119" level="INFO">VALUE: [8.62920000000017e-05, 8.6153000000002e-05, 8.566599999999813e-05, 8.566599999999813e-05, 8.601400000000231e-05, 8.577800000000163e-05, 8.609700000000026e-05, 8.613899999999897e-05, 8.557000000000009e-05, 8.622199999999691e-05, 8.541699999999736e-05, 8.618100000000115e-05, 8.568000000000117e-05, 8.551400000000181e-05, 8.577800000000163e-05, 8.544399999999702e-05, 8.601399999999884e-05, 8.58050000000013e-05, 8.574999999999902e-05, 8.593099999999743e-05, 8.601299999999937e-05, 8.555500000000105e-05, 8.592999999999795e-05, 8.619400000000124e-05, 8.602799999999841e-05, 8.56249999999989e-05, 8.540299999999779e-05, 8.63470000000005e-05, 8.59310000000009e-05, 8.633400000000041e-05, 8.59310000000009e-05, 8.566700000000108e-05, 8.581900000000087e-05, 8.624999999999952e-05, 8.591600000000185e-05, 8.607000000000059e-05, 8.61249999999994e-05, 8.62920000000017e-05, 8.540300000000126e-05, 8.568100000000065e-05, 8.551400000000181e-05, 8.627699999999919e-05, 8.624999999999952e-05, 8.63470000000005e-05, 8.5847e-05, 8.543000000000092e-05, 8.602800000000188e-05, 8.601399999999884e-05, 8.608300000000069e-05, 8.541700000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.118" endtime="20201117 14:41:44.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.113" endtime="20201117 14:41:44.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.122" endtime="20201117 14:41:44.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.126" endtime="20201117 14:41:44.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.124" endtime="20201117 14:41:44.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.121" endtime="20201117 14:41:44.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.750" endtime="20201117 14:41:44.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.345" endtime="20201117 14:41:44.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:43.344" endtime="20201117 14:41:44.147"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.150" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.158" endtime="20201117 14:41:44.179"></status>
</kw>
<msg timestamp="20201117 14:41:44.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.157" endtime="20201117 14:41:44.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.180" endtime="20201117 14:41:44.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.183" endtime="20201117 14:41:44.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.154" endtime="20201117 14:41:44.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.152" endtime="20201117 14:41:44.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.192" endtime="20201117 14:41:44.478"></status>
</kw>
<msg timestamp="20201117 14:41:44.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025774139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025861431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.191" endtime="20201117 14:41:44.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025774139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025861431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.482" endtime="20201117 14:41:44.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.491" endtime="20201117 14:41:44.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.188" endtime="20201117 14:41:44.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.186" endtime="20201117 14:41:44.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.498" level="INFO">${RESULT} = [{'time': 0.025861431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.729199999999923e-05, 'source_diff': 8.729199999999923e-05}, {'time': 0.025972444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:44.495" endtime="20201117 14:41:44.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:44.499" endtime="20201117 14:41:44.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.518" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.517" endtime="20201117 14:41:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.521" level="INFO">VALUE: [8.729199999999923e-05, 8.6847000000001e-05, 8.729199999999923e-05, 8.641700000000183e-05, 8.64860000000002e-05, 8.726400000000009e-05, 8.641699999999836e-05, 8.652800000000238e-05, 8.708399999999769e-05, 8.691700000000233e-05, 8.71669999999991e-05, 8.666700000000208e-05, 8.683299999999797e-05, 8.658299999999772e-05, 8.726400000000009e-05, 8.709700000000126e-05, 8.676399999999959e-05, 8.675000000000002e-05, 8.693099999999843e-05, 8.729199999999923e-05, 8.672300000000036e-05, 8.658400000000066e-05, 8.726400000000009e-05, 8.673600000000045e-05, 8.709700000000126e-05, 8.675000000000002e-05, 8.712499999999693e-05, 8.659700000000076e-05, 8.725000000000052e-05, 8.658400000000066e-05, 8.675000000000002e-05, 8.68050000000023e-05, 8.726300000000062e-05, 8.676400000000306e-05, 8.709699999999779e-05, 8.720800000000181e-05, 8.644500000000097e-05, 8.700000000000027e-05, 8.677799999999916e-05, 8.726400000000009e-05, 8.727799999999966e-05, 8.716700000000258e-05, 8.652700000000291e-05, 8.73059999999988e-05, 8.690199999999981e-05, 8.700000000000027e-05, 8.725000000000052e-05, 8.690299999999929e-05, 8.718099999999868e-05, 8.651399999999934e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.519" endtime="20201117 14:41:44.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.514" endtime="20201117 14:41:44.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.524" endtime="20201117 14:41:44.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.527" endtime="20201117 14:41:44.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.526" endtime="20201117 14:41:44.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.522" endtime="20201117 14:41:44.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.150" endtime="20201117 14:41:44.548"></status>
</kw>
<msg timestamp="20201117 14:41:44.548" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.557" endtime="20201117 14:41:44.577"></status>
</kw>
<msg timestamp="20201117 14:41:44.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.555" endtime="20201117 14:41:44.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.578" endtime="20201117 14:41:44.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.581" endtime="20201117 14:41:44.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.553" endtime="20201117 14:41:44.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.551" endtime="20201117 14:41:44.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.591" endtime="20201117 14:41:44.877"></status>
</kw>
<msg timestamp="20201117 14:41:44.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.590" endtime="20201117 14:41:44.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:44.882" endtime="20201117 14:41:44.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.891" endtime="20201117 14:41:44.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.587" endtime="20201117 14:41:44.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.585" endtime="20201117 14:41:44.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:44.898" level="INFO">${RESULT} = [{'time': 0.022425486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.68050000000023e-05, 'source_diff': 8.68050000000023e-05}, {'time': 0.022536528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:44.894" endtime="20201117 14:41:44.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:44.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:44.899" endtime="20201117 14:41:44.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.916" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:41:44.915" endtime="20201117 14:41:44.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.919" level="INFO">VALUE: [8.68050000000023e-05, 8.702799999999941e-05, 8.708300000000169e-05, 8.691699999999886e-05, 8.684699999999754e-05, 8.641699999999836e-05, 8.669399999999827e-05, 8.66799999999987e-05, 8.727700000000019e-05, 8.709700000000126e-05, 8.709700000000126e-05, 8.69310000000019e-05, 8.733299999999847e-05, 8.676399999999959e-05, 8.644500000000097e-05, 8.727799999999966e-05, 8.700000000000027e-05, 8.672200000000088e-05, 8.736100000000108e-05, 8.706899999999865e-05, 8.658300000000119e-05, 8.725000000000052e-05, 8.725000000000052e-05, 8.693099999999843e-05, 8.652799999999891e-05, 8.71669999999991e-05, 8.644400000000149e-05, 8.701300000000037e-05, 8.640200000000278e-05, 8.68050000000023e-05, 8.727799999999966e-05, 8.726400000000009e-05, 8.676399999999959e-05, 8.687500000000015e-05, 8.66669999999986e-05, 8.720899999999782e-05, 8.644400000000149e-05, 8.733400000000141e-05, 8.726400000000009e-05, 8.640199999999931e-05, 8.649999999999977e-05, 8.663899999999947e-05, 8.69730000000006e-05, 8.73059999999988e-05, 8.658400000000066e-05, 8.673600000000045e-05, 8.659799999999676e-05, 8.658300000000119e-05, 8.659699999999729e-05, 8.711100000000083e-05]</msg>
<status status="PASS" starttime="20201117 14:41:44.917" endtime="20201117 14:41:44.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.912" endtime="20201117 14:41:44.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.922" endtime="20201117 14:41:44.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:44.926" endtime="20201117 14:41:44.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.924" endtime="20201117 14:41:44.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.920" endtime="20201117 14:41:44.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.549" endtime="20201117 14:41:44.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.149" endtime="20201117 14:41:44.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.148" endtime="20201117 14:41:44.947"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.949" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.958" endtime="20201117 14:41:44.978"></status>
</kw>
<msg timestamp="20201117 14:41:44.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.956" endtime="20201117 14:41:44.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:44.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:44.980" endtime="20201117 14:41:44.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.982" endtime="20201117 14:41:44.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.954" endtime="20201117 14:41:44.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.951" endtime="20201117 14:41:44.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:44.992" endtime="20201117 14:41:45.278"></status>
</kw>
<msg timestamp="20201117 14:41:45.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02516775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:44.990" endtime="20201117 14:41:45.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02516775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025255347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:45.282" endtime="20201117 14:41:45.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.291" endtime="20201117 14:41:45.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.987" endtime="20201117 14:41:45.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.985" endtime="20201117 14:41:45.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.298" level="INFO">${RESULT} = [{'time': 0.025255347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.759700000000176e-05, 'source_diff': 8.759700000000176e-05}, {'time': 0.025364361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.294" endtime="20201117 14:41:45.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:45.299" endtime="20201117 14:41:45.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.316" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.315" endtime="20201117 14:41:45.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.319" level="INFO">VALUE: [8.759700000000176e-05, 8.811099999999836e-05, 8.74860000000012e-05, 8.83189999999999e-05, 8.775000000000102e-05, 8.74449999999985e-05, 8.818099999999968e-05, 8.784800000000148e-05, 8.808400000000216e-05, 8.740200000000031e-05, 8.801399999999737e-05, 8.773600000000145e-05, 8.822200000000238e-05, 8.744399999999902e-05, 8.820900000000229e-05, 8.818099999999968e-05, 8.825000000000152e-05, 8.769499999999875e-05, 8.76669999999996e-05, 8.76799999999997e-05, 8.761099999999786e-05, 8.750000000000077e-05, 8.794500000000247e-05, 8.834699999999904e-05, 8.81800000000002e-05, 8.809700000000226e-05, 8.776400000000059e-05, 8.76120000000008e-05, 8.808399999999869e-05, 8.783300000000244e-05, 8.825000000000152e-05, 8.826400000000109e-05, 8.761100000000133e-05, 8.808299999999922e-05, 8.826400000000109e-05, 8.808300000000269e-05, 8.74449999999985e-05, 8.751400000000034e-05, 8.808400000000216e-05, 8.791699999999986e-05, 8.800000000000127e-05, 8.806900000000312e-05, 8.758299999999872e-05, 8.809700000000226e-05, 8.759699999999829e-05, 8.754200000000295e-05, 8.791699999999986e-05, 8.79999999999978e-05, 8.793099999999943e-05, 8.834799999999851e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.317" endtime="20201117 14:41:45.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.313" endtime="20201117 14:41:45.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.322" endtime="20201117 14:41:45.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.326" endtime="20201117 14:41:45.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.324" endtime="20201117 14:41:45.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.321" endtime="20201117 14:41:45.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.950" endtime="20201117 14:41:45.347"></status>
</kw>
<msg timestamp="20201117 14:41:45.347" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.355" endtime="20201117 14:41:45.375"></status>
</kw>
<msg timestamp="20201117 14:41:45.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.354" endtime="20201117 14:41:45.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.376" endtime="20201117 14:41:45.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.379" endtime="20201117 14:41:45.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.351" endtime="20201117 14:41:45.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.349" endtime="20201117 14:41:45.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.390" endtime="20201117 14:41:45.676"></status>
</kw>
<msg timestamp="20201117 14:41:45.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.388" endtime="20201117 14:41:45.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:45.680" endtime="20201117 14:41:45.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.689" endtime="20201117 14:41:45.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.386" endtime="20201117 14:41:45.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.384" endtime="20201117 14:41:45.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:45.696" level="INFO">${RESULT} = [{'time': 0.022271361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.815300000000054e-05, 'source_diff': 8.815300000000054e-05}, {'time': 0.022381361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:45.692" endtime="20201117 14:41:45.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:45.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:45.697" endtime="20201117 14:41:45.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.714" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:41:45.713" endtime="20201117 14:41:45.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.717" level="INFO">VALUE: [8.815300000000054e-05, 8.809699999999879e-05, 8.811099999999836e-05, 8.741700000000283e-05, 8.833399999999894e-05, 8.775000000000102e-05, 8.830500000000033e-05, 8.81670000000001e-05, 8.787499999999768e-05, 8.761100000000133e-05, 8.787500000000115e-05, 8.786100000000158e-05, 8.74449999999985e-05, 8.834699999999904e-05, 8.776399999999712e-05, 8.793099999999943e-05, 8.76669999999996e-05, 8.829200000000023e-05, 8.759699999999829e-05, 8.742999999999945e-05, 8.801400000000084e-05, 8.809699999999879e-05, 8.7944999999999e-05, 8.801400000000084e-05, 8.756999999999862e-05, 8.826400000000109e-05, 8.747200000000163e-05, 8.784800000000148e-05, 8.825000000000152e-05, 8.826399999999762e-05, 8.758300000000219e-05, 8.825000000000152e-05, 8.809699999999879e-05, 8.826400000000109e-05, 8.826400000000109e-05, 8.776400000000059e-05, 8.829200000000023e-05, 8.802700000000094e-05, 8.776300000000112e-05, 8.759699999999829e-05, 8.826399999999762e-05, 8.812499999999793e-05, 8.758300000000219e-05, 8.741699999999936e-05, 8.74860000000012e-05, 8.74449999999985e-05, 8.818099999999968e-05, 8.822199999999891e-05, 8.801399999999737e-05, 8.777800000000016e-05]</msg>
<status status="PASS" starttime="20201117 14:41:45.715" endtime="20201117 14:41:45.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.710" endtime="20201117 14:41:45.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.720" endtime="20201117 14:41:45.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:45.724" endtime="20201117 14:41:45.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.722" endtime="20201117 14:41:45.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.718" endtime="20201117 14:41:45.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.347" endtime="20201117 14:41:45.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.948" endtime="20201117 14:41:45.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:44.947" endtime="20201117 14:41:45.745"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.747" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.756" endtime="20201117 14:41:45.776"></status>
</kw>
<msg timestamp="20201117 14:41:45.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.755" endtime="20201117 14:41:45.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:45.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:45.778" endtime="20201117 14:41:45.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.780" endtime="20201117 14:41:45.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.752" endtime="20201117 14:41:45.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.750" endtime="20201117 14:41:45.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:45.790" endtime="20201117 14:41:46.076"></status>
</kw>
<msg timestamp="20201117 14:41:46.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026199667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0262885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:45.788" endtime="20201117 14:41:46.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026199667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0262885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:41:46.081" endtime="20201117 14:41:46.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.089" endtime="20201117 14:41:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.786" endtime="20201117 14:41:46.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.784" endtime="20201117 14:41:46.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.096" level="INFO">${RESULT} = [{'time': 0.0262885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.883299999999997e-05, 'source_diff': 8.883299999999997e-05}, {'time': 0.026395556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:46.093" endtime="20201117 14:41:46.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.111" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:46.097" endtime="20201117 14:41:46.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.116" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.115" endtime="20201117 14:41:46.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.118" level="INFO">VALUE: [8.883299999999997e-05, 8.856999999999962e-05, 8.834700000000251e-05, 8.894399999999705e-05, 8.863900000000147e-05, 8.859699999999929e-05, 8.837500000000165e-05, 8.934799999999951e-05, 8.912499999999893e-05, 8.926400000000209e-05, 8.894400000000052e-05, 8.919500000000025e-05, 8.86670000000006e-05, 8.901400000000184e-05, 8.934700000000004e-05, 8.909699999999979e-05, 8.909799999999926e-05, 8.91389999999985e-05, 8.891600000000138e-05, 8.848599999999873e-05, 8.876399999999812e-05, 8.874999999999855e-05, 8.891699999999739e-05, 8.91389999999985e-05, 8.934700000000004e-05, 8.909699999999979e-05, 8.858399999999919e-05, 8.893000000000095e-05, 8.883299999999997e-05, 8.843000000000045e-05, 8.867999999999723e-05, 8.865300000000104e-05, 8.86800000000007e-05, 8.936100000000308e-05, 8.84449999999995e-05, 8.901399999999837e-05, 8.870900000000279e-05, 8.933300000000047e-05, 8.843000000000045e-05, 8.883299999999997e-05, 8.872199999999941e-05, 8.88060000000003e-05, 8.891700000000086e-05, 8.938900000000222e-05, 8.862499999999843e-05, 8.895899999999957e-05, 8.850000000000177e-05, 8.894400000000052e-05, 8.886100000000258e-05, 8.872199999999941e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.117" endtime="20201117 14:41:46.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.112" endtime="20201117 14:41:46.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.122" endtime="20201117 14:41:46.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.125" endtime="20201117 14:41:46.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.124" endtime="20201117 14:41:46.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.120" endtime="20201117 14:41:46.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.748" endtime="20201117 14:41:46.146"></status>
</kw>
<msg timestamp="20201117 14:41:46.146" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.155" endtime="20201117 14:41:46.174"></status>
</kw>
<msg timestamp="20201117 14:41:46.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.154" endtime="20201117 14:41:46.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.176" endtime="20201117 14:41:46.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.179" endtime="20201117 14:41:46.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.151" endtime="20201117 14:41:46.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.149" endtime="20201117 14:41:46.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.189" endtime="20201117 14:41:46.476"></status>
</kw>
<msg timestamp="20201117 14:41:46.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.187" endtime="20201117 14:41:46.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022708903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.480" endtime="20201117 14:41:46.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.488" endtime="20201117 14:41:46.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.185" endtime="20201117 14:41:46.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.183" endtime="20201117 14:41:46.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.495" level="INFO">${RESULT} = [{'time': 0.022708903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.879200000000073e-05, 'source_diff': 8.879200000000073e-05}, {'time': 0.022817917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.492" endtime="20201117 14:41:46.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:46.496" endtime="20201117 14:41:46.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.514" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.513" endtime="20201117 14:41:46.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.517" level="INFO">VALUE: [8.879200000000073e-05, 8.868100000000018e-05, 8.851399999999787e-05, 8.859700000000276e-05, 8.886099999999911e-05, 8.870799999999984e-05, 8.895800000000009e-05, 8.909699999999979e-05, 8.908300000000022e-05, 8.893100000000043e-05, 8.869499999999975e-05, 8.883399999999944e-05, 8.909799999999926e-05, 8.890200000000181e-05, 8.84999999999983e-05, 8.843000000000045e-05, 8.865300000000104e-05, 8.88060000000003e-05, 8.927800000000166e-05, 8.868100000000018e-05, 8.918100000000068e-05, 8.886199999999858e-05, 8.859799999999876e-05, 8.844400000000002e-05, 8.888899999999825e-05, 8.844400000000002e-05, 8.916600000000163e-05, 8.923699999999896e-05, 8.86670000000006e-05, 8.88060000000003e-05, 8.870900000000279e-05, 8.859799999999876e-05, 8.926299999999915e-05, 8.893000000000095e-05, 8.869400000000027e-05, 8.851400000000134e-05, 8.924999999999905e-05, 8.917999999999773e-05, 8.891700000000086e-05, 8.901399999999837e-05, 8.893100000000043e-05, 8.91670000000011e-05, 8.852700000000144e-05, 8.876299999999865e-05, 8.859699999999929e-05, 8.894400000000052e-05, 8.883299999999997e-05, 8.852799999999744e-05, 8.923599999999948e-05, 8.891700000000086e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.515" endtime="20201117 14:41:46.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.510" endtime="20201117 14:41:46.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.520" endtime="20201117 14:41:46.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.524" endtime="20201117 14:41:46.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.522" endtime="20201117 14:41:46.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.518" endtime="20201117 14:41:46.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.147" endtime="20201117 14:41:46.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.746" endtime="20201117 14:41:46.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:45.745" endtime="20201117 14:41:46.545"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.548" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.556" endtime="20201117 14:41:46.575"></status>
</kw>
<msg timestamp="20201117 14:41:46.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.555" endtime="20201117 14:41:46.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.577" endtime="20201117 14:41:46.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.580" endtime="20201117 14:41:46.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.552" endtime="20201117 14:41:46.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.550" endtime="20201117 14:41:46.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.589" endtime="20201117 14:41:46.877"></status>
</kw>
<msg timestamp="20201117 14:41:46.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.588" endtime="20201117 14:41:46.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:46.881" endtime="20201117 14:41:46.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.889" endtime="20201117 14:41:46.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.585" endtime="20201117 14:41:46.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.583" endtime="20201117 14:41:46.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:46.896" level="INFO">${RESULT} = [{'time': 0.025242306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.995900000000057e-05, 'source_diff': 8.995900000000057e-05}, {'time': 0.025349333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:46.893" endtime="20201117 14:41:46.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:46.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:46.897" endtime="20201117 14:41:46.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.915" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:46.914" endtime="20201117 14:41:46.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.917" level="INFO">VALUE: [8.995900000000057e-05, 8.993000000000195e-05, 8.998600000000023e-05, 8.974999999999955e-05, 9.01670000000021e-05, 9.011100000000036e-05, 8.951400000000234e-05, 8.947200000000016e-05, 9.009800000000026e-05, 8.974999999999955e-05, 9.029199999999876e-05, 9.006899999999818e-05, 8.959700000000029e-05, 9.012499999999993e-05, 8.977799999999869e-05, 9.025000000000005e-05, 8.977799999999869e-05, 8.991699999999839e-05, 9.013800000000002e-05, 9.033400000000094e-05, 9.025000000000005e-05, 9.009700000000079e-05, 8.974999999999955e-05, 9.011100000000036e-05, 9.008300000000122e-05, 9.029200000000223e-05, 9.025000000000005e-05, 8.991700000000186e-05, 8.968100000000118e-05, 8.982000000000087e-05, 8.941699999999789e-05, 8.951399999999887e-05, 9.009700000000079e-05, 8.991599999999891e-05, 8.96800000000017e-05, 9.001399999999937e-05, 8.943100000000093e-05, 8.96670000000016e-05, 8.99999999999998e-05, 8.941700000000136e-05, 8.94869999999992e-05, 8.976399999999912e-05, 8.990199999999934e-05, 9.0332999999998e-05, 8.976400000000259e-05, 8.976399999999912e-05, 8.993099999999796e-05, 8.983400000000044e-05, 8.943100000000093e-05, 8.968100000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:41:46.916" endtime="20201117 14:41:46.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.911" endtime="20201117 14:41:46.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.921" endtime="20201117 14:41:46.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:46.925" endtime="20201117 14:41:46.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.923" endtime="20201117 14:41:46.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.919" endtime="20201117 14:41:46.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.548" endtime="20201117 14:41:46.945"></status>
</kw>
<msg timestamp="20201117 14:41:46.946" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.954" endtime="20201117 14:41:46.973"></status>
</kw>
<msg timestamp="20201117 14:41:46.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.953" endtime="20201117 14:41:46.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:46.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:46.975" endtime="20201117 14:41:46.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.977" endtime="20201117 14:41:46.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.950" endtime="20201117 14:41:46.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.948" endtime="20201117 14:41:46.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:46.988" endtime="20201117 14:41:47.273"></status>
</kw>
<msg timestamp="20201117 14:41:47.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02248775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:46.986" endtime="20201117 14:41:47.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02248775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:47.277" endtime="20201117 14:41:47.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.285" endtime="20201117 14:41:47.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.983" endtime="20201117 14:41:47.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.982" endtime="20201117 14:41:47.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.292" level="INFO">${RESULT} = [{'time': 0.02248775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.945800000000059e-05, 'source_diff': 8.945800000000059e-05}, {'time': 0.022598764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:47.289" endtime="20201117 14:41:47.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.306" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:47.293" endtime="20201117 14:41:47.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.311" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.310" endtime="20201117 14:41:47.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.313" level="INFO">VALUE: [8.945800000000059e-05, 8.976399999999912e-05, 8.993100000000143e-05, 9.019500000000125e-05, 8.979200000000173e-05, 8.959799999999976e-05, 8.959700000000029e-05, 9.015299999999907e-05, 8.956900000000115e-05, 8.954099999999854e-05, 8.990299999999882e-05, 8.96670000000016e-05, 8.96670000000016e-05, 8.984800000000001e-05, 8.940299999999832e-05, 9.018100000000168e-05, 8.955500000000158e-05, 8.979199999999826e-05, 9.008300000000122e-05, 9.004200000000198e-05, 8.977799999999869e-05, 8.974999999999955e-05, 9.023600000000048e-05, 8.941700000000136e-05, 9.036200000000008e-05, 9.007000000000112e-05, 8.936099999999961e-05, 8.952799999999844e-05, 8.992999999999848e-05, 9.019500000000125e-05, 9.017999999999873e-05, 9.025000000000005e-05, 8.974999999999955e-05, 9.029199999999876e-05, 8.96670000000016e-05, 8.99999999999998e-05, 9.03199999999979e-05, 8.966699999999814e-05, 8.992999999999848e-05, 8.945800000000059e-05, 9.023600000000048e-05, 8.974999999999955e-05, 8.961099999999986e-05, 9.011100000000036e-05, 8.993100000000143e-05, 9.020800000000134e-05, 8.986100000000011e-05, 8.997200000000066e-05, 8.967999999999823e-05, 8.965300000000204e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.312" endtime="20201117 14:41:47.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.307" endtime="20201117 14:41:47.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.317" endtime="20201117 14:41:47.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.321" endtime="20201117 14:41:47.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.319" endtime="20201117 14:41:47.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.315" endtime="20201117 14:41:47.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.946" endtime="20201117 14:41:47.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.546" endtime="20201117 14:41:47.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:46.545" endtime="20201117 14:41:47.342"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.344" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.353" endtime="20201117 14:41:47.373"></status>
</kw>
<msg timestamp="20201117 14:41:47.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.351" endtime="20201117 14:41:47.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.375" endtime="20201117 14:41:47.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.378" endtime="20201117 14:41:47.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.349" endtime="20201117 14:41:47.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.346" endtime="20201117 14:41:47.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.387" endtime="20201117 14:41:47.673"></status>
</kw>
<msg timestamp="20201117 14:41:47.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025751056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.385" endtime="20201117 14:41:47.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025751056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025841708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.677" endtime="20201117 14:41:47.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.686" endtime="20201117 14:41:47.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.383" endtime="20201117 14:41:47.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.381" endtime="20201117 14:41:47.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:47.694" level="INFO">${RESULT} = [{'time': 0.025841708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.06520000000001e-05, 'source_diff': 9.06520000000001e-05}, {'time': 0.025955694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:47.690" endtime="20201117 14:41:47.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:47.709" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:47.695" endtime="20201117 14:41:47.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.714" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:47.713" endtime="20201117 14:41:47.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.717" level="INFO">VALUE: [9.06520000000001e-05, 9.043000000000245e-05, 9.06939999999988e-05, 9.117999999999973e-05, 9.051399999999987e-05, 9.132000000000237e-05, 9.134699999999857e-05, 9.126400000000062e-05, 9.093100000000243e-05, 9.065300000000304e-05, 9.06670000000026e-05, 9.098599999999776e-05, 9.111100000000136e-05, 9.092999999999948e-05, 9.101400000000037e-05, 9.127800000000019e-05, 9.0945000000002e-05, 9.097199999999819e-05, 9.062500000000043e-05, 9.059799999999729e-05, 9.091699999999939e-05, 9.098600000000123e-05, 9.059700000000129e-05, 9.122200000000191e-05, 9.093000000000295e-05, 9.077800000000316e-05, 9.058299999999825e-05, 9.109699999999832e-05, 9.109799999999779e-05, 9.124999999999758e-05, 9.076300000000065e-05, 9.042999999999898e-05, 9.099999999999733e-05, 9.091599999999991e-05, 9.066699999999914e-05, 9.068100000000218e-05, 9.052799999999944e-05, 9.091699999999939e-05, 9.136200000000108e-05, 9.076400000000012e-05, 9.076300000000065e-05, 9.091599999999991e-05, 9.10139999999969e-05, 9.091599999999991e-05, 9.077799999999969e-05, 9.091699999999939e-05, 9.08329999999985e-05, 9.109700000000179e-05, 9.077800000000316e-05, 9.093000000000295e-05]</msg>
<status status="PASS" starttime="20201117 14:41:47.715" endtime="20201117 14:41:47.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.710" endtime="20201117 14:41:47.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.720" endtime="20201117 14:41:47.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:47.724" endtime="20201117 14:41:47.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.722" endtime="20201117 14:41:47.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.719" endtime="20201117 14:41:47.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.345" endtime="20201117 14:41:47.745"></status>
</kw>
<msg timestamp="20201117 14:41:47.745" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.754" endtime="20201117 14:41:47.773"></status>
</kw>
<msg timestamp="20201117 14:41:47.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.752" endtime="20201117 14:41:47.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:47.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:47.775" endtime="20201117 14:41:47.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.777" endtime="20201117 14:41:47.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.749" endtime="20201117 14:41:47.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.747" endtime="20201117 14:41:47.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:47.788" endtime="20201117 14:41:48.073"></status>
</kw>
<msg timestamp="20201117 14:41:48.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:47.786" endtime="20201117 14:41:48.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.078" endtime="20201117 14:41:48.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.086" endtime="20201117 14:41:48.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.783" endtime="20201117 14:41:48.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.781" endtime="20201117 14:41:48.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.093" level="INFO">${RESULT} = [{'time': 0.022392542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.095900000000157e-05, 'source_diff': 9.095900000000157e-05}, {'time': 0.022507569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.090" endtime="20201117 14:41:48.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:48.094" endtime="20201117 14:41:48.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.112" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.111" endtime="20201117 14:41:48.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.115" level="INFO">VALUE: [9.095900000000157e-05, 9.076300000000065e-05, 9.126300000000115e-05, 9.044399999999855e-05, 9.070799999999837e-05, 9.118099999999921e-05, 9.070899999999785e-05, 9.097200000000166e-05, 9.125000000000105e-05, 9.057000000000162e-05, 9.108400000000169e-05, 9.125000000000105e-05, 9.091600000000338e-05, 9.067999999999923e-05, 9.117999999999973e-05, 9.070799999999837e-05, 9.086099999999764e-05, 9.048599999999726e-05, 9.136200000000108e-05, 9.126400000000062e-05, 9.088900000000025e-05, 9.13199999999989e-05, 9.106900000000265e-05, 9.08060000000023e-05, 9.109700000000179e-05, 9.043099999999846e-05, 9.101400000000037e-05, 9.043099999999846e-05, 9.080599999999883e-05, 9.091699999999939e-05, 9.11670000000031e-05, 9.09870000000007e-05, 9.041599999999941e-05, 9.097200000000166e-05, 9.061100000000086e-05, 9.042999999999898e-05, 9.101400000000037e-05, 9.093100000000243e-05, 9.104199999999951e-05, 9.125000000000105e-05, 9.058400000000119e-05, 9.075000000000055e-05, 9.075000000000055e-05, 9.041599999999941e-05, 9.102799999999994e-05, 9.109699999999832e-05, 9.043100000000193e-05, 9.086100000000111e-05, 9.127799999999672e-05, 9.059800000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.113" endtime="20201117 14:41:48.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.108" endtime="20201117 14:41:48.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.118" endtime="20201117 14:41:48.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.122" endtime="20201117 14:41:48.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.120" endtime="20201117 14:41:48.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.116" endtime="20201117 14:41:48.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.746" endtime="20201117 14:41:48.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.343" endtime="20201117 14:41:48.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:47.342" endtime="20201117 14:41:48.143"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.145" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.154" endtime="20201117 14:41:48.173"></status>
</kw>
<msg timestamp="20201117 14:41:48.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.152" endtime="20201117 14:41:48.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.175" endtime="20201117 14:41:48.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.177" endtime="20201117 14:41:48.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.149" endtime="20201117 14:41:48.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.147" endtime="20201117 14:41:48.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.187" endtime="20201117 14:41:48.473"></status>
</kw>
<msg timestamp="20201117 14:41:48.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02510975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:48.185" endtime="20201117 14:41:48.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02510975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025201667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:48.477" endtime="20201117 14:41:48.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.486" endtime="20201117 14:41:48.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.182" endtime="20201117 14:41:48.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.181" endtime="20201117 14:41:48.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.493" level="INFO">${RESULT} = [{'time': 0.025201667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.191700000000039e-05, 'source_diff': 9.191700000000039e-05}, {'time': 0.025314694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.490" endtime="20201117 14:41:48.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.507" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:48.494" endtime="20201117 14:41:48.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.512" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.511" endtime="20201117 14:41:48.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.515" level="INFO">VALUE: [9.191700000000039e-05, 9.176299999999818e-05, 9.191600000000091e-05, 9.184700000000254e-05, 9.191600000000091e-05, 9.2333e-05, 9.159699999999882e-05, 9.225000000000205e-05, 9.159700000000229e-05, 9.158399999999872e-05, 9.209800000000226e-05, 9.142999999999998e-05, 9.163800000000152e-05, 9.184700000000254e-05, 9.159699999999882e-05, 9.145800000000259e-05, 9.2333e-05, 9.158400000000219e-05, 9.190300000000082e-05, 9.209699999999932e-05, 9.205600000000008e-05, 9.206900000000018e-05, 9.226400000000162e-05, 9.208299999999975e-05, 9.193000000000048e-05, 9.147200000000216e-05, 9.193100000000343e-05, 9.195799999999962e-05, 9.224999999999858e-05, 9.176400000000112e-05, 9.208299999999975e-05, 9.159699999999882e-05, 9.208299999999975e-05, 9.159699999999882e-05, 9.209699999999932e-05, 9.158299999999925e-05, 9.224999999999858e-05, 9.181899999999993e-05, 9.159699999999882e-05, 9.159800000000176e-05, 9.227700000000172e-05, 9.138900000000075e-05, 9.20139999999979e-05, 9.176400000000112e-05, 9.226400000000162e-05, 9.173700000000146e-05, 9.21940000000003e-05, 9.168099999999971e-05, 9.158399999999872e-05, 9.161200000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.513" endtime="20201117 14:41:48.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.508" endtime="20201117 14:41:48.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.518" endtime="20201117 14:41:48.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.521" endtime="20201117 14:41:48.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.520" endtime="20201117 14:41:48.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.516" endtime="20201117 14:41:48.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.146" endtime="20201117 14:41:48.542"></status>
</kw>
<msg timestamp="20201117 14:41:48.542" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.551" endtime="20201117 14:41:48.571"></status>
</kw>
<msg timestamp="20201117 14:41:48.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.549" endtime="20201117 14:41:48.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.572" endtime="20201117 14:41:48.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.575" endtime="20201117 14:41:48.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.547" endtime="20201117 14:41:48.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.545" endtime="20201117 14:41:48.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.585" endtime="20201117 14:41:48.871"></status>
</kw>
<msg timestamp="20201117 14:41:48.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.584" endtime="20201117 14:41:48.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.875" endtime="20201117 14:41:48.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.888" endtime="20201117 14:41:48.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.581" endtime="20201117 14:41:48.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.579" endtime="20201117 14:41:48.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:48.895" level="INFO">${RESULT} = [{'time': 0.022212819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.162500000000143e-05, 'source_diff': 9.162500000000143e-05}, {'time': 0.022318833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:48.892" endtime="20201117 14:41:48.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:48.909" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:48.896" endtime="20201117 14:41:48.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.914" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:41:48.913" endtime="20201117 14:41:48.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.916" level="INFO">VALUE: [9.162500000000143e-05, 9.159699999999882e-05, 9.142999999999998e-05, 9.220799999999987e-05, 9.216700000000064e-05, 9.168099999999971e-05, 9.216700000000064e-05, 9.236199999999861e-05, 9.158400000000219e-05, 9.211099999999889e-05, 9.175000000000155e-05, 9.194400000000005e-05, 9.184699999999907e-05, 9.142999999999998e-05, 9.168099999999971e-05, 9.218100000000021e-05, 9.168099999999971e-05, 9.151400000000087e-05, 9.226399999999815e-05, 9.218000000000073e-05, 9.170800000000284e-05, 9.218000000000073e-05, 9.216600000000116e-05, 9.186099999999864e-05, 9.154200000000001e-05, 9.211099999999889e-05, 9.191700000000039e-05, 9.20000000000018e-05, 9.193099999999996e-05, 9.216700000000064e-05, 9.19719999999992e-05, 9.174999999999808e-05, 9.159700000000229e-05, 9.226400000000162e-05, 9.195799999999962e-05, 9.18329999999995e-05, 9.170899999999885e-05, 9.193099999999996e-05, 9.184800000000201e-05, 9.176299999999818e-05, 9.142999999999998e-05, 9.184699999999907e-05, 9.194400000000005e-05, 9.216700000000064e-05, 9.151400000000087e-05, 9.176400000000112e-05, 9.158399999999872e-05, 9.143099999999946e-05, 9.151400000000087e-05, 9.193000000000048e-05]</msg>
<status status="PASS" starttime="20201117 14:41:48.915" endtime="20201117 14:41:48.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.910" endtime="20201117 14:41:48.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.920" endtime="20201117 14:41:48.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:48.923" endtime="20201117 14:41:48.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.922" endtime="20201117 14:41:48.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.918" endtime="20201117 14:41:48.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.543" endtime="20201117 14:41:48.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.144" endtime="20201117 14:41:48.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.143" endtime="20201117 14:41:48.945"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.947" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.956" endtime="20201117 14:41:48.976"></status>
</kw>
<msg timestamp="20201117 14:41:48.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.954" endtime="20201117 14:41:48.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:48.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:48.977" endtime="20201117 14:41:48.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.980" endtime="20201117 14:41:48.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.951" endtime="20201117 14:41:48.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.949" endtime="20201117 14:41:48.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:48.990" endtime="20201117 14:41:49.276"></status>
</kw>
<msg timestamp="20201117 14:41:49.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026042153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026134653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:48.989" endtime="20201117 14:41:49.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026042153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026134653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.280" endtime="20201117 14:41:49.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.289" endtime="20201117 14:41:49.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.985" endtime="20201117 14:41:49.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.983" endtime="20201117 14:41:49.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.296" level="INFO">${RESULT} = [{'time': 0.026134653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.25000000000023e-05, 'source_diff': 9.25000000000023e-05}, {'time': 0.026244639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:49.292" endtime="20201117 14:41:49.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:49.297" endtime="20201117 14:41:49.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.316" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.314" endtime="20201117 14:41:49.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.318" level="INFO">VALUE: [9.25000000000023e-05, 9.326399999999915e-05, 9.277799999999822e-05, 9.270899999999985e-05, 9.326399999999915e-05, 9.241599999999794e-05, 9.284700000000007e-05, 9.327799999999872e-05, 9.308300000000075e-05, 9.298699999999924e-05, 9.281899999999746e-05, 9.258300000000025e-05, 9.326399999999915e-05, 9.258399999999972e-05, 9.259699999999982e-05, 9.28200000000004e-05, 9.274999999999908e-05, 9.294400000000105e-05, 9.249999999999883e-05, 9.309700000000032e-05, 9.240299999999785e-05, 9.255500000000111e-05, 9.308400000000022e-05, 9.305600000000108e-05, 9.307000000000065e-05, 9.322200000000044e-05, 9.259699999999982e-05, 9.259699999999982e-05, 9.311099999999989e-05, 9.236099999999914e-05, 9.24719999999997e-05, 9.259800000000276e-05, 9.274999999999908e-05, 9.259800000000276e-05, 9.324999999999958e-05, 9.318000000000173e-05, 9.3026999999999e-05, 9.31529999999986e-05, 9.291699999999792e-05, 9.299999999999933e-05, 9.261099999999939e-05, 9.243100000000046e-05, 9.283399999999997e-05, 9.259799999999929e-05, 9.291599999999844e-05, 9.31520000000026e-05, 9.280600000000083e-05, 9.309700000000032e-05, 9.294499999999706e-05, 9.334700000000057e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.317" endtime="20201117 14:41:49.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.312" endtime="20201117 14:41:49.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.322" endtime="20201117 14:41:49.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.325" endtime="20201117 14:41:49.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.323" endtime="20201117 14:41:49.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.320" endtime="20201117 14:41:49.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.948" endtime="20201117 14:41:49.346"></status>
</kw>
<msg timestamp="20201117 14:41:49.346" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.355" endtime="20201117 14:41:49.374"></status>
</kw>
<msg timestamp="20201117 14:41:49.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.353" endtime="20201117 14:41:49.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.376" endtime="20201117 14:41:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.379" endtime="20201117 14:41:49.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.350" endtime="20201117 14:41:49.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.348" endtime="20201117 14:41:49.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.433" endtime="20201117 14:41:49.720"></status>
</kw>
<msg timestamp="20201117 14:41:49.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.431" endtime="20201117 14:41:49.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022312319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.725" endtime="20201117 14:41:49.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.733" endtime="20201117 14:41:49.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.429" endtime="20201117 14:41:49.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.427" endtime="20201117 14:41:49.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:49.740" level="INFO">${RESULT} = [{'time': 0.022405306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.298699999999924e-05, 'source_diff': 9.298699999999924e-05}, {'time': 0.022519306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:49.737" endtime="20201117 14:41:49.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:49.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:49.741" endtime="20201117 14:41:49.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.759" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:41:49.758" endtime="20201117 14:41:49.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.762" level="INFO">VALUE: [9.298699999999924e-05, 9.276399999999865e-05, 9.294400000000105e-05, 9.302800000000194e-05, 9.298599999999976e-05, 9.268000000000123e-05, 9.287499999999921e-05, 9.309700000000032e-05, 9.323600000000001e-05, 9.258399999999972e-05, 9.241700000000089e-05, 9.318000000000173e-05, 9.251299999999893e-05, 9.243000000000098e-05, 9.30000000000028e-05, 9.259699999999982e-05, 9.308300000000075e-05, 9.277799999999822e-05, 9.277799999999822e-05, 9.322299999999992e-05, 9.309799999999979e-05, 9.309700000000032e-05, 9.291599999999844e-05, 9.26659999999982e-05, 9.284700000000007e-05, 9.241700000000089e-05, 9.269499999999681e-05, 9.336100000000014e-05, 9.308400000000022e-05, 9.272299999999942e-05, 9.274999999999908e-05, 9.243000000000098e-05, 9.305599999999761e-05, 9.259699999999982e-05, 9.275000000000255e-05, 9.299999999999933e-05, 9.334700000000057e-05, 9.305600000000108e-05, 9.243100000000046e-05, 9.316699999999817e-05, 9.318100000000121e-05, 9.261099999999939e-05, 9.294400000000105e-05, 9.251400000000187e-05, 9.327799999999872e-05, 9.309700000000032e-05, 9.323600000000001e-05, 9.276399999999865e-05, 9.309799999999979e-05, 9.243100000000046e-05]</msg>
<status status="PASS" starttime="20201117 14:41:49.760" endtime="20201117 14:41:49.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.755" endtime="20201117 14:41:49.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.765" endtime="20201117 14:41:49.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:49.769" endtime="20201117 14:41:49.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.767" endtime="20201117 14:41:49.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.763" endtime="20201117 14:41:49.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.347" endtime="20201117 14:41:49.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.946" endtime="20201117 14:41:49.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:48.945" endtime="20201117 14:41:49.790"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.792" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.801" endtime="20201117 14:41:49.821"></status>
</kw>
<msg timestamp="20201117 14:41:49.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.799" endtime="20201117 14:41:49.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:49.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:49.823" endtime="20201117 14:41:49.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.825" endtime="20201117 14:41:49.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.797" endtime="20201117 14:41:49.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.794" endtime="20201117 14:41:49.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:49.835" endtime="20201117 14:41:50.121"></status>
</kw>
<msg timestamp="20201117 14:41:50.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025707903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:49.833" endtime="20201117 14:41:50.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025614111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025707903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.125" endtime="20201117 14:41:50.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.133" endtime="20201117 14:41:50.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.831" endtime="20201117 14:41:50.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.829" endtime="20201117 14:41:50.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.140" level="INFO">${RESULT} = [{'time': 0.025707903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.379200000000226e-05, 'source_diff': 9.379200000000226e-05}, {'time': 0.025817917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.137" endtime="20201117 14:41:50.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:50.141" endtime="20201117 14:41:50.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.159" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.158" endtime="20201117 14:41:50.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.162" level="INFO">VALUE: [9.379200000000226e-05, 9.383400000000097e-05, 9.355600000000158e-05, 9.341599999999894e-05, 9.394400000000205e-05, 9.375000000000008e-05, 9.409700000000132e-05, 9.361100000000039e-05, 9.377799999999922e-05, 9.370900000000085e-05, 9.408399999999775e-05, 9.429099999999982e-05, 9.375000000000008e-05, 9.359700000000082e-05, 9.408299999999828e-05, 9.358300000000125e-05, 9.358300000000125e-05, 9.358299999999778e-05, 9.391699999999892e-05, 9.433400000000147e-05, 9.36940000000018e-05, 9.375000000000008e-05, 9.340199999999937e-05, 9.40139999999999e-05, 9.373599999999704e-05, 9.411100000000089e-05, 9.422200000000144e-05, 9.343100000000146e-05, 9.366700000000214e-05, 9.384800000000054e-05, 9.357000000000115e-05, 9.355600000000158e-05, 9.409699999999785e-05, 9.341599999999894e-05, 9.436100000000114e-05, 9.358300000000125e-05, 9.393099999999849e-05, 9.40139999999999e-05, 9.359700000000082e-05, 9.402799999999947e-05, 9.359799999999682e-05, 9.376300000000018e-05, 9.361100000000039e-05, 9.429099999999982e-05, 9.400000000000033e-05, 9.424999999999711e-05, 9.393099999999849e-05, 9.40139999999999e-05, 9.419499999999831e-05, 9.393099999999849e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.160" endtime="20201117 14:41:50.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.155" endtime="20201117 14:41:50.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.165" endtime="20201117 14:41:50.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.169" endtime="20201117 14:41:50.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.167" endtime="20201117 14:41:50.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.163" endtime="20201117 14:41:50.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.793" endtime="20201117 14:41:50.190"></status>
</kw>
<msg timestamp="20201117 14:41:50.190" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.199" endtime="20201117 14:41:50.219"></status>
</kw>
<msg timestamp="20201117 14:41:50.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.197" endtime="20201117 14:41:50.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.220" endtime="20201117 14:41:50.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.223" endtime="20201117 14:41:50.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.195" endtime="20201117 14:41:50.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.192" endtime="20201117 14:41:50.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.232" endtime="20201117 14:41:50.518"></status>
</kw>
<msg timestamp="20201117 14:41:50.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:50.230" endtime="20201117 14:41:50.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:50.522" endtime="20201117 14:41:50.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.531" endtime="20201117 14:41:50.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.228" endtime="20201117 14:41:50.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.226" endtime="20201117 14:41:50.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.539" level="INFO">${RESULT} = [{'time': 0.022902, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.411099999999742e-05, 'source_diff': 9.411099999999742e-05}, {'time': 0.023010083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:41:50.535" endtime="20201117 14:41:50.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.552" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:50.540" endtime="20201117 14:41:50.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.557" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.556" endtime="20201117 14:41:50.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.559" level="INFO">VALUE: [9.411099999999742e-05, 9.38330000000015e-05, 9.426400000000015e-05, 9.394499999999806e-05, 9.416699999999917e-05, 9.40139999999999e-05, 9.356899999999821e-05, 9.408300000000175e-05, 9.358300000000125e-05, 9.43200000000019e-05, 9.426400000000015e-05, 9.425000000000058e-05, 9.375000000000008e-05, 9.343100000000146e-05, 9.402799999999947e-05, 9.359800000000029e-05, 9.358299999999778e-05, 9.412500000000046e-05, 9.345799999999765e-05, 9.402799999999947e-05, 9.412500000000046e-05, 9.393099999999849e-05, 9.398600000000076e-05, 9.388899999999978e-05, 9.416700000000264e-05, 9.370800000000137e-05, 9.35269999999995e-05, 9.359700000000082e-05, 9.392999999999901e-05, 9.417999999999926e-05, 9.43469999999981e-05, 9.352799999999897e-05, 9.343100000000146e-05, 9.404099999999957e-05, 9.409700000000132e-05, 9.392999999999901e-05, 9.36659999999992e-05, 9.36659999999992e-05, 9.37079999999979e-05, 9.43469999999981e-05, 9.343100000000146e-05, 9.4333000000002e-05, 9.408400000000122e-05, 9.369499999999781e-05, 9.426400000000015e-05, 9.425000000000058e-05, 9.338899999999928e-05, 9.418000000000273e-05, 9.43469999999981e-05, 9.408299999999828e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.558" endtime="20201117 14:41:50.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.553" endtime="20201117 14:41:50.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.563" endtime="20201117 14:41:50.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.567" endtime="20201117 14:41:50.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.565" endtime="20201117 14:41:50.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.561" endtime="20201117 14:41:50.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.191" endtime="20201117 14:41:50.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.791" endtime="20201117 14:41:50.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:49.790" endtime="20201117 14:41:50.588"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.590" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.599" endtime="20201117 14:41:50.619"></status>
</kw>
<msg timestamp="20201117 14:41:50.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.597" endtime="20201117 14:41:50.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.620" endtime="20201117 14:41:50.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.623" endtime="20201117 14:41:50.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.595" endtime="20201117 14:41:50.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.592" endtime="20201117 14:41:50.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.632" endtime="20201117 14:41:50.920"></status>
</kw>
<msg timestamp="20201117 14:41:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025084389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.631" endtime="20201117 14:41:50.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024989417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025084389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:50.924" endtime="20201117 14:41:50.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.933" endtime="20201117 14:41:50.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.628" endtime="20201117 14:41:50.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.626" endtime="20201117 14:41:50.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:50.939" level="INFO">${RESULT} = [{'time': 0.025084389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.497199999999872e-05, 'source_diff': 9.497199999999872e-05}, {'time': 0.025194403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:50.936" endtime="20201117 14:41:50.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:50.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:50.941" endtime="20201117 14:41:50.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.959" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:50.958" endtime="20201117 14:41:50.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:50.961" level="INFO">VALUE: [9.497199999999872e-05, 9.458400000000172e-05, 9.461199999999739e-05, 9.46530000000001e-05, 9.454100000000007e-05, 9.524999999999811e-05, 9.527699999999778e-05, 9.45140000000004e-05, 9.475000000000108e-05, 9.490300000000035e-05, 9.455599999999911e-05, 9.511099999999842e-05, 9.434800000000104e-05, 9.454100000000007e-05, 9.509699999999885e-05, 9.490200000000087e-05, 9.44859999999978e-05, 9.455499999999964e-05, 9.506899999999971e-05, 9.441699999999942e-05, 9.519499999999931e-05, 9.523600000000201e-05, 9.443100000000246e-05, 9.501299999999796e-05, 9.491600000000044e-05, 9.534700000000257e-05, 9.477800000000022e-05, 9.459699999999835e-05, 9.476400000000065e-05, 9.509699999999885e-05, 9.443100000000246e-05, 9.468099999999924e-05, 9.52079999999994e-05, 9.518000000000026e-05, 9.467999999999976e-05, 9.53469999999991e-05, 9.502800000000047e-05, 9.459700000000182e-05, 9.473600000000151e-05, 9.525000000000158e-05, 9.524999999999811e-05, 9.509800000000179e-05, 9.487500000000121e-05, 9.45270000000005e-05, 9.459700000000182e-05, 9.493000000000001e-05, 9.449999999999736e-05, 9.444500000000203e-05, 9.468100000000271e-05, 9.466699999999967e-05]</msg>
<status status="PASS" starttime="20201117 14:41:50.960" endtime="20201117 14:41:50.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.955" endtime="20201117 14:41:50.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.965" endtime="20201117 14:41:50.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:50.969" endtime="20201117 14:41:50.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.967" endtime="20201117 14:41:50.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.963" endtime="20201117 14:41:50.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.591" endtime="20201117 14:41:50.989"></status>
</kw>
<msg timestamp="20201117 14:41:50.990" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:50.998" endtime="20201117 14:41:51.018"></status>
</kw>
<msg timestamp="20201117 14:41:51.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:50.997" endtime="20201117 14:41:51.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.020" endtime="20201117 14:41:51.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.023" endtime="20201117 14:41:51.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.994" endtime="20201117 14:41:51.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.992" endtime="20201117 14:41:51.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.032" endtime="20201117 14:41:51.320"></status>
</kw>
<msg timestamp="20201117 14:41:51.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.030" endtime="20201117 14:41:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.324" endtime="20201117 14:41:51.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.332" endtime="20201117 14:41:51.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.028" endtime="20201117 14:41:51.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.026" endtime="20201117 14:41:51.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.339" level="INFO">${RESULT} = [{'time': 0.022689403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.459700000000182e-05, 'source_diff': 9.459700000000182e-05}, {'time': 0.022802403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:51.336" endtime="20201117 14:41:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:51.340" endtime="20201117 14:41:51.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.358" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.357" endtime="20201117 14:41:51.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.360" level="INFO">VALUE: [9.459700000000182e-05, 9.524999999999811e-05, 9.488899999999731e-05, 9.486099999999817e-05, 9.476400000000065e-05, 9.442999999999951e-05, 9.50140000000009e-05, 9.491699999999992e-05, 9.481899999999946e-05, 9.526400000000115e-05, 9.491699999999992e-05, 9.466699999999967e-05, 9.46530000000001e-05, 9.518000000000026e-05, 9.46660000000002e-05, 9.51799999999968e-05, 9.51799999999968e-05, 9.50140000000009e-05, 9.459700000000182e-05, 9.459699999999835e-05, 9.440299999999985e-05, 9.444499999999856e-05, 9.494399999999958e-05, 9.518000000000026e-05, 9.48469999999986e-05, 9.523600000000201e-05, 9.502800000000047e-05, 9.438899999999681e-05, 9.488900000000078e-05, 9.475000000000108e-05, 9.458400000000172e-05, 9.493099999999949e-05, 9.501300000000143e-05, 9.444399999999908e-05, 9.469399999999933e-05, 9.48469999999986e-05, 9.493000000000001e-05, 9.48469999999986e-05, 9.508299999999928e-05, 9.467999999999976e-05, 9.456999999999868e-05, 9.440299999999985e-05, 9.450000000000083e-05, 9.472199999999847e-05, 9.526400000000115e-05, 9.480599999999936e-05, 9.477800000000022e-05, 9.458300000000225e-05, 9.481900000000293e-05, 9.444500000000203e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.359" endtime="20201117 14:41:51.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.354" endtime="20201117 14:41:51.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.364" endtime="20201117 14:41:51.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.368" endtime="20201117 14:41:51.387"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.366" endtime="20201117 14:41:51.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.362" endtime="20201117 14:41:51.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.990" endtime="20201117 14:41:51.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.589" endtime="20201117 14:41:51.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:50.588" endtime="20201117 14:41:51.389"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.391" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.400" endtime="20201117 14:41:51.420"></status>
</kw>
<msg timestamp="20201117 14:41:51.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.398" endtime="20201117 14:41:51.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.421" endtime="20201117 14:41:51.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.424" endtime="20201117 14:41:51.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.395" endtime="20201117 14:41:51.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.393" endtime="20201117 14:41:51.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.433" endtime="20201117 14:41:51.721"></status>
</kw>
<msg timestamp="20201117 14:41:51.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02505175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:51.432" endtime="20201117 14:41:51.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02505175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:51.726" endtime="20201117 14:41:51.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.734" endtime="20201117 14:41:51.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.429" endtime="20201117 14:41:51.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.427" endtime="20201117 14:41:51.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:51.742" level="INFO">${RESULT} = [{'time': 0.02505175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.563900000000153e-05, 'source_diff': 9.563900000000153e-05}, {'time': 0.025165778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:51.738" endtime="20201117 14:41:51.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:51.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:51.743" endtime="20201117 14:41:51.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.761" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:51.760" endtime="20201117 14:41:51.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.764" level="INFO">VALUE: [9.563900000000153e-05, 9.561099999999892e-05, 9.613800000000255e-05, 9.541700000000042e-05, 9.565299999999763e-05, 9.601299999999896e-05, 9.558299999999978e-05, 9.609699999999985e-05, 9.594400000000058e-05, 9.56530000000011e-05, 9.58469999999996e-05, 9.561099999999892e-05, 9.576399999999818e-05, 9.626399999999868e-05, 9.566700000000067e-05, 9.576399999999818e-05, 9.576399999999818e-05, 9.611099999999942e-05, 9.609699999999985e-05, 9.626399999999868e-05, 9.611099999999942e-05, 9.574999999999861e-05, 9.541700000000042e-05, 9.6334e-05, 9.627700000000225e-05, 9.619400000000083e-05, 9.569400000000033e-05, 9.549999999999836e-05, 9.627799999999825e-05, 9.574999999999861e-05, 9.572200000000294e-05, 9.608399999999975e-05, 9.609799999999932e-05, 9.594400000000058e-05, 9.551299999999846e-05, 9.593000000000101e-05, 9.56799999999973e-05, 9.638900000000228e-05, 9.543099999999999e-05, 9.586099999999917e-05, 9.558400000000272e-05, 9.559799999999882e-05, 9.559799999999882e-05, 9.561100000000239e-05, 9.616700000000117e-05, 9.559699999999935e-05, 9.574999999999861e-05, 9.609699999999985e-05, 9.557000000000315e-05, 9.587499999999874e-05]</msg>
<status status="PASS" starttime="20201117 14:41:51.762" endtime="20201117 14:41:51.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.757" endtime="20201117 14:41:51.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.767" endtime="20201117 14:41:51.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:51.771" endtime="20201117 14:41:51.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.769" endtime="20201117 14:41:51.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.766" endtime="20201117 14:41:51.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.392" endtime="20201117 14:41:51.792"></status>
</kw>
<msg timestamp="20201117 14:41:51.792" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.801" endtime="20201117 14:41:51.820"></status>
</kw>
<msg timestamp="20201117 14:41:51.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.799" endtime="20201117 14:41:51.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:51.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:51.822" endtime="20201117 14:41:51.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.825" endtime="20201117 14:41:51.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.796" endtime="20201117 14:41:51.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.794" endtime="20201117 14:41:51.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:51.834" endtime="20201117 14:41:52.121"></status>
</kw>
<msg timestamp="20201117 14:41:52.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:51.832" endtime="20201117 14:41:52.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.125" endtime="20201117 14:41:52.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.134" endtime="20201117 14:41:52.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.830" endtime="20201117 14:41:52.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.828" endtime="20201117 14:41:52.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.141" level="INFO">${RESULT} = [{'time': 0.022458958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.562500000000196e-05, 'source_diff': 9.562500000000196e-05}, {'time': 0.022578972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:52.137" endtime="20201117 14:41:52.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:52.142" endtime="20201117 14:41:52.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.160" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.159" endtime="20201117 14:41:52.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.162" level="INFO">VALUE: [9.562500000000196e-05, 9.626399999999868e-05, 9.561099999999892e-05, 9.544500000000303e-05, 9.568100000000024e-05, 9.568100000000024e-05, 9.602800000000147e-05, 9.59859999999993e-05, 9.584700000000307e-05, 9.593000000000101e-05, 9.56660000000012e-05, 9.552800000000097e-05, 9.591700000000092e-05, 9.566700000000067e-05, 9.633300000000053e-05, 9.591699999999745e-05, 9.634799999999957e-05, 9.558400000000272e-05, 9.612499999999899e-05, 9.609699999999985e-05, 9.562500000000196e-05, 9.579200000000079e-05, 9.626399999999868e-05, 9.577799999999775e-05, 9.608399999999975e-05, 9.609799999999932e-05, 9.591700000000092e-05, 9.568000000000076e-05, 9.601399999999843e-05, 9.556900000000021e-05, 9.591599999999798e-05, 9.59859999999993e-05, 9.606900000000071e-05, 9.627800000000172e-05, 9.623599999999954e-05, 9.626399999999868e-05, 9.624999999999911e-05, 9.608300000000028e-05, 9.577800000000122e-05, 9.62920000000013e-05, 9.609700000000332e-05, 9.593100000000049e-05, 9.616700000000117e-05, 9.568100000000024e-05, 9.619500000000031e-05, 9.618100000000074e-05, 9.633300000000053e-05, 9.630499999999792e-05, 9.602800000000147e-05, 9.606900000000071e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.161" endtime="20201117 14:41:52.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.156" endtime="20201117 14:41:52.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.166" endtime="20201117 14:41:52.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.169" endtime="20201117 14:41:52.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.167" endtime="20201117 14:41:52.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.164" endtime="20201117 14:41:52.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.793" endtime="20201117 14:41:52.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.390" endtime="20201117 14:41:52.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:51.389" endtime="20201117 14:41:52.190"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.193" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.201" endtime="20201117 14:41:52.222"></status>
</kw>
<msg timestamp="20201117 14:41:52.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.200" endtime="20201117 14:41:52.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.224" endtime="20201117 14:41:52.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.226" endtime="20201117 14:41:52.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.197" endtime="20201117 14:41:52.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.195" endtime="20201117 14:41:52.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.236" endtime="20201117 14:41:52.523"></status>
</kw>
<msg timestamp="20201117 14:41:52.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.234" endtime="20201117 14:41:52.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024846111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024943222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.527" endtime="20201117 14:41:52.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.535" endtime="20201117 14:41:52.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.231" endtime="20201117 14:41:52.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.230" endtime="20201117 14:41:52.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.543" level="INFO">${RESULT} = [{'time': 0.024943222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.711100000000042e-05, 'source_diff': 9.711100000000042e-05}, {'time': 0.02506125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:41:52.539" endtime="20201117 14:41:52.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.558" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:52.544" endtime="20201117 14:41:52.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.563" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.562" endtime="20201117 14:41:52.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.565" level="INFO">VALUE: [9.711100000000042e-05, 9.726399999999968e-05, 9.691699999999845e-05, 9.719499999999784e-05, 9.675000000000308e-05, 9.715299999999913e-05, 9.64859999999998e-05, 9.687499999999974e-05, 9.645800000000065e-05, 9.672200000000047e-05, 9.668000000000176e-05, 9.65140000000024e-05, 9.693100000000149e-05, 9.718099999999827e-05, 9.645900000000013e-05, 9.677699999999928e-05, 9.659700000000035e-05, 9.709700000000085e-05, 9.636099999999967e-05, 9.668100000000124e-05, 9.662499999999949e-05, 9.68470000000006e-05, 9.674999999999961e-05, 9.687499999999974e-05, 9.699999999999986e-05, 9.636099999999967e-05, 9.71799999999988e-05, 9.699999999999986e-05, 9.722200000000097e-05, 9.643100000000099e-05, 9.649999999999936e-05, 9.725000000000011e-05, 9.641699999999795e-05, 9.680600000000136e-05, 9.691699999999845e-05, 9.68470000000006e-05, 9.69860000000003e-05, 9.7027999999999e-05, 9.693000000000201e-05, 9.66669999999982e-05, 9.683300000000103e-05, 9.658400000000025e-05, 9.651399999999893e-05, 9.676399999999918e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.709700000000085e-05, 9.640300000000185e-05, 9.654200000000154e-05, 9.707000000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.564" endtime="20201117 14:41:52.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.559" endtime="20201117 14:41:52.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.568" endtime="20201117 14:41:52.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.572" endtime="20201117 14:41:52.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.570" endtime="20201117 14:41:52.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.567" endtime="20201117 14:41:52.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.193" endtime="20201117 14:41:52.593"></status>
</kw>
<msg timestamp="20201117 14:41:52.593" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.602" endtime="20201117 14:41:52.622"></status>
</kw>
<msg timestamp="20201117 14:41:52.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.600" endtime="20201117 14:41:52.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:52.623" endtime="20201117 14:41:52.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.626" endtime="20201117 14:41:52.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.597" endtime="20201117 14:41:52.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.595" endtime="20201117 14:41:52.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.635" endtime="20201117 14:41:52.922"></status>
</kw>
<msg timestamp="20201117 14:41:52.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.634" endtime="20201117 14:41:52.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022485083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:52.926" endtime="20201117 14:41:52.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.935" endtime="20201117 14:41:52.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.631" endtime="20201117 14:41:52.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.629" endtime="20201117 14:41:52.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:52.942" level="INFO">${RESULT} = [{'time': 0.022581736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.66530000000021e-05, 'source_diff': 9.66530000000021e-05}, {'time': 0.022699722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:52.939" endtime="20201117 14:41:52.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:52.956" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:52.943" endtime="20201117 14:41:52.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.961" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:41:52.960" endtime="20201117 14:41:52.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.963" level="INFO">VALUE: [9.66530000000021e-05, 9.642999999999805e-05, 9.651399999999893e-05, 9.694499999999759e-05, 9.651399999999893e-05, 9.674999999999961e-05, 9.643099999999752e-05, 9.684800000000007e-05, 9.659700000000035e-05, 9.676399999999918e-05, 9.656900000000121e-05, 9.659700000000035e-05, 9.697299999999673e-05, 9.699999999999986e-05, 9.658300000000078e-05, 9.691700000000192e-05, 9.684800000000007e-05, 9.726399999999968e-05, 9.661099999999992e-05, 9.659700000000035e-05, 9.726399999999968e-05, 9.676399999999918e-05, 9.643100000000099e-05, 9.71669999999987e-05, 9.702800000000247e-05, 9.709800000000032e-05, 9.708399999999728e-05, 9.676399999999918e-05, 9.643000000000151e-05, 9.73470000000011e-05, 9.643100000000099e-05, 9.683300000000103e-05, 9.641700000000142e-05, 9.666700000000167e-05, 9.644500000000056e-05, 9.673600000000004e-05, 9.691699999999845e-05, 9.701299999999996e-05, 9.643000000000151e-05, 9.702800000000247e-05, 9.661099999999992e-05, 9.662500000000296e-05, 9.725000000000011e-05, 9.654200000000154e-05, 9.725000000000011e-05, 9.676399999999918e-05, 9.706899999999824e-05, 9.656900000000121e-05, 9.708300000000128e-05, 9.694399999999812e-05]</msg>
<status status="PASS" starttime="20201117 14:41:52.962" endtime="20201117 14:41:52.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.957" endtime="20201117 14:41:52.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:52.966" endtime="20201117 14:41:52.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:52.970" endtime="20201117 14:41:52.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.968" endtime="20201117 14:41:52.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.965" endtime="20201117 14:41:52.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.594" endtime="20201117 14:41:52.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.192" endtime="20201117 14:41:52.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.191" endtime="20201117 14:41:52.991"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:52.994" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.002" endtime="20201117 14:41:53.023"></status>
</kw>
<msg timestamp="20201117 14:41:53.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.001" endtime="20201117 14:41:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.024" endtime="20201117 14:41:53.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.027" endtime="20201117 14:41:53.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.998" endtime="20201117 14:41:53.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.996" endtime="20201117 14:41:53.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.037" endtime="20201117 14:41:53.324"></status>
</kw>
<msg timestamp="20201117 14:41:53.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.035" endtime="20201117 14:41:53.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.329" endtime="20201117 14:41:53.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.337" endtime="20201117 14:41:53.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.032" endtime="20201117 14:41:53.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.030" endtime="20201117 14:41:53.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.344" level="INFO">${RESULT} = [{'time': 0.025070014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.745800000000165e-05, 'source_diff': 9.745800000000165e-05}, {'time': 0.025191069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.341" endtime="20201117 14:41:53.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.358" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:53.345" endtime="20201117 14:41:53.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.362" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.361" endtime="20201117 14:41:53.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.365" level="INFO">VALUE: [9.745800000000165e-05, 9.777700000000028e-05, 9.823600000000154e-05, 9.744399999999862e-05, 9.819399999999937e-05, 9.756899999999874e-05, 9.756899999999874e-05, 9.792999999999955e-05, 9.781999999999846e-05, 9.759699999999788e-05, 9.761100000000092e-05, 9.758400000000125e-05, 9.759799999999735e-05, 9.826299999999774e-05, 9.741599999999948e-05, 9.801399999999696e-05, 9.826400000000068e-05, 9.761099999999745e-05, 9.736100000000067e-05, 9.786100000000117e-05, 9.788900000000031e-05, 9.768099999999877e-05, 9.802700000000053e-05, 9.794400000000258e-05, 9.801400000000043e-05, 9.744399999999862e-05, 9.834699999999863e-05, 9.759699999999788e-05, 9.806999999999871e-05, 9.741699999999895e-05, 9.750000000000036e-05, 9.756999999999821e-05, 9.826400000000068e-05, 9.794399999999912e-05, 9.800000000000086e-05, 9.773600000000104e-05, 9.775000000000061e-05, 9.758300000000178e-05, 9.743100000000199e-05, 9.83479999999981e-05, 9.793099999999902e-05, 9.802700000000053e-05, 9.791599999999998e-05, 9.8028e-05, 9.809699999999838e-05, 9.777799999999975e-05, 9.744499999999809e-05, 9.804199999999957e-05, 9.826400000000068e-05, 9.794399999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.364" endtime="20201117 14:41:53.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.359" endtime="20201117 14:41:53.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.368" endtime="20201117 14:41:53.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.372" endtime="20201117 14:41:53.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.370" endtime="20201117 14:41:53.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.367" endtime="20201117 14:41:53.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.994" endtime="20201117 14:41:53.393"></status>
</kw>
<msg timestamp="20201117 14:41:53.393" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.402" endtime="20201117 14:41:53.421"></status>
</kw>
<msg timestamp="20201117 14:41:53.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.400" endtime="20201117 14:41:53.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.422" endtime="20201117 14:41:53.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.425" endtime="20201117 14:41:53.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.397" endtime="20201117 14:41:53.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.395" endtime="20201117 14:41:53.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.435" endtime="20201117 14:41:53.722"></status>
</kw>
<msg timestamp="20201117 14:41:53.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.433" endtime="20201117 14:41:53.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:53.726" endtime="20201117 14:41:53.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.735" endtime="20201117 14:41:53.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.431" endtime="20201117 14:41:53.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.429" endtime="20201117 14:41:53.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:53.742" level="INFO">${RESULT} = [{'time': 0.022326625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.547199999999922e-05, 'source_diff': 9.547199999999922e-05}, {'time': 0.022448639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:53.738" endtime="20201117 14:41:53.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:53.755" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:53.743" endtime="20201117 14:41:53.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.760" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:41:53.759" endtime="20201117 14:41:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.763" level="INFO">VALUE: [9.547199999999922e-05, 9.776400000000018e-05, 9.777799999999975e-05, 9.759800000000082e-05, 9.776300000000071e-05, 9.775000000000061e-05, 9.826400000000068e-05, 9.775000000000061e-05, 9.809700000000185e-05, 9.745900000000113e-05, 9.818099999999927e-05, 9.83479999999981e-05, 9.790299999999988e-05, 9.818100000000274e-05, 9.752700000000003e-05, 9.794399999999912e-05, 9.816600000000023e-05, 9.791700000000292e-05, 9.763900000000006e-05, 9.776400000000018e-05, 9.761100000000092e-05, 9.741699999999895e-05, 9.802700000000053e-05, 9.773700000000052e-05, 9.763900000000006e-05, 9.823599999999807e-05, 9.741700000000242e-05, 9.783299999999856e-05, 9.805599999999914e-05, 9.775000000000061e-05, 9.797200000000172e-05, 9.751399999999993e-05, 9.759800000000082e-05, 9.765299999999963e-05, 9.811100000000142e-05, 9.761099999999745e-05, 9.777799999999975e-05, 9.774999999999714e-05, 9.776400000000018e-05, 9.743099999999852e-05, 9.801400000000043e-05, 9.742999999999905e-05, 9.78470000000016e-05, 9.792999999999955e-05, 9.816600000000023e-05, 9.783299999999856e-05, 9.812500000000099e-05, 9.761100000000092e-05, 9.790299999999988e-05, 9.831999999999896e-05]</msg>
<status status="PASS" starttime="20201117 14:41:53.761" endtime="20201117 14:41:53.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.756" endtime="20201117 14:41:53.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.766" endtime="20201117 14:41:53.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:53.770" endtime="20201117 14:41:53.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.768" endtime="20201117 14:41:53.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.764" endtime="20201117 14:41:53.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.394" endtime="20201117 14:41:53.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.992" endtime="20201117 14:41:53.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:52.992" endtime="20201117 14:41:53.792"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.794" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.803" endtime="20201117 14:41:53.823"></status>
</kw>
<msg timestamp="20201117 14:41:53.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.802" endtime="20201117 14:41:53.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:53.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:53.825" endtime="20201117 14:41:53.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.827" endtime="20201117 14:41:53.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.798" endtime="20201117 14:41:53.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.796" endtime="20201117 14:41:53.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:53.837" endtime="20201117 14:41:54.124"></status>
</kw>
<msg timestamp="20201117 14:41:54.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02542675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025525736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:53.835" endtime="20201117 14:41:54.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02542675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025525736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:54.128" endtime="20201117 14:41:54.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.137" endtime="20201117 14:41:54.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.833" endtime="20201117 14:41:54.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.831" endtime="20201117 14:41:54.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.144" level="INFO">${RESULT} = [{'time': 0.025525736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.898599999999882e-05, 'source_diff': 9.898599999999882e-05}, {'time': 0.025642722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.140" endtime="20201117 14:41:54.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:54.145" endtime="20201117 14:41:54.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.163" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.162" endtime="20201117 14:41:54.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.166" level="INFO">VALUE: [9.898599999999882e-05, 9.924999999999864e-05, 9.906899999999677e-05, 9.843099999999952e-05, 9.884699999999913e-05, 9.874999999999814e-05, 9.906999999999971e-05, 9.848599999999832e-05, 9.916599999999776e-05, 9.866599999999726e-05, 9.923599999999907e-05, 9.865299999999716e-05, 9.91670000000007e-05, 9.883399999999903e-05, 9.859800000000182e-05, 9.908399999999928e-05, 9.873699999999805e-05, 9.858299999999931e-05, 9.843000000000005e-05, 9.88470000000026e-05, 9.843000000000005e-05, 9.900000000000186e-05, 9.85280000000005e-05, 9.854200000000007e-05, 9.89020000000014e-05, 9.918100000000027e-05, 9.851300000000146e-05, 9.844399999999962e-05, 9.851400000000093e-05, 9.859700000000235e-05, 9.844499999999909e-05, 9.88609999999987e-05, 9.891700000000045e-05, 9.868099999999977e-05, 9.901399999999796e-05, 9.902700000000153e-05, 9.840300000000038e-05, 9.884699999999913e-05, 9.894400000000012e-05, 9.901400000000143e-05, 9.926400000000168e-05, 9.843099999999952e-05, 9.9028000000001e-05, 9.895799999999969e-05, 9.886100000000217e-05, 9.876400000000118e-05, 9.876399999999771e-05, 9.890300000000088e-05, 9.895800000000315e-05, 9.895899999999916e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.165" endtime="20201117 14:41:54.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.160" endtime="20201117 14:41:54.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.169" endtime="20201117 14:41:54.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.173" endtime="20201117 14:41:54.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.171" endtime="20201117 14:41:54.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.168" endtime="20201117 14:41:54.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.795" endtime="20201117 14:41:54.198"></status>
</kw>
<msg timestamp="20201117 14:41:54.198" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.207" endtime="20201117 14:41:54.227"></status>
</kw>
<msg timestamp="20201117 14:41:54.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.206" endtime="20201117 14:41:54.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.229" endtime="20201117 14:41:54.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.232" endtime="20201117 14:41:54.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.203" endtime="20201117 14:41:54.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.201" endtime="20201117 14:41:54.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.241" endtime="20201117 14:41:54.528"></status>
</kw>
<msg timestamp="20201117 14:41:54.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027096833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.239" endtime="20201117 14:41:54.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027096833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.533" endtime="20201117 14:41:54.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.541" endtime="20201117 14:41:54.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.237" endtime="20201117 14:41:54.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.235" endtime="20201117 14:41:54.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.548" level="INFO">${RESULT} = [{'time': 0.027096833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.913900000000156e-05, 'source_diff': 9.913900000000156e-05}, {'time': 0.027219833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.545" endtime="20201117 14:41:54.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:54.549" endtime="20201117 14:41:54.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.566" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.565" endtime="20201117 14:41:54.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.569" level="INFO">VALUE: [9.913900000000156e-05, 9.874999999999814e-05, 9.929200000000082e-05, 9.927800000000125e-05, 9.891700000000045e-05, 9.868099999999977e-05, 9.868099999999977e-05, 9.936199999999867e-05, 9.859800000000182e-05, 9.876299999999824e-05, 9.922200000000297e-05, 9.926399999999821e-05, 9.927799999999778e-05, 9.875000000000161e-05, 9.925000000000211e-05, 9.893100000000002e-05, 9.901399999999796e-05, 9.909800000000232e-05, 9.879100000000085e-05, 9.893000000000055e-05, 9.937499999999877e-05, 9.88059999999999e-05, 9.891700000000045e-05, 9.884699999999913e-05, 9.890300000000088e-05, 9.851399999999746e-05, 9.909799999999885e-05, 9.894400000000012e-05, 9.86800000000003e-05, 9.934699999999963e-05, 9.893000000000055e-05, 9.901399999999796e-05, 9.875000000000161e-05, 9.869499999999934e-05, 9.909799999999885e-05, 9.911100000000242e-05, 9.923700000000202e-05, 9.875000000000161e-05, 9.840200000000437e-05, 9.901400000000143e-05, 9.855599999999964e-05, 9.908299999999981e-05, 9.923600000000254e-05, 9.843099999999605e-05, 9.933399999999953e-05, 9.923700000000202e-05, 9.842999999999658e-05, 9.849999999999443e-05, 9.858299999999931e-05, 9.874999999999468e-05]</msg>
<status status="PASS" starttime="20201117 14:41:54.568" endtime="20201117 14:41:54.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.563" endtime="20201117 14:41:54.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.573" endtime="20201117 14:41:54.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.576" endtime="20201117 14:41:54.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.575" endtime="20201117 14:41:54.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.571" endtime="20201117 14:41:54.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.199" endtime="20201117 14:41:54.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.793" endtime="20201117 14:41:54.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:53.792" endtime="20201117 14:41:54.598"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.600" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.609" endtime="20201117 14:41:54.629"></status>
</kw>
<msg timestamp="20201117 14:41:54.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.607" endtime="20201117 14:41:54.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:54.630" endtime="20201117 14:41:54.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.633" endtime="20201117 14:41:54.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.604" endtime="20201117 14:41:54.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.602" endtime="20201117 14:41:54.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.642" endtime="20201117 14:41:54.929"></status>
</kw>
<msg timestamp="20201117 14:41:54.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.641" endtime="20201117 14:41:54.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024956903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:54.934" endtime="20201117 14:41:54.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.943" endtime="20201117 14:41:54.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.638" endtime="20201117 14:41:54.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.636" endtime="20201117 14:41:54.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:54.950" level="INFO">${RESULT} = [{'time': 0.025056875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.997200000000026e-05, 'source_diff': 9.997200000000026e-05}, {'time': 0.025175889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:54.947" endtime="20201117 14:41:54.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:54.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:54.952" endtime="20201117 14:41:54.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.969" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:54.968" endtime="20201117 14:41:54.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:54.972" level="INFO">VALUE: [9.997200000000026e-05, 9.976399999999871e-05, 9.959699999999988e-05, 9.997200000000026e-05, 9.99999999999994e-05, 9.938799999999887e-05, 0.0001003610000000002, 9.94020000000019e-05, 9.984700000000013e-05, 0.00010009700000000038, 9.976399999999871e-05, 0.00010026399999999921, 9.976400000000218e-05, 9.991700000000145e-05, 0.0001003480000000001, 9.958300000000031e-05, 0.00010026399999999921, 0.00010026400000000268, 9.977800000000175e-05, 0.00010026399999999921, 9.941700000000095e-05, 0.0001003480000000001, 9.991700000000145e-05, 9.99869999999993e-05, 9.992999999999808e-05, 0.0001003610000000002, 9.962499999999902e-05, 0.00010023600000000008, 9.976399999999871e-05, 9.944500000000009e-05, 0.00010001399999999896, 9.994500000000059e-05, 9.98609999999997e-05, 0.00010009700000000038, 0.00010026399999999921, 9.995800000000069e-05, 9.984700000000013e-05, 9.977800000000175e-05, 0.00010001400000000243, 0.00010011099999999995, 9.991699999999798e-05, 9.983400000000003e-05, 9.959699999999988e-05, 9.99999999999994e-05, 9.965299999999816e-05, 0.000100028000000002, 0.00010024999999999964, 9.976399999999871e-05, 0.00010008299999999734, 0.00010026400000000268]</msg>
<status status="PASS" starttime="20201117 14:41:54.971" endtime="20201117 14:41:54.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.966" endtime="20201117 14:41:54.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:54.976" endtime="20201117 14:41:54.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:54.979" endtime="20201117 14:41:54.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.978" endtime="20201117 14:41:54.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.974" endtime="20201117 14:41:55.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.601" endtime="20201117 14:41:55.000"></status>
</kw>
<msg timestamp="20201117 14:41:55.000" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.009" endtime="20201117 14:41:55.029"></status>
</kw>
<msg timestamp="20201117 14:41:55.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.007" endtime="20201117 14:41:55.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.031" endtime="20201117 14:41:55.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.034" endtime="20201117 14:41:55.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.005" endtime="20201117 14:41:55.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.003" endtime="20201117 14:41:55.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.044" endtime="20201117 14:41:55.331"></status>
</kw>
<msg timestamp="20201117 14:41:55.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.042" endtime="20201117 14:41:55.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.335" endtime="20201117 14:41:55.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.344" endtime="20201117 14:41:55.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.039" endtime="20201117 14:41:55.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.037" endtime="20201117 14:41:55.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.351" level="INFO">${RESULT} = [{'time': 0.022694417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98060000000009e-05, 'source_diff': 9.98060000000009e-05}, {'time': 0.022813431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:41:55.347" endtime="20201117 14:41:55.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.364" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:55.352" endtime="20201117 14:41:55.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.369" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.368" endtime="20201117 14:41:55.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.372" level="INFO">VALUE: [9.98060000000009e-05, 9.9819999999997e-05, 0.00010011099999999995, 0.00010008300000000081, 0.00010030500000000192, 0.00010001399999999896, 0.00010026400000000268, 9.961099999999945e-05, 0.00010026400000000268, 9.977799999999828e-05, 9.993100000000102e-05, 9.94999999999989e-05, 9.99020000000024e-05, 9.965300000000163e-05, 9.945800000000019e-05, 9.940300000000138e-05, 0.00010020900000000041, 0.00010001399999999896, 9.998599999999983e-05, 9.95549999999977e-05, 9.974999999999914e-05, 9.941600000000148e-05, 9.983300000000056e-05, 9.938899999999834e-05, 9.99999999999994e-05, 0.00010024999999999964, 9.976400000000218e-05, 9.959699999999988e-05, 9.974999999999914e-05, 9.944400000000062e-05, 0.0001001800000000018, 0.000100028000000002, 9.940299999999791e-05, 0.00010034700000000063, 0.00010029199999999835, 9.993100000000102e-05, 9.976399999999871e-05, 0.00010002700000000253, 9.988799999999937e-05, 0.0001001800000000018, 9.966599999999826e-05, 0.0001002220000000005, 9.955500000000117e-05, 9.993099999999755e-05, 9.950000000000236e-05, 9.959699999999988e-05, 0.00010009799999999985, 9.976399999999871e-05, 9.994400000000112e-05, 9.95280000000015e-05]</msg>
<status status="PASS" starttime="20201117 14:41:55.370" endtime="20201117 14:41:55.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.365" endtime="20201117 14:41:55.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.375" endtime="20201117 14:41:55.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.379" endtime="20201117 14:41:55.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.377" endtime="20201117 14:41:55.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.374" endtime="20201117 14:41:55.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.001" endtime="20201117 14:41:55.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.599" endtime="20201117 14:41:55.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:54.598" endtime="20201117 14:41:55.400"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.403" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.411" endtime="20201117 14:41:55.431"></status>
</kw>
<msg timestamp="20201117 14:41:55.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.410" endtime="20201117 14:41:55.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.432" endtime="20201117 14:41:55.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.435" endtime="20201117 14:41:55.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.407" endtime="20201117 14:41:55.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.405" endtime="20201117 14:41:55.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.444" endtime="20201117 14:41:55.732"></status>
</kw>
<msg timestamp="20201117 14:41:55.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.443" endtime="20201117 14:41:55.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024781083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024882222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.736" endtime="20201117 14:41:55.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.744" endtime="20201117 14:41:55.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.440" endtime="20201117 14:41:55.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.438" endtime="20201117 14:41:55.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:55.751" level="INFO">${RESULT} = [{'time': 0.024882222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010113900000000009, 'source_diff': 0.00010113900000000009}, {'time': 0.024998292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:55.748" endtime="20201117 14:41:55.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:55.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:55.752" endtime="20201117 14:41:55.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.771" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:55.770" endtime="20201117 14:41:55.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.774" level="INFO">VALUE: [0.00010113900000000009, 0.000100819999999998, 0.00010076399999999971, 0.00010106899999999877, 0.00010106999999999824, 0.00010075000000000014, 0.00010042999999999858, 0.00010097300000000073, 0.00010091600000000298, 0.00010113900000000009, 0.00010112500000000052, 0.00010120799999999847, 0.00010125000000000065, 0.00010044500000000109, 0.00010113900000000009, 0.0001011809999999988, 0.00010115299999999966, 0.00010065199999999969, 0.00010062500000000002, 0.00010098600000000083, 0.00010040299999999891, 0.00010134700000000163, 0.00010108400000000128, 0.00010098600000000083, 0.00010133400000000153, 0.00010040300000000238, 0.0001004999999999999, 0.00010075000000000014, 0.00010125000000000065, 0.00010093099999999855, 0.00010070900000000091, 0.0001004999999999999, 0.00010094500000000159, 0.00010098600000000083, 0.00010041699999999848, 0.00010083300000000156, 0.00010126400000000021, 0.00010043000000000205, 0.00010066699999999873, 0.00010101399999999996, 0.00010059700000000088, 0.00010076399999999971, 0.00010043100000000152, 0.00010119500000000184, 0.00010126400000000021, 0.0001009159999999995, 0.00010134700000000163, 0.00010092999999999908, 0.00010075000000000014, 0.0001006670000000022]</msg>
<status status="PASS" starttime="20201117 14:41:55.772" endtime="20201117 14:41:55.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.767" endtime="20201117 14:41:55.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.777" endtime="20201117 14:41:55.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:55.781" endtime="20201117 14:41:55.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.779" endtime="20201117 14:41:55.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.775" endtime="20201117 14:41:55.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.403" endtime="20201117 14:41:55.802"></status>
</kw>
<msg timestamp="20201117 14:41:55.802" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.812" endtime="20201117 14:41:55.832"></status>
</kw>
<msg timestamp="20201117 14:41:55.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.810" endtime="20201117 14:41:55.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:55.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:55.833" endtime="20201117 14:41:55.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.836" endtime="20201117 14:41:55.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.807" endtime="20201117 14:41:55.838"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.804" endtime="20201117 14:41:55.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:55.845" endtime="20201117 14:41:56.134"></status>
</kw>
<msg timestamp="20201117 14:41:56.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:55.844" endtime="20201117 14:41:56.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023584944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.138" endtime="20201117 14:41:56.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.146" endtime="20201117 14:41:56.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.841" endtime="20201117 14:41:56.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.839" endtime="20201117 14:41:56.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.153" level="INFO">${RESULT} = [{'time': 0.023584944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010063800000000012, 'source_diff': 0.00010063800000000012}, {'time': 0.023701986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:56.150" endtime="20201117 14:41:56.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:56.154" endtime="20201117 14:41:56.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.172" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.171" endtime="20201117 14:41:56.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.174" level="INFO">VALUE: [0.00010063800000000012, 0.00010062500000000002, 0.000100415999999999, 0.00010051399999999946, 0.00010077799999999928, 0.00010093100000000202, 0.0001013610000000012, 0.00010091700000000245, 0.00010052699999999956, 0.0001009159999999995, 0.0001004999999999999, 0.00010079199999999885, 0.00010076399999999971, 0.00010077799999999928, 0.00010059700000000088, 0.00010093100000000202, 0.00010102799999999953, 0.00010109800000000085, 0.00010059700000000088, 0.00010042999999999858, 0.00010119400000000237, 0.00010106999999999824, 0.00010059699999999741, 0.00010041699999999848, 0.00010129199999999935, 0.00010126400000000021, 0.00010047200000000076, 0.00010066599999999926, 0.00010133300000000206, 0.00010069400000000187, 0.00010109700000000138, 0.00010108299999999834, 0.00010111099999999748, 0.00010123600000000108, 0.0001005419999999986, 0.00010109699999999791, 0.00010109700000000138, 0.00010092999999999908, 0.0001010000000000004, 0.00010076399999999971, 0.00010093099999999855, 0.00010061099999999698, 0.00010083400000000103, 0.0001012359999999976, 0.00010077699999999981, 0.00010059700000000088, 0.00010092999999999908, 0.0001013610000000012, 0.00010077799999999928, 0.00010108300000000181]</msg>
<status status="PASS" starttime="20201117 14:41:56.173" endtime="20201117 14:41:56.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.168" endtime="20201117 14:41:56.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.177" endtime="20201117 14:41:56.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.181" endtime="20201117 14:41:56.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.179" endtime="20201117 14:41:56.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.176" endtime="20201117 14:41:56.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.803" endtime="20201117 14:41:56.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.401" endtime="20201117 14:41:56.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:55.401" endtime="20201117 14:41:56.202"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.205" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.213" endtime="20201117 14:41:56.233"></status>
</kw>
<msg timestamp="20201117 14:41:56.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.212" endtime="20201117 14:41:56.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.235" endtime="20201117 14:41:56.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.238" endtime="20201117 14:41:56.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.209" endtime="20201117 14:41:56.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.207" endtime="20201117 14:41:56.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.247" endtime="20201117 14:41:56.534"></status>
</kw>
<msg timestamp="20201117 14:41:56.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.245" endtime="20201117 14:41:56.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025190944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.539" endtime="20201117 14:41:56.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.547" endtime="20201117 14:41:56.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.243" endtime="20201117 14:41:56.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.241" endtime="20201117 14:41:56.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.554" level="INFO">${RESULT} = [{'time': 0.025190944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010180499999999995, 'source_diff': 0.00010180499999999995}, {'time': 0.025311986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:56.551" endtime="20201117 14:41:56.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:56.555" endtime="20201117 14:41:56.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.573" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.572" endtime="20201117 14:41:56.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.576" level="INFO">VALUE: [0.00010180499999999995, 0.00010154200000000307, 0.00010161100000000145, 0.0001018749999999978, 0.00010234700000000263, 0.00010141699999999948, 0.00010166699999999973, 0.00010202800000000053, 0.00010191699999999998, 0.0001023610000000022, 0.00010158300000000231, 0.00010194399999999965, 0.00010186099999999823, 0.00010144500000000209, 0.00010184699999999866, 0.00010161100000000145, 0.00010226400000000122, 0.00010209799999999838, 0.00010190200000000094, 0.00010175000000000115, 0.0001018610000000017, 0.00010138900000000034, 0.0001018610000000017, 0.00010193099999999955, 0.00010184699999999866, 0.00010219499999999937, 0.00010175000000000115, 0.00010176300000000124, 0.00010201400000000097, 0.0001021939999999999, 0.00010158299999999884, 0.00010198699999999783, 0.00010156899999999927, 0.00010212500000000152, 0.00010179100000000038, 0.00010226400000000122, 0.000101416, 0.0001015419999999996, 0.00010142999999999958, 0.00010233300000000306, 0.00010194499999999912, 0.00010202800000000053, 0.00010148599999999786, 0.00010187500000000127, 0.00010213899999999762, 0.00010144400000000262, 0.00010233299999999959, 0.00010193000000000008, 0.00010198600000000183, 0.00010159699999999841]</msg>
<status status="PASS" starttime="20201117 14:41:56.574" endtime="20201117 14:41:56.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.569" endtime="20201117 14:41:56.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.579" endtime="20201117 14:41:56.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.583" endtime="20201117 14:41:56.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.581" endtime="20201117 14:41:56.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.577" endtime="20201117 14:41:56.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.205" endtime="20201117 14:41:56.604"></status>
</kw>
<msg timestamp="20201117 14:41:56.604" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.613" endtime="20201117 14:41:56.633"></status>
</kw>
<msg timestamp="20201117 14:41:56.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.611" endtime="20201117 14:41:56.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:56.635" endtime="20201117 14:41:56.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.637" endtime="20201117 14:41:56.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.608" endtime="20201117 14:41:56.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.606" endtime="20201117 14:41:56.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.647" endtime="20201117 14:41:56.934"></status>
</kw>
<msg timestamp="20201117 14:41:56.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.645" endtime="20201117 14:41:56.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022836889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:56.938" endtime="20201117 14:41:56.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.947" endtime="20201117 14:41:56.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.642" endtime="20201117 14:41:56.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.640" endtime="20201117 14:41:56.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:56.954" level="INFO">${RESULT} = [{'time': 0.022939069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010218000000000033, 'source_diff': 0.00010218000000000033}, {'time': 0.023057069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:56.951" endtime="20201117 14:41:56.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:56.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:56.955" endtime="20201117 14:41:56.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.973" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:41:56.971" endtime="20201117 14:41:56.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:56.978" level="INFO">VALUE: [0.00010218000000000033, 0.00010199999999999793, 0.00010173600000000158, 0.00010142999999999958, 0.00010151400000000046, 0.00010148600000000133, 0.00010198600000000183, 0.00010159800000000135, 0.00010156999999999874, 0.00010141699999999948, 0.00010183300000000256, 0.00010161099999999798, 0.0001015549999999997, 0.00010224999999999818, 0.00010225000000000165, 0.00010177800000000028, 0.00010140299999999991, 0.00010202699999999759, 0.00010208300000000281, 0.0001019160000000005, 0.00010181899999999952, 0.00010147299999999776, 0.00010152800000000003, 0.00010188900000000084, 0.00010151400000000046, 0.00010175000000000115, 0.00010140299999999991, 0.00010188900000000084, 0.00010190200000000094, 0.00010151400000000046, 0.00010190300000000041, 0.00010216700000000023, 0.00010233299999999959, 0.00010176400000000071, 0.00010209799999999838, 0.00010187500000000127, 0.0001014870000000008, 0.00010158299999999884, 0.000101416, 0.00010184699999999866, 0.00010156899999999927, 0.00010193100000000302, 0.0001021809999999998, 0.00010183400000000203, 0.00010191699999999998, 0.00010183299999999909, 0.00010158299999999884, 0.00010159700000000188, 0.00010170799999999897, 0.00010158300000000231]</msg>
<status status="PASS" starttime="20201117 14:41:56.975" endtime="20201117 14:41:56.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.968" endtime="20201117 14:41:56.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:56.982" endtime="20201117 14:41:56.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:56.986" endtime="20201117 14:41:57.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.984" endtime="20201117 14:41:57.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.980" endtime="20201117 14:41:57.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.605" endtime="20201117 14:41:57.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.203" endtime="20201117 14:41:57.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:56.203" endtime="20201117 14:41:57.007"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.010" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.019" endtime="20201117 14:41:57.039"></status>
</kw>
<msg timestamp="20201117 14:41:57.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.017" endtime="20201117 14:41:57.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.040" endtime="20201117 14:41:57.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.043" endtime="20201117 14:41:57.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.014" endtime="20201117 14:41:57.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.012" endtime="20201117 14:41:57.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.053" endtime="20201117 14:41:57.341"></status>
</kw>
<msg timestamp="20201117 14:41:57.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025599472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.051" endtime="20201117 14:41:57.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025599472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.345" endtime="20201117 14:41:57.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.353" endtime="20201117 14:41:57.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.048" endtime="20201117 14:41:57.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.046" endtime="20201117 14:41:57.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.360" level="INFO">${RESULT} = [{'time': 0.025599472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010331900000000102, 'source_diff': 0.00010331900000000102}, {'time': 0.025726472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:57.357" endtime="20201117 14:41:57.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.375" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:57.361" endtime="20201117 14:41:57.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.380" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.379" endtime="20201117 14:41:57.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.382" level="INFO">VALUE: [0.00010331900000000102, 0.0001030139999999985, 0.0001031940000000009, 0.00010259700000000288, 0.00010243100000000005, 0.0001031810000000008, 0.00010316699999999776, 0.00010316700000000123, 0.00010334700000000016, 0.00010259699999999941, 0.00010326399999999875, 0.00010261100000000245, 0.00010326400000000222, 0.00010326400000000222, 0.00010294500000000012, 0.00010252799999999757, 0.0001023749999999983, 0.00010333300000000059, 0.00010243000000000058, 0.00010252800000000103, 0.00010243000000000058, 0.00010294500000000012, 0.00010308300000000034, 0.00010308400000000328, 0.00010274999999999868, 0.00010324999999999918, 0.00010275000000000215, 0.0001029299999999976, 0.00010333300000000059, 0.00010259699999999941, 0.00010297299999999926, 0.0001033200000000005, 0.00010243100000000005, 0.0001030139999999985, 0.0001023749999999983, 0.00010317999999999786, 0.00010267999999999736, 0.00010316600000000176, 0.00010316699999999776, 0.00010283300000000009, 0.00010275000000000215, 0.00010307000000000024, 0.00010326400000000222, 0.00010273699999999858, 0.0001027359999999991, 0.00010326400000000222, 0.0001026940000000004, 0.00010273600000000258, 0.0001033060000000044, 0.00010290299999999447]</msg>
<status status="PASS" starttime="20201117 14:41:57.381" endtime="20201117 14:41:57.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.376" endtime="20201117 14:41:57.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.386" endtime="20201117 14:41:57.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.389" endtime="20201117 14:41:57.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.387" endtime="20201117 14:41:57.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.384" endtime="20201117 14:41:57.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.011" endtime="20201117 14:41:57.410"></status>
</kw>
<msg timestamp="20201117 14:41:57.410" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.419" endtime="20201117 14:41:57.439"></status>
</kw>
<msg timestamp="20201117 14:41:57.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.417" endtime="20201117 14:41:57.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.441" endtime="20201117 14:41:57.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.444" endtime="20201117 14:41:57.445"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.415" endtime="20201117 14:41:57.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.413" endtime="20201117 14:41:57.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.453" endtime="20201117 14:41:57.741"></status>
</kw>
<msg timestamp="20201117 14:41:57.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.452" endtime="20201117 14:41:57.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.746" endtime="20201117 14:41:57.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.754" endtime="20201117 14:41:57.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.449" endtime="20201117 14:41:57.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.447" endtime="20201117 14:41:57.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:57.761" level="INFO">${RESULT} = [{'time': 0.022551597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010281900000000052, 'source_diff': 0.00010281900000000052}, {'time': 0.022678611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:57.757" endtime="20201117 14:41:57.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:57.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:57.762" endtime="20201117 14:41:57.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.779" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:41:57.778" endtime="20201117 14:41:57.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.782" level="INFO">VALUE: [0.00010281900000000052, 0.0001028610000000027, 0.00010240299999999744, 0.00010266700000000073, 0.00010319500000000037, 0.00010316700000000123, 0.00010265300000000116, 0.00010334799999999963, 0.00010308300000000034, 0.00010326400000000222, 0.00010276400000000172, 0.00010291700000000098, 0.0001031810000000008, 0.00010320899999999994, 0.00010326400000000222, 0.00010326399999999875, 0.00010301400000000197, 0.00010293000000000108, 0.00010302799999999807, 0.0001029160000000015, 0.00010334700000000016, 0.00010259700000000288, 0.00010248599999999886, 0.0001033200000000005, 0.00010275000000000215, 0.00010291700000000098, 0.00010283300000000009, 0.00010326399999999875, 0.00010309699999999991, 0.00010322200000000004, 0.00010312499999999905, 0.00010293100000000055, 0.00010336099999999973, 0.00010258400000000278, 0.00010323699999999908, 0.00010291599999999804, 0.00010248599999999886, 0.00010265300000000116, 0.0001025689999999968, 0.00010308300000000034, 0.00010307000000000024, 0.00010313900000000209, 0.0001028749999999988, 0.00010315200000000219, 0.00010279100000000138, 0.0001029299999999976, 0.00010313899999999862, 0.00010272299999999901, 0.0001030000000000024, 0.00010279199999999739]</msg>
<status status="PASS" starttime="20201117 14:41:57.780" endtime="20201117 14:41:57.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.775" endtime="20201117 14:41:57.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.785" endtime="20201117 14:41:57.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:57.788" endtime="20201117 14:41:57.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.787" endtime="20201117 14:41:57.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.783" endtime="20201117 14:41:57.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.411" endtime="20201117 14:41:57.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.009" endtime="20201117 14:41:57.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.008" endtime="20201117 14:41:57.810"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.812" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.821" endtime="20201117 14:41:57.842"></status>
</kw>
<msg timestamp="20201117 14:41:57.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.820" endtime="20201117 14:41:57.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:57.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:57.843" endtime="20201117 14:41:57.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.846" endtime="20201117 14:41:57.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.817" endtime="20201117 14:41:57.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.814" endtime="20201117 14:41:57.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:57.856" endtime="20201117 14:41:58.144"></status>
</kw>
<msg timestamp="20201117 14:41:58.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:57.854" endtime="20201117 14:41:58.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025675694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.148" endtime="20201117 14:41:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.156" endtime="20201117 14:41:58.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.851" endtime="20201117 14:41:58.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.850" endtime="20201117 14:41:58.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.163" level="INFO">${RESULT} = [{'time': 0.025675694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010399999999999993, 'source_diff': 0.00010399999999999993}, {'time': 0.025797681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:58.160" endtime="20201117 14:41:58.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:58.164" endtime="20201117 14:41:58.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.181" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.180" endtime="20201117 14:41:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.184" level="INFO">VALUE: [0.00010399999999999993, 0.00010394500000000112, 0.00010419399999999843, 0.00010352699999999909, 0.0001037079999999975, 0.00010411100000000048, 0.00010376400000000272, 0.00010409700000000091, 0.00010359700000000041, 0.00010411100000000048, 0.00010426399999999975, 0.00010420800000000147, 0.00010368000000000183, 0.00010359700000000041, 0.00010408300000000134, 0.00010341700000000148, 0.0001042360000000006, 0.00010398600000000036, 0.00010420899999999747, 0.00010341699999999801, 0.00010433400000000106, 0.0001037360000000001, 0.00010395799999999775, 0.00010416599999999929, 0.00010383300000000109, 0.00010425000000000018, 0.00010427799999999932, 0.00010358400000000031, 0.00010374999999999968, 0.00010391599999999904, 0.000104207999999998, 0.00010408299999999787, 0.00010358299999999737, 0.0001040550000000022, 0.00010359700000000041, 0.00010376400000000272, 0.00010391699999999851, 0.0001043339999999976, 0.00010342999999999811, 0.0001041940000000019, 0.00010417999999999886, 0.00010436100000000073, 0.00010349999999999943, 0.00010366700000000173, 0.00010344499999999715, 0.0001040420000000021, 0.00010398600000000036, 0.00010434699999999769, 0.00010377799999999882, 0.00010409699999999744]</msg>
<status status="PASS" starttime="20201117 14:41:58.183" endtime="20201117 14:41:58.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.178" endtime="20201117 14:41:58.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.187" endtime="20201117 14:41:58.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.191" endtime="20201117 14:41:58.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.189" endtime="20201117 14:41:58.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.185" endtime="20201117 14:41:58.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.813" endtime="20201117 14:41:58.212"></status>
</kw>
<msg timestamp="20201117 14:41:58.212" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.221" endtime="20201117 14:41:58.241"></status>
</kw>
<msg timestamp="20201117 14:41:58.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.219" endtime="20201117 14:41:58.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.242" endtime="20201117 14:41:58.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.245" endtime="20201117 14:41:58.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.217" endtime="20201117 14:41:58.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.214" endtime="20201117 14:41:58.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.254" endtime="20201117 14:41:58.541"></status>
</kw>
<msg timestamp="20201117 14:41:58.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.253" endtime="20201117 14:41:58.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.545" endtime="20201117 14:41:58.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.553" endtime="20201117 14:41:58.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.250" endtime="20201117 14:41:58.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.248" endtime="20201117 14:41:58.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.560" level="INFO">${RESULT} = [{'time': 0.022676167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010374999999999968, 'source_diff': 0.00010374999999999968}, {'time': 0.022800194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:58.557" endtime="20201117 14:41:58.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:58.561" endtime="20201117 14:41:58.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.578" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.577" endtime="20201117 14:41:58.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.581" level="INFO">VALUE: [0.00010374999999999968, 0.00010369399999999793, 0.00010351299999999952, 0.00010426399999999975, 0.00010394400000000165, 0.00010436099999999726, 0.00010394500000000112, 0.00010397199999999732, 0.00010426399999999975, 0.0001037360000000001, 0.00010411100000000048, 0.00010343000000000158, 0.00010383300000000109, 0.00010361099999999998, 0.00010354199999999814, 0.00010359700000000041, 0.00010358300000000084, 0.00010374999999999968, 0.00010343100000000105, 0.00010383400000000056, 0.00010390199999999947, 0.00010409700000000091, 0.00010368000000000183, 0.00010349999999999943, 0.00010341700000000148, 0.00010415299999999919, 0.0001038339999999971, 0.00010390299999999894, 0.00010416699999999876, 0.00010433299999999812, 0.00010341700000000148, 0.00010349999999999943, 0.00010393099999999808, 0.00010349999999999943, 0.00010362499999999955, 0.00010409800000000038, 0.00010343100000000105, 0.00010418000000000233, 0.00010399999999999993, 0.0001035689999999978, 0.00010344400000000115, 0.0001041949999999979, 0.00010383300000000109, 0.00010343100000000105, 0.0001042360000000006, 0.0001041810000000018, 0.00010384700000000066, 0.00010426399999999975, 0.00010358300000000084, 0.00010409700000000091]</msg>
<status status="PASS" starttime="20201117 14:41:58.580" endtime="20201117 14:41:58.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.575" endtime="20201117 14:41:58.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.585" endtime="20201117 14:41:58.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.588" endtime="20201117 14:41:58.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.587" endtime="20201117 14:41:58.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.583" endtime="20201117 14:41:58.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.213" endtime="20201117 14:41:58.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.811" endtime="20201117 14:41:58.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:57.810" endtime="20201117 14:41:58.610"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.612" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.621" endtime="20201117 14:41:58.641"></status>
</kw>
<msg timestamp="20201117 14:41:58.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.619" endtime="20201117 14:41:58.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:58.643" endtime="20201117 14:41:58.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.645" endtime="20201117 14:41:58.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.616" endtime="20201117 14:41:58.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.614" endtime="20201117 14:41:58.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.655" endtime="20201117 14:41:58.943"></status>
</kw>
<msg timestamp="20201117 14:41:58.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.653" endtime="20201117 14:41:58.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:58.947" endtime="20201117 14:41:58.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.955" endtime="20201117 14:41:58.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.650" endtime="20201117 14:41:58.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.649" endtime="20201117 14:41:58.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:58.962" level="INFO">${RESULT} = [{'time': 0.024969764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010463900000000012, 'source_diff': 0.00010463900000000012}, {'time': 0.025090778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:58.959" endtime="20201117 14:41:58.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:58.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:58.963" endtime="20201117 14:41:58.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.982" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:58.981" endtime="20201117 14:41:58.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:58.985" level="INFO">VALUE: [0.00010463900000000012, 0.0001046810000000023, 0.00010534799999999817, 0.00010494400000000265, 0.00010501300000000102, 0.00010508299999999887, 0.00010459700000000141, 0.00010443099999999858, 0.00010518099999999933, 0.00010518099999999933, 0.00010500000000000093, 0.00010459799999999742, 0.00010488900000000037, 0.00010452700000000009, 0.00010527700000000084, 0.00010481899999999905, 0.00010484700000000166, 0.00010466699999999926, 0.00010518099999999933, 0.00010538799999999793, 0.00010454199999999914, 0.00010459699999999794, 0.00010459699999999794, 0.00010508299999999887, 0.00010442999999999911, 0.0001050140000000005, 0.00010525000000000118, 0.00010529199999999989, 0.00010497200000000179, 0.00010508299999999887, 0.00010511099999999801, 0.00010441599999999954, 0.00010517999999999986, 0.00010466700000000273, 0.00010534699999999869, 0.00010525000000000118, 0.00010445899999999772, 0.000104514, 0.00010493099999999908, 0.00010484700000000166, 0.00010508299999999887, 0.00010525000000000118, 0.00010459700000000141, 0.00010509699999999844, 0.00010459700000000141, 0.00010441700000000248, 0.00010518099999999933, 0.00010519500000000237, 0.00010526400000000075, 0.00010475000000000068]</msg>
<status status="PASS" starttime="20201117 14:41:58.983" endtime="20201117 14:41:58.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.978" endtime="20201117 14:41:58.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:58.988" endtime="20201117 14:41:58.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:58.992" endtime="20201117 14:41:59.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.990" endtime="20201117 14:41:59.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.986" endtime="20201117 14:41:59.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.613" endtime="20201117 14:41:59.012"></status>
</kw>
<msg timestamp="20201117 14:41:59.013" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.021" endtime="20201117 14:41:59.041"></status>
</kw>
<msg timestamp="20201117 14:41:59.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.020" endtime="20201117 14:41:59.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.043" endtime="20201117 14:41:59.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.045" endtime="20201117 14:41:59.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.017" endtime="20201117 14:41:59.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.015" endtime="20201117 14:41:59.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.055" endtime="20201117 14:41:59.341"></status>
</kw>
<msg timestamp="20201117 14:41:59.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.053" endtime="20201117 14:41:59.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:41:59.346" endtime="20201117 14:41:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.354" endtime="20201117 14:41:59.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.050" endtime="20201117 14:41:59.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.048" endtime="20201117 14:41:59.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.361" level="INFO">${RESULT} = [{'time': 0.022855903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010480599999999896, 'source_diff': 0.00010480599999999896}, {'time': 0.022979917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:41:59.358" endtime="20201117 14:41:59.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:59.362" endtime="20201117 14:41:59.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.385" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.384" endtime="20201117 14:41:59.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.388" level="INFO">VALUE: [0.00010480599999999896, 0.00010518099999999933, 0.00010466599999999979, 0.00010483300000000209, 0.00010492999999999961, 0.00010498600000000136, 0.00010475000000000068, 0.00010491699999999951, 0.00010468099999999883, 0.000104514, 0.00010494500000000212, 0.000104514, 0.00010527700000000084, 0.00010494399999999918, 0.00010466599999999979, 0.00010498600000000136, 0.00010508299999999887, 0.00010443100000000205, 0.00010534799999999817, 0.00010509800000000138, 0.00010492999999999961, 0.0001045559999999987, 0.00010491600000000004, 0.0001046940000000024, 0.00010499999999999746, 0.00010511100000000148, 0.00010529199999999989, 0.00010513899999999715, 0.00010519399999999943, 0.00010534700000000216, 0.00010444399999999868, 0.00010484700000000166, 0.00010476400000000025, 0.00010509699999999844, 0.000105207999999999, 0.00010476400000000025, 0.00010511200000000095, 0.00010527800000000032, 0.00010536099999999826, 0.00010492999999999961, 0.00010466599999999979, 0.00010533299999999912, 0.00010441699999999901, 0.00010484700000000166, 0.00010526399999999728, 0.00010476400000000025, 0.00010487499999999733, 0.00010451300000000052, 0.00010494399999999918, 0.00010516599999999682]</msg>
<status status="PASS" starttime="20201117 14:41:59.386" endtime="20201117 14:41:59.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.381" endtime="20201117 14:41:59.389"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.391" endtime="20201117 14:41:59.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.395" endtime="20201117 14:41:59.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.393" endtime="20201117 14:41:59.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.389" endtime="20201117 14:41:59.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.013" endtime="20201117 14:41:59.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.611" endtime="20201117 14:41:59.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:58.610" endtime="20201117 14:41:59.416"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.418" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.427" endtime="20201117 14:41:59.447"></status>
</kw>
<msg timestamp="20201117 14:41:59.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.425" endtime="20201117 14:41:59.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.449" endtime="20201117 14:41:59.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.452" endtime="20201117 14:41:59.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.423" endtime="20201117 14:41:59.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.421" endtime="20201117 14:41:59.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.461" endtime="20201117 14:41:59.747"></status>
</kw>
<msg timestamp="20201117 14:41:59.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02499275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:59.459" endtime="20201117 14:41:59.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024886944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02499275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:41:59.752" endtime="20201117 14:41:59.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.760" endtime="20201117 14:41:59.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.457" endtime="20201117 14:41:59.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.455" endtime="20201117 14:41:59.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:41:59.767" level="INFO">${RESULT} = [{'time': 0.02499275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010580599999999996, 'source_diff': 0.00010580599999999996}, {'time': 0.02511675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:41:59.764" endtime="20201117 14:41:59.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:41:59.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:41:59.768" endtime="20201117 14:41:59.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.785" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:41:59.784" endtime="20201117 14:41:59.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.788" level="INFO">VALUE: [0.00010580599999999996, 0.00010599999999999846, 0.0001062499999999987, 0.00010543099999999958, 0.00010612499999999858, 0.00010584700000000266, 0.00010626400000000175, 0.00010575000000000168, 0.00010561099999999851, 0.00010559700000000241, 0.00010558300000000284, 0.00010576400000000125, 0.00010543099999999958, 0.00010618100000000033, 0.00010634699999999969, 0.00010611100000000248, 0.00010591600000000104, 0.0001060140000000015, 0.00010595899999999922, 0.00010601399999999803, 0.0001057499999999982, 0.0001057499999999982, 0.00010611099999999901, 0.00010569399999999993, 0.00010632000000000003, 0.00010541600000000054, 0.00010550000000000143, 0.00010591700000000051, 0.00010549999999999796, 0.00010626400000000175, 0.00010613900000000162, 0.00010618000000000086, 0.00010594400000000018, 0.00010598600000000236, 0.00010594400000000018, 0.00010586099999999876, 0.00010577800000000082, 0.00010626399999999828, 0.00010591700000000051, 0.00010634799999999917, 0.00010559699999999894, 0.00010576400000000125, 0.00010543000000000011, 0.00010584699999999919, 0.00010559700000000241, 0.00010559699999999894, 0.00010618100000000033, 0.00010609799999999892, 0.00010547200000000229, 0.00010631900000000055]</msg>
<status status="PASS" starttime="20201117 14:41:59.787" endtime="20201117 14:41:59.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.782" endtime="20201117 14:41:59.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.791" endtime="20201117 14:41:59.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:41:59.795" endtime="20201117 14:41:59.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.793" endtime="20201117 14:41:59.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.790" endtime="20201117 14:41:59.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.419" endtime="20201117 14:41:59.816"></status>
</kw>
<msg timestamp="20201117 14:41:59.816" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.825" endtime="20201117 14:41:59.844"></status>
</kw>
<msg timestamp="20201117 14:41:59.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.823" endtime="20201117 14:41:59.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:41:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:41:59.846" endtime="20201117 14:41:59.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.848" endtime="20201117 14:41:59.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.820" endtime="20201117 14:41:59.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.818" endtime="20201117 14:41:59.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:41:59.858" endtime="20201117 14:42:00.146"></status>
</kw>
<msg timestamp="20201117 14:42:00.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:41:59.856" endtime="20201117 14:42:00.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444681, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:00.150" endtime="20201117 14:42:00.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.159" endtime="20201117 14:42:00.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.853" endtime="20201117 14:42:00.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.852" endtime="20201117 14:42:00.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.166" level="INFO">${RESULT} = [{'time': 0.022444681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010568099999999983, 'source_diff': 0.00010568099999999983}, {'time': 0.022572653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:00.162" endtime="20201117 14:42:00.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:00.167" endtime="20201117 14:42:00.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.184" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.183" endtime="20201117 14:42:00.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.186" level="INFO">VALUE: [0.00010568099999999983, 0.0001057360000000021, 0.00010611199999999849, 0.00010595799999999975, 0.00010601300000000202, 0.00010629200000000089, 0.00010626400000000175, 0.00010626400000000175, 0.00010541700000000001, 0.00010634699999999969, 0.00010541700000000001, 0.00010634699999999969, 0.00010625000000000218, 0.00010543000000000011, 0.00010617999999999739, 0.00010568099999999983, 0.00010586099999999876, 0.00010543100000000305, 0.0001060140000000015, 0.00010626399999999828, 0.00010538900000000087, 0.00010567999999999689, 0.00010552800000000057, 0.00010593000000000061, 0.00010604200000000064, 0.00010608299999999987, 0.00010544500000000262, 0.00010584700000000266, 0.00010626400000000175, 0.00010576400000000125, 0.0001053880000000014, 0.0001060140000000015, 0.00010591600000000104, 0.00010568000000000036, 0.00010568099999999983, 0.00010581999999999953, 0.00010540300000000044, 0.00010615300000000119, 0.00010633300000000012, 0.00010591600000000104, 0.00010552800000000057, 0.00010593000000000061, 0.000105514000000001, 0.00010625000000000218, 0.00010540300000000044, 0.0001057499999999982, 0.00010563900000000112, 0.00010616599999999782, 0.00010586100000000223, 0.0001057499999999982]</msg>
<status status="PASS" starttime="20201117 14:42:00.185" endtime="20201117 14:42:00.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.180" endtime="20201117 14:42:00.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.190" endtime="20201117 14:42:00.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.193" endtime="20201117 14:42:00.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.192" endtime="20201117 14:42:00.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.188" endtime="20201117 14:42:00.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.816" endtime="20201117 14:42:00.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.417" endtime="20201117 14:42:00.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:41:59.416" endtime="20201117 14:42:00.214"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.217" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.226" endtime="20201117 14:42:00.246"></status>
</kw>
<msg timestamp="20201117 14:42:00.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.224" endtime="20201117 14:42:00.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.247" endtime="20201117 14:42:00.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.250" endtime="20201117 14:42:00.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.221" endtime="20201117 14:42:00.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.219" endtime="20201117 14:42:00.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.260" endtime="20201117 14:42:00.547"></status>
</kw>
<msg timestamp="20201117 14:42:00.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.258" endtime="20201117 14:42:00.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024927847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.552" endtime="20201117 14:42:00.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.560" endtime="20201117 14:42:00.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.255" endtime="20201117 14:42:00.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.253" endtime="20201117 14:42:00.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.567" level="INFO">${RESULT} = [{'time': 0.025035111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010726399999999928, 'source_diff': 0.00010726399999999928}, {'time': 0.025160111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:00.564" endtime="20201117 14:42:00.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.582" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:00.568" endtime="20201117 14:42:00.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.587" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.586" endtime="20201117 14:42:00.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.589" level="INFO">VALUE: [0.00010726399999999928, 0.00010651399999999853, 0.00010709700000000044, 0.00010707000000000078, 0.00010676399999999878, 0.00010657000000000028, 0.0001065560000000007, 0.00010640200000000197, 0.00010733299999999765, 0.0001072499999999997, 0.00010709700000000044, 0.00010704199999999817, 0.00010644500000000015, 0.00010701399999999903, 0.00010657000000000028, 0.00010694399999999771, 0.00010684700000000019, 0.00010693000000000161, 0.000106514000000002, 0.00010679199999999792, 0.00010709700000000044, 0.00010676399999999878, 0.00010723699999999961, 0.00010676399999999878, 0.0001070690000000013, 0.00010709700000000044, 0.00010676399999999878, 0.00010641700000000101, 0.00010733300000000112, 0.00010641700000000101, 0.00010669400000000093, 0.00010672200000000007, 0.00010716699999999829, 0.00010668000000000136, 0.00010668000000000136, 0.00010666699999999779, 0.00010668100000000083, 0.00010650000000000243, 0.00010727800000000232, 0.00010658399999999985, 0.00010697200000000032, 0.00010709700000000044, 0.0001070140000000025, 0.00010659699999999994, 0.00010684700000000019, 0.0001066950000000004, 0.00010648599999999939, 0.00010643100000000058, 0.0001070140000000025, 0.00010659799999999942]</msg>
<status status="PASS" starttime="20201117 14:42:00.588" endtime="20201117 14:42:00.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.583" endtime="20201117 14:42:00.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.593" endtime="20201117 14:42:00.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.596" endtime="20201117 14:42:00.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.595" endtime="20201117 14:42:00.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.591" endtime="20201117 14:42:00.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.218" endtime="20201117 14:42:00.617"></status>
</kw>
<msg timestamp="20201117 14:42:00.617" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.626" endtime="20201117 14:42:00.646"></status>
</kw>
<msg timestamp="20201117 14:42:00.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.624" endtime="20201117 14:42:00.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:00.648" endtime="20201117 14:42:00.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.651" endtime="20201117 14:42:00.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.621" endtime="20201117 14:42:00.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.619" endtime="20201117 14:42:00.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.660" endtime="20201117 14:42:00.948"></status>
</kw>
<msg timestamp="20201117 14:42:00.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.659" endtime="20201117 14:42:00.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:00.953" endtime="20201117 14:42:00.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.961" endtime="20201117 14:42:00.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.656" endtime="20201117 14:42:00.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.654" endtime="20201117 14:42:00.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:00.968" level="INFO">${RESULT} = [{'time': 0.022466111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010716700000000176, 'source_diff': 0.00010716700000000176}, {'time': 0.022588139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:00.964" endtime="20201117 14:42:00.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:00.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:00.969" endtime="20201117 14:42:00.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.987" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:42:00.985" endtime="20201117 14:42:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:00.989" level="INFO">VALUE: [0.00010716700000000176, 0.00010709700000000044, 0.0001072499999999997, 0.00010726399999999928, 0.00010680499999999801, 0.00010672299999999954, 0.00010726399999999928, 0.00010684700000000019, 0.00010694399999999771, 0.0001070140000000025, 0.00010693099999999761, 0.00010734700000000069, 0.00010716700000000176, 0.0001067499999999992, 0.0001072629999999998, 0.0001064019999999985, 0.00010680500000000148, 0.0001063750000000023, 0.00010683300000000062, 0.00010673599999999964, 0.00010733300000000112, 0.00010708400000000035, 0.000107208000000001, 0.00010709699999999697, 0.00010691599999999857, 0.00010666599999999832, 0.00010737499999999983, 0.00010709700000000044, 0.00010691699999999804, 0.000106514000000002, 0.00010644500000000015, 0.00010649999999999896, 0.00010643000000000111, 0.00010699999999999946, 0.00010676399999999878, 0.00010712499999999958, 0.00010712499999999958, 0.00010708300000000087, 0.00010641699999999754, 0.00010681899999999758, 0.0001072629999999998, 0.00010659699999999994, 0.00010659699999999994, 0.00010691700000000151, 0.00010701399999999903, 0.00010663799999999918, 0.00010699999999999946, 0.00010733300000000112, 0.0001065560000000007, 0.00010644400000000068]</msg>
<status status="PASS" starttime="20201117 14:42:00.988" endtime="20201117 14:42:00.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.983" endtime="20201117 14:42:00.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:00.993" endtime="20201117 14:42:00.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:00.996" endtime="20201117 14:42:01.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.995" endtime="20201117 14:42:01.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.991" endtime="20201117 14:42:01.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.618" endtime="20201117 14:42:01.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.216" endtime="20201117 14:42:01.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:00.215" endtime="20201117 14:42:01.018"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.020" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.029" endtime="20201117 14:42:01.051"></status>
</kw>
<msg timestamp="20201117 14:42:01.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.028" endtime="20201117 14:42:01.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.052" endtime="20201117 14:42:01.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.055" endtime="20201117 14:42:01.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.025" endtime="20201117 14:42:01.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.022" endtime="20201117 14:42:01.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.064" endtime="20201117 14:42:01.352"></status>
</kw>
<msg timestamp="20201117 14:42:01.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025890972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025998458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.063" endtime="20201117 14:42:01.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025890972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025998458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.357" endtime="20201117 14:42:01.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.365" endtime="20201117 14:42:01.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.060" endtime="20201117 14:42:01.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.058" endtime="20201117 14:42:01.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.372" level="INFO">${RESULT} = [{'time': 0.025998458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010748599999999692, 'source_diff': 0.00010748599999999692}, {'time': 0.026125458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:01.369" endtime="20201117 14:42:01.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:01.373" endtime="20201117 14:42:01.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.390" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.389" endtime="20201117 14:42:01.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.393" level="INFO">VALUE: [0.00010748599999999692, 0.00010743000000000211, 0.00010833299999999865, 0.00010761100000000051, 0.00010744499999999768, 0.00010833300000000212, 0.00010791699999999904, 0.00010752699999999962, 0.00010741599999999907, 0.00010786100000000076, 0.00010754099999999919, 0.00010797199999999785, 0.00010786100000000076, 0.00010831900000000255, 0.00010757000000000128, 0.00010745800000000125, 0.00010767999999999889, 0.00010817999999999939, 0.0001080279999999996, 0.00010809700000000144, 0.00010777799999999935, 0.00010812500000000058, 0.00010759700000000094, 0.00010793099999999861, 0.00010800000000000046, 0.00010792999999999914, 0.00010765200000000322, 0.00010817999999999939, 0.00010818100000000233, 0.0001080560000000022, 0.0001073889999999994, 0.0001080279999999996, 0.00010813900000000015, 0.00010827700000000037, 0.00010759700000000094, 0.0001077500000000002, 0.00010827799999999985, 0.00010762500000000008, 0.00010791699999999904, 0.0001075279999999991, 0.00010808400000000135, 0.00010776399999999978, 0.0001077630000000003, 0.00010829099999999647, 0.00010802799999999613, 0.00010759700000000094, 0.00010759700000000094, 0.00010826399999999681, 0.00010759700000000094, 0.00010809800000000092]</msg>
<status status="PASS" starttime="20201117 14:42:01.391" endtime="20201117 14:42:01.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.386" endtime="20201117 14:42:01.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.396" endtime="20201117 14:42:01.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.400" endtime="20201117 14:42:01.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.398" endtime="20201117 14:42:01.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.394" endtime="20201117 14:42:01.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.021" endtime="20201117 14:42:01.421"></status>
</kw>
<msg timestamp="20201117 14:42:01.421" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.430" endtime="20201117 14:42:01.450"></status>
</kw>
<msg timestamp="20201117 14:42:01.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.428" endtime="20201117 14:42:01.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.452" endtime="20201117 14:42:01.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.455" endtime="20201117 14:42:01.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.425" endtime="20201117 14:42:01.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.423" endtime="20201117 14:42:01.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.466" endtime="20201117 14:42:01.754"></status>
</kw>
<msg timestamp="20201117 14:42:01.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.463" endtime="20201117 14:42:01.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.759" endtime="20201117 14:42:01.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.767" endtime="20201117 14:42:01.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.460" endtime="20201117 14:42:01.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.458" endtime="20201117 14:42:01.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:01.774" level="INFO">${RESULT} = [{'time': 0.022464653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010761100000000051, 'source_diff': 0.00010761100000000051}, {'time': 0.022589653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:01.771" endtime="20201117 14:42:01.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:01.787" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:01.775" endtime="20201117 14:42:01.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.792" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:42:01.791" endtime="20201117 14:42:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.795" level="INFO">VALUE: [0.00010761100000000051, 0.00010758400000000085, 0.00010791699999999904, 0.00010801400000000003, 0.00010742999999999864, 0.00010783299999999815, 0.00010761100000000051, 0.00010809700000000144, 0.00010743099999999811, 0.00010816699999999929, 0.0001077500000000002, 0.000107514000000003, 0.00010827700000000037, 0.00010767999999999889, 0.00010776399999999978, 0.00010792999999999914, 0.00010836099999999779, 0.0001082500000000007, 0.00010758300000000137, 0.0001077500000000002, 0.00010791699999999904, 0.00010784700000000119, 0.0001078889999999999, 0.00010751399999999953, 0.00010812500000000058, 0.00010826400000000028, 0.00010826400000000028, 0.00010776399999999978, 0.00010776399999999978, 0.00010779099999999944, 0.00010792999999999914, 0.00010817999999999939, 0.00010833299999999865, 0.00010813899999999668, 0.00010793099999999861, 0.00010797200000000132, 0.00010758400000000085, 0.0001077500000000002, 0.00010827700000000037, 0.00010826400000000028, 0.00010826400000000028, 0.00010776399999999978, 0.00010776399999999978, 0.00010809699999999797, 0.00010808400000000135, 0.00010793100000000208, 0.00010836099999999779, 0.00010759700000000094, 0.00010791599999999957, 0.00010783299999999815]</msg>
<status status="PASS" starttime="20201117 14:42:01.793" endtime="20201117 14:42:01.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.788" endtime="20201117 14:42:01.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.798" endtime="20201117 14:42:01.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:01.802" endtime="20201117 14:42:01.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.801" endtime="20201117 14:42:01.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.797" endtime="20201117 14:42:01.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.422" endtime="20201117 14:42:01.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.019" endtime="20201117 14:42:01.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.018" endtime="20201117 14:42:01.823"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.826" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.834" endtime="20201117 14:42:01.854"></status>
</kw>
<msg timestamp="20201117 14:42:01.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.833" endtime="20201117 14:42:01.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:01.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:01.856" endtime="20201117 14:42:01.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.858" endtime="20201117 14:42:01.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.830" endtime="20201117 14:42:01.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.828" endtime="20201117 14:42:01.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:01.868" endtime="20201117 14:42:02.157"></status>
</kw>
<msg timestamp="20201117 14:42:02.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:01.866" endtime="20201117 14:42:02.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.161" endtime="20201117 14:42:02.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.170" endtime="20201117 14:42:02.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.863" endtime="20201117 14:42:02.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.862" endtime="20201117 14:42:02.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.176" level="INFO">${RESULT} = [{'time': 0.025062069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001092769999999979, 'source_diff': 0.0001092769999999979}, {'time': 0.025186083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:02.173" endtime="20201117 14:42:02.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:02.177" endtime="20201117 14:42:02.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.196" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.195" endtime="20201117 14:42:02.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.199" level="INFO">VALUE: [0.0001092769999999979, 0.00010900000000000146, 0.00010862499999999761, 0.00010861100000000151, 0.00010913800000000168, 0.00010876400000000078, 0.00010843099999999911, 0.0001087080000000025, 0.00010874999999999774, 0.00010918000000000039, 0.00010934699999999922, 0.00010867999999999989, 0.00010841700000000301, 0.00010895799999999928, 0.00010841699999999954, 0.00010884800000000167, 0.00010844399999999921, 0.00010901399999999756, 0.00010840299999999997, 0.00010936100000000226, 0.00010843099999999911, 0.00010899999999999799, 0.00010909699999999897, 0.00010843099999999911, 0.0001093479999999987, 0.00010893000000000014, 0.00010934699999999922, 0.00010892999999999667, 0.00010900000000000146, 0.00010873600000000164, 0.00010927800000000085, 0.00010925000000000171, 0.00010859799999999795, 0.00010924999999999824, 0.00010841600000000007, 0.00010867999999999989, 0.00010887500000000133, 0.00010909699999999897, 0.00010909700000000244, 0.00010877800000000035, 0.00010893099999999961, 0.00010919399999999996, 0.00010931900000000008, 0.00010841600000000007, 0.00010918000000000039, 0.00010918100000000333, 0.00010883299999999915, 0.00010876400000000078, 0.00010859800000000142, 0.00010876399999999731]</msg>
<status status="PASS" starttime="20201117 14:42:02.197" endtime="20201117 14:42:02.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.192" endtime="20201117 14:42:02.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.202" endtime="20201117 14:42:02.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.206" endtime="20201117 14:42:02.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.204" endtime="20201117 14:42:02.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.201" endtime="20201117 14:42:02.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.826" endtime="20201117 14:42:02.227"></status>
</kw>
<msg timestamp="20201117 14:42:02.227" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.236" endtime="20201117 14:42:02.257"></status>
</kw>
<msg timestamp="20201117 14:42:02.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.234" endtime="20201117 14:42:02.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.258" endtime="20201117 14:42:02.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.261" endtime="20201117 14:42:02.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.231" endtime="20201117 14:42:02.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.229" endtime="20201117 14:42:02.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.271" endtime="20201117 14:42:02.557"></status>
</kw>
<msg timestamp="20201117 14:42:02.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.269" endtime="20201117 14:42:02.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.561" endtime="20201117 14:42:02.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.570" endtime="20201117 14:42:02.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.266" endtime="20201117 14:42:02.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.264" endtime="20201117 14:42:02.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.577" level="INFO">${RESULT} = [{'time': 0.022710403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010897199999999885, 'source_diff': 0.00010897199999999885}, {'time': 0.022836431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:02.573" endtime="20201117 14:42:02.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:02.578" endtime="20201117 14:42:02.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.595" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.594" endtime="20201117 14:42:02.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.598" level="INFO">VALUE: [0.00010897199999999885, 0.00010909800000000192, 0.00010841699999999954, 0.00010931900000000008, 0.00010926400000000128, 0.00010880599999999949, 0.00010909699999999897, 0.00010876400000000078, 0.00010875000000000121, 0.00010843100000000258, 0.00010901399999999756, 0.00010876400000000078, 0.00010894499999999918, 0.00010937500000000183, 0.00010894399999999971, 0.00010933299999999965, 0.00010893099999999961, 0.00010901400000000103, 0.0001090699999999993, 0.00010909799999999845, 0.00010875000000000121, 0.00010911100000000201, 0.00010891700000000004, 0.00010868099999999936, 0.00010898600000000189, 0.00010883299999999915, 0.00010861199999999752, 0.00010908399999999888, 0.00010924999999999824, 0.00010859699999999847, 0.00010874999999999774, 0.00010843000000000311, 0.00010933299999999965, 0.00010893099999999961, 0.0001088340000000021, 0.00010926399999999781, 0.00010893000000000014, 0.00010898600000000189, 0.00010841600000000007, 0.00010887499999999786, 0.00010893099999999961, 0.00010884700000000219, 0.00010841699999999954, 0.00010897300000000179, 0.00010927700000000137, 0.00010877700000000087, 0.00010844399999999921, 0.00010867999999999989, 0.00010866699999999979, 0.00010919499999999943]</msg>
<status status="PASS" starttime="20201117 14:42:02.596" endtime="20201117 14:42:02.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.592" endtime="20201117 14:42:02.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.601" endtime="20201117 14:42:02.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:02.605" endtime="20201117 14:42:02.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.603" endtime="20201117 14:42:02.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.599" endtime="20201117 14:42:02.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.228" endtime="20201117 14:42:02.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.825" endtime="20201117 14:42:02.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:01.824" endtime="20201117 14:42:02.626"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.628" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.637" endtime="20201117 14:42:02.657"></status>
</kw>
<msg timestamp="20201117 14:42:02.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.635" endtime="20201117 14:42:02.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:02.659" endtime="20201117 14:42:02.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.661" endtime="20201117 14:42:02.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.633" endtime="20201117 14:42:02.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.630" endtime="20201117 14:42:02.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.671" endtime="20201117 14:42:02.959"></status>
</kw>
<msg timestamp="20201117 14:42:02.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.669" endtime="20201117 14:42:02.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024711611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024821028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:02.963" endtime="20201117 14:42:02.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:02.971" endtime="20201117 14:42:02.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.666" endtime="20201117 14:42:02.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.665" endtime="20201117 14:42:02.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:02.979" level="INFO">${RESULT} = [{'time': 0.024821028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010941699999999707, 'source_diff': 0.00010941699999999707}, {'time': 0.024950028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:02.975" endtime="20201117 14:42:02.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:02.992" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:02.980" endtime="20201117 14:42:02.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.997" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:02.996" endtime="20201117 14:42:02.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:02.999" level="INFO">VALUE: [0.00010941699999999707, 0.00011026399999999881, 0.00010961100000000251, 0.00010938899999999793, 0.00010974999999999874, 0.00010949999999999849, 0.00010994400000000071, 0.00010984699999999972, 0.00011009699999999997, 0.00011027799999999838, 0.00010990300000000147, 0.00010968100000000036, 0.00010951300000000205, 0.00010959699999999947, 0.00010954200000000067, 0.00010961100000000251, 0.0001098890000000019, 0.00010998599999999942, 0.0001102220000000001, 0.00011018099999999739, 0.00010961100000000251, 0.00011006899999999736, 0.00011006900000000083, 0.00011004100000000169, 0.00010991699999999757, 0.00010948599999999892, 0.00011029200000000142, 0.00010976399999999831, 0.00010961099999999904, 0.00011009699999999997, 0.00011013900000000215, 0.00011027799999999838, 0.00010955599999999677, 0.00010940300000000097, 0.00011019500000000043, 0.0001098340000000031, 0.00010944400000000021, 0.00011033400000000013, 0.00010943000000000064, 0.00010984699999999972, 0.00011024999999999924, 0.00010959699999999947, 0.00010991699999999757, 0.00010951400000000153, 0.00011011200000000249, 0.00010959799999999895, 0.00010993000000000114, 0.00011001399999999856, 0.00011012499999999911, 0.00010991699999999757]</msg>
<status status="PASS" starttime="20201117 14:42:02.998" endtime="20201117 14:42:03.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.993" endtime="20201117 14:42:03.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.003" endtime="20201117 14:42:03.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.006" endtime="20201117 14:42:03.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.005" endtime="20201117 14:42:03.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.001" endtime="20201117 14:42:03.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.629" endtime="20201117 14:42:03.027"></status>
</kw>
<msg timestamp="20201117 14:42:03.027" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.036" endtime="20201117 14:42:03.056"></status>
</kw>
<msg timestamp="20201117 14:42:03.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.034" endtime="20201117 14:42:03.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.058" endtime="20201117 14:42:03.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.060" endtime="20201117 14:42:03.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.032" endtime="20201117 14:42:03.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.030" endtime="20201117 14:42:03.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.070" endtime="20201117 14:42:03.357"></status>
</kw>
<msg timestamp="20201117 14:42:03.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.068" endtime="20201117 14:42:03.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.361" endtime="20201117 14:42:03.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.370" endtime="20201117 14:42:03.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.066" endtime="20201117 14:42:03.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.064" endtime="20201117 14:42:03.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.377" level="INFO">${RESULT} = [{'time': 0.022320958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010947199999999935, 'source_diff': 0.00010947199999999935}, {'time': 0.022449986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:03.374" endtime="20201117 14:42:03.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:03.378" endtime="20201117 14:42:03.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.395" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.394" endtime="20201117 14:42:03.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.398" level="INFO">VALUE: [0.00010947199999999935, 0.00010961100000000251, 0.00011011099999999954, 0.00010976399999999831, 0.00011026400000000228, 0.0001102220000000001, 0.00010993100000000061, 0.00010951400000000153, 0.00010991600000000157, 0.00011016600000000182, 0.00010948599999999892, 0.00010977800000000135, 0.00010943100000000011, 0.00010965300000000122, 0.00011033400000000013, 0.00011026399999999881, 0.00010941600000000107, 0.00010968000000000089, 0.00010961099999999904, 0.00010968000000000089, 0.00011018099999999739, 0.00010983300000000015, 0.00010975000000000221, 0.0001097769999999984, 0.00010941600000000107, 0.00010952799999999763, 0.00010940300000000097, 0.00010988899999999843, 0.00011026400000000228, 0.00010994500000000018, 0.00011004200000000117, 0.00011026399999999881, 0.00011026399999999881, 0.00011011099999999954, 0.00011026400000000228, 0.0001100830000000004, 0.00010943100000000011, 0.00011030600000000099, 0.00011012499999999911, 0.00010958399999999938, 0.0001095699999999998, 0.00011026299999999933, 0.00010991600000000157, 0.00011030500000000151, 0.00010959699999999947, 0.00010963900000000165, 0.00010976399999999831, 0.00010976399999999831, 0.00011009800000000292, 0.00011026299999999933]</msg>
<status status="PASS" starttime="20201117 14:42:03.396" endtime="20201117 14:42:03.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.391" endtime="20201117 14:42:03.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.401" endtime="20201117 14:42:03.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.405" endtime="20201117 14:42:03.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.403" endtime="20201117 14:42:03.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.399" endtime="20201117 14:42:03.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.028" endtime="20201117 14:42:03.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.627" endtime="20201117 14:42:03.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:02.626" endtime="20201117 14:42:03.426"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.428" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.437" endtime="20201117 14:42:03.457"></status>
</kw>
<msg timestamp="20201117 14:42:03.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.435" endtime="20201117 14:42:03.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.459" endtime="20201117 14:42:03.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.462" endtime="20201117 14:42:03.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.432" endtime="20201117 14:42:03.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.430" endtime="20201117 14:42:03.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.472" endtime="20201117 14:42:03.759"></status>
</kw>
<msg timestamp="20201117 14:42:03.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.470" endtime="20201117 14:42:03.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025005583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.763" endtime="20201117 14:42:03.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.772" endtime="20201117 14:42:03.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.467" endtime="20201117 14:42:03.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.465" endtime="20201117 14:42:03.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:03.779" level="INFO">${RESULT} = [{'time': 0.025005583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011063900000000265, 'source_diff': 0.00011063900000000265}, {'time': 0.025132639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:03.775" endtime="20201117 14:42:03.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:03.793" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:03.780" endtime="20201117 14:42:03.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.798" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:03.797" endtime="20201117 14:42:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.801" level="INFO">VALUE: [0.00011063900000000265, 0.000110902999999999, 0.00011086100000000029, 0.00011111100000000054, 0.00011054200000000167, 0.00011126399999999981, 0.00011109800000000045, 0.00011111099999999707, 0.00011109700000000097, 0.0001110969999999975, 0.00011109700000000097, 0.00011044499999999721, 0.00011066700000000179, 0.00011098600000000042, 0.0001105700000000008, 0.00011122199999999763, 0.00011126399999999981, 0.00011061100000000004, 0.0001110969999999975, 0.00011126399999999981, 0.00011093100000000161, 0.00011051399999999906, 0.00011079099999999897, 0.00011074999999999974, 0.00011125000000000024, 0.00011127799999999938, 0.00011070800000000103, 0.00011059700000000047, 0.00011093099999999814, 0.0001108480000000002, 0.00011045800000000078, 0.00011136100000000079, 0.00011067999999999842, 0.00011093000000000214, 0.00011095800000000128, 0.00011076399999999931, 0.00011133299999999818, 0.00011094500000000118, 0.00011136200000000027, 0.00011091700000000204, 0.00011130499999999904, 0.0001109159999999991, 0.00011094400000000171, 0.00011126400000000328, 0.00011109700000000097, 0.00011127799999999938, 0.00011101399999999956, 0.00011052799999999863, 0.0001110969999999975, 0.00011044400000000121]</msg>
<status status="PASS" starttime="20201117 14:42:03.799" endtime="20201117 14:42:03.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.794" endtime="20201117 14:42:03.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.804" endtime="20201117 14:42:03.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:03.808" endtime="20201117 14:42:03.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.806" endtime="20201117 14:42:03.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.802" endtime="20201117 14:42:03.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.429" endtime="20201117 14:42:03.829"></status>
</kw>
<msg timestamp="20201117 14:42:03.829" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.837" endtime="20201117 14:42:03.858"></status>
</kw>
<msg timestamp="20201117 14:42:03.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.836" endtime="20201117 14:42:03.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:03.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:03.859" endtime="20201117 14:42:03.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.862" endtime="20201117 14:42:03.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.833" endtime="20201117 14:42:03.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.831" endtime="20201117 14:42:03.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:03.872" endtime="20201117 14:42:04.158"></status>
</kw>
<msg timestamp="20201117 14:42:04.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:03.870" endtime="20201117 14:42:04.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022343097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.163" endtime="20201117 14:42:04.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.171" endtime="20201117 14:42:04.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.868" endtime="20201117 14:42:04.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.866" endtime="20201117 14:42:04.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.178" level="INFO">${RESULT} = [{'time': 0.022343097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011086100000000029, 'source_diff': 0.00011086100000000029}, {'time': 0.022468153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.175" endtime="20201117 14:42:04.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:04.179" endtime="20201117 14:42:04.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.196" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.195" endtime="20201117 14:42:04.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.199" level="INFO">VALUE: [0.00011086100000000029, 0.00011062499999999961, 0.00011090300000000247, 0.00011131999999999809, 0.00011043099999999764, 0.00011050000000000296, 0.00011076299999999983, 0.00011112500000000011, 0.00011093000000000214, 0.00011136099999999732, 0.00011112500000000011, 0.00011093099999999814, 0.00011131999999999809, 0.00011074999999999974, 0.00011059700000000047, 0.0001110969999999975, 0.00011111100000000054, 0.00011076399999999931, 0.00011063899999999918, 0.0001110969999999975, 0.00011109700000000097, 0.00011059799999999995, 0.00011093100000000161, 0.00011067999999999842, 0.00011120800000000153, 0.00011133300000000165, 0.00011044500000000068, 0.0001110280000000026, 0.00011127799999999938, 0.00011076399999999931, 0.00011061100000000004, 0.00011126300000000033, 0.00011124999999999677, 0.00011041600000000207, 0.00011115299999999925, 0.00011129199999999895, 0.00011101399999999956, 0.00011119499999999796, 0.00011076399999999931, 0.00011086100000000029, 0.00011067999999999842, 0.00011108400000000088, 0.00011111100000000054, 0.00011076399999999931, 0.0001110830000000014, 0.00011109799999999698, 0.00011044499999999721, 0.00011051299999999958, 0.00011126299999999686, 0.00011124999999999677]</msg>
<status status="PASS" starttime="20201117 14:42:04.197" endtime="20201117 14:42:04.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.192" endtime="20201117 14:42:04.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.202" endtime="20201117 14:42:04.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.205" endtime="20201117 14:42:04.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.204" endtime="20201117 14:42:04.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.200" endtime="20201117 14:42:04.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.829" endtime="20201117 14:42:04.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.427" endtime="20201117 14:42:04.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:03.426" endtime="20201117 14:42:04.227"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.229" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.238" endtime="20201117 14:42:04.259"></status>
</kw>
<msg timestamp="20201117 14:42:04.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.237" endtime="20201117 14:42:04.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.261" endtime="20201117 14:42:04.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.263" endtime="20201117 14:42:04.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.234" endtime="20201117 14:42:04.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.231" endtime="20201117 14:42:04.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.273" endtime="20201117 14:42:04.559"></status>
</kw>
<msg timestamp="20201117 14:42:04.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025276861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.271" endtime="20201117 14:42:04.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025276861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025388847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.563" endtime="20201117 14:42:04.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.572" endtime="20201117 14:42:04.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.268" endtime="20201117 14:42:04.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.267" endtime="20201117 14:42:04.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.579" level="INFO">${RESULT} = [{'time': 0.025388847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011198599999999795, 'source_diff': 0.00011198599999999795}, {'time': 0.025516847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:04.575" endtime="20201117 14:42:04.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:04.580" endtime="20201117 14:42:04.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.597" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.596" endtime="20201117 14:42:04.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.599" level="INFO">VALUE: [0.00011198599999999795, 0.00011206899999999936, 0.00011161100000000104, 0.0001120830000000024, 0.00011193099999999914, 0.00011201400000000056, 0.0001120969999999985, 0.00011227800000000038, 0.00011168000000000289, 0.00011233299999999918, 0.00011226399999999734, 0.00011231999999999909, 0.00011161099999999757, 0.00011173600000000117, 0.00011143100000000211, 0.00011219399999999949, 0.00011147200000000135, 0.00011193000000000314, 0.00011234700000000222, 0.00011226400000000081, 0.00011200000000000099, 0.00011180599999999902, 0.00011209800000000145, 0.00011154099999999972, 0.00011159700000000147, 0.00011142999999999917, 0.00011201399999999709, 0.00011140300000000297, 0.00011184700000000172, 0.00011227800000000038, 0.00011209700000000197, 0.00011191700000000304, 0.00011201399999999709, 0.00011161099999999757, 0.0001120969999999985, 0.00011176400000000031, 0.00011226400000000081, 0.0001114029999999995, 0.00011168099999999889, 0.00011195899999999828, 0.00011208299999999893, 0.00011151300000000058, 0.00011194399999999924, 0.00011184699999999825, 0.00011233299999999918, 0.00011176399999999684, 0.000111596999999998, 0.00011225000000000124, 0.00011184699999999825, 0.0001120969999999985]</msg>
<status status="PASS" starttime="20201117 14:42:04.598" endtime="20201117 14:42:04.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.593" endtime="20201117 14:42:04.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.603" endtime="20201117 14:42:04.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:04.606" endtime="20201117 14:42:04.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.605" endtime="20201117 14:42:04.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.601" endtime="20201117 14:42:04.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.230" endtime="20201117 14:42:04.634"></status>
</kw>
<msg timestamp="20201117 14:42:04.634" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.643" endtime="20201117 14:42:04.663"></status>
</kw>
<msg timestamp="20201117 14:42:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.641" endtime="20201117 14:42:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:04.664" endtime="20201117 14:42:04.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.667" endtime="20201117 14:42:04.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.639" endtime="20201117 14:42:04.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.636" endtime="20201117 14:42:04.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.676" endtime="20201117 14:42:04.963"></status>
</kw>
<msg timestamp="20201117 14:42:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.675" endtime="20201117 14:42:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:04.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:04.967" endtime="20201117 14:42:04.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:04.975" endtime="20201117 14:42:04.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.672" endtime="20201117 14:42:04.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.670" endtime="20201117 14:42:04.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:04.982" level="INFO">${RESULT} = [{'time': 0.022479514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011163900000000018, 'source_diff': 0.00011163900000000018}, {'time': 0.0226085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:04.979" endtime="20201117 14:42:04.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:04.996" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:04.983" endtime="20201117 14:42:04.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.001" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:42:04.999" endtime="20201117 14:42:05.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.003" level="INFO">VALUE: [0.00011163900000000018, 0.00011225000000000124, 0.00011169499999999846, 0.00011194499999999871, 0.0001123480000000017, 0.00011187500000000086, 0.00011184700000000172, 0.00011137500000000036, 0.00011211100000000154, 0.00011150000000000049, 0.00011225000000000124, 0.00011141699999999907, 0.00011218100000000286, 0.00011163900000000018, 0.00011201399999999709, 0.00011192999999999967, 0.00011151400000000006, 0.00011176400000000031, 0.0001114029999999995, 0.00011234699999999875, 0.00011161200000000052, 0.0001115700000000018, 0.00011225000000000124, 0.00011159700000000147, 0.00011141700000000254, 0.00011190200000000053, 0.0001117220000000016, 0.00011209799999999798, 0.00011211200000000102, 0.00011143099999999864, 0.00011162499999999714, 0.00011150000000000049, 0.00011232000000000256, 0.00011151400000000006, 0.000111903, 0.00011236100000000179, 0.00011163900000000018, 0.00011161100000000104, 0.0001119160000000001, 0.00011195800000000228, 0.00011142999999999917, 0.00011161100000000104, 0.00011147200000000135, 0.00011233299999999918, 0.00011173600000000117, 0.00011193100000000261, 0.00011201300000000108, 0.00011211100000000154, 0.00011209700000000197, 0.00011176400000000031]</msg>
<status status="PASS" starttime="20201117 14:42:05.002" endtime="20201117 14:42:05.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.997" endtime="20201117 14:42:05.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.007" endtime="20201117 14:42:05.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.010" endtime="20201117 14:42:05.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.009" endtime="20201117 14:42:05.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.005" endtime="20201117 14:42:05.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.635" endtime="20201117 14:42:05.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.228" endtime="20201117 14:42:05.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:04.227" endtime="20201117 14:42:05.032"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.034" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.043" endtime="20201117 14:42:05.063"></status>
</kw>
<msg timestamp="20201117 14:42:05.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.041" endtime="20201117 14:42:05.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.065" endtime="20201117 14:42:05.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.068" endtime="20201117 14:42:05.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.038" endtime="20201117 14:42:05.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.036" endtime="20201117 14:42:05.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.077" endtime="20201117 14:42:05.364"></status>
</kw>
<msg timestamp="20201117 14:42:05.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.076" endtime="20201117 14:42:05.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.368" endtime="20201117 14:42:05.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.377" endtime="20201117 14:42:05.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.073" endtime="20201117 14:42:05.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.071" endtime="20201117 14:42:05.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.384" level="INFO">${RESULT} = [{'time': 0.025038028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001127359999999987, 'source_diff': 0.0001127359999999987}, {'time': 0.025175042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.380" endtime="20201117 14:42:05.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.399" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:05.385" endtime="20201117 14:42:05.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.403" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.402" endtime="20201117 14:42:05.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.406" level="INFO">VALUE: [0.0001127359999999987, 0.00011275000000000174, 0.00011275000000000174, 0.0001124160000000006, 0.00011316599999999788, 0.00011284700000000272, 0.00011241700000000007, 0.00011251399999999759, 0.00011312499999999864, 0.00011309800000000245, 0.00011261099999999857, 0.000112596999999999, 0.0001130969999999995, 0.0001130969999999995, 0.00011258299999999943, 0.00011276399999999784, 0.0001130969999999995, 0.00011276400000000131, 0.00011293100000000014, 0.00011308399999999941, 0.00011261099999999857, 0.0001129299999999972, 0.00011268000000000042, 0.00011249999999999802, 0.00011241700000000007, 0.00011318100000000039, 0.00011320800000000006, 0.00011266599999999738, 0.00011319399999999702, 0.0001125420000000002, 0.00011293000000000067, 0.00011268099999999989, 0.00011283299999999968, 0.00011243099999999964, 0.00011302699999999818, 0.0001124160000000006, 0.00011333300000000018, 0.00011326399999999834, 0.00011258299999999943, 0.00011291700000000057, 0.00011333399999999966, 0.00011324999999999877, 0.00011259800000000195, 0.00011258299999999943, 0.00011261099999999857, 0.00011324999999999877, 0.00011259700000000247, 0.00011258299999999596, 0.00011326400000000181, 0.00011293100000000361]</msg>
<status status="PASS" starttime="20201117 14:42:05.404" endtime="20201117 14:42:05.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.399" endtime="20201117 14:42:05.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.410" endtime="20201117 14:42:05.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.413" endtime="20201117 14:42:05.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.412" endtime="20201117 14:42:05.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.408" endtime="20201117 14:42:05.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.035" endtime="20201117 14:42:05.434"></status>
</kw>
<msg timestamp="20201117 14:42:05.434" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.443" endtime="20201117 14:42:05.463"></status>
</kw>
<msg timestamp="20201117 14:42:05.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.441" endtime="20201117 14:42:05.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.465" endtime="20201117 14:42:05.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.467" endtime="20201117 14:42:05.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.439" endtime="20201117 14:42:05.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.436" endtime="20201117 14:42:05.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.477" endtime="20201117 14:42:05.765"></status>
</kw>
<msg timestamp="20201117 14:42:05.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.475" endtime="20201117 14:42:05.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.769" endtime="20201117 14:42:05.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.777" endtime="20201117 14:42:05.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.473" endtime="20201117 14:42:05.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.471" endtime="20201117 14:42:05.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:05.784" level="INFO">${RESULT} = [{'time': 0.022394292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001127229999999986, 'source_diff': 0.0001127229999999986}, {'time': 0.022527319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:05.781" endtime="20201117 14:42:05.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:05.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:05.785" endtime="20201117 14:42:05.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.803" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:42:05.802" endtime="20201117 14:42:05.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.805" level="INFO">VALUE: [0.0001127229999999986, 0.00011270799999999956, 0.00011258299999999943, 0.00011276399999999784, 0.00011243000000000017, 0.00011334699999999975, 0.00011243099999999964, 0.00011301400000000156, 0.00011258399999999891, 0.00011283399999999916, 0.00011286100000000229, 0.00011293000000000067, 0.00011302799999999766, 0.00011279200000000045, 0.00011248699999999792, 0.00011251399999999759, 0.000112596999999999, 0.0001128480000000022, 0.00011319400000000049, 0.00011316600000000135, 0.00011301399999999809, 0.00011295799999999981, 0.00011301399999999809, 0.00011276400000000131, 0.00011323600000000267, 0.0001124030000000005, 0.00011268099999999989, 0.00011266600000000085, 0.00011301399999999809, 0.00011258299999999943, 0.00011326400000000181, 0.00011302800000000113, 0.00011244499999999921, 0.00011252800000000063, 0.00011331900000000061, 0.00011319400000000049, 0.00011301399999999809, 0.00011274999999999827, 0.00011244399999999974, 0.00011318100000000039, 0.00011251400000000106, 0.00011311200000000202, 0.00011275000000000174, 0.00011275000000000174, 0.00011299999999999852, 0.00011334700000000322, 0.00011326399999999834, 0.00011244499999999921, 0.00011276400000000131, 0.00011251399999999759]</msg>
<status status="PASS" starttime="20201117 14:42:05.804" endtime="20201117 14:42:05.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.799" endtime="20201117 14:42:05.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.809" endtime="20201117 14:42:05.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.812" endtime="20201117 14:42:05.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.811" endtime="20201117 14:42:05.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.807" endtime="20201117 14:42:05.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.435" endtime="20201117 14:42:05.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.033" endtime="20201117 14:42:05.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.032" endtime="20201117 14:42:05.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:40:45.956" endtime="20201117 14:42:05.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.842" endtime="20201117 14:42:05.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.841" endtime="20201117 14:42:05.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.839" endtime="20201117 14:42:05.863"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:40:45.866" endtime="20201117 14:42:05.863" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:05.871" endtime="20201117 14:42:05.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.870" endtime="20201117 14:42:05.891"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.905" endtime="20201117 14:42:05.921"></status>
</kw>
<msg timestamp="20201117 14:42:05.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.903" endtime="20201117 14:42:05.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.922" endtime="20201117 14:42:05.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:42:05.925" endtime="20201117 14:42:05.927"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.901" endtime="20201117 14:42:05.928"></status>
</kw>
<status status="FAIL" starttime="20201117 14:42:05.898" endtime="20201117 14:42:05.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.897" endtime="20201117 14:42:05.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:42:05.933" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:42:05.932" endtime="20201117 14:42:05.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.930" endtime="20201117 14:42:05.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.896" endtime="20201117 14:42:05.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.895" endtime="20201117 14:42:05.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.935" endtime="20201117 14:42:05.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.894" endtime="20201117 14:42:05.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.892" endtime="20201117 14:42:05.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.868" endtime="20201117 14:42:05.938"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.942" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.951" endtime="20201117 14:42:05.968"></status>
</kw>
<msg timestamp="20201117 14:42:05.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.949" endtime="20201117 14:42:05.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:05.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:05.970" endtime="20201117 14:42:05.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.972" endtime="20201117 14:42:05.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.946" endtime="20201117 14:42:05.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.944" endtime="20201117 14:42:05.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:05.982" endtime="20201117 14:42:06.267"></status>
</kw>
<msg timestamp="20201117 14:42:06.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072796944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072838444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:05.980" endtime="20201117 14:42:06.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072796944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072838444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.272" endtime="20201117 14:42:06.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.280" endtime="20201117 14:42:06.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.977" endtime="20201117 14:42:06.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.975" endtime="20201117 14:42:06.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.287" level="INFO">${RESULT} = [{'time': 0.072838444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.072887444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.284" endtime="20201117 14:42:06.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.302" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:06.288" endtime="20201117 14:42:06.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.306" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.305" endtime="20201117 14:42:06.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.310" level="INFO">VALUE: [4.149999999999987e-05, 4.149999999999987e-05, 4.1638999999996096e-05, 4.148599999999336e-05, 4.083299999999013e-05, 4.116599999999526e-05, 4.166599999999576e-05, 4.147200000000073e-05, 4.083299999999013e-05, 4.116700000000861e-05, 4.098600000000674e-05, 4.126399999999919e-05, 4.172199999999404e-05, 4.116700000000861e-05, 4.102799999999851e-05, 4.102799999999851e-05, 4.098600000000674e-05, 4.15139999999925e-05, 4.083400000000348e-05, 4.11939999999944e-05, 4.1166999999994736e-05, 4.118000000000177e-05, 4.168000000000227e-05, 4.099999999999937e-05, 4.1013999999992e-05, 4.149999999999987e-05, 4.116599999999526e-05, 4.166599999999576e-05, 4.0818999999997496e-05, 4.151400000000638e-05, 4.1209000000000384e-05, 4.0818999999997496e-05, 4.1082999999997316e-05, 4.0846999999996636e-05, 4.1569000000005185e-05, 4.1361000000003645e-05, 4.1346999999997136e-05, 4.168099999998787e-05, 4.151400000000638e-05, 4.098599999999286e-05, 4.13339999999901e-05, 4.1513000000006905e-05, 4.148700000000671e-05, 4.14580000000081e-05, 4.0917000000001424e-05, 4.166599999999576e-05, 4.118000000000177e-05, 4.1333000000004505e-05, 4.118000000000177e-05, 4.0874999999995776e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.308" endtime="20201117 14:42:06.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.303" endtime="20201117 14:42:06.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.313" endtime="20201117 14:42:06.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.316" endtime="20201117 14:42:06.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.315" endtime="20201117 14:42:06.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.311" endtime="20201117 14:42:06.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.942" endtime="20201117 14:42:06.337"></status>
</kw>
<msg timestamp="20201117 14:42:06.337" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.346" endtime="20201117 14:42:06.363"></status>
</kw>
<msg timestamp="20201117 14:42:06.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.345" endtime="20201117 14:42:06.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.365" endtime="20201117 14:42:06.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.367" endtime="20201117 14:42:06.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.342" endtime="20201117 14:42:06.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.340" endtime="20201117 14:42:06.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.377" endtime="20201117 14:42:06.662"></status>
</kw>
<msg timestamp="20201117 14:42:06.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.375" endtime="20201117 14:42:06.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022723417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.666" endtime="20201117 14:42:06.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.674" endtime="20201117 14:42:06.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.373" endtime="20201117 14:42:06.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.371" endtime="20201117 14:42:06.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:06.682" level="INFO">${RESULT} = [{'time': 0.022764917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.022812917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:06.678" endtime="20201117 14:42:06.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:06.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:06.683" endtime="20201117 14:42:06.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.701" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:42:06.700" endtime="20201117 14:42:06.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.704" level="INFO">VALUE: [4.149999999999987e-05, 4.1652999999999135e-05, 4.084799999999958e-05, 4.149999999999987e-05, 4.11660000000022e-05, 4.1347000000000605e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4.169399999999837e-05, 4.105600000000112e-05, 4.119400000000134e-05, 4.1166999999998205e-05, 4.09859999999998e-05, 4.0819000000000966e-05, 4.1166999999998205e-05, 4.0931000000000994e-05, 4.1166999999998205e-05, 4.1666999999998705e-05, 4.133400000000051e-05, 4.151399999999944e-05, 4.101399999999894e-05, 4.134800000000008e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.168000000000227e-05, 4.169399999999837e-05, 4.105600000000112e-05, 4.1333000000001036e-05, 4.0833000000000536e-05, 4.119399999999787e-05, 4.1333000000001036e-05, 4.102800000000198e-05, 4.149999999999987e-05, 4.1346999999997136e-05, 4.152799999999901e-05, 4.149999999999987e-05, 4.1181000000001244e-05, 4.099999999999937e-05, 4.1681000000001744e-05, 4.1167000000001674e-05, 4.151399999999944e-05, 4.083400000000001e-05, 4.099999999999937e-05, 4.1125000000002965e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.16799999999988e-05, 4.166599999999923e-05, 4.151399999999944e-05]</msg>
<status status="PASS" starttime="20201117 14:42:06.702" endtime="20201117 14:42:06.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.697" endtime="20201117 14:42:06.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.707" endtime="20201117 14:42:06.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:06.711" endtime="20201117 14:42:06.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.709" endtime="20201117 14:42:06.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.705" endtime="20201117 14:42:06.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.338" endtime="20201117 14:42:06.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.940" endtime="20201117 14:42:06.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.939" endtime="20201117 14:42:06.732"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.734" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.743" endtime="20201117 14:42:06.759"></status>
</kw>
<msg timestamp="20201117 14:42:06.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.741" endtime="20201117 14:42:06.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:06.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:06.761" endtime="20201117 14:42:06.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.763" endtime="20201117 14:42:06.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.739" endtime="20201117 14:42:06.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.736" endtime="20201117 14:42:06.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:06.773" endtime="20201117 14:42:07.061"></status>
</kw>
<msg timestamp="20201117 14:42:07.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024978153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:06.771" endtime="20201117 14:42:07.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024978153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.065" endtime="20201117 14:42:07.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.074" endtime="20201117 14:42:07.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.768" endtime="20201117 14:42:07.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.767" endtime="20201117 14:42:07.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.081" level="INFO">${RESULT} = [{'time': 0.025018889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.073599999999955e-05, 'source_diff': 4.073599999999955e-05}, {'time': 0.025071889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.078" endtime="20201117 14:42:07.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.097" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:07.082" endtime="20201117 14:42:07.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.102" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.100" endtime="20201117 14:42:07.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.104" level="INFO">VALUE: [4.073599999999955e-05, 4.1138999999999065e-05, 4.151399999999944e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.1568999999998246e-05, 4.172200000000098e-05, 4.149999999999987e-05, 4.1473000000000204e-05, 4.122199999999701e-05, 4.1361000000000175e-05, 4.099999999999937e-05, 4.1347000000000605e-05, 4.1110999999999925e-05, 4.1347000000000605e-05, 4.119400000000134e-05, 4.1652999999999135e-05, 4.0888999999998815e-05, 4.1167000000001674e-05, 4.14860000000003e-05, 4.0847000000000105e-05, 4.097200000000023e-05, 4.1195000000000814e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.123600000000005e-05, 4.1680999999998275e-05, 4.1389000000002785e-05, 4.148599999999683e-05, 4.133400000000051e-05, 4.1512999999999967e-05, 4.1138999999999065e-05, 4.097200000000023e-05, 4.1290999999998856e-05, 4.0860999999999675e-05, 4.166599999999923e-05, 4.154199999999858e-05, 4.1332999999997566e-05, 4.124999999999962e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.14860000000003e-05, 4.1666999999998705e-05, 4.1667000000002175e-05, 4.1667000000002175e-05, 4.1568999999998246e-05, 4.083400000000001e-05, 4.084800000000305e-05, 4.1681000000001744e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.103" endtime="20201117 14:42:07.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.098" endtime="20201117 14:42:07.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.107" endtime="20201117 14:42:07.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.111" endtime="20201117 14:42:07.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.109" endtime="20201117 14:42:07.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.106" endtime="20201117 14:42:07.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.735" endtime="20201117 14:42:07.132"></status>
</kw>
<msg timestamp="20201117 14:42:07.132" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.141" endtime="20201117 14:42:07.157"></status>
</kw>
<msg timestamp="20201117 14:42:07.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.139" endtime="20201117 14:42:07.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.159" endtime="20201117 14:42:07.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.161" endtime="20201117 14:42:07.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.136" endtime="20201117 14:42:07.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.134" endtime="20201117 14:42:07.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.171" endtime="20201117 14:42:07.458"></status>
</kw>
<msg timestamp="20201117 14:42:07.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.169" endtime="20201117 14:42:07.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.462" endtime="20201117 14:42:07.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.471" endtime="20201117 14:42:07.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.166" endtime="20201117 14:42:07.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.165" endtime="20201117 14:42:07.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.478" level="INFO">${RESULT} = [{'time': 0.022271153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1346999999997136e-05, 'source_diff': 4.1346999999997136e-05}, {'time': 0.022318139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:07.475" endtime="20201117 14:42:07.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:07.479" endtime="20201117 14:42:07.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.497" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.496" endtime="20201117 14:42:07.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.499" level="INFO">VALUE: [4.1346999999997136e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1430999999998025e-05, 4.077800000000173e-05, 4.0945000000000564e-05, 4.0860999999999675e-05, 4.102800000000198e-05, 4.151399999999944e-05, 4.149999999999987e-05, 4.1167000000001674e-05, 4.082000000000044e-05, 4.1541000000002576e-05, 4.149999999999987e-05, 4.152800000000248e-05, 4.1388999999999315e-05, 4.1124999999999495e-05, 4.151400000000291e-05, 4.1332999999997566e-05, 4.156999999999772e-05, 4.14860000000003e-05, 4.1347000000000605e-05, 4.151399999999944e-05, 4.124999999999962e-05, 4.1374999999999745e-05, 4.1332999999997566e-05, 4.101399999999894e-05, 4.147200000000073e-05, 4.084800000000305e-05, 4.149999999999987e-05, 4.169400000000184e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.0860999999999675e-05, 4.166599999999923e-05, 4.0847000000000105e-05, 4.0833000000000536e-05, 4.102799999999851e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.1652999999999135e-05, 4.0833000000000536e-05, 4.1666999999998705e-05, 4.1181000000001244e-05, 4.1180999999997775e-05, 4.1166999999998205e-05, 4.09859999999998e-05, 4.1181000000001244e-05, 4.082000000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.498" endtime="20201117 14:42:07.500"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.493" endtime="20201117 14:42:07.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.503" endtime="20201117 14:42:07.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.506" endtime="20201117 14:42:07.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.505" endtime="20201117 14:42:07.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.501" endtime="20201117 14:42:07.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.133" endtime="20201117 14:42:07.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.733" endtime="20201117 14:42:07.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:06.732" endtime="20201117 14:42:07.527"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.530" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.539" endtime="20201117 14:42:07.555"></status>
</kw>
<msg timestamp="20201117 14:42:07.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.537" endtime="20201117 14:42:07.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.557" endtime="20201117 14:42:07.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.560" endtime="20201117 14:42:07.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.534" endtime="20201117 14:42:07.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.532" endtime="20201117 14:42:07.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.570" endtime="20201117 14:42:07.857"></status>
</kw>
<msg timestamp="20201117 14:42:07.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.568" endtime="20201117 14:42:07.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.861" endtime="20201117 14:42:07.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.870" endtime="20201117 14:42:07.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.565" endtime="20201117 14:42:07.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.563" endtime="20201117 14:42:07.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:07.877" level="INFO">${RESULT} = [{'time': 0.025461681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.025516681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:07.873" endtime="20201117 14:42:07.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:07.891" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:07.878" endtime="20201117 14:42:07.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.895" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:07.894" endtime="20201117 14:42:07.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.898" level="INFO">VALUE: [4.149999999999987e-05, 4.149999999999987e-05, 4.168000000000227e-05, 4.166599999999923e-05, 4.157000000000119e-05, 4.0889000000002285e-05, 4.1332999999997566e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.09859999999998e-05, 4.150000000000334e-05, 4.079199999999783e-05, 4.149999999999987e-05, 4.1167000000001674e-05, 4.1666999999998705e-05, 4.149999999999987e-05, 4.1680999999998275e-05, 4.149999999999987e-05, 4.097200000000023e-05, 4.1445000000001064e-05, 4.083400000000001e-05, 4.1180999999997775e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.120800000000091e-05, 4.0847000000000105e-05, 4.168000000000227e-05, 4.166599999999923e-05, 4.158400000000076e-05, 4.1319000000001466e-05, 4.1347000000000605e-05, 4.1166999999998205e-05, 4.0847000000000105e-05, 4.091599999999848e-05, 4.0832999999997066e-05, 4.147200000000073e-05, 4.0833000000000536e-05, 4.0847000000000105e-05, 4.1181000000001244e-05, 4.1152999999998635e-05, 4.151399999999944e-05, 4.1374999999999745e-05, 4.083400000000001e-05, 4.116599999999873e-05, 4.1667000000002175e-05, 4.1347000000000605e-05, 4.0805000000001396e-05, 4.168000000000227e-05, 4.102799999999851e-05, 4.1333000000001036e-05]</msg>
<status status="PASS" starttime="20201117 14:42:07.896" endtime="20201117 14:42:07.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.891" endtime="20201117 14:42:07.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.901" endtime="20201117 14:42:07.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:07.905" endtime="20201117 14:42:07.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.903" endtime="20201117 14:42:07.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.899" endtime="20201117 14:42:07.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.531" endtime="20201117 14:42:07.925"></status>
</kw>
<msg timestamp="20201117 14:42:07.926" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.934" endtime="20201117 14:42:07.951"></status>
</kw>
<msg timestamp="20201117 14:42:07.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.933" endtime="20201117 14:42:07.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:07.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:07.952" endtime="20201117 14:42:07.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.955" endtime="20201117 14:42:07.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.930" endtime="20201117 14:42:07.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.928" endtime="20201117 14:42:07.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:07.965" endtime="20201117 14:42:08.252"></status>
</kw>
<msg timestamp="20201117 14:42:08.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:07.963" endtime="20201117 14:42:08.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.256" endtime="20201117 14:42:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.265" endtime="20201117 14:42:08.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.961" endtime="20201117 14:42:08.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.959" endtime="20201117 14:42:08.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.272" level="INFO">${RESULT} = [{'time': 0.022589514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1667000000002175e-05, 'source_diff': 4.1667000000002175e-05}, {'time': 0.022643528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:08.268" endtime="20201117 14:42:08.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.285" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:08.273" endtime="20201117 14:42:08.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.290" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.289" endtime="20201117 14:42:08.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.293" level="INFO">VALUE: [4.1667000000002175e-05, 4.1680999999998275e-05, 4.1166999999998205e-05, 4.136199999999965e-05, 4.101399999999894e-05, 4.133400000000051e-05, 4.1680999999998275e-05, 4.1667000000002175e-05, 4.1332999999997566e-05, 4.166599999999923e-05, 4.151400000000291e-05, 4.1332999999997566e-05, 4.166599999999923e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.1180999999997775e-05, 4.1638999999999565e-05, 4.099999999999937e-05, 4.123600000000005e-05, 4.1347000000000605e-05, 4.1166999999998205e-05, 4.1054999999998176e-05, 4.132000000000094e-05, 4.100000000000284e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1666999999998705e-05, 4.169399999999837e-05, 4.1347000000000605e-05, 4.16799999999988e-05, 4.1333000000001036e-05, 4.166599999999923e-05, 4.0818999999997496e-05, 4.0847000000000105e-05, 4.16799999999988e-05, 4.1347000000000605e-05, 4.1667000000002175e-05, 4.14860000000003e-05, 4.101399999999894e-05, 4.1667000000002175e-05, 4.13059999999979e-05, 4.1138999999999065e-05, 4.151399999999944e-05, 4.099999999999937e-05, 4.0959000000000134e-05, 4.0874999999999245e-05, 4.088800000000281e-05, 4.1681000000001744e-05, 4.1167000000001674e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.291" endtime="20201117 14:42:08.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.286" endtime="20201117 14:42:08.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.296" endtime="20201117 14:42:08.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.299" endtime="20201117 14:42:08.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.298" endtime="20201117 14:42:08.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.294" endtime="20201117 14:42:08.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.926" endtime="20201117 14:42:08.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.529" endtime="20201117 14:42:08.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:07.528" endtime="20201117 14:42:08.321"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.323" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.332" endtime="20201117 14:42:08.349"></status>
</kw>
<msg timestamp="20201117 14:42:08.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.331" endtime="20201117 14:42:08.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.351" endtime="20201117 14:42:08.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.353" endtime="20201117 14:42:08.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.327" endtime="20201117 14:42:08.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.325" endtime="20201117 14:42:08.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.363" endtime="20201117 14:42:08.650"></status>
</kw>
<msg timestamp="20201117 14:42:08.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025731236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.361" endtime="20201117 14:42:08.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025731236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.654" endtime="20201117 14:42:08.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.663" endtime="20201117 14:42:08.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.359" endtime="20201117 14:42:08.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.357" endtime="20201117 14:42:08.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:08.670" level="INFO">${RESULT} = [{'time': 0.025731236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1667000000002175e-05, 'source_diff': 4.1667000000002175e-05}, {'time': 0.025781278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:08.666" endtime="20201117 14:42:08.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:08.685" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:08.671" endtime="20201117 14:42:08.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.689" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:08.688" endtime="20201117 14:42:08.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.692" level="INFO">VALUE: [4.1667000000002175e-05, 4.0860999999999675e-05, 4.1333000000001036e-05, 4.0833000000000536e-05, 4.147200000000073e-05, 4.1333000000001036e-05, 4.173599999999708e-05, 4.1167000000001674e-05, 4.1040999999998606e-05, 4.133400000000051e-05, 4.0860999999999675e-05, 4.1486999999999774e-05, 4.1347000000000605e-05, 4.1291000000002326e-05, 4.094400000000109e-05, 4.166599999999923e-05, 4.115199999999916e-05, 4.168000000000227e-05, 4.0847000000000105e-05, 4.169399999999837e-05, 4.151399999999944e-05, 4.0889000000002285e-05, 4.0833000000000536e-05, 4.1167000000001674e-05, 4.105600000000112e-05, 4.1667000000002175e-05, 4.151399999999944e-05, 4.099999999999937e-05, 4.133400000000051e-05, 4.134800000000008e-05, 4.149999999999987e-05, 4.120800000000091e-05, 4.099999999999937e-05, 4.07920000000013e-05, 4.0889000000002285e-05, 4.166599999999923e-05, 4.16799999999988e-05, 4.101399999999894e-05, 4.116599999999873e-05, 4.1138999999999065e-05, 4.14860000000003e-05, 4.1347000000000605e-05, 4.09859999999998e-05, 4.148599999999683e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.0832999999997066e-05, 4.101399999999894e-05, 4.1695000000001314e-05, 4.082000000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:42:08.691" endtime="20201117 14:42:08.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.686" endtime="20201117 14:42:08.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.695" endtime="20201117 14:42:08.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:08.699" endtime="20201117 14:42:08.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.697" endtime="20201117 14:42:08.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.694" endtime="20201117 14:42:08.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.324" endtime="20201117 14:42:08.720"></status>
</kw>
<msg timestamp="20201117 14:42:08.720" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.729" endtime="20201117 14:42:08.745"></status>
</kw>
<msg timestamp="20201117 14:42:08.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.727" endtime="20201117 14:42:08.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:08.747" endtime="20201117 14:42:08.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.750" endtime="20201117 14:42:08.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.725" endtime="20201117 14:42:08.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.722" endtime="20201117 14:42:08.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:08.759" endtime="20201117 14:42:09.047"></status>
</kw>
<msg timestamp="20201117 14:42:09.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:08.757" endtime="20201117 14:42:09.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.051" endtime="20201117 14:42:09.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.060" endtime="20201117 14:42:09.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.755" endtime="20201117 14:42:09.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.753" endtime="20201117 14:42:09.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.067" level="INFO">${RESULT} = [{'time': 0.022950347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0888999999998815e-05, 'source_diff': 4.0888999999998815e-05}, {'time': 0.022997347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:09.063" endtime="20201117 14:42:09.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.080" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:09.068" endtime="20201117 14:42:09.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.085" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.084" endtime="20201117 14:42:09.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.088" level="INFO">VALUE: [4.0888999999998815e-05, 4.168000000000227e-05, 4.102800000000198e-05, 4.099999999999937e-05, 4.1167000000001674e-05, 4.0847000000000105e-05, 4.1347000000000605e-05, 4.1680999999998275e-05, 4.1318999999997996e-05, 4.126399999999919e-05, 4.131999999999747e-05, 4.077799999999826e-05, 4.101400000000241e-05, 4.0944999999997095e-05, 4.101399999999894e-05, 4.09859999999998e-05, 4.120800000000091e-05, 4.133399999999704e-05, 4.1361000000000175e-05, 4.0860999999999675e-05, 4.1332999999997566e-05, 4.169399999999837e-05, 4.14860000000003e-05, 4.14860000000003e-05, 4.168000000000227e-05, 4.148599999999683e-05, 4.1666999999998705e-05, 4.1166999999998205e-05, 4.144399999999812e-05, 4.0847000000000105e-05, 4.1667000000002175e-05, 4.1195000000000814e-05, 4.1069000000001216e-05, 4.0959000000000134e-05, 4.101399999999894e-05, 4.1139000000002535e-05, 4.1473000000000204e-05, 4.124999999999962e-05, 4.0860999999999675e-05, 4.099999999999937e-05, 4.1666999999998705e-05, 4.11799999999983e-05, 4.1596999999997386e-05, 4.099999999999937e-05, 4.166599999999923e-05, 4.09859999999998e-05, 4.16799999999988e-05, 4.0833000000000536e-05, 4.101399999999894e-05, 4.149999999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.086" endtime="20201117 14:42:09.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.081" endtime="20201117 14:42:09.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.091" endtime="20201117 14:42:09.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.095" endtime="20201117 14:42:09.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.093" endtime="20201117 14:42:09.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.090" endtime="20201117 14:42:09.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.721" endtime="20201117 14:42:09.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.322" endtime="20201117 14:42:09.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:08.321" endtime="20201117 14:42:09.116"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.119" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.127" endtime="20201117 14:42:09.143"></status>
</kw>
<msg timestamp="20201117 14:42:09.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.126" endtime="20201117 14:42:09.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.145" endtime="20201117 14:42:09.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.147" endtime="20201117 14:42:09.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.123" endtime="20201117 14:42:09.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.121" endtime="20201117 14:42:09.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.157" endtime="20201117 14:42:09.444"></status>
</kw>
<msg timestamp="20201117 14:42:09.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.155" endtime="20201117 14:42:09.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024994597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.448" endtime="20201117 14:42:09.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.457" endtime="20201117 14:42:09.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.152" endtime="20201117 14:42:09.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.151" endtime="20201117 14:42:09.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.464" level="INFO">${RESULT} = [{'time': 0.025035403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.080600000000087e-05, 'source_diff': 4.080600000000087e-05}, {'time': 0.025089403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:09.460" endtime="20201117 14:42:09.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:09.465" endtime="20201117 14:42:09.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.482" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.481" endtime="20201117 14:42:09.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.485" level="INFO">VALUE: [4.080600000000087e-05, 4.14860000000003e-05, 4.149999999999987e-05, 4.1110999999999925e-05, 4.1181000000001244e-05, 4.132000000000094e-05, 4.131999999999747e-05, 4.0847000000000105e-05, 4.166599999999923e-05, 4.101400000000241e-05, 4.1624999999999995e-05, 4.149999999999987e-05, 4.1347000000000605e-05, 4.1153000000002105e-05, 4.101400000000241e-05, 4.1166999999998205e-05, 4.0833000000000536e-05, 4.07920000000013e-05, 4.1388999999999315e-05, 4.1526999999999537e-05, 4.1666999999998705e-05, 4.1167000000001674e-05, 4.0847000000000105e-05, 4.1459000000000634e-05, 4.1166999999998205e-05, 4.1512999999999967e-05, 4.1388999999999315e-05, 4.1666999999998705e-05, 4.165199999999966e-05, 4.101399999999894e-05, 4.149999999999987e-05, 4.095800000000066e-05, 4.097200000000023e-05, 4.102800000000198e-05, 4.149999999999987e-05, 4.152799999999901e-05, 4.1222999999999954e-05, 4.1667000000002175e-05, 4.1332999999997566e-05, 4.149999999999987e-05, 4.172199999999751e-05, 4.151399999999944e-05, 4.1680999999998275e-05, 4.1167000000001674e-05, 4.101400000000241e-05, 4.082000000000044e-05, 4.1167000000001674e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.11799999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.483" endtime="20201117 14:42:09.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.478" endtime="20201117 14:42:09.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.489" endtime="20201117 14:42:09.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.492" endtime="20201117 14:42:09.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.491" endtime="20201117 14:42:09.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.487" endtime="20201117 14:42:09.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.119" endtime="20201117 14:42:09.513"></status>
</kw>
<msg timestamp="20201117 14:42:09.513" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.522" endtime="20201117 14:42:09.539"></status>
</kw>
<msg timestamp="20201117 14:42:09.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.520" endtime="20201117 14:42:09.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.540" endtime="20201117 14:42:09.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.543" endtime="20201117 14:42:09.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.518" endtime="20201117 14:42:09.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.516" endtime="20201117 14:42:09.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.552" endtime="20201117 14:42:09.840"></status>
</kw>
<msg timestamp="20201117 14:42:09.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.551" endtime="20201117 14:42:09.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022839542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:09.844" endtime="20201117 14:42:09.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.853" endtime="20201117 14:42:09.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.548" endtime="20201117 14:42:09.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.546" endtime="20201117 14:42:09.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:09.860" level="INFO">${RESULT} = [{'time': 0.022880722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11799999999983e-05, 'source_diff': 4.11799999999983e-05}, {'time': 0.022931694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:09.856" endtime="20201117 14:42:09.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:09.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:09.861" endtime="20201117 14:42:09.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.878" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:42:09.877" endtime="20201117 14:42:09.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.881" level="INFO">VALUE: [4.11799999999983e-05, 4.16799999999988e-05, 4.0819000000000966e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.0860999999999675e-05, 4.1290999999998856e-05, 4.11799999999983e-05, 4.099999999999937e-05, 4.0889000000002285e-05, 4.1333000000001036e-05, 4.130600000000137e-05, 4.0833000000000536e-05, 4.1166999999998205e-05, 4.1055000000001646e-05, 4.079199999999783e-05, 4.120800000000091e-05, 4.098600000000327e-05, 4.149999999999987e-05, 4.134800000000008e-05, 4.099999999999937e-05, 4.1347000000000605e-05, 4.145800000000116e-05, 4.1125000000002965e-05, 4.11799999999983e-05, 4.1138999999999065e-05, 4.099999999999937e-05, 4.1290999999998856e-05, 4.0847000000000105e-05, 4.0832999999997066e-05, 4.101399999999894e-05, 4.1167000000001674e-05, 4.0846999999996636e-05, 4.1333000000001036e-05, 4.149999999999987e-05, 4.150000000000334e-05, 4.101399999999894e-05, 4.133400000000051e-05, 4.1166999999998205e-05, 4.168000000000227e-05, 4.151399999999944e-05, 4.1653000000002605e-05, 4.169399999999837e-05, 4.151399999999944e-05, 4.0847000000000105e-05, 4.150000000000334e-05, 4.1152999999998635e-05, 4.166599999999923e-05, 4.0819000000000966e-05]</msg>
<status status="PASS" starttime="20201117 14:42:09.879" endtime="20201117 14:42:09.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.874" endtime="20201117 14:42:09.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.888" endtime="20201117 14:42:09.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:09.892" endtime="20201117 14:42:09.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.891" endtime="20201117 14:42:09.912"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.887" endtime="20201117 14:42:09.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.514" endtime="20201117 14:42:09.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.117" endtime="20201117 14:42:09.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.117" endtime="20201117 14:42:09.913"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.916" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.925" endtime="20201117 14:42:09.941"></status>
</kw>
<msg timestamp="20201117 14:42:09.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.923" endtime="20201117 14:42:09.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:09.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:09.943" endtime="20201117 14:42:09.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.945" endtime="20201117 14:42:09.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.920" endtime="20201117 14:42:09.947"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.918" endtime="20201117 14:42:09.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:09.955" endtime="20201117 14:42:10.242"></status>
</kw>
<msg timestamp="20201117 14:42:10.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025139667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:09.953" endtime="20201117 14:42:10.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0250985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025139667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:10.246" endtime="20201117 14:42:10.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.255" endtime="20201117 14:42:10.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.950" endtime="20201117 14:42:10.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.948" endtime="20201117 14:42:10.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.262" level="INFO">${RESULT} = [{'time': 0.025139667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1167000000001674e-05, 'source_diff': 4.1167000000001674e-05}, {'time': 0.025191667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:10.259" endtime="20201117 14:42:10.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:10.263" endtime="20201117 14:42:10.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.282" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.281" endtime="20201117 14:42:10.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.285" level="INFO">VALUE: [4.1167000000001674e-05, 4.1653000000002605e-05, 4.083400000000001e-05, 4.083400000000001e-05, 4.169400000000184e-05, 4.0861000000003145e-05, 4.1346999999997136e-05, 4.0819000000000966e-05, 4.165199999999966e-05, 4.149999999999987e-05, 4.1124999999999495e-05, 4.0903000000001855e-05, 4.1347000000000605e-05, 4.0847000000000105e-05, 4.1666999999998705e-05, 4.149999999999987e-05, 4.151400000000291e-05, 4.1652999999999135e-05, 4.100000000000284e-05, 4.099999999999937e-05, 4.14860000000003e-05, 4.1680999999998275e-05, 4.151399999999944e-05, 4.101399999999894e-05, 4.1167000000001674e-05, 4.1152999999998635e-05, 4.0874999999999245e-05, 4.115200000000263e-05, 4.119399999999787e-05, 4.07920000000013e-05, 4.1347000000000605e-05, 4.0833000000000536e-05, 4.1666999999998705e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.1680999999998275e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.1333000000001036e-05, 4.077800000000173e-05, 4.1444999999997595e-05, 4.1666999999998705e-05, 4.1181000000001244e-05, 4.120800000000091e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.082000000000044e-05, 4.14860000000003e-05, 4.0833000000000536e-05, 4.118000000000177e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.283" endtime="20201117 14:42:10.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.278" endtime="20201117 14:42:10.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.288" endtime="20201117 14:42:10.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.292" endtime="20201117 14:42:10.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.290" endtime="20201117 14:42:10.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.287" endtime="20201117 14:42:10.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.917" endtime="20201117 14:42:10.313"></status>
</kw>
<msg timestamp="20201117 14:42:10.313" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.322" endtime="20201117 14:42:10.339"></status>
</kw>
<msg timestamp="20201117 14:42:10.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.320" endtime="20201117 14:42:10.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.340" endtime="20201117 14:42:10.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.343" endtime="20201117 14:42:10.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.318" endtime="20201117 14:42:10.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.315" endtime="20201117 14:42:10.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.352" endtime="20201117 14:42:10.640"></status>
</kw>
<msg timestamp="20201117 14:42:10.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.351" endtime="20201117 14:42:10.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022444056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.644" endtime="20201117 14:42:10.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.652" endtime="20201117 14:42:10.654"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.348" endtime="20201117 14:42:10.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.346" endtime="20201117 14:42:10.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:10.659" level="INFO">${RESULT} = [{'time': 0.022485528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.147200000000073e-05, 'source_diff': 4.147200000000073e-05}, {'time': 0.022536528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:10.656" endtime="20201117 14:42:10.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:10.673" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:10.661" endtime="20201117 14:42:10.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.678" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:42:10.677" endtime="20201117 14:42:10.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.681" level="INFO">VALUE: [4.147200000000073e-05, 4.083400000000001e-05, 4.152799999999901e-05, 4.149999999999987e-05, 4.1430999999998025e-05, 4.133400000000051e-05, 4.122199999999701e-05, 4.169399999999837e-05, 4.11799999999983e-05, 4.149999999999987e-05, 4.1276999999999286e-05, 4.102800000000198e-05, 4.101399999999894e-05, 4.1332999999997566e-05, 4.1681000000001744e-05, 4.1097000000000355e-05, 4.1680999999998275e-05, 4.1652999999999135e-05, 4.132000000000094e-05, 4.131999999999747e-05, 4.0847000000000105e-05, 4.149999999999987e-05, 4.1638999999999565e-05, 4.1166999999998205e-05, 4.133400000000051e-05, 4.101399999999894e-05, 4.099999999999937e-05, 4.07920000000013e-05, 4.1332999999997566e-05, 4.166599999999923e-05, 4.101400000000241e-05, 4.1333000000001036e-05, 4.166599999999923e-05, 4.14860000000003e-05, 4.155599999999815e-05, 4.1333000000001036e-05, 4.1583000000001286e-05, 4.099999999999937e-05, 4.0847000000000105e-05, 4.099999999999937e-05, 4.0832999999997066e-05, 4.1361000000000175e-05, 4.1681000000001744e-05, 4.1666999999998705e-05, 4.1181000000001244e-05, 4.124999999999962e-05, 4.1166999999998205e-05, 4.1347000000000605e-05, 4.1167000000001674e-05, 4.1026999999999036e-05]</msg>
<status status="PASS" starttime="20201117 14:42:10.680" endtime="20201117 14:42:10.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.675" endtime="20201117 14:42:10.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.684" endtime="20201117 14:42:10.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:10.688" endtime="20201117 14:42:10.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.686" endtime="20201117 14:42:10.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.683" endtime="20201117 14:42:10.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.314" endtime="20201117 14:42:10.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.915" endtime="20201117 14:42:10.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:09.914" endtime="20201117 14:42:10.709"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.712" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.720" endtime="20201117 14:42:10.737"></status>
</kw>
<msg timestamp="20201117 14:42:10.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.719" endtime="20201117 14:42:10.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:10.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:10.738" endtime="20201117 14:42:10.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.741" endtime="20201117 14:42:10.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.716" endtime="20201117 14:42:10.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.714" endtime="20201117 14:42:10.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:10.750" endtime="20201117 14:42:11.038"></status>
</kw>
<msg timestamp="20201117 14:42:11.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025499042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025540181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:10.749" endtime="20201117 14:42:11.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025499042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025540181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.042" endtime="20201117 14:42:11.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.051" endtime="20201117 14:42:11.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.746" endtime="20201117 14:42:11.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.744" endtime="20201117 14:42:11.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.058" level="INFO">${RESULT} = [{'time': 0.025540181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1138999999999065e-05, 'source_diff': 4.1138999999999065e-05}, {'time': 0.025585208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:11.055" endtime="20201117 14:42:11.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:11.059" endtime="20201117 14:42:11.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.077" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.076" endtime="20201117 14:42:11.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.079" level="INFO">VALUE: [4.1138999999999065e-05, 4.0889000000002285e-05, 4.1347000000000605e-05, 4.11799999999983e-05, 4.0833000000000536e-05, 4.151399999999944e-05, 4.149999999999987e-05, 4.151399999999944e-05, 4.166599999999923e-05, 4.151399999999944e-05, 4.1638999999999565e-05, 4.0860999999999675e-05, 4.0931000000000994e-05, 4.1153000000002105e-05, 4.127800000000223e-05, 4.1195000000000814e-05, 4.1166999999998205e-05, 4.102799999999851e-05, 4.1361000000000175e-05, 4.1680999999998275e-05, 4.101399999999894e-05, 4.1166999999998205e-05, 4.1083000000000786e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.1276999999999286e-05, 4.0860999999999675e-05, 4.116599999999873e-05, 4.101400000000241e-05, 4.11660000000022e-05, 4.0818999999997496e-05, 4.1374999999999745e-05, 4.1082999999997316e-05, 4.1681000000001744e-05, 4.1332999999997566e-05, 4.151399999999944e-05, 4.1167000000001674e-05, 4.100000000000284e-05, 4.1347000000000605e-05, 4.1569000000001716e-05, 4.14860000000003e-05, 4.1152999999998635e-05, 4.1181000000001244e-05, 4.080600000000087e-05, 4.099999999999937e-05, 4.1361000000000175e-05, 4.101399999999894e-05, 4.116599999999873e-05, 4.1347000000000605e-05, 4.166599999999923e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.078" endtime="20201117 14:42:11.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.073" endtime="20201117 14:42:11.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.083" endtime="20201117 14:42:11.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.086" endtime="20201117 14:42:11.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.085" endtime="20201117 14:42:11.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.081" endtime="20201117 14:42:11.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.712" endtime="20201117 14:42:11.107"></status>
</kw>
<msg timestamp="20201117 14:42:11.107" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.116" endtime="20201117 14:42:11.133"></status>
</kw>
<msg timestamp="20201117 14:42:11.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.114" endtime="20201117 14:42:11.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.134" endtime="20201117 14:42:11.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.137" endtime="20201117 14:42:11.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.112" endtime="20201117 14:42:11.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.109" endtime="20201117 14:42:11.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.146" endtime="20201117 14:42:11.433"></status>
</kw>
<msg timestamp="20201117 14:42:11.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02283675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:11.145" endtime="20201117 14:42:11.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02283675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:11.437" endtime="20201117 14:42:11.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.446" endtime="20201117 14:42:11.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.142" endtime="20201117 14:42:11.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.140" endtime="20201117 14:42:11.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.453" level="INFO">${RESULT} = [{'time': 0.022878431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1681000000001744e-05, 'source_diff': 4.1681000000001744e-05}, {'time': 0.022932444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:11.450" endtime="20201117 14:42:11.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:11.454" endtime="20201117 14:42:11.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.472" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.471" endtime="20201117 14:42:11.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.474" level="INFO">VALUE: [4.1681000000001744e-05, 4.0847000000000105e-05, 4.1012999999999467e-05, 4.11660000000022e-05, 4.116599999999873e-05, 4.151399999999944e-05, 4.16799999999988e-05, 4.0847000000000105e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.1652999999999135e-05, 4.0847000000000105e-05, 4.1180999999997775e-05, 4.149999999999987e-05, 4.1181000000001244e-05, 4.099999999999937e-05, 4.138799999999984e-05, 4.08059999999974e-05, 4.149999999999987e-05, 4.133400000000051e-05, 4.1667000000002175e-05, 4.086199999999915e-05, 4.1402999999998885e-05, 4.1486999999999774e-05, 4.16799999999988e-05, 4.100000000000284e-05, 4.170800000000141e-05, 4.0875000000002715e-05, 4.1333000000001036e-05, 4.0860999999999675e-05, 4.101399999999894e-05, 4.1375000000003215e-05, 4.099999999999937e-05, 4.1180999999997775e-05, 4.1695000000001314e-05, 4.1667000000002175e-05, 4.101399999999894e-05, 4.1666999999998705e-05, 4.095800000000066e-05, 4.134800000000008e-05, 4.1597000000000856e-05, 4.1667000000002175e-05, 4.101399999999894e-05, 4.169400000000184e-05, 4.083400000000001e-05, 4.084799999999958e-05, 4.11799999999983e-05, 4.151400000000291e-05, 4.1361000000000175e-05, 4.116599999999873e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.473" endtime="20201117 14:42:11.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.468" endtime="20201117 14:42:11.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.478" endtime="20201117 14:42:11.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.481" endtime="20201117 14:42:11.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.480" endtime="20201117 14:42:11.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.476" endtime="20201117 14:42:11.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.108" endtime="20201117 14:42:11.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.710" endtime="20201117 14:42:11.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:10.710" endtime="20201117 14:42:11.503"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.505" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.514" endtime="20201117 14:42:11.530"></status>
</kw>
<msg timestamp="20201117 14:42:11.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.512" endtime="20201117 14:42:11.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.532" endtime="20201117 14:42:11.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.535" endtime="20201117 14:42:11.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.509" endtime="20201117 14:42:11.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.507" endtime="20201117 14:42:11.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.545" endtime="20201117 14:42:11.832"></status>
</kw>
<msg timestamp="20201117 14:42:11.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.543" endtime="20201117 14:42:11.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025004625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025045486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.836" endtime="20201117 14:42:11.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.844" endtime="20201117 14:42:11.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.540" endtime="20201117 14:42:11.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.538" endtime="20201117 14:42:11.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:11.852" level="INFO">${RESULT} = [{'time': 0.025045486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0860999999999675e-05, 'source_diff': 4.0860999999999675e-05}, {'time': 0.025100514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:11.848" endtime="20201117 14:42:11.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:11.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:11.853" endtime="20201117 14:42:11.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.871" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:11.870" endtime="20201117 14:42:11.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.874" level="INFO">VALUE: [4.0860999999999675e-05, 4.0889000000002285e-05, 4.1347000000000605e-05, 4.149999999999987e-05, 4.147199999999726e-05, 4.16660000000027e-05, 4.1333000000001036e-05, 4.1666999999998705e-05, 4.1681000000001744e-05, 4.1722999999996985e-05, 4.1652999999999135e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.083400000000001e-05, 4.1181000000001244e-05, 4.151400000000291e-05, 4.1026999999999036e-05, 4.1486999999999774e-05, 4.1361000000000175e-05, 4.0847000000000105e-05, 4.1333000000001036e-05, 4.151399999999944e-05, 4.1361000000000175e-05, 4.0819000000000966e-05, 4.16799999999988e-05, 4.09859999999998e-05, 4.116599999999873e-05, 4.1153000000002105e-05, 4.0833000000000536e-05, 4.1347000000000605e-05, 4.1167000000001674e-05, 4.0931000000000994e-05, 4.099999999999937e-05, 4.099999999999937e-05, 4.1666999999998705e-05, 4.147199999999726e-05, 4.170800000000141e-05, 4.0903000000001855e-05, 4.099999999999937e-05, 4.132000000000094e-05, 4.1167000000001674e-05, 4.0847000000000105e-05, 4.1347000000000605e-05, 4.09859999999998e-05, 4.1333000000001036e-05, 4.099999999999937e-05, 4.1332999999997566e-05, 4.0833000000000536e-05, 4.0847000000000105e-05, 4.0833000000000536e-05]</msg>
<status status="PASS" starttime="20201117 14:42:11.872" endtime="20201117 14:42:11.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.868" endtime="20201117 14:42:11.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.877" endtime="20201117 14:42:11.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:11.881" endtime="20201117 14:42:11.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.879" endtime="20201117 14:42:11.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.876" endtime="20201117 14:42:11.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.506" endtime="20201117 14:42:11.902"></status>
</kw>
<msg timestamp="20201117 14:42:11.902" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.911" endtime="20201117 14:42:11.927"></status>
</kw>
<msg timestamp="20201117 14:42:11.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.909" endtime="20201117 14:42:11.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:11.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:11.928" endtime="20201117 14:42:11.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.931" endtime="20201117 14:42:11.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.906" endtime="20201117 14:42:11.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.904" endtime="20201117 14:42:11.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:11.941" endtime="20201117 14:42:12.228"></status>
</kw>
<msg timestamp="20201117 14:42:12.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:11.939" endtime="20201117 14:42:12.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.233" endtime="20201117 14:42:12.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.241" endtime="20201117 14:42:12.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.937" endtime="20201117 14:42:12.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.935" endtime="20201117 14:42:12.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.248" level="INFO">${RESULT} = [{'time': 0.022605889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.022658903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:12.245" endtime="20201117 14:42:12.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:12.249" endtime="20201117 14:42:12.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.267" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.265" endtime="20201117 14:42:12.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.269" level="INFO">VALUE: [4.149999999999987e-05, 4.1681000000001744e-05, 4.149999999999987e-05, 4.1652999999999135e-05, 4.151399999999944e-05, 4.083400000000001e-05, 4.099999999999937e-05, 4.1138999999999065e-05, 4.133400000000051e-05, 4.083400000000001e-05, 4.0833000000000536e-05, 4.1318999999997996e-05, 4.09859999999998e-05, 4.1347000000000605e-05, 4.099999999999937e-05, 4.1180999999997775e-05, 4.16660000000027e-05, 4.151399999999944e-05, 4.101400000000241e-05, 4.149999999999987e-05, 4.1318999999997996e-05, 4.1167000000001674e-05, 4.1540999999999106e-05, 4.1652999999999135e-05, 4.133400000000051e-05, 4.1181000000001244e-05, 4.133400000000051e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1374999999999745e-05, 4.16660000000027e-05, 4.16799999999988e-05, 4.168000000000227e-05, 4.101399999999894e-05, 4.101399999999894e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.1597000000000856e-05, 4.0847000000000105e-05, 4.1180999999997775e-05, 4.0818999999997496e-05, 4.0819000000000966e-05, 4.082000000000044e-05, 4.1181000000001244e-05, 4.1209000000000384e-05, 4.1180999999997775e-05, 4.1138999999999065e-05, 4.1652999999999135e-05, 4.1166999999998205e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.268" endtime="20201117 14:42:12.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.263" endtime="20201117 14:42:12.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.272" endtime="20201117 14:42:12.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.276" endtime="20201117 14:42:12.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.274" endtime="20201117 14:42:12.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.271" endtime="20201117 14:42:12.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.903" endtime="20201117 14:42:12.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.504" endtime="20201117 14:42:12.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:11.503" endtime="20201117 14:42:12.297"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.300" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.309" endtime="20201117 14:42:12.326"></status>
</kw>
<msg timestamp="20201117 14:42:12.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.307" endtime="20201117 14:42:12.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.327" endtime="20201117 14:42:12.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.330" endtime="20201117 14:42:12.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.304" endtime="20201117 14:42:12.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.302" endtime="20201117 14:42:12.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.340" endtime="20201117 14:42:12.627"></status>
</kw>
<msg timestamp="20201117 14:42:12.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025581278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.338" endtime="20201117 14:42:12.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025581278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025622597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.632" endtime="20201117 14:42:12.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.640" endtime="20201117 14:42:12.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.335" endtime="20201117 14:42:12.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.333" endtime="20201117 14:42:12.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:12.647" level="INFO">${RESULT} = [{'time': 0.025622597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1319000000001466e-05, 'source_diff': 4.1319000000001466e-05}, {'time': 0.025675625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:12.643" endtime="20201117 14:42:12.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:12.661" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:12.648" endtime="20201117 14:42:12.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.665" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:12.664" endtime="20201117 14:42:12.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.668" level="INFO">VALUE: [4.1319000000001466e-05, 4.0847000000000105e-05, 4.102800000000198e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.1681000000001744e-05, 4.0847000000000105e-05, 4.1332999999997566e-05, 4.151399999999944e-05, 4.1666999999998705e-05, 4.149999999999987e-05, 4.0931000000000994e-05, 4.1681000000001744e-05, 4.084799999999958e-05, 4.0986999999999274e-05, 4.099999999999937e-05, 4.101399999999894e-05, 4.124999999999962e-05, 4.0888999999998815e-05, 4.0833000000000536e-05, 4.170800000000141e-05, 4.149999999999987e-05, 4.1652999999999135e-05, 4.0833000000000536e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.09859999999998e-05, 4.151399999999944e-05, 4.132000000000094e-05, 4.1430999999998025e-05, 4.100000000000284e-05, 4.14860000000003e-05, 4.099999999999937e-05, 4.099999999999937e-05, 4.1666999999998705e-05, 4.1652999999999135e-05, 4.1541000000002576e-05, 4.166599999999923e-05, 4.116599999999873e-05, 4.11799999999983e-05, 4.166599999999923e-05, 4.099999999999937e-05, 4.168000000000227e-05, 4.1347000000000605e-05, 4.1402999999998885e-05, 4.0805000000001396e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.140199999999941e-05, 4.1195000000000814e-05]</msg>
<status status="PASS" starttime="20201117 14:42:12.667" endtime="20201117 14:42:12.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.662" endtime="20201117 14:42:12.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.671" endtime="20201117 14:42:12.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:12.675" endtime="20201117 14:42:12.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.673" endtime="20201117 14:42:12.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.670" endtime="20201117 14:42:12.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.301" endtime="20201117 14:42:12.696"></status>
</kw>
<msg timestamp="20201117 14:42:12.696" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.705" endtime="20201117 14:42:12.721"></status>
</kw>
<msg timestamp="20201117 14:42:12.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.704" endtime="20201117 14:42:12.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:12.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:12.722" endtime="20201117 14:42:12.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.725" endtime="20201117 14:42:12.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.701" endtime="20201117 14:42:12.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.698" endtime="20201117 14:42:12.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:12.735" endtime="20201117 14:42:13.023"></status>
</kw>
<msg timestamp="20201117 14:42:13.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:12.733" endtime="20201117 14:42:13.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023034569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.027" endtime="20201117 14:42:13.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.036" endtime="20201117 14:42:13.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.730" endtime="20201117 14:42:13.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.728" endtime="20201117 14:42:13.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.043" level="INFO">${RESULT} = [{'time': 0.023075944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1374999999999745e-05, 'source_diff': 4.1374999999999745e-05}, {'time': 0.023123958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:13.039" endtime="20201117 14:42:13.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:13.044" endtime="20201117 14:42:13.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.062" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.061" endtime="20201117 14:42:13.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.064" level="INFO">VALUE: [4.1374999999999745e-05, 4.101399999999894e-05, 4.0804999999997926e-05, 4.1291000000002326e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.1333000000001036e-05, 4.102799999999851e-05, 4.1333000000001036e-05, 4.101399999999894e-05, 4.0833000000000536e-05, 4.1069000000001216e-05, 4.0847000000000105e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1666999999998705e-05, 4.1181000000001244e-05, 4.084799999999958e-05, 4.134800000000008e-05, 4.11799999999983e-05, 4.116599999999873e-05, 4.176399999999969e-05, 4.0818999999997496e-05, 4.16660000000027e-05, 4.0833000000000536e-05, 4.0860999999999675e-05, 4.0847000000000105e-05, 4.1638999999999565e-05, 4.1666999999998705e-05, 4.1166999999998205e-05, 4.151400000000291e-05, 4.0833000000000536e-05, 4.149999999999987e-05, 4.1332999999997566e-05, 4.082000000000044e-05, 4.079199999999783e-05, 4.1667000000002175e-05, 4.1444999999997595e-05, 4.1680999999998275e-05, 4.14860000000003e-05, 4.0861000000003145e-05, 4.1152999999998635e-05, 4.1486999999999774e-05, 4.1026999999999036e-05, 4.102799999999851e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.1318999999997996e-05, 4.169399999999837e-05, 4.101399999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.063" endtime="20201117 14:42:13.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.058" endtime="20201117 14:42:13.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.068" endtime="20201117 14:42:13.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.072" endtime="20201117 14:42:13.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.070" endtime="20201117 14:42:13.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.066" endtime="20201117 14:42:13.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.697" endtime="20201117 14:42:13.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.298" endtime="20201117 14:42:13.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:12.298" endtime="20201117 14:42:13.093"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.095" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.104" endtime="20201117 14:42:13.121"></status>
</kw>
<msg timestamp="20201117 14:42:13.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.102" endtime="20201117 14:42:13.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.123" endtime="20201117 14:42:13.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.125" endtime="20201117 14:42:13.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.100" endtime="20201117 14:42:13.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.098" endtime="20201117 14:42:13.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.135" endtime="20201117 14:42:13.421"></status>
</kw>
<msg timestamp="20201117 14:42:13.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.133" endtime="20201117 14:42:13.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025190639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.425" endtime="20201117 14:42:13.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.434" endtime="20201117 14:42:13.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.130" endtime="20201117 14:42:13.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.129" endtime="20201117 14:42:13.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.441" level="INFO">${RESULT} = [{'time': 0.025231528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0888999999998815e-05, 'source_diff': 4.0888999999998815e-05}, {'time': 0.025281569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:13.437" endtime="20201117 14:42:13.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:13.442" endtime="20201117 14:42:13.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.461" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.460" endtime="20201117 14:42:13.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.463" level="INFO">VALUE: [4.0888999999998815e-05, 4.0860999999999675e-05, 4.1180999999997775e-05, 4.084799999999958e-05, 4.133399999999704e-05, 4.134800000000008e-05, 4.1652999999999135e-05, 4.0860999999999675e-05, 4.116599999999873e-05, 4.0833000000000536e-05, 4.116599999999873e-05, 4.149999999999987e-05, 4.100000000000284e-05, 4.1347000000000605e-05, 4.1166999999998205e-05, 4.1624999999999995e-05, 4.1666999999998705e-05, 4.0833000000000536e-05, 4.151400000000291e-05, 4.090199999999891e-05, 4.099999999999937e-05, 4.1666999999998705e-05, 4.083400000000001e-05, 4.1652999999999135e-05, 4.1695000000001314e-05, 4.132000000000094e-05, 4.1180999999997775e-05, 4.1666999999998705e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.116599999999873e-05, 4.1361000000000175e-05, 4.099999999999937e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.1374999999999745e-05, 4.07920000000013e-05, 4.12920000000018e-05, 4.1667000000002175e-05, 4.1681000000001744e-05, 4.0847000000000105e-05, 4.133400000000051e-05, 4.1624999999999995e-05, 4.084799999999958e-05, 4.083400000000001e-05, 4.1487000000003244e-05, 4.123600000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.462" endtime="20201117 14:42:13.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.457" endtime="20201117 14:42:13.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.467" endtime="20201117 14:42:13.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.471" endtime="20201117 14:42:13.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.469" endtime="20201117 14:42:13.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.465" endtime="20201117 14:42:13.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.096" endtime="20201117 14:42:13.491"></status>
</kw>
<msg timestamp="20201117 14:42:13.492" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.500" endtime="20201117 14:42:13.517"></status>
</kw>
<msg timestamp="20201117 14:42:13.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.499" endtime="20201117 14:42:13.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.519" endtime="20201117 14:42:13.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.521" endtime="20201117 14:42:13.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.496" endtime="20201117 14:42:13.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.494" endtime="20201117 14:42:13.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.531" endtime="20201117 14:42:13.818"></status>
</kw>
<msg timestamp="20201117 14:42:13.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.529" endtime="20201117 14:42:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022429792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.823" endtime="20201117 14:42:13.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.831" endtime="20201117 14:42:13.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.526" endtime="20201117 14:42:13.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.525" endtime="20201117 14:42:13.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:13.838" level="INFO">${RESULT} = [{'time': 0.022429792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0945000000000564e-05, 'source_diff': 4.0945000000000564e-05}, {'time': 0.022481764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:13.835" endtime="20201117 14:42:13.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:13.852" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:13.839" endtime="20201117 14:42:13.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.857" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:42:13.856" endtime="20201117 14:42:13.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.859" level="INFO">VALUE: [4.0945000000000564e-05, 4.151400000000291e-05, 4.132000000000094e-05, 4.0833000000000536e-05, 4.173600000000055e-05, 4.1680999999998275e-05, 4.151399999999944e-05, 4.1445000000001064e-05, 4.1666999999998705e-05, 4.168000000000227e-05, 4.097200000000023e-05, 4.1013000000002936e-05, 4.0819000000000966e-05, 4.145799999999769e-05, 4.11660000000022e-05, 4.0833000000000536e-05, 4.1332999999997566e-05, 4.116599999999873e-05, 4.101399999999894e-05, 4.1680999999998275e-05, 4.1180999999997775e-05, 4.1167000000001674e-05, 4.1666999999998705e-05, 4.1596999999997386e-05, 4.126399999999919e-05, 4.1695000000001314e-05, 4.132000000000094e-05, 4.132000000000094e-05, 4.1167000000001674e-05, 4.0832999999997066e-05, 4.1388999999999315e-05, 4.086199999999915e-05, 4.1653000000002605e-05, 4.116599999999873e-05, 4.0847000000000105e-05, 4.118000000000177e-05, 4.166599999999923e-05, 4.151399999999944e-05, 4.1333000000001036e-05, 4.166599999999923e-05, 4.1319000000001466e-05, 4.101399999999894e-05, 4.126399999999919e-05, 4.1333000000001036e-05, 4.1152999999998635e-05, 4.1666999999998705e-05, 4.1667000000002175e-05, 4.149999999999987e-05, 4.1181000000001244e-05, 4.1181000000001244e-05]</msg>
<status status="PASS" starttime="20201117 14:42:13.858" endtime="20201117 14:42:13.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.853" endtime="20201117 14:42:13.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.863" endtime="20201117 14:42:13.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:13.867" endtime="20201117 14:42:13.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.865" endtime="20201117 14:42:13.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.861" endtime="20201117 14:42:13.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.492" endtime="20201117 14:42:13.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.094" endtime="20201117 14:42:13.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.093" endtime="20201117 14:42:13.888"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.890" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.899" endtime="20201117 14:42:13.916"></status>
</kw>
<msg timestamp="20201117 14:42:13.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.897" endtime="20201117 14:42:13.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:13.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:13.918" endtime="20201117 14:42:13.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.920" endtime="20201117 14:42:13.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.895" endtime="20201117 14:42:13.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.893" endtime="20201117 14:42:13.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:13.930" endtime="20201117 14:42:14.218"></status>
</kw>
<msg timestamp="20201117 14:42:14.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:13.928" endtime="20201117 14:42:14.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025183278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.222" endtime="20201117 14:42:14.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.231" endtime="20201117 14:42:14.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.926" endtime="20201117 14:42:14.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.924" endtime="20201117 14:42:14.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.238" level="INFO">${RESULT} = [{'time': 0.025183278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222200000000148e-05, 'source_diff': 4.222200000000148e-05}, {'time': 0.025240306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.234" endtime="20201117 14:42:14.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.251" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:14.239" endtime="20201117 14:42:14.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.256" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.255" endtime="20201117 14:42:14.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.259" level="INFO">VALUE: [4.222200000000148e-05, 4.236200000000065e-05, 4.19860000000008e-05, 4.23059999999989e-05, 4.2389000000000315e-05, 4.222200000000148e-05, 4.1847000000001106e-05, 4.165199999999966e-05, 4.219399999999887e-05, 4.24860000000013e-05, 4.1888999999999815e-05, 4.1805000000002396e-05, 4.2333000000002036e-05, 4.207000000000169e-05, 4.1833000000001536e-05, 4.1832999999998066e-05, 4.1833000000001536e-05, 4.238800000000084e-05, 4.1666999999998705e-05, 4.1680999999998275e-05, 4.2152999999999635e-05, 4.183399999999754e-05, 4.251400000000044e-05, 4.250000000000087e-05, 4.222200000000148e-05, 4.186200000000015e-05, 4.200000000000037e-05, 4.1832999999998066e-05, 4.24860000000013e-05, 4.219399999999887e-05, 4.215200000000016e-05, 4.1832999999998066e-05, 4.21799999999993e-05, 4.229199999999933e-05, 4.2318999999998996e-05, 4.2222999999997485e-05, 4.1847000000001106e-05, 4.251400000000044e-05, 4.2332999999998566e-05, 4.1667000000002175e-05, 4.2167000000002675e-05, 4.1680999999998275e-05, 4.250000000000087e-05, 4.227799999999976e-05, 4.200000000000037e-05, 4.2181000000002244e-05, 4.1681000000001744e-05, 4.233399999999804e-05, 4.1875000000000245e-05, 4.21799999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.257" endtime="20201117 14:42:14.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.252" endtime="20201117 14:42:14.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.263" endtime="20201117 14:42:14.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.266" endtime="20201117 14:42:14.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.264" endtime="20201117 14:42:14.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.261" endtime="20201117 14:42:14.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.891" endtime="20201117 14:42:14.287"></status>
</kw>
<msg timestamp="20201117 14:42:14.287" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.296" endtime="20201117 14:42:14.312"></status>
</kw>
<msg timestamp="20201117 14:42:14.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.294" endtime="20201117 14:42:14.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.314" endtime="20201117 14:42:14.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.317" endtime="20201117 14:42:14.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.291" endtime="20201117 14:42:14.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.289" endtime="20201117 14:42:14.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.326" endtime="20201117 14:42:14.613"></status>
</kw>
<msg timestamp="20201117 14:42:14.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.324" endtime="20201117 14:42:14.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.617" endtime="20201117 14:42:14.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.626" endtime="20201117 14:42:14.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.322" endtime="20201117 14:42:14.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.320" endtime="20201117 14:42:14.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:14.632" level="INFO">${RESULT} = [{'time': 0.022521389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223599999999758e-05, 'source_diff': 4.223599999999758e-05}, {'time': 0.022569389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:14.629" endtime="20201117 14:42:14.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:14.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:14.633" endtime="20201117 14:42:14.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.651" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:42:14.650" endtime="20201117 14:42:14.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.653" level="INFO">VALUE: [4.223599999999758e-05, 4.1611000000000425e-05, 4.2194999999998345e-05, 4.233400000000151e-05, 4.233399999999804e-05, 4.234800000000108e-05, 4.1681000000001744e-05, 4.2458999999998165e-05, 4.181999999999797e-05, 4.2333000000002036e-05, 4.1888999999999815e-05, 4.216599999999973e-05, 4.200000000000037e-05, 4.21799999999993e-05, 4.21799999999993e-05, 4.251399999999697e-05, 4.1624999999999995e-05, 4.2097000000001356e-05, 4.1680999999998275e-05, 4.2209000000001384e-05, 4.1652999999999135e-05, 4.2347000000001606e-05, 4.181999999999797e-05, 4.220800000000191e-05, 4.226400000000019e-05, 4.182000000000144e-05, 4.233400000000151e-05, 4.16799999999988e-05, 4.183399999999754e-05, 4.1652999999999135e-05, 4.201399999999994e-05, 4.200000000000037e-05, 4.1875000000000245e-05, 4.250000000000087e-05, 4.168000000000227e-05, 4.250000000000087e-05, 4.166599999999923e-05, 4.2318999999998996e-05, 4.2166999999999205e-05, 4.2180999999998775e-05, 4.2152999999999635e-05, 4.202799999999951e-05, 4.2180999999998775e-05, 4.252800000000001e-05, 4.2180999999998775e-05, 4.201399999999994e-05, 4.250000000000087e-05, 4.1652999999999135e-05, 4.2083000000001786e-05, 4.16119999999999e-05]</msg>
<status status="PASS" starttime="20201117 14:42:14.652" endtime="20201117 14:42:14.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.647" endtime="20201117 14:42:14.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.656" endtime="20201117 14:42:14.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:14.660" endtime="20201117 14:42:14.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.658" endtime="20201117 14:42:14.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.655" endtime="20201117 14:42:14.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.288" endtime="20201117 14:42:14.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.889" endtime="20201117 14:42:14.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:13.888" endtime="20201117 14:42:14.681"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.683" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.691" endtime="20201117 14:42:14.708"></status>
</kw>
<msg timestamp="20201117 14:42:14.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.690" endtime="20201117 14:42:14.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:14.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:14.709" endtime="20201117 14:42:14.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.712" endtime="20201117 14:42:14.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.687" endtime="20201117 14:42:14.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.685" endtime="20201117 14:42:14.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:14.721" endtime="20201117 14:42:15.021"></status>
</kw>
<msg timestamp="20201117 14:42:15.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:14.719" endtime="20201117 14:42:15.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024293542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.025" endtime="20201117 14:42:15.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.033" endtime="20201117 14:42:15.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.717" endtime="20201117 14:42:15.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.715" endtime="20201117 14:42:15.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.044" level="INFO">${RESULT} = [{'time': 0.024337111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3569000000000246e-05, 'source_diff': 4.3569000000000246e-05}, {'time': 0.024392111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:15.041" endtime="20201117 14:42:15.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.059" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:15.045" endtime="20201117 14:42:15.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.063" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.062" endtime="20201117 14:42:15.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.066" level="INFO">VALUE: [4.3569000000000246e-05, 4.297200000000223e-05, 4.3180999999999775e-05, 4.302799999999704e-05, 4.351400000000144e-05, 4.3180999999999775e-05, 4.2666999999999705e-05, 4.2681000000002745e-05, 4.283399999999854e-05, 4.331999999999947e-05, 4.282000000000244e-05, 4.334800000000208e-05, 4.26799999999998e-05, 4.283399999999854e-05, 4.3346999999999136e-05, 4.2832999999999066e-05, 4.351399999999797e-05, 4.347199999999926e-05, 4.2804999999999926e-05, 4.26799999999998e-05, 4.350000000000187e-05, 4.266600000000023e-05, 4.3152999999997166e-05, 4.351400000000144e-05, 4.3346999999999136e-05, 4.2832999999999066e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.333399999999904e-05, 4.2681000000002745e-05, 4.351400000000144e-05, 4.283400000000201e-05, 4.3167000000000205e-05, 4.2666999999999705e-05, 4.270800000000241e-05, 4.295800000000266e-05, 4.3318999999999996e-05, 4.26799999999998e-05, 4.297199999999876e-05, 4.265200000000066e-05, 4.350000000000187e-05, 4.301400000000094e-05, 4.2889000000000815e-05, 4.3360999999998706e-05, 4.301400000000094e-05, 4.347199999999926e-05, 4.2846999999998636e-05, 4.2667000000003175e-05, 4.2959000000002134e-05, 4.301399999999747e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.064" endtime="20201117 14:42:15.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.060" endtime="20201117 14:42:15.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.069" endtime="20201117 14:42:15.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.072" endtime="20201117 14:42:15.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.071" endtime="20201117 14:42:15.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.067" endtime="20201117 14:42:15.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.684" endtime="20201117 14:42:15.098"></status>
</kw>
<msg timestamp="20201117 14:42:15.098" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.107" endtime="20201117 14:42:15.125"></status>
</kw>
<msg timestamp="20201117 14:42:15.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.105" endtime="20201117 14:42:15.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.127" endtime="20201117 14:42:15.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.130" endtime="20201117 14:42:15.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.102" endtime="20201117 14:42:15.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.100" endtime="20201117 14:42:15.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.139" endtime="20201117 14:42:15.427"></status>
</kw>
<msg timestamp="20201117 14:42:15.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.137" endtime="20201117 14:42:15.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022854472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.432" endtime="20201117 14:42:15.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.441" endtime="20201117 14:42:15.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.135" endtime="20201117 14:42:15.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.133" endtime="20201117 14:42:15.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.448" level="INFO">${RESULT} = [{'time': 0.022854472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.323600000000205e-05, 'source_diff': 4.323600000000205e-05}, {'time': 0.022904472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:15.444" endtime="20201117 14:42:15.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.462" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:15.449" endtime="20201117 14:42:15.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.466" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.465" endtime="20201117 14:42:15.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.469" level="INFO">VALUE: [4.323600000000205e-05, 4.266600000000023e-05, 4.295799999999919e-05, 4.2666999999999705e-05, 4.2680999999999275e-05, 4.356999999999972e-05, 4.3332999999999566e-05, 4.3167000000000205e-05, 4.2611000000001426e-05, 4.301400000000094e-05, 4.351400000000144e-05, 4.2680999999999275e-05, 4.3153000000000635e-05, 4.334799999999861e-05, 4.33059999999999e-05, 4.31800000000003e-05, 4.3346999999999136e-05, 4.301400000000094e-05, 4.298599999999833e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3347000000002606e-05, 4.300000000000137e-05, 4.3167000000000205e-05, 4.34999999999984e-05, 4.345799999999969e-05, 4.2667000000003175e-05, 4.2666999999999705e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.352799999999754e-05, 4.298599999999833e-05, 4.350000000000187e-05, 4.333400000000251e-05, 4.283399999999854e-05, 4.351400000000144e-05, 4.3487000000001774e-05, 4.3360999999998706e-05, 4.316599999999726e-05, 4.3361000000002176e-05, 4.26799999999998e-05, 4.2832999999999066e-05, 4.352800000000101e-05, 4.277800000000026e-05, 4.3332999999999566e-05, 4.300000000000137e-05, 4.34999999999984e-05, 4.2666999999999705e-05, 4.2833000000002536e-05, 4.3167000000000205e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.467" endtime="20201117 14:42:15.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.463" endtime="20201117 14:42:15.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.472" endtime="20201117 14:42:15.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.476" endtime="20201117 14:42:15.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.474" endtime="20201117 14:42:15.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.470" endtime="20201117 14:42:15.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.099" endtime="20201117 14:42:15.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.682" endtime="20201117 14:42:15.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:14.681" endtime="20201117 14:42:15.497"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.499" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.508" endtime="20201117 14:42:15.525"></status>
</kw>
<msg timestamp="20201117 14:42:15.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.506" endtime="20201117 14:42:15.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.526" endtime="20201117 14:42:15.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.529" endtime="20201117 14:42:15.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.504" endtime="20201117 14:42:15.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.501" endtime="20201117 14:42:15.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.539" endtime="20201117 14:42:15.826"></status>
</kw>
<msg timestamp="20201117 14:42:15.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025447417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.537" endtime="20201117 14:42:15.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025447417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.830" endtime="20201117 14:42:15.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.839" endtime="20201117 14:42:15.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.534" endtime="20201117 14:42:15.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.532" endtime="20201117 14:42:15.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:15.846" level="INFO">${RESULT} = [{'time': 0.025491486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4069000000000746e-05, 'source_diff': 4.4069000000000746e-05}, {'time': 0.025540472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:15.842" endtime="20201117 14:42:15.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:15.859" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:15.847" endtime="20201117 14:42:15.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.864" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:15.863" endtime="20201117 14:42:15.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.867" level="INFO">VALUE: [4.4069000000000746e-05, 4.426400000000219e-05, 4.401400000000194e-05, 4.400000000000237e-05, 4.4333000000000566e-05, 4.4180999999997306e-05, 4.4167000000001205e-05, 4.4333000000000566e-05, 4.4319999999997e-05, 4.4333000000000566e-05, 4.433400000000004e-05, 4.44999999999994e-05, 4.4195000000000345e-05, 4.369400000000037e-05, 4.4166999999997736e-05, 4.3666999999997236e-05, 4.383399999999954e-05, 4.375000000000212e-05, 4.4333000000000566e-05, 4.3846999999999636e-05, 4.3833000000000066e-05, 4.3833000000000066e-05, 4.3596999999999386e-05, 4.36800000000008e-05, 4.3667000000000705e-05, 4.43329999999971e-05, 4.3861000000002676e-05, 4.3819000000000496e-05, 4.432000000000047e-05, 4.3846999999999636e-05, 4.4181000000000775e-05, 4.401399999999847e-05, 4.436199999999918e-05, 4.451399999999897e-05, 4.434799999999961e-05, 4.400000000000237e-05, 4.433400000000004e-05, 4.419400000000087e-05, 4.366600000000123e-05, 4.3847000000003106e-05, 4.455600000000115e-05, 4.3833000000000066e-05, 4.398599999999933e-05, 4.3846999999999636e-05, 4.3694999999999845e-05, 4.4166999999997736e-05, 4.4333000000000566e-05, 4.452799999999854e-05, 4.3931000000000525e-05, 4.427800000000176e-05]</msg>
<status status="PASS" starttime="20201117 14:42:15.865" endtime="20201117 14:42:15.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.861" endtime="20201117 14:42:15.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.870" endtime="20201117 14:42:15.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:15.874" endtime="20201117 14:42:15.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.872" endtime="20201117 14:42:15.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.868" endtime="20201117 14:42:15.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.500" endtime="20201117 14:42:15.894"></status>
</kw>
<msg timestamp="20201117 14:42:15.895" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.903" endtime="20201117 14:42:15.920"></status>
</kw>
<msg timestamp="20201117 14:42:15.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.902" endtime="20201117 14:42:15.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:15.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:15.921" endtime="20201117 14:42:15.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.924" endtime="20201117 14:42:15.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.899" endtime="20201117 14:42:15.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.897" endtime="20201117 14:42:15.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:15.934" endtime="20201117 14:42:16.221"></status>
</kw>
<msg timestamp="20201117 14:42:16.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:15.932" endtime="20201117 14:42:16.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022788153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.226" endtime="20201117 14:42:16.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.234" endtime="20201117 14:42:16.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.930" endtime="20201117 14:42:16.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.928" endtime="20201117 14:42:16.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.241" level="INFO">${RESULT} = [{'time': 0.022788153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.455599999999768e-05, 'source_diff': 4.455599999999768e-05}, {'time': 0.022841153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.238" endtime="20201117 14:42:16.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:16.242" endtime="20201117 14:42:16.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.260" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.259" endtime="20201117 14:42:16.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.262" level="INFO">VALUE: [4.455599999999768e-05, 4.3653000000001135e-05, 4.451399999999897e-05, 4.4166999999997736e-05, 4.383399999999954e-05, 4.3833000000000066e-05, 4.3972999999999235e-05, 4.400000000000237e-05, 4.4333000000000566e-05, 4.41800000000013e-05, 4.416599999999826e-05, 4.3860999999999206e-05, 4.3833000000000066e-05, 4.4333000000000566e-05, 4.39999999999989e-05, 4.3846999999999636e-05, 4.3709000000002884e-05, 4.39999999999989e-05, 4.4403000000001885e-05, 4.4167000000001205e-05, 4.3958999999999665e-05, 4.451400000000244e-05, 4.3694999999999845e-05, 4.450000000000287e-05, 4.4181000000000775e-05, 4.4347000000000136e-05, 4.43060000000009e-05, 4.445800000000069e-05, 4.44999999999994e-05, 4.367999999999733e-05, 4.3875000000002246e-05, 4.398599999999933e-05, 4.3833000000000066e-05, 4.401399999999847e-05, 4.4347000000000136e-05, 4.4167000000001205e-05, 4.3846999999999636e-05, 4.447200000000026e-05, 4.451399999999897e-05, 4.3846999999999636e-05, 4.402800000000151e-05, 4.38060000000004e-05, 4.44999999999994e-05, 4.433400000000004e-05, 4.3860999999999206e-05, 4.451399999999897e-05, 4.4486999999999305e-05, 4.3846999999999636e-05, 4.4416999999997986e-05, 4.3833000000000066e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.261" endtime="20201117 14:42:16.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.256" endtime="20201117 14:42:16.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.266" endtime="20201117 14:42:16.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.269" endtime="20201117 14:42:16.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.268" endtime="20201117 14:42:16.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.264" endtime="20201117 14:42:16.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.895" endtime="20201117 14:42:16.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.498" endtime="20201117 14:42:16.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:15.497" endtime="20201117 14:42:16.291"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.293" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.302" endtime="20201117 14:42:16.320"></status>
</kw>
<msg timestamp="20201117 14:42:16.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.301" endtime="20201117 14:42:16.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.321" endtime="20201117 14:42:16.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.324" endtime="20201117 14:42:16.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.298" endtime="20201117 14:42:16.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.295" endtime="20201117 14:42:16.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.333" endtime="20201117 14:42:16.621"></status>
</kw>
<msg timestamp="20201117 14:42:16.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.332" endtime="20201117 14:42:16.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025649764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.625" endtime="20201117 14:42:16.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.634" endtime="20201117 14:42:16.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.329" endtime="20201117 14:42:16.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.327" endtime="20201117 14:42:16.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:16.641" level="INFO">${RESULT} = [{'time': 0.025695278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.551399999999997e-05, 'source_diff': 4.551399999999997e-05}, {'time': 0.025755292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:16.638" endtime="20201117 14:42:16.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:16.656" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:16.642" endtime="20201117 14:42:16.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.661" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:16.660" endtime="20201117 14:42:16.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.664" level="INFO">VALUE: [4.551399999999997e-05, 4.551399999999997e-05, 4.5180999999998306e-05, 4.5180999999998306e-05, 4.472200000000051e-05, 4.480599999999793e-05, 4.4610999999999956e-05, 4.5333000000001566e-05, 4.502799999999904e-05, 4.470800000000094e-05, 4.552799999999954e-05, 4.5166999999998736e-05, 4.5388999999999846e-05, 4.4667000000001705e-05, 4.498600000000033e-05, 4.505600000000165e-05, 4.4666999999998236e-05, 4.551399999999997e-05, 4.495800000000119e-05, 4.551399999999997e-05, 4.4666999999998236e-05, 4.55000000000004e-05, 4.548600000000083e-05, 4.55000000000004e-05, 4.4681000000001275e-05, 4.533399999999757e-05, 4.55000000000004e-05, 4.466599999999876e-05, 4.501399999999947e-05, 4.466600000000223e-05, 4.517999999999883e-05, 4.555599999999868e-05, 4.4861000000000206e-05, 4.498600000000033e-05, 4.4652999999998666e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.49999999999999e-05, 4.5333000000001566e-05, 4.551399999999997e-05, 4.55000000000004e-05, 4.534799999999714e-05, 4.5167000000002205e-05, 4.5430999999998556e-05, 4.5152999999999166e-05, 4.4986999999999805e-05, 4.551399999999997e-05, 4.51800000000023e-05, 4.4847000000000636e-05, 4.4847000000000636e-05]</msg>
<status status="PASS" starttime="20201117 14:42:16.662" endtime="20201117 14:42:16.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.657" endtime="20201117 14:42:16.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.667" endtime="20201117 14:42:16.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:16.671" endtime="20201117 14:42:16.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.669" endtime="20201117 14:42:16.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.665" endtime="20201117 14:42:16.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.294" endtime="20201117 14:42:16.692"></status>
</kw>
<msg timestamp="20201117 14:42:16.692" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.701" endtime="20201117 14:42:16.718"></status>
</kw>
<msg timestamp="20201117 14:42:16.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.699" endtime="20201117 14:42:16.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:16.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:16.719" endtime="20201117 14:42:16.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.722" endtime="20201117 14:42:16.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.696" endtime="20201117 14:42:16.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.694" endtime="20201117 14:42:16.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:16.731" endtime="20201117 14:42:17.018"></status>
</kw>
<msg timestamp="20201117 14:42:17.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:16.730" endtime="20201117 14:42:17.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.022" endtime="20201117 14:42:17.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.031" endtime="20201117 14:42:17.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.727" endtime="20201117 14:42:17.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.725" endtime="20201117 14:42:17.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.038" level="INFO">${RESULT} = [{'time': 0.022608597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5375000000000276e-05, 'source_diff': 4.5375000000000276e-05}, {'time': 0.022667625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:17.034" endtime="20201117 14:42:17.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:17.039" endtime="20201117 14:42:17.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.056" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.055" endtime="20201117 14:42:17.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.059" level="INFO">VALUE: [4.5375000000000276e-05, 4.5430999999998556e-05, 4.5111000000000456e-05, 4.501399999999947e-05, 4.4667000000001705e-05, 4.4847000000000636e-05, 4.5347000000001136e-05, 4.48060000000014e-05, 4.483400000000054e-05, 4.502800000000251e-05, 4.5473000000000735e-05, 4.55000000000004e-05, 4.4973000000000235e-05, 4.483400000000054e-05, 4.5361000000000706e-05, 4.466599999999876e-05, 4.55000000000004e-05, 4.530499999999896e-05, 4.551399999999997e-05, 4.5333000000001566e-05, 4.517999999999883e-05, 4.4888999999999346e-05, 4.4722999999999985e-05, 4.4847000000000636e-05, 4.530599999999843e-05, 4.4833000000001066e-05, 4.5166999999998736e-05, 4.502799999999904e-05, 4.533400000000104e-05, 4.4903000000002385e-05, 4.551399999999997e-05, 4.5166999999998736e-05, 4.533400000000104e-05, 4.4847000000000636e-05, 4.4833000000001066e-05, 4.548599999999736e-05, 4.55000000000004e-05, 4.531899999999853e-05, 4.55000000000004e-05, 4.46800000000018e-05, 4.494400000000162e-05, 4.5333000000001566e-05, 4.5361000000000706e-05, 4.5166999999998736e-05, 4.5208999999997446e-05, 4.4833000000001066e-05, 4.48060000000014e-05, 4.554099999999964e-05, 4.4847000000000636e-05, 4.4666999999998236e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.057" endtime="20201117 14:42:17.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.053" endtime="20201117 14:42:17.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.063" endtime="20201117 14:42:17.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.066" endtime="20201117 14:42:17.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.065" endtime="20201117 14:42:17.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.061" endtime="20201117 14:42:17.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.693" endtime="20201117 14:42:17.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.292" endtime="20201117 14:42:17.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:16.291" endtime="20201117 14:42:17.087"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.090" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.099" endtime="20201117 14:42:17.116"></status>
</kw>
<msg timestamp="20201117 14:42:17.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.097" endtime="20201117 14:42:17.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.117" endtime="20201117 14:42:17.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.120" endtime="20201117 14:42:17.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.094" endtime="20201117 14:42:17.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.092" endtime="20201117 14:42:17.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.130" endtime="20201117 14:42:17.415"></status>
</kw>
<msg timestamp="20201117 14:42:17.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025235597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:17.128" endtime="20201117 14:42:17.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025235597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0252815, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:17.420" endtime="20201117 14:42:17.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.428" endtime="20201117 14:42:17.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.125" endtime="20201117 14:42:17.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.123" endtime="20201117 14:42:17.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.435" level="INFO">${RESULT} = [{'time': 0.0252815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5902999999999916e-05, 'source_diff': 4.5902999999999916e-05}, {'time': 0.0253345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:17.432" endtime="20201117 14:42:17.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:17.436" endtime="20201117 14:42:17.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.454" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.453" endtime="20201117 14:42:17.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.457" level="INFO">VALUE: [4.5902999999999916e-05, 4.580599999999893e-05, 4.584699999999817e-05, 4.63329999999991e-05, 4.599999999999743e-05, 4.6180999999999306e-05, 4.584800000000111e-05, 4.5889000000000346e-05, 4.63060000000029e-05, 4.633400000000204e-05, 4.633399999999857e-05, 4.6013000000001e-05, 4.63329999999991e-05, 4.634699999999867e-05, 4.631899999999953e-05, 4.63329999999991e-05, 4.619400000000287e-05, 4.5861000000001206e-05, 4.602800000000004e-05, 4.6013999999997e-05, 4.65000000000014e-05, 4.648599999999836e-05, 4.636099999999824e-05, 4.5681000000002275e-05, 4.601400000000047e-05, 4.651400000000097e-05, 4.654100000000064e-05, 4.5889000000000346e-05, 4.599999999999743e-05, 4.6166999999999736e-05, 4.5652999999999666e-05, 4.5652999999999666e-05, 4.567999999999933e-05, 4.58329999999986e-05, 4.5847000000001636e-05, 4.63329999999991e-05, 4.651400000000097e-05, 4.581899999999903e-05, 4.6111000000001456e-05, 4.598600000000133e-05, 4.65139999999975e-05, 4.5611000000000956e-05, 4.6180999999999306e-05, 4.598600000000133e-05, 4.5666999999999236e-05, 4.572200000000151e-05, 4.65000000000014e-05, 4.65139999999975e-05, 4.58199999999985e-05, 4.616600000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.455" endtime="20201117 14:42:17.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.450" endtime="20201117 14:42:17.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.460" endtime="20201117 14:42:17.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.464" endtime="20201117 14:42:17.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.462" endtime="20201117 14:42:17.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.459" endtime="20201117 14:42:17.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.091" endtime="20201117 14:42:17.485"></status>
</kw>
<msg timestamp="20201117 14:42:17.485" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.494" endtime="20201117 14:42:17.510"></status>
</kw>
<msg timestamp="20201117 14:42:17.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.492" endtime="20201117 14:42:17.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.512" endtime="20201117 14:42:17.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.514" endtime="20201117 14:42:17.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.489" endtime="20201117 14:42:17.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.487" endtime="20201117 14:42:17.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.524" endtime="20201117 14:42:17.812"></status>
</kw>
<msg timestamp="20201117 14:42:17.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:17.522" endtime="20201117 14:42:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:42:17.816" endtime="20201117 14:42:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.825" endtime="20201117 14:42:17.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.520" endtime="20201117 14:42:17.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.518" endtime="20201117 14:42:17.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:17.832" level="INFO">${RESULT} = [{'time': 0.022577583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.658299999999935e-05, 'source_diff': 4.658299999999935e-05}, {'time': 0.022636583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:17.828" endtime="20201117 14:42:17.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:17.845" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:17.833" endtime="20201117 14:42:17.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.851" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:42:17.850" endtime="20201117 14:42:17.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.853" level="INFO">VALUE: [4.658299999999935e-05, 4.6013999999997e-05, 4.60000000000009e-05, 4.5889000000000346e-05, 4.616600000000026e-05, 4.617999999999983e-05, 4.580499999999946e-05, 4.597199999999829e-05, 4.5833000000002067e-05, 4.63329999999991e-05, 4.63329999999991e-05, 4.645799999999922e-05, 4.5680999999998806e-05, 4.649999999999793e-05, 4.601400000000047e-05, 4.649999999999793e-05, 4.649999999999793e-05, 4.6125000000001026e-05, 4.648599999999836e-05, 4.565200000000019e-05, 4.581899999999903e-05, 4.599999999999743e-05, 4.615200000000069e-05, 4.598599999999786e-05, 4.641600000000051e-05, 4.58190000000025e-05, 4.5680999999998806e-05, 4.601400000000047e-05, 4.633399999999857e-05, 4.6347000000002136e-05, 4.60000000000009e-05, 4.6013999999997e-05, 4.601400000000047e-05, 4.6194999999998876e-05, 4.60000000000009e-05, 4.648600000000183e-05, 4.580599999999893e-05, 4.6013000000001e-05, 4.645799999999922e-05, 4.601400000000047e-05, 4.5639000000000096e-05, 4.631899999999953e-05, 4.65139999999975e-05, 4.6013999999997e-05, 4.65000000000014e-05, 4.58329999999986e-05, 4.5667000000002705e-05, 4.6166999999999736e-05, 4.5639000000000096e-05, 4.598600000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:42:17.852" endtime="20201117 14:42:17.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.847" endtime="20201117 14:42:17.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.856" endtime="20201117 14:42:17.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:17.860" endtime="20201117 14:42:17.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.858" endtime="20201117 14:42:17.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.855" endtime="20201117 14:42:17.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.485" endtime="20201117 14:42:17.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.089" endtime="20201117 14:42:17.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.088" endtime="20201117 14:42:17.881"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.884" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.892" endtime="20201117 14:42:17.909"></status>
</kw>
<msg timestamp="20201117 14:42:17.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.891" endtime="20201117 14:42:17.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:17.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:17.911" endtime="20201117 14:42:17.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.913" endtime="20201117 14:42:17.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.888" endtime="20201117 14:42:17.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.886" endtime="20201117 14:42:17.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:17.923" endtime="20201117 14:42:18.211"></status>
</kw>
<msg timestamp="20201117 14:42:18.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025095889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025142778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:17.921" endtime="20201117 14:42:18.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025095889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025142778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.215" endtime="20201117 14:42:18.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.224" endtime="20201117 14:42:18.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.919" endtime="20201117 14:42:18.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.917" endtime="20201117 14:42:18.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.231" level="INFO">${RESULT} = [{'time': 0.025142778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6889000000001346e-05, 'source_diff': 4.6889000000001346e-05}, {'time': 0.025199792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:18.228" endtime="20201117 14:42:18.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.246" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:18.232" endtime="20201117 14:42:18.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.251" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.250" endtime="20201117 14:42:18.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.254" level="INFO">VALUE: [4.6889000000001346e-05, 4.66529999999972e-05, 4.751400000000197e-05, 4.7013999999998e-05, 4.7167000000000736e-05, 4.711099999999899e-05, 4.734699999999967e-05, 4.666600000000076e-05, 4.749999999999893e-05, 4.695799999999972e-05, 4.754200000000111e-05, 4.668000000000033e-05, 4.659699999999892e-05, 4.702800000000104e-05, 4.70000000000019e-05, 4.6653000000000666e-05, 4.751400000000197e-05, 4.737499999999881e-05, 4.71529999999977e-05, 4.734799999999914e-05, 4.749999999999893e-05, 4.684799999999864e-05, 4.7167000000000736e-05, 4.683399999999907e-05, 4.666699999999677e-05, 4.6667000000000236e-05, 4.731900000000053e-05, 4.749999999999893e-05, 4.668000000000033e-05, 4.7139000000001596e-05, 4.684699999999917e-05, 4.666599999999729e-05, 4.684699999999917e-05, 4.7181000000000306e-05, 4.704200000000061e-05, 4.731900000000053e-05, 4.6653000000000666e-05, 4.6694999999999376e-05, 4.7167000000000736e-05, 4.749999999999893e-05, 4.679200000000036e-05, 4.733399999999957e-05, 4.736099999999924e-05, 4.7486999999998836e-05, 4.718000000000083e-05, 4.662499999999806e-05, 4.70000000000019e-05, 4.73330000000001e-05, 4.68329999999996e-05, 4.6667000000000236e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.252" endtime="20201117 14:42:18.254"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.247" endtime="20201117 14:42:18.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.257" endtime="20201117 14:42:18.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.261" endtime="20201117 14:42:18.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.259" endtime="20201117 14:42:18.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.255" endtime="20201117 14:42:18.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.884" endtime="20201117 14:42:18.281"></status>
</kw>
<msg timestamp="20201117 14:42:18.282" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.290" endtime="20201117 14:42:18.307"></status>
</kw>
<msg timestamp="20201117 14:42:18.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.289" endtime="20201117 14:42:18.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.308" endtime="20201117 14:42:18.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.311" endtime="20201117 14:42:18.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.286" endtime="20201117 14:42:18.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.284" endtime="20201117 14:42:18.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.320" endtime="20201117 14:42:18.607"></status>
</kw>
<msg timestamp="20201117 14:42:18.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.319" endtime="20201117 14:42:18.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.612" endtime="20201117 14:42:18.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.621" endtime="20201117 14:42:18.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.316" endtime="20201117 14:42:18.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.314" endtime="20201117 14:42:18.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:18.628" level="INFO">${RESULT} = [{'time': 0.022444167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.673600000000208e-05, 'source_diff': 4.673600000000208e-05}, {'time': 0.022499181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:18.624" endtime="20201117 14:42:18.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:18.641" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:18.629" endtime="20201117 14:42:18.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.646" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:42:18.645" endtime="20201117 14:42:18.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.649" level="INFO">VALUE: [4.673600000000208e-05, 4.749999999999893e-05, 4.684800000000211e-05, 4.684800000000211e-05, 4.668000000000033e-05, 4.6639000000001096e-05, 4.686099999999874e-05, 4.748599999999936e-05, 4.66939999999999e-05, 4.749999999999893e-05, 4.7375000000002276e-05, 4.7389000000001846e-05, 4.731900000000053e-05, 4.6667000000000236e-05, 4.749999999999893e-05, 4.7167000000000736e-05, 4.73330000000001e-05, 4.6680999999999806e-05, 4.677800000000079e-05, 4.702800000000104e-05, 4.736099999999924e-05, 4.6847000000002637e-05, 4.699999999999843e-05, 4.684799999999864e-05, 4.666600000000076e-05, 4.683300000000307e-05, 4.666600000000076e-05, 4.734699999999967e-05, 4.751400000000197e-05, 4.752799999999807e-05, 4.684699999999917e-05, 4.681900000000003e-05, 4.680599999999993e-05, 4.73330000000001e-05, 4.752800000000154e-05, 4.6667000000000236e-05, 4.6667000000000236e-05, 4.682000000000297e-05, 4.733399999999957e-05, 4.683399999999907e-05, 4.75139999999985e-05, 4.75139999999985e-05, 4.729200000000086e-05, 4.718000000000083e-05, 4.716600000000126e-05, 4.668000000000033e-05, 4.716599999999779e-05, 4.734699999999967e-05, 4.681900000000003e-05, 4.716600000000126e-05]</msg>
<status status="PASS" starttime="20201117 14:42:18.647" endtime="20201117 14:42:18.649"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.642" endtime="20201117 14:42:18.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.652" endtime="20201117 14:42:18.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:18.656" endtime="20201117 14:42:18.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.654" endtime="20201117 14:42:18.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.650" endtime="20201117 14:42:18.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.282" endtime="20201117 14:42:18.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.882" endtime="20201117 14:42:18.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:17.882" endtime="20201117 14:42:18.677"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.679" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.688" endtime="20201117 14:42:18.705"></status>
</kw>
<msg timestamp="20201117 14:42:18.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.686" endtime="20201117 14:42:18.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:18.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:18.706" endtime="20201117 14:42:18.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.709" endtime="20201117 14:42:18.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.683" endtime="20201117 14:42:18.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.681" endtime="20201117 14:42:18.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:18.719" endtime="20201117 14:42:19.007"></status>
</kw>
<msg timestamp="20201117 14:42:19.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024991389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025039264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:18.717" endtime="20201117 14:42:19.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024991389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025039264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.011" endtime="20201117 14:42:19.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.020" endtime="20201117 14:42:19.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.714" endtime="20201117 14:42:19.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.712" endtime="20201117 14:42:19.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.027" level="INFO">${RESULT} = [{'time': 0.025039264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.787499999999931e-05, 'source_diff': 4.787499999999931e-05}, {'time': 0.025096278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.023" endtime="20201117 14:42:19.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.040" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:19.028" endtime="20201117 14:42:19.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.045" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.044" endtime="20201117 14:42:19.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.048" level="INFO">VALUE: [4.787499999999931e-05, 4.85139999999995e-05, 4.85139999999995e-05, 4.834800000000014e-05, 4.799999999999943e-05, 4.818099999999784e-05, 4.8473000000000266e-05, 4.783400000000007e-05, 4.765199999999872e-05, 4.76940000000009e-05, 4.816599999999879e-05, 4.766599999999829e-05, 4.83330000000011e-05, 4.8013999999999e-05, 4.85139999999995e-05, 4.834700000000067e-05, 4.8167000000001736e-05, 4.8167000000001736e-05, 4.852799999999907e-05, 4.76529999999982e-05, 4.8181000000001306e-05, 4.76529999999982e-05, 4.849999999999993e-05, 4.854099999999917e-05, 4.804100000000214e-05, 4.799999999999943e-05, 4.852700000000307e-05, 4.781899999999756e-05, 4.824999999999968e-05, 4.85139999999995e-05, 4.816599999999879e-05, 4.816599999999879e-05, 4.768000000000133e-05, 4.836100000000024e-05, 4.816699999999827e-05, 4.852800000000254e-05, 4.83469999999972e-05, 4.7681000000000806e-05, 4.849999999999993e-05, 4.833400000000057e-05, 4.802800000000204e-05, 4.816699999999827e-05, 4.784799999999964e-05, 4.7861000000003207e-05, 4.81940000000014e-05, 4.834700000000067e-05, 4.816599999999879e-05, 4.80000000000029e-05, 4.807000000000075e-05, 4.831900000000153e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.046" endtime="20201117 14:42:19.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.041" endtime="20201117 14:42:19.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.051" endtime="20201117 14:42:19.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.055" endtime="20201117 14:42:19.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.053" endtime="20201117 14:42:19.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.049" endtime="20201117 14:42:19.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.680" endtime="20201117 14:42:19.075"></status>
</kw>
<msg timestamp="20201117 14:42:19.076" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.084" endtime="20201117 14:42:19.101"></status>
</kw>
<msg timestamp="20201117 14:42:19.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.083" endtime="20201117 14:42:19.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.103" endtime="20201117 14:42:19.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.106" endtime="20201117 14:42:19.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.080" endtime="20201117 14:42:19.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.078" endtime="20201117 14:42:19.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.115" endtime="20201117 14:42:19.402"></status>
</kw>
<msg timestamp="20201117 14:42:19.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.114" endtime="20201117 14:42:19.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.407" endtime="20201117 14:42:19.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.415" endtime="20201117 14:42:19.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.111" endtime="20201117 14:42:19.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.109" endtime="20201117 14:42:19.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.422" level="INFO">${RESULT} = [{'time': 0.022436403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.855600000000168e-05, 'source_diff': 4.855600000000168e-05}, {'time': 0.022492417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.419" endtime="20201117 14:42:19.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.436" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:19.423" endtime="20201117 14:42:19.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.441" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.440" endtime="20201117 14:42:19.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.443" level="INFO">VALUE: [4.855600000000168e-05, 4.849999999999993e-05, 4.837499999999981e-05, 4.816699999999827e-05, 4.8013000000003e-05, 4.852799999999907e-05, 4.816599999999879e-05, 4.831899999999806e-05, 4.802800000000204e-05, 4.818000000000183e-05, 4.849999999999993e-05, 4.76940000000009e-05, 4.7667000000001236e-05, 4.818099999999784e-05, 4.849999999999993e-05, 4.7667000000001236e-05, 4.849999999999993e-05, 4.786099999999974e-05, 4.818099999999784e-05, 4.781999999999703e-05, 4.816699999999827e-05, 4.798599999999986e-05, 4.787499999999931e-05, 4.799999999999943e-05, 4.781899999999756e-05, 4.849999999999993e-05, 4.834700000000067e-05, 4.849999999999993e-05, 4.83469999999972e-05, 4.762499999999906e-05, 4.766699999999777e-05, 4.8167000000001736e-05, 4.8195000000000876e-05, 4.818099999999784e-05, 4.797200000000029e-05, 4.78200000000005e-05, 4.7695000000000376e-05, 4.768099999999734e-05, 4.849999999999993e-05, 4.786099999999974e-05, 4.7667000000001236e-05, 4.8013999999999e-05, 4.816599999999879e-05, 4.787499999999931e-05, 4.767999999999786e-05, 4.802799999999857e-05, 4.834700000000067e-05, 4.816599999999879e-05, 4.758300000000035e-05, 4.7681000000000806e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.442" endtime="20201117 14:42:19.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.437" endtime="20201117 14:42:19.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.447" endtime="20201117 14:42:19.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.450" endtime="20201117 14:42:19.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.449" endtime="20201117 14:42:19.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.445" endtime="20201117 14:42:19.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.076" endtime="20201117 14:42:19.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.678" endtime="20201117 14:42:19.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:18.677" endtime="20201117 14:42:19.472"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.474" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.483" endtime="20201117 14:42:19.500"></status>
</kw>
<msg timestamp="20201117 14:42:19.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.482" endtime="20201117 14:42:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.502" endtime="20201117 14:42:19.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.504" endtime="20201117 14:42:19.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.479" endtime="20201117 14:42:19.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.476" endtime="20201117 14:42:19.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.514" endtime="20201117 14:42:19.800"></status>
</kw>
<msg timestamp="20201117 14:42:19.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025603722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.512" endtime="20201117 14:42:19.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025603722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025652444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.805" endtime="20201117 14:42:19.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.813" endtime="20201117 14:42:19.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.510" endtime="20201117 14:42:19.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.508" endtime="20201117 14:42:19.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:19.820" level="INFO">${RESULT} = [{'time': 0.025652444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.872200000000104e-05, 'source_diff': 4.872200000000104e-05}, {'time': 0.025709444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:19.817" endtime="20201117 14:42:19.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:19.835" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:19.821" endtime="20201117 14:42:19.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.840" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:19.839" endtime="20201117 14:42:19.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.843" level="INFO">VALUE: [4.872200000000104e-05, 4.950000000000093e-05, 4.9014e-05, 4.872199999999757e-05, 4.877699999999985e-05, 4.93469999999982e-05, 4.883299999999813e-05, 4.880499999999899e-05, 4.947199999999832e-05, 4.93330000000021e-05, 4.949999999999746e-05, 4.913900000000013e-05, 4.897200000000129e-05, 4.8667000000002236e-05, 4.913900000000013e-05, 4.948600000000136e-05, 4.875000000000018e-05, 4.934800000000114e-05, 4.918000000000283e-05, 4.901300000000053e-05, 4.890299999999945e-05, 4.918000000000283e-05, 4.937500000000081e-05, 4.868000000000233e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.904199999999914e-05, 4.933299999999863e-05, 4.908300000000185e-05, 4.95140000000005e-05, 4.883299999999813e-05, 4.8945000000001626e-05, 4.884799999999717e-05, 4.902800000000304e-05, 4.868099999999834e-05, 4.866699999999877e-05, 4.884700000000117e-05, 4.877699999999985e-05, 4.933299999999863e-05, 4.866600000000276e-05, 4.868000000000233e-05, 4.886100000000074e-05, 4.88330000000016e-05, 4.934700000000167e-05, 4.883299999999813e-05, 4.951399999999703e-05, 4.898599999999739e-05, 4.9195000000001876e-05, 4.869499999999791e-05, 4.916699999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:42:19.841" endtime="20201117 14:42:19.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.836" endtime="20201117 14:42:19.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.846" endtime="20201117 14:42:19.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:19.850" endtime="20201117 14:42:19.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.848" endtime="20201117 14:42:19.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.844" endtime="20201117 14:42:19.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.475" endtime="20201117 14:42:19.871"></status>
</kw>
<msg timestamp="20201117 14:42:19.871" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.880" endtime="20201117 14:42:19.897"></status>
</kw>
<msg timestamp="20201117 14:42:19.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.878" endtime="20201117 14:42:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:19.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:19.898" endtime="20201117 14:42:19.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.901" endtime="20201117 14:42:19.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.875" endtime="20201117 14:42:19.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.873" endtime="20201117 14:42:19.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:19.910" endtime="20201117 14:42:20.198"></status>
</kw>
<msg timestamp="20201117 14:42:20.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:19.909" endtime="20201117 14:42:20.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.203" endtime="20201117 14:42:20.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.211" endtime="20201117 14:42:20.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.906" endtime="20201117 14:42:20.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.904" endtime="20201117 14:42:20.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.218" level="INFO">${RESULT} = [{'time': 0.023011153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.905599999999871e-05, 'source_diff': 4.905599999999871e-05}, {'time': 0.023072167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:20.215" endtime="20201117 14:42:20.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:20.219" endtime="20201117 14:42:20.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.237" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.235" endtime="20201117 14:42:20.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.239" level="INFO">VALUE: [4.905599999999871e-05, 4.8695000000001376e-05, 4.866699999999877e-05, 4.886200000000021e-05, 4.884800000000064e-05, 4.918099999999884e-05, 4.93469999999982e-05, 4.917999999999936e-05, 4.917999999999936e-05, 4.900000000000043e-05, 4.88330000000016e-05, 4.8709000000000946e-05, 4.88330000000016e-05, 4.8667000000002236e-05, 4.933299999999863e-05, 4.900000000000043e-05, 4.942999999999961e-05, 4.9014e-05, 4.95140000000005e-05, 4.930599999999896e-05, 4.9167000000002736e-05, 4.88339999999976e-05, 4.886200000000021e-05, 4.9320000000002e-05, 4.934800000000114e-05, 4.86529999999992e-05, 4.917999999999936e-05, 4.899999999999696e-05, 4.9014e-05, 4.951399999999703e-05, 4.95140000000005e-05, 4.934700000000167e-05, 4.862500000000006e-05, 4.8681000000001806e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.95140000000005e-05, 4.86529999999992e-05, 4.908300000000185e-05, 4.933400000000157e-05, 4.866699999999877e-05, 4.861100000000049e-05, 4.9014e-05, 4.950000000000093e-05, 4.883400000000107e-05, 4.933299999999863e-05, 4.895799999999825e-05, 4.952800000000007e-05, 4.927700000000035e-05, 4.934700000000167e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.238" endtime="20201117 14:42:20.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.233" endtime="20201117 14:42:20.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.242" endtime="20201117 14:42:20.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.250" endtime="20201117 14:42:20.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.249" endtime="20201117 14:42:20.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.241" endtime="20201117 14:42:20.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.872" endtime="20201117 14:42:20.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.473" endtime="20201117 14:42:20.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:19.472" endtime="20201117 14:42:20.272"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.274" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.283" endtime="20201117 14:42:20.299"></status>
</kw>
<msg timestamp="20201117 14:42:20.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.281" endtime="20201117 14:42:20.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.301" endtime="20201117 14:42:20.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.304" endtime="20201117 14:42:20.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.278" endtime="20201117 14:42:20.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.276" endtime="20201117 14:42:20.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.313" endtime="20201117 14:42:20.601"></status>
</kw>
<msg timestamp="20201117 14:42:20.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024998569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.311" endtime="20201117 14:42:20.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024998569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.605" endtime="20201117 14:42:20.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.614" endtime="20201117 14:42:20.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.309" endtime="20201117 14:42:20.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.307" endtime="20201117 14:42:20.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:20.621" level="INFO">${RESULT} = [{'time': 0.025048306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9736999999997616e-05, 'source_diff': 4.9736999999997616e-05}, {'time': 0.025112306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:20.617" endtime="20201117 14:42:20.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:20.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:20.622" endtime="20201117 14:42:20.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.639" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:20.638" endtime="20201117 14:42:20.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.642" level="INFO">VALUE: [4.9736999999997616e-05, 5.050000000000193e-05, 4.999999999999796e-05, 4.966600000000029e-05, 5.0014000000001e-05, 5.056999999999978e-05, 5.0165999999997324e-05, 4.995799999999925e-05, 5.036099999999877e-05, 5.033299999999963e-05, 4.984700000000217e-05, 5.004200000000014e-05, 5.034700000000267e-05, 4.98339999999986e-05, 4.965299999999673e-05, 5.055500000000074e-05, 5.0014000000001e-05, 5.000000000000143e-05, 4.968099999999934e-05, 5.03469999999992e-05, 4.9665999999996824e-05, 5.048599999999889e-05, 4.984700000000217e-05, 5.000000000000143e-05, 5.018000000000036e-05, 5.049999999999846e-05, 5.018000000000036e-05, 4.98330000000026e-05, 5.018099999999984e-05, 5.05140000000015e-05, 5.033299999999963e-05, 4.966699999999977e-05, 5.036099999999877e-05, 5.034800000000214e-05, 4.9901999999997504e-05, 5.02079999999995e-05, 5.05140000000015e-05, 4.966699999999977e-05, 5.03339999999991e-05, 4.965200000000072e-05, 4.967999999999986e-05, 4.967999999999986e-05, 5.03469999999992e-05, 4.987499999999784e-05, 4.98330000000026e-05, 5.033299999999963e-05, 5.048600000000236e-05, 5.033299999999963e-05, 4.998599999999839e-05, 4.966699999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:42:20.640" endtime="20201117 14:42:20.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.635" endtime="20201117 14:42:20.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.646" endtime="20201117 14:42:20.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:20.649" endtime="20201117 14:42:20.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.648" endtime="20201117 14:42:20.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.644" endtime="20201117 14:42:20.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.275" endtime="20201117 14:42:20.670"></status>
</kw>
<msg timestamp="20201117 14:42:20.671" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.679" endtime="20201117 14:42:20.697"></status>
</kw>
<msg timestamp="20201117 14:42:20.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.678" endtime="20201117 14:42:20.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:20.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:20.698" endtime="20201117 14:42:20.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.701" endtime="20201117 14:42:20.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.675" endtime="20201117 14:42:20.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.673" endtime="20201117 14:42:20.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:20.710" endtime="20201117 14:42:20.997"></status>
</kw>
<msg timestamp="20201117 14:42:21.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:20.709" endtime="20201117 14:42:21.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.001" endtime="20201117 14:42:21.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.010" endtime="20201117 14:42:21.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.706" endtime="20201117 14:42:21.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.704" endtime="20201117 14:42:21.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.017" level="INFO">${RESULT} = [{'time': 0.022550514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972200000000204e-05, 'source_diff': 4.972200000000204e-05}, {'time': 0.022609528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.013" endtime="20201117 14:42:21.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.030" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.018" endtime="20201117 14:42:21.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.035" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.034" endtime="20201117 14:42:21.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.038" level="INFO">VALUE: [4.972200000000204e-05, 5.012500000000156e-05, 5.033400000000257e-05, 5.037500000000181e-05, 5.0472999999998797e-05, 4.98339999999986e-05, 5.005500000000024e-05, 5.031900000000006e-05, 4.983299999999913e-05, 5.015299999999723e-05, 4.966600000000029e-05, 5.015200000000122e-05, 4.980499999999999e-05, 5.018000000000036e-05, 5.019399999999993e-05, 4.9723000000001516e-05, 5.049999999999846e-05, 4.981899999999956e-05, 5.000000000000143e-05, 4.96530000000002e-05, 5.030599999999996e-05, 5.03339999999991e-05, 4.984799999999817e-05, 5.008300000000285e-05, 4.986100000000174e-05, 4.959800000000139e-05, 5.040300000000095e-05, 4.987500000000131e-05, 5.000000000000143e-05, 4.983299999999913e-05, 5.033299999999963e-05, 5.018000000000036e-05, 4.979199999999989e-05, 4.998600000000186e-05, 5.0014000000001e-05, 5.016700000000027e-05, 5.001399999999753e-05, 4.983299999999913e-05, 5.03469999999992e-05, 4.984799999999817e-05, 4.9681000000002806e-05, 4.984800000000164e-05, 4.984800000000164e-05, 4.98200000000025e-05, 4.959699999999845e-05, 5.0165999999997324e-05, 5.05140000000015e-05, 4.970800000000247e-05, 5.0014000000001e-05, 4.966600000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.036" endtime="20201117 14:42:21.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.031" endtime="20201117 14:42:21.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.042" endtime="20201117 14:42:21.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.045" endtime="20201117 14:42:21.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.043" endtime="20201117 14:42:21.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.040" endtime="20201117 14:42:21.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.671" endtime="20201117 14:42:21.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.273" endtime="20201117 14:42:21.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:20.272" endtime="20201117 14:42:21.066"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.069" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.077" endtime="20201117 14:42:21.095"></status>
</kw>
<msg timestamp="20201117 14:42:21.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.076" endtime="20201117 14:42:21.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.096" endtime="20201117 14:42:21.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.099" endtime="20201117 14:42:21.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.073" endtime="20201117 14:42:21.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.071" endtime="20201117 14:42:21.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.108" endtime="20201117 14:42:21.396"></status>
</kw>
<msg timestamp="20201117 14:42:21.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025218931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025269667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.107" endtime="20201117 14:42:21.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025218931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025269667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.400" endtime="20201117 14:42:21.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.408" endtime="20201117 14:42:21.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.104" endtime="20201117 14:42:21.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.102" endtime="20201117 14:42:21.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.415" level="INFO">${RESULT} = [{'time': 0.025269667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.073599999999914e-05, 'source_diff': 5.073599999999914e-05}, {'time': 0.025329667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.412" endtime="20201117 14:42:21.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.431" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.416" endtime="20201117 14:42:21.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.435" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.434" endtime="20201117 14:42:21.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.438" level="INFO">VALUE: [5.073599999999914e-05, 5.06530000000012e-05, 5.08469999999997e-05, 5.132000000000053e-05, 5.1165999999998324e-05, 5.124999999999921e-05, 5.136099999999977e-05, 5.083300000000013e-05, 5.08469999999997e-05, 5.099999999999896e-05, 5.119400000000093e-05, 5.11530000000017e-05, 5.119500000000041e-05, 5.131900000000106e-05, 5.119500000000041e-05, 5.098599999999939e-05, 5.13340000000001e-05, 5.08339999999996e-05, 5.134799999999967e-05, 5.106900000000081e-05, 5.082000000000003e-05, 5.08469999999997e-05, 5.068000000000086e-05, 5.059699999999945e-05, 5.086099999999927e-05, 5.099999999999896e-05, 5.13470000000002e-05, 5.1165999999998324e-05, 5.136099999999977e-05, 5.137499999999934e-05, 5.136099999999977e-05, 5.112499999999909e-05, 5.100000000000243e-05, 5.098599999999939e-05, 5.084799999999917e-05, 5.099999999999896e-05, 5.15279999999986e-05, 5.06530000000012e-05, 5.13470000000002e-05, 5.09729999999993e-05, 5.08469999999997e-05, 5.066600000000129e-05, 5.12080000000005e-05, 5.083300000000013e-05, 5.069400000000043e-05, 5.13470000000002e-05, 5.088900000000188e-05, 5.102800000000157e-05, 5.118100000000084e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.436" endtime="20201117 14:42:21.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.432" endtime="20201117 14:42:21.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.442" endtime="20201117 14:42:21.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.445" endtime="20201117 14:42:21.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.444" endtime="20201117 14:42:21.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.440" endtime="20201117 14:42:21.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.069" endtime="20201117 14:42:21.466"></status>
</kw>
<msg timestamp="20201117 14:42:21.466" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.475" endtime="20201117 14:42:21.492"></status>
</kw>
<msg timestamp="20201117 14:42:21.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.473" endtime="20201117 14:42:21.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.494" endtime="20201117 14:42:21.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.497" endtime="20201117 14:42:21.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.471" endtime="20201117 14:42:21.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.468" endtime="20201117 14:42:21.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.506" endtime="20201117 14:42:21.793"></status>
</kw>
<msg timestamp="20201117 14:42:21.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.504" endtime="20201117 14:42:21.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:21.797" endtime="20201117 14:42:21.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.806" endtime="20201117 14:42:21.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.502" endtime="20201117 14:42:21.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.500" endtime="20201117 14:42:21.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:21.813" level="INFO">${RESULT} = [{'time': 0.022874306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.090300000000145e-05, 'source_diff': 5.090300000000145e-05}, {'time': 0.022936306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:21.809" endtime="20201117 14:42:21.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:21.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:21.814" endtime="20201117 14:42:21.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.832" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:42:21.831" endtime="20201117 14:42:21.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.834" level="INFO">VALUE: [5.090300000000145e-05, 5.08339999999996e-05, 5.143000000000161e-05, 5.149999999999946e-05, 5.101399999999853e-05, 5.119400000000093e-05, 5.0679999999997394e-05, 5.151399999999903e-05, 5.098599999999939e-05, 5.06530000000012e-05, 5.095800000000025e-05, 5.131900000000106e-05, 5.083300000000013e-05, 5.068100000000034e-05, 5.136099999999977e-05, 5.08339999999996e-05, 5.151399999999903e-05, 5.1014000000002e-05, 5.102699999999863e-05, 5.06530000000012e-05, 5.084700000000317e-05, 5.083300000000013e-05, 5.118000000000136e-05, 5.094400000000068e-05, 5.147200000000032e-05, 5.133300000000063e-05, 5.11669999999978e-05, 5.118100000000084e-05, 5.120899999999998e-05, 5.118100000000084e-05, 5.097199999999982e-05, 5.066700000000077e-05, 5.149999999999946e-05, 5.063900000000163e-05, 5.101399999999853e-05, 5.066700000000077e-05, 5.1014000000002e-05, 5.080600000000046e-05, 5.099999999999896e-05, 5.083300000000013e-05, 5.13470000000002e-05, 5.0665999999997824e-05, 5.086099999999927e-05, 5.081900000000056e-05, 5.08469999999997e-05, 5.083300000000013e-05, 5.091600000000154e-05, 5.131900000000106e-05, 5.086099999999927e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:42:21.833" endtime="20201117 14:42:21.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.828" endtime="20201117 14:42:21.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.837" endtime="20201117 14:42:21.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:21.841" endtime="20201117 14:42:21.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.840" endtime="20201117 14:42:21.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.836" endtime="20201117 14:42:21.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.467" endtime="20201117 14:42:21.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.067" endtime="20201117 14:42:21.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.067" endtime="20201117 14:42:21.862"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.865" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.873" endtime="20201117 14:42:21.891"></status>
</kw>
<msg timestamp="20201117 14:42:21.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.872" endtime="20201117 14:42:21.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:21.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:21.892" endtime="20201117 14:42:21.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.895" endtime="20201117 14:42:21.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.869" endtime="20201117 14:42:21.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.867" endtime="20201117 14:42:21.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:21.904" endtime="20201117 14:42:22.191"></status>
</kw>
<msg timestamp="20201117 14:42:22.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02499775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:21.903" endtime="20201117 14:42:22.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02499775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:22.196" endtime="20201117 14:42:22.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.204" endtime="20201117 14:42:22.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.900" endtime="20201117 14:42:22.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.898" endtime="20201117 14:42:22.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.212" level="INFO">${RESULT} = [{'time': 0.02499775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2221999999997604e-05, 'source_diff': 5.2221999999997604e-05}, {'time': 0.02505875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:22.208" endtime="20201117 14:42:22.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:22.213" endtime="20201117 14:42:22.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.231" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.230" endtime="20201117 14:42:22.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.233" level="INFO">VALUE: [5.2221999999997604e-05, 5.227800000000282e-05, 5.172200000000057e-05, 5.215299999999923e-05, 5.234699999999773e-05, 5.165299999999873e-05, 5.201399999999953e-05, 5.251299999999709e-05, 5.165299999999873e-05, 5.223600000000064e-05, 5.207000000000128e-05, 5.2165999999999324e-05, 5.2499999999996994e-05, 5.199999999999996e-05, 5.231900000000206e-05, 5.23470000000012e-05, 5.213899999999966e-05, 5.218099999999837e-05, 5.216700000000227e-05, 5.251400000000003e-05, 5.234699999999773e-05, 5.184699999999723e-05, 5.2193999999998464e-05, 5.184800000000017e-05, 5.16530000000022e-05, 5.250000000000046e-05, 5.23340000000011e-05, 5.190299999999898e-05, 5.199999999999996e-05, 5.186100000000027e-05, 5.181899999999809e-05, 5.254199999999917e-05, 5.230499999999902e-05, 5.176400000000275e-05, 5.250000000000046e-05, 5.18470000000007e-05, 5.21669999999988e-05, 5.168099999999787e-05, 5.21669999999988e-05, 5.215299999999923e-05, 5.18340000000006e-05, 5.201399999999953e-05, 5.18340000000006e-05, 5.229199999999892e-05, 5.184699999999723e-05, 5.23470000000012e-05, 5.1652000000002724e-05, 5.198600000000039e-05, 5.199999999999996e-05, 5.248600000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.232" endtime="20201117 14:42:22.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.227" endtime="20201117 14:42:22.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.236" endtime="20201117 14:42:22.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.240" endtime="20201117 14:42:22.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.238" endtime="20201117 14:42:22.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.235" endtime="20201117 14:42:22.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.865" endtime="20201117 14:42:22.261"></status>
</kw>
<msg timestamp="20201117 14:42:22.261" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.270" endtime="20201117 14:42:22.288"></status>
</kw>
<msg timestamp="20201117 14:42:22.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.268" endtime="20201117 14:42:22.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.289" endtime="20201117 14:42:22.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.292" endtime="20201117 14:42:22.293"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.265" endtime="20201117 14:42:22.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.263" endtime="20201117 14:42:22.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.301" endtime="20201117 14:42:22.589"></status>
</kw>
<msg timestamp="20201117 14:42:22.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.300" endtime="20201117 14:42:22.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022481458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:22.594" endtime="20201117 14:42:22.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.603" endtime="20201117 14:42:22.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.297" endtime="20201117 14:42:22.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.295" endtime="20201117 14:42:22.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:22.610" level="INFO">${RESULT} = [{'time': 0.022481458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.183299999999766e-05, 'source_diff': 5.183299999999766e-05}, {'time': 0.022541472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:22.606" endtime="20201117 14:42:22.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:22.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:22.611" endtime="20201117 14:42:22.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.629" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:42:22.627" endtime="20201117 14:42:22.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.631" level="INFO">VALUE: [5.183299999999766e-05, 5.233300000000163e-05, 5.199999999999996e-05, 5.1693999999997964e-05, 5.16669999999983e-05, 5.237499999999687e-05, 5.201399999999953e-05, 5.186100000000027e-05, 5.172200000000057e-05, 5.20279999999991e-05, 5.234800000000067e-05, 5.199999999999996e-05, 5.166700000000177e-05, 5.21530000000027e-05, 5.199999999999996e-05, 5.201300000000006e-05, 5.2471999999997854e-05, 5.218000000000236e-05, 5.233299999999816e-05, 5.236100000000077e-05, 5.255600000000221e-05, 5.16530000000022e-05, 5.23470000000012e-05, 5.233300000000163e-05, 5.179200000000189e-05, 5.231999999999806e-05, 5.258300000000188e-05, 5.16669999999983e-05, 5.2499999999996994e-05, 5.199999999999996e-05, 5.201399999999953e-05, 5.250000000000046e-05, 5.184699999999723e-05, 5.250000000000046e-05, 5.20279999999991e-05, 5.251400000000003e-05, 5.218000000000236e-05, 5.250000000000046e-05, 5.188899999999941e-05, 5.247200000000132e-05, 5.248600000000089e-05, 5.199999999999996e-05, 5.170900000000048e-05, 5.20279999999991e-05, 5.168100000000134e-05, 5.183399999999713e-05, 5.25279999999996e-05, 5.248600000000089e-05, 5.206900000000181e-05, 5.232000000000153e-05]</msg>
<status status="PASS" starttime="20201117 14:42:22.630" endtime="20201117 14:42:22.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.625" endtime="20201117 14:42:22.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.634" endtime="20201117 14:42:22.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:22.638" endtime="20201117 14:42:22.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.636" endtime="20201117 14:42:22.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.633" endtime="20201117 14:42:22.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.262" endtime="20201117 14:42:22.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.864" endtime="20201117 14:42:22.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:21.863" endtime="20201117 14:42:22.659"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.662" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.670" endtime="20201117 14:42:22.688"></status>
</kw>
<msg timestamp="20201117 14:42:22.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.669" endtime="20201117 14:42:22.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:22.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:22.690" endtime="20201117 14:42:22.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.692" endtime="20201117 14:42:22.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.666" endtime="20201117 14:42:22.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.664" endtime="20201117 14:42:22.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:22.702" endtime="20201117 14:42:22.989"></status>
</kw>
<msg timestamp="20201117 14:42:22.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02515175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:22.701" endtime="20201117 14:42:22.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025098931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02515175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:22.993" endtime="20201117 14:42:23.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.002" endtime="20201117 14:42:23.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.697" endtime="20201117 14:42:23.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.696" endtime="20201117 14:42:23.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.009" level="INFO">${RESULT} = [{'time': 0.02515175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.281899999999909e-05, 'source_diff': 5.281899999999909e-05}, {'time': 0.025216667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:23.006" endtime="20201117 14:42:23.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.010" endtime="20201117 14:42:23.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.029" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.028" endtime="20201117 14:42:23.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.032" level="INFO">VALUE: [5.281899999999909e-05, 5.350000000000146e-05, 5.33479999999982e-05, 5.351299999999809e-05, 5.336100000000177e-05, 5.300000000000096e-05, 5.2679999999999394e-05, 5.2985999999997924e-05, 5.313900000000066e-05, 5.330500000000002e-05, 5.334699999999873e-05, 5.31669999999998e-05, 5.268099999999887e-05, 5.298600000000139e-05, 5.300000000000096e-05, 5.283299999999866e-05, 5.3485999999998424e-05, 5.327800000000035e-05, 5.33340000000021e-05, 5.268099999999887e-05, 5.266700000000277e-05, 5.351299999999809e-05, 5.3166000000000324e-05, 5.2679999999999394e-05, 5.331899999999959e-05, 5.33470000000022e-05, 5.3166000000000324e-05, 5.350000000000146e-05, 5.26669999999993e-05, 5.30280000000001e-05, 5.31669999999998e-05, 5.2888000000000934e-05, 5.3499999999997994e-05, 5.312500000000109e-05, 5.28340000000016e-05, 5.31669999999998e-05, 5.263900000000016e-05, 5.343099999999962e-05, 5.2679999999999394e-05, 5.2985999999997924e-05, 5.350000000000146e-05, 5.284699999999823e-05, 5.33470000000022e-05, 5.265299999999973e-05, 5.30280000000001e-05, 5.334699999999873e-05, 5.3013999999997063e-05, 5.26669999999993e-05, 5.318099999999937e-05, 5.350000000000146e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.030" endtime="20201117 14:42:23.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.025" endtime="20201117 14:42:23.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.035" endtime="20201117 14:42:23.036"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.038" endtime="20201117 14:42:23.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.037" endtime="20201117 14:42:23.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.033" endtime="20201117 14:42:23.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.662" endtime="20201117 14:42:23.059"></status>
</kw>
<msg timestamp="20201117 14:42:23.060" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.068" endtime="20201117 14:42:23.086"></status>
</kw>
<msg timestamp="20201117 14:42:23.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.067" endtime="20201117 14:42:23.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.088" endtime="20201117 14:42:23.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.091" endtime="20201117 14:42:23.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.064" endtime="20201117 14:42:23.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.062" endtime="20201117 14:42:23.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.100" endtime="20201117 14:42:23.386"></status>
</kw>
<msg timestamp="20201117 14:42:23.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.099" endtime="20201117 14:42:23.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022834597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022888139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.390" endtime="20201117 14:42:23.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.399" endtime="20201117 14:42:23.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.096" endtime="20201117 14:42:23.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.094" endtime="20201117 14:42:23.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.406" level="INFO">${RESULT} = [{'time': 0.022888139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.35419999999967e-05, 'source_diff': 5.35419999999967e-05}, {'time': 0.022946153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:23.402" endtime="20201117 14:42:23.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.407" endtime="20201117 14:42:23.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.424" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.423" endtime="20201117 14:42:23.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.427" level="INFO">VALUE: [5.35419999999967e-05, 5.268099999999887e-05, 5.345899999999876e-05, 5.35410000000007e-05, 5.301400000000053e-05, 5.268099999999887e-05, 5.269400000000243e-05, 5.312500000000109e-05, 5.2665999999999824e-05, 5.351400000000103e-05, 5.300000000000096e-05, 5.2680000000002863e-05, 5.333299999999916e-05, 5.284699999999823e-05, 5.26669999999993e-05, 5.334699999999873e-05, 5.333299999999916e-05, 5.268099999999887e-05, 5.330599999999949e-05, 5.319499999999894e-05, 5.288899999999694e-05, 5.269499999999844e-05, 5.340300000000048e-05, 5.3193999999999464e-05, 5.26669999999993e-05, 5.2708000000002e-05, 5.280499999999952e-05, 5.2652000000000254e-05, 5.33470000000022e-05, 5.284699999999823e-05, 5.283300000000213e-05, 5.258299999999841e-05, 5.3471999999998854e-05, 5.31669999999998e-05, 5.286100000000127e-05, 5.31669999999998e-05, 5.334699999999873e-05, 5.262500000000059e-05, 5.336200000000124e-05, 5.268100000000234e-05, 5.268099999999887e-05, 5.31669999999998e-05, 5.2679999999999394e-05, 5.331899999999959e-05, 5.312500000000109e-05, 5.35280000000006e-05, 5.2693999999998964e-05, 5.300000000000096e-05, 5.336100000000177e-05, 5.316700000000327e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.425" endtime="20201117 14:42:23.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.420" endtime="20201117 14:42:23.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.430" endtime="20201117 14:42:23.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.434" endtime="20201117 14:42:23.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.432" endtime="20201117 14:42:23.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.428" endtime="20201117 14:42:23.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.060" endtime="20201117 14:42:23.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.661" endtime="20201117 14:42:23.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:22.660" endtime="20201117 14:42:23.455"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.457" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.467" endtime="20201117 14:42:23.484"></status>
</kw>
<msg timestamp="20201117 14:42:23.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.465" endtime="20201117 14:42:23.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.485" endtime="20201117 14:42:23.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.488" endtime="20201117 14:42:23.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.462" endtime="20201117 14:42:23.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.459" endtime="20201117 14:42:23.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.497" endtime="20201117 14:42:23.786"></status>
</kw>
<msg timestamp="20201117 14:42:23.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.496" endtime="20201117 14:42:23.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025687611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025742014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:23.790" endtime="20201117 14:42:23.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.799" endtime="20201117 14:42:23.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.493" endtime="20201117 14:42:23.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.491" endtime="20201117 14:42:23.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:23.806" level="INFO">${RESULT} = [{'time': 0.025742014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.440300000000148e-05, 'source_diff': 5.440300000000148e-05}, {'time': 0.025808014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:23.802" endtime="20201117 14:42:23.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:23.819" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:23.807" endtime="20201117 14:42:23.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.824" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:23.823" endtime="20201117 14:42:23.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.827" level="INFO">VALUE: [5.440300000000148e-05, 5.401400000000153e-05, 5.4013999999998064e-05, 5.41670000000008e-05, 5.3985999999998924e-05, 5.4013999999998064e-05, 5.381999999999956e-05, 5.433399999999963e-05, 5.38340000000026e-05, 5.434699999999973e-05, 5.433300000000016e-05, 5.40280000000011e-05, 5.3666000000000824e-05, 5.3679999999996925e-05, 5.4485999999999424e-05, 5.418100000000037e-05, 5.430500000000102e-05, 5.368099999999987e-05, 5.4499999999998994e-05, 5.393100000000012e-05, 5.36670000000003e-05, 5.45280000000016e-05, 5.36670000000003e-05, 5.38340000000026e-05, 5.4193999999996995e-05, 5.3666000000000824e-05, 5.38609999999988e-05, 5.383299999999966e-05, 5.3680000000000394e-05, 5.413900000000166e-05, 5.377800000000085e-05, 5.401400000000153e-05, 5.3999999999998494e-05, 5.368099999999987e-05, 5.418100000000037e-05, 5.4485999999999424e-05, 5.400000000000196e-05, 5.365300000000073e-05, 5.454200000000117e-05, 5.430600000000049e-05, 5.43479999999992e-05, 5.43479999999992e-05, 5.434699999999973e-05, 5.432000000000006e-05, 5.384699999999923e-05, 5.4166000000001324e-05, 5.3999999999998494e-05, 5.3666000000000824e-05, 5.433300000000016e-05, 5.380500000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:42:23.825" endtime="20201117 14:42:23.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.820" endtime="20201117 14:42:23.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.830" endtime="20201117 14:42:23.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:23.834" endtime="20201117 14:42:23.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.832" endtime="20201117 14:42:23.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.828" endtime="20201117 14:42:23.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.458" endtime="20201117 14:42:23.855"></status>
</kw>
<msg timestamp="20201117 14:42:23.855" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.864" endtime="20201117 14:42:23.882"></status>
</kw>
<msg timestamp="20201117 14:42:23.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.862" endtime="20201117 14:42:23.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:23.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:23.884" endtime="20201117 14:42:23.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.886" endtime="20201117 14:42:23.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.859" endtime="20201117 14:42:23.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.857" endtime="20201117 14:42:23.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:23.896" endtime="20201117 14:42:24.183"></status>
</kw>
<msg timestamp="20201117 14:42:24.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02335275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:23.894" endtime="20201117 14:42:24.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02335275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:24.188" endtime="20201117 14:42:24.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.196" endtime="20201117 14:42:24.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.892" endtime="20201117 14:42:24.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.890" endtime="20201117 14:42:24.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.203" level="INFO">${RESULT} = [{'time': 0.023406653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.390300000000098e-05, 'source_diff': 5.390300000000098e-05}, {'time': 0.023474653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.200" endtime="20201117 14:42:24.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.217" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:24.204" endtime="20201117 14:42:24.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.222" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.221" endtime="20201117 14:42:24.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.225" level="INFO">VALUE: [5.390300000000098e-05, 5.36670000000003e-05, 5.433399999999963e-05, 5.415300000000123e-05, 5.4513999999998564e-05, 5.411200000000199e-05, 5.433300000000016e-05, 5.4166000000001324e-05, 5.3680000000000394e-05, 5.451400000000203e-05, 5.383299999999966e-05, 5.431899999999712e-05, 5.3985999999998924e-05, 5.434699999999973e-05, 5.384699999999923e-05, 5.368099999999987e-05, 5.4471999999999854e-05, 5.401400000000153e-05, 5.437499999999887e-05, 5.433399999999963e-05, 5.433399999999963e-05, 5.380599999999999e-05, 5.3680000000000394e-05, 5.3666000000000824e-05, 5.405600000000024e-05, 5.400000000000196e-05, 5.400000000000196e-05, 5.4166000000001324e-05, 5.438900000000191e-05, 5.43470000000032e-05, 5.4527999999998134e-05, 5.4499999999998994e-05, 5.418100000000037e-05, 5.400000000000196e-05, 5.412499999999862e-05, 5.432000000000006e-05, 5.387500000000184e-05, 5.4194000000000464e-05, 5.361199999999802e-05, 5.450000000000246e-05, 5.433300000000016e-05, 5.448600000000289e-05, 5.45280000000016e-05, 5.38609999999988e-05, 5.387500000000184e-05, 5.4180000000000894e-05, 5.362499999999812e-05, 5.383300000000313e-05, 5.4499999999998994e-05, 5.4013999999998064e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.223" endtime="20201117 14:42:24.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.219" endtime="20201117 14:42:24.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.229" endtime="20201117 14:42:24.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.232" endtime="20201117 14:42:24.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.231" endtime="20201117 14:42:24.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.226" endtime="20201117 14:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.856" endtime="20201117 14:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.456" endtime="20201117 14:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:23.455" endtime="20201117 14:42:24.254"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.256" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.265" endtime="20201117 14:42:24.283"></status>
</kw>
<msg timestamp="20201117 14:42:24.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.263" endtime="20201117 14:42:24.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.284" endtime="20201117 14:42:24.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.287" endtime="20201117 14:42:24.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.260" endtime="20201117 14:42:24.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.258" endtime="20201117 14:42:24.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.296" endtime="20201117 14:42:24.582"></status>
</kw>
<msg timestamp="20201117 14:42:24.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025316861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.295" endtime="20201117 14:42:24.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025316861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.587" endtime="20201117 14:42:24.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.595" endtime="20201117 14:42:24.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.292" endtime="20201117 14:42:24.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.290" endtime="20201117 14:42:24.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.602" level="INFO">${RESULT} = [{'time': 0.025316861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.508300000000091e-05, 'source_diff': 5.508300000000091e-05}, {'time': 0.025385847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:24.599" endtime="20201117 14:42:24.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:24.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:24.603" endtime="20201117 14:42:24.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.622" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:24.621" endtime="20201117 14:42:24.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.625" level="INFO">VALUE: [5.508300000000091e-05, 5.5499999999999994e-05, 5.5013999999999064e-05, 5.5541999999998704e-05, 5.5499999999999994e-05, 5.531899999999812e-05, 5.534700000000073e-05, 5.5486000000000424e-05, 5.55280000000026e-05, 5.5013999999999064e-05, 5.5193999999997995e-05, 5.551400000000303e-05, 5.51670000000018e-05, 5.482000000000056e-05, 5.4680000000001394e-05, 5.501400000000253e-05, 5.5180000000001894e-05, 5.480500000000152e-05, 5.533300000000116e-05, 5.5499999999999994e-05, 5.46670000000013e-05, 5.5027999999998634e-05, 5.519500000000094e-05, 5.484700000000023e-05, 5.534700000000073e-05, 5.4722000000000104e-05, 5.533400000000063e-05, 5.51809999999979e-05, 5.502699999999916e-05, 5.516699999999833e-05, 5.5166000000002324e-05, 5.4985999999999924e-05, 5.50280000000021e-05, 5.481900000000109e-05, 5.4957999999997315e-05, 5.461099999999955e-05, 5.53610000000003e-05, 5.4999999999999494e-05, 5.4985999999999924e-05, 5.5513999999999564e-05, 5.5013999999999064e-05, 5.51670000000018e-05, 5.5499999999999994e-05, 5.483400000000013e-05, 5.518100000000137e-05, 5.4735999999999674e-05, 5.50549999999983e-05, 5.5013999999999064e-05, 5.483299999999719e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201117 14:42:24.624" endtime="20201117 14:42:24.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.619" endtime="20201117 14:42:24.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.629" endtime="20201117 14:42:24.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:24.632" endtime="20201117 14:42:24.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.631" endtime="20201117 14:42:24.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.627" endtime="20201117 14:42:24.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.257" endtime="20201117 14:42:24.653"></status>
</kw>
<msg timestamp="20201117 14:42:24.653" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.662" endtime="20201117 14:42:24.680"></status>
</kw>
<msg timestamp="20201117 14:42:24.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.660" endtime="20201117 14:42:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:24.681" endtime="20201117 14:42:24.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.684" endtime="20201117 14:42:24.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.658" endtime="20201117 14:42:24.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.655" endtime="20201117 14:42:24.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.693" endtime="20201117 14:42:24.979"></status>
</kw>
<msg timestamp="20201117 14:42:24.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.692" endtime="20201117 14:42:24.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:24.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022633847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:24.984" endtime="20201117 14:42:24.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:24.992" endtime="20201117 14:42:24.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.689" endtime="20201117 14:42:24.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.687" endtime="20201117 14:42:24.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:24.999" level="INFO">${RESULT} = [{'time': 0.022633847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5221999999997134e-05, 'source_diff': 5.5221999999997134e-05}, {'time': 0.022696847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:24.996" endtime="20201117 14:42:25.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.013" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.000" endtime="20201117 14:42:25.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.018" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.017" endtime="20201117 14:42:25.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.020" level="INFO">VALUE: [5.5221999999997134e-05, 5.515299999999876e-05, 5.501400000000253e-05, 5.5513999999999564e-05, 5.534700000000073e-05, 5.513899999999919e-05, 5.532000000000106e-05, 5.5027999999998634e-05, 5.516699999999833e-05, 5.515299999999876e-05, 5.53480000000002e-05, 5.516699999999833e-05, 5.465299999999826e-05, 5.4651999999998785e-05, 5.5513999999999564e-05, 5.534699999999726e-05, 5.5166000000002324e-05, 5.537499999999987e-05, 5.4665999999998355e-05, 5.484700000000023e-05, 5.516699999999833e-05, 5.5443999999998245e-05, 5.515300000000223e-05, 5.483300000000066e-05, 5.4985999999999924e-05, 5.537499999999987e-05, 5.5486000000000424e-05, 5.4999999999999494e-05, 5.53480000000002e-05, 5.5499999999999994e-05, 5.48609999999998e-05, 5.480500000000152e-05, 5.5208000000001034e-05, 5.5486000000000424e-05, 5.4694000000000964e-05, 5.5499999999999994e-05, 5.5527999999999134e-05, 5.46670000000013e-05, 5.5499999999999994e-05, 5.4902000000002504e-05, 5.532000000000106e-05, 5.483400000000013e-05, 5.46670000000013e-05, 5.5013999999999064e-05, 5.543099999999815e-05, 5.5513999999999564e-05, 5.515299999999876e-05, 5.5165999999998855e-05, 5.5151999999999285e-05, 5.4651999999998785e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.019" endtime="20201117 14:42:25.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.014" endtime="20201117 14:42:25.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.024" endtime="20201117 14:42:25.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.028" endtime="20201117 14:42:25.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.026" endtime="20201117 14:42:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.022" endtime="20201117 14:42:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.654" endtime="20201117 14:42:25.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.255" endtime="20201117 14:42:25.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:24.254" endtime="20201117 14:42:25.049"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.051" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.060" endtime="20201117 14:42:25.078"></status>
</kw>
<msg timestamp="20201117 14:42:25.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.058" endtime="20201117 14:42:25.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.080" endtime="20201117 14:42:25.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.082" endtime="20201117 14:42:25.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.056" endtime="20201117 14:42:25.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.054" endtime="20201117 14:42:25.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.092" endtime="20201117 14:42:25.380"></status>
</kw>
<msg timestamp="20201117 14:42:25.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.090" endtime="20201117 14:42:25.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025129542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.385" endtime="20201117 14:42:25.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.393" endtime="20201117 14:42:25.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.087" endtime="20201117 14:42:25.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.085" endtime="20201117 14:42:25.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.400" level="INFO">${RESULT} = [{'time': 0.025129542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.657000000000231e-05, 'source_diff': 5.657000000000231e-05}, {'time': 0.025191583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:25.397" endtime="20201117 14:42:25.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.414" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.401" endtime="20201117 14:42:25.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.419" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.418" endtime="20201117 14:42:25.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.427" level="INFO">VALUE: [5.657000000000231e-05, 5.58610000000008e-05, 5.63610000000013e-05, 5.648699999999743e-05, 5.60549999999993e-05, 5.583299999999819e-05, 5.634699999999826e-05, 5.583300000000166e-05, 5.63610000000013e-05, 5.58610000000008e-05, 5.637500000000087e-05, 5.584699999999776e-05, 5.581900000000209e-05, 5.58610000000008e-05, 5.616699999999933e-05, 5.634700000000173e-05, 5.6014000000000064e-05, 5.583399999999766e-05, 5.645900000000176e-05, 5.582000000000156e-05, 5.6514000000000564e-05, 5.583300000000166e-05, 5.586099999999733e-05, 5.5651999999999785e-05, 5.640300000000001e-05, 5.6514000000000564e-05, 5.6555999999999274e-05, 5.570900000000101e-05, 5.56809999999984e-05, 5.616699999999933e-05, 5.634699999999826e-05, 5.583400000000113e-05, 5.619499999999847e-05, 5.565300000000273e-05, 5.58480000000007e-05, 5.652700000000066e-05, 5.6500000000000994e-05, 5.633300000000216e-05, 5.6014000000000064e-05, 5.634699999999826e-05, 5.6000000000000494e-05, 5.6027999999999634e-05, 5.6000000000000494e-05, 5.6000000000000494e-05, 5.634699999999826e-05, 5.583299999999819e-05, 5.6471999999998385e-05, 5.633299999999869e-05, 5.583300000000166e-05, 5.56670000000023e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.420" endtime="20201117 14:42:25.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.415" endtime="20201117 14:42:25.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.431" endtime="20201117 14:42:25.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.435" endtime="20201117 14:42:25.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.433" endtime="20201117 14:42:25.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.429" endtime="20201117 14:42:25.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.052" endtime="20201117 14:42:25.455"></status>
</kw>
<msg timestamp="20201117 14:42:25.456" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.464" endtime="20201117 14:42:25.481"></status>
</kw>
<msg timestamp="20201117 14:42:25.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.463" endtime="20201117 14:42:25.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.482" endtime="20201117 14:42:25.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.485" endtime="20201117 14:42:25.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.460" endtime="20201117 14:42:25.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.458" endtime="20201117 14:42:25.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.495" endtime="20201117 14:42:25.781"></status>
</kw>
<msg timestamp="20201117 14:42:25.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:25.493" endtime="20201117 14:42:25.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571458, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:42:25.785" endtime="20201117 14:42:25.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.794" endtime="20201117 14:42:25.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.490" endtime="20201117 14:42:25.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.488" endtime="20201117 14:42:25.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:25.801" level="INFO">${RESULT} = [{'time': 0.022571458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5707999999998065e-05, 'source_diff': 5.5707999999998065e-05}, {'time': 0.022632472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:25.797" endtime="20201117 14:42:25.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:25.814" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:25.802" endtime="20201117 14:42:25.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.820" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:42:25.818" endtime="20201117 14:42:25.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.822" level="INFO">VALUE: [5.5707999999998065e-05, 5.633300000000216e-05, 5.565300000000273e-05, 5.583299999999819e-05, 5.618100000000237e-05, 5.583300000000166e-05, 5.6514000000000564e-05, 5.565299999999926e-05, 5.568100000000187e-05, 5.583399999999766e-05, 5.5693999999998495e-05, 5.566699999999883e-05, 5.6180000000002894e-05, 5.638900000000044e-05, 5.5986000000000924e-05, 5.5986000000000924e-05, 5.6514000000000564e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5.569499999999797e-05, 5.6527999999996664e-05, 5.620900000000151e-05, 5.634700000000173e-05, 5.63749999999974e-05, 5.584699999999776e-05, 5.619500000000194e-05, 5.568100000000187e-05, 5.6014000000000064e-05, 5.563899999999969e-05, 5.6500000000000994e-05, 5.5651999999999785e-05, 5.6500000000000994e-05, 5.634699999999826e-05, 5.6485999999997955e-05, 5.6514000000000564e-05, 5.568100000000187e-05, 5.6485999999997955e-05, 5.636099999999783e-05, 5.56809999999984e-05, 5.56809999999984e-05, 5.5763999999999814e-05, 5.63610000000013e-05, 5.6486000000001424e-05, 5.56809999999984e-05, 5.6500000000000994e-05, 5.58619999999968e-05, 5.6000000000000494e-05, 5.630499999999955e-05, 5.6179999999999425e-05, 5.634699999999826e-05]</msg>
<status status="PASS" starttime="20201117 14:42:25.821" endtime="20201117 14:42:25.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.816" endtime="20201117 14:42:25.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.826" endtime="20201117 14:42:25.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:25.829" endtime="20201117 14:42:25.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.827" endtime="20201117 14:42:25.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.824" endtime="20201117 14:42:25.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.456" endtime="20201117 14:42:25.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.050" endtime="20201117 14:42:25.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.049" endtime="20201117 14:42:25.850"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.853" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.861" endtime="20201117 14:42:25.879"></status>
</kw>
<msg timestamp="20201117 14:42:25.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.860" endtime="20201117 14:42:25.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:25.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:25.881" endtime="20201117 14:42:25.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.883" endtime="20201117 14:42:25.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.857" endtime="20201117 14:42:25.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.855" endtime="20201117 14:42:25.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:25.893" endtime="20201117 14:42:26.180"></status>
</kw>
<msg timestamp="20201117 14:42:26.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:25.891" endtime="20201117 14:42:26.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025110903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025168431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.184" endtime="20201117 14:42:26.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.193" endtime="20201117 14:42:26.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.888" endtime="20201117 14:42:26.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.887" endtime="20201117 14:42:26.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.201" level="INFO">${RESULT} = [{'time': 0.025168431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7528000000001134e-05, 'source_diff': 5.7528000000001134e-05}, {'time': 0.025234444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.197" endtime="20201117 14:42:26.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:26.202" endtime="20201117 14:42:26.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.220" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.219" endtime="20201117 14:42:26.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.223" level="INFO">VALUE: [5.7528000000001134e-05, 5.730500000000055e-05, 5.733299999999969e-05, 5.7014000000001064e-05, 5.663900000000069e-05, 5.684700000000223e-05, 5.688900000000094e-05, 5.733299999999969e-05, 5.684699999999876e-05, 5.672300000000158e-05, 5.66809999999994e-05, 5.716699999999686e-05, 5.683400000000213e-05, 5.683399999999866e-05, 5.683399999999866e-05, 5.7000000000001494e-05, 5.69870000000014e-05, 5.734699999999926e-05, 5.7000000000001494e-05, 5.7180000000000425e-05, 5.683299999999919e-05, 5.734699999999926e-05, 5.666699999999983e-05, 5.733299999999969e-05, 5.7500000000001994e-05, 5.733299999999969e-05, 5.7514000000001564e-05, 5.666699999999983e-05, 5.71809999999999e-05, 5.7014000000001064e-05, 5.7000000000001494e-05, 5.6999999999998024e-05, 5.734799999999873e-05, 5.6750000000001244e-05, 5.7180000000000425e-05, 5.7152000000001285e-05, 5.6666000000000355e-05, 5.6957999999999315e-05, 5.734700000000273e-05, 5.7528000000001134e-05, 5.7000000000001494e-05, 5.73610000000023e-05, 5.7042000000000204e-05, 5.716700000000033e-05, 5.70550000000003e-05, 5.6693999999999495e-05, 5.736200000000177e-05, 5.716700000000033e-05, 5.7193999999999995e-05, 5.698699999999793e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.222" endtime="20201117 14:42:26.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.217" endtime="20201117 14:42:26.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.226" endtime="20201117 14:42:26.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.230" endtime="20201117 14:42:26.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.228" endtime="20201117 14:42:26.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.225" endtime="20201117 14:42:26.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.854" endtime="20201117 14:42:26.251"></status>
</kw>
<msg timestamp="20201117 14:42:26.251" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.260" endtime="20201117 14:42:26.277"></status>
</kw>
<msg timestamp="20201117 14:42:26.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.258" endtime="20201117 14:42:26.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.279" endtime="20201117 14:42:26.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.282" endtime="20201117 14:42:26.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.255" endtime="20201117 14:42:26.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.253" endtime="20201117 14:42:26.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.291" endtime="20201117 14:42:26.578"></status>
</kw>
<msg timestamp="20201117 14:42:26.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.290" endtime="20201117 14:42:26.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022889931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.583" endtime="20201117 14:42:26.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.592" endtime="20201117 14:42:26.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.287" endtime="20201117 14:42:26.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.285" endtime="20201117 14:42:26.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.599" level="INFO">${RESULT} = [{'time': 0.022947139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7207999999999565e-05, 'source_diff': 5.7207999999999565e-05}, {'time': 0.023011153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.595" endtime="20201117 14:42:26.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:26.612" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:26.600" endtime="20201117 14:42:26.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.617" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:42:26.616" endtime="20201117 14:42:26.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.620" level="INFO">VALUE: [5.7207999999999565e-05, 5.7319999999999593e-05, 5.686200000000127e-05, 5.7500000000001994e-05, 5.7014000000001064e-05, 5.7180000000000425e-05, 5.715300000000076e-05, 5.7542000000000704e-05, 5.7151999999997816e-05, 5.6986000000001924e-05, 5.73610000000023e-05, 5.683299999999919e-05, 5.734699999999926e-05, 5.666699999999983e-05, 5.734700000000273e-05, 5.7500000000001994e-05, 5.734699999999926e-05, 5.68480000000017e-05, 5.6736000000001674e-05, 5.7500000000001994e-05, 5.748699999999843e-05, 5.7499999999998525e-05, 5.715300000000076e-05, 5.684699999999876e-05, 5.7222000000002604e-05, 5.7444000000000245e-05, 5.7485999999998955e-05, 5.7556000000000274e-05, 5.7014000000001064e-05, 5.66809999999994e-05, 5.734700000000273e-05, 5.683299999999919e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.6791999999999954e-05, 5.73480000000022e-05, 5.666699999999983e-05, 5.7193999999999995e-05, 5.7499999999998525e-05, 5.684699999999876e-05, 5.6666000000000355e-05, 5.7180000000000425e-05, 5.7319999999999593e-05, 5.733299999999969e-05, 5.7499999999998525e-05, 5.731900000000012e-05, 5.734699999999926e-05, 5.683299999999919e-05, 5.684699999999876e-05, 5.7499999999998525e-05]</msg>
<status status="PASS" starttime="20201117 14:42:26.618" endtime="20201117 14:42:26.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.613" endtime="20201117 14:42:26.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.623" endtime="20201117 14:42:26.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:26.627" endtime="20201117 14:42:26.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.625" endtime="20201117 14:42:26.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.621" endtime="20201117 14:42:26.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.252" endtime="20201117 14:42:26.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.852" endtime="20201117 14:42:26.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:25.851" endtime="20201117 14:42:26.648"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.651" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.659" endtime="20201117 14:42:26.677"></status>
</kw>
<msg timestamp="20201117 14:42:26.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.658" endtime="20201117 14:42:26.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:26.678" endtime="20201117 14:42:26.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.681" endtime="20201117 14:42:26.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.655" endtime="20201117 14:42:26.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.653" endtime="20201117 14:42:26.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.691" endtime="20201117 14:42:26.978"></status>
</kw>
<msg timestamp="20201117 14:42:26.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025253514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.689" endtime="20201117 14:42:26.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:26.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025195778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025253514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:26.982" endtime="20201117 14:42:26.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:26.991" endtime="20201117 14:42:26.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.686" endtime="20201117 14:42:26.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.684" endtime="20201117 14:42:26.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:26.998" level="INFO">${RESULT} = [{'time': 0.025253514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7736000000002674e-05, 'source_diff': 5.7736000000002674e-05}, {'time': 0.025324542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:26.994" endtime="20201117 14:42:26.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.012" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:26.999" endtime="20201117 14:42:27.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.016" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.015" endtime="20201117 14:42:27.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.019" level="INFO">VALUE: [5.7736000000002674e-05, 5.8041999999997734e-05, 5.8499999999999525e-05, 5.768099999999693e-05, 5.7985999999999455e-05, 5.851299999999962e-05, 5.8347999999999733e-05, 5.766699999999736e-05, 5.784699999999976e-05, 5.811099999999958e-05, 5.811099999999958e-05, 5.781900000000062e-05, 5.8180000000001425e-05, 5.773699999999868e-05, 5.784699999999976e-05, 5.8514000000002564e-05, 5.8500000000002994e-05, 5.8513999999999095e-05, 5.7820000000000094e-05, 5.818099999999743e-05, 5.816700000000133e-05, 5.76810000000004e-05, 5.85550000000018e-05, 5.78619999999988e-05, 5.833299999999722e-05, 5.7666000000001355e-05, 5.784699999999976e-05, 5.8014000000002064e-05, 5.8513999999999095e-05, 5.8166000000001855e-05, 5.784699999999976e-05, 5.8513999999999095e-05, 5.8513999999999095e-05, 5.81810000000009e-05, 5.8500000000002994e-05, 5.834700000000026e-05, 5.78610000000028e-05, 5.784799999999923e-05, 5.788899999999847e-05, 5.816700000000133e-05, 5.783300000000019e-05, 5.7666000000001355e-05, 5.8485999999999955e-05, 5.8513999999999095e-05, 5.762499999999865e-05, 5.788899999999847e-05, 5.816700000000133e-05, 5.834700000000026e-05, 5.8041999999997734e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.018" endtime="20201117 14:42:27.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.013" endtime="20201117 14:42:27.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.022" endtime="20201117 14:42:27.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.026" endtime="20201117 14:42:27.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.024" endtime="20201117 14:42:27.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.021" endtime="20201117 14:42:27.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.651" endtime="20201117 14:42:27.047"></status>
</kw>
<msg timestamp="20201117 14:42:27.047" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.056" endtime="20201117 14:42:27.073"></status>
</kw>
<msg timestamp="20201117 14:42:27.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.054" endtime="20201117 14:42:27.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.075" endtime="20201117 14:42:27.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.078" endtime="20201117 14:42:27.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.051" endtime="20201117 14:42:27.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.049" endtime="20201117 14:42:27.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.087" endtime="20201117 14:42:27.375"></status>
</kw>
<msg timestamp="20201117 14:42:27.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.086" endtime="20201117 14:42:27.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.379" endtime="20201117 14:42:27.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.388" endtime="20201117 14:42:27.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.083" endtime="20201117 14:42:27.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.081" endtime="20201117 14:42:27.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.395" level="INFO">${RESULT} = [{'time': 0.022767542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790300000000151e-05, 'source_diff': 5.790300000000151e-05}, {'time': 0.022835528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:27.391" endtime="20201117 14:42:27.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.409" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:27.396" endtime="20201117 14:42:27.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.413" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.412" endtime="20201117 14:42:27.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.416" level="INFO">VALUE: [5.790300000000151e-05, 5.8334000000000163e-05, 5.7833999999999663e-05, 5.76810000000004e-05, 5.8334000000000163e-05, 5.7721999999999635e-05, 5.7666000000001355e-05, 5.8056000000000774e-05, 5.8499999999999525e-05, 5.8513999999999095e-05, 5.783300000000019e-05, 5.8013999999998594e-05, 5.781900000000062e-05, 5.8485999999999955e-05, 5.838900000000244e-05, 5.836099999999983e-05, 5.784699999999976e-05, 5.8485999999999955e-05, 5.786099999999933e-05, 5.816700000000133e-05, 5.834700000000026e-05, 5.852699999999919e-05, 5.8180000000001425e-05, 5.8193999999997525e-05, 5.8499999999999525e-05, 5.784699999999976e-05, 5.8166000000001855e-05, 5.8306000000001024e-05, 5.766700000000083e-05, 5.784699999999976e-05, 5.769499999999997e-05, 5.8014000000002064e-05, 5.834700000000026e-05, 5.8499999999999525e-05, 5.8334000000000163e-05, 5.852699999999919e-05, 5.7833999999999663e-05, 5.784699999999976e-05, 5.8513999999999095e-05, 5.836099999999983e-05, 5.833300000000069e-05, 5.7680000000000925e-05, 5.761099999999908e-05, 5.815300000000176e-05, 5.76810000000004e-05, 5.786099999999933e-05, 5.816700000000133e-05, 5.783300000000019e-05, 5.81810000000009e-05, 5.7833999999999663e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.414" endtime="20201117 14:42:27.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.410" endtime="20201117 14:42:27.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.419" endtime="20201117 14:42:27.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.423" endtime="20201117 14:42:27.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.421" endtime="20201117 14:42:27.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.418" endtime="20201117 14:42:27.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.048" endtime="20201117 14:42:27.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.649" endtime="20201117 14:42:27.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:26.648" endtime="20201117 14:42:27.444"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.447" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.456" endtime="20201117 14:42:27.473"></status>
</kw>
<msg timestamp="20201117 14:42:27.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.454" endtime="20201117 14:42:27.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.475" endtime="20201117 14:42:27.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.477" endtime="20201117 14:42:27.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.451" endtime="20201117 14:42:27.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.449" endtime="20201117 14:42:27.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.487" endtime="20201117 14:42:27.774"></status>
</kw>
<msg timestamp="20201117 14:42:27.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025636931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.485" endtime="20201117 14:42:27.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025636931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.779" endtime="20201117 14:42:27.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.787" endtime="20201117 14:42:27.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.483" endtime="20201117 14:42:27.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.481" endtime="20201117 14:42:27.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:27.794" level="INFO">${RESULT} = [{'time': 0.025695833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8901999999999566e-05, 'source_diff': 5.8901999999999566e-05}, {'time': 0.025768833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:27.791" endtime="20201117 14:42:27.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:27.810" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:27.795" endtime="20201117 14:42:27.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.814" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:27.813" endtime="20201117 14:42:27.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.817" level="INFO">VALUE: [5.8901999999999566e-05, 5.930500000000255e-05, 5.865299999999879e-05, 5.9000000000000025e-05, 5.8679999999998456e-05, 5.9486000000000955e-05, 5.862499999999965e-05, 5.883299999999772e-05, 5.88749999999999e-05, 5.909700000000101e-05, 5.916699999999886e-05, 5.9208000000001565e-05, 5.863899999999922e-05, 5.8679999999998456e-05, 5.9499999999997055e-05, 5.88749999999999e-05, 5.9041999999998734e-05, 5.884700000000076e-05, 5.934699999999779e-05, 5.9541999999999234e-05, 5.9056000000001774e-05, 5.883300000000119e-05, 5.933299999999822e-05, 5.881900000000162e-05, 5.868099999999793e-05, 5.86810000000014e-05, 5.866700000000183e-05, 5.8848000000000233e-05, 5.8583999999996944e-05, 5.8848000000000233e-05, 5.916699999999886e-05, 5.9056000000001774e-05, 5.9500000000000525e-05, 5.9514000000000095e-05, 5.9514000000000095e-05, 5.913899999999972e-05, 5.884700000000076e-05, 5.9277999999999414e-05, 5.933299999999822e-05, 5.936100000000083e-05, 5.9000000000000025e-05, 5.886100000000033e-05, 5.9027999999999164e-05, 5.9362000000000303e-05, 5.9333999999997694e-05, 5.8833999999997194e-05, 5.912500000000015e-05, 5.880499999999858e-05, 5.9514000000000095e-05, 5.8651999999999316e-05]</msg>
<status status="PASS" starttime="20201117 14:42:27.815" endtime="20201117 14:42:27.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.811" endtime="20201117 14:42:27.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.820" endtime="20201117 14:42:27.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:27.824" endtime="20201117 14:42:27.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.822" endtime="20201117 14:42:27.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.819" endtime="20201117 14:42:27.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.447" endtime="20201117 14:42:27.845"></status>
</kw>
<msg timestamp="20201117 14:42:27.845" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.854" endtime="20201117 14:42:27.871"></status>
</kw>
<msg timestamp="20201117 14:42:27.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.852" endtime="20201117 14:42:27.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:27.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:27.872" endtime="20201117 14:42:27.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.875" endtime="20201117 14:42:27.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.850" endtime="20201117 14:42:27.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.847" endtime="20201117 14:42:27.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:27.885" endtime="20201117 14:42:28.172"></status>
</kw>
<msg timestamp="20201117 14:42:28.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:27.883" endtime="20201117 14:42:28.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.177" endtime="20201117 14:42:28.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.185" endtime="20201117 14:42:28.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.880" endtime="20201117 14:42:28.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.878" endtime="20201117 14:42:28.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.192" level="INFO">${RESULT} = [{'time': 0.023072944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9402000000000066e-05, 'source_diff': 5.9402000000000066e-05}, {'time': 0.023137944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:28.189" endtime="20201117 14:42:28.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:28.193" endtime="20201117 14:42:28.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.211" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.210" endtime="20201117 14:42:28.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.213" level="INFO">VALUE: [5.9402000000000066e-05, 5.931900000000212e-05, 5.9570000000001844e-05, 5.8665999999998886e-05, 5.883300000000119e-05, 5.9514000000000095e-05, 5.933300000000169e-05, 5.934699999999779e-05, 5.866699999999836e-05, 5.934700000000126e-05, 5.9486000000000955e-05, 5.868099999999793e-05, 5.9319999999998124e-05, 5.9514000000000095e-05, 5.90550000000023e-05, 5.9334000000001164e-05, 5.9193999999998526e-05, 5.9221999999997665e-05, 5.8665999999998886e-05, 5.883300000000119e-05, 5.9179999999998956e-05, 5.915299999999929e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.865299999999879e-05, 5.884700000000076e-05, 5.9320000000001594e-05, 5.9334000000001164e-05, 5.9333999999997694e-05, 5.9500000000000525e-05, 5.918099999999843e-05, 5.876300000000334e-05, 5.9166000000002855e-05, 5.883299999999772e-05, 5.863899999999922e-05, 5.9027999999999164e-05, 5.934699999999779e-05, 5.9180000000002425e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.865299999999879e-05, 5.9000000000000025e-05, 5.883299999999772e-05, 5.9319999999998124e-05, 5.8848000000000233e-05, 5.9084000000000914e-05, 5.904099999999926e-05, 5.8819999999997624e-05, 5.902699999999969e-05, 5.9194000000001995e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.212" endtime="20201117 14:42:28.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.207" endtime="20201117 14:42:28.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.217" endtime="20201117 14:42:28.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.221" endtime="20201117 14:42:28.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.219" endtime="20201117 14:42:28.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.215" endtime="20201117 14:42:28.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.846" endtime="20201117 14:42:28.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.445" endtime="20201117 14:42:28.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:27.444" endtime="20201117 14:42:28.242"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.244" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.253" endtime="20201117 14:42:28.271"></status>
</kw>
<msg timestamp="20201117 14:42:28.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.252" endtime="20201117 14:42:28.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.273" endtime="20201117 14:42:28.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.276" endtime="20201117 14:42:28.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.249" endtime="20201117 14:42:28.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.247" endtime="20201117 14:42:28.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.285" endtime="20201117 14:42:28.572"></status>
</kw>
<msg timestamp="20201117 14:42:28.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.284" endtime="20201117 14:42:28.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.577" endtime="20201117 14:42:28.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.585" endtime="20201117 14:42:28.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.281" endtime="20201117 14:42:28.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.279" endtime="20201117 14:42:28.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.595" level="INFO">${RESULT} = [{'time': 0.025101569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.005499999999983e-05, 'source_diff': 6.005499999999983e-05}, {'time': 0.025173597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.591" endtime="20201117 14:42:28.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:28.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:28.596" endtime="20201117 14:42:28.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.614" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:28.613" endtime="20201117 14:42:28.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.616" level="INFO">VALUE: [6.005499999999983e-05, 5.986099999999786e-05, 6.0000000000001025e-05, 6.0014000000000595e-05, 5.9679999999999456e-05, 6.0055999999999304e-05, 6.0513999999997625e-05, 5.966699999999936e-05, 5.9736000000001205e-05, 5.966700000000283e-05, 6.00689999999994e-05, 6.0513999999997625e-05, 5.9848000000001234e-05, 6.0014000000000595e-05, 5.966699999999936e-05, 6.0500000000001525e-05, 6.0500000000001525e-05, 6.027699999999747e-05, 6.0500000000001525e-05, 6.0014000000000595e-05, 6.0179999999999956e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.0486000000001955e-05, 5.965299999999979e-05, 5.984699999999829e-05, 6.0486000000001955e-05, 6.0514000000001095e-05, 6.018099999999943e-05, 5.983299999999872e-05, 6.015300000000029e-05, 5.987499999999743e-05, 6.0193999999999526e-05, 6.0000000000001025e-05, 5.984699999999829e-05, 5.965299999999979e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 6.0513999999997625e-05, 6.01810000000029e-05, 5.966699999999936e-05, 5.968099999999893e-05, 5.965299999999979e-05, 6.0194999999999e-05, 6.0499999999998055e-05, 5.9848000000001234e-05, 5.9834000000001664e-05, 6.008299999999897e-05, 6.034699999999879e-05, 6.033299999999922e-05]</msg>
<status status="PASS" starttime="20201117 14:42:28.615" endtime="20201117 14:42:28.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.610" endtime="20201117 14:42:28.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.620" endtime="20201117 14:42:28.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:28.624" endtime="20201117 14:42:28.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.622" endtime="20201117 14:42:28.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.618" endtime="20201117 14:42:28.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.245" endtime="20201117 14:42:28.645"></status>
</kw>
<msg timestamp="20201117 14:42:28.645" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.654" endtime="20201117 14:42:28.671"></status>
</kw>
<msg timestamp="20201117 14:42:28.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.652" endtime="20201117 14:42:28.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:28.673" endtime="20201117 14:42:28.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.675" endtime="20201117 14:42:28.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.649" endtime="20201117 14:42:28.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.647" endtime="20201117 14:42:28.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.685" endtime="20201117 14:42:28.971"></status>
</kw>
<msg timestamp="20201117 14:42:28.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.683" endtime="20201117 14:42:28.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:28.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:28.976" endtime="20201117 14:42:28.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:28.984" endtime="20201117 14:42:28.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.680" endtime="20201117 14:42:28.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.679" endtime="20201117 14:42:28.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:28.991" level="INFO">${RESULT} = [{'time': 0.022830556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.973699999999721e-05, 'source_diff': 5.973699999999721e-05}, {'time': 0.022903583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:28.988" endtime="20201117 14:42:28.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.005" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:28.992" endtime="20201117 14:42:29.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.010" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.009" endtime="20201117 14:42:29.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.013" level="INFO">VALUE: [5.973699999999721e-05, 6.052700000000119e-05, 5.9665999999999886e-05, 6.0486000000001955e-05, 6.031899999999965e-05, 5.9679999999999456e-05, 6.0513999999997625e-05, 5.990300000000004e-05, 6.034699999999879e-05, 5.983300000000219e-05, 5.968099999999893e-05, 6.0000000000001025e-05, 5.968099999999893e-05, 5.9986000000001455e-05, 5.962499999999718e-05, 5.9847999999997764e-05, 6.004100000000026e-05, 5.991699999999961e-05, 6.033300000000269e-05, 5.986099999999786e-05, 6.034699999999879e-05, 5.990300000000004e-05, 6.016699999999986e-05, 5.9777999999999915e-05, 5.986099999999786e-05, 6.018099999999943e-05, 5.98750000000009e-05, 6.016699999999986e-05, 5.9834000000001664e-05, 5.9708000000002065e-05, 6.016699999999986e-05, 6.0014000000000595e-05, 5.98750000000009e-05, 6.0179999999999956e-05, 5.9665999999999886e-05, 5.9665999999999886e-05, 6.0028000000000165e-05, 6.031899999999965e-05, 6.0514000000001095e-05, 6.034699999999879e-05, 5.983299999999872e-05, 6.033300000000269e-05, 6.034699999999879e-05, 6.034700000000226e-05, 6.0249999999997805e-05, 6.0194000000002995e-05, 5.9833999999998194e-05, 6.048699999999796e-05, 5.986099999999786e-05, 5.9652000000000316e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.011" endtime="20201117 14:42:29.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.006" endtime="20201117 14:42:29.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.016" endtime="20201117 14:42:29.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.020" endtime="20201117 14:42:29.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.018" endtime="20201117 14:42:29.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.014" endtime="20201117 14:42:29.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.645" endtime="20201117 14:42:29.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.243" endtime="20201117 14:42:29.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:28.242" endtime="20201117 14:42:29.041"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.043" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.052" endtime="20201117 14:42:29.069"></status>
</kw>
<msg timestamp="20201117 14:42:29.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.050" endtime="20201117 14:42:29.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.070" endtime="20201117 14:42:29.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.073" endtime="20201117 14:42:29.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.048" endtime="20201117 14:42:29.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.046" endtime="20201117 14:42:29.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.082" endtime="20201117 14:42:29.370"></status>
</kw>
<msg timestamp="20201117 14:42:29.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025172389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.081" endtime="20201117 14:42:29.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025111514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025172389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.374" endtime="20201117 14:42:29.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.383" endtime="20201117 14:42:29.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.078" endtime="20201117 14:42:29.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.076" endtime="20201117 14:42:29.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.390" level="INFO">${RESULT} = [{'time': 0.025172389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.087499999999843e-05, 'source_diff': 6.087499999999843e-05}, {'time': 0.025238403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:29.387" endtime="20201117 14:42:29.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.406" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:29.391" endtime="20201117 14:42:29.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.410" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.409" endtime="20201117 14:42:29.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.413" level="INFO">VALUE: [6.087499999999843e-05, 6.0999999999998555e-05, 6.0848000000002234e-05, 6.152800000000166e-05, 6.148599999999949e-05, 6.151399999999863e-05, 6.148699999999896e-05, 6.081900000000015e-05, 6.134699999999979e-05, 6.083299999999972e-05, 6.116600000000139e-05, 6.084699999999929e-05, 6.066700000000036e-05, 6.084699999999929e-05, 6.065300000000079e-05, 6.118100000000043e-05, 6.0985999999998985e-05, 6.1195e-05, 6.086099999999886e-05, 6.147300000000286e-05, 6.0693999999996556e-05, 6.083299999999972e-05, 6.154200000000123e-05, 6.134699999999979e-05, 6.0666000000000886e-05, 6.1000000000002025e-05, 6.084699999999929e-05, 6.136099999999936e-05, 6.0999999999998555e-05, 6.15140000000021e-05, 6.134699999999979e-05, 6.105499999999736e-05, 6.0999999999998555e-05, 6.136199999999883e-05, 6.0862000000001804e-05, 6.13339999999997e-05, 6.0999999999998555e-05, 6.118000000000096e-05, 6.133300000000022e-05, 6.104199999999727e-05, 6.080500000000058e-05, 6.15140000000021e-05, 6.083299999999972e-05, 6.0985999999998985e-05, 6.118099999999696e-05, 6.084699999999929e-05, 6.086100000000233e-05, 6.149999999999906e-05, 6.1013999999998125e-05, 6.0847999999998764e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.411" endtime="20201117 14:42:29.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.406" endtime="20201117 14:42:29.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.416" endtime="20201117 14:42:29.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.420" endtime="20201117 14:42:29.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.418" endtime="20201117 14:42:29.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.414" endtime="20201117 14:42:29.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.044" endtime="20201117 14:42:29.440"></status>
</kw>
<msg timestamp="20201117 14:42:29.441" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.450" endtime="20201117 14:42:29.467"></status>
</kw>
<msg timestamp="20201117 14:42:29.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.448" endtime="20201117 14:42:29.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.468" endtime="20201117 14:42:29.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.471" endtime="20201117 14:42:29.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.445" endtime="20201117 14:42:29.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.443" endtime="20201117 14:42:29.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.480" endtime="20201117 14:42:29.767"></status>
</kw>
<msg timestamp="20201117 14:42:29.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590708, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:29.479" endtime="20201117 14:42:29.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590708, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:42:29.772" endtime="20201117 14:42:29.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.781" endtime="20201117 14:42:29.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.476" endtime="20201117 14:42:29.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.474" endtime="20201117 14:42:29.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:29.788" level="INFO">${RESULT} = [{'time': 0.022590708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0707999999999596e-05, 'source_diff': 6.0707999999999596e-05}, {'time': 0.022658722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:42:29.784" endtime="20201117 14:42:29.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:29.801" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:29.789" endtime="20201117 14:42:29.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.806" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:42:29.805" endtime="20201117 14:42:29.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.809" level="INFO">VALUE: [6.0707999999999596e-05, 6.134699999999979e-05, 6.148599999999949e-05, 6.0971999999999416e-05, 6.065300000000079e-05, 6.1000000000002025e-05, 6.149999999999906e-05, 6.066700000000036e-05, 6.148600000000295e-05, 6.1000000000002025e-05, 6.068099999999993e-05, 6.148599999999949e-05, 6.118000000000096e-05, 6.0665999999997416e-05, 6.137499999999893e-05, 6.115300000000129e-05, 6.147199999999992e-05, 6.0666000000000886e-05, 6.154200000000123e-05, 6.106999999999987e-05, 6.151399999999863e-05, 6.133300000000022e-05, 6.1000000000002025e-05, 6.15279999999982e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.101300000000212e-05, 6.15140000000021e-05, 6.133300000000022e-05, 6.0694000000000026e-05, 6.154200000000123e-05, 6.06949999999995e-05, 6.091700000000061e-05, 6.116700000000086e-05, 6.068099999999993e-05, 6.149999999999906e-05, 6.134699999999979e-05, 6.1000000000002025e-05, 6.118100000000043e-05, 6.0736000000002205e-05, 6.115300000000129e-05, 6.13339999999997e-05, 6.13339999999997e-05, 6.0985999999998985e-05, 6.151399999999863e-05, 6.115200000000182e-05, 6.0680000000000456e-05, 6.081900000000015e-05, 6.136099999999936e-05]</msg>
<status status="PASS" starttime="20201117 14:42:29.807" endtime="20201117 14:42:29.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.802" endtime="20201117 14:42:29.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.812" endtime="20201117 14:42:29.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:29.816" endtime="20201117 14:42:29.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.814" endtime="20201117 14:42:29.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.810" endtime="20201117 14:42:29.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.441" endtime="20201117 14:42:29.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.042" endtime="20201117 14:42:29.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.041" endtime="20201117 14:42:29.837"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.839" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.848" endtime="20201117 14:42:29.866"></status>
</kw>
<msg timestamp="20201117 14:42:29.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.846" endtime="20201117 14:42:29.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:29.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:29.867" endtime="20201117 14:42:29.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.870" endtime="20201117 14:42:29.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.843" endtime="20201117 14:42:29.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.841" endtime="20201117 14:42:29.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:29.880" endtime="20201117 14:42:30.166"></status>
</kw>
<msg timestamp="20201117 14:42:30.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025430778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:29.878" endtime="20201117 14:42:30.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025430778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.170" endtime="20201117 14:42:30.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.179" endtime="20201117 14:42:30.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.875" endtime="20201117 14:42:30.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.873" endtime="20201117 14:42:30.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.186" level="INFO">${RESULT} = [{'time': 0.025430778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.173599999999974e-05, 'source_diff': 6.173599999999974e-05}, {'time': 0.025501778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:30.182" endtime="20201117 14:42:30.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.200" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:30.187" endtime="20201117 14:42:30.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.204" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.203" endtime="20201117 14:42:30.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.207" level="INFO">VALUE: [6.173599999999974e-05, 6.209700000000054e-05, 6.23340000000007e-05, 6.216600000000239e-05, 6.216699999999839e-05, 6.184700000000029e-05, 6.181900000000115e-05, 6.216599999999892e-05, 6.234700000000079e-05, 6.202800000000216e-05, 6.184699999999682e-05, 6.184700000000029e-05, 6.1888999999999e-05, 6.199999999999956e-05, 6.216700000000186e-05, 6.2195000000001e-05, 6.216700000000186e-05, 6.216699999999839e-05, 6.183399999999672e-05, 6.233300000000122e-05, 6.251399999999963e-05, 6.159700000000004e-05, 6.217999999999849e-05, 6.199999999999956e-05, 6.234700000000079e-05, 6.251399999999963e-05, 6.242999999999874e-05, 6.230600000000155e-05, 6.248600000000049e-05, 6.184700000000029e-05, 6.248600000000049e-05, 6.216699999999839e-05, 6.218100000000143e-05, 6.23340000000007e-05, 6.200000000000302e-05, 6.232000000000112e-05, 6.162499999999918e-05, 6.183299999999725e-05, 6.199999999999956e-05, 6.25279999999992e-05, 6.184700000000029e-05, 6.215299999999882e-05, 6.202800000000216e-05, 6.215299999999882e-05, 6.233299999999775e-05, 6.234700000000079e-05, 6.23340000000007e-05, 6.202800000000216e-05, 6.165299999999832e-05, 6.247300000000039e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.205" endtime="20201117 14:42:30.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.201" endtime="20201117 14:42:30.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.210" endtime="20201117 14:42:30.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.214" endtime="20201117 14:42:30.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.212" endtime="20201117 14:42:30.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.208" endtime="20201117 14:42:30.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.840" endtime="20201117 14:42:30.235"></status>
</kw>
<msg timestamp="20201117 14:42:30.235" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.244" endtime="20201117 14:42:30.262"></status>
</kw>
<msg timestamp="20201117 14:42:30.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.242" endtime="20201117 14:42:30.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.263" endtime="20201117 14:42:30.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.266" endtime="20201117 14:42:30.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.239" endtime="20201117 14:42:30.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.237" endtime="20201117 14:42:30.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.276" endtime="20201117 14:42:30.562"></status>
</kw>
<msg timestamp="20201117 14:42:30.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.274" endtime="20201117 14:42:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.566" endtime="20201117 14:42:30.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.575" endtime="20201117 14:42:30.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.271" endtime="20201117 14:42:30.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.270" endtime="20201117 14:42:30.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.582" level="INFO">${RESULT} = [{'time': 0.022773056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.17499999999993e-05, 'source_diff': 6.17499999999993e-05}, {'time': 0.022843042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:30.579" endtime="20201117 14:42:30.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:30.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:30.583" endtime="20201117 14:42:30.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.601" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:42:30.599" endtime="20201117 14:42:30.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.603" level="INFO">VALUE: [6.17499999999993e-05, 6.226399999999938e-05, 6.169399999999756e-05, 6.183300000000072e-05, 6.218000000000196e-05, 6.201399999999913e-05, 6.212499999999968e-05, 6.250000000000006e-05, 6.250000000000006e-05, 6.199999999999956e-05, 6.16950000000005e-05, 6.184699999999682e-05, 6.20140000000026e-05, 6.218100000000143e-05, 6.216699999999839e-05, 6.216699999999839e-05, 6.197200000000042e-05, 6.184700000000029e-05, 6.204200000000173e-05, 6.166599999999842e-05, 6.251399999999963e-05, 6.199999999999956e-05, 6.244400000000178e-05, 6.215299999999882e-05, 6.23889999999995e-05, 6.250000000000006e-05, 6.168100000000093e-05, 6.20279999999987e-05, 6.199999999999956e-05, 6.250000000000006e-05, 6.168100000000093e-05, 6.216700000000186e-05, 6.184799999999976e-05, 6.234700000000079e-05, 6.251300000000015e-05, 6.234700000000079e-05, 6.163900000000222e-05, 6.217999999999849e-05, 6.168000000000146e-05, 6.195800000000085e-05, 6.25279999999992e-05, 6.234700000000079e-05, 6.218100000000143e-05, 6.234699999999732e-05, 6.23340000000007e-05, 6.218100000000143e-05, 6.198599999999999e-05, 6.222200000000067e-05, 6.252699999999972e-05, 6.168000000000146e-05]</msg>
<status status="PASS" starttime="20201117 14:42:30.602" endtime="20201117 14:42:30.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.597" endtime="20201117 14:42:30.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.606" endtime="20201117 14:42:30.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:30.610" endtime="20201117 14:42:30.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.608" endtime="20201117 14:42:30.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.605" endtime="20201117 14:42:30.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.235" endtime="20201117 14:42:30.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.838" endtime="20201117 14:42:30.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:29.837" endtime="20201117 14:42:30.631"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.634" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.647" endtime="20201117 14:42:30.665"></status>
</kw>
<msg timestamp="20201117 14:42:30.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.646" endtime="20201117 14:42:30.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:30.667" endtime="20201117 14:42:30.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.669" endtime="20201117 14:42:30.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.638" endtime="20201117 14:42:30.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.636" endtime="20201117 14:42:30.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.679" endtime="20201117 14:42:30.965"></status>
</kw>
<msg timestamp="20201117 14:42:30.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029909472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029972208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.677" endtime="20201117 14:42:30.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:30.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029909472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029972208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:30.969" endtime="20201117 14:42:30.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:30.978" endtime="20201117 14:42:30.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.675" endtime="20201117 14:42:30.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.673" endtime="20201117 14:42:30.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:30.985" level="INFO">${RESULT} = [{'time': 0.029972208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.273600000000074e-05, 'source_diff': 6.273600000000074e-05}, {'time': 0.030041222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:30.981" endtime="20201117 14:42:30.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.000" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:30.986" endtime="20201117 14:42:31.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.005" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.004" endtime="20201117 14:42:31.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.007" level="INFO">VALUE: [6.273600000000074e-05, 6.284699999999782e-05, 6.336100000000136e-05, 6.262500000000018e-05, 6.266699999999889e-05, 6.284700000000129e-05, 6.298600000000099e-05, 6.284700000000129e-05, 6.284699999999782e-05, 6.348599999999802e-05, 6.351400000000063e-05, 6.316699999999939e-05, 6.318099999999896e-05, 6.283300000000172e-05, 6.299999999999709e-05, 6.35699999999989e-05, 6.336100000000136e-05, 6.350000000000106e-05, 6.283300000000172e-05, 6.350000000000106e-05, 6.336100000000483e-05, 6.301400000000013e-05, 6.333299999999875e-05, 6.351400000000063e-05, 6.298600000000099e-05, 6.318100000000243e-05, 6.280599999999859e-05, 6.305499999999936e-05, 6.316599999999645e-05, 6.284699999999782e-05, 6.286099999999739e-05, 6.266600000000289e-05, 6.280500000000605e-05, 6.301400000000013e-05, 6.298600000000099e-05, 6.327799999999995e-05, 6.283299999999825e-05, 6.298599999999405e-05, 6.266600000000289e-05, 6.348600000000149e-05, 6.349999999999412e-05, 6.302700000000022e-05, 6.265300000000279e-05, 6.350000000000106e-05, 6.349999999999412e-05, 6.333299999999875e-05, 6.305599999999884e-05, 6.300000000000056e-05, 6.301400000000013e-05, 6.316700000000286e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.006" endtime="20201117 14:42:31.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.001" endtime="20201117 14:42:31.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.010" endtime="20201117 14:42:31.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.014" endtime="20201117 14:42:31.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.012" endtime="20201117 14:42:31.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.009" endtime="20201117 14:42:31.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.634" endtime="20201117 14:42:31.035"></status>
</kw>
<msg timestamp="20201117 14:42:31.035" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.044" endtime="20201117 14:42:31.062"></status>
</kw>
<msg timestamp="20201117 14:42:31.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.043" endtime="20201117 14:42:31.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.063" endtime="20201117 14:42:31.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.066" endtime="20201117 14:42:31.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.040" endtime="20201117 14:42:31.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.038" endtime="20201117 14:42:31.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.075" endtime="20201117 14:42:31.364"></status>
</kw>
<msg timestamp="20201117 14:42:31.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023287292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.074" endtime="20201117 14:42:31.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023287292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.368" endtime="20201117 14:42:31.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.377" endtime="20201117 14:42:31.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.071" endtime="20201117 14:42:31.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.069" endtime="20201117 14:42:31.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.384" level="INFO">${RESULT} = [{'time': 0.023287292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.023361278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:31.380" endtime="20201117 14:42:31.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:31.385" endtime="20201117 14:42:31.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.402" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.401" endtime="20201117 14:42:31.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.405" level="INFO">VALUE: [6.27500000000003e-05, 6.349999999999759e-05, 6.298700000000046e-05, 6.284800000000076e-05, 6.317999999999949e-05, 6.352700000000072e-05, 6.351400000000063e-05, 6.316599999999992e-05, 6.263899999999975e-05, 6.315299999999982e-05, 6.315299999999982e-05, 6.269499999999803e-05, 6.333299999999875e-05, 6.329200000000298e-05, 6.333299999999875e-05, 6.301400000000013e-05, 6.35280000000002e-05, 6.315299999999982e-05, 6.302700000000022e-05, 6.295899999999785e-05, 6.283300000000172e-05, 6.30279999999997e-05, 6.311099999999764e-05, 6.269400000000203e-05, 6.265300000000279e-05, 6.334699999999832e-05, 6.345799999999888e-05, 6.350000000000106e-05, 6.266700000000236e-05, 6.300000000000056e-05, 6.276399999999988e-05, 6.286200000000033e-05, 6.316699999999939e-05, 6.265300000000279e-05, 6.316599999999992e-05, 6.319399999999906e-05, 6.266600000000289e-05, 6.297200000000142e-05, 6.336099999999789e-05, 6.35280000000002e-05, 6.315299999999982e-05, 6.270900000000107e-05, 6.331900000000265e-05, 6.332000000000212e-05, 6.302800000000316e-05, 6.33479999999978e-05, 6.274999999999684e-05, 6.332000000000212e-05, 6.300000000000056e-05, 6.319399999999906e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.403" endtime="20201117 14:42:31.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.398" endtime="20201117 14:42:31.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.408" endtime="20201117 14:42:31.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.412" endtime="20201117 14:42:31.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.411" endtime="20201117 14:42:31.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.406" endtime="20201117 14:42:31.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.036" endtime="20201117 14:42:31.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.633" endtime="20201117 14:42:31.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:30.632" endtime="20201117 14:42:31.433"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.436" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.444" endtime="20201117 14:42:31.462"></status>
</kw>
<msg timestamp="20201117 14:42:31.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.443" endtime="20201117 14:42:31.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.464" endtime="20201117 14:42:31.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.467" endtime="20201117 14:42:31.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.440" endtime="20201117 14:42:31.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.438" endtime="20201117 14:42:31.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.476" endtime="20201117 14:42:31.763"></status>
</kw>
<msg timestamp="20201117 14:42:31.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025064333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.474" endtime="20201117 14:42:31.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025064333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.767" endtime="20201117 14:42:31.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.776" endtime="20201117 14:42:31.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.472" endtime="20201117 14:42:31.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.470" endtime="20201117 14:42:31.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:31.783" level="INFO">${RESULT} = [{'time': 0.025064333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.426400000000138e-05, 'source_diff': 6.426400000000138e-05}, {'time': 0.025141306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:31.780" endtime="20201117 14:42:31.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:31.797" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:31.784" endtime="20201117 14:42:31.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.802" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:31.801" endtime="20201117 14:42:31.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.804" level="INFO">VALUE: [6.426400000000138e-05, 6.398699999999799e-05, 6.451300000000215e-05, 6.401400000000113e-05, 6.401400000000113e-05, 6.369400000000303e-05, 6.451399999999816e-05, 6.369399999999956e-05, 6.368099999999946e-05, 6.433299999999975e-05, 6.418099999999996e-05, 6.365300000000032e-05, 6.436200000000183e-05, 6.382000000000262e-05, 6.366699999999989e-05, 6.384800000000176e-05, 6.451300000000215e-05, 6.418000000000049e-05, 6.401399999999766e-05, 6.448600000000249e-05, 6.388899999999753e-05, 6.365300000000032e-05, 6.368099999999946e-05, 6.448599999999902e-05, 6.40280000000007e-05, 6.445799999999988e-05, 6.433399999999923e-05, 6.394499999999928e-05, 6.384800000000176e-05, 6.416700000000039e-05, 6.37500000000013e-05, 6.451300000000215e-05, 6.450000000000206e-05, 6.451399999999816e-05, 6.401400000000113e-05, 6.366699999999989e-05, 6.434699999999932e-05, 6.399999999999809e-05, 6.366699999999989e-05, 6.398599999999852e-05, 6.45419999999973e-05, 6.38479999999983e-05, 6.450000000000206e-05, 6.418099999999996e-05, 6.399999999999809e-05, 6.433399999999923e-05, 6.418000000000049e-05, 6.386099999999839e-05, 6.401399999999766e-05, 6.384699999999882e-05]</msg>
<status status="PASS" starttime="20201117 14:42:31.803" endtime="20201117 14:42:31.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.798" endtime="20201117 14:42:31.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.808" endtime="20201117 14:42:31.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:31.812" endtime="20201117 14:42:31.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.810" endtime="20201117 14:42:31.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.806" endtime="20201117 14:42:31.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.436" endtime="20201117 14:42:31.832"></status>
</kw>
<msg timestamp="20201117 14:42:31.833" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.841" endtime="20201117 14:42:31.860"></status>
</kw>
<msg timestamp="20201117 14:42:31.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.840" endtime="20201117 14:42:31.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:31.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:31.861" endtime="20201117 14:42:31.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.864" endtime="20201117 14:42:31.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.837" endtime="20201117 14:42:31.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.835" endtime="20201117 14:42:31.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:31.873" endtime="20201117 14:42:32.161"></status>
</kw>
<msg timestamp="20201117 14:42:32.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:31.872" endtime="20201117 14:42:32.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.165" endtime="20201117 14:42:32.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.173" endtime="20201117 14:42:32.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.869" endtime="20201117 14:42:32.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.867" endtime="20201117 14:42:32.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.180" level="INFO">${RESULT} = [{'time': 0.022486944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.462499999999871e-05, 'source_diff': 6.462499999999871e-05}, {'time': 0.022555903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.177" endtime="20201117 14:42:32.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.194" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:32.181" endtime="20201117 14:42:32.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.199" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.198" endtime="20201117 14:42:32.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.201" level="INFO">VALUE: [6.462499999999871e-05, 6.433399999999923e-05, 6.400000000000156e-05, 6.436200000000183e-05, 6.415300000000082e-05, 6.386100000000186e-05, 6.433399999999923e-05, 6.434699999999932e-05, 6.457000000000337e-05, 6.409699999999907e-05, 6.418000000000049e-05, 6.366600000000042e-05, 6.373600000000174e-05, 6.376400000000088e-05, 6.381899999999968e-05, 6.368099999999946e-05, 6.437500000000193e-05, 6.365300000000032e-05, 6.368099999999946e-05, 6.401399999999766e-05, 6.449999999999859e-05, 6.433299999999975e-05, 6.384699999999882e-05, 6.415300000000082e-05, 6.449999999999859e-05, 6.398599999999852e-05, 6.40280000000007e-05, 6.433299999999975e-05, 6.440300000000107e-05, 6.363900000000075e-05, 6.359699999999857e-05, 6.365300000000032e-05, 6.382000000000262e-05, 6.419499999999953e-05, 6.418099999999996e-05, 6.436099999999889e-05, 6.433299999999975e-05, 6.398599999999852e-05, 6.42639999999979e-05, 6.384700000000229e-05, 6.433299999999975e-05, 6.40280000000007e-05, 6.398600000000199e-05, 6.431900000000018e-05, 6.436099999999889e-05, 6.398600000000199e-05, 6.399999999999809e-05, 6.401400000000113e-05, 6.387500000000143e-05, 6.384800000000176e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.200" endtime="20201117 14:42:32.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.195" endtime="20201117 14:42:32.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.205" endtime="20201117 14:42:32.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.209" endtime="20201117 14:42:32.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.207" endtime="20201117 14:42:32.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.203" endtime="20201117 14:42:32.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.833" endtime="20201117 14:42:32.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.435" endtime="20201117 14:42:32.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:31.434" endtime="20201117 14:42:32.230"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.233" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.241" endtime="20201117 14:42:32.259"></status>
</kw>
<msg timestamp="20201117 14:42:32.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.240" endtime="20201117 14:42:32.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.261" endtime="20201117 14:42:32.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.263" endtime="20201117 14:42:32.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.237" endtime="20201117 14:42:32.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.235" endtime="20201117 14:42:32.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.273" endtime="20201117 14:42:32.561"></status>
</kw>
<msg timestamp="20201117 14:42:32.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025435431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.271" endtime="20201117 14:42:32.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025370181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025435431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.565" endtime="20201117 14:42:32.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.574" endtime="20201117 14:42:32.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.269" endtime="20201117 14:42:32.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.267" endtime="20201117 14:42:32.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.581" level="INFO">${RESULT} = [{'time': 0.025435431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52500000000028e-05, 'source_diff': 6.52500000000028e-05}, {'time': 0.025506403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:32.577" endtime="20201117 14:42:32.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:32.582" endtime="20201117 14:42:32.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.601" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.600" endtime="20201117 14:42:32.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.604" level="INFO">VALUE: [6.52500000000028e-05, 6.486099999999939e-05, 6.533300000000075e-05, 6.500000000000256e-05, 6.483300000000025e-05, 6.483399999999973e-05, 6.501399999999866e-05, 6.483399999999973e-05, 6.515200000000235e-05, 6.466600000000142e-05, 6.483300000000025e-05, 6.50280000000017e-05, 6.483300000000025e-05, 6.516700000000139e-05, 6.522299999999967e-05, 6.516699999999792e-05, 6.518100000000096e-05, 6.534700000000032e-05, 6.48479999999993e-05, 6.551400000000263e-05, 6.548600000000002e-05, 6.556900000000143e-05, 6.518000000000149e-05, 6.483300000000025e-05, 6.534700000000032e-05, 6.501400000000213e-05, 6.466700000000089e-05, 6.4889000000002e-05, 6.501400000000213e-05, 6.461100000000261e-05, 6.483300000000025e-05, 6.466700000000089e-05, 6.468099999999699e-05, 6.486199999999887e-05, 6.487499999999896e-05, 6.551399999999916e-05, 6.515300000000182e-05, 6.467999999999752e-05, 6.466600000000142e-05, 6.508399999999998e-05, 6.545800000000088e-05, 6.516599999999845e-05, 6.505600000000084e-05, 6.531900000000118e-05, 6.516700000000139e-05, 6.484699999999982e-05, 6.483300000000025e-05, 6.484699999999982e-05, 6.551400000000263e-05, 6.516699999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:42:32.602" endtime="20201117 14:42:32.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.597" endtime="20201117 14:42:32.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.607" endtime="20201117 14:42:32.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:32.611" endtime="20201117 14:42:32.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.609" endtime="20201117 14:42:32.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.605" endtime="20201117 14:42:32.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.233" endtime="20201117 14:42:32.631"></status>
</kw>
<msg timestamp="20201117 14:42:32.632" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.640" endtime="20201117 14:42:32.658"></status>
</kw>
<msg timestamp="20201117 14:42:32.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.639" endtime="20201117 14:42:32.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:32.660" endtime="20201117 14:42:32.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.662" endtime="20201117 14:42:32.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.636" endtime="20201117 14:42:32.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.634" endtime="20201117 14:42:32.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.672" endtime="20201117 14:42:32.960"></status>
</kw>
<msg timestamp="20201117 14:42:32.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.670" endtime="20201117 14:42:32.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022940125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023005306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:32.964" endtime="20201117 14:42:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:32.973" endtime="20201117 14:42:32.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.668" endtime="20201117 14:42:32.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.666" endtime="20201117 14:42:32.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:32.980" level="INFO">${RESULT} = [{'time': 0.023005306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.518100000000096e-05, 'source_diff': 6.518100000000096e-05}, {'time': 0.023075319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:32.976" endtime="20201117 14:42:32.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:32.993" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:32.981" endtime="20201117 14:42:32.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:32.998" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:42:32.997" endtime="20201117 14:42:32.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.001" level="INFO">VALUE: [6.518100000000096e-05, 6.549999999999959e-05, 6.534700000000032e-05, 6.499999999999909e-05, 6.516600000000192e-05, 6.484699999999982e-05, 6.499999999999909e-05, 6.549999999999959e-05, 6.483300000000025e-05, 6.469500000000003e-05, 6.504200000000127e-05, 6.48340000000032e-05, 6.499999999999909e-05, 6.551299999999968e-05, 6.537499999999946e-05, 6.518000000000149e-05, 6.501400000000213e-05, 6.513899999999878e-05, 6.549999999999959e-05, 6.499999999999909e-05, 6.487499999999896e-05, 6.534700000000032e-05, 6.547200000000045e-05, 6.468099999999699e-05, 6.518100000000096e-05, 6.466699999999742e-05, 6.53479999999998e-05, 6.519400000000106e-05, 6.54440000000013e-05, 6.501299999999918e-05, 6.466599999999795e-05, 6.499999999999909e-05, 6.466600000000142e-05, 6.501400000000213e-05, 6.483300000000025e-05, 6.472299999999917e-05, 6.516700000000139e-05, 6.55280000000022e-05, 6.486199999999887e-05, 6.53479999999998e-05, 6.50280000000017e-05, 6.518100000000096e-05, 6.466700000000089e-05, 6.548699999999949e-05, 6.534700000000032e-05, 6.519400000000106e-05, 6.481900000000068e-05, 6.466600000000142e-05, 6.548600000000002e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.000" endtime="20201117 14:42:33.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.995" endtime="20201117 14:42:33.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.004" endtime="20201117 14:42:33.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.008" endtime="20201117 14:42:33.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.006" endtime="20201117 14:42:33.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.003" endtime="20201117 14:42:33.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.632" endtime="20201117 14:42:33.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.231" endtime="20201117 14:42:33.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:32.230" endtime="20201117 14:42:33.029"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.032" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.040" endtime="20201117 14:42:33.058"></status>
</kw>
<msg timestamp="20201117 14:42:33.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.039" endtime="20201117 14:42:33.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.060" endtime="20201117 14:42:33.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.062" endtime="20201117 14:42:33.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.036" endtime="20201117 14:42:33.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.034" endtime="20201117 14:42:33.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.072" endtime="20201117 14:42:33.359"></status>
</kw>
<msg timestamp="20201117 14:42:33.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.070" endtime="20201117 14:42:33.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025193431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025259681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.364" endtime="20201117 14:42:33.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.372" endtime="20201117 14:42:33.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.067" endtime="20201117 14:42:33.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.066" endtime="20201117 14:42:33.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.380" level="INFO">${RESULT} = [{'time': 0.025259681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000000034e-05, 'source_diff': 6.625000000000034e-05}, {'time': 0.025332681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.376" endtime="20201117 14:42:33.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.393" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:33.381" endtime="20201117 14:42:33.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.398" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.397" endtime="20201117 14:42:33.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.401" level="INFO">VALUE: [6.625000000000034e-05, 6.616699999999892e-05, 6.633400000000123e-05, 6.583300000000125e-05, 6.567999999999852e-05, 6.601399999999966e-05, 6.616599999999945e-05, 6.584700000000082e-05, 6.618099999999849e-05, 6.566700000000189e-05, 6.565299999999885e-05, 6.569500000000103e-05, 6.58480000000003e-05, 6.58480000000003e-05, 6.591700000000214e-05, 6.573600000000027e-05, 6.600000000000009e-05, 6.618000000000249e-05, 6.569400000000156e-05, 6.615199999999988e-05, 6.638900000000003e-05, 6.600000000000009e-05, 6.605599999999837e-05, 6.634699999999785e-05, 6.566700000000189e-05, 6.650000000000059e-05, 6.566699999999842e-05, 6.650000000000059e-05, 6.58480000000003e-05, 6.566699999999842e-05, 6.619399999999859e-05, 6.650000000000059e-05, 6.568000000000199e-05, 6.633300000000175e-05, 6.634700000000132e-05, 6.616599999999945e-05, 6.617999999999902e-05, 6.619500000000153e-05, 6.568099999999799e-05, 6.650000000000059e-05, 6.583300000000125e-05, 6.568100000000146e-05, 6.650000000000059e-05, 6.652799999999973e-05, 6.616700000000239e-05, 6.57220000000007e-05, 6.566599999999895e-05, 6.633300000000175e-05, 6.566599999999895e-05, 6.652799999999973e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.399" endtime="20201117 14:42:33.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.394" endtime="20201117 14:42:33.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.404" endtime="20201117 14:42:33.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.408" endtime="20201117 14:42:33.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.406" endtime="20201117 14:42:33.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.402" endtime="20201117 14:42:33.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.032" endtime="20201117 14:42:33.428"></status>
</kw>
<msg timestamp="20201117 14:42:33.429" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.437" endtime="20201117 14:42:33.455"></status>
</kw>
<msg timestamp="20201117 14:42:33.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.436" endtime="20201117 14:42:33.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.457" endtime="20201117 14:42:33.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.460" endtime="20201117 14:42:33.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.433" endtime="20201117 14:42:33.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.431" endtime="20201117 14:42:33.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.469" endtime="20201117 14:42:33.758"></status>
</kw>
<msg timestamp="20201117 14:42:33.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.467" endtime="20201117 14:42:33.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022735694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.762" endtime="20201117 14:42:33.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.771" endtime="20201117 14:42:33.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.465" endtime="20201117 14:42:33.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.463" endtime="20201117 14:42:33.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:33.778" level="INFO">${RESULT} = [{'time': 0.022735694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.598600000000052e-05, 'source_diff': 6.598600000000052e-05}, {'time': 0.022810708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:33.775" endtime="20201117 14:42:33.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:33.792" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:33.779" endtime="20201117 14:42:33.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.796" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:42:33.795" endtime="20201117 14:42:33.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.799" level="INFO">VALUE: [6.598600000000052e-05, 6.559700000000057e-05, 6.566600000000242e-05, 6.613899999999978e-05, 6.647199999999798e-05, 6.648600000000102e-05, 6.633300000000175e-05, 6.618099999999849e-05, 6.600000000000009e-05, 6.634699999999785e-05, 6.568100000000146e-05, 6.600000000000009e-05, 6.634699999999785e-05, 6.561199999999962e-05, 6.616599999999945e-05, 6.619400000000206e-05, 6.630500000000261e-05, 6.600000000000009e-05, 6.569400000000156e-05, 6.622300000000067e-05, 6.601399999999966e-05, 6.650000000000059e-05, 6.633299999999828e-05, 6.651400000000016e-05, 6.600000000000009e-05, 6.601399999999966e-05, 6.620799999999816e-05, 6.638900000000003e-05, 6.616599999999945e-05, 6.601399999999966e-05, 6.612500000000021e-05, 6.601399999999966e-05, 6.588899999999953e-05, 6.602799999999923e-05, 6.584700000000082e-05, 6.616699999999892e-05, 6.601399999999966e-05, 6.650000000000059e-05, 6.594500000000128e-05, 6.58480000000003e-05, 6.616700000000239e-05, 6.566699999999842e-05, 6.569399999999809e-05, 6.636100000000089e-05, 6.651399999999669e-05, 6.631899999999871e-05, 6.584700000000082e-05, 6.651400000000016e-05, 6.581900000000168e-05, 6.583300000000125e-05]</msg>
<status status="PASS" starttime="20201117 14:42:33.797" endtime="20201117 14:42:33.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.793" endtime="20201117 14:42:33.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.802" endtime="20201117 14:42:33.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:33.806" endtime="20201117 14:42:33.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.804" endtime="20201117 14:42:33.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.801" endtime="20201117 14:42:33.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.429" endtime="20201117 14:42:33.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.030" endtime="20201117 14:42:33.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.030" endtime="20201117 14:42:33.827"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.830" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.838" endtime="20201117 14:42:33.856"></status>
</kw>
<msg timestamp="20201117 14:42:33.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.836" endtime="20201117 14:42:33.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:33.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:33.858" endtime="20201117 14:42:33.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.861" endtime="20201117 14:42:33.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.834" endtime="20201117 14:42:33.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.832" endtime="20201117 14:42:33.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:33.871" endtime="20201117 14:42:34.159"></status>
</kw>
<msg timestamp="20201117 14:42:34.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025157014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:33.869" endtime="20201117 14:42:34.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025157014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.163" endtime="20201117 14:42:34.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.172" endtime="20201117 14:42:34.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.866" endtime="20201117 14:42:34.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.864" endtime="20201117 14:42:34.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.179" level="INFO">${RESULT} = [{'time': 0.025224097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.70830000000025e-05, 'source_diff': 6.70830000000025e-05}, {'time': 0.025298083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:34.175" endtime="20201117 14:42:34.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.194" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:34.180" endtime="20201117 14:42:34.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.198" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.197" endtime="20201117 14:42:34.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.201" level="INFO">VALUE: [6.70830000000025e-05, 6.666599999999995e-05, 6.711099999999817e-05, 6.750000000000159e-05, 6.709700000000207e-05, 6.666699999999942e-05, 6.686100000000139e-05, 6.683299999999878e-05, 6.752800000000073e-05, 6.69030000000001e-05, 6.697300000000142e-05, 6.734699999999885e-05, 6.665299999999985e-05, 6.716600000000045e-05, 6.719399999999959e-05, 6.679100000000007e-05, 6.700000000000109e-05, 6.684700000000182e-05, 6.684699999999835e-05, 6.666699999999942e-05, 6.747200000000245e-05, 6.695899999999838e-05, 6.684700000000182e-05, 6.716699999999992e-05, 6.687500000000096e-05, 6.719399999999959e-05, 6.734700000000232e-05, 6.683299999999878e-05, 6.705599999999937e-05, 6.712500000000121e-05, 6.686099999999792e-05, 6.718000000000002e-05, 6.666699999999942e-05, 6.684700000000182e-05, 6.665299999999985e-05, 6.716699999999992e-05, 6.751400000000116e-05, 6.683399999999826e-05, 6.715300000000035e-05, 6.701400000000066e-05, 6.734700000000232e-05, 6.751300000000168e-05, 6.749999999999812e-05, 6.731899999999971e-05, 6.667999999999952e-05, 6.715300000000035e-05, 6.667999999999952e-05, 6.734700000000232e-05, 6.673600000000127e-05, 6.718099999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.200" endtime="20201117 14:42:34.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.195" endtime="20201117 14:42:34.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.204" endtime="20201117 14:42:34.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.208" endtime="20201117 14:42:34.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.206" endtime="20201117 14:42:34.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.203" endtime="20201117 14:42:34.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.830" endtime="20201117 14:42:34.229"></status>
</kw>
<msg timestamp="20201117 14:42:34.229" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.238" endtime="20201117 14:42:34.255"></status>
</kw>
<msg timestamp="20201117 14:42:34.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.236" endtime="20201117 14:42:34.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.257" endtime="20201117 14:42:34.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.260" endtime="20201117 14:42:34.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.233" endtime="20201117 14:42:34.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.231" endtime="20201117 14:42:34.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.270" endtime="20201117 14:42:34.558"></status>
</kw>
<msg timestamp="20201117 14:42:34.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.269" endtime="20201117 14:42:34.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.562" endtime="20201117 14:42:34.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.571" endtime="20201117 14:42:34.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.266" endtime="20201117 14:42:34.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.264" endtime="20201117 14:42:34.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.578" level="INFO">${RESULT} = [{'time': 0.022652375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.727800000000048e-05, 'source_diff': 6.727800000000048e-05}, {'time': 0.022724361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.574" endtime="20201117 14:42:34.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:34.579" endtime="20201117 14:42:34.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.597" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.595" endtime="20201117 14:42:34.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.599" level="INFO">VALUE: [6.727800000000048e-05, 6.751399999999769e-05, 6.680499999999964e-05, 6.686099999999792e-05, 6.669499999999856e-05, 6.731899999999971e-05, 6.701400000000066e-05, 6.720799999999916e-05, 6.661099999999767e-05, 6.733400000000223e-05, 6.701400000000066e-05, 6.713900000000078e-05, 6.684699999999835e-05, 6.716600000000045e-05, 6.701400000000066e-05, 6.744399999999984e-05, 6.701399999999719e-05, 6.758400000000248e-05, 6.731899999999971e-05, 6.683299999999878e-05, 6.716699999999992e-05, 6.683299999999878e-05, 6.724999999999787e-05, 6.701400000000066e-05, 6.733400000000223e-05, 6.716699999999992e-05, 6.750000000000159e-05, 6.701399999999719e-05, 6.684699999999835e-05, 6.681899999999921e-05, 6.681899999999921e-05, 6.691699999999967e-05, 6.733299999999928e-05, 6.731899999999971e-05, 6.684699999999835e-05, 6.734799999999833e-05, 6.684699999999835e-05, 6.733400000000223e-05, 6.751399999999769e-05, 6.668099999999899e-05, 6.716600000000045e-05, 6.731899999999971e-05, 6.666599999999995e-05, 6.716600000000045e-05, 6.748599999999855e-05, 6.716699999999992e-05, 6.700000000000109e-05, 6.684700000000182e-05, 6.666699999999942e-05, 6.708299999999903e-05]</msg>
<status status="PASS" starttime="20201117 14:42:34.598" endtime="20201117 14:42:34.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.593" endtime="20201117 14:42:34.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.603" endtime="20201117 14:42:34.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:34.606" endtime="20201117 14:42:34.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.605" endtime="20201117 14:42:34.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.601" endtime="20201117 14:42:34.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.230" endtime="20201117 14:42:34.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.828" endtime="20201117 14:42:34.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:33.827" endtime="20201117 14:42:34.627"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.630" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.639" endtime="20201117 14:42:34.658"></status>
</kw>
<msg timestamp="20201117 14:42:34.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.637" endtime="20201117 14:42:34.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:34.660" endtime="20201117 14:42:34.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.662" endtime="20201117 14:42:34.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.634" endtime="20201117 14:42:34.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.632" endtime="20201117 14:42:34.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.672" endtime="20201117 14:42:34.960"></status>
</kw>
<msg timestamp="20201117 14:42:34.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.670" endtime="20201117 14:42:34.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025643208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025711764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:34.964" endtime="20201117 14:42:34.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:34.973" endtime="20201117 14:42:34.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.667" endtime="20201117 14:42:34.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.665" endtime="20201117 14:42:34.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:34.980" level="INFO">${RESULT} = [{'time': 0.025711764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.855600000000087e-05, 'source_diff': 6.855600000000087e-05}, {'time': 0.025791778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:34.977" endtime="20201117 14:42:34.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:34.994" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:34.981" endtime="20201117 14:42:34.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:34.999" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:34.998" endtime="20201117 14:42:34.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.002" level="INFO">VALUE: [6.855600000000087e-05, 6.784700000000282e-05, 6.766700000000042e-05, 6.804100000000132e-05, 6.819400000000059e-05, 6.781999999999969e-05, 6.852700000000225e-05, 6.838899999999856e-05, 6.768000000000052e-05, 6.773600000000227e-05, 6.816600000000145e-05, 6.849999999999912e-05, 6.816699999999745e-05, 6.800000000000209e-05, 6.851399999999869e-05, 6.765299999999738e-05, 6.763899999999781e-05, 6.770799999999966e-05, 6.784799999999883e-05, 6.779200000000055e-05, 6.766600000000095e-05, 6.784699999999935e-05, 6.801400000000166e-05, 6.787499999999849e-05, 6.795799999999991e-05, 6.783299999999978e-05, 6.798600000000252e-05, 6.831900000000071e-05, 6.798599999999905e-05, 6.818100000000049e-05, 6.858300000000053e-05, 6.780600000000012e-05, 6.819400000000059e-05, 6.783399999999926e-05, 6.834699999999985e-05, 6.836100000000289e-05, 6.769400000000009e-05, 6.801400000000166e-05, 6.834699999999985e-05, 6.850000000000259e-05, 6.843000000000127e-05, 6.833300000000028e-05, 6.768099999999999e-05, 6.801399999999819e-05, 6.783399999999926e-05, 6.818100000000049e-05, 6.767999999999705e-05, 6.832000000000019e-05, 6.818000000000102e-05, 6.830499999999767e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.000" endtime="20201117 14:42:35.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.995" endtime="20201117 14:42:35.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.005" endtime="20201117 14:42:35.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.008" endtime="20201117 14:42:35.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.007" endtime="20201117 14:42:35.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.003" endtime="20201117 14:42:35.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.630" endtime="20201117 14:42:35.030"></status>
</kw>
<msg timestamp="20201117 14:42:35.030" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.039" endtime="20201117 14:42:35.056"></status>
</kw>
<msg timestamp="20201117 14:42:35.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.037" endtime="20201117 14:42:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.057" endtime="20201117 14:42:35.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.060" endtime="20201117 14:42:35.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.034" endtime="20201117 14:42:35.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.032" endtime="20201117 14:42:35.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.070" endtime="20201117 14:42:35.357"></status>
</kw>
<msg timestamp="20201117 14:42:35.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.068" endtime="20201117 14:42:35.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023050986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.361" endtime="20201117 14:42:35.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.370" endtime="20201117 14:42:35.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.065" endtime="20201117 14:42:35.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.064" endtime="20201117 14:42:35.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.377" level="INFO">${RESULT} = [{'time': 0.023119333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.834699999999985e-05, 'source_diff': 6.834699999999985e-05}, {'time': 0.023200333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:35.374" endtime="20201117 14:42:35.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.391" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:35.379" endtime="20201117 14:42:35.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.396" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.395" endtime="20201117 14:42:35.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.399" level="INFO">VALUE: [6.834699999999985e-05, 6.816600000000145e-05, 6.816600000000145e-05, 6.784699999999935e-05, 6.77229999999987e-05, 6.833300000000028e-05, 6.795799999999991e-05, 6.800000000000209e-05, 6.818100000000049e-05, 6.849999999999912e-05, 6.833400000000323e-05, 6.816700000000092e-05, 6.799999999999862e-05, 6.802700000000175e-05, 6.800000000000209e-05, 6.768000000000052e-05, 6.784699999999935e-05, 6.851399999999869e-05, 6.800000000000209e-05, 6.849999999999912e-05, 6.768099999999999e-05, 6.832000000000019e-05, 6.780600000000012e-05, 6.788900000000153e-05, 6.799999999999862e-05, 6.786099999999892e-05, 6.800000000000209e-05, 6.779100000000107e-05, 6.816599999999798e-05, 6.797199999999948e-05, 6.784699999999935e-05, 6.780500000000064e-05, 6.802800000000123e-05, 6.819500000000006e-05, 6.849999999999912e-05, 6.801400000000166e-05, 6.801399999999819e-05, 6.783399999999926e-05, 6.809700000000307e-05, 6.834799999999933e-05, 6.849999999999912e-05, 6.819400000000059e-05, 6.765200000000138e-05, 6.768000000000052e-05, 6.818000000000102e-05, 6.801400000000166e-05, 6.801400000000166e-05, 6.786100000000239e-05, 6.816700000000092e-05, 6.849999999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.397" endtime="20201117 14:42:35.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.392" endtime="20201117 14:42:35.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.402" endtime="20201117 14:42:35.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.406" endtime="20201117 14:42:35.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.404" endtime="20201117 14:42:35.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.400" endtime="20201117 14:42:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.031" endtime="20201117 14:42:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.629" endtime="20201117 14:42:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:34.628" endtime="20201117 14:42:35.427"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.430" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.439" endtime="20201117 14:42:35.457"></status>
</kw>
<msg timestamp="20201117 14:42:35.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.437" endtime="20201117 14:42:35.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.458" endtime="20201117 14:42:35.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.461" endtime="20201117 14:42:35.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.434" endtime="20201117 14:42:35.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.432" endtime="20201117 14:42:35.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.470" endtime="20201117 14:42:35.757"></status>
</kw>
<msg timestamp="20201117 14:42:35.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025776333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.469" endtime="20201117 14:42:35.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025776333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025845069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.762" endtime="20201117 14:42:35.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.771" endtime="20201117 14:42:35.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.466" endtime="20201117 14:42:35.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.464" endtime="20201117 14:42:35.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:35.778" level="INFO">${RESULT} = [{'time': 0.025845069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.87359999999998e-05, 'source_diff': 6.87359999999998e-05}, {'time': 0.025924083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:35.774" endtime="20201117 14:42:35.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:35.793" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:35.779" endtime="20201117 14:42:35.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.798" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:35.797" endtime="20201117 14:42:35.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.801" level="INFO">VALUE: [6.87359999999998e-05, 6.948600000000055e-05, 6.901399999999919e-05, 6.85970000000001e-05, 6.933299999999781e-05, 6.951399999999969e-05, 6.951399999999969e-05, 6.901399999999919e-05, 6.901399999999919e-05, 6.933400000000076e-05, 6.933399999999729e-05, 6.92360000000003e-05, 6.899999999999962e-05, 6.901399999999919e-05, 6.950000000000012e-05, 6.950000000000012e-05, 6.868000000000152e-05, 6.868000000000152e-05, 6.868100000000099e-05, 6.948600000000055e-05, 6.915300000000235e-05, 6.883300000000078e-05, 6.886099999999992e-05, 6.955499999999892e-05, 6.954099999999935e-05, 6.909800000000008e-05, 6.897200000000048e-05, 6.902799999999876e-05, 6.933299999999781e-05, 6.951399999999969e-05, 6.930499999999867e-05, 6.918000000000202e-05, 6.868100000000099e-05, 6.901299999999971e-05, 6.919500000000106e-05, 6.950000000000012e-05, 6.895900000000038e-05, 6.951399999999969e-05, 6.899999999999962e-05, 6.898699999999952e-05, 6.934699999999738e-05, 6.933300000000128e-05, 6.907000000000094e-05, 6.933299999999781e-05, 6.948600000000055e-05, 6.899999999999962e-05, 6.916699999999845e-05, 6.950000000000012e-05, 6.884700000000035e-05, 6.866700000000142e-05]</msg>
<status status="PASS" starttime="20201117 14:42:35.799" endtime="20201117 14:42:35.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.794" endtime="20201117 14:42:35.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.804" endtime="20201117 14:42:35.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:35.808" endtime="20201117 14:42:35.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.806" endtime="20201117 14:42:35.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.803" endtime="20201117 14:42:35.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.431" endtime="20201117 14:42:35.829"></status>
</kw>
<msg timestamp="20201117 14:42:35.829" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.838" endtime="20201117 14:42:35.856"></status>
</kw>
<msg timestamp="20201117 14:42:35.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.836" endtime="20201117 14:42:35.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:35.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:35.858" endtime="20201117 14:42:35.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.861" endtime="20201117 14:42:35.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.833" endtime="20201117 14:42:35.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.831" endtime="20201117 14:42:35.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:35.870" endtime="20201117 14:42:36.158"></status>
</kw>
<msg timestamp="20201117 14:42:36.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:35.868" endtime="20201117 14:42:36.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.163" endtime="20201117 14:42:36.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.171" endtime="20201117 14:42:36.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.866" endtime="20201117 14:42:36.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.864" endtime="20201117 14:42:36.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.178" level="INFO">${RESULT} = [{'time': 0.022495639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.957000000000144e-05, 'source_diff': 6.957000000000144e-05}, {'time': 0.022572639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:36.175" endtime="20201117 14:42:36.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:36.179" endtime="20201117 14:42:36.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.197" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.196" endtime="20201117 14:42:36.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.199" level="INFO">VALUE: [6.957000000000144e-05, 6.918099999999802e-05, 6.933300000000128e-05, 6.901399999999919e-05, 6.883400000000026e-05, 6.916699999999845e-05, 6.865299999999838e-05, 6.950000000000012e-05, 6.866599999999848e-05, 6.918000000000202e-05, 6.868000000000152e-05, 6.938899999999956e-05, 6.934700000000085e-05, 6.865299999999838e-05, 6.95420000000023e-05, 6.933300000000128e-05, 6.87359999999998e-05, 6.868100000000099e-05, 6.882000000000069e-05, 6.859799999999958e-05, 6.934800000000033e-05, 6.883300000000078e-05, 6.898600000000005e-05, 6.869400000000109e-05, 6.883300000000078e-05, 6.883300000000078e-05, 6.951399999999969e-05, 6.951399999999969e-05, 6.916699999999845e-05, 6.883300000000078e-05, 6.866699999999795e-05, 6.918099999999802e-05, 6.868100000000099e-05, 6.915199999999941e-05, 6.934800000000033e-05, 6.934699999999738e-05, 6.865199999999891e-05, 6.952799999999926e-05, 6.934700000000085e-05, 6.886099999999992e-05, 6.936100000000042e-05, 6.883300000000078e-05, 6.868100000000099e-05, 6.913899999999931e-05, 6.865300000000185e-05, 6.866700000000142e-05, 6.866700000000142e-05, 6.932000000000119e-05, 6.938900000000303e-05, 6.948600000000055e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.198" endtime="20201117 14:42:36.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.193" endtime="20201117 14:42:36.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.203" endtime="20201117 14:42:36.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.207" endtime="20201117 14:42:36.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.205" endtime="20201117 14:42:36.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.201" endtime="20201117 14:42:36.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.830" endtime="20201117 14:42:36.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.429" endtime="20201117 14:42:36.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:35.428" endtime="20201117 14:42:36.228"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.230" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.239" endtime="20201117 14:42:36.257"></status>
</kw>
<msg timestamp="20201117 14:42:36.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.237" endtime="20201117 14:42:36.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.258" endtime="20201117 14:42:36.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.261" endtime="20201117 14:42:36.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.235" endtime="20201117 14:42:36.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.232" endtime="20201117 14:42:36.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.270" endtime="20201117 14:42:36.559"></status>
</kw>
<msg timestamp="20201117 14:42:36.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.269" endtime="20201117 14:42:36.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025153847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025224319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.563" endtime="20201117 14:42:36.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.572" endtime="20201117 14:42:36.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.266" endtime="20201117 14:42:36.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.264" endtime="20201117 14:42:36.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.579" level="INFO">${RESULT} = [{'time': 0.025224319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.047199999999851e-05, 'source_diff': 7.047199999999851e-05}, {'time': 0.02530125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:42:36.575" endtime="20201117 14:42:36.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:36.580" endtime="20201117 14:42:36.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.597" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.596" endtime="20201117 14:42:36.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.600" level="INFO">VALUE: [7.047199999999851e-05, 7.048600000000155e-05, 7.049999999999765e-05, 7.051399999999722e-05, 6.966699999999895e-05, 6.986100000000092e-05, 7.052700000000078e-05, 7.051300000000121e-05, 7.016599999999998e-05, 7.034700000000185e-05, 6.97499999999969e-05, 6.966599999999948e-05, 6.969399999999862e-05, 7.015299999999988e-05, 7.050000000000112e-05, 6.968099999999852e-05, 7.034700000000185e-05, 7.015299999999988e-05, 7.020799999999869e-05, 6.966700000000242e-05, 6.968099999999852e-05, 6.995800000000191e-05, 6.984700000000135e-05, 7.050000000000112e-05, 6.984700000000135e-05, 6.983299999999831e-05, 6.986100000000092e-05, 6.977800000000298e-05, 7.015299999999988e-05, 7.034700000000185e-05, 6.970799999999819e-05, 7.001400000000019e-05, 7.019499999999859e-05, 7.033399999999829e-05, 7.022200000000173e-05, 7.054100000000035e-05, 6.966699999999895e-05, 7.033299999999881e-05, 7.050000000000112e-05, 6.984699999999788e-05, 7.018099999999902e-05, 6.968100000000199e-05, 7.036100000000142e-05, 7.016699999999945e-05, 6.984799999999736e-05, 7.001400000000019e-05, 7.019400000000259e-05, 6.968099999999852e-05, 6.966599999999948e-05, 7.033299999999881e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.598" endtime="20201117 14:42:36.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.593" endtime="20201117 14:42:36.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.604" endtime="20201117 14:42:36.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:36.607" endtime="20201117 14:42:36.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.606" endtime="20201117 14:42:36.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.602" endtime="20201117 14:42:36.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.231" endtime="20201117 14:42:36.628"></status>
</kw>
<msg timestamp="20201117 14:42:36.628" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.637" endtime="20201117 14:42:36.656"></status>
</kw>
<msg timestamp="20201117 14:42:36.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.635" endtime="20201117 14:42:36.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:36.657" endtime="20201117 14:42:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.660" endtime="20201117 14:42:36.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.633" endtime="20201117 14:42:36.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.630" endtime="20201117 14:42:36.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.669" endtime="20201117 14:42:36.956"></status>
</kw>
<msg timestamp="20201117 14:42:36.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.668" endtime="20201117 14:42:36.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:36.960" endtime="20201117 14:42:36.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:36.969" endtime="20201117 14:42:36.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.665" endtime="20201117 14:42:36.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.663" endtime="20201117 14:42:36.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:36.976" level="INFO">${RESULT} = [{'time': 0.022922444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.97909999999996e-05, 'source_diff': 6.97909999999996e-05}, {'time': 0.023005389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:36.972" endtime="20201117 14:42:36.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:36.989" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:36.977" endtime="20201117 14:42:36.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.994" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:42:36.993" endtime="20201117 14:42:36.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:36.997" level="INFO">VALUE: [6.97909999999996e-05, 7.034700000000185e-05, 6.983300000000178e-05, 7.016699999999945e-05, 6.998600000000105e-05, 7.001400000000019e-05, 6.977799999999951e-05, 7.017999999999955e-05, 6.967999999999905e-05, 6.984699999999788e-05, 7.017999999999955e-05, 6.984700000000135e-05, 6.981900000000221e-05, 7.033299999999881e-05, 7.000000000000062e-05, 7.000000000000062e-05, 6.998600000000105e-05, 6.986100000000092e-05, 7.016699999999945e-05, 7.050000000000112e-05, 7.051400000000069e-05, 6.994499999999834e-05, 6.968000000000252e-05, 7.001400000000019e-05, 7.048600000000155e-05, 6.983300000000178e-05, 6.979199999999908e-05, 7.033299999999881e-05, 6.965300000000285e-05, 7.016699999999945e-05, 7.032000000000219e-05, 7.033400000000176e-05, 7.016699999999945e-05, 7.048599999999808e-05, 7.034700000000185e-05, 7.051300000000121e-05, 6.966599999999948e-05, 7.00970000000016e-05, 7.000000000000062e-05, 7.016699999999945e-05, 6.987500000000049e-05, 6.962500000000024e-05, 6.968099999999852e-05, 6.965299999999938e-05, 7.019500000000206e-05, 7.009699999999813e-05, 7.000000000000062e-05, 7.018100000000249e-05, 7.047299999999798e-05, 6.983300000000178e-05]</msg>
<status status="PASS" starttime="20201117 14:42:36.995" endtime="20201117 14:42:36.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.991" endtime="20201117 14:42:36.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.000" endtime="20201117 14:42:37.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.004" endtime="20201117 14:42:37.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.002" endtime="20201117 14:42:37.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.998" endtime="20201117 14:42:37.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.629" endtime="20201117 14:42:37.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.229" endtime="20201117 14:42:37.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:36.228" endtime="20201117 14:42:37.025"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.028" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.036" endtime="20201117 14:42:37.054"></status>
</kw>
<msg timestamp="20201117 14:42:37.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.035" endtime="20201117 14:42:37.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.055" endtime="20201117 14:42:37.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.058" endtime="20201117 14:42:37.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.032" endtime="20201117 14:42:37.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.030" endtime="20201117 14:42:37.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.067" endtime="20201117 14:42:37.354"></status>
</kw>
<msg timestamp="20201117 14:42:37.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025213486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.066" endtime="20201117 14:42:37.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025213486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025285042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.358" endtime="20201117 14:42:37.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.367" endtime="20201117 14:42:37.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.063" endtime="20201117 14:42:37.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.061" endtime="20201117 14:42:37.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.374" level="INFO">${RESULT} = [{'time': 0.025285042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.15560000000004e-05, 'source_diff': 7.15560000000004e-05}, {'time': 0.025363042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:37.371" endtime="20201117 14:42:37.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.389" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:37.375" endtime="20201117 14:42:37.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.394" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.393" endtime="20201117 14:42:37.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.397" level="INFO">VALUE: [7.15560000000004e-05, 7.116700000000045e-05, 7.130600000000015e-05, 7.134699999999938e-05, 7.083299999999931e-05, 7.137500000000199e-05, 7.10559999999999e-05, 7.116599999999751e-05, 7.080500000000017e-05, 7.086100000000192e-05, 7.083300000000278e-05, 7.118100000000002e-05, 7.134699999999938e-05, 7.145899999999941e-05, 7.066699999999995e-05, 7.101400000000119e-05, 7.066699999999995e-05, 7.066600000000048e-05, 7.14170000000007e-05, 7.134699999999938e-05, 7.129099999999763e-05, 7.134699999999938e-05, 7.12230000000022e-05, 7.066699999999995e-05, 7.090199999999769e-05, 7.148600000000255e-05, 7.066699999999995e-05, 7.101399999999772e-05, 7.131999999999972e-05, 7.087500000000149e-05, 7.069399999999962e-05, 7.100000000000162e-05, 7.116599999999751e-05, 7.069399999999962e-05, 7.065300000000038e-05, 7.134699999999938e-05, 7.063900000000081e-05, 7.102800000000076e-05, 7.083300000000278e-05, 7.100000000000162e-05, 7.148599999999908e-05, 7.069500000000256e-05, 7.081999999999922e-05, 7.116700000000045e-05, 7.134699999999938e-05, 7.151400000000169e-05, 7.116600000000098e-05, 7.102800000000076e-05, 7.136100000000242e-05, 7.144400000000037e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.395" endtime="20201117 14:42:37.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.390" endtime="20201117 14:42:37.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.401" endtime="20201117 14:42:37.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.405" endtime="20201117 14:42:37.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.403" endtime="20201117 14:42:37.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.399" endtime="20201117 14:42:37.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.028" endtime="20201117 14:42:37.426"></status>
</kw>
<msg timestamp="20201117 14:42:37.426" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.435" endtime="20201117 14:42:37.452"></status>
</kw>
<msg timestamp="20201117 14:42:37.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.433" endtime="20201117 14:42:37.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.454" endtime="20201117 14:42:37.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.457" endtime="20201117 14:42:37.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.430" endtime="20201117 14:42:37.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.428" endtime="20201117 14:42:37.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.466" endtime="20201117 14:42:37.754"></status>
</kw>
<msg timestamp="20201117 14:42:37.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.464" endtime="20201117 14:42:37.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022588486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.759" endtime="20201117 14:42:37.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.767" endtime="20201117 14:42:37.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.462" endtime="20201117 14:42:37.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.460" endtime="20201117 14:42:37.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:37.774" level="INFO">${RESULT} = [{'time': 0.022659222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.073599999999833e-05, 'source_diff': 7.073599999999833e-05}, {'time': 0.022737222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:37.771" endtime="20201117 14:42:37.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:37.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:37.775" endtime="20201117 14:42:37.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.793" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:42:37.792" endtime="20201117 14:42:37.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.795" level="INFO">VALUE: [7.073599999999833e-05, 7.100000000000162e-05, 7.101400000000119e-05, 7.086100000000192e-05, 7.138900000000156e-05, 7.084699999999888e-05, 7.086100000000192e-05, 7.133399999999929e-05, 7.084800000000183e-05, 7.136099999999895e-05, 7.120799999999969e-05, 7.084700000000235e-05, 7.117999999999708e-05, 7.080500000000017e-05, 7.131900000000024e-05, 7.134699999999938e-05, 7.084699999999888e-05, 7.068099999999952e-05, 7.084699999999888e-05, 7.133300000000328e-05, 7.116700000000045e-05, 7.151399999999822e-05, 7.151299999999874e-05, 7.066600000000048e-05, 7.065200000000091e-05, 7.136099999999895e-05, 7.066600000000048e-05, 7.149999999999865e-05, 7.095799999999944e-05, 7.131900000000024e-05, 7.152800000000126e-05, 7.149999999999865e-05, 7.150000000000212e-05, 7.13620000000019e-05, 7.084799999999836e-05, 7.086099999999845e-05, 7.100000000000162e-05, 7.120799999999969e-05, 7.06109999999982e-05, 7.152800000000126e-05, 7.116600000000098e-05, 7.156999999999997e-05, 7.12499999999984e-05, 7.116700000000045e-05, 7.079199999999661e-05, 7.068099999999952e-05, 7.118100000000002e-05, 7.147199999999951e-05, 7.099999999999815e-05, 7.118100000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:42:37.794" endtime="20201117 14:42:37.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.789" endtime="20201117 14:42:37.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.799" endtime="20201117 14:42:37.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:37.802" endtime="20201117 14:42:37.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.801" endtime="20201117 14:42:37.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.797" endtime="20201117 14:42:37.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.427" endtime="20201117 14:42:37.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.026" endtime="20201117 14:42:37.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.025" endtime="20201117 14:42:37.823"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.826" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.835" endtime="20201117 14:42:37.852"></status>
</kw>
<msg timestamp="20201117 14:42:37.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.833" endtime="20201117 14:42:37.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:37.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:37.854" endtime="20201117 14:42:37.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.856" endtime="20201117 14:42:37.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.830" endtime="20201117 14:42:37.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.828" endtime="20201117 14:42:37.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:37.866" endtime="20201117 14:42:38.153"></status>
</kw>
<msg timestamp="20201117 14:42:38.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:37.864" endtime="20201117 14:42:38.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.158" endtime="20201117 14:42:38.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.166" endtime="20201117 14:42:38.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.861" endtime="20201117 14:42:38.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.860" endtime="20201117 14:42:38.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.173" level="INFO">${RESULT} = [{'time': 0.025199056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.258400000000054e-05, 'source_diff': 7.258400000000054e-05}, {'time': 0.025281056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.170" endtime="20201117 14:42:38.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.187" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:38.174" endtime="20201117 14:42:38.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.192" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.191" endtime="20201117 14:42:38.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.194" level="INFO">VALUE: [7.258400000000054e-05, 7.199999999999915e-05, 7.231900000000124e-05, 7.186099999999945e-05, 7.252800000000226e-05, 7.252799999999879e-05, 7.249999999999965e-05, 7.165299999999791e-05, 7.200000000000262e-05, 7.198599999999958e-05, 7.202799999999829e-05, 7.251399999999922e-05, 7.232000000000072e-05, 7.199999999999915e-05, 7.251400000000269e-05, 7.215299999999841e-05, 7.233300000000081e-05, 7.201399999999872e-05, 7.190300000000163e-05, 7.183300000000031e-05, 7.234700000000038e-05, 7.234700000000038e-05, 7.233300000000081e-05, 7.201399999999872e-05, 7.236099999999995e-05, 7.166700000000095e-05, 7.252799999999879e-05, 7.216599999999851e-05, 7.257000000000097e-05, 7.191599999999826e-05, 7.244400000000137e-05, 7.234700000000038e-05, 7.23049999999982e-05, 7.217999999999808e-05, 7.236099999999995e-05, 7.216700000000145e-05, 7.184699999999988e-05, 7.16109999999992e-05, 7.168100000000052e-05, 7.168100000000052e-05, 7.233400000000029e-05, 7.166699999999748e-05, 7.252699999999931e-05, 7.168000000000105e-05, 7.226399999999897e-05, 7.184699999999988e-05, 7.168100000000052e-05, 7.183300000000031e-05, 7.168099999999705e-05, 7.199999999999915e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.193" endtime="20201117 14:42:38.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.188" endtime="20201117 14:42:38.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.197" endtime="20201117 14:42:38.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.201" endtime="20201117 14:42:38.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.199" endtime="20201117 14:42:38.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.196" endtime="20201117 14:42:38.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.827" endtime="20201117 14:42:38.222"></status>
</kw>
<msg timestamp="20201117 14:42:38.222" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.231" endtime="20201117 14:42:38.249"></status>
</kw>
<msg timestamp="20201117 14:42:38.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.229" endtime="20201117 14:42:38.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.251" endtime="20201117 14:42:38.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.254" endtime="20201117 14:42:38.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.226" endtime="20201117 14:42:38.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.224" endtime="20201117 14:42:38.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.263" endtime="20201117 14:42:38.550"></status>
</kw>
<msg timestamp="20201117 14:42:38.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.262" endtime="20201117 14:42:38.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.554" endtime="20201117 14:42:38.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.563" endtime="20201117 14:42:38.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.259" endtime="20201117 14:42:38.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.257" endtime="20201117 14:42:38.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.570" level="INFO">${RESULT} = [{'time': 0.022831458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.172199999999976e-05, 'source_diff': 7.172199999999976e-05}, {'time': 0.022909458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.566" endtime="20201117 14:42:38.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:38.571" endtime="20201117 14:42:38.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.588" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.587" endtime="20201117 14:42:38.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.591" level="INFO">VALUE: [7.172199999999976e-05, 7.216600000000198e-05, 7.251399999999922e-05, 7.252799999999879e-05, 7.199999999999915e-05, 7.168100000000052e-05, 7.202800000000176e-05, 7.216700000000145e-05, 7.229200000000158e-05, 7.184800000000283e-05, 7.233400000000029e-05, 7.199999999999915e-05, 7.183300000000031e-05, 7.248600000000008e-05, 7.166600000000148e-05, 7.186099999999945e-05, 7.233300000000081e-05, 7.166700000000095e-05, 7.183300000000031e-05, 7.181900000000074e-05, 7.234700000000038e-05, 7.234700000000038e-05, 7.18620000000024e-05, 7.205499999999795e-05, 7.218100000000102e-05, 7.236099999999995e-05, 7.22629999999995e-05, 7.219400000000112e-05, 7.166599999999801e-05, 7.218100000000102e-05, 7.251400000000269e-05, 7.237499999999952e-05, 7.168100000000052e-05, 7.218099999999755e-05, 7.251399999999922e-05, 7.218100000000102e-05, 7.249999999999965e-05, 7.199999999999915e-05, 7.165300000000138e-05, 7.251399999999922e-05, 7.252799999999879e-05, 7.165300000000138e-05, 7.215300000000188e-05, 7.251399999999922e-05, 7.234700000000038e-05, 7.249999999999965e-05, 7.165299999999791e-05, 7.166700000000095e-05, 7.216700000000145e-05, 7.201399999999872e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.590" endtime="20201117 14:42:38.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.584" endtime="20201117 14:42:38.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.594" endtime="20201117 14:42:38.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.598" endtime="20201117 14:42:38.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.596" endtime="20201117 14:42:38.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.593" endtime="20201117 14:42:38.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.223" endtime="20201117 14:42:38.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.825" endtime="20201117 14:42:38.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:37.824" endtime="20201117 14:42:38.619"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.622" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.631" endtime="20201117 14:42:38.650"></status>
</kw>
<msg timestamp="20201117 14:42:38.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.629" endtime="20201117 14:42:38.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:38.651" endtime="20201117 14:42:38.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.654" endtime="20201117 14:42:38.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.626" endtime="20201117 14:42:38.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.624" endtime="20201117 14:42:38.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.663" endtime="20201117 14:42:38.950"></status>
</kw>
<msg timestamp="20201117 14:42:38.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025529736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025602458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.662" endtime="20201117 14:42:38.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025529736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025602458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:38.955" endtime="20201117 14:42:38.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.963" endtime="20201117 14:42:38.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.659" endtime="20201117 14:42:38.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.657" endtime="20201117 14:42:38.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:38.970" level="INFO">${RESULT} = [{'time': 0.025602458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.272200000000076e-05, 'source_diff': 7.272200000000076e-05}, {'time': 0.025679472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:38.967" endtime="20201117 14:42:38.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:38.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:38.971" endtime="20201117 14:42:38.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.990" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:38.989" endtime="20201117 14:42:38.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:38.993" level="INFO">VALUE: [7.272200000000076e-05, 7.267999999999858e-05, 7.350000000000065e-05, 7.301399999999972e-05, 7.348599999999761e-05, 7.266700000000195e-05, 7.301399999999972e-05, 7.348599999999761e-05, 7.269500000000109e-05, 7.330600000000215e-05, 7.334700000000138e-05, 7.317999999999908e-05, 7.266600000000248e-05, 7.333300000000181e-05, 7.300000000000015e-05, 7.301399999999972e-05, 7.281900000000174e-05, 7.315299999999941e-05, 7.318100000000202e-05, 7.318100000000202e-05, 7.333400000000129e-05, 7.268100000000152e-05, 7.284700000000088e-05, 7.267999999999858e-05, 7.266599999999901e-05, 7.269399999999815e-05, 7.267999999999858e-05, 7.333299999999834e-05, 7.269399999999815e-05, 7.331999999999825e-05, 7.348600000000108e-05, 7.350000000000065e-05, 7.334700000000138e-05, 7.316699999999898e-05, 7.259800000000011e-05, 7.266699999999848e-05, 7.334700000000138e-05, 7.334700000000138e-05, 7.317999999999908e-05, 7.283299999999784e-05, 7.34170000000027e-05, 7.300000000000015e-05, 7.318099999999855e-05, 7.300000000000015e-05, 7.302799999999929e-05, 7.352799999999979e-05, 7.283400000000079e-05, 7.352799999999979e-05, 7.286100000000045e-05, 7.333400000000129e-05]</msg>
<status status="PASS" starttime="20201117 14:42:38.991" endtime="20201117 14:42:38.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.986" endtime="20201117 14:42:38.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:38.996" endtime="20201117 14:42:38.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:38.999" endtime="20201117 14:42:39.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.998" endtime="20201117 14:42:39.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.994" endtime="20201117 14:42:39.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.622" endtime="20201117 14:42:39.021"></status>
</kw>
<msg timestamp="20201117 14:42:39.021" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.030" endtime="20201117 14:42:39.048"></status>
</kw>
<msg timestamp="20201117 14:42:39.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.028" endtime="20201117 14:42:39.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.050" endtime="20201117 14:42:39.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.053" endtime="20201117 14:42:39.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.025" endtime="20201117 14:42:39.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.023" endtime="20201117 14:42:39.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.062" endtime="20201117 14:42:39.350"></status>
</kw>
<msg timestamp="20201117 14:42:39.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.060" endtime="20201117 14:42:39.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.354" endtime="20201117 14:42:39.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.363" endtime="20201117 14:42:39.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.058" endtime="20201117 14:42:39.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.056" endtime="20201117 14:42:39.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.369" level="INFO">${RESULT} = [{'time': 0.022893917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.308400000000104e-05, 'source_diff': 7.308400000000104e-05}, {'time': 0.022974917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.366" endtime="20201117 14:42:39.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:39.371" endtime="20201117 14:42:39.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.388" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.387" endtime="20201117 14:42:39.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.391" level="INFO">VALUE: [7.308400000000104e-05, 7.284800000000036e-05, 7.352700000000031e-05, 7.348700000000055e-05, 7.333299999999834e-05, 7.334700000000138e-05, 7.316599999999951e-05, 7.333300000000181e-05, 7.280500000000217e-05, 7.268099999999805e-05, 7.31110000000007e-05, 7.302799999999929e-05, 7.284800000000036e-05, 7.345900000000141e-05, 7.284800000000036e-05, 7.336099999999748e-05, 7.27499999999999e-05, 7.301399999999972e-05, 7.301399999999972e-05, 7.334700000000138e-05, 7.334700000000138e-05, 7.286100000000045e-05, 7.298599999999711e-05, 7.300000000000015e-05, 7.348600000000108e-05, 7.300000000000015e-05, 7.266700000000195e-05, 7.269500000000109e-05, 7.333400000000129e-05, 7.315299999999941e-05, 7.284699999999741e-05, 7.300000000000015e-05, 7.317999999999908e-05, 7.284700000000088e-05, 7.336100000000095e-05, 7.283300000000131e-05, 7.334700000000138e-05, 7.318100000000202e-05, 7.286099999999698e-05, 7.283400000000079e-05, 7.301399999999972e-05, 7.272200000000076e-05, 7.329099999999963e-05, 7.266599999999901e-05, 7.317999999999908e-05, 7.329099999999963e-05, 7.334700000000138e-05, 7.301399999999972e-05, 7.298600000000058e-05, 7.318100000000202e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.389" endtime="20201117 14:42:39.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.384" endtime="20201117 14:42:39.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.394" endtime="20201117 14:42:39.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.398" endtime="20201117 14:42:39.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.396" endtime="20201117 14:42:39.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.392" endtime="20201117 14:42:39.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.022" endtime="20201117 14:42:39.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.620" endtime="20201117 14:42:39.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:38.620" endtime="20201117 14:42:39.419"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.422" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.431" endtime="20201117 14:42:39.449"></status>
</kw>
<msg timestamp="20201117 14:42:39.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.429" endtime="20201117 14:42:39.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.450" endtime="20201117 14:42:39.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.453" endtime="20201117 14:42:39.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.426" endtime="20201117 14:42:39.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.424" endtime="20201117 14:42:39.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.462" endtime="20201117 14:42:39.750"></status>
</kw>
<msg timestamp="20201117 14:42:39.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026132639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.461" endtime="20201117 14:42:39.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026132639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.755" endtime="20201117 14:42:39.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.763" endtime="20201117 14:42:39.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.458" endtime="20201117 14:42:39.765"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.456" endtime="20201117 14:42:39.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:39.770" level="INFO">${RESULT} = [{'time': 0.026207208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.456900000000002e-05, 'source_diff': 7.456900000000002e-05}, {'time': 0.026288222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:39.767" endtime="20201117 14:42:39.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:39.784" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:39.771" endtime="20201117 14:42:39.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.789" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:39.787" endtime="20201117 14:42:39.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.791" level="INFO">VALUE: [7.456900000000002e-05, 7.386100000000145e-05, 7.383300000000231e-05, 7.434700000000238e-05, 7.451400000000122e-05, 7.366700000000295e-05, 7.415300000000041e-05, 7.366699999999948e-05, 7.365299999999991e-05, 7.418099999999955e-05, 7.402800000000029e-05, 7.383399999999832e-05, 7.416699999999998e-05, 7.418000000000008e-05, 7.416600000000051e-05, 7.400000000000115e-05, 7.366600000000001e-05, 7.436099999999848e-05, 7.447199999999904e-05, 7.390300000000016e-05, 7.405499999999995e-05, 7.366699999999948e-05, 7.384699999999841e-05, 7.434799999999839e-05, 7.395899999999844e-05, 7.384700000000188e-05, 7.388900000000059e-05, 7.433299999999934e-05, 7.400000000000115e-05, 7.450000000000165e-05, 7.449999999999818e-05, 7.402800000000029e-05, 7.368099999999905e-05, 7.436100000000195e-05, 7.431999999999925e-05, 7.433399999999882e-05, 7.436199999999796e-05, 7.420799999999922e-05, 7.362500000000077e-05, 7.431899999999977e-05, 7.451399999999775e-05, 7.433299999999934e-05, 7.418000000000008e-05, 7.384700000000188e-05, 7.366699999999948e-05, 7.366699999999948e-05, 7.452799999999732e-05, 7.433299999999934e-05, 7.434800000000186e-05, 7.383400000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:42:39.790" endtime="20201117 14:42:39.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.785" endtime="20201117 14:42:39.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.795" endtime="20201117 14:42:39.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:39.799" endtime="20201117 14:42:39.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.797" endtime="20201117 14:42:39.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.793" endtime="20201117 14:42:39.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.422" endtime="20201117 14:42:39.820"></status>
</kw>
<msg timestamp="20201117 14:42:39.820" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.828" endtime="20201117 14:42:39.846"></status>
</kw>
<msg timestamp="20201117 14:42:39.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.827" endtime="20201117 14:42:39.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:39.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:39.848" endtime="20201117 14:42:39.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.851" endtime="20201117 14:42:39.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.824" endtime="20201117 14:42:39.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.822" endtime="20201117 14:42:39.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:39.860" endtime="20201117 14:42:40.146"></status>
</kw>
<msg timestamp="20201117 14:42:40.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:39.859" endtime="20201117 14:42:40.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022511389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.151" endtime="20201117 14:42:40.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.159" endtime="20201117 14:42:40.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.856" endtime="20201117 14:42:40.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.854" endtime="20201117 14:42:40.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.166" level="INFO">${RESULT} = [{'time': 0.022511389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.423599999999836e-05, 'source_diff': 7.423599999999836e-05}, {'time': 0.022590431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:40.163" endtime="20201117 14:42:40.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:40.167" endtime="20201117 14:42:40.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.184" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.183" endtime="20201117 14:42:40.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.187" level="INFO">VALUE: [7.423599999999836e-05, 7.419500000000259e-05, 7.434800000000186e-05, 7.366700000000295e-05, 7.450000000000165e-05, 7.386099999999798e-05, 7.398599999999811e-05, 7.384700000000188e-05, 7.39309999999993e-05, 7.400000000000115e-05, 7.429200000000011e-05, 7.434700000000238e-05, 7.416699999999998e-05, 7.434799999999839e-05, 7.391600000000026e-05, 7.387499999999755e-05, 7.383399999999832e-05, 7.437500000000152e-05, 7.397199999999854e-05, 7.400000000000115e-05, 7.399999999999768e-05, 7.441700000000023e-05, 7.383299999999884e-05, 7.416699999999998e-05, 7.384699999999841e-05, 7.386099999999798e-05, 7.381999999999875e-05, 7.368099999999905e-05, 7.451399999999775e-05, 7.449999999999818e-05, 7.398699999999758e-05, 7.400000000000115e-05, 7.454200000000036e-05, 7.419399999999965e-05, 7.386099999999798e-05, 7.448599999999861e-05, 7.365299999999991e-05, 7.384699999999841e-05, 7.434699999999891e-05, 7.382000000000222e-05, 7.431999999999925e-05, 7.438899999999762e-05, 7.451299999999828e-05, 7.420800000000269e-05, 7.384699999999841e-05, 7.365199999999697e-05, 7.434699999999891e-05, 7.401400000000072e-05, 7.436100000000195e-05, 7.450000000000165e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.186" endtime="20201117 14:42:40.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.181" endtime="20201117 14:42:40.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.191" endtime="20201117 14:42:40.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.195" endtime="20201117 14:42:40.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.193" endtime="20201117 14:42:40.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.189" endtime="20201117 14:42:40.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.820" endtime="20201117 14:42:40.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.420" endtime="20201117 14:42:40.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:39.419" endtime="20201117 14:42:40.216"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.218" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.227" endtime="20201117 14:42:40.246"></status>
</kw>
<msg timestamp="20201117 14:42:40.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.225" endtime="20201117 14:42:40.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.247" endtime="20201117 14:42:40.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.250" endtime="20201117 14:42:40.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.223" endtime="20201117 14:42:40.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.220" endtime="20201117 14:42:40.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.259" endtime="20201117 14:42:40.546"></status>
</kw>
<msg timestamp="20201117 14:42:40.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025512125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.258" endtime="20201117 14:42:40.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025436528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025512125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.551" endtime="20201117 14:42:40.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.559" endtime="20201117 14:42:40.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.255" endtime="20201117 14:42:40.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.253" endtime="20201117 14:42:40.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.566" level="INFO">${RESULT} = [{'time': 0.025512125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.559700000000016e-05, 'source_diff': 7.559700000000016e-05}, {'time': 0.025602125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:40.563" endtime="20201117 14:42:40.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.581" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:40.567" endtime="20201117 14:42:40.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.586" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.585" endtime="20201117 14:42:40.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.589" level="INFO">VALUE: [7.559700000000016e-05, 7.536099999999948e-05, 7.551400000000222e-05, 7.462500000000177e-05, 7.484699999999941e-05, 7.470899999999919e-05, 7.480600000000018e-05, 7.518100000000055e-05, 7.465300000000091e-05, 7.499999999999868e-05, 7.468000000000058e-05, 7.47500000000019e-05, 7.486099999999898e-05, 7.468000000000058e-05, 7.468000000000058e-05, 7.468100000000005e-05, 7.502800000000129e-05, 7.549999999999918e-05, 7.466700000000048e-05, 7.533399999999982e-05, 7.495899999999944e-05, 7.468100000000005e-05, 7.481999999999975e-05, 7.468000000000058e-05, 7.484699999999941e-05, 7.484699999999941e-05, 7.488899999999812e-05, 7.468000000000058e-05, 7.536099999999948e-05, 7.533300000000034e-05, 7.551399999999875e-05, 7.483399999999932e-05, 7.519500000000012e-05, 7.533399999999982e-05, 7.536099999999948e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.468000000000058e-05, 7.519400000000065e-05, 7.516599999999804e-05, 7.516700000000098e-05, 7.484700000000288e-05, 7.483299999999984e-05, 7.533300000000034e-05, 7.468100000000005e-05, 7.468100000000005e-05, 7.465300000000091e-05, 7.537499999999905e-05, 7.468000000000058e-05, 7.483299999999984e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.587" endtime="20201117 14:42:40.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.582" endtime="20201117 14:42:40.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.593" endtime="20201117 14:42:40.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.596" endtime="20201117 14:42:40.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.595" endtime="20201117 14:42:40.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.591" endtime="20201117 14:42:40.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.219" endtime="20201117 14:42:40.617"></status>
</kw>
<msg timestamp="20201117 14:42:40.617" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.626" endtime="20201117 14:42:40.644"></status>
</kw>
<msg timestamp="20201117 14:42:40.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.624" endtime="20201117 14:42:40.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:40.646" endtime="20201117 14:42:40.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.648" endtime="20201117 14:42:40.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.622" endtime="20201117 14:42:40.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.619" endtime="20201117 14:42:40.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.658" endtime="20201117 14:42:40.944"></status>
</kw>
<msg timestamp="20201117 14:42:40.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.656" endtime="20201117 14:42:40.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:40.949" endtime="20201117 14:42:40.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.957" endtime="20201117 14:42:40.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.654" endtime="20201117 14:42:40.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.652" endtime="20201117 14:42:40.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:40.964" level="INFO">${RESULT} = [{'time': 0.022436347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.536099999999948e-05, 'source_diff': 7.536099999999948e-05}, {'time': 0.022519333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:40.961" endtime="20201117 14:42:40.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:40.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:40.965" endtime="20201117 14:42:40.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.987" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:42:40.986" endtime="20201117 14:42:40.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:40.990" level="INFO">VALUE: [7.536099999999948e-05, 7.483299999999984e-05, 7.467999999999711e-05, 7.516700000000098e-05, 7.466700000000048e-05, 7.534699999999991e-05, 7.461099999999873e-05, 7.504199999999739e-05, 7.533399999999982e-05, 7.536200000000243e-05, 7.484699999999941e-05, 7.470799999999972e-05, 7.534699999999991e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.550000000000265e-05, 7.550000000000265e-05, 7.518100000000055e-05, 7.481999999999975e-05, 7.484699999999941e-05, 7.465299999999744e-05, 7.484799999999889e-05, 7.549999999999918e-05, 7.483399999999932e-05, 7.537499999999905e-05, 7.500000000000215e-05, 7.519400000000065e-05, 7.500000000000215e-05, 7.483299999999984e-05, 7.486099999999898e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.468100000000005e-05, 7.550000000000265e-05, 7.547200000000004e-05, 7.518099999999708e-05, 7.498700000000205e-05, 7.531900000000077e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.486100000000245e-05, 7.4763999999998e-05, 7.465300000000091e-05, 7.502799999999782e-05, 7.516700000000098e-05, 7.461099999999873e-05, 7.552800000000179e-05, 7.518100000000055e-05, 7.465300000000091e-05, 7.551399999999875e-05]</msg>
<status status="PASS" starttime="20201117 14:42:40.988" endtime="20201117 14:42:40.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.983" endtime="20201117 14:42:40.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:40.993" endtime="20201117 14:42:40.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:40.997" endtime="20201117 14:42:41.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.995" endtime="20201117 14:42:41.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.991" endtime="20201117 14:42:41.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.618" endtime="20201117 14:42:41.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.217" endtime="20201117 14:42:41.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:40.216" endtime="20201117 14:42:41.018"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.020" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.029" endtime="20201117 14:42:41.048"></status>
</kw>
<msg timestamp="20201117 14:42:41.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.027" endtime="20201117 14:42:41.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.049" endtime="20201117 14:42:41.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.052" endtime="20201117 14:42:41.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.025" endtime="20201117 14:42:41.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.023" endtime="20201117 14:42:41.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.061" endtime="20201117 14:42:41.349"></status>
</kw>
<msg timestamp="20201117 14:42:41.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025200806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.059" endtime="20201117 14:42:41.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025124764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025200806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.353" endtime="20201117 14:42:41.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.361" endtime="20201117 14:42:41.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.057" endtime="20201117 14:42:41.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.055" endtime="20201117 14:42:41.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.369" level="INFO">${RESULT} = [{'time': 0.025200806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.604199999999839e-05, 'source_diff': 7.604199999999839e-05}, {'time': 0.025285819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.365" endtime="20201117 14:42:41.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:41.370" endtime="20201117 14:42:41.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.387" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.386" endtime="20201117 14:42:41.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.390" level="INFO">VALUE: [7.604199999999839e-05, 7.650000000000018e-05, 7.591699999999826e-05, 7.566599999999854e-05, 7.616700000000198e-05, 7.584700000000041e-05, 7.611100000000023e-05, 7.566700000000148e-05, 7.636100000000048e-05, 7.652799999999932e-05, 7.583399999999685e-05, 7.616699999999851e-05, 7.634800000000039e-05, 7.597200000000054e-05, 7.599999999999968e-05, 7.587499999999955e-05, 7.636100000000048e-05, 7.568000000000158e-05, 7.618100000000155e-05, 7.572299999999976e-05, 7.650000000000018e-05, 7.600000000000315e-05, 7.599999999999968e-05, 7.605500000000195e-05, 7.602699999999935e-05, 7.586099999999998e-05, 7.586099999999998e-05, 7.616600000000251e-05, 7.651399999999975e-05, 7.567999999999811e-05, 7.615300000000241e-05, 7.601400000000272e-05, 7.637500000000005e-05, 7.566699999999801e-05, 7.565299999999844e-05, 7.601399999999925e-05, 7.634800000000039e-05, 7.565300000000191e-05, 7.632000000000125e-05, 7.648599999999714e-05, 7.634700000000091e-05, 7.569400000000115e-05, 7.586099999999998e-05, 7.617999999999861e-05, 7.568099999999758e-05, 7.602799999999882e-05, 7.650000000000018e-05, 7.580600000000118e-05, 7.622200000000079e-05, 7.584799999999989e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.388" endtime="20201117 14:42:41.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.383" endtime="20201117 14:42:41.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.393" endtime="20201117 14:42:41.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.397" endtime="20201117 14:42:41.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.395" endtime="20201117 14:42:41.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.391" endtime="20201117 14:42:41.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.021" endtime="20201117 14:42:41.417"></status>
</kw>
<msg timestamp="20201117 14:42:41.418" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.426" endtime="20201117 14:42:41.444"></status>
</kw>
<msg timestamp="20201117 14:42:41.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.425" endtime="20201117 14:42:41.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.446" endtime="20201117 14:42:41.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.448" endtime="20201117 14:42:41.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.422" endtime="20201117 14:42:41.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.420" endtime="20201117 14:42:41.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.458" endtime="20201117 14:42:41.746"></status>
</kw>
<msg timestamp="20201117 14:42:41.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.456" endtime="20201117 14:42:41.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022384903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.750" endtime="20201117 14:42:41.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.759" endtime="20201117 14:42:41.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.453" endtime="20201117 14:42:41.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.451" endtime="20201117 14:42:41.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:41.766" level="INFO">${RESULT} = [{'time': 0.022461125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.622199999999732e-05, 'source_diff': 7.622199999999732e-05}, {'time': 0.022549139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:41.763" endtime="20201117 14:42:41.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:41.780" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:41.767" endtime="20201117 14:42:41.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.784" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:42:41.783" endtime="20201117 14:42:41.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.787" level="INFO">VALUE: [7.622199999999732e-05, 7.566699999999801e-05, 7.599999999999968e-05, 7.586200000000293e-05, 7.584799999999989e-05, 7.580600000000118e-05, 7.650000000000018e-05, 7.565200000000244e-05, 7.650000000000018e-05, 7.586099999999998e-05, 7.631900000000177e-05, 7.572200000000029e-05, 7.636100000000048e-05, 7.616700000000198e-05, 7.632000000000125e-05, 7.586099999999998e-05, 7.616699999999851e-05, 7.583400000000032e-05, 7.647200000000104e-05, 7.651300000000028e-05, 7.588899999999912e-05, 7.599999999999968e-05, 7.617999999999861e-05, 7.634700000000091e-05, 7.59440000000014e-05, 7.584700000000041e-05, 7.601399999999925e-05, 7.583400000000032e-05, 7.587500000000302e-05, 7.584799999999989e-05, 7.601399999999925e-05, 7.622200000000079e-05, 7.583300000000084e-05, 7.567999999999811e-05, 7.599999999999968e-05, 7.568000000000158e-05, 7.601400000000272e-05, 7.609700000000066e-05, 7.655599999999846e-05, 7.604199999999839e-05, 7.616699999999851e-05, 7.650000000000018e-05, 7.582000000000075e-05, 7.601399999999925e-05, 7.572200000000029e-05, 7.569400000000115e-05, 7.566599999999854e-05, 7.636100000000048e-05, 7.655600000000193e-05, 7.581900000000127e-05]</msg>
<status status="PASS" starttime="20201117 14:42:41.785" endtime="20201117 14:42:41.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.781" endtime="20201117 14:42:41.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.790" endtime="20201117 14:42:41.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:41.794" endtime="20201117 14:42:41.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.792" endtime="20201117 14:42:41.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.788" endtime="20201117 14:42:41.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.418" endtime="20201117 14:42:41.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.019" endtime="20201117 14:42:41.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.018" endtime="20201117 14:42:41.815"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.817" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.826" endtime="20201117 14:42:41.845"></status>
</kw>
<msg timestamp="20201117 14:42:41.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.825" endtime="20201117 14:42:41.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:41.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:41.847" endtime="20201117 14:42:41.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.849" endtime="20201117 14:42:41.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.822" endtime="20201117 14:42:41.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.820" endtime="20201117 14:42:41.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:41.859" endtime="20201117 14:42:42.146"></status>
</kw>
<msg timestamp="20201117 14:42:42.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025379542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:41.857" endtime="20201117 14:42:42.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025379542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025456444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.150" endtime="20201117 14:42:42.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.159" endtime="20201117 14:42:42.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.854" endtime="20201117 14:42:42.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.852" endtime="20201117 14:42:42.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.166" level="INFO">${RESULT} = [{'time': 0.025456444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.690200000000022e-05, 'source_diff': 7.690200000000022e-05}, {'time': 0.025539431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.162" endtime="20201117 14:42:42.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.181" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:42.167" endtime="20201117 14:42:42.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.185" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.184" endtime="20201117 14:42:42.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.188" level="INFO">VALUE: [7.690200000000022e-05, 7.732000000000225e-05, 7.750000000000118e-05, 7.684700000000141e-05, 7.668000000000258e-05, 7.69579999999985e-05, 7.750000000000118e-05, 7.748599999999814e-05, 7.683299999999837e-05, 7.700000000000068e-05, 7.668099999999858e-05, 7.666700000000248e-05, 7.669399999999868e-05, 7.669399999999868e-05, 7.751400000000075e-05, 7.667999999999911e-05, 7.69440000000024e-05, 7.683300000000184e-05, 7.734699999999844e-05, 7.701400000000025e-05, 7.734700000000191e-05, 7.733299999999887e-05, 7.733299999999887e-05, 7.715299999999994e-05, 7.679199999999914e-05, 7.668099999999858e-05, 7.733400000000182e-05, 7.722200000000179e-05, 7.717999999999961e-05, 7.759800000000164e-05, 7.665299999999944e-05, 7.734699999999844e-05, 7.684699999999794e-05, 7.733299999999887e-05, 7.683299999999837e-05, 7.684700000000141e-05, 7.718100000000255e-05, 7.750000000000118e-05, 7.683399999999785e-05, 7.751300000000128e-05, 7.686099999999751e-05, 7.733299999999887e-05, 7.734699999999844e-05, 7.734699999999844e-05, 7.68189999999988e-05, 7.73189999999993e-05, 7.716699999999951e-05, 7.668099999999858e-05, 7.701400000000025e-05, 7.684800000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.187" endtime="20201117 14:42:42.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.182" endtime="20201117 14:42:42.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.191" endtime="20201117 14:42:42.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.195" endtime="20201117 14:42:42.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.193" endtime="20201117 14:42:42.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.190" endtime="20201117 14:42:42.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.818" endtime="20201117 14:42:42.216"></status>
</kw>
<msg timestamp="20201117 14:42:42.216" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.225" endtime="20201117 14:42:42.243"></status>
</kw>
<msg timestamp="20201117 14:42:42.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.223" endtime="20201117 14:42:42.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.245" endtime="20201117 14:42:42.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.248" endtime="20201117 14:42:42.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.220" endtime="20201117 14:42:42.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.218" endtime="20201117 14:42:42.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.257" endtime="20201117 14:42:42.545"></status>
</kw>
<msg timestamp="20201117 14:42:42.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.256" endtime="20201117 14:42:42.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022618042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.549" endtime="20201117 14:42:42.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.558" endtime="20201117 14:42:42.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.253" endtime="20201117 14:42:42.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.251" endtime="20201117 14:42:42.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.565" level="INFO">${RESULT} = [{'time': 0.022618042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.022709069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:42.561" endtime="20201117 14:42:42.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:42.566" endtime="20201117 14:42:42.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.583" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.582" endtime="20201117 14:42:42.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.586" level="INFO">VALUE: [7.723600000000136e-05, 7.752699999999738e-05, 7.682000000000175e-05, 7.70830000000021e-05, 7.734699999999844e-05, 7.670899999999772e-05, 7.716699999999951e-05, 7.667999999999911e-05, 7.705599999999896e-05, 7.715299999999994e-05, 7.734700000000191e-05, 7.718099999999908e-05, 7.686200000000046e-05, 7.736099999999801e-05, 7.698700000000058e-05, 7.734700000000191e-05, 7.665199999999997e-05, 7.683299999999837e-05, 7.686100000000098e-05, 7.70839999999981e-05, 7.71250000000008e-05, 7.683300000000184e-05, 7.701400000000025e-05, 7.718099999999908e-05, 7.666699999999901e-05, 7.734800000000139e-05, 7.729100000000017e-05, 7.750000000000118e-05, 7.683299999999837e-05, 7.751400000000075e-05, 7.717999999999961e-05, 7.701400000000025e-05, 7.683300000000184e-05, 7.688800000000065e-05, 7.750000000000118e-05, 7.74310000000028e-05, 7.734700000000191e-05, 7.668100000000205e-05, 7.705499999999949e-05, 7.734800000000139e-05, 7.701300000000078e-05, 7.683300000000184e-05, 7.659700000000116e-05, 7.750000000000118e-05, 7.684699999999794e-05, 7.736099999999801e-05, 7.720899999999822e-05, 7.734699999999844e-05, 7.702799999999982e-05, 7.684799999999742e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.584" endtime="20201117 14:42:42.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.579" endtime="20201117 14:42:42.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.589" endtime="20201117 14:42:42.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.593" endtime="20201117 14:42:42.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.591" endtime="20201117 14:42:42.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.587" endtime="20201117 14:42:42.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.217" endtime="20201117 14:42:42.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.816" endtime="20201117 14:42:42.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:41.815" endtime="20201117 14:42:42.614"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.616" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.625" endtime="20201117 14:42:42.644"></status>
</kw>
<msg timestamp="20201117 14:42:42.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.624" endtime="20201117 14:42:42.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:42.646" endtime="20201117 14:42:42.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.649" endtime="20201117 14:42:42.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.621" endtime="20201117 14:42:42.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.618" endtime="20201117 14:42:42.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.658" endtime="20201117 14:42:42.945"></status>
</kw>
<msg timestamp="20201117 14:42:42.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025530597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.656" endtime="20201117 14:42:42.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025530597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:42.949" endtime="20201117 14:42:42.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.958" endtime="20201117 14:42:42.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.654" endtime="20201117 14:42:42.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.652" endtime="20201117 14:42:42.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:42.965" level="INFO">${RESULT} = [{'time': 0.025530597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.77779999999971e-05, 'source_diff': 7.77779999999971e-05}, {'time': 0.025621583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:42.961" endtime="20201117 14:42:42.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:42.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:42.966" endtime="20201117 14:42:42.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.983" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:42.982" endtime="20201117 14:42:42.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:42.986" level="INFO">VALUE: [7.77779999999971e-05, 7.801400000000125e-05, 7.844400000000043e-05, 7.783299999999937e-05, 7.818000000000061e-05, 7.833299999999987e-05, 7.798600000000211e-05, 7.783299999999937e-05, 7.852799999999785e-05, 7.784699999999894e-05, 7.833400000000282e-05, 7.85129999999988e-05, 7.851399999999828e-05, 7.833299999999987e-05, 7.834699999999944e-05, 7.787499999999808e-05, 7.766700000000001e-05, 7.854200000000089e-05, 7.816700000000051e-05, 7.829200000000064e-05, 7.801400000000125e-05, 7.831999999999978e-05, 7.801400000000125e-05, 7.784799999999842e-05, 7.850000000000218e-05, 7.783300000000284e-05, 7.762499999999783e-05, 7.801399999999778e-05, 7.849999999999871e-05, 7.783299999999937e-05, 7.769499999999915e-05, 7.786099999999851e-05, 7.784700000000241e-05, 7.768099999999958e-05, 7.834799999999892e-05, 7.783399999999885e-05, 7.848699999999861e-05, 7.784699999999894e-05, 7.818000000000061e-05, 7.816599999999757e-05, 7.854200000000089e-05, 7.818000000000061e-05, 7.852799999999785e-05, 7.766700000000001e-05, 7.833299999999987e-05, 7.786099999999851e-05, 7.784800000000189e-05, 7.848599999999914e-05, 7.772199999999882e-05, 7.852700000000185e-05]</msg>
<status status="PASS" starttime="20201117 14:42:42.984" endtime="20201117 14:42:42.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.979" endtime="20201117 14:42:42.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:42.989" endtime="20201117 14:42:42.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:42.993" endtime="20201117 14:42:43.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.991" endtime="20201117 14:42:43.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.987" endtime="20201117 14:42:43.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.617" endtime="20201117 14:42:43.014"></status>
</kw>
<msg timestamp="20201117 14:42:43.014" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.023" endtime="20201117 14:42:43.041"></status>
</kw>
<msg timestamp="20201117 14:42:43.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.021" endtime="20201117 14:42:43.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.043" endtime="20201117 14:42:43.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.045" endtime="20201117 14:42:43.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.019" endtime="20201117 14:42:43.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.016" endtime="20201117 14:42:43.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.055" endtime="20201117 14:42:43.341"></status>
</kw>
<msg timestamp="20201117 14:42:43.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.053" endtime="20201117 14:42:43.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.345" endtime="20201117 14:42:43.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.353" endtime="20201117 14:42:43.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.050" endtime="20201117 14:42:43.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.049" endtime="20201117 14:42:43.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.360" level="INFO">${RESULT} = [{'time': 0.022983833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.805499999999702e-05, 'source_diff': 7.805499999999702e-05}, {'time': 0.023070847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.357" endtime="20201117 14:42:43.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:43.361" endtime="20201117 14:42:43.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.379" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.378" endtime="20201117 14:42:43.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.381" level="INFO">VALUE: [7.805499999999702e-05, 7.780499999999677e-05, 7.84030000000012e-05, 7.833299999999987e-05, 7.78189999999998e-05, 7.851400000000175e-05, 7.852800000000132e-05, 7.766700000000001e-05, 7.768099999999958e-05, 7.802700000000135e-05, 7.781999999999928e-05, 7.765200000000097e-05, 7.851400000000175e-05, 7.833299999999987e-05, 7.777800000000057e-05, 7.833299999999987e-05, 7.788900000000112e-05, 7.799999999999821e-05, 7.834699999999944e-05, 7.783399999999885e-05, 7.823599999999889e-05, 7.777800000000057e-05, 7.816699999999704e-05, 7.817999999999714e-05, 7.768000000000011e-05, 7.829100000000117e-05, 7.772199999999882e-05, 7.805599999999996e-05, 7.833299999999987e-05, 7.83190000000003e-05, 7.834699999999944e-05, 7.855500000000099e-05, 7.801400000000125e-05, 7.830600000000021e-05, 7.852699999999838e-05, 7.801300000000178e-05, 7.816600000000104e-05, 7.851400000000175e-05, 7.836099999999901e-05, 7.819400000000018e-05, 7.804200000000039e-05, 7.851400000000175e-05, 7.818100000000008e-05, 7.834699999999944e-05, 7.826399999999803e-05, 7.801400000000125e-05, 7.769399999999968e-05, 7.781999999999928e-05, 7.784700000000241e-05, 7.784699999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.380" endtime="20201117 14:42:43.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.375" endtime="20201117 14:42:43.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.385" endtime="20201117 14:42:43.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.389" endtime="20201117 14:42:43.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.387" endtime="20201117 14:42:43.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.383" endtime="20201117 14:42:43.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.015" endtime="20201117 14:42:43.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.615" endtime="20201117 14:42:43.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:42.614" endtime="20201117 14:42:43.410"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.413" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.421" endtime="20201117 14:42:43.440"></status>
</kw>
<msg timestamp="20201117 14:42:43.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.420" endtime="20201117 14:42:43.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.442" endtime="20201117 14:42:43.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.444" endtime="20201117 14:42:43.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.417" endtime="20201117 14:42:43.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.415" endtime="20201117 14:42:43.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.454" endtime="20201117 14:42:43.741"></status>
</kw>
<msg timestamp="20201117 14:42:43.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.452" endtime="20201117 14:42:43.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025126944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025205653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.745" endtime="20201117 14:42:43.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.754" endtime="20201117 14:42:43.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.449" endtime="20201117 14:42:43.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.447" endtime="20201117 14:42:43.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:43.761" level="INFO">${RESULT} = [{'time': 0.025205653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.870900000000319e-05, 'source_diff': 7.870900000000319e-05}, {'time': 0.025297667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:43.757" endtime="20201117 14:42:43.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:43.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:43.762" endtime="20201117 14:42:43.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.781" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:43.780" endtime="20201117 14:42:43.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.783" level="INFO">VALUE: [7.870900000000319e-05, 7.901399999999878e-05, 7.95129999999998e-05, 7.899999999999921e-05, 7.949999999999971e-05, 7.902799999999835e-05, 7.901399999999878e-05, 7.951399999999928e-05, 7.949999999999971e-05, 7.951399999999928e-05, 7.948600000000014e-05, 7.951399999999928e-05, 7.883399999999985e-05, 7.884799999999942e-05, 7.926399999999903e-05, 7.866700000000101e-05, 7.918000000000161e-05, 7.918000000000161e-05, 7.884699999999994e-05, 7.880499999999777e-05, 7.902800000000182e-05, 7.884699999999994e-05, 7.882000000000028e-05, 7.91389999999989e-05, 7.918100000000108e-05, 7.918100000000108e-05, 7.865299999999797e-05, 7.883399999999985e-05, 7.89030000000017e-05, 7.897200000000007e-05, 7.912499999999933e-05, 7.883300000000037e-05, 7.884699999999994e-05, 7.886099999999951e-05, 7.899999999999921e-05, 7.891599999999832e-05, 7.901400000000225e-05, 7.949999999999971e-05, 7.884799999999942e-05, 7.948699999999961e-05, 7.901300000000278e-05, 7.866599999999807e-05, 7.884699999999994e-05, 7.866599999999807e-05, 7.886099999999951e-05, 7.950000000000318e-05, 7.951399999999928e-05, 7.936100000000001e-05, 7.932000000000078e-05, 7.949999999999971e-05]</msg>
<status status="PASS" starttime="20201117 14:42:43.782" endtime="20201117 14:42:43.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.777" endtime="20201117 14:42:43.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.787" endtime="20201117 14:42:43.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:43.791" endtime="20201117 14:42:43.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.789" endtime="20201117 14:42:43.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.785" endtime="20201117 14:42:43.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.413" endtime="20201117 14:42:43.811"></status>
</kw>
<msg timestamp="20201117 14:42:43.812" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.820" endtime="20201117 14:42:43.839"></status>
</kw>
<msg timestamp="20201117 14:42:43.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.819" endtime="20201117 14:42:43.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:43.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:43.841" endtime="20201117 14:42:43.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.843" endtime="20201117 14:42:43.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.816" endtime="20201117 14:42:43.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.814" endtime="20201117 14:42:43.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:43.853" endtime="20201117 14:42:44.139"></status>
</kw>
<msg timestamp="20201117 14:42:44.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:43.851" endtime="20201117 14:42:44.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.144" endtime="20201117 14:42:44.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.152" endtime="20201117 14:42:44.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.848" endtime="20201117 14:42:44.154"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.846" endtime="20201117 14:42:44.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.159" level="INFO">${RESULT} = [{'time': 0.022781347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.906900000000106e-05, 'source_diff': 7.906900000000106e-05}, {'time': 0.022872361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.155" endtime="20201117 14:42:44.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:44.160" endtime="20201117 14:42:44.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.177" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.176" endtime="20201117 14:42:44.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.180" level="INFO">VALUE: [7.906900000000106e-05, 7.918000000000161e-05, 7.934700000000044e-05, 7.918099999999761e-05, 7.866699999999754e-05, 7.868100000000058e-05, 7.868100000000058e-05, 7.949999999999971e-05, 7.917999999999814e-05, 7.952799999999885e-05, 7.867999999999764e-05, 7.901399999999878e-05, 7.886099999999951e-05, 7.952800000000232e-05, 7.952799999999885e-05, 7.952799999999885e-05, 7.918100000000108e-05, 7.895899999999997e-05, 7.934799999999992e-05, 7.933399999999688e-05, 7.934799999999992e-05, 7.89030000000017e-05, 7.955600000000146e-05, 7.951399999999928e-05, 7.917999999999814e-05, 7.866700000000101e-05, 7.899999999999921e-05, 7.883300000000037e-05, 7.954200000000189e-05, 7.870899999999972e-05, 7.866700000000101e-05, 7.952799999999885e-05, 7.951399999999928e-05, 7.883399999999985e-05, 7.883300000000037e-05, 7.954200000000189e-05, 7.862499999999883e-05, 7.88190000000008e-05, 7.869400000000068e-05, 7.949999999999971e-05, 7.933300000000088e-05, 7.933400000000035e-05, 7.868099999999711e-05, 7.899999999999921e-05, 7.948600000000014e-05, 7.884699999999994e-05, 7.90129999999993e-05, 7.868000000000111e-05, 7.952799999999885e-05, 7.919399999999771e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.178" endtime="20201117 14:42:44.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.174" endtime="20201117 14:42:44.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.184" endtime="20201117 14:42:44.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.187" endtime="20201117 14:42:44.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.186" endtime="20201117 14:42:44.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.182" endtime="20201117 14:42:44.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.812" endtime="20201117 14:42:44.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.411" endtime="20201117 14:42:44.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:43.410" endtime="20201117 14:42:44.208"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.211" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.220" endtime="20201117 14:42:44.238"></status>
</kw>
<msg timestamp="20201117 14:42:44.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.218" endtime="20201117 14:42:44.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.240" endtime="20201117 14:42:44.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.242" endtime="20201117 14:42:44.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.215" endtime="20201117 14:42:44.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.213" endtime="20201117 14:42:44.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.252" endtime="20201117 14:42:44.539"></status>
</kw>
<msg timestamp="20201117 14:42:44.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.250" endtime="20201117 14:42:44.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025162625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025242486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.543" endtime="20201117 14:42:44.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.552" endtime="20201117 14:42:44.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.248" endtime="20201117 14:42:44.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.246" endtime="20201117 14:42:44.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.558" level="INFO">${RESULT} = [{'time': 0.025242486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986100000000051e-05, 'source_diff': 7.986100000000051e-05}, {'time': 0.0253355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:44.555" endtime="20201117 14:42:44.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:44.560" endtime="20201117 14:42:44.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.577" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.576" endtime="20201117 14:42:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.580" level="INFO">VALUE: [7.986100000000051e-05, 8.034700000000145e-05, 8.004200000000239e-05, 8.033300000000188e-05, 7.968100000000158e-05, 8.036099999999755e-05, 8.015299999999947e-05, 7.968000000000211e-05, 8.016599999999957e-05, 7.998599999999717e-05, 7.998600000000064e-05, 8.000000000000021e-05, 8.056999999999856e-05, 8.001399999999978e-05, 8.016699999999904e-05, 7.983300000000138e-05, 7.962499999999983e-05, 8.055499999999952e-05, 8.033400000000135e-05, 7.988899999999965e-05, 8.034699999999798e-05, 8.034700000000145e-05, 7.98190000000018e-05, 8.015299999999947e-05, 7.988899999999965e-05, 7.984700000000094e-05, 8.000000000000021e-05, 8.018099999999861e-05, 8.032000000000178e-05, 8.051400000000028e-05, 8.016700000000251e-05, 8.031999999999831e-05, 8.019399999999871e-05, 8.017999999999914e-05, 8.034700000000145e-05, 8.037500000000058e-05, 8.049999999999724e-05, 8.002800000000282e-05, 8.018099999999861e-05, 7.984699999999748e-05, 7.966700000000201e-05, 8.002699999999988e-05, 7.983300000000138e-05, 8.019400000000218e-05, 8.034700000000145e-05, 8.016599999999957e-05, 8.050000000000071e-05, 8.050000000000071e-05, 8.001399999999978e-05, 7.984700000000094e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.578" endtime="20201117 14:42:44.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.573" endtime="20201117 14:42:44.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.583" endtime="20201117 14:42:44.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.587" endtime="20201117 14:42:44.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.585" endtime="20201117 14:42:44.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.582" endtime="20201117 14:42:44.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.212" endtime="20201117 14:42:44.608"></status>
</kw>
<msg timestamp="20201117 14:42:44.608" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.617" endtime="20201117 14:42:44.635"></status>
</kw>
<msg timestamp="20201117 14:42:44.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.615" endtime="20201117 14:42:44.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:44.637" endtime="20201117 14:42:44.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.639" endtime="20201117 14:42:44.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.612" endtime="20201117 14:42:44.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.610" endtime="20201117 14:42:44.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.649" endtime="20201117 14:42:44.935"></status>
</kw>
<msg timestamp="20201117 14:42:44.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.647" endtime="20201117 14:42:44.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:44.940" endtime="20201117 14:42:44.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.948" endtime="20201117 14:42:44.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.644" endtime="20201117 14:42:44.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.643" endtime="20201117 14:42:44.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:44.955" level="INFO">${RESULT} = [{'time': 0.022676847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.061100000000126e-05, 'source_diff': 8.061100000000126e-05}, {'time': 0.022768819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:44.952" endtime="20201117 14:42:44.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:44.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:44.956" endtime="20201117 14:42:44.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.974" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:42:44.973" endtime="20201117 14:42:44.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:44.976" level="INFO">VALUE: [8.061100000000126e-05, 8.016599999999957e-05, 7.983300000000138e-05, 7.968000000000211e-05, 8.002799999999935e-05, 8.03190000000023e-05, 8.034699999999798e-05, 7.998600000000064e-05, 7.984700000000094e-05, 7.984800000000042e-05, 8.052700000000038e-05, 8.045900000000147e-05, 7.984700000000094e-05, 8.018000000000261e-05, 8.036100000000101e-05, 8.049999999999724e-05, 7.966599999999907e-05, 8.022299999999732e-05, 8.036100000000101e-05, 7.984700000000094e-05, 7.987500000000008e-05, 7.983400000000085e-05, 8.018099999999861e-05, 7.968099999999811e-05, 8.050000000000071e-05, 7.986100000000051e-05, 8.051400000000028e-05, 8.034700000000145e-05, 7.998600000000064e-05, 8.051400000000028e-05, 7.984699999999748e-05, 8.051400000000028e-05, 8.034699999999798e-05, 8.018100000000208e-05, 7.984800000000042e-05, 7.983399999999738e-05, 8.05130000000008e-05, 7.980500000000224e-05, 8.017999999999914e-05, 8.048599999999767e-05, 8.016599999999957e-05, 8.055599999999899e-05, 8.001399999999978e-05, 8.034700000000145e-05, 8.015299999999947e-05, 7.974999999999996e-05, 8.051400000000028e-05, 7.970799999999778e-05, 7.998700000000011e-05, 8.05130000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:42:44.975" endtime="20201117 14:42:44.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.970" endtime="20201117 14:42:44.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:44.980" endtime="20201117 14:42:44.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:44.983" endtime="20201117 14:42:45.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.982" endtime="20201117 14:42:45.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.978" endtime="20201117 14:42:45.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.609" endtime="20201117 14:42:45.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.210" endtime="20201117 14:42:45.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:44.209" endtime="20201117 14:42:45.005"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.007" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.016" endtime="20201117 14:42:45.035"></status>
</kw>
<msg timestamp="20201117 14:42:45.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.014" endtime="20201117 14:42:45.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.036" endtime="20201117 14:42:45.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.039" endtime="20201117 14:42:45.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.011" endtime="20201117 14:42:45.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.009" endtime="20201117 14:42:45.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.048" endtime="20201117 14:42:45.336"></status>
</kw>
<msg timestamp="20201117 14:42:45.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025196514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.047" endtime="20201117 14:42:45.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025196514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025277569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.341" endtime="20201117 14:42:45.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.349" endtime="20201117 14:42:45.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.044" endtime="20201117 14:42:45.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.042" endtime="20201117 14:42:45.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.357" level="INFO">${RESULT} = [{'time': 0.025277569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105500000000002e-05, 'source_diff': 8.105500000000002e-05}, {'time': 0.025369597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.353" endtime="20201117 14:42:45.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:45.358" endtime="20201117 14:42:45.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.377" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.376" endtime="20201117 14:42:45.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.379" level="INFO">VALUE: [8.105500000000002e-05, 8.151400000000128e-05, 8.148599999999867e-05, 8.083300000000238e-05, 8.119399999999971e-05, 8.101399999999731e-05, 8.152800000000085e-05, 8.149999999999824e-05, 8.101400000000078e-05, 8.066699999999954e-05, 8.136099999999855e-05, 8.136099999999855e-05, 8.150000000000171e-05, 8.072199999999835e-05, 8.066600000000007e-05, 8.067999999999964e-05, 8.101400000000078e-05, 8.068099999999911e-05, 8.066699999999954e-05, 8.099999999999774e-05, 8.118100000000308e-05, 8.133399999999888e-05, 8.134800000000192e-05, 8.084699999999848e-05, 8.136100000000202e-05, 8.101400000000078e-05, 8.13329999999994e-05, 8.150000000000171e-05, 8.149999999999824e-05, 8.134699999999898e-05, 8.068099999999911e-05, 8.066699999999954e-05, 8.118099999999961e-05, 8.134800000000192e-05, 8.151399999999781e-05, 8.099999999999774e-05, 8.115199999999753e-05, 8.106999999999906e-05, 8.1152999999997e-05, 8.115300000000047e-05, 8.151400000000128e-05, 8.134700000000245e-05, 8.084699999999848e-05, 8.101400000000078e-05, 8.140300000000072e-05, 8.066699999999954e-05, 8.148699999999814e-05, 8.065299999999997e-05, 8.134699999999898e-05, 8.066600000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.378" endtime="20201117 14:42:45.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.373" endtime="20201117 14:42:45.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.383" endtime="20201117 14:42:45.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.386" endtime="20201117 14:42:45.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.385" endtime="20201117 14:42:45.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.381" endtime="20201117 14:42:45.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.008" endtime="20201117 14:42:45.407"></status>
</kw>
<msg timestamp="20201117 14:42:45.407" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.416" endtime="20201117 14:42:45.434"></status>
</kw>
<msg timestamp="20201117 14:42:45.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.414" endtime="20201117 14:42:45.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.435" endtime="20201117 14:42:45.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.438" endtime="20201117 14:42:45.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.411" endtime="20201117 14:42:45.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.409" endtime="20201117 14:42:45.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.447" endtime="20201117 14:42:45.735"></status>
</kw>
<msg timestamp="20201117 14:42:45.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.446" endtime="20201117 14:42:45.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022366556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.739" endtime="20201117 14:42:45.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.748" endtime="20201117 14:42:45.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.443" endtime="20201117 14:42:45.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.441" endtime="20201117 14:42:45.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:45.755" level="INFO">${RESULT} = [{'time': 0.022447639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.108299999999916e-05, 'source_diff': 8.108299999999916e-05}, {'time': 0.022538625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:45.752" endtime="20201117 14:42:45.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:45.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:45.756" endtime="20201117 14:42:45.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.773" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:42:45.772" endtime="20201117 14:42:45.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.776" level="INFO">VALUE: [8.108299999999916e-05, 8.149999999999824e-05, 8.084700000000195e-05, 8.134700000000245e-05, 8.068100000000258e-05, 8.149999999999824e-05, 8.10130000000013e-05, 8.084700000000195e-05, 8.118000000000014e-05, 8.14719999999991e-05, 8.131899999999984e-05, 8.136099999999855e-05, 8.104200000000339e-05, 8.134699999999898e-05, 8.101400000000078e-05, 8.120899999999875e-05, 8.068099999999911e-05, 8.065299999999997e-05, 8.134799999999845e-05, 8.10130000000013e-05, 8.084699999999848e-05, 8.066600000000007e-05, 8.134700000000245e-05, 8.101400000000078e-05, 8.081899999999934e-05, 8.066699999999954e-05, 8.083300000000238e-05, 8.119500000000265e-05, 8.144499999999943e-05, 8.149999999999824e-05, 8.15269999999979e-05, 8.137500000000158e-05, 8.067999999999964e-05, 8.100000000000121e-05, 8.080499999999977e-05, 8.101400000000078e-05, 8.081899999999934e-05, 8.136099999999855e-05, 8.084699999999848e-05, 8.118099999999961e-05, 8.083399999999838e-05, 8.087500000000108e-05, 8.101400000000078e-05, 8.099999999999774e-05, 8.131899999999984e-05, 8.13329999999994e-05, 8.086100000000151e-05, 8.152800000000085e-05, 8.116700000000004e-05, 8.08329999999989e-05]</msg>
<status status="PASS" starttime="20201117 14:42:45.775" endtime="20201117 14:42:45.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.770" endtime="20201117 14:42:45.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.779" endtime="20201117 14:42:45.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:45.783" endtime="20201117 14:42:45.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.781" endtime="20201117 14:42:45.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.778" endtime="20201117 14:42:45.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.408" endtime="20201117 14:42:45.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.006" endtime="20201117 14:42:45.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.005" endtime="20201117 14:42:45.804"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.806" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.815" endtime="20201117 14:42:45.834"></status>
</kw>
<msg timestamp="20201117 14:42:45.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.814" endtime="20201117 14:42:45.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:45.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:45.836" endtime="20201117 14:42:45.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.838" endtime="20201117 14:42:45.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.811" endtime="20201117 14:42:45.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.809" endtime="20201117 14:42:45.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:45.848" endtime="20201117 14:42:46.134"></status>
</kw>
<msg timestamp="20201117 14:42:46.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025036542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:45.846" endtime="20201117 14:42:46.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024953986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025036542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.139" endtime="20201117 14:42:46.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.147" endtime="20201117 14:42:46.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.843" endtime="20201117 14:42:46.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.842" endtime="20201117 14:42:46.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.154" level="INFO">${RESULT} = [{'time': 0.025036542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.255599999999752e-05, 'source_diff': 8.255599999999752e-05}, {'time': 0.025128556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.151" endtime="20201117 14:42:46.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.168" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:46.155" endtime="20201117 14:42:46.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.173" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.172" endtime="20201117 14:42:46.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.175" level="INFO">VALUE: [8.255599999999752e-05, 8.183399999999938e-05, 8.16520000000015e-05, 8.181900000000034e-05, 8.184699999999948e-05, 8.173599999999892e-05, 8.252800000000185e-05, 8.218100000000061e-05, 8.209699999999973e-05, 8.168100000000011e-05, 8.250000000000271e-05, 8.168100000000011e-05, 8.168100000000011e-05, 8.251399999999881e-05, 8.216600000000157e-05, 8.169400000000021e-05, 8.23330000000004e-05, 8.250000000000271e-05, 8.218000000000114e-05, 8.224999999999899e-05, 8.233299999999694e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.168100000000011e-05, 8.234799999999945e-05, 8.16529999999975e-05, 8.236099999999955e-05, 8.234699999999998e-05, 8.201399999999831e-05, 8.216600000000157e-05, 8.23330000000004e-05, 8.16529999999975e-05, 8.234699999999998e-05, 8.215300000000147e-05, 8.232000000000031e-05, 8.255499999999805e-05, 8.186099999999905e-05, 8.252699999999891e-05, 8.216600000000157e-05, 8.168000000000064e-05, 8.186099999999905e-05, 8.233299999999694e-05, 8.216700000000104e-05, 8.202800000000135e-05, 8.216700000000104e-05, 8.202799999999788e-05, 8.234799999999945e-05, 8.202700000000188e-05, 8.232000000000031e-05, 8.201399999999831e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.174" endtime="20201117 14:42:46.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.169" endtime="20201117 14:42:46.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.179" endtime="20201117 14:42:46.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.182" endtime="20201117 14:42:46.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.181" endtime="20201117 14:42:46.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.177" endtime="20201117 14:42:46.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.807" endtime="20201117 14:42:46.203"></status>
</kw>
<msg timestamp="20201117 14:42:46.203" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.212" endtime="20201117 14:42:46.230"></status>
</kw>
<msg timestamp="20201117 14:42:46.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.210" endtime="20201117 14:42:46.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.232" endtime="20201117 14:42:46.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.239" endtime="20201117 14:42:46.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.207" endtime="20201117 14:42:46.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.205" endtime="20201117 14:42:46.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.248" endtime="20201117 14:42:46.536"></status>
</kw>
<msg timestamp="20201117 14:42:46.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.247" endtime="20201117 14:42:46.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.540" endtime="20201117 14:42:46.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.549" endtime="20201117 14:42:46.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.244" endtime="20201117 14:42:46.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.242" endtime="20201117 14:42:46.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.556" level="INFO">${RESULT} = [{'time': 0.022895278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.173600000000239e-05, 'source_diff': 8.173600000000239e-05}, {'time': 0.022983264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.553" endtime="20201117 14:42:46.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:46.557" endtime="20201117 14:42:46.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.574" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.573" endtime="20201117 14:42:46.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.577" level="INFO">VALUE: [8.173600000000239e-05, 8.23330000000004e-05, 8.220800000000028e-05, 8.201400000000178e-05, 8.162499999999837e-05, 8.251299999999934e-05, 8.168000000000064e-05, 8.200000000000221e-05, 8.184699999999948e-05, 8.233399999999988e-05, 8.23330000000004e-05, 8.230600000000074e-05, 8.186099999999905e-05, 8.252799999999838e-05, 8.166700000000054e-05, 8.184799999999895e-05, 8.254100000000195e-05, 8.219400000000071e-05, 8.209699999999973e-05, 8.186099999999905e-05, 8.254200000000142e-05, 8.193000000000089e-05, 8.216700000000104e-05, 8.216700000000104e-05, 8.216700000000104e-05, 8.236099999999955e-05, 8.166699999999708e-05, 8.249999999999924e-05, 8.24170000000013e-05, 8.219400000000071e-05, 8.233299999999694e-05, 8.249999999999924e-05, 8.234699999999998e-05, 8.184699999999948e-05, 8.184699999999948e-05, 8.18329999999999e-05, 8.251399999999881e-05, 8.168100000000011e-05, 8.234799999999945e-05, 8.234799999999945e-05, 8.219400000000071e-05, 8.219400000000071e-05, 8.186099999999905e-05, 8.16659999999976e-05, 8.166700000000054e-05, 8.168100000000011e-05, 8.222199999999985e-05, 8.231900000000084e-05, 8.23330000000004e-05, 8.183399999999938e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.576" endtime="20201117 14:42:46.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.571" endtime="20201117 14:42:46.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.580" endtime="20201117 14:42:46.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.584" endtime="20201117 14:42:46.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.582" endtime="20201117 14:42:46.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.579" endtime="20201117 14:42:46.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.204" endtime="20201117 14:42:46.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.805" endtime="20201117 14:42:46.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:45.804" endtime="20201117 14:42:46.605"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.608" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.617" endtime="20201117 14:42:46.637"></status>
</kw>
<msg timestamp="20201117 14:42:46.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.615" endtime="20201117 14:42:46.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:46.639" endtime="20201117 14:42:46.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.641" endtime="20201117 14:42:46.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.612" endtime="20201117 14:42:46.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.610" endtime="20201117 14:42:46.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.651" endtime="20201117 14:42:46.938"></status>
</kw>
<msg timestamp="20201117 14:42:46.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025667542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.649" endtime="20201117 14:42:46.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025667542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:46.942" endtime="20201117 14:42:46.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.951" endtime="20201117 14:42:46.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.647" endtime="20201117 14:42:46.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.645" endtime="20201117 14:42:46.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:46.957" level="INFO">${RESULT} = [{'time': 0.025667542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.358400000000113e-05, 'source_diff': 8.358400000000113e-05}, {'time': 0.025762542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:46.954" endtime="20201117 14:42:46.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:46.973" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:46.958" endtime="20201117 14:42:46.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.977" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:46.976" endtime="20201117 14:42:46.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:46.980" level="INFO">VALUE: [8.358400000000113e-05, 8.284799999999995e-05, 8.322199999999738e-05, 8.318100000000161e-05, 8.336100000000055e-05, 8.318000000000214e-05, 8.268000000000164e-05, 8.267999999999817e-05, 8.351399999999981e-05, 8.299999999999974e-05, 8.266699999999808e-05, 8.266699999999808e-05, 8.268099999999765e-05, 8.269499999999722e-05, 8.299999999999974e-05, 8.319399999999824e-05, 8.302699999999941e-05, 8.31110000000003e-05, 8.269400000000121e-05, 8.283299999999744e-05, 8.350000000000024e-05, 8.290299999999876e-05, 8.318100000000161e-05, 8.350000000000024e-05, 8.269500000000068e-05, 8.302699999999941e-05, 8.283400000000038e-05, 8.318000000000214e-05, 8.31659999999991e-05, 8.317999999999867e-05, 8.276400000000253e-05, 8.33469999999975e-05, 8.349999999999677e-05, 8.352799999999938e-05, 8.349999999999677e-05, 8.305499999999855e-05, 8.34720000000011e-05, 8.268100000000111e-05, 8.352699999999991e-05, 8.284700000000048e-05, 8.345800000000153e-05, 8.284700000000048e-05, 8.351399999999981e-05, 8.337500000000012e-05, 8.291699999999833e-05, 8.266699999999808e-05, 8.29309999999979e-05, 8.272200000000035e-05, 8.299999999999974e-05, 8.284799999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:42:46.979" endtime="20201117 14:42:46.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.974" endtime="20201117 14:42:46.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:46.983" endtime="20201117 14:42:46.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:46.987" endtime="20201117 14:42:47.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.985" endtime="20201117 14:42:47.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.982" endtime="20201117 14:42:47.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.608" endtime="20201117 14:42:47.008"></status>
</kw>
<msg timestamp="20201117 14:42:47.008" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.017" endtime="20201117 14:42:47.036"></status>
</kw>
<msg timestamp="20201117 14:42:47.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.015" endtime="20201117 14:42:47.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.037" endtime="20201117 14:42:47.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.040" endtime="20201117 14:42:47.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.013" endtime="20201117 14:42:47.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.010" endtime="20201117 14:42:47.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.049" endtime="20201117 14:42:47.336"></status>
</kw>
<msg timestamp="20201117 14:42:47.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.048" endtime="20201117 14:42:47.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022844222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.340" endtime="20201117 14:42:47.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.349" endtime="20201117 14:42:47.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.045" endtime="20201117 14:42:47.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.043" endtime="20201117 14:42:47.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.356" level="INFO">${RESULT} = [{'time': 0.022926917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.269500000000068e-05, 'source_diff': 8.269500000000068e-05}, {'time': 0.023020917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.353" endtime="20201117 14:42:47.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:47.357" endtime="20201117 14:42:47.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.374" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.373" endtime="20201117 14:42:47.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.377" level="INFO">VALUE: [8.269500000000068e-05, 8.34729999999971e-05, 8.350000000000024e-05, 8.33330000000014e-05, 8.263799999999946e-05, 8.351399999999981e-05, 8.284700000000048e-05, 8.334700000000098e-05, 8.318100000000161e-05, 8.33469999999975e-05, 8.286100000000005e-05, 8.268099999999765e-05, 8.351399999999981e-05, 8.330599999999827e-05, 8.338899999999969e-05, 8.334700000000098e-05, 8.301399999999931e-05, 8.351399999999981e-05, 8.298600000000017e-05, 8.33469999999975e-05, 8.351400000000328e-05, 8.284700000000048e-05, 8.266700000000154e-05, 8.301399999999931e-05, 8.301399999999931e-05, 8.351399999999981e-05, 8.267999999999817e-05, 8.350000000000024e-05, 8.305600000000149e-05, 8.334700000000098e-05, 8.340299999999926e-05, 8.28330000000009e-05, 8.319500000000118e-05, 8.284700000000048e-05, 8.351400000000328e-05, 8.316699999999858e-05, 8.331999999999784e-05, 8.286100000000005e-05, 8.31659999999991e-05, 8.31659999999991e-05, 8.263899999999894e-05, 8.267999999999817e-05, 8.297199999999713e-05, 8.284700000000048e-05, 8.336100000000055e-05, 8.336100000000055e-05, 8.299999999999974e-05, 8.3459000000001e-05, 8.316700000000204e-05, 8.25979999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.375" endtime="20201117 14:42:47.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.371" endtime="20201117 14:42:47.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.381" endtime="20201117 14:42:47.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.384" endtime="20201117 14:42:47.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.383" endtime="20201117 14:42:47.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.378" endtime="20201117 14:42:47.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.009" endtime="20201117 14:42:47.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.606" endtime="20201117 14:42:47.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:46.605" endtime="20201117 14:42:47.405"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.408" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.417" endtime="20201117 14:42:47.436"></status>
</kw>
<msg timestamp="20201117 14:42:47.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.415" endtime="20201117 14:42:47.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.437" endtime="20201117 14:42:47.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.440" endtime="20201117 14:42:47.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.412" endtime="20201117 14:42:47.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.410" endtime="20201117 14:42:47.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.449" endtime="20201117 14:42:47.736"></status>
</kw>
<msg timestamp="20201117 14:42:47.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025556042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.448" endtime="20201117 14:42:47.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025556042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.741" endtime="20201117 14:42:47.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.749" endtime="20201117 14:42:47.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.445" endtime="20201117 14:42:47.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.443" endtime="20201117 14:42:47.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:47.756" level="INFO">${RESULT} = [{'time': 0.025556042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.373600000000092e-05, 'source_diff': 8.373600000000092e-05}, {'time': 0.025648056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:47.753" endtime="20201117 14:42:47.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:47.770" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:47.757" endtime="20201117 14:42:47.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.775" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:47.773" endtime="20201117 14:42:47.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.777" level="INFO">VALUE: [8.373600000000092e-05, 8.433399999999841e-05, 8.419400000000271e-05, 8.3846999999998e-05, 8.36659999999996e-05, 8.386100000000105e-05, 8.386100000000105e-05, 8.450000000000124e-05, 8.416700000000304e-05, 8.418099999999915e-05, 8.384700000000148e-05, 8.368099999999865e-05, 8.390200000000028e-05, 8.418099999999915e-05, 8.3846999999998e-05, 8.41660000000001e-05, 8.398600000000117e-05, 8.401400000000031e-05, 8.402799999999988e-05, 8.427799999999666e-05, 8.416699999999958e-05, 8.383299999999844e-05, 8.450000000000124e-05, 8.369399999999874e-05, 8.387499999999715e-05, 8.367999999999917e-05, 8.434700000000198e-05, 8.3846999999998e-05, 8.386100000000105e-05, 8.451400000000081e-05, 8.451400000000081e-05, 8.436100000000155e-05, 8.423599999999795e-05, 8.366699999999908e-05, 8.383400000000138e-05, 8.387500000000062e-05, 8.369399999999874e-05, 8.452700000000091e-05, 8.41110000000013e-05, 8.450000000000124e-05, 8.367999999999917e-05, 8.38330000000019e-05, 8.43330000000024e-05, 8.383299999999844e-05, 8.384700000000148e-05, 8.413900000000044e-05, 8.383400000000138e-05, 8.366699999999908e-05, 8.370799999999831e-05, 8.433299999999894e-05]</msg>
<status status="PASS" starttime="20201117 14:42:47.776" endtime="20201117 14:42:47.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.771" endtime="20201117 14:42:47.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.781" endtime="20201117 14:42:47.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:47.785" endtime="20201117 14:42:47.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.783" endtime="20201117 14:42:47.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.779" endtime="20201117 14:42:47.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.409" endtime="20201117 14:42:47.806"></status>
</kw>
<msg timestamp="20201117 14:42:47.806" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.815" endtime="20201117 14:42:47.833"></status>
</kw>
<msg timestamp="20201117 14:42:47.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.813" endtime="20201117 14:42:47.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:47.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:47.835" endtime="20201117 14:42:47.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.838" endtime="20201117 14:42:47.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.810" endtime="20201117 14:42:47.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.808" endtime="20201117 14:42:47.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:47.847" endtime="20201117 14:42:48.135"></status>
</kw>
<msg timestamp="20201117 14:42:48.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:47.846" endtime="20201117 14:42:48.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.140" endtime="20201117 14:42:48.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.148" endtime="20201117 14:42:48.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.843" endtime="20201117 14:42:48.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.841" endtime="20201117 14:42:48.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.155" level="INFO">${RESULT} = [{'time': 0.022705736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.456899999999962e-05, 'source_diff': 8.456899999999962e-05}, {'time': 0.022797736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.152" endtime="20201117 14:42:48.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:48.156" endtime="20201117 14:42:48.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.174" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.173" endtime="20201117 14:42:48.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.176" level="INFO">VALUE: [8.456899999999962e-05, 8.413900000000044e-05, 8.433299999999894e-05, 8.423599999999795e-05, 8.419500000000218e-05, 8.404099999999998e-05, 8.448700000000114e-05, 8.418099999999915e-05, 8.43330000000024e-05, 8.402799999999988e-05, 8.38330000000019e-05, 8.433299999999894e-05, 8.451399999999734e-05, 8.390299999999976e-05, 8.449999999999777e-05, 8.450000000000124e-05, 8.43469999999985e-05, 8.387499999999715e-05, 8.368099999999865e-05, 8.399999999999727e-05, 8.401400000000031e-05, 8.449999999999777e-05, 8.456999999999909e-05, 8.412500000000087e-05, 8.416699999999958e-05, 8.401400000000031e-05, 8.418100000000261e-05, 8.38330000000019e-05, 8.433399999999841e-05, 8.386199999999705e-05, 8.386100000000105e-05, 8.417999999999967e-05, 8.450000000000124e-05, 8.39859999999977e-05, 8.367999999999917e-05, 8.401400000000031e-05, 8.362500000000037e-05, 8.3846999999998e-05, 8.41110000000013e-05, 8.416699999999958e-05, 8.452800000000038e-05, 8.452700000000091e-05, 8.449999999999777e-05, 8.401300000000084e-05, 8.43469999999985e-05, 8.44859999999982e-05, 8.431899999999937e-05, 8.386100000000105e-05, 8.420899999999829e-05, 8.434700000000198e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.175" endtime="20201117 14:42:48.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.170" endtime="20201117 14:42:48.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.180" endtime="20201117 14:42:48.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.184" endtime="20201117 14:42:48.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.182" endtime="20201117 14:42:48.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.179" endtime="20201117 14:42:48.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.807" endtime="20201117 14:42:48.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.407" endtime="20201117 14:42:48.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:47.406" endtime="20201117 14:42:48.205"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.208" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.216" endtime="20201117 14:42:48.235"></status>
</kw>
<msg timestamp="20201117 14:42:48.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.215" endtime="20201117 14:42:48.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.237" endtime="20201117 14:42:48.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.240" endtime="20201117 14:42:48.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.212" endtime="20201117 14:42:48.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.210" endtime="20201117 14:42:48.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.250" endtime="20201117 14:42:48.537"></status>
</kw>
<msg timestamp="20201117 14:42:48.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.248" endtime="20201117 14:42:48.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025515681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.541" endtime="20201117 14:42:48.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.549" endtime="20201117 14:42:48.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.245" endtime="20201117 14:42:48.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.243" endtime="20201117 14:42:48.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.556" level="INFO">${RESULT} = [{'time': 0.025600347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.46660000000006e-05, 'source_diff': 8.46660000000006e-05}, {'time': 0.025690361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:48.553" endtime="20201117 14:42:48.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:48.558" endtime="20201117 14:42:48.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.577" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.576" endtime="20201117 14:42:48.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.580" level="INFO">VALUE: [8.46660000000006e-05, 8.51799999999972e-05, 8.533299999999994e-05, 8.549999999999877e-05, 8.501400000000131e-05, 8.533399999999941e-05, 8.513899999999797e-05, 8.483399999999891e-05, 8.518100000000015e-05, 8.518000000000067e-05, 8.538900000000169e-05, 8.519400000000024e-05, 8.549999999999877e-05, 8.518100000000015e-05, 8.551400000000181e-05, 8.527800000000113e-05, 8.483299999999944e-05, 8.466700000000008e-05, 8.551400000000181e-05, 8.551400000000181e-05, 8.466700000000008e-05, 8.551399999999834e-05, 8.519400000000024e-05, 8.483299999999944e-05, 8.53469999999995e-05, 8.533299999999994e-05, 8.516700000000058e-05, 8.481999999999934e-05, 8.468099999999965e-05, 8.536200000000202e-05, 8.498600000000217e-05, 8.468099999999965e-05, 8.53469999999995e-05, 8.465200000000103e-05, 8.544399999999702e-05, 8.557000000000009e-05, 8.551400000000181e-05, 8.551399999999834e-05, 8.533299999999994e-05, 8.47920000000002e-05, 8.523599999999895e-05, 8.486099999999858e-05, 8.540300000000126e-05, 8.500000000000174e-05, 8.552699999999844e-05, 8.502800000000088e-05, 8.468000000000017e-05, 8.547199999999963e-05, 8.533299999999994e-05, 8.484700000000248e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.578" endtime="20201117 14:42:48.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.573" endtime="20201117 14:42:48.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.583" endtime="20201117 14:42:48.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.587" endtime="20201117 14:42:48.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.585" endtime="20201117 14:42:48.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.582" endtime="20201117 14:42:48.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.208" endtime="20201117 14:42:48.608"></status>
</kw>
<msg timestamp="20201117 14:42:48.608" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.617" endtime="20201117 14:42:48.635"></status>
</kw>
<msg timestamp="20201117 14:42:48.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.615" endtime="20201117 14:42:48.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:48.637" endtime="20201117 14:42:48.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.639" endtime="20201117 14:42:48.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.613" endtime="20201117 14:42:48.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.610" endtime="20201117 14:42:48.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.649" endtime="20201117 14:42:48.936"></status>
</kw>
<msg timestamp="20201117 14:42:48.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.647" endtime="20201117 14:42:48.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:48.941" endtime="20201117 14:42:48.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.949" endtime="20201117 14:42:48.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.644" endtime="20201117 14:42:48.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.642" endtime="20201117 14:42:48.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:48.956" level="INFO">${RESULT} = [{'time': 0.022577139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.473599999999845e-05, 'source_diff': 8.473599999999845e-05}, {'time': 0.022667153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:48.953" endtime="20201117 14:42:48.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:48.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:48.957" endtime="20201117 14:42:48.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.975" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:42:48.974" endtime="20201117 14:42:48.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:48.977" level="INFO">VALUE: [8.473599999999845e-05, 8.551399999999834e-05, 8.534800000000245e-05, 8.551399999999834e-05, 8.483299999999944e-05, 8.515200000000153e-05, 8.486099999999858e-05, 8.46660000000006e-05, 8.549999999999877e-05, 8.486100000000205e-05, 8.480599999999977e-05, 8.486099999999858e-05, 8.501399999999784e-05, 8.550000000000224e-05, 8.466700000000008e-05, 8.505499999999708e-05, 8.499999999999827e-05, 8.552799999999791e-05, 8.533299999999994e-05, 8.520799999999981e-05, 8.551400000000181e-05, 8.499999999999827e-05, 8.481899999999987e-05, 8.481999999999934e-05, 8.53469999999995e-05, 8.533400000000288e-05, 8.481999999999934e-05, 8.536100000000255e-05, 8.501400000000131e-05, 8.486100000000205e-05, 8.483299999999944e-05, 8.53469999999995e-05, 8.499999999999827e-05, 8.53469999999995e-05, 8.518100000000015e-05, 8.54859999999992e-05, 8.483399999999891e-05, 8.466700000000008e-05, 8.501400000000131e-05, 8.536099999999908e-05, 8.500000000000174e-05, 8.46660000000006e-05, 8.468000000000017e-05, 8.484700000000248e-05, 8.468099999999965e-05, 8.533299999999994e-05, 8.470799999999931e-05, 8.520799999999981e-05, 8.469399999999974e-05, 8.536099999999908e-05]</msg>
<status status="PASS" starttime="20201117 14:42:48.976" endtime="20201117 14:42:48.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.971" endtime="20201117 14:42:48.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:48.981" endtime="20201117 14:42:48.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:48.984" endtime="20201117 14:42:49.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.983" endtime="20201117 14:42:49.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.979" endtime="20201117 14:42:49.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.609" endtime="20201117 14:42:49.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.206" endtime="20201117 14:42:49.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:48.206" endtime="20201117 14:42:49.006"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.008" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.017" endtime="20201117 14:42:49.036"></status>
</kw>
<msg timestamp="20201117 14:42:49.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.015" endtime="20201117 14:42:49.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.038" endtime="20201117 14:42:49.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.040" endtime="20201117 14:42:49.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.012" endtime="20201117 14:42:49.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.010" endtime="20201117 14:42:49.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.050" endtime="20201117 14:42:49.337"></status>
</kw>
<msg timestamp="20201117 14:42:49.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025268431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.048" endtime="20201117 14:42:49.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025182361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025268431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.341" endtime="20201117 14:42:49.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.350" endtime="20201117 14:42:49.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.045" endtime="20201117 14:42:49.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.043" endtime="20201117 14:42:49.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.357" level="INFO">${RESULT} = [{'time': 0.025268431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.607000000000059e-05, 'source_diff': 8.607000000000059e-05}, {'time': 0.025367458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.353" endtime="20201117 14:42:49.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.371" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:49.358" endtime="20201117 14:42:49.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.375" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.374" endtime="20201117 14:42:49.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.378" level="INFO">VALUE: [8.607000000000059e-05, 8.636100000000008e-05, 8.568000000000117e-05, 8.601399999999884e-05, 8.63470000000005e-05, 8.619400000000124e-05, 8.63470000000005e-05, 8.583300000000044e-05, 8.632000000000084e-05, 8.569500000000022e-05, 8.652799999999891e-05, 8.634799999999998e-05, 8.59310000000009e-05, 8.615200000000253e-05, 8.651399999999934e-05, 8.568000000000117e-05, 8.61799999999982e-05, 8.64860000000002e-05, 8.618100000000115e-05, 8.601399999999884e-05, 8.620900000000029e-05, 8.651400000000281e-05, 8.599999999999927e-05, 8.654099999999901e-05, 8.61799999999982e-05, 8.615199999999906e-05, 8.56660000000016e-05, 8.561099999999933e-05, 8.636100000000008e-05, 8.652799999999891e-05, 8.619499999999725e-05, 8.582000000000034e-05, 8.649999999999977e-05, 8.584799999999948e-05, 8.570799999999684e-05, 8.5847e-05, 8.64860000000002e-05, 8.638899999999922e-05, 8.652799999999891e-05, 8.618000000000167e-05, 8.61669999999981e-05, 8.649999999999977e-05, 8.658300000000119e-05, 8.569500000000022e-05, 8.649999999999977e-05, 8.620800000000081e-05, 8.566700000000108e-05, 8.601399999999884e-05, 8.649999999999977e-05, 8.602799999999841e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.377" endtime="20201117 14:42:49.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.372" endtime="20201117 14:42:49.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.381" endtime="20201117 14:42:49.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.385" endtime="20201117 14:42:49.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.383" endtime="20201117 14:42:49.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.380" endtime="20201117 14:42:49.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.009" endtime="20201117 14:42:49.406"></status>
</kw>
<msg timestamp="20201117 14:42:49.406" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.415" endtime="20201117 14:42:49.433"></status>
</kw>
<msg timestamp="20201117 14:42:49.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.413" endtime="20201117 14:42:49.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.435" endtime="20201117 14:42:49.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.438" endtime="20201117 14:42:49.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.410" endtime="20201117 14:42:49.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.408" endtime="20201117 14:42:49.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.447" endtime="20201117 14:42:49.735"></status>
</kw>
<msg timestamp="20201117 14:42:49.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.445" endtime="20201117 14:42:49.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.739" endtime="20201117 14:42:49.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.748" endtime="20201117 14:42:49.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.443" endtime="20201117 14:42:49.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.441" endtime="20201117 14:42:49.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:49.755" level="INFO">${RESULT} = [{'time': 0.022592278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.607000000000059e-05, 'source_diff': 8.607000000000059e-05}, {'time': 0.022683292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:49.751" endtime="20201117 14:42:49.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:49.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:49.756" endtime="20201117 14:42:49.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.773" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:42:49.772" endtime="20201117 14:42:49.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.776" level="INFO">VALUE: [8.607000000000059e-05, 8.584799999999948e-05, 8.633400000000041e-05, 8.634799999999998e-05, 8.633299999999747e-05, 8.565200000000203e-05, 8.601399999999884e-05, 8.651399999999934e-05, 8.649999999999977e-05, 8.586099999999958e-05, 8.566700000000108e-05, 8.62920000000017e-05, 8.633400000000041e-05, 8.595900000000004e-05, 8.652699999999944e-05, 8.600000000000274e-05, 8.600000000000274e-05, 8.568000000000117e-05, 8.651399999999934e-05, 8.636100000000008e-05, 8.61669999999981e-05, 8.600000000000274e-05, 8.61669999999981e-05, 8.582000000000034e-05, 8.633400000000041e-05, 8.599999999999927e-05, 8.566700000000108e-05, 8.570800000000031e-05, 8.659800000000023e-05, 8.652799999999891e-05, 8.583300000000044e-05, 8.63470000000005e-05, 8.59859999999997e-05, 8.5847e-05, 8.64860000000002e-05, 8.601399999999884e-05, 8.59859999999997e-05, 8.649999999999977e-05, 8.633299999999747e-05, 8.633299999999747e-05, 8.601400000000231e-05, 8.636100000000008e-05, 8.604199999999798e-05, 8.63470000000005e-05, 8.5847e-05, 8.6153000000002e-05, 8.633400000000041e-05, 8.618099999999768e-05, 8.633400000000041e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201117 14:42:49.774" endtime="20201117 14:42:49.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.770" endtime="20201117 14:42:49.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.779" endtime="20201117 14:42:49.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:49.783" endtime="20201117 14:42:49.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.781" endtime="20201117 14:42:49.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.777" endtime="20201117 14:42:49.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.407" endtime="20201117 14:42:49.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.007" endtime="20201117 14:42:49.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.006" endtime="20201117 14:42:49.804"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.806" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.815" endtime="20201117 14:42:49.834"></status>
</kw>
<msg timestamp="20201117 14:42:49.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.813" endtime="20201117 14:42:49.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:49.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:49.836" endtime="20201117 14:42:49.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.839" endtime="20201117 14:42:49.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.811" endtime="20201117 14:42:49.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.809" endtime="20201117 14:42:49.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:49.849" endtime="20201117 14:42:50.135"></status>
</kw>
<msg timestamp="20201117 14:42:50.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025612028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:49.847" endtime="20201117 14:42:50.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025524806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025612028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.140" endtime="20201117 14:42:50.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.148" endtime="20201117 14:42:50.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.844" endtime="20201117 14:42:50.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.842" endtime="20201117 14:42:50.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.155" level="INFO">${RESULT} = [{'time': 0.025612028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722199999999791e-05, 'source_diff': 8.722199999999791e-05}, {'time': 0.025707056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.152" endtime="20201117 14:42:50.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.170" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:50.156" endtime="20201117 14:42:50.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.175" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.174" endtime="20201117 14:42:50.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.177" level="INFO">VALUE: [8.722199999999791e-05, 8.734799999999751e-05, 8.751400000000034e-05, 8.686099999999711e-05, 8.686099999999711e-05, 8.726400000000009e-05, 8.733299999999847e-05, 8.73059999999988e-05, 8.73189999999989e-05, 8.66249999999999e-05, 8.669500000000122e-05, 8.697199999999766e-05, 8.669500000000122e-05, 8.688899999999972e-05, 8.668000000000217e-05, 8.69860000000007e-05, 8.751399999999687e-05, 8.734699999999804e-05, 8.74860000000012e-05, 8.668099999999818e-05, 8.750000000000077e-05, 8.733299999999847e-05, 8.702799999999941e-05, 8.736200000000055e-05, 8.669400000000174e-05, 8.71669999999991e-05, 8.733299999999847e-05, 8.74999999999973e-05, 8.71799999999992e-05, 8.6847000000001e-05, 8.715299999999954e-05, 8.665299999999904e-05, 8.687500000000015e-05, 8.751399999999687e-05, 8.732000000000184e-05, 8.74860000000012e-05, 8.751399999999687e-05, 8.71799999999992e-05, 8.66799999999987e-05, 8.684699999999754e-05, 8.684699999999754e-05, 8.665299999999904e-05, 8.688899999999972e-05, 8.718099999999868e-05, 8.751400000000034e-05, 8.718100000000215e-05, 8.734800000000098e-05, 8.751399999999687e-05, 8.73470000000015e-05, 8.738900000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.176" endtime="20201117 14:42:50.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.171" endtime="20201117 14:42:50.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.181" endtime="20201117 14:42:50.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.184" endtime="20201117 14:42:50.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.183" endtime="20201117 14:42:50.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.179" endtime="20201117 14:42:50.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.807" endtime="20201117 14:42:50.205"></status>
</kw>
<msg timestamp="20201117 14:42:50.205" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.214" endtime="20201117 14:42:50.233"></status>
</kw>
<msg timestamp="20201117 14:42:50.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.212" endtime="20201117 14:42:50.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.235" endtime="20201117 14:42:50.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.237" endtime="20201117 14:42:50.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.210" endtime="20201117 14:42:50.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.207" endtime="20201117 14:42:50.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.247" endtime="20201117 14:42:50.534"></status>
</kw>
<msg timestamp="20201117 14:42:50.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.246" endtime="20201117 14:42:50.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022412931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.538" endtime="20201117 14:42:50.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.547" endtime="20201117 14:42:50.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.243" endtime="20201117 14:42:50.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.241" endtime="20201117 14:42:50.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.554" level="INFO">${RESULT} = [{'time': 0.022499819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.688800000000024e-05, 'source_diff': 8.688800000000024e-05}, {'time': 0.022598847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.550" endtime="20201117 14:42:50.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:50.555" endtime="20201117 14:42:50.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.572" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.571" endtime="20201117 14:42:50.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.575" level="INFO">VALUE: [8.688800000000024e-05, 8.702799999999941e-05, 8.718000000000267e-05, 8.747199999999816e-05, 8.686100000000058e-05, 8.716700000000258e-05, 8.752799999999991e-05, 8.751399999999687e-05, 8.71669999999991e-05, 8.751400000000034e-05, 8.751399999999687e-05, 8.713800000000049e-05, 8.73470000000015e-05, 8.716599999999963e-05, 8.733300000000194e-05, 8.700000000000027e-05, 8.701399999999984e-05, 8.716700000000258e-05, 8.701399999999984e-05, 8.701399999999984e-05, 8.732000000000184e-05, 8.686100000000058e-05, 8.751300000000087e-05, 8.69999999999968e-05, 8.700000000000027e-05, 8.733300000000194e-05, 8.722200000000138e-05, 8.701399999999984e-05, 8.751400000000034e-05, 8.69999999999968e-05, 8.748599999999773e-05, 8.736200000000055e-05, 8.66669999999986e-05, 8.751300000000087e-05, 8.73470000000015e-05, 8.716599999999963e-05, 8.73470000000015e-05, 8.668099999999818e-05, 8.738900000000022e-05, 8.709700000000126e-05, 8.702799999999941e-05, 8.668099999999818e-05, 8.718099999999868e-05, 8.700000000000027e-05, 8.681999999999787e-05, 8.71799999999992e-05, 8.71799999999992e-05, 8.676399999999959e-05, 8.701399999999984e-05, 8.751399999999687e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.573" endtime="20201117 14:42:50.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.568" endtime="20201117 14:42:50.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.578" endtime="20201117 14:42:50.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.581" endtime="20201117 14:42:50.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.580" endtime="20201117 14:42:50.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.576" endtime="20201117 14:42:50.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.206" endtime="20201117 14:42:50.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.805" endtime="20201117 14:42:50.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:49.804" endtime="20201117 14:42:50.603"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.605" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.614" endtime="20201117 14:42:50.634"></status>
</kw>
<msg timestamp="20201117 14:42:50.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.612" endtime="20201117 14:42:50.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:50.636" endtime="20201117 14:42:50.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.639" endtime="20201117 14:42:50.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.610" endtime="20201117 14:42:50.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.607" endtime="20201117 14:42:50.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.648" endtime="20201117 14:42:50.935"></status>
</kw>
<msg timestamp="20201117 14:42:50.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026047194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.646" endtime="20201117 14:42:50.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026047194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026135097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:50.940" endtime="20201117 14:42:50.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.948" endtime="20201117 14:42:50.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.644" endtime="20201117 14:42:50.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.642" endtime="20201117 14:42:50.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:50.955" level="INFO">${RESULT} = [{'time': 0.026135097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.790300000000029e-05, 'source_diff': 8.790300000000029e-05}, {'time': 0.026233125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:50.952" endtime="20201117 14:42:50.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:50.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:50.956" endtime="20201117 14:42:50.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.974" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:50.973" endtime="20201117 14:42:50.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:50.976" level="INFO">VALUE: [8.790300000000029e-05, 8.770799999999884e-05, 8.783299999999897e-05, 8.819399999999977e-05, 8.801400000000084e-05, 8.79999999999978e-05, 8.84860000000022e-05, 8.848599999999873e-05, 8.805500000000008e-05, 8.784800000000148e-05, 8.822200000000238e-05, 8.851399999999787e-05, 8.834700000000251e-05, 8.766600000000013e-05, 8.817999999999673e-05, 8.786100000000158e-05, 8.818099999999968e-05, 8.800000000000127e-05, 8.784699999999854e-05, 8.768099999999918e-05, 8.822200000000238e-05, 8.851300000000187e-05, 8.84999999999983e-05, 8.804199999999998e-05, 8.851399999999787e-05, 8.76799999999997e-05, 8.781999999999887e-05, 8.76669999999996e-05, 8.783299999999897e-05, 8.851400000000134e-05, 8.775000000000102e-05, 8.786200000000105e-05, 8.833299999999947e-05, 8.816599999999716e-05, 8.825000000000152e-05, 8.850000000000177e-05, 8.784700000000201e-05, 8.834699999999904e-05, 8.81389999999975e-05, 8.81670000000001e-05, 8.818099999999968e-05, 8.784799999999801e-05, 8.84999999999983e-05, 8.811199999999783e-05, 8.798599999999823e-05, 8.801400000000084e-05, 8.834700000000251e-05, 8.844400000000002e-05, 8.76669999999996e-05, 8.772299999999789e-05]</msg>
<status status="PASS" starttime="20201117 14:42:50.975" endtime="20201117 14:42:50.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.970" endtime="20201117 14:42:50.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:50.980" endtime="20201117 14:42:50.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:50.983" endtime="20201117 14:42:51.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.982" endtime="20201117 14:42:51.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.978" endtime="20201117 14:42:51.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.606" endtime="20201117 14:42:51.004"></status>
</kw>
<msg timestamp="20201117 14:42:51.005" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.013" endtime="20201117 14:42:51.032"></status>
</kw>
<msg timestamp="20201117 14:42:51.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.011" endtime="20201117 14:42:51.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.034" endtime="20201117 14:42:51.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.036" endtime="20201117 14:42:51.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.009" endtime="20201117 14:42:51.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.007" endtime="20201117 14:42:51.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.045" endtime="20201117 14:42:51.332"></status>
</kw>
<msg timestamp="20201117 14:42:51.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.044" endtime="20201117 14:42:51.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.336" endtime="20201117 14:42:51.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.344" endtime="20201117 14:42:51.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.041" endtime="20201117 14:42:51.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.039" endtime="20201117 14:42:51.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.351" level="INFO">${RESULT} = [{'time': 0.022519625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.808300000000269e-05, 'source_diff': 8.808300000000269e-05}, {'time': 0.022612625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.347" endtime="20201117 14:42:51.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.364" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:51.352" endtime="20201117 14:42:51.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.368" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.367" endtime="20201117 14:42:51.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.371" level="INFO">VALUE: [8.808300000000269e-05, 8.784700000000201e-05, 8.818099999999968e-05, 8.834799999999851e-05, 8.770799999999884e-05, 8.829200000000023e-05, 8.850000000000177e-05, 8.81800000000002e-05, 8.851400000000134e-05, 8.822199999999891e-05, 8.802800000000041e-05, 8.850000000000177e-05, 8.81389999999975e-05, 8.818099999999968e-05, 8.770799999999884e-05, 8.768099999999918e-05, 8.76669999999996e-05, 8.765300000000004e-05, 8.833300000000294e-05, 8.852800000000091e-05, 8.801399999999737e-05, 8.81670000000001e-05, 8.850000000000177e-05, 8.769499999999875e-05, 8.786100000000158e-05, 8.823600000000195e-05, 8.802800000000041e-05, 8.76669999999996e-05, 8.784699999999854e-05, 8.768000000000317e-05, 8.81800000000002e-05, 8.850000000000177e-05, 8.816600000000063e-05, 8.768099999999918e-05, 8.772299999999789e-05, 8.818099999999968e-05, 8.802800000000041e-05, 8.768099999999918e-05, 8.833399999999894e-05, 8.851400000000134e-05, 8.851400000000134e-05, 8.786099999999811e-05, 8.834700000000251e-05, 8.850000000000177e-05, 8.768100000000265e-05, 8.818099999999968e-05, 8.845899999999907e-05, 8.768099999999918e-05, 8.79860000000017e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.370" endtime="20201117 14:42:51.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.365" endtime="20201117 14:42:51.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.374" endtime="20201117 14:42:51.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.382" endtime="20201117 14:42:51.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.380" endtime="20201117 14:42:51.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.372" endtime="20201117 14:42:51.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.005" endtime="20201117 14:42:51.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.604" endtime="20201117 14:42:51.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:50.603" endtime="20201117 14:42:51.403"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.405" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.413" endtime="20201117 14:42:51.432"></status>
</kw>
<msg timestamp="20201117 14:42:51.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.412" endtime="20201117 14:42:51.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.434" endtime="20201117 14:42:51.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.436" endtime="20201117 14:42:51.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.409" endtime="20201117 14:42:51.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.407" endtime="20201117 14:42:51.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.445" endtime="20201117 14:42:51.732"></status>
</kw>
<msg timestamp="20201117 14:42:51.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.444" endtime="20201117 14:42:51.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.736" endtime="20201117 14:42:51.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.744" endtime="20201117 14:42:51.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.441" endtime="20201117 14:42:51.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.440" endtime="20201117 14:42:51.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:51.751" level="INFO">${RESULT} = [{'time': 0.024422111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.906900000000065e-05, 'source_diff': 8.906900000000065e-05}, {'time': 0.024517056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:51.748" endtime="20201117 14:42:51.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:51.809" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:51.752" endtime="20201117 14:42:51.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.813" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:51.812" endtime="20201117 14:42:51.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.816" level="INFO">VALUE: [8.906900000000065e-05, 8.94999999999993e-05, 8.869400000000027e-05, 8.866599999999766e-05, 8.883299999999997e-05, 8.86800000000007e-05, 8.901399999999837e-05, 8.863900000000147e-05, 8.94999999999993e-05, 8.934700000000004e-05, 8.883399999999944e-05, 8.918100000000068e-05, 8.869400000000027e-05, 8.865300000000104e-05, 8.898599999999923e-05, 8.915200000000206e-05, 8.869400000000027e-05, 8.94999999999993e-05, 8.919500000000025e-05, 8.886099999999911e-05, 8.94999999999993e-05, 8.918100000000068e-05, 8.934799999999951e-05, 8.934800000000298e-05, 8.884699999999954e-05, 8.897199999999966e-05, 8.901399999999837e-05, 8.929099999999829e-05, 8.86800000000007e-05, 8.91670000000011e-05, 8.934700000000004e-05, 8.879200000000073e-05, 8.883399999999944e-05, 8.868100000000018e-05, 8.954099999999854e-05, 8.90129999999989e-05, 8.931899999999743e-05, 8.898599999999923e-05, 8.934700000000004e-05, 8.902799999999794e-05, 8.902800000000141e-05, 8.933300000000047e-05, 8.901400000000184e-05, 8.901399999999837e-05, 8.905500000000108e-05, 8.933399999999994e-05, 8.886100000000258e-05, 8.927699999999872e-05, 8.865299999999757e-05, 8.91800000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:42:51.814" endtime="20201117 14:42:51.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.810" endtime="20201117 14:42:51.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.819" endtime="20201117 14:42:51.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:51.823" endtime="20201117 14:42:51.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.821" endtime="20201117 14:42:51.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.817" endtime="20201117 14:42:51.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.406" endtime="20201117 14:42:51.843"></status>
</kw>
<msg timestamp="20201117 14:42:51.843" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.852" endtime="20201117 14:42:51.871"></status>
</kw>
<msg timestamp="20201117 14:42:51.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.850" endtime="20201117 14:42:51.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:51.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:51.873" endtime="20201117 14:42:51.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.875" endtime="20201117 14:42:51.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.847" endtime="20201117 14:42:51.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.845" endtime="20201117 14:42:51.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:51.884" endtime="20201117 14:42:52.170"></status>
</kw>
<msg timestamp="20201117 14:42:52.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:51.883" endtime="20201117 14:42:52.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.174" endtime="20201117 14:42:52.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.182" endtime="20201117 14:42:52.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.880" endtime="20201117 14:42:52.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.878" endtime="20201117 14:42:52.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.189" level="INFO">${RESULT} = [{'time': 0.022541444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.91800000000012e-05, 'source_diff': 8.91800000000012e-05}, {'time': 0.022634458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:52.185" endtime="20201117 14:42:52.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:52.190" endtime="20201117 14:42:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.206" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.205" endtime="20201117 14:42:52.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.208" level="INFO">VALUE: [8.91800000000012e-05, 8.886099999999911e-05, 8.916599999999816e-05, 8.884699999999954e-05, 8.890299999999782e-05, 8.900000000000227e-05, 8.951399999999887e-05, 8.902800000000141e-05, 8.869499999999975e-05, 8.886100000000258e-05, 8.954099999999854e-05, 8.91800000000012e-05, 8.934700000000004e-05, 8.943000000000145e-05, 8.901400000000184e-05, 8.922299999999939e-05, 8.915300000000154e-05, 8.951400000000234e-05, 8.929199999999776e-05, 8.94999999999993e-05, 8.934799999999951e-05, 8.915299999999807e-05, 8.934700000000004e-05, 8.91800000000012e-05, 8.9332999999997e-05, 8.917999999999773e-05, 8.933300000000047e-05, 8.88190000000004e-05, 8.934700000000004e-05, 8.884700000000301e-05, 8.934799999999951e-05, 8.89869999999987e-05, 8.932000000000037e-05, 8.873599999999898e-05, 8.886100000000258e-05, 8.930499999999786e-05, 8.951400000000234e-05, 8.868100000000018e-05, 8.931899999999743e-05, 8.884699999999954e-05, 8.951399999999887e-05, 8.869499999999975e-05, 8.902699999999847e-05, 8.91670000000011e-05, 8.927700000000219e-05, 8.951399999999887e-05, 8.900000000000227e-05, 8.904200000000098e-05, 8.892999999999748e-05, 8.869499999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.207" endtime="20201117 14:42:52.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.202" endtime="20201117 14:42:52.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.212" endtime="20201117 14:42:52.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.215" endtime="20201117 14:42:52.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.214" endtime="20201117 14:42:52.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.210" endtime="20201117 14:42:52.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.844" endtime="20201117 14:42:52.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.404" endtime="20201117 14:42:52.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:51.403" endtime="20201117 14:42:52.236"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.239" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.248" endtime="20201117 14:42:52.268"></status>
</kw>
<msg timestamp="20201117 14:42:52.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.246" endtime="20201117 14:42:52.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.269" endtime="20201117 14:42:52.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.272" endtime="20201117 14:42:52.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.244" endtime="20201117 14:42:52.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.241" endtime="20201117 14:42:52.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.281" endtime="20201117 14:42:52.567"></status>
</kw>
<msg timestamp="20201117 14:42:52.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025470333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.279" endtime="20201117 14:42:52.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025470333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025560264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.571" endtime="20201117 14:42:52.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.579" endtime="20201117 14:42:52.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.277" endtime="20201117 14:42:52.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.275" endtime="20201117 14:42:52.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.585" level="INFO">${RESULT} = [{'time': 0.025560264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.993099999999796e-05, 'source_diff': 8.993099999999796e-05}, {'time': 0.025662264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.582" endtime="20201117 14:42:52.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.599" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:52.586" endtime="20201117 14:42:52.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.603" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.602" endtime="20201117 14:42:52.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.606" level="INFO">VALUE: [8.993099999999796e-05, 9.001399999999937e-05, 8.965300000000204e-05, 9.001399999999937e-05, 9.036100000000061e-05, 9.036100000000061e-05, 9.05130000000004e-05, 9.031899999999843e-05, 9.055600000000205e-05, 8.966600000000213e-05, 9.0332999999998e-05, 9.05000000000003e-05, 9.001399999999937e-05, 9.019499999999778e-05, 8.982000000000087e-05, 8.968100000000118e-05, 8.968100000000118e-05, 8.966600000000213e-05, 9.017999999999873e-05, 8.984700000000054e-05, 9.05000000000003e-05, 9.034700000000104e-05, 9.056999999999815e-05, 9.052799999999944e-05, 9.049999999999683e-05, 8.984800000000001e-05, 8.99999999999998e-05, 9.034700000000104e-05, 8.979099999999879e-05, 8.966599999999866e-05, 8.967999999999823e-05, 9.05000000000003e-05, 8.99999999999998e-05, 9.034700000000104e-05, 8.99999999999998e-05, 8.99999999999998e-05, 9.048600000000073e-05, 9.05000000000003e-05, 9.001399999999937e-05, 8.997200000000066e-05, 9.017999999999873e-05, 9.05000000000003e-05, 9.016599999999916e-05, 9.01670000000021e-05, 8.972299999999989e-05, 9.002799999999894e-05, 9.036100000000061e-05, 8.986199999999958e-05, 9.018100000000168e-05, 8.972200000000041e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.604" endtime="20201117 14:42:52.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.600" endtime="20201117 14:42:52.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.609" endtime="20201117 14:42:52.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:52.613" endtime="20201117 14:42:52.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.611" endtime="20201117 14:42:52.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.608" endtime="20201117 14:42:52.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.239" endtime="20201117 14:42:52.633"></status>
</kw>
<msg timestamp="20201117 14:42:52.634" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.643" endtime="20201117 14:42:52.662"></status>
</kw>
<msg timestamp="20201117 14:42:52.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.641" endtime="20201117 14:42:52.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:52.663" endtime="20201117 14:42:52.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.666" endtime="20201117 14:42:52.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.638" endtime="20201117 14:42:52.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.636" endtime="20201117 14:42:52.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.675" endtime="20201117 14:42:52.960"></status>
</kw>
<msg timestamp="20201117 14:42:52.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.673" endtime="20201117 14:42:52.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:52.964" endtime="20201117 14:42:52.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:52.973" endtime="20201117 14:42:52.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.671" endtime="20201117 14:42:52.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.669" endtime="20201117 14:42:52.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:52.979" level="INFO">${RESULT} = [{'time': 0.022902319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.025000000000005e-05, 'source_diff': 9.025000000000005e-05}, {'time': 0.023003319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:52.976" endtime="20201117 14:42:52.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:52.993" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:52.980" endtime="20201117 14:42:52.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:52.997" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:42:52.996" endtime="20201117 14:42:52.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.000" level="INFO">VALUE: [9.025000000000005e-05, 8.966600000000213e-05, 9.037500000000018e-05, 9.031899999999843e-05, 9.034700000000104e-05, 9.01670000000021e-05, 9.030599999999833e-05, 9.049999999999683e-05, 9.020900000000082e-05, 8.983400000000044e-05, 8.966699999999814e-05, 8.968100000000118e-05, 9.052699999999997e-05, 9.048599999999726e-05, 9.002799999999894e-05, 9.016600000000263e-05, 9.054199999999901e-05, 9.002799999999894e-05, 9.033300000000147e-05, 9.052799999999944e-05, 8.968100000000118e-05, 9.034700000000104e-05, 8.983400000000044e-05, 9.017999999999873e-05, 9.002799999999894e-05, 8.984700000000054e-05, 9.031899999999843e-05, 8.991599999999891e-05, 8.963900000000247e-05, 9.034700000000104e-05, 9.009700000000079e-05, 9.05000000000003e-05, 9.049999999999683e-05, 9.009799999999679e-05, 9.019400000000177e-05, 9.036100000000061e-05, 8.984700000000054e-05, 9.051399999999987e-05, 9.019499999999778e-05, 8.99999999999998e-05, 9.004199999999851e-05, 9.056899999999868e-05, 8.986199999999958e-05, 9.019400000000177e-05, 8.984700000000054e-05, 8.983300000000097e-05, 8.9638999999999e-05, 9.001399999999937e-05, 8.984700000000054e-05, 9.001399999999937e-05]</msg>
<status status="PASS" starttime="20201117 14:42:52.999" endtime="20201117 14:42:53.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.994" endtime="20201117 14:42:53.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.003" endtime="20201117 14:42:53.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.006" endtime="20201117 14:42:53.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.005" endtime="20201117 14:42:53.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.001" endtime="20201117 14:42:53.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.634" endtime="20201117 14:42:53.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.238" endtime="20201117 14:42:53.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:52.237" endtime="20201117 14:42:53.027"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.030" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.038" endtime="20201117 14:42:53.058"></status>
</kw>
<msg timestamp="20201117 14:42:53.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.036" endtime="20201117 14:42:53.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.060" endtime="20201117 14:42:53.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.062" endtime="20201117 14:42:53.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.034" endtime="20201117 14:42:53.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.032" endtime="20201117 14:42:53.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.071" endtime="20201117 14:42:53.357"></status>
</kw>
<msg timestamp="20201117 14:42:53.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.070" endtime="20201117 14:42:53.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025200569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025291806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.361" endtime="20201117 14:42:53.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.369" endtime="20201117 14:42:53.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.067" endtime="20201117 14:42:53.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.065" endtime="20201117 14:42:53.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.376" level="INFO">${RESULT} = [{'time': 0.025291806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.123700000000096e-05, 'source_diff': 9.123700000000096e-05}, {'time': 0.025396806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.373" endtime="20201117 14:42:53.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.390" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:53.377" endtime="20201117 14:42:53.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.395" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.394" endtime="20201117 14:42:53.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.397" level="INFO">VALUE: [9.123700000000096e-05, 9.14870000000012e-05, 9.120799999999887e-05, 9.06800000000027e-05, 9.1332999999999e-05, 9.1332999999999e-05, 9.081899999999893e-05, 9.097200000000166e-05, 9.084700000000154e-05, 9.123599999999801e-05, 9.084800000000101e-05, 9.133399999999847e-05, 9.138900000000075e-05, 9.11390000000005e-05, 9.10000000000008e-05, 9.086100000000111e-05, 9.086100000000111e-05, 9.116699999999964e-05, 9.06670000000026e-05, 9.068099999999871e-05, 9.118099999999921e-05, 9.118099999999921e-05, 9.065299999999957e-05, 9.15000000000013e-05, 9.079099999999979e-05, 9.101400000000037e-05, 9.136100000000161e-05, 9.117999999999973e-05, 9.083300000000197e-05, 9.154200000000001e-05, 9.148599999999826e-05, 9.119500000000225e-05, 9.079199999999926e-05, 9.151400000000087e-05, 9.15130000000014e-05, 9.066599999999966e-05, 9.152800000000044e-05, 9.130499999999986e-05, 9.102799999999994e-05, 9.118099999999921e-05, 9.068100000000218e-05, 9.118099999999921e-05, 9.095900000000157e-05, 9.101400000000037e-05, 9.102700000000047e-05, 9.094399999999905e-05, 9.117999999999973e-05, 9.115199999999712e-05, 9.116600000000016e-05, 9.15000000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.396" endtime="20201117 14:42:53.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.391" endtime="20201117 14:42:53.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.400" endtime="20201117 14:42:53.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.404" endtime="20201117 14:42:53.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.402" endtime="20201117 14:42:53.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.399" endtime="20201117 14:42:53.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.030" endtime="20201117 14:42:53.424"></status>
</kw>
<msg timestamp="20201117 14:42:53.424" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.433" endtime="20201117 14:42:53.452"></status>
</kw>
<msg timestamp="20201117 14:42:53.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.431" endtime="20201117 14:42:53.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.454" endtime="20201117 14:42:53.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.456" endtime="20201117 14:42:53.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.429" endtime="20201117 14:42:53.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.426" endtime="20201117 14:42:53.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.466" endtime="20201117 14:42:53.751"></status>
</kw>
<msg timestamp="20201117 14:42:53.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.464" endtime="20201117 14:42:53.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.755" endtime="20201117 14:42:53.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.764" endtime="20201117 14:42:53.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.462" endtime="20201117 14:42:53.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.460" endtime="20201117 14:42:53.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:53.771" level="INFO">${RESULT} = [{'time': 0.021981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.144499999999903e-05, 'source_diff': 9.144499999999903e-05}, {'time': 0.022082278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:53.767" endtime="20201117 14:42:53.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:53.784" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:53.772" endtime="20201117 14:42:53.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.788" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:42:53.787" endtime="20201117 14:42:53.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.791" level="INFO">VALUE: [9.144499999999903e-05, 9.133400000000194e-05, 9.084799999999754e-05, 9.134799999999804e-05, 9.15130000000014e-05, 9.084699999999807e-05, 9.116600000000016e-05, 9.104199999999951e-05, 9.111100000000136e-05, 9.122299999999792e-05, 9.134699999999857e-05, 9.118099999999921e-05, 9.133399999999847e-05, 9.066699999999914e-05, 9.10000000000008e-05, 9.117999999999973e-05, 9.101400000000037e-05, 9.06800000000027e-05, 9.102799999999994e-05, 9.088900000000025e-05, 9.105600000000255e-05, 9.070800000000184e-05, 9.130599999999933e-05, 9.133400000000194e-05, 9.112500000000093e-05, 9.149999999999783e-05, 9.134699999999857e-05, 9.101400000000037e-05, 9.152800000000044e-05, 9.084700000000154e-05, 9.065299999999957e-05, 9.068099999999871e-05, 9.116699999999964e-05, 9.143099999999946e-05, 9.134799999999804e-05, 9.149999999999783e-05, 9.104100000000004e-05, 9.08329999999985e-05, 9.067999999999923e-05, 9.067999999999923e-05, 9.06800000000027e-05, 9.101400000000037e-05, 9.11390000000005e-05, 9.116699999999964e-05, 9.116699999999964e-05, 9.084800000000101e-05, 9.118099999999921e-05, 9.11939999999993e-05, 9.084700000000154e-05, 9.15000000000013e-05]</msg>
<status status="PASS" starttime="20201117 14:42:53.790" endtime="20201117 14:42:53.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.785" endtime="20201117 14:42:53.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.794" endtime="20201117 14:42:53.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:53.797" endtime="20201117 14:42:53.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.796" endtime="20201117 14:42:53.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.792" endtime="20201117 14:42:53.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.425" endtime="20201117 14:42:53.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.029" endtime="20201117 14:42:53.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.028" endtime="20201117 14:42:53.818"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.821" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.829" endtime="20201117 14:42:53.849"></status>
</kw>
<msg timestamp="20201117 14:42:53.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.827" endtime="20201117 14:42:53.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:53.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:53.850" endtime="20201117 14:42:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.853" endtime="20201117 14:42:53.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.825" endtime="20201117 14:42:53.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.823" endtime="20201117 14:42:53.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:53.862" endtime="20201117 14:42:54.147"></status>
</kw>
<msg timestamp="20201117 14:42:54.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:53.861" endtime="20201117 14:42:54.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024582792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.151" endtime="20201117 14:42:54.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.160" endtime="20201117 14:42:54.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.858" endtime="20201117 14:42:54.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.856" endtime="20201117 14:42:54.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.166" level="INFO">${RESULT} = [{'time': 0.024675014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.222199999999944e-05, 'source_diff': 9.222199999999944e-05}, {'time': 0.024775042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.163" endtime="20201117 14:42:54.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:54.167" endtime="20201117 14:42:54.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.184" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.183" endtime="20201117 14:42:54.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.186" level="INFO">VALUE: [9.222199999999944e-05, 9.236099999999914e-05, 9.21940000000003e-05, 9.168000000000023e-05, 9.18199999999994e-05, 9.198599999999876e-05, 9.18329999999995e-05, 9.25000000000023e-05, 9.166700000000014e-05, 9.18329999999995e-05, 9.1639000000001e-05, 9.216700000000064e-05, 9.187500000000168e-05, 9.234799999999904e-05, 9.216700000000064e-05, 9.198600000000223e-05, 9.216600000000116e-05, 9.181899999999993e-05, 9.2333e-05, 9.218000000000073e-05, 9.25139999999984e-05, 9.251400000000187e-05, 9.186099999999864e-05, 9.216699999999717e-05, 9.251400000000187e-05, 9.212499999999846e-05, 9.177699999999775e-05, 9.218000000000073e-05, 9.231900000000043e-05, 9.18329999999995e-05, 9.18329999999995e-05, 9.244399999999708e-05, 9.234699999999957e-05, 9.218100000000021e-05, 9.201400000000137e-05, 9.204099999999757e-05, 9.233399999999947e-05, 9.16520000000011e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.21940000000003e-05, 9.186100000000211e-05, 9.199999999999833e-05, 9.168099999999971e-05, 9.190199999999787e-05, 9.252700000000197e-05, 9.18199999999994e-05, 9.162500000000143e-05, 9.222199999999944e-05, 9.234699999999957e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.185" endtime="20201117 14:42:54.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.180" endtime="20201117 14:42:54.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.189" endtime="20201117 14:42:54.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.193" endtime="20201117 14:42:54.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.191" endtime="20201117 14:42:54.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.188" endtime="20201117 14:42:54.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.821" endtime="20201117 14:42:54.213"></status>
</kw>
<msg timestamp="20201117 14:42:54.214" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.222" endtime="20201117 14:42:54.243"></status>
</kw>
<msg timestamp="20201117 14:42:54.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.220" endtime="20201117 14:42:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.244" endtime="20201117 14:42:54.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.247" endtime="20201117 14:42:54.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.218" endtime="20201117 14:42:54.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.216" endtime="20201117 14:42:54.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.257" endtime="20201117 14:42:54.543"></status>
</kw>
<msg timestamp="20201117 14:42:54.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.256" endtime="20201117 14:42:54.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.547" endtime="20201117 14:42:54.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.556" endtime="20201117 14:42:54.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.253" endtime="20201117 14:42:54.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.251" endtime="20201117 14:42:54.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.563" level="INFO">${RESULT} = [{'time': 0.022232056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.206999999999965e-05, 'source_diff': 9.206999999999965e-05}, {'time': 0.022333125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.559" endtime="20201117 14:42:54.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.576" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:54.564" endtime="20201117 14:42:54.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.581" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.580" endtime="20201117 14:42:54.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.583" level="INFO">VALUE: [9.206999999999965e-05, 9.224999999999858e-05, 9.216600000000116e-05, 9.251400000000187e-05, 9.238899999999828e-05, 9.201400000000137e-05, 9.199999999999833e-05, 9.25000000000023e-05, 9.201400000000137e-05, 9.229200000000076e-05, 9.234799999999904e-05, 9.230600000000033e-05, 9.184699999999907e-05, 9.184700000000254e-05, 9.231900000000043e-05, 9.184699999999907e-05, 9.184699999999907e-05, 9.169499999999928e-05, 9.176400000000112e-05, 9.166700000000014e-05, 9.227799999999772e-05, 9.25139999999984e-05, 9.238900000000175e-05, 9.236099999999914e-05, 9.184699999999907e-05, 9.222199999999944e-05, 9.25139999999984e-05, 9.251400000000187e-05, 9.211099999999889e-05, 9.234699999999957e-05, 9.251400000000187e-05, 9.216699999999717e-05, 9.216700000000064e-05, 9.23199999999999e-05, 9.202700000000147e-05, 9.252800000000144e-05, 9.234699999999957e-05, 9.183300000000297e-05, 9.166700000000014e-05, 9.236099999999914e-05, 9.184699999999907e-05, 9.16529999999971e-05, 9.184799999999854e-05, 9.25139999999984e-05, 9.23199999999999e-05, 9.167999999999676e-05, 9.252799999999797e-05, 9.254200000000101e-05, 9.252800000000144e-05, 9.179200000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.582" endtime="20201117 14:42:54.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.577" endtime="20201117 14:42:54.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.586" endtime="20201117 14:42:54.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.590" endtime="20201117 14:42:54.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.588" endtime="20201117 14:42:54.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.585" endtime="20201117 14:42:54.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.214" endtime="20201117 14:42:54.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.820" endtime="20201117 14:42:54.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:53.819" endtime="20201117 14:42:54.611"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.613" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.622" endtime="20201117 14:42:54.641"></status>
</kw>
<msg timestamp="20201117 14:42:54.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.620" endtime="20201117 14:42:54.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:54.643" endtime="20201117 14:42:54.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.646" endtime="20201117 14:42:54.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.617" endtime="20201117 14:42:54.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.615" endtime="20201117 14:42:54.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.656" endtime="20201117 14:42:54.943"></status>
</kw>
<msg timestamp="20201117 14:42:54.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025758917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025852486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.654" endtime="20201117 14:42:54.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025758917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025852486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:54.947" endtime="20201117 14:42:54.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.955" endtime="20201117 14:42:54.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.651" endtime="20201117 14:42:54.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.649" endtime="20201117 14:42:54.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:54.962" level="INFO">${RESULT} = [{'time': 0.025852486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.356900000000168e-05, 'source_diff': 9.356900000000168e-05}, {'time': 0.025951514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:54.959" endtime="20201117 14:42:54.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:54.976" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:54.963" endtime="20201117 14:42:54.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.981" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:54.980" endtime="20201117 14:42:54.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:54.983" level="INFO">VALUE: [9.356900000000168e-05, 9.336100000000014e-05, 9.351400000000287e-05, 9.355499999999864e-05, 9.266700000000114e-05, 9.318099999999774e-05, 9.334800000000004e-05, 9.301299999999943e-05, 9.284700000000007e-05, 9.3333000000001e-05, 9.31529999999986e-05, 9.316700000000164e-05, 9.286099999999964e-05, 9.316700000000164e-05, 9.268100000000071e-05, 9.270800000000037e-05, 9.298599999999976e-05, 9.266699999999767e-05, 9.35269999999995e-05, 9.302799999999847e-05, 9.26940000000008e-05, 9.30139999999989e-05, 9.262499999999896e-05, 9.284700000000007e-05, 9.35139999999994e-05, 9.334700000000057e-05, 9.354100000000254e-05, 9.35000000000033e-05, 9.351299999999993e-05, 9.330600000000133e-05, 9.281900000000093e-05, 9.3333000000001e-05, 9.31940000000013e-05, 9.284700000000007e-05, 9.290199999999887e-05, 9.355499999999864e-05, 9.348600000000026e-05, 9.294500000000053e-05, 9.316700000000164e-05, 9.268000000000123e-05, 9.31940000000013e-05, 9.35139999999994e-05, 9.318000000000173e-05, 9.298599999999976e-05, 9.349999999999983e-05, 9.28330000000005e-05, 9.284700000000007e-05, 9.268100000000071e-05, 9.31940000000013e-05, 9.286099999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:42:54.982" endtime="20201117 14:42:54.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.977" endtime="20201117 14:42:54.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:54.986" endtime="20201117 14:42:54.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:54.990" endtime="20201117 14:42:55.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.988" endtime="20201117 14:42:55.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.985" endtime="20201117 14:42:55.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.614" endtime="20201117 14:42:55.011"></status>
</kw>
<msg timestamp="20201117 14:42:55.011" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.019" endtime="20201117 14:42:55.038"></status>
</kw>
<msg timestamp="20201117 14:42:55.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.018" endtime="20201117 14:42:55.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.039" endtime="20201117 14:42:55.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.042" endtime="20201117 14:42:55.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.015" endtime="20201117 14:42:55.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.013" endtime="20201117 14:42:55.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.052" endtime="20201117 14:42:55.337"></status>
</kw>
<msg timestamp="20201117 14:42:55.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.050" endtime="20201117 14:42:55.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.341" endtime="20201117 14:42:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.350" endtime="20201117 14:42:55.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.048" endtime="20201117 14:42:55.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.046" endtime="20201117 14:42:55.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.356" level="INFO">${RESULT} = [{'time': 0.022456847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.306899999999771e-05, 'source_diff': 9.306899999999771e-05}, {'time': 0.022563861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.353" endtime="20201117 14:42:55.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:55.357" endtime="20201117 14:42:55.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.374" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.373" endtime="20201117 14:42:55.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.377" level="INFO">VALUE: [9.306899999999771e-05, 9.299999999999933e-05, 9.284700000000007e-05, 9.349999999999983e-05, 9.35139999999994e-05, 9.269500000000028e-05, 9.340299999999885e-05, 9.354099999999907e-05, 9.299999999999933e-05, 9.336100000000014e-05, 9.291700000000139e-05, 9.284700000000007e-05, 9.357000000000115e-05, 9.35139999999994e-05, 9.286099999999964e-05, 9.270800000000037e-05, 9.315300000000207e-05, 9.336100000000014e-05, 9.262499999999896e-05, 9.349999999999983e-05, 9.30139999999989e-05, 9.344400000000155e-05, 9.311099999999989e-05, 9.349999999999983e-05, 9.349999999999983e-05, 9.35139999999994e-05, 9.333400000000047e-05, 9.286199999999911e-05, 9.266700000000114e-05, 9.266600000000166e-05, 9.33469999999971e-05, 9.31659999999987e-05, 9.267999999999776e-05, 9.3333000000001e-05, 9.290199999999887e-05, 9.315300000000207e-05, 9.349999999999983e-05, 9.287500000000268e-05, 9.356899999999821e-05, 9.330500000000186e-05, 9.336100000000014e-05, 9.28330000000005e-05, 9.31529999999986e-05, 9.349999999999983e-05, 9.28330000000005e-05, 9.301400000000237e-05, 9.352799999999897e-05, 9.340299999999885e-05, 9.301299999999943e-05, 9.349999999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.375" endtime="20201117 14:42:55.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.371" endtime="20201117 14:42:55.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.380" endtime="20201117 14:42:55.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.384" endtime="20201117 14:42:55.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.382" endtime="20201117 14:42:55.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.378" endtime="20201117 14:42:55.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.012" endtime="20201117 14:42:55.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.612" endtime="20201117 14:42:55.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:54.611" endtime="20201117 14:42:55.405"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.407" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.415" endtime="20201117 14:42:55.435"></status>
</kw>
<msg timestamp="20201117 14:42:55.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.414" endtime="20201117 14:42:55.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.437" endtime="20201117 14:42:55.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.439" endtime="20201117 14:42:55.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.411" endtime="20201117 14:42:55.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.409" endtime="20201117 14:42:55.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.448" endtime="20201117 14:42:55.733"></status>
</kw>
<msg timestamp="20201117 14:42:55.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.447" endtime="20201117 14:42:55.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024304958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024398708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.738" endtime="20201117 14:42:55.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.746" endtime="20201117 14:42:55.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.444" endtime="20201117 14:42:55.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.442" endtime="20201117 14:42:55.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:55.752" level="INFO">${RESULT} = [{'time': 0.024398708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.375000000000008e-05, 'source_diff': 9.375000000000008e-05}, {'time': 0.024503694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:55.749" endtime="20201117 14:42:55.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:55.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:55.753" endtime="20201117 14:42:55.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.770" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:55.769" endtime="20201117 14:42:55.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.773" level="INFO">VALUE: [9.375000000000008e-05, 9.367999999999876e-05, 9.430499999999939e-05, 9.384700000000107e-05, 9.416700000000264e-05, 9.416699999999917e-05, 9.455499999999964e-05, 9.450000000000083e-05, 9.44859999999978e-05, 9.438899999999681e-05, 9.365300000000257e-05, 9.38469999999976e-05, 9.381900000000193e-05, 9.366600000000266e-05, 9.454199999999954e-05, 9.43469999999981e-05, 9.41940000000023e-05, 9.418099999999874e-05, 9.386100000000064e-05, 9.45140000000004e-05, 9.450000000000083e-05, 9.416699999999917e-05, 9.36659999999992e-05, 9.417999999999926e-05, 9.369399999999833e-05, 9.383299999999803e-05, 9.416699999999917e-05, 9.368100000000171e-05, 9.449999999999736e-05, 9.400000000000033e-05, 9.452799999999997e-05, 9.38339999999975e-05, 9.417999999999926e-05, 9.419399999999883e-05, 9.404200000000251e-05, 9.368099999999824e-05, 9.366699999999867e-05, 9.433299999999853e-05, 9.402799999999947e-05, 9.450000000000083e-05, 9.454100000000007e-05, 9.45140000000004e-05, 9.4333999999998e-05, 9.417999999999926e-05, 9.400000000000033e-05, 9.45140000000004e-05, 9.366700000000214e-05, 9.4333000000002e-05, 9.366699999999867e-05, 9.368099999999824e-05]</msg>
<status status="PASS" starttime="20201117 14:42:55.772" endtime="20201117 14:42:55.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.767" endtime="20201117 14:42:55.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.777" endtime="20201117 14:42:55.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:55.780" endtime="20201117 14:42:55.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.778" endtime="20201117 14:42:55.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.775" endtime="20201117 14:42:55.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.408" endtime="20201117 14:42:55.801"></status>
</kw>
<msg timestamp="20201117 14:42:55.801" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.809" endtime="20201117 14:42:55.828"></status>
</kw>
<msg timestamp="20201117 14:42:55.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.808" endtime="20201117 14:42:55.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:55.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:55.830" endtime="20201117 14:42:55.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.832" endtime="20201117 14:42:55.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.805" endtime="20201117 14:42:55.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.803" endtime="20201117 14:42:55.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:55.842" endtime="20201117 14:42:56.128"></status>
</kw>
<msg timestamp="20201117 14:42:56.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:55.841" endtime="20201117 14:42:56.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.132" endtime="20201117 14:42:56.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.140" endtime="20201117 14:42:56.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.838" endtime="20201117 14:42:56.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.836" endtime="20201117 14:42:56.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.147" level="INFO">${RESULT} = [{'time': 0.021975694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.387500000000021e-05, 'source_diff': 9.387500000000021e-05}, {'time': 0.022078708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.144" endtime="20201117 14:42:56.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:56.148" endtime="20201117 14:42:56.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.164" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.163" endtime="20201117 14:42:56.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.167" level="INFO">VALUE: [9.387500000000021e-05, 9.431899999999896e-05, 9.454199999999954e-05, 9.369399999999833e-05, 9.395799999999815e-05, 9.405600000000208e-05, 9.449999999999736e-05, 9.431999999999843e-05, 9.397300000000067e-05, 9.434800000000104e-05, 9.45140000000004e-05, 9.369399999999833e-05, 9.450000000000083e-05, 9.404200000000251e-05, 9.39859999999973e-05, 9.402799999999947e-05, 9.416700000000264e-05, 9.43469999999981e-05, 9.418100000000221e-05, 9.45140000000004e-05, 9.40139999999999e-05, 9.409699999999785e-05, 9.45140000000004e-05, 9.383299999999803e-05, 9.419399999999883e-05, 9.380599999999836e-05, 9.402799999999947e-05, 9.419500000000178e-05, 9.40139999999999e-05, 9.434800000000104e-05, 9.384700000000107e-05, 9.43469999999981e-05, 9.437499999999724e-05, 9.384700000000107e-05, 9.449999999999736e-05, 9.384700000000107e-05, 9.434700000000157e-05, 9.379199999999879e-05, 9.36529999999991e-05, 9.384800000000054e-05, 9.418100000000221e-05, 9.38330000000015e-05, 9.447199999999822e-05, 9.452799999999997e-05, 9.36659999999992e-05, 9.370900000000085e-05, 9.38330000000015e-05, 9.419499999999831e-05, 9.45140000000004e-05, 9.409800000000079e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.166" endtime="20201117 14:42:56.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.161" endtime="20201117 14:42:56.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.171" endtime="20201117 14:42:56.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.174" endtime="20201117 14:42:56.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.172" endtime="20201117 14:42:56.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.169" endtime="20201117 14:42:56.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.802" endtime="20201117 14:42:56.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.406" endtime="20201117 14:42:56.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:55.405" endtime="20201117 14:42:56.195"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.197" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.205" endtime="20201117 14:42:56.225"></status>
</kw>
<msg timestamp="20201117 14:42:56.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.204" endtime="20201117 14:42:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.226" endtime="20201117 14:42:56.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.229" endtime="20201117 14:42:56.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.201" endtime="20201117 14:42:56.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.199" endtime="20201117 14:42:56.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.238" endtime="20201117 14:42:56.523"></status>
</kw>
<msg timestamp="20201117 14:42:56.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025187556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.236" endtime="20201117 14:42:56.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025092153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025187556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.527" endtime="20201117 14:42:56.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.535" endtime="20201117 14:42:56.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.234" endtime="20201117 14:42:56.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.232" endtime="20201117 14:42:56.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.542" level="INFO">${RESULT} = [{'time': 0.025187556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.540300000000085e-05, 'source_diff': 9.540300000000085e-05}, {'time': 0.025297583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.539" endtime="20201117 14:42:56.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:56.543" endtime="20201117 14:42:56.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.561" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.560" endtime="20201117 14:42:56.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.568" level="INFO">VALUE: [9.540300000000085e-05, 9.536099999999867e-05, 9.469399999999933e-05, 9.556999999999968e-05, 9.54859999999988e-05, 9.533299999999953e-05, 9.516700000000017e-05, 9.51530000000006e-05, 9.54729999999987e-05, 9.534800000000204e-05, 9.484799999999807e-05, 9.501300000000143e-05, 9.518000000000026e-05, 9.55279999999975e-05, 9.53469999999991e-05, 9.481899999999946e-05, 9.551399999999793e-05, 9.502800000000047e-05, 9.53469999999991e-05, 9.529200000000029e-05, 9.516700000000017e-05, 9.483299999999903e-05, 9.483299999999903e-05, 9.53469999999991e-05, 9.55279999999975e-05, 9.49720000000022e-05, 9.549999999999836e-05, 9.48469999999986e-05, 9.53200000000029e-05, 9.533400000000247e-05, 9.481999999999893e-05, 9.484800000000154e-05, 9.484700000000207e-05, 9.522199999999897e-05, 9.53469999999991e-05, 9.466699999999967e-05, 9.51530000000006e-05, 9.49859999999983e-05, 9.54859999999988e-05, 9.518099999999974e-05, 9.466699999999967e-05, 9.520800000000287e-05, 9.509699999999885e-05, 9.533299999999953e-05, 9.551399999999793e-05, 9.55140000000014e-05, 9.466699999999967e-05, 9.50140000000009e-05, 9.501399999999743e-05, 9.466699999999967e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.562" endtime="20201117 14:42:56.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.557" endtime="20201117 14:42:56.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.571" endtime="20201117 14:42:56.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.575" endtime="20201117 14:42:56.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.573" endtime="20201117 14:42:56.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.570" endtime="20201117 14:42:56.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.198" endtime="20201117 14:42:56.595"></status>
</kw>
<msg timestamp="20201117 14:42:56.596" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.604" endtime="20201117 14:42:56.623"></status>
</kw>
<msg timestamp="20201117 14:42:56.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.602" endtime="20201117 14:42:56.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.625" endtime="20201117 14:42:56.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.627" endtime="20201117 14:42:56.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.600" endtime="20201117 14:42:56.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.598" endtime="20201117 14:42:56.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.637" endtime="20201117 14:42:56.922"></status>
</kw>
<msg timestamp="20201117 14:42:56.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.635" endtime="20201117 14:42:56.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:56.926" endtime="20201117 14:42:56.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.935" endtime="20201117 14:42:56.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.633" endtime="20201117 14:42:56.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.631" endtime="20201117 14:42:56.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:56.941" level="INFO">${RESULT} = [{'time': 0.021994931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.488899999999731e-05, 'source_diff': 9.488899999999731e-05}, {'time': 0.022097931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:56.938" endtime="20201117 14:42:56.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:56.955" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:56.942" endtime="20201117 14:42:56.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.960" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:42:56.958" endtime="20201117 14:42:56.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.962" level="INFO">VALUE: [9.488899999999731e-05, 9.518099999999974e-05, 9.469399999999933e-05, 9.536100000000214e-05, 9.547199999999922e-05, 9.486099999999817e-05, 9.516700000000017e-05, 9.48330000000025e-05, 9.538799999999834e-05, 9.476400000000065e-05, 9.472199999999847e-05, 9.468099999999924e-05, 9.549999999999836e-05, 9.481900000000293e-05, 9.515200000000112e-05, 9.468000000000323e-05, 9.505599999999961e-05, 9.554200000000054e-05, 9.466699999999967e-05, 9.484700000000207e-05, 9.505500000000014e-05, 9.552699999999803e-05, 9.516700000000017e-05, 9.483299999999903e-05, 9.550000000000183e-05, 9.536099999999867e-05, 9.552800000000097e-05, 9.495799999999915e-05, 9.519499999999931e-05, 9.531999999999943e-05, 9.516700000000017e-05, 9.500000000000133e-05, 9.531999999999943e-05, 9.505599999999961e-05, 9.547199999999922e-05, 9.51660000000007e-05, 9.486099999999817e-05, 9.518099999999974e-05, 9.537500000000171e-05, 9.534700000000257e-05, 9.48339999999985e-05, 9.501399999999743e-05, 9.48469999999986e-05, 9.534700000000257e-05, 9.53469999999991e-05, 9.518000000000026e-05, 9.499999999999786e-05, 9.51530000000006e-05, 9.512499999999799e-05, 9.484700000000207e-05]</msg>
<status status="PASS" starttime="20201117 14:42:56.961" endtime="20201117 14:42:56.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.956" endtime="20201117 14:42:56.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:56.965" endtime="20201117 14:42:56.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:56.968" endtime="20201117 14:42:56.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.967" endtime="20201117 14:42:56.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.963" endtime="20201117 14:42:56.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.596" endtime="20201117 14:42:56.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.196" endtime="20201117 14:42:56.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.195" endtime="20201117 14:42:56.990"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:56.992" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.000" endtime="20201117 14:42:57.020"></status>
</kw>
<msg timestamp="20201117 14:42:57.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:56.999" endtime="20201117 14:42:57.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.021" endtime="20201117 14:42:57.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.024" endtime="20201117 14:42:57.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.996" endtime="20201117 14:42:57.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.994" endtime="20201117 14:42:57.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.033" endtime="20201117 14:42:57.316"></status>
</kw>
<msg timestamp="20201117 14:42:57.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024374472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.031" endtime="20201117 14:42:57.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024374472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024470208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.321" endtime="20201117 14:42:57.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.329" endtime="20201117 14:42:57.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.029" endtime="20201117 14:42:57.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.027" endtime="20201117 14:42:57.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.336" level="INFO">${RESULT} = [{'time': 0.024470208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.573599999999904e-05, 'source_diff': 9.573599999999904e-05}, {'time': 0.024571222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:57.333" endtime="20201117 14:42:57.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.349" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:57.337" endtime="20201117 14:42:57.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.354" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.353" endtime="20201117 14:42:57.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.356" level="INFO">VALUE: [9.573599999999904e-05, 9.595800000000015e-05, 9.618000000000126e-05, 9.613900000000203e-05, 9.637499999999924e-05, 9.655599999999764e-05, 9.566700000000067e-05, 9.57079999999999e-05, 9.601399999999843e-05, 9.655499999999817e-05, 9.63470000000001e-05, 9.581900000000046e-05, 9.631900000000096e-05, 9.569400000000033e-05, 9.56530000000011e-05, 9.65140000000024e-05, 9.591599999999798e-05, 9.649999999999936e-05, 9.56530000000011e-05, 9.600000000000233e-05, 9.650000000000283e-05, 9.565200000000162e-05, 9.581900000000046e-05, 9.568100000000024e-05, 9.586100000000264e-05, 9.611099999999942e-05, 9.61530000000016e-05, 9.600000000000233e-05, 9.568100000000024e-05, 9.586100000000264e-05, 9.63470000000001e-05, 9.599999999999886e-05, 9.65140000000024e-05, 9.633300000000053e-05, 9.64859999999998e-05, 9.618100000000074e-05, 9.568099999999677e-05, 9.601399999999843e-05, 9.58339999999995e-05, 9.568099999999677e-05, 9.65279999999985e-05, 9.58469999999996e-05, 9.56660000000012e-05, 9.654200000000154e-05, 9.583300000000003e-05, 9.61669999999977e-05, 9.6027999999998e-05, 9.584799999999907e-05, 9.619499999999684e-05, 9.601399999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.355" endtime="20201117 14:42:57.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.350" endtime="20201117 14:42:57.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.359" endtime="20201117 14:42:57.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.363" endtime="20201117 14:42:57.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.361" endtime="20201117 14:42:57.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.358" endtime="20201117 14:42:57.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.993" endtime="20201117 14:42:57.383"></status>
</kw>
<msg timestamp="20201117 14:42:57.384" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.392" endtime="20201117 14:42:57.411"></status>
</kw>
<msg timestamp="20201117 14:42:57.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.390" endtime="20201117 14:42:57.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.413" endtime="20201117 14:42:57.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.415" endtime="20201117 14:42:57.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.388" endtime="20201117 14:42:57.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.386" endtime="20201117 14:42:57.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.425" endtime="20201117 14:42:57.710"></status>
</kw>
<msg timestamp="20201117 14:42:57.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:57.424" endtime="20201117 14:42:57.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:42:57.715" endtime="20201117 14:42:57.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.723" endtime="20201117 14:42:57.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.421" endtime="20201117 14:42:57.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.419" endtime="20201117 14:42:57.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:57.730" level="INFO">${RESULT} = [{'time': 0.0218715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.590299999999788e-05, 'source_diff': 9.590299999999788e-05}, {'time': 0.021979514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:42:57.727" endtime="20201117 14:42:57.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:57.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:57.731" endtime="20201117 14:42:57.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.748" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:42:57.747" endtime="20201117 14:42:57.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.750" level="INFO">VALUE: [9.590299999999788e-05, 9.586099999999917e-05, 9.636099999999967e-05, 9.602800000000147e-05, 9.606900000000071e-05, 9.650000000000283e-05, 9.568100000000024e-05, 9.586099999999917e-05, 9.60140000000019e-05, 9.586100000000264e-05, 9.61799999999978e-05, 9.599999999999886e-05, 9.588899999999831e-05, 9.63470000000001e-05, 9.569499999999981e-05, 9.62080000000004e-05, 9.584799999999907e-05, 9.63470000000001e-05, 9.65140000000024e-05, 9.583300000000003e-05, 9.563899999999806e-05, 9.56669999999972e-05, 9.618099999999727e-05, 9.600000000000233e-05, 9.58469999999996e-05, 9.65279999999985e-05, 9.60409999999981e-05, 9.604100000000157e-05, 9.649999999999936e-05, 9.654199999999807e-05, 9.56660000000012e-05, 9.568000000000076e-05, 9.633300000000053e-05, 9.566700000000067e-05, 9.618100000000074e-05, 9.651399999999893e-05, 9.584799999999907e-05, 9.58339999999995e-05, 9.570800000000337e-05, 9.651399999999893e-05, 9.568100000000024e-05, 9.619400000000083e-05, 9.568100000000024e-05, 9.59859999999993e-05, 9.649999999999936e-05, 9.581999999999993e-05, 9.569499999999981e-05, 9.618100000000074e-05, 9.63470000000001e-05, 9.620799999999693e-05]</msg>
<status status="PASS" starttime="20201117 14:42:57.749" endtime="20201117 14:42:57.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.744" endtime="20201117 14:42:57.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.753" endtime="20201117 14:42:57.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:57.757" endtime="20201117 14:42:57.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.755" endtime="20201117 14:42:57.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.752" endtime="20201117 14:42:57.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.384" endtime="20201117 14:42:57.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.991" endtime="20201117 14:42:57.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:56.990" endtime="20201117 14:42:57.778"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.780" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.788" endtime="20201117 14:42:57.808"></status>
</kw>
<msg timestamp="20201117 14:42:57.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.787" endtime="20201117 14:42:57.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:57.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:57.810" endtime="20201117 14:42:57.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.812" endtime="20201117 14:42:57.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.784" endtime="20201117 14:42:57.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.782" endtime="20201117 14:42:57.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:57.822" endtime="20201117 14:42:58.108"></status>
</kw>
<msg timestamp="20201117 14:42:58.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025065472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025162833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:57.820" endtime="20201117 14:42:58.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025065472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025162833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.112" endtime="20201117 14:42:58.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.120" endtime="20201117 14:42:58.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.817" endtime="20201117 14:42:58.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.816" endtime="20201117 14:42:58.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.127" level="INFO">${RESULT} = [{'time': 0.025162833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736100000000067e-05, 'source_diff': 9.736100000000067e-05}, {'time': 0.025264861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.123" endtime="20201117 14:42:58.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.141" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:58.128" endtime="20201117 14:42:58.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.145" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.144" endtime="20201117 14:42:58.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.148" level="INFO">VALUE: [9.736100000000067e-05, 9.68470000000006e-05, 9.745800000000165e-05, 9.666700000000167e-05, 9.73470000000011e-05, 9.736100000000067e-05, 9.7027999999999e-05, 9.734800000000057e-05, 9.669399999999786e-05, 9.686100000000017e-05, 9.66660000000022e-05, 9.731899999999849e-05, 9.680500000000189e-05, 9.669399999999786e-05, 9.73470000000011e-05, 9.668099999999777e-05, 9.68470000000006e-05, 9.66530000000021e-05, 9.666700000000167e-05, 9.686100000000017e-05, 9.666599999999873e-05, 9.687499999999974e-05, 9.71799999999988e-05, 9.73470000000011e-05, 9.704200000000204e-05, 9.701399999999943e-05, 9.701399999999943e-05, 9.702699999999953e-05, 9.684800000000007e-05, 9.73470000000011e-05, 9.718000000000226e-05, 9.716599999999923e-05, 9.73470000000011e-05, 9.665299999999863e-05, 9.737500000000024e-05, 9.73609999999972e-05, 9.751399999999993e-05, 9.722200000000097e-05, 9.684800000000007e-05, 9.686199999999964e-05, 9.751399999999993e-05, 9.669400000000133e-05, 9.716599999999923e-05, 9.73470000000011e-05, 9.683299999999756e-05, 9.699999999999986e-05, 9.683300000000103e-05, 9.730600000000186e-05, 9.734800000000057e-05, 9.719400000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.146" endtime="20201117 14:42:58.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.142" endtime="20201117 14:42:58.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.151" endtime="20201117 14:42:58.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.154" endtime="20201117 14:42:58.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.153" endtime="20201117 14:42:58.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.149" endtime="20201117 14:42:58.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.781" endtime="20201117 14:42:58.175"></status>
</kw>
<msg timestamp="20201117 14:42:58.175" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.183" endtime="20201117 14:42:58.202"></status>
</kw>
<msg timestamp="20201117 14:42:58.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.182" endtime="20201117 14:42:58.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.204" endtime="20201117 14:42:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.207" endtime="20201117 14:42:58.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.179" endtime="20201117 14:42:58.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.177" endtime="20201117 14:42:58.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.217" endtime="20201117 14:42:58.501"></status>
</kw>
<msg timestamp="20201117 14:42:58.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.215" endtime="20201117 14:42:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.505" endtime="20201117 14:42:58.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.514" endtime="20201117 14:42:58.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.213" endtime="20201117 14:42:58.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.211" endtime="20201117 14:42:58.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.520" level="INFO">${RESULT} = [{'time': 0.021891111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.726399999999968e-05, 'source_diff': 9.726399999999968e-05}, {'time': 0.021997097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.517" endtime="20201117 14:42:58.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.533" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:58.521" endtime="20201117 14:42:58.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.538" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.537" endtime="20201117 14:42:58.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.540" level="INFO">VALUE: [9.726399999999968e-05, 9.668000000000176e-05, 9.719400000000183e-05, 9.668000000000176e-05, 9.718099999999827e-05, 9.680600000000136e-05, 9.668100000000124e-05, 9.73479999999971e-05, 9.701299999999996e-05, 9.699999999999986e-05, 9.67080000000009e-05, 9.758400000000125e-05, 9.66799999999983e-05, 9.723700000000002e-05, 9.68470000000006e-05, 9.733299999999806e-05, 9.751399999999993e-05, 9.679199999999832e-05, 9.748599999999732e-05, 9.66530000000021e-05, 9.666599999999873e-05, 9.668000000000176e-05, 9.733299999999806e-05, 9.73470000000011e-05, 9.690299999999888e-05, 9.686100000000017e-05, 9.66669999999982e-05, 9.668099999999777e-05, 9.716700000000217e-05, 9.669400000000133e-05, 9.68470000000006e-05, 9.701399999999943e-05, 9.686100000000017e-05, 9.701399999999943e-05, 9.73470000000011e-05, 9.71669999999987e-05, 9.67920000000018e-05, 9.71669999999987e-05, 9.750000000000036e-05, 9.718099999999827e-05, 9.745799999999818e-05, 9.701399999999943e-05, 9.668000000000176e-05, 9.744399999999862e-05, 9.699999999999986e-05, 9.73470000000011e-05, 9.682000000000093e-05, 9.668100000000124e-05, 9.75279999999995e-05, 9.705500000000214e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.539" endtime="20201117 14:42:58.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.534" endtime="20201117 14:42:58.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.544" endtime="20201117 14:42:58.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.547" endtime="20201117 14:42:58.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.545" endtime="20201117 14:42:58.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.542" endtime="20201117 14:42:58.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.176" endtime="20201117 14:42:58.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.779" endtime="20201117 14:42:58.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:57.778" endtime="20201117 14:42:58.568"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.570" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.579" endtime="20201117 14:42:58.598"></status>
</kw>
<msg timestamp="20201117 14:42:58.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.577" endtime="20201117 14:42:58.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.599" endtime="20201117 14:42:58.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.602" endtime="20201117 14:42:58.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.574" endtime="20201117 14:42:58.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.572" endtime="20201117 14:42:58.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.611" endtime="20201117 14:42:58.897"></status>
</kw>
<msg timestamp="20201117 14:42:58.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025065486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.609" endtime="20201117 14:42:58.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025065486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025164056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:58.901" endtime="20201117 14:42:58.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.909" endtime="20201117 14:42:58.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.607" endtime="20201117 14:42:58.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.605" endtime="20201117 14:42:58.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:58.916" level="INFO">${RESULT} = [{'time': 0.025164056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.856999999999921e-05, 'source_diff': 9.856999999999921e-05}, {'time': 0.025271083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:58.912" endtime="20201117 14:42:58.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:58.929" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:58.917" endtime="20201117 14:42:58.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.934" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:58.933" endtime="20201117 14:42:58.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.936" level="INFO">VALUE: [9.856999999999921e-05, 9.783299999999856e-05, 9.851399999999746e-05, 9.768000000000276e-05, 9.819400000000283e-05, 9.840300000000038e-05, 9.78609999999977e-05, 9.78479999999976e-05, 9.836200000000114e-05, 9.81669999999997e-05, 9.800000000000086e-05, 9.855599999999964e-05, 9.834699999999863e-05, 9.836100000000167e-05, 9.801400000000043e-05, 9.85280000000005e-05, 9.818099999999927e-05, 9.801400000000043e-05, 9.79730000000012e-05, 9.850000000000136e-05, 9.77080000000019e-05, 9.79860000000013e-05, 9.81799999999998e-05, 9.81799999999998e-05, 9.81799999999998e-05, 9.813900000000056e-05, 9.768100000000224e-05, 9.83609999999982e-05, 9.763900000000006e-05, 9.76669999999992e-05, 9.800000000000086e-05, 9.85280000000005e-05, 9.85280000000005e-05, 9.833299999999906e-05, 9.83609999999982e-05, 9.790299999999988e-05, 9.851399999999746e-05, 9.768100000000224e-05, 9.801400000000043e-05, 9.784800000000107e-05, 9.765299999999963e-05, 9.851399999999746e-05, 9.79999999999974e-05, 9.818000000000326e-05, 9.768000000000276e-05, 9.784699999999813e-05, 9.827800000000025e-05, 9.76669999999992e-05, 9.78340000000015e-05, 9.798599999999782e-05]</msg>
<status status="PASS" starttime="20201117 14:42:58.935" endtime="20201117 14:42:58.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.930" endtime="20201117 14:42:58.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.939" endtime="20201117 14:42:58.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:58.942" endtime="20201117 14:42:58.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.941" endtime="20201117 14:42:58.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.937" endtime="20201117 14:42:58.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.571" endtime="20201117 14:42:58.963"></status>
</kw>
<msg timestamp="20201117 14:42:58.964" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.972" endtime="20201117 14:42:58.991"></status>
</kw>
<msg timestamp="20201117 14:42:58.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.970" endtime="20201117 14:42:58.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:58.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:58.993" endtime="20201117 14:42:58.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:58.995" endtime="20201117 14:42:58.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.968" endtime="20201117 14:42:58.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.966" endtime="20201117 14:42:58.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.005" endtime="20201117 14:42:59.291"></status>
</kw>
<msg timestamp="20201117 14:42:59.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.004" endtime="20201117 14:42:59.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.295" endtime="20201117 14:42:59.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.303" endtime="20201117 14:42:59.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.001" endtime="20201117 14:42:59.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.000" endtime="20201117 14:42:59.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.310" level="INFO">${RESULT} = [{'time': 0.022713417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.773600000000104e-05, 'source_diff': 9.773600000000104e-05}, {'time': 0.022824431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.306" endtime="20201117 14:42:59.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.323" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:59.311" endtime="20201117 14:42:59.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.327" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.326" endtime="20201117 14:42:59.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.330" level="INFO">VALUE: [9.773600000000104e-05, 9.801400000000043e-05, 9.783299999999856e-05, 9.831899999999949e-05, 9.766599999999973e-05, 9.765299999999963e-05, 9.84999999999979e-05, 9.78470000000016e-05, 9.851400000000093e-05, 9.768100000000224e-05, 9.76669999999992e-05, 9.78470000000016e-05, 9.765299999999963e-05, 9.784699999999813e-05, 9.784699999999813e-05, 9.770899999999791e-05, 9.85280000000005e-05, 9.851400000000093e-05, 9.769500000000181e-05, 9.769500000000181e-05, 9.834800000000157e-05, 9.81669999999997e-05, 9.798700000000077e-05, 9.834699999999863e-05, 9.816599999999676e-05, 9.83609999999982e-05, 9.784699999999813e-05, 9.851400000000093e-05, 9.81669999999997e-05, 9.819499999999884e-05, 9.786199999999717e-05, 9.815300000000013e-05, 9.76669999999992e-05, 9.848599999999832e-05, 9.816600000000023e-05, 9.783299999999856e-05, 9.81669999999997e-05, 9.768099999999877e-05, 9.762500000000049e-05, 9.804199999999957e-05, 9.801400000000043e-05, 9.815300000000013e-05, 9.81669999999997e-05, 9.786100000000117e-05, 9.77080000000019e-05, 9.850000000000136e-05, 9.766700000000267e-05, 9.769499999999834e-05, 9.85280000000005e-05, 9.83479999999981e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.328" endtime="20201117 14:42:59.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.324" endtime="20201117 14:42:59.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.333" endtime="20201117 14:42:59.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.337" endtime="20201117 14:42:59.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.335" endtime="20201117 14:42:59.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.331" endtime="20201117 14:42:59.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.964" endtime="20201117 14:42:59.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.569" endtime="20201117 14:42:59.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:58.568" endtime="20201117 14:42:59.358"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.360" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.368" endtime="20201117 14:42:59.389"></status>
</kw>
<msg timestamp="20201117 14:42:59.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.367" endtime="20201117 14:42:59.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.390" endtime="20201117 14:42:59.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.393" endtime="20201117 14:42:59.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.364" endtime="20201117 14:42:59.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.362" endtime="20201117 14:42:59.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.402" endtime="20201117 14:42:59.687"></status>
</kw>
<msg timestamp="20201117 14:42:59.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.400" endtime="20201117 14:42:59.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025120014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025219597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.691" endtime="20201117 14:42:59.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.700" endtime="20201117 14:42:59.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.397" endtime="20201117 14:42:59.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.396" endtime="20201117 14:42:59.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:42:59.706" level="INFO">${RESULT} = [{'time': 0.025219597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.958300000000031e-05, 'source_diff': 9.958300000000031e-05}, {'time': 0.025327611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:42:59.703" endtime="20201117 14:42:59.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:42:59.721" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:42:59.707" endtime="20201117 14:42:59.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.726" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:42:59.725" endtime="20201117 14:42:59.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.729" level="INFO">VALUE: [9.958300000000031e-05, 9.934699999999963e-05, 9.951399999999846e-05, 9.954200000000107e-05, 9.918100000000027e-05, 9.951400000000193e-05, 9.89020000000014e-05, 9.952699999999856e-05, 9.929200000000082e-05, 9.923600000000254e-05, 9.901399999999796e-05, 9.934699999999963e-05, 9.865300000000063e-05, 9.934699999999963e-05, 9.90419999999971e-05, 9.869499999999934e-05, 9.93479999999991e-05, 9.901399999999796e-05, 9.879200000000032e-05, 9.89860000000023e-05, 9.887499999999827e-05, 9.901399999999796e-05, 9.869399999999987e-05, 9.934699999999963e-05, 9.931999999999996e-05, 9.952799999999803e-05, 9.951400000000193e-05, 9.892999999999708e-05, 9.881999999999946e-05, 9.931900000000049e-05, 9.902799999999753e-05, 9.913899999999809e-05, 9.883299999999956e-05, 9.870899999999891e-05, 9.934699999999963e-05, 9.886200000000164e-05, 9.901399999999796e-05, 9.906900000000024e-05, 9.888900000000131e-05, 9.920799999999994e-05, 9.948599999999932e-05, 9.881899999999999e-05, 9.919400000000037e-05, 9.9028000000001e-05, 9.919499999999984e-05, 9.870899999999891e-05, 9.868100000000324e-05, 9.88609999999987e-05, 9.901300000000196e-05, 9.916600000000123e-05]</msg>
<status status="PASS" starttime="20201117 14:42:59.727" endtime="20201117 14:42:59.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.722" endtime="20201117 14:42:59.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.732" endtime="20201117 14:42:59.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:42:59.736" endtime="20201117 14:42:59.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.734" endtime="20201117 14:42:59.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.731" endtime="20201117 14:42:59.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.361" endtime="20201117 14:42:59.756"></status>
</kw>
<msg timestamp="20201117 14:42:59.757" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.765" endtime="20201117 14:42:59.784"></status>
</kw>
<msg timestamp="20201117 14:42:59.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.763" endtime="20201117 14:42:59.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:42:59.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:42:59.786" endtime="20201117 14:42:59.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.788" endtime="20201117 14:42:59.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.761" endtime="20201117 14:42:59.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.759" endtime="20201117 14:42:59.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:42:59.798" endtime="20201117 14:43:00.083"></status>
</kw>
<msg timestamp="20201117 14:43:00.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:42:59.797" endtime="20201117 14:43:00.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.087" endtime="20201117 14:43:00.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.096" endtime="20201117 14:43:00.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.794" endtime="20201117 14:43:00.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.792" endtime="20201117 14:43:00.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.102" level="INFO">${RESULT} = [{'time': 0.021875306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.957000000000021e-05, 'source_diff': 9.957000000000021e-05}, {'time': 0.021984333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.099" endtime="20201117 14:43:00.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.103" endtime="20201117 14:43:00.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.120" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.119" endtime="20201117 14:43:00.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.122" level="INFO">VALUE: [9.957000000000021e-05, 9.93470000000031e-05, 9.951399999999846e-05, 9.880500000000042e-05, 9.898599999999882e-05, 9.951400000000193e-05, 9.951399999999846e-05, 9.86670000000002e-05, 9.86670000000002e-05, 9.886100000000217e-05, 9.868099999999977e-05, 9.890300000000088e-05, 9.884699999999913e-05, 9.951399999999846e-05, 9.94999999999989e-05, 9.951399999999846e-05, 9.93609999999992e-05, 9.933399999999953e-05, 9.915300000000113e-05, 9.933399999999953e-05, 9.919400000000037e-05, 9.884699999999913e-05, 9.93609999999992e-05, 9.934699999999963e-05, 9.86670000000002e-05, 9.955600000000064e-05, 9.934699999999963e-05, 9.868099999999977e-05, 9.883399999999903e-05, 9.91670000000007e-05, 9.868099999999977e-05, 9.901299999999849e-05, 9.934699999999963e-05, 9.86670000000002e-05, 9.918100000000027e-05, 9.934699999999963e-05, 9.887500000000174e-05, 9.91670000000007e-05, 9.938899999999834e-05, 9.86670000000002e-05, 9.884800000000207e-05, 9.919400000000037e-05, 9.8721999999999e-05, 9.934699999999963e-05, 9.900000000000186e-05, 9.890300000000088e-05, 9.887500000000174e-05, 9.948599999999932e-05, 9.887500000000174e-05, 9.868099999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:43:00.121" endtime="20201117 14:43:00.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.116" endtime="20201117 14:43:00.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.126" endtime="20201117 14:43:00.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.129" endtime="20201117 14:43:00.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.128" endtime="20201117 14:43:00.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.124" endtime="20201117 14:43:00.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.757" endtime="20201117 14:43:00.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.359" endtime="20201117 14:43:00.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:59.358" endtime="20201117 14:43:00.150"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.153" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.161" endtime="20201117 14:43:00.180"></status>
</kw>
<msg timestamp="20201117 14:43:00.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.159" endtime="20201117 14:43:00.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.182" endtime="20201117 14:43:00.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.184" endtime="20201117 14:43:00.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.157" endtime="20201117 14:43:00.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.155" endtime="20201117 14:43:00.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.193" endtime="20201117 14:43:00.479"></status>
</kw>
<msg timestamp="20201117 14:43:00.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024322056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.192" endtime="20201117 14:43:00.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024322056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024421903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.484" endtime="20201117 14:43:00.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.492" endtime="20201117 14:43:00.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.189" endtime="20201117 14:43:00.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.187" endtime="20201117 14:43:00.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.498" level="INFO">${RESULT} = [{'time': 0.024421903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.984699999999666e-05, 'source_diff': 9.984699999999666e-05}, {'time': 0.024536903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.495" endtime="20201117 14:43:00.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.511" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.499" endtime="20201117 14:43:00.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.516" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.515" endtime="20201117 14:43:00.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.519" level="INFO">VALUE: [9.984699999999666e-05, 0.00010034699999999716, 9.99999999999994e-05, 0.00010017999999999833, 0.00010027699999999931, 9.984700000000013e-05, 9.984700000000013e-05, 0.00010034700000000063, 9.962499999999902e-05, 9.968100000000077e-05, 0.00010001400000000243, 9.983400000000003e-05, 0.00010019400000000137, 0.00010002699999999906, 9.984700000000013e-05, 0.00010052799999999903, 9.96800000000013e-05, 0.00010009700000000038, 0.00010034699999999716, 0.00010051399999999946, 9.99999999999994e-05, 9.966699999999773e-05, 0.0001003480000000001, 9.969400000000087e-05, 0.00010001299999999949, 0.00010033300000000106, 0.00010034700000000063, 0.0001001670000000017, 9.99999999999994e-05, 0.00010001400000000243, 0.00010034700000000063, 0.0001004999999999999, 0.00010034700000000063, 9.966600000000173e-05, 0.00010000000000000286, 9.965199999999869e-05, 0.00010015300000000213, 0.0001003610000000002, 0.00010016699999999823, 0.0001001809999999978, 9.984700000000013e-05, 0.00010051399999999946, 0.0001003610000000002, 0.00010005500000000167, 9.99999999999994e-05, 0.00010033300000000106, 0.00010031900000000149, 9.970899999999991e-05, 0.00010000000000000286, 0.00010036099999999673]</msg>
<status status="PASS" starttime="20201117 14:43:00.517" endtime="20201117 14:43:00.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.512" endtime="20201117 14:43:00.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.522" endtime="20201117 14:43:00.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.525" endtime="20201117 14:43:00.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.524" endtime="20201117 14:43:00.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.520" endtime="20201117 14:43:00.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.153" endtime="20201117 14:43:00.546"></status>
</kw>
<msg timestamp="20201117 14:43:00.546" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.554" endtime="20201117 14:43:00.574"></status>
</kw>
<msg timestamp="20201117 14:43:00.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.553" endtime="20201117 14:43:00.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.576" endtime="20201117 14:43:00.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.578" endtime="20201117 14:43:00.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.550" endtime="20201117 14:43:00.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.548" endtime="20201117 14:43:00.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.588" endtime="20201117 14:43:00.874"></status>
</kw>
<msg timestamp="20201117 14:43:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.587" endtime="20201117 14:43:00.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.878" endtime="20201117 14:43:00.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.886" endtime="20201117 14:43:00.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.584" endtime="20201117 14:43:00.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.582" endtime="20201117 14:43:00.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:00.892" level="INFO">${RESULT} = [{'time': 0.022079528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.993100000000102e-05, 'source_diff': 9.993100000000102e-05}, {'time': 0.022193514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:00.889" endtime="20201117 14:43:00.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:00.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:00.893" endtime="20201117 14:43:00.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.910" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:43:00.909" endtime="20201117 14:43:00.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.913" level="INFO">VALUE: [9.993100000000102e-05, 9.965300000000163e-05, 0.00010001399999999896, 0.0001003480000000001, 0.00010051399999999946, 9.966600000000173e-05, 0.00010051400000000293, 0.0001003610000000002, 9.96800000000013e-05, 0.00010033299999999759, 0.0001001670000000017, 9.99999999999994e-05, 0.0001004999999999999, 9.968100000000077e-05, 0.00010033400000000053, 9.96800000000013e-05, 0.00010034700000000063, 0.00010001399999999896, 9.98609999999997e-05, 9.969500000000034e-05, 0.0001003610000000002, 0.00010048600000000033, 9.96670000000012e-05, 9.96670000000012e-05, 0.00010002699999999906, 9.966600000000173e-05, 9.981899999999752e-05, 9.984700000000013e-05, 0.00010033300000000106, 0.00010034700000000063, 0.00010034700000000063, 0.00010033400000000053, 9.969500000000034e-05, 0.00010033399999999706, 0.00010052699999999956, 9.967999999999783e-05, 0.00010017999999999833, 0.00010051400000000293, 9.99999999999994e-05, 9.984700000000013e-05, 0.0001000419999999981, 0.00010033400000000053, 0.00010051399999999946, 9.983400000000003e-05, 9.984700000000013e-05, 0.0001004999999999999, 9.990299999999841e-05, 9.99999999999994e-05, 0.00010034700000000063, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201117 14:43:00.911" endtime="20201117 14:43:00.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.907" endtime="20201117 14:43:00.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.916" endtime="20201117 14:43:00.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:00.919" endtime="20201117 14:43:00.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.918" endtime="20201117 14:43:00.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.914" endtime="20201117 14:43:00.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.547" endtime="20201117 14:43:00.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.152" endtime="20201117 14:43:00.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.151" endtime="20201117 14:43:00.941"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.943" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.951" endtime="20201117 14:43:00.971"></status>
</kw>
<msg timestamp="20201117 14:43:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.949" endtime="20201117 14:43:00.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:00.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:00.973" endtime="20201117 14:43:00.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.975" endtime="20201117 14:43:00.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.947" endtime="20201117 14:43:00.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.945" endtime="20201117 14:43:00.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:00.984" endtime="20201117 14:43:01.270"></status>
</kw>
<msg timestamp="20201117 14:43:01.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025131681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:00.983" endtime="20201117 14:43:01.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025131681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.274" endtime="20201117 14:43:01.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.282" endtime="20201117 14:43:01.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.980" endtime="20201117 14:43:01.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.979" endtime="20201117 14:43:01.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.289" level="INFO">${RESULT} = [{'time': 0.025131681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010073700000000005, 'source_diff': 0.00010073700000000005}, {'time': 0.025241681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:01.285" endtime="20201117 14:43:01.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.303" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:01.290" endtime="20201117 14:43:01.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.307" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.306" endtime="20201117 14:43:01.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.310" level="INFO">VALUE: [0.00010073700000000005, 0.0001013199999999985, 0.00010102700000000006, 0.00010101399999999996, 0.00010098600000000083, 0.00010152800000000003, 0.00010101399999999996, 0.00010125000000000065, 0.00010109700000000138, 0.0001015000000000009, 0.00010062500000000002, 0.00010134799999999763, 0.00010084699999999766, 0.0001010000000000004, 0.00010134699999999816, 0.00010067999999999883, 0.00010134699999999816, 0.00010152800000000003, 0.00010140299999999991, 0.00010116699999999923, 0.000101513999999997, 0.00010067999999999883, 0.00010063800000000012, 0.00010066599999999926, 0.00010084700000000113, 0.00010151400000000046, 0.00010151400000000046, 0.0001011670000000027, 0.00010149999999999743, 0.0001015000000000009, 0.0001011939999999989, 0.00010109700000000138, 0.0001006800000000023, 0.00010066599999999926, 0.00010115299999999966, 0.00010133299999999859, 0.00010063899999999959, 0.00010120900000000141, 0.00010084700000000113, 0.00010151400000000046, 0.0001008610000000007, 0.00010084699999999766, 0.00010134699999999816, 0.00010066599999999926, 0.00010084700000000113, 0.00010149999999999743, 0.00010101399999999996, 0.00010148600000000133, 0.00010097299999999726, 0.00010136200000000067]</msg>
<status status="PASS" starttime="20201117 14:43:01.308" endtime="20201117 14:43:01.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.304" endtime="20201117 14:43:01.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.313" endtime="20201117 14:43:01.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.316" endtime="20201117 14:43:01.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.315" endtime="20201117 14:43:01.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.311" endtime="20201117 14:43:01.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.943" endtime="20201117 14:43:01.337"></status>
</kw>
<msg timestamp="20201117 14:43:01.337" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.345" endtime="20201117 14:43:01.365"></status>
</kw>
<msg timestamp="20201117 14:43:01.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.344" endtime="20201117 14:43:01.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.367" endtime="20201117 14:43:01.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.369" endtime="20201117 14:43:01.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.341" endtime="20201117 14:43:01.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.339" endtime="20201117 14:43:01.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.379" endtime="20201117 14:43:01.676"></status>
</kw>
<msg timestamp="20201117 14:43:01.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.377" endtime="20201117 14:43:01.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.685" endtime="20201117 14:43:01.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.705" endtime="20201117 14:43:01.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.375" endtime="20201117 14:43:01.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.373" endtime="20201117 14:43:01.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:01.720" level="INFO">${RESULT} = [{'time': 0.021998778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010155599999999917, 'source_diff': 0.00010155599999999917}, {'time': 0.022111792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:01.712" endtime="20201117 14:43:01.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:01.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:01.722" endtime="20201117 14:43:01.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.746" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:43:01.745" endtime="20201117 14:43:01.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.749" level="INFO">VALUE: [0.00010155599999999917, 0.00010132000000000196, 0.00010133400000000153, 0.00010082000000000146, 0.00010116599999999976, 0.0001010000000000004, 0.00010151400000000046, 0.00010088899999999984, 0.0001015419999999996, 0.00010156900000000274, 0.00010069499999999787, 0.00010086200000000017, 0.00010104099999999963, 0.00010101300000000049, 0.00010116599999999976, 0.00010134699999999816, 0.00010116599999999976, 0.0001010000000000004, 0.00010070900000000091, 0.00010084700000000113, 0.00010101399999999996, 0.00010101399999999996, 0.00010119400000000237, 0.0001010549999999992, 0.00010142999999999958, 0.00010129199999999935, 0.00010083300000000156, 0.00010151400000000046, 0.00010147199999999829, 0.00010116699999999923, 0.00010083400000000103, 0.0001008480000000006, 0.00010083400000000103, 0.0001008610000000007, 0.00010070800000000144, 0.0001006800000000023, 0.00010073600000000058, 0.00010118100000000227, 0.00010066699999999873, 0.000101513999999997, 0.0001011809999999988, 0.00010134699999999816, 0.00010117999999999933, 0.00010081900000000199, 0.0001008610000000007, 0.00010115299999999966, 0.00010101399999999996, 0.00010084700000000113, 0.00010075000000000014, 0.0001013610000000012]</msg>
<status status="PASS" starttime="20201117 14:43:01.747" endtime="20201117 14:43:01.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.742" endtime="20201117 14:43:01.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.753" endtime="20201117 14:43:01.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:01.756" endtime="20201117 14:43:01.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.755" endtime="20201117 14:43:01.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.751" endtime="20201117 14:43:01.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.338" endtime="20201117 14:43:01.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.942" endtime="20201117 14:43:01.777"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:00.941" endtime="20201117 14:43:01.778"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.780" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.788" endtime="20201117 14:43:01.809"></status>
</kw>
<msg timestamp="20201117 14:43:01.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.787" endtime="20201117 14:43:01.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:01.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:01.810" endtime="20201117 14:43:01.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.813" endtime="20201117 14:43:01.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.784" endtime="20201117 14:43:01.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.782" endtime="20201117 14:43:01.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:01.822" endtime="20201117 14:43:02.109"></status>
</kw>
<msg timestamp="20201117 14:43:02.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:01.821" endtime="20201117 14:43:02.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024930667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025032514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.113" endtime="20201117 14:43:02.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.122" endtime="20201117 14:43:02.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.818" endtime="20201117 14:43:02.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.816" endtime="20201117 14:43:02.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.129" level="INFO">${RESULT} = [{'time': 0.025032514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010184699999999866, 'source_diff': 0.00010184699999999866}, {'time': 0.025142528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:02.126" endtime="20201117 14:43:02.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.142" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.130" endtime="20201117 14:43:02.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.147" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.146" endtime="20201117 14:43:02.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.149" level="INFO">VALUE: [0.00010184699999999866, 0.00010184700000000213, 0.00010169499999999887, 0.00010186200000000117, 0.00010234699999999916, 0.00010180499999999995, 0.0001020139999999975, 0.00010218000000000033, 0.00010234699999999916, 0.00010222199999999904, 0.00010251400000000147, 0.00010233399999999906, 0.00010219499999999937, 0.00010199999999999793, 0.0001018610000000017, 0.00010234699999999916, 0.00010184699999999866, 0.0001023610000000022, 0.00010234699999999916, 0.00010243100000000005, 0.00010169500000000234, 0.00010199999999999793, 0.0001021939999999999, 0.00010182000000000246, 0.00010249999999999843, 0.0001025000000000019, 0.0001025420000000006, 0.00010218000000000033, 0.00010184699999999866, 0.00010183299999999909, 0.00010222199999999904, 0.000102513999999998, 0.0001016809999999993, 0.0001025000000000019, 0.00010167999999999983, 0.00010201400000000097, 0.00010167999999999983, 0.0001018749999999978, 0.00010197199999999879, 0.00010183300000000256, 0.0001020000000000014, 0.00010194499999999912, 0.00010251400000000147, 0.00010184699999999866, 0.000102513999999998, 0.00010251400000000147, 0.000102513999999998, 0.00010234699999999916, 0.00010251400000000147, 0.00010206899999999977]</msg>
<status status="PASS" starttime="20201117 14:43:02.148" endtime="20201117 14:43:02.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.143" endtime="20201117 14:43:02.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.153" endtime="20201117 14:43:02.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.156" endtime="20201117 14:43:02.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.154" endtime="20201117 14:43:02.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.151" endtime="20201117 14:43:02.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.781" endtime="20201117 14:43:02.177"></status>
</kw>
<msg timestamp="20201117 14:43:02.177" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.185" endtime="20201117 14:43:02.205"></status>
</kw>
<msg timestamp="20201117 14:43:02.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.184" endtime="20201117 14:43:02.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.207" endtime="20201117 14:43:02.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.210" endtime="20201117 14:43:02.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.181" endtime="20201117 14:43:02.213"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.179" endtime="20201117 14:43:02.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.220" endtime="20201117 14:43:02.506"></status>
</kw>
<msg timestamp="20201117 14:43:02.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.218" endtime="20201117 14:43:02.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022518986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.510" endtime="20201117 14:43:02.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.519" endtime="20201117 14:43:02.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.216" endtime="20201117 14:43:02.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.214" endtime="20201117 14:43:02.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.526" level="INFO">${RESULT} = [{'time': 0.022621583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010259699999999941, 'source_diff': 0.00010259699999999941}, {'time': 0.022729583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:02.522" endtime="20201117 14:43:02.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.539" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.527" endtime="20201117 14:43:02.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.543" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.542" endtime="20201117 14:43:02.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.546" level="INFO">VALUE: [0.00010259699999999941, 0.00010197200000000226, 0.0001025000000000019, 0.00010202800000000053, 0.00010236099999999873, 0.00010182000000000246, 0.00010184699999999866, 0.00010166699999999973, 0.00010165300000000016, 0.0001021939999999999, 0.00010251300000000199, 0.0001020139999999975, 0.00010167999999999983, 0.00010236099999999873, 0.00010216700000000023, 0.0001025000000000019, 0.0001020000000000014, 0.00010233399999999906, 0.00010184799999999813, 0.00010251400000000147, 0.00010231900000000002, 0.0001021939999999999, 0.0001025000000000019, 0.00010207000000000271, 0.00010252800000000103, 0.00010205599999999967, 0.00010183399999999856, 0.00010184700000000213, 0.00010199999999999793, 0.00010198699999999783, 0.00010233299999999959, 0.00010251400000000147, 0.00010186099999999823, 0.00010236099999999873, 0.0001016809999999993, 0.00010219500000000284, 0.0001018610000000017, 0.0001016809999999993, 0.00010168100000000277, 0.00010167999999999983, 0.000102513999999998, 0.00010249999999999843, 0.00010225000000000165, 0.00010198599999999836, 0.0001021809999999998, 0.00010183300000000256, 0.0001025000000000019, 0.00010216700000000023, 0.00010163799999999765, 0.00010236099999999873]</msg>
<status status="PASS" starttime="20201117 14:43:02.545" endtime="20201117 14:43:02.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.540" endtime="20201117 14:43:02.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.549" endtime="20201117 14:43:02.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.553" endtime="20201117 14:43:02.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.551" endtime="20201117 14:43:02.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.547" endtime="20201117 14:43:02.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.177" endtime="20201117 14:43:02.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.779" endtime="20201117 14:43:02.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:01.778" endtime="20201117 14:43:02.574"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.576" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.585" endtime="20201117 14:43:02.605"></status>
</kw>
<msg timestamp="20201117 14:43:02.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.583" endtime="20201117 14:43:02.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.607" endtime="20201117 14:43:02.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.610" endtime="20201117 14:43:02.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.581" endtime="20201117 14:43:02.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.578" endtime="20201117 14:43:02.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.619" endtime="20201117 14:43:02.905"></status>
</kw>
<msg timestamp="20201117 14:43:02.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026191653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026294431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.617" endtime="20201117 14:43:02.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026191653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026294431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:02.909" endtime="20201117 14:43:02.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.918" endtime="20201117 14:43:02.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.614" endtime="20201117 14:43:02.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.613" endtime="20201117 14:43:02.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:02.924" level="INFO">${RESULT} = [{'time': 0.026294431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010277800000000128, 'source_diff': 0.00010277800000000128}, {'time': 0.026409403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:02.921" endtime="20201117 14:43:02.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:02.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:02.926" endtime="20201117 14:43:02.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.944" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:02.943" endtime="20201117 14:43:02.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:02.946" level="INFO">VALUE: [0.00010277800000000128, 0.00010333400000000006, 0.00010318099999999733, 0.00010358299999999737, 0.00010259699999999941, 0.00010284700000000313, 0.00010331899999999755, 0.00010319399999999743, 0.00010351400000000247, 0.0001030139999999985, 0.00010334700000000016, 0.00010286099999999923, 0.0001035000000000029, 0.00010302700000000206, 0.00010316599999999829, 0.00010318000000000133, 0.00010267999999999736, 0.0001026940000000004, 0.00010352799999999857, 0.0001026810000000003, 0.00010282, 0.0001033480000000031, 0.00010282, 0.00010316700000000123, 0.00010340300000000191, 0.00010352799999999857, 0.00010355600000000117, 0.00010272299999999901, 0.00010302800000000154, 0.00010286099999999923, 0.00010286099999999923, 0.00010291699999999751, 0.00010283300000000009, 0.00010334700000000016, 0.00010301400000000197, 0.00010334700000000016, 0.00010334700000000016, 0.00010320899999999994, 0.00010333299999999712, 0.00010284699999999966, 0.0001026810000000003, 0.000103513999999999, 0.00010351400000000247, 0.00010336099999999973, 0.0001026940000000004, 0.00010306999999999678, 0.00010284700000000313, 0.00010337500000000277, 0.0001031810000000008, 0.00010299999999999893]</msg>
<status status="PASS" starttime="20201117 14:43:02.945" endtime="20201117 14:43:02.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.940" endtime="20201117 14:43:02.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.949" endtime="20201117 14:43:02.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:02.953" endtime="20201117 14:43:02.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.951" endtime="20201117 14:43:02.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.948" endtime="20201117 14:43:02.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.577" endtime="20201117 14:43:02.974"></status>
</kw>
<msg timestamp="20201117 14:43:02.974" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:02.983" endtime="20201117 14:43:03.002"></status>
</kw>
<msg timestamp="20201117 14:43:03.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:02.981" endtime="20201117 14:43:03.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.004" endtime="20201117 14:43:03.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.006" endtime="20201117 14:43:03.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.978" endtime="20201117 14:43:03.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.976" endtime="20201117 14:43:03.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.017" endtime="20201117 14:43:03.303"></status>
</kw>
<msg timestamp="20201117 14:43:03.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.015" endtime="20201117 14:43:03.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.307" endtime="20201117 14:43:03.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.316" endtime="20201117 14:43:03.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.012" endtime="20201117 14:43:03.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.011" endtime="20201117 14:43:03.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.323" level="INFO">${RESULT} = [{'time': 0.022309125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010340299999999844, 'source_diff': 0.00010340299999999844}, {'time': 0.022423125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:03.320" endtime="20201117 14:43:03.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:03.324" endtime="20201117 14:43:03.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.341" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.340" endtime="20201117 14:43:03.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.343" level="INFO">VALUE: [0.00010340299999999844, 0.00010283300000000009, 0.0001033200000000005, 0.00010266700000000073, 0.00010284799999999913, 0.00010336099999999973, 0.00010284699999999966, 0.00010284699999999966, 0.00010333299999999712, 0.00010333300000000059, 0.00010266700000000073, 0.0001035420000000016, 0.00010320899999999994, 0.00010298599999999936, 0.0001030000000000024, 0.00010280499999999748, 0.00010327700000000231, 0.0001030000000000024, 0.00010267999999999736, 0.00010270899999999944, 0.00010286099999999923, 0.00010284699999999966, 0.00010352799999999857, 0.00010334799999999963, 0.00010281900000000052, 0.00010342999999999811, 0.00010336099999999973, 0.0001030139999999985, 0.0001030139999999985, 0.00010351400000000247, 0.00010286099999999923, 0.00010283300000000009, 0.00010316700000000123, 0.00010283399999999956, 0.0001031810000000008, 0.00010318000000000133, 0.00010301400000000197, 0.000103513999999999, 0.00010316700000000123, 0.00010259700000000288, 0.00010269499999999987, 0.00010351400000000247, 0.0001030000000000024, 0.00010284699999999966, 0.00010349999999999943, 0.00010352799999999857, 0.00010267999999999736, 0.00010334699999999669, 0.00010266700000000073, 0.00010336099999999973]</msg>
<status status="PASS" starttime="20201117 14:43:03.342" endtime="20201117 14:43:03.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.337" endtime="20201117 14:43:03.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.347" endtime="20201117 14:43:03.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.350" endtime="20201117 14:43:03.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.349" endtime="20201117 14:43:03.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.345" endtime="20201117 14:43:03.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.975" endtime="20201117 14:43:03.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.575" endtime="20201117 14:43:03.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:02.574" endtime="20201117 14:43:03.371"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.373" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.382" endtime="20201117 14:43:03.401"></status>
</kw>
<msg timestamp="20201117 14:43:03.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.380" endtime="20201117 14:43:03.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.403" endtime="20201117 14:43:03.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.406" endtime="20201117 14:43:03.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.378" endtime="20201117 14:43:03.408"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.375" endtime="20201117 14:43:03.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.415" endtime="20201117 14:43:03.702"></status>
</kw>
<msg timestamp="20201117 14:43:03.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.413" endtime="20201117 14:43:03.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024770875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.706" endtime="20201117 14:43:03.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.714" endtime="20201117 14:43:03.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.410" endtime="20201117 14:43:03.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.409" endtime="20201117 14:43:03.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:03.722" level="INFO">${RESULT} = [{'time': 0.024874736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010386100000000023, 'source_diff': 0.00010386100000000023}, {'time': 0.024992764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:03.718" endtime="20201117 14:43:03.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:03.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:03.723" endtime="20201117 14:43:03.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.739" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:03.738" endtime="20201117 14:43:03.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.742" level="INFO">VALUE: [0.00010386100000000023, 0.00010450000000000043, 0.00010434700000000116, 0.00010393100000000155, 0.00010418099999999833, 0.00010384800000000013, 0.00010426399999999975, 0.00010417999999999886, 0.00010434700000000116, 0.00010368000000000183, 0.00010452799999999957, 0.00010430600000000192, 0.00010386100000000023, 0.000104514, 0.00010447299999999729, 0.00010450000000000043, 0.00010416600000000276, 0.00010448600000000086, 0.00010399999999999993, 0.000104514, 0.000104514, 0.00010384700000000066, 0.00010383400000000056, 0.00010384800000000013, 0.00010366700000000173, 0.00010402699999999959, 0.00010386100000000023, 0.00010434699999999769, 0.00010434700000000116, 0.00010399999999999993, 0.000104514, 0.0001040139999999995, 0.00010384800000000013, 0.00010450000000000043, 0.00010449999999999696, 0.00010419399999999843, 0.000104514, 0.00010415300000000266, 0.00010384699999999719, 0.00010441599999999954, 0.00010455600000000217, 0.00010413900000000309, 0.00010384800000000013, 0.00010452699999999662, 0.0001038749999999998, 0.00010401400000000297, 0.0001040139999999995, 0.00010434699999999769, 0.00010384700000000066, 0.00010383300000000109]</msg>
<status status="PASS" starttime="20201117 14:43:03.741" endtime="20201117 14:43:03.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.736" endtime="20201117 14:43:03.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.745" endtime="20201117 14:43:03.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:03.749" endtime="20201117 14:43:03.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.747" endtime="20201117 14:43:03.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.744" endtime="20201117 14:43:03.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.374" endtime="20201117 14:43:03.770"></status>
</kw>
<msg timestamp="20201117 14:43:03.770" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.779" endtime="20201117 14:43:03.798"></status>
</kw>
<msg timestamp="20201117 14:43:03.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.777" endtime="20201117 14:43:03.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:03.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:03.800" endtime="20201117 14:43:03.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.802" endtime="20201117 14:43:03.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.774" endtime="20201117 14:43:03.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.772" endtime="20201117 14:43:03.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:03.813" endtime="20201117 14:43:04.099"></status>
</kw>
<msg timestamp="20201117 14:43:04.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:03.811" endtime="20201117 14:43:04.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.103" endtime="20201117 14:43:04.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.111" endtime="20201117 14:43:04.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.808" endtime="20201117 14:43:04.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.807" endtime="20201117 14:43:04.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.119" level="INFO">${RESULT} = [{'time': 0.022694208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010441599999999954, 'source_diff': 0.00010441599999999954}, {'time': 0.022806208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:04.114" endtime="20201117 14:43:04.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.132" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.120" endtime="20201117 14:43:04.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.137" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.136" endtime="20201117 14:43:04.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.139" level="INFO">VALUE: [0.00010441599999999954, 0.00010383300000000109, 0.00010402800000000254, 0.000104514, 0.0001038749999999998, 0.00010386099999999676, 0.00010402799999999907, 0.0001040139999999995, 0.00010380600000000142, 0.00010423599999999714, 0.00010422200000000104, 0.00010367999999999836, 0.00010456999999999828, 0.0001041949999999979, 0.0001036810000000013, 0.00010384800000000013, 0.00010402799999999907, 0.00010449999999999696, 0.00010413800000000015, 0.00010434699999999769, 0.00010450000000000043, 0.00010416699999999876, 0.00010398600000000036, 0.00010386100000000023, 0.00010450000000000043, 0.00010384700000000066, 0.00010418099999999833, 0.00010363899999999912, 0.00010368000000000183, 0.00010450000000000043, 0.00010454199999999914, 0.00010383299999999762, 0.00010398600000000036, 0.000104514, 0.0001038879999999999, 0.00010384800000000013, 0.000104514, 0.00010416599999999929, 0.00010434699999999769, 0.00010367999999999836, 0.00010365300000000216, 0.000104514, 0.00010383299999999762, 0.00010402799999999907, 0.0001043339999999976, 0.00010434800000000063, 0.0001040139999999995, 0.00010384700000000066, 0.00010402799999999907, 0.00010391700000000198]</msg>
<status status="PASS" starttime="20201117 14:43:04.138" endtime="20201117 14:43:04.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.133" endtime="20201117 14:43:04.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.142" endtime="20201117 14:43:04.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.146" endtime="20201117 14:43:04.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.144" endtime="20201117 14:43:04.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.141" endtime="20201117 14:43:04.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.771" endtime="20201117 14:43:04.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.372" endtime="20201117 14:43:04.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:03.371" endtime="20201117 14:43:04.167"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.169" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.177" endtime="20201117 14:43:04.198"></status>
</kw>
<msg timestamp="20201117 14:43:04.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.176" endtime="20201117 14:43:04.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.200" endtime="20201117 14:43:04.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.202" endtime="20201117 14:43:04.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.173" endtime="20201117 14:43:04.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.171" endtime="20201117 14:43:04.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.212" endtime="20201117 14:43:04.498"></status>
</kw>
<msg timestamp="20201117 14:43:04.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025394403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025499889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.210" endtime="20201117 14:43:04.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025394403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025499889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.502" endtime="20201117 14:43:04.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.510" endtime="20201117 14:43:04.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.207" endtime="20201117 14:43:04.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.206" endtime="20201117 14:43:04.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.518" level="INFO">${RESULT} = [{'time': 0.025499889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010548600000000186, 'source_diff': 0.00010548600000000186}, {'time': 0.025617889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:04.514" endtime="20201117 14:43:04.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.533" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.519" endtime="20201117 14:43:04.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.537" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.536" endtime="20201117 14:43:04.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.540" level="INFO">VALUE: [0.00010548600000000186, 0.00010484700000000166, 0.00010559699999999894, 0.00010536199999999774, 0.00010523599999999814, 0.00010501299999999755, 0.00010536100000000173, 0.00010486099999999776, 0.00010534700000000216, 0.00010516699999999976, 0.00010536100000000173, 0.000105514000000001, 0.00010513900000000062, 0.00010534799999999817, 0.00010472199999999807, 0.00010487499999999733, 0.0001047079999999985, 0.00010466599999999979, 0.00010548599999999839, 0.00010534699999999869, 0.00010534700000000216, 0.00010531999999999903, 0.00010500000000000093, 0.00010534800000000163, 0.00010501299999999755, 0.00010484699999999819, 0.00010534699999999869, 0.00010516699999999976, 0.00010468099999999883, 0.00010541600000000054, 0.0001050140000000005, 0.00010486099999999776, 0.00010486100000000123, 0.00010509800000000138, 0.00010544399999999968, 0.00010517999999999986, 0.00010467999999999936, 0.0001046940000000024, 0.0001046810000000023, 0.00010533299999999912, 0.00010534700000000216, 0.00010501399999999703, 0.00010466700000000273, 0.000105207999999999, 0.00010549999999999796, 0.00010466599999999979, 0.00010517999999999986, 0.00010500000000000093, 0.0001046810000000023, 0.00010533299999999912]</msg>
<status status="PASS" starttime="20201117 14:43:04.538" endtime="20201117 14:43:04.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.533" endtime="20201117 14:43:04.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.543" endtime="20201117 14:43:04.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.546" endtime="20201117 14:43:04.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.545" endtime="20201117 14:43:04.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.541" endtime="20201117 14:43:04.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.170" endtime="20201117 14:43:04.567"></status>
</kw>
<msg timestamp="20201117 14:43:04.567" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.575" endtime="20201117 14:43:04.595"></status>
</kw>
<msg timestamp="20201117 14:43:04.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.574" endtime="20201117 14:43:04.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.596" endtime="20201117 14:43:04.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.599" endtime="20201117 14:43:04.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.571" endtime="20201117 14:43:04.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.569" endtime="20201117 14:43:04.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.609" endtime="20201117 14:43:04.895"></status>
</kw>
<msg timestamp="20201117 14:43:04.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.607" endtime="20201117 14:43:04.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:04.899" endtime="20201117 14:43:04.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.907" endtime="20201117 14:43:04.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.605" endtime="20201117 14:43:04.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.603" endtime="20201117 14:43:04.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:04.914" level="INFO">${RESULT} = [{'time': 0.022043389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010476400000000025, 'source_diff': 0.00010476400000000025}, {'time': 0.022153375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:04.911" endtime="20201117 14:43:04.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:04.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:04.916" endtime="20201117 14:43:04.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.933" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:43:04.932" endtime="20201117 14:43:04.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.935" level="INFO">VALUE: [0.00010476400000000025, 0.00010483299999999862, 0.00010498600000000136, 0.00010552800000000057, 0.00010499999999999746, 0.0001047079999999985, 0.00010500000000000093, 0.00010516599999999682, 0.00010549999999999796, 0.00010466699999999926, 0.0001050140000000005, 0.00010500000000000093, 0.00010477799999999982, 0.00010552800000000057, 0.00010536100000000173, 0.00010534699999999869, 0.00010536100000000173, 0.00010484699999999819, 0.0001046940000000024, 0.00010534699999999869, 0.00010486099999999776, 0.0001050140000000005, 0.00010484799999999767, 0.00010534800000000163, 0.00010515300000000019, 0.00010486100000000123, 0.00010551399999999753, 0.00010517999999999986, 0.00010543000000000011, 0.00010551399999999753, 0.00010518099999999933, 0.00010531999999999903, 0.00010534800000000163, 0.00010552699999999762, 0.00010550000000000143, 0.000105514000000001, 0.00010547199999999882, 0.00010517999999999986, 0.0001050140000000005, 0.00010468099999999883, 0.00010495900000000169, 0.00010536199999999774, 0.00010466699999999926, 0.00010551300000000152, 0.00010517999999999986, 0.00010466599999999979, 0.00010483299999999862, 0.00010469399999999893, 0.00010551399999999753, 0.0001051810000000028]</msg>
<status status="PASS" starttime="20201117 14:43:04.934" endtime="20201117 14:43:04.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.929" endtime="20201117 14:43:04.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.938" endtime="20201117 14:43:04.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:04.942" endtime="20201117 14:43:04.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.941" endtime="20201117 14:43:04.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.937" endtime="20201117 14:43:04.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.568" endtime="20201117 14:43:04.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.168" endtime="20201117 14:43:04.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.167" endtime="20201117 14:43:04.963"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.965" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.974" endtime="20201117 14:43:04.993"></status>
</kw>
<msg timestamp="20201117 14:43:04.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.972" endtime="20201117 14:43:04.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:04.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:04.995" endtime="20201117 14:43:04.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:04.997" endtime="20201117 14:43:04.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.970" endtime="20201117 14:43:05.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.967" endtime="20201117 14:43:05.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.007" endtime="20201117 14:43:05.294"></status>
</kw>
<msg timestamp="20201117 14:43:05.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024525375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.006" endtime="20201117 14:43:05.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024525375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024631486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.299" endtime="20201117 14:43:05.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.307" endtime="20201117 14:43:05.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.003" endtime="20201117 14:43:05.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.001" endtime="20201117 14:43:05.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.313" level="INFO">${RESULT} = [{'time': 0.024631486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010611100000000248, 'source_diff': 0.00010611100000000248}, {'time': 0.024747514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:05.310" endtime="20201117 14:43:05.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.327" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:05.314" endtime="20201117 14:43:05.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.332" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.331" endtime="20201117 14:43:05.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.335" level="INFO">VALUE: [0.00010611100000000248, 0.00010625000000000218, 0.00010583299999999962, 0.000106514000000002, 0.00010568000000000036, 0.00010620899999999947, 0.00010618100000000033, 0.0001060140000000015, 0.00010649999999999896, 0.00010584699999999919, 0.00010566600000000079, 0.0001065560000000007, 0.00010631900000000055, 0.00010590300000000094, 0.00010565300000000069, 0.00010616700000000076, 0.00010651399999999853, 0.000106514000000002, 0.00010595899999999922, 0.0001060140000000015, 0.00010569399999999993, 0.00010586100000000223, 0.00010568000000000036, 0.00010649999999999896, 0.00010651399999999853, 0.00010602800000000107, 0.00010618100000000033, 0.00010651399999999853, 0.00010634800000000263, 0.00010568000000000036, 0.00010566599999999732, 0.00010633299999999665, 0.00010580500000000048, 0.00010648600000000286, 0.00010648599999999939, 0.00010616700000000076, 0.00010570899999999897, 0.00010651399999999853, 0.00010599999999999846, 0.00010651399999999853, 0.00010586100000000223, 0.0001065279999999981, 0.00010568099999999983, 0.0001057360000000021, 0.00010568099999999983, 0.000105901999999998, 0.00010618100000000033, 0.00010566599999999732, 0.00010569399999999993, 0.00010616599999999782]</msg>
<status status="PASS" starttime="20201117 14:43:05.333" endtime="20201117 14:43:05.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.328" endtime="20201117 14:43:05.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.338" endtime="20201117 14:43:05.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.341" endtime="20201117 14:43:05.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.340" endtime="20201117 14:43:05.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.336" endtime="20201117 14:43:05.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.966" endtime="20201117 14:43:05.362"></status>
</kw>
<msg timestamp="20201117 14:43:05.362" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.371" endtime="20201117 14:43:05.390"></status>
</kw>
<msg timestamp="20201117 14:43:05.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.369" endtime="20201117 14:43:05.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.392" endtime="20201117 14:43:05.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.395" endtime="20201117 14:43:05.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.366" endtime="20201117 14:43:05.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.364" endtime="20201117 14:43:05.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.405" endtime="20201117 14:43:05.693"></status>
</kw>
<msg timestamp="20201117 14:43:05.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.403" endtime="20201117 14:43:05.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.697" endtime="20201117 14:43:05.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.705" endtime="20201117 14:43:05.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.401" endtime="20201117 14:43:05.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.399" endtime="20201117 14:43:05.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:05.712" level="INFO">${RESULT} = [{'time': 0.022095514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001060560000000002, 'source_diff': 0.0001060560000000002}, {'time': 0.022210528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:05.708" endtime="20201117 14:43:05.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:05.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:05.713" endtime="20201117 14:43:05.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.730" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:43:05.729" endtime="20201117 14:43:05.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.733" level="INFO">VALUE: [0.0001060560000000002, 0.00010634699999999969, 0.00010634799999999917, 0.00010599999999999846, 0.00010568000000000036, 0.00010618000000000086, 0.00010566599999999732, 0.00010580500000000048, 0.00010616700000000076, 0.00010602800000000107, 0.0001060140000000015, 0.00010616699999999729, 0.00010586100000000223, 0.00010584799999999867, 0.00010584699999999919, 0.00010623599999999914, 0.00010652800000000157, 0.00010618000000000086, 0.00010632000000000003, 0.000106514000000002, 0.00010651399999999853, 0.0001058750000000018, 0.0001058889999999979, 0.00010623599999999914, 0.00010651399999999853, 0.00010618000000000086, 0.00010594400000000018, 0.00010651399999999853, 0.00010615299999999772, 0.00010566700000000026, 0.00010612500000000205, 0.00010634799999999917, 0.00010568099999999983, 0.00010602700000000159, 0.00010584699999999919, 0.00010579100000000091, 0.0001065279999999981, 0.00010568099999999983, 0.00010618100000000033, 0.00010566700000000026, 0.00010616700000000076, 0.00010634799999999917, 0.00010601299999999855, 0.00010573599999999864, 0.00010636100000000273, 0.00010595799999999975, 0.0001061949999999999, 0.00010586099999999876, 0.00010651399999999853, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201117 14:43:05.731" endtime="20201117 14:43:05.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.727" endtime="20201117 14:43:05.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.736" endtime="20201117 14:43:05.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:05.740" endtime="20201117 14:43:05.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.738" endtime="20201117 14:43:05.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.734" endtime="20201117 14:43:05.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.363" endtime="20201117 14:43:05.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.964" endtime="20201117 14:43:05.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:04.963" endtime="20201117 14:43:05.761"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.763" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.772" endtime="20201117 14:43:05.793"></status>
</kw>
<msg timestamp="20201117 14:43:05.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.770" endtime="20201117 14:43:05.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:05.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:05.795" endtime="20201117 14:43:05.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.797" endtime="20201117 14:43:05.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.767" endtime="20201117 14:43:05.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.765" endtime="20201117 14:43:05.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:05.807" endtime="20201117 14:43:06.094"></status>
</kw>
<msg timestamp="20201117 14:43:06.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026229375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026336111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:05.805" endtime="20201117 14:43:06.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026229375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026336111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.098" endtime="20201117 14:43:06.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.106" endtime="20201117 14:43:06.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.802" endtime="20201117 14:43:06.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.800" endtime="20201117 14:43:06.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.113" level="INFO">${RESULT} = [{'time': 0.026336111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010673599999999964, 'source_diff': 0.00010673599999999964}, {'time': 0.026450139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:06.109" endtime="20201117 14:43:06.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.128" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.114" endtime="20201117 14:43:06.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.133" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.132" endtime="20201117 14:43:06.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.135" level="INFO">VALUE: [0.00010673599999999964, 0.0001071950000000009, 0.0001068340000000001, 0.00010702800000000207, 0.00010749999999999996, 0.00010736100000000026, 0.00010669400000000093, 0.00010734700000000069, 0.00010717999999999839, 0.00010754200000000214, 0.00010665300000000169, 0.00010687499999999933, 0.00010718099999999786, 0.00010751399999999953, 0.00010718100000000133, 0.00010718000000000186, 0.00010747200000000082, 0.00010701399999999903, 0.0001075699999999978, 0.00010734699999999722, 0.00010718099999999786, 0.00010699999999999946, 0.000107208999999997, 0.0001075279999999991, 0.00010734700000000069, 0.00010733300000000112, 0.00010734699999999722, 0.00010686099999999976, 0.00010669400000000093, 0.00010704099999999869, 0.00010736100000000026, 0.0001075279999999991, 0.00010704099999999869, 0.00010666699999999779, 0.00010668000000000136, 0.00010701399999999903, 0.00010700000000000293, 0.00010734699999999722, 0.00010668100000000083, 0.00010691599999999857, 0.00010711100000000001, 0.00010736199999999974, 0.00010736099999999679, 0.00010686099999999976, 0.00010668000000000483, 0.00010749999999999649, 0.00010726399999999581, 0.00010681900000000105, 0.00010668099999999736, 0.00010718099999999786]</msg>
<status status="PASS" starttime="20201117 14:43:06.134" endtime="20201117 14:43:06.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.129" endtime="20201117 14:43:06.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.138" endtime="20201117 14:43:06.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.142" endtime="20201117 14:43:06.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.140" endtime="20201117 14:43:06.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.137" endtime="20201117 14:43:06.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.764" endtime="20201117 14:43:06.163"></status>
</kw>
<msg timestamp="20201117 14:43:06.163" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.172" endtime="20201117 14:43:06.193"></status>
</kw>
<msg timestamp="20201117 14:43:06.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.170" endtime="20201117 14:43:06.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.194" endtime="20201117 14:43:06.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.197" endtime="20201117 14:43:06.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.167" endtime="20201117 14:43:06.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.165" endtime="20201117 14:43:06.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.207" endtime="20201117 14:43:06.493"></status>
</kw>
<msg timestamp="20201117 14:43:06.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.205" endtime="20201117 14:43:06.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.498" endtime="20201117 14:43:06.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.506" endtime="20201117 14:43:06.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.203" endtime="20201117 14:43:06.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.201" endtime="20201117 14:43:06.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.512" level="INFO">${RESULT} = [{'time': 0.022455903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001075699999999978, 'source_diff': 0.0001075699999999978}, {'time': 0.022569931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:06.509" endtime="20201117 14:43:06.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.513" endtime="20201117 14:43:06.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.531" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.530" endtime="20201117 14:43:06.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.534" level="INFO">VALUE: [0.0001075699999999978, 0.00010752800000000257, 0.00010684700000000019, 0.00010718000000000186, 0.0001070279999999986, 0.00010736100000000026, 0.00010719400000000143, 0.00010749999999999996, 0.00010734700000000069, 0.0001075279999999991, 0.00010668100000000083, 0.00010729199999999842, 0.00010667999999999789, 0.00010733299999999765, 0.00010751399999999953, 0.00010699999999999946, 0.00010684700000000019, 0.00010734700000000069, 0.00010701399999999903, 0.00010716699999999829, 0.0001073340000000006, 0.0001073340000000006, 0.00010680500000000148, 0.00010666600000000179, 0.00010668000000000136, 0.00010719400000000143, 0.00010665299999999822, 0.00010734700000000069, 0.0001066950000000004, 0.0001070279999999986, 0.00010668000000000136, 0.0001067080000000005, 0.000107208000000001, 0.00010684700000000019, 0.00010749999999999996, 0.00010684700000000019, 0.00010736100000000026, 0.00010736100000000026, 0.00010684799999999967, 0.00010717999999999839, 0.00010734700000000069, 0.00010717999999999839, 0.000107514000000003, 0.0001066950000000004, 0.00010716700000000176, 0.00010718100000000133, 0.0001068340000000001, 0.00010749999999999996, 0.0001068340000000001, 0.00010698699999999936]</msg>
<status status="PASS" starttime="20201117 14:43:06.532" endtime="20201117 14:43:06.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.527" endtime="20201117 14:43:06.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.537" endtime="20201117 14:43:06.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.541" endtime="20201117 14:43:06.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.539" endtime="20201117 14:43:06.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.535" endtime="20201117 14:43:06.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.164" endtime="20201117 14:43:06.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.762" endtime="20201117 14:43:06.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:05.761" endtime="20201117 14:43:06.562"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.564" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.573" endtime="20201117 14:43:06.593"></status>
</kw>
<msg timestamp="20201117 14:43:06.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.571" endtime="20201117 14:43:06.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.594" endtime="20201117 14:43:06.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.597" endtime="20201117 14:43:06.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.568" endtime="20201117 14:43:06.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.566" endtime="20201117 14:43:06.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.606" endtime="20201117 14:43:06.893"></status>
</kw>
<msg timestamp="20201117 14:43:06.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.604" endtime="20201117 14:43:06.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:06.897" endtime="20201117 14:43:06.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.906" endtime="20201117 14:43:06.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.602" endtime="20201117 14:43:06.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.600" endtime="20201117 14:43:06.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:06.912" level="INFO">${RESULT} = [{'time': 0.024681431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010807000000000178, 'source_diff': 0.00010807000000000178}, {'time': 0.024803444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:06.909" endtime="20201117 14:43:06.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:06.926" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:06.913" endtime="20201117 14:43:06.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.931" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:06.930" endtime="20201117 14:43:06.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.934" level="INFO">VALUE: [0.00010807000000000178, 0.00010817999999999939, 0.00010783299999999815, 0.00010834700000000169, 0.00010784699999999772, 0.0001085280000000001, 0.0001081950000000019, 0.00010786100000000076, 0.00010816700000000276, 0.00010816700000000276, 0.00010780499999999901, 0.00010784700000000119, 0.0001078889999999999, 0.00010768000000000236, 0.00010833300000000212, 0.00010849999999999749, 0.00010851400000000053, 0.00010840299999999997, 0.00010769400000000193, 0.00010850000000000096, 0.00010765199999999975, 0.00010800000000000046, 0.00010767999999999889, 0.00010833300000000212, 0.00010818099999999886, 0.00010801400000000003, 0.00010831999999999856, 0.00010832000000000203, 0.00010769399999999846, 0.00010767999999999889, 0.00010798599999999742, 0.00010851400000000053, 0.00010826400000000028, 0.00010769499999999793, 0.00010784700000000119, 0.00010851399999999706, 0.00010818099999999886, 0.00010854100000000019, 0.00010817999999999939, 0.00010801400000000003, 0.00010784700000000119, 0.00010834699999999822, 0.00010777799999999935, 0.00010819499999999843, 0.00010787500000000033, 0.00010854099999999672, 0.00010818099999999886, 0.00010851300000000105, 0.0001085280000000001, 0.00010767999999999889]</msg>
<status status="PASS" starttime="20201117 14:43:06.932" endtime="20201117 14:43:06.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.927" endtime="20201117 14:43:06.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.937" endtime="20201117 14:43:06.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:06.941" endtime="20201117 14:43:06.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.939" endtime="20201117 14:43:06.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.935" endtime="20201117 14:43:06.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.565" endtime="20201117 14:43:06.961"></status>
</kw>
<msg timestamp="20201117 14:43:06.962" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.970" endtime="20201117 14:43:06.990"></status>
</kw>
<msg timestamp="20201117 14:43:06.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.968" endtime="20201117 14:43:06.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:06.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:06.992" endtime="20201117 14:43:06.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:06.995" endtime="20201117 14:43:06.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.966" endtime="20201117 14:43:06.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.964" endtime="20201117 14:43:06.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.005" endtime="20201117 14:43:07.291"></status>
</kw>
<msg timestamp="20201117 14:43:07.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.003" endtime="20201117 14:43:07.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022322819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.295" endtime="20201117 14:43:07.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.304" endtime="20201117 14:43:07.305"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.001" endtime="20201117 14:43:07.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.999" endtime="20201117 14:43:07.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.310" level="INFO">${RESULT} = [{'time': 0.022322819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010794400000000218, 'source_diff': 0.00010794400000000218}, {'time': 0.022436792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:07.307" endtime="20201117 14:43:07.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:07.311" endtime="20201117 14:43:07.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.329" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.328" endtime="20201117 14:43:07.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.332" level="INFO">VALUE: [0.00010794400000000218, 0.00010800000000000046, 0.0001078340000000011, 0.00010836100000000126, 0.00010767999999999889, 0.00010766599999999932, 0.00010767999999999889, 0.00010851400000000053, 0.0001081950000000019, 0.00010761100000000051, 0.0001083340000000016, 0.00010801400000000003, 0.00010800000000000046, 0.00010783299999999815, 0.00010851400000000053, 0.00010851400000000053, 0.00010833299999999865, 0.00010801400000000003, 0.00010768100000000183, 0.00010834800000000117, 0.00010781900000000205, 0.00010837500000000083, 0.00010815200000000025, 0.00010784700000000119, 0.00010816599999999982, 0.00010783299999999815, 0.00010784700000000119, 0.00010798599999999742, 0.00010784800000000067, 0.00010818099999999886, 0.00010849999999999749, 0.00010851300000000105, 0.0001082219999999981, 0.00010811099999999754, 0.00010851400000000053, 0.00010819499999999843, 0.00010836099999999779, 0.00010833399999999813, 0.00010804099999999969, 0.00010768100000000183, 0.00010837500000000083, 0.00010784700000000119, 0.00010817999999999939, 0.00010833299999999865, 0.00010801400000000003, 0.00010768099999999836, 0.00010781999999999806, 0.00010788800000000043, 0.00010836099999999779, 0.00010815200000000025]</msg>
<status status="PASS" starttime="20201117 14:43:07.330" endtime="20201117 14:43:07.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.326" endtime="20201117 14:43:07.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.335" endtime="20201117 14:43:07.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.338" endtime="20201117 14:43:07.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.337" endtime="20201117 14:43:07.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.333" endtime="20201117 14:43:07.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.962" endtime="20201117 14:43:07.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.563" endtime="20201117 14:43:07.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:06.562" endtime="20201117 14:43:07.359"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.362" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.370" endtime="20201117 14:43:07.391"></status>
</kw>
<msg timestamp="20201117 14:43:07.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.369" endtime="20201117 14:43:07.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.393" endtime="20201117 14:43:07.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.395" endtime="20201117 14:43:07.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.366" endtime="20201117 14:43:07.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.364" endtime="20201117 14:43:07.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.405" endtime="20201117 14:43:07.690"></status>
</kw>
<msg timestamp="20201117 14:43:07.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025731319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025840889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.403" endtime="20201117 14:43:07.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025731319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025840889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.694" endtime="20201117 14:43:07.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.703" endtime="20201117 14:43:07.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.400" endtime="20201117 14:43:07.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.399" endtime="20201117 14:43:07.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:07.710" level="INFO">${RESULT} = [{'time': 0.025840889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001095699999999998, 'source_diff': 0.0001095699999999998}, {'time': 0.025956903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:07.706" endtime="20201117 14:43:07.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:07.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:07.711" endtime="20201117 14:43:07.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.730" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:07.729" endtime="20201117 14:43:07.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.732" level="INFO">VALUE: [0.0001095699999999998, 0.00010898599999999842, 0.00010884800000000167, 0.00010868100000000283, 0.00010884700000000219, 0.00010901399999999756, 0.00010886100000000176, 0.00010918000000000039, 0.00010944400000000021, 0.00010951399999999806, 0.00010933399999999913, 0.00010948699999999839, 0.00010949999999999849, 0.00010951300000000205, 0.00010934699999999922, 0.00010884699999999872, 0.00010869400000000293, 0.00010905599999999974, 0.00010912499999999811, 0.00010919499999999943, 0.0001093479999999987, 0.00010918099999999986, 0.00010951299999999858, 0.00010951399999999806, 0.00010884699999999872, 0.00010868099999999936, 0.00010931900000000008, 0.00010900000000000146, 0.00010887499999999786, 0.00010945900000000272, 0.00010918099999999986, 0.00010884700000000219, 0.00010916600000000082, 0.00010866600000000032, 0.00010901399999999756, 0.00010951399999999806, 0.00010887500000000133, 0.00010949999999999849, 0.00010868099999999936, 0.00010936100000000226, 0.00010951300000000205, 0.00010934699999999922, 0.00010865300000000022, 0.00010901399999999756, 0.00010934699999999922, 0.0001086950000000024, 0.00010936100000000226, 0.00010933399999999566, 0.00010934700000000269, 0.00010934700000000269]</msg>
<status status="PASS" starttime="20201117 14:43:07.731" endtime="20201117 14:43:07.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.726" endtime="20201117 14:43:07.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.735" endtime="20201117 14:43:07.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:07.739" endtime="20201117 14:43:07.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.737" endtime="20201117 14:43:07.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.734" endtime="20201117 14:43:07.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.363" endtime="20201117 14:43:07.759"></status>
</kw>
<msg timestamp="20201117 14:43:07.760" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.768" endtime="20201117 14:43:07.788"></status>
</kw>
<msg timestamp="20201117 14:43:07.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.766" endtime="20201117 14:43:07.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:07.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:07.790" endtime="20201117 14:43:07.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.792" endtime="20201117 14:43:07.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.764" endtime="20201117 14:43:07.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.762" endtime="20201117 14:43:07.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:07.802" endtime="20201117 14:43:08.089"></status>
</kw>
<msg timestamp="20201117 14:43:08.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:07.801" endtime="20201117 14:43:08.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022137847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.093" endtime="20201117 14:43:08.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.102" endtime="20201117 14:43:08.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.798" endtime="20201117 14:43:08.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.796" endtime="20201117 14:43:08.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.108" level="INFO">${RESULT} = [{'time': 0.022247431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010958400000000285, 'source_diff': 0.00010958400000000285}, {'time': 0.022361389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:08.105" endtime="20201117 14:43:08.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.122" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.109" endtime="20201117 14:43:08.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.127" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.126" endtime="20201117 14:43:08.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.129" level="INFO">VALUE: [0.00010958400000000285, 0.00010934699999999922, 0.00010949999999999849, 0.00010865300000000022, 0.00010901400000000103, 0.00010886099999999829, 0.0001095699999999998, 0.00010936100000000226, 0.00010886100000000176, 0.00010934699999999922, 0.00010919499999999943, 0.0001093479999999987, 0.00010952700000000162, 0.00010884699999999872, 0.00010898600000000189, 0.00010884700000000219, 0.00010886100000000176, 0.00010881899999999958, 0.00010909700000000244, 0.00010936099999999879, 0.00010933299999999965, 0.00010895899999999875, 0.00010865300000000022, 0.00010919399999999996, 0.00010867999999999989, 0.00010954200000000067, 0.00010951400000000153, 0.00010934699999999922, 0.00010951399999999806, 0.00010916700000000029, 0.00010901400000000103, 0.00010911100000000201, 0.00010943100000000011, 0.00010951300000000205, 0.00010866600000000032, 0.00010884699999999872, 0.00010886100000000176, 0.00010901400000000103, 0.00010868099999999936, 0.00010869499999999893, 0.00010905500000000026, 0.0001093479999999987, 0.00010951299999999858, 0.00010884700000000219, 0.00010919399999999996, 0.00010951400000000153, 0.00010934699999999922, 0.00010951400000000153, 0.00010901400000000103, 0.00010934800000000217]</msg>
<status status="PASS" starttime="20201117 14:43:08.128" endtime="20201117 14:43:08.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.123" endtime="20201117 14:43:08.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.133" endtime="20201117 14:43:08.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.136" endtime="20201117 14:43:08.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.134" endtime="20201117 14:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.131" endtime="20201117 14:43:08.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.760" endtime="20201117 14:43:08.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.361" endtime="20201117 14:43:08.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:07.360" endtime="20201117 14:43:08.157"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.160" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.168" endtime="20201117 14:43:08.188"></status>
</kw>
<msg timestamp="20201117 14:43:08.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.166" endtime="20201117 14:43:08.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.190" endtime="20201117 14:43:08.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.193" endtime="20201117 14:43:08.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.164" endtime="20201117 14:43:08.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.161" endtime="20201117 14:43:08.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.202" endtime="20201117 14:43:08.488"></status>
</kw>
<msg timestamp="20201117 14:43:08.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024676083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.201" endtime="20201117 14:43:08.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024565444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024676083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.492" endtime="20201117 14:43:08.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.501" endtime="20201117 14:43:08.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.198" endtime="20201117 14:43:08.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.196" endtime="20201117 14:43:08.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.507" level="INFO">${RESULT} = [{'time': 0.024676083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011063900000000265, 'source_diff': 0.00011063900000000265}, {'time': 0.024794111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:08.504" endtime="20201117 14:43:08.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.508" endtime="20201117 14:43:08.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.526" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.525" endtime="20201117 14:43:08.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.528" level="INFO">VALUE: [0.00011063900000000265, 0.00011048599999999992, 0.00011001400000000203, 0.0001105280000000021, 0.00010962499999999861, 0.00011033400000000013, 0.00010968100000000036, 0.00011048599999999992, 0.00010987500000000233, 0.00011034700000000022, 0.00011005599999999727, 0.00011034699999999675, 0.00011051400000000253, 0.00011023599999999967, 0.00011051400000000253, 0.00010997299999999932, 0.0001098479999999992, 0.00011019400000000096, 0.00011041699999999807, 0.00011052799999999863, 0.00011051399999999906, 0.00010965300000000122, 0.00011018100000000086, 0.00010959699999999947, 0.00011051399999999906, 0.00010968100000000036, 0.00010987499999999886, 0.00011011100000000301, 0.00010986099999999929, 0.00010998599999999942, 0.00011036099999999979, 0.00011031900000000108, 0.00010983399999999963, 0.00011051399999999906, 0.00010966699999999732, 0.00011049999999999949, 0.00010983300000000015, 0.0001104029999999985, 0.00011019400000000096, 0.00011034700000000022, 0.00010965299999999775, 0.00011040199999999903, 0.00010993100000000061, 0.00011016700000000129, 0.00011049999999999949, 0.00010967999999999742, 0.00010987499999999886, 0.00010965300000000122, 0.00011051400000000253, 0.00011031900000000108]</msg>
<status status="PASS" starttime="20201117 14:43:08.527" endtime="20201117 14:43:08.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.522" endtime="20201117 14:43:08.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.532" endtime="20201117 14:43:08.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.535" endtime="20201117 14:43:08.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.534" endtime="20201117 14:43:08.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.530" endtime="20201117 14:43:08.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.160" endtime="20201117 14:43:08.556"></status>
</kw>
<msg timestamp="20201117 14:43:08.556" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.564" endtime="20201117 14:43:08.584"></status>
</kw>
<msg timestamp="20201117 14:43:08.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.563" endtime="20201117 14:43:08.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.586" endtime="20201117 14:43:08.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.589" endtime="20201117 14:43:08.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.560" endtime="20201117 14:43:08.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.558" endtime="20201117 14:43:08.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.599" endtime="20201117 14:43:08.884"></status>
</kw>
<msg timestamp="20201117 14:43:08.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.598" endtime="20201117 14:43:08.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.888" endtime="20201117 14:43:08.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.896" endtime="20201117 14:43:08.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.595" endtime="20201117 14:43:08.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.593" endtime="20201117 14:43:08.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:08.903" level="INFO">${RESULT} = [{'time': 0.022119458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011025000000000271, 'source_diff': 0.00011025000000000271}, {'time': 0.022240486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:08.900" endtime="20201117 14:43:08.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:08.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:08.904" endtime="20201117 14:43:08.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.922" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:43:08.921" endtime="20201117 14:43:08.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.924" level="INFO">VALUE: [0.00011025000000000271, 0.00011001399999999856, 0.00010966699999999732, 0.00010968100000000036, 0.00011002799999999813, 0.00010966700000000079, 0.0001103479999999997, 0.00011016700000000129, 0.00011049999999999949, 0.00011045800000000078, 0.00011031899999999761, 0.00011049999999999949, 0.00011018099999999739, 0.00011030600000000099, 0.00011015299999999825, 0.00010965300000000122, 0.00011033400000000013, 0.00010984700000000319, 0.00010983300000000015, 0.00011001400000000203, 0.00010988899999999843, 0.00010973599999999917, 0.00010984699999999972, 0.00010972300000000254, 0.00011050000000000296, 0.00011020800000000053, 0.00011051399999999906, 0.00010969400000000046, 0.00010986099999999929, 0.00010986099999999929, 0.00010965300000000122, 0.00011051399999999906, 0.00011001399999999856, 0.00010968100000000036, 0.00011018100000000086, 0.00010983399999999963, 0.00011036099999999979, 0.00010968000000000089, 0.00010986100000000276, 0.00011051399999999906, 0.00010968100000000036, 0.00010966700000000079, 0.00010984699999999972, 0.00011019500000000043, 0.00010969400000000046, 0.00011001300000000255, 0.00010966599999999785, 0.0001100280000000016, 0.00011001400000000203, 0.00010986099999999929]</msg>
<status status="PASS" starttime="20201117 14:43:08.923" endtime="20201117 14:43:08.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.918" endtime="20201117 14:43:08.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.928" endtime="20201117 14:43:08.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:08.931" endtime="20201117 14:43:08.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.930" endtime="20201117 14:43:08.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.926" endtime="20201117 14:43:08.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.557" endtime="20201117 14:43:08.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.158" endtime="20201117 14:43:08.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.157" endtime="20201117 14:43:08.952"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.955" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.963" endtime="20201117 14:43:08.985"></status>
</kw>
<msg timestamp="20201117 14:43:08.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.962" endtime="20201117 14:43:08.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:08.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:08.986" endtime="20201117 14:43:08.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.989" endtime="20201117 14:43:08.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.959" endtime="20201117 14:43:08.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.957" endtime="20201117 14:43:08.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:08.998" endtime="20201117 14:43:09.283"></status>
</kw>
<msg timestamp="20201117 14:43:09.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026219431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026330514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:08.996" endtime="20201117 14:43:09.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026219431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026330514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.287" endtime="20201117 14:43:09.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.296" endtime="20201117 14:43:09.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.994" endtime="20201117 14:43:09.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.992" endtime="20201117 14:43:09.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.302" level="INFO">${RESULT} = [{'time': 0.026330514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011108299999999793, 'source_diff': 0.00011108299999999793}, {'time': 0.026454514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:09.299" endtime="20201117 14:43:09.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:09.303" endtime="20201117 14:43:09.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.322" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.321" endtime="20201117 14:43:09.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.325" level="INFO">VALUE: [0.00011108299999999793, 0.00011116699999999882, 0.00011101399999999956, 0.0001113480000000007, 0.00011066700000000179, 0.00011066599999999885, 0.00011150000000000049, 0.00011118000000000239, 0.00011151400000000006, 0.000111209000000001, 0.00011130599999999852, 0.00011066700000000179, 0.00011137500000000036, 0.00011148699999999692, 0.00011084699999999725, 0.00011134700000000122, 0.00011151400000000006, 0.00011086100000000029, 0.00011066700000000179, 0.00011083299999999768, 0.00011084699999999725, 0.00011118100000000186, 0.00011151299999999711, 0.00011065200000000275, 0.00011083300000000115, 0.00011119400000000196, 0.00011105600000000174, 0.00011086100000000029, 0.00011151400000000006, 0.00011151400000000006, 0.00011118099999999839, 0.00011151400000000006, 0.00011084700000000072, 0.00011069399999999799, 0.00011087499999999986, 0.00011095799999999781, 0.00011134700000000122, 0.00011101399999999956, 0.00011152799999999963, 0.00011133400000000113, 0.00011119400000000196, 0.00011084699999999725, 0.00011101399999999956, 0.00011117999999999545, 0.00011118000000000239, 0.00011151400000000006, 0.00011151400000000006, 0.00011084700000000419, 0.00011068100000000136, 0.00011069399999999452]</msg>
<status status="PASS" starttime="20201117 14:43:09.323" endtime="20201117 14:43:09.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.319" endtime="20201117 14:43:09.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.328" endtime="20201117 14:43:09.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.332" endtime="20201117 14:43:09.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.330" endtime="20201117 14:43:09.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.326" endtime="20201117 14:43:09.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.955" endtime="20201117 14:43:09.352"></status>
</kw>
<msg timestamp="20201117 14:43:09.353" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.361" endtime="20201117 14:43:09.381"></status>
</kw>
<msg timestamp="20201117 14:43:09.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.360" endtime="20201117 14:43:09.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.383" endtime="20201117 14:43:09.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.385" endtime="20201117 14:43:09.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.357" endtime="20201117 14:43:09.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.355" endtime="20201117 14:43:09.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.395" endtime="20201117 14:43:09.681"></status>
</kw>
<msg timestamp="20201117 14:43:09.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.394" endtime="20201117 14:43:09.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.685" endtime="20201117 14:43:09.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.694" endtime="20201117 14:43:09.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.391" endtime="20201117 14:43:09.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.389" endtime="20201117 14:43:09.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:09.701" level="INFO">${RESULT} = [{'time': 0.022363125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011091700000000204, 'source_diff': 0.00011091700000000204}, {'time': 0.022483139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:09.697" endtime="20201117 14:43:09.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:09.714" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:09.702" endtime="20201117 14:43:09.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.719" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:43:09.718" endtime="20201117 14:43:09.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.721" level="INFO">VALUE: [0.00011091700000000204, 0.00011112500000000011, 0.00011086099999999682, 0.00011101399999999956, 0.00011109700000000097, 0.00011130500000000251, 0.00011067999999999842, 0.00011118000000000239, 0.00011102799999999913, 0.00011083299999999768, 0.00011152799999999963, 0.00011118099999999839, 0.0001108480000000002, 0.00011152700000000015, 0.00011116599999999935, 0.00011150000000000049, 0.00011084700000000072, 0.00011152799999999963, 0.00011151400000000006, 0.00011116699999999882, 0.00011140300000000297, 0.00011101399999999956, 0.00011076399999999931, 0.00011115199999999978, 0.00011117999999999892, 0.00011084700000000072, 0.00011147199999999788, 0.00011086100000000029, 0.0001112359999999972, 0.00011134699999999775, 0.00011068099999999789, 0.00011066700000000179, 0.00011133300000000165, 0.00011086100000000029, 0.00011137500000000036, 0.00011101399999999956, 0.00011066699999999832, 0.00011134700000000122, 0.00011154200000000267, 0.0001113480000000007, 0.00011151299999999711, 0.0001107220000000006, 0.00011150000000000049, 0.00011120799999999806, 0.00011101399999999956, 0.00011140300000000297, 0.00011116699999999882, 0.00011119499999999796, 0.00011086199999999977, 0.00011132000000000156]</msg>
<status status="PASS" starttime="20201117 14:43:09.720" endtime="20201117 14:43:09.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.715" endtime="20201117 14:43:09.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.725" endtime="20201117 14:43:09.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:09.729" endtime="20201117 14:43:09.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.727" endtime="20201117 14:43:09.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.723" endtime="20201117 14:43:09.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.353" endtime="20201117 14:43:09.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.953" endtime="20201117 14:43:09.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:08.953" endtime="20201117 14:43:09.750"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.753" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.761" endtime="20201117 14:43:09.781"></status>
</kw>
<msg timestamp="20201117 14:43:09.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.760" endtime="20201117 14:43:09.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:09.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:09.783" endtime="20201117 14:43:09.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.786" endtime="20201117 14:43:09.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.757" endtime="20201117 14:43:09.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.755" endtime="20201117 14:43:09.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:09.795" endtime="20201117 14:43:10.082"></status>
</kw>
<msg timestamp="20201117 14:43:10.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:09.794" endtime="20201117 14:43:10.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025171542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.086" endtime="20201117 14:43:10.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.094" endtime="20201117 14:43:10.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.791" endtime="20201117 14:43:10.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.789" endtime="20201117 14:43:10.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.101" level="INFO">${RESULT} = [{'time': 0.025171542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011182000000000206, 'source_diff': 0.00011182000000000206}, {'time': 0.025292583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:10.098" endtime="20201117 14:43:10.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.102" endtime="20201117 14:43:10.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.120" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.118" endtime="20201117 14:43:10.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.123" level="INFO">VALUE: [0.00011182000000000206, 0.00011219399999999949, 0.00011163800000000071, 0.00011184699999999825, 0.00011181899999999911, 0.00011201400000000056, 0.00011248599999999845, 0.00011248600000000192, 0.00011249999999999802, 0.00011233399999999866, 0.00011166699999999932, 0.0001122770000000009, 0.00011166599999999985, 0.00011233299999999918, 0.00011186099999999782, 0.00011218099999999939, 0.00011249999999999802, 0.00011248599999999845, 0.0001118480000000012, 0.00011250000000000149, 0.00011198600000000142, 0.00011233299999999918, 0.00011233299999999918, 0.00011168099999999889, 0.00011216700000000329, 0.00011168099999999889, 0.00011183400000000163, 0.00011162500000000061, 0.00011248599999999845, 0.00011219400000000296, 0.00011200000000000099, 0.00011217999999999992, 0.00011183300000000215, 0.00011200000000000099, 0.00011212500000000111, 0.00011231899999999961, 0.0001123480000000017, 0.00011186200000000077, 0.00011200000000000099, 0.00011248600000000192, 0.00011194399999999924, 0.00011236100000000179, 0.00011201400000000056, 0.00011202800000000013, 0.0001123480000000017, 0.00011159799999999748, 0.00011198600000000142, 0.00011169399999999899, 0.00011167999999999942, 0.00011234699999999875]</msg>
<status status="PASS" starttime="20201117 14:43:10.121" endtime="20201117 14:43:10.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.116" endtime="20201117 14:43:10.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.126" endtime="20201117 14:43:10.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.129" endtime="20201117 14:43:10.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.128" endtime="20201117 14:43:10.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.124" endtime="20201117 14:43:10.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.753" endtime="20201117 14:43:10.150"></status>
</kw>
<msg timestamp="20201117 14:43:10.151" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.159" endtime="20201117 14:43:10.180"></status>
</kw>
<msg timestamp="20201117 14:43:10.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.158" endtime="20201117 14:43:10.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.182" endtime="20201117 14:43:10.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.185" endtime="20201117 14:43:10.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.155" endtime="20201117 14:43:10.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.153" endtime="20201117 14:43:10.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.195" endtime="20201117 14:43:10.482"></status>
</kw>
<msg timestamp="20201117 14:43:10.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.193" endtime="20201117 14:43:10.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.486" endtime="20201117 14:43:10.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.494" endtime="20201117 14:43:10.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.191" endtime="20201117 14:43:10.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.189" endtime="20201117 14:43:10.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.501" level="INFO">${RESULT} = [{'time': 0.023030986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011180499999999954, 'source_diff': 0.00011180499999999954}, {'time': 0.023148944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:10.498" endtime="20201117 14:43:10.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.515" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.502" endtime="20201117 14:43:10.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.520" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.519" endtime="20201117 14:43:10.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.522" level="INFO">VALUE: [0.00011180499999999954, 0.00011250000000000149, 0.00011233299999999918, 0.00011229100000000047, 0.00011215300000000025, 0.00011252800000000063, 0.00011219499999999896, 0.00011234700000000222, 0.00011184799999999773, 0.00011184700000000172, 0.00011216599999999688, 0.00011163900000000018, 0.00011234700000000222, 0.00011220799999999906, 0.00011251400000000106, 0.00011251399999999759, 0.00011218099999999939, 0.00011201400000000056, 0.00011251400000000106, 0.00011167999999999942, 0.00011233299999999918, 0.00011234699999999875, 0.00011252799999999716, 0.00011237500000000136, 0.00011200000000000099, 0.00011194499999999871, 0.00011166699999999932, 0.0001118480000000012, 0.00011233299999999918, 0.00011233300000000265, 0.00011219399999999949, 0.00011215300000000025, 0.00011219500000000243, 0.00011166699999999932, 0.00011236100000000179, 0.00011186200000000077, 0.00011218099999999939, 0.00011251300000000158, 0.00011252800000000063, 0.00011233299999999918, 0.00011238900000000093, 0.0001120419999999997, 0.00011201400000000056, 0.00011252800000000063, 0.00011161099999999757, 0.00011209700000000197, 0.00011198600000000142, 0.00011251400000000106, 0.00011236099999999832, 0.00011237500000000136]</msg>
<status status="PASS" starttime="20201117 14:43:10.521" endtime="20201117 14:43:10.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.516" endtime="20201117 14:43:10.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.526" endtime="20201117 14:43:10.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.529" endtime="20201117 14:43:10.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.528" endtime="20201117 14:43:10.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.524" endtime="20201117 14:43:10.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.151" endtime="20201117 14:43:10.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.751" endtime="20201117 14:43:10.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:09.750" endtime="20201117 14:43:10.551"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.553" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.562" endtime="20201117 14:43:10.583"></status>
</kw>
<msg timestamp="20201117 14:43:10.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.560" endtime="20201117 14:43:10.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.584" endtime="20201117 14:43:10.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.587" endtime="20201117 14:43:10.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.557" endtime="20201117 14:43:10.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.555" endtime="20201117 14:43:10.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.596" endtime="20201117 14:43:10.883"></status>
</kw>
<msg timestamp="20201117 14:43:10.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026131444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.595" endtime="20201117 14:43:10.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026131444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.887" endtime="20201117 14:43:10.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.896" endtime="20201117 14:43:10.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.592" endtime="20201117 14:43:10.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.590" endtime="20201117 14:43:10.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:10.903" level="INFO">${RESULT} = [{'time': 0.026131444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011340199999999856, 'source_diff': 0.00011340199999999856}, {'time': 0.026258444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:10.900" endtime="20201117 14:43:10.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:10.918" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:10.904" endtime="20201117 14:43:10.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.923" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:10.922" endtime="20201117 14:43:10.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.925" level="INFO">VALUE: [0.00011340199999999856, 0.00011351299999999911, 0.00011266600000000085, 0.00011270799999999956, 0.00011286099999999882, 0.00011298599999999895, 0.00011332000000000009, 0.00011299999999999852, 0.00011318000000000092, 0.00011284699999999925, 0.00011317999999999745, 0.00011265199999999781, 0.00011316600000000135, 0.00011318100000000039, 0.00011315299999999778, 0.00011268099999999989, 0.0001128619999999983, 0.00011283399999999916, 0.00011272199999999913, 0.00011351399999999859, 0.00011316599999999788, 0.00011284699999999925, 0.00011334699999999975, 0.00011332000000000009, 0.00011270799999999956, 0.00011352799999999816, 0.00011334799999999923, 0.00011299999999999852, 0.00011351399999999859, 0.00011280499999999707, 0.00011327800000000138, 0.00011262500000000161, 0.00011336099999999932, 0.00011319499999999996, 0.00011284799999999873, 0.00011316699999999735, 0.00011301299999999861, 0.00011269399999999999, 0.00011312499999999864, 0.00011268000000000042, 0.0001135420000000012, 0.00011268099999999989, 0.00011284699999999925, 0.00011350000000000249, 0.00011334799999999923, 0.00011268000000000389, 0.00011284700000000619, 0.00011333299999999324, 0.00011281900000000011, 0.00011334699999999975]</msg>
<status status="PASS" starttime="20201117 14:43:10.924" endtime="20201117 14:43:10.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.919" endtime="20201117 14:43:10.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.929" endtime="20201117 14:43:10.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:10.932" endtime="20201117 14:43:10.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.931" endtime="20201117 14:43:10.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.927" endtime="20201117 14:43:10.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.554" endtime="20201117 14:43:10.953"></status>
</kw>
<msg timestamp="20201117 14:43:10.953" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.962" endtime="20201117 14:43:10.982"></status>
</kw>
<msg timestamp="20201117 14:43:10.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.961" endtime="20201117 14:43:10.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:10.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:10.984" endtime="20201117 14:43:10.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.987" endtime="20201117 14:43:10.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.958" endtime="20201117 14:43:10.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.956" endtime="20201117 14:43:10.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:10.997" endtime="20201117 14:43:11.284"></status>
</kw>
<msg timestamp="20201117 14:43:11.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:10.995" endtime="20201117 14:43:11.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.288" endtime="20201117 14:43:11.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.297" endtime="20201117 14:43:11.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.993" endtime="20201117 14:43:11.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.991" endtime="20201117 14:43:11.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.304" level="INFO">${RESULT} = [{'time': 0.022623292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011299999999999852, 'source_diff': 0.00011299999999999852}, {'time': 0.022747306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:11.300" endtime="20201117 14:43:11.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:11.305" endtime="20201117 14:43:11.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.322" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.321" endtime="20201117 14:43:11.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.324" level="INFO">VALUE: [0.00011299999999999852, 0.00011299999999999852, 0.0001132770000000019, 0.00011284699999999925, 0.00011351399999999859, 0.0001135420000000012, 0.00011283299999999968, 0.00011284699999999925, 0.00011268099999999989, 0.00011319400000000049, 0.00011283399999999916, 0.00011293100000000014, 0.00011333300000000018, 0.00011318000000000092, 0.00011319400000000049, 0.00011269499999999946, 0.00011336099999999932, 0.00011351400000000206, 0.00011351399999999859, 0.00011300000000000199, 0.00011269399999999999, 0.00011266600000000085, 0.00011283300000000315, 0.00011334699999999975, 0.00011302799999999766, 0.00011283299999999968, 0.00011286099999999882, 0.0001128480000000022, 0.00011302699999999818, 0.00011286099999999882, 0.00011316600000000135, 0.00011270799999999956, 0.00011302799999999766, 0.00011332000000000009, 0.00011324999999999877, 0.00011293100000000014, 0.00011355499999999782, 0.00011334799999999923, 0.00011312499999999864, 0.0001127359999999987, 0.00011299999999999852, 0.00011349999999999902, 0.00011262500000000161, 0.00011315299999999778, 0.00011333399999999966, 0.00011283399999999916, 0.00011302699999999818, 0.00011298599999999895, 0.00011318000000000092, 0.00011318000000000092]</msg>
<status status="PASS" starttime="20201117 14:43:11.323" endtime="20201117 14:43:11.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.318" endtime="20201117 14:43:11.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.328" endtime="20201117 14:43:11.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.331" endtime="20201117 14:43:11.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.330" endtime="20201117 14:43:11.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.326" endtime="20201117 14:43:11.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.954" endtime="20201117 14:43:11.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.552" endtime="20201117 14:43:11.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:10.551" endtime="20201117 14:43:11.352"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.355" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.364" endtime="20201117 14:43:11.384"></status>
</kw>
<msg timestamp="20201117 14:43:11.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.362" endtime="20201117 14:43:11.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.386" endtime="20201117 14:43:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.388" endtime="20201117 14:43:11.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.359" endtime="20201117 14:43:11.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.357" endtime="20201117 14:43:11.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.398" endtime="20201117 14:43:11.684"></status>
</kw>
<msg timestamp="20201117 14:43:11.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.397" endtime="20201117 14:43:11.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025159653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.688" endtime="20201117 14:43:11.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.696" endtime="20201117 14:43:11.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.394" endtime="20201117 14:43:11.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.392" endtime="20201117 14:43:11.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:11.704" level="INFO">${RESULT} = [{'time': 0.025159653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140970000000005, 'source_diff': 0.0001140970000000005}, {'time': 0.025284653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:11.700" endtime="20201117 14:43:11.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:11.717" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:11.705" endtime="20201117 14:43:11.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.722" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:11.721" endtime="20201117 14:43:11.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.725" level="INFO">VALUE: [0.0001140970000000005, 0.00011368100000000089, 0.0001143749999999999, 0.00011402699999999918, 0.00011415199999999931, 0.00011430499999999857, 0.00011401399999999909, 0.00011372200000000013, 0.00011399999999999952, 0.00011419500000000096, 0.00011404199999999823, 0.00011434800000000023, 0.00011434700000000075, 0.00011434699999999728, 0.00011384700000000025, 0.00011369400000000099, 0.00011387500000000286, 0.00011369500000000046, 0.00011451399999999959, 0.00011379200000000145, 0.00011398599999999995, 0.00011434800000000023, 0.00011372200000000013, 0.00011384700000000025, 0.00011381899999999764, 0.00011381899999999764, 0.00011418099999999792, 0.00011382000000000059, 0.00011370800000000056, 0.00011432000000000109, 0.0001143749999999999, 0.00011415200000000278, 0.00011384700000000025, 0.00011433300000000118, 0.00011451399999999959, 0.00011416699999999835, 0.00011445899999999731, 0.00011368100000000089, 0.00011401399999999909, 0.00011434700000000075, 0.00011451399999999959, 0.00011386099999999982, 0.00011451399999999959, 0.00011436100000000032, 0.00011366699999999785, 0.00011416700000000182, 0.00011450000000000002, 0.00011451399999999959, 0.00011399999999999952, 0.00011366600000000185]</msg>
<status status="PASS" starttime="20201117 14:43:11.723" endtime="20201117 14:43:11.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.718" endtime="20201117 14:43:11.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.728" endtime="20201117 14:43:11.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:11.731" endtime="20201117 14:43:11.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.730" endtime="20201117 14:43:11.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.726" endtime="20201117 14:43:11.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.356" endtime="20201117 14:43:11.752"></status>
</kw>
<msg timestamp="20201117 14:43:11.752" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.761" endtime="20201117 14:43:11.781"></status>
</kw>
<msg timestamp="20201117 14:43:11.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.759" endtime="20201117 14:43:11.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:11.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:11.783" endtime="20201117 14:43:11.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.786" endtime="20201117 14:43:11.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.757" endtime="20201117 14:43:11.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.754" endtime="20201117 14:43:11.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:11.796" endtime="20201117 14:43:12.084"></status>
</kw>
<msg timestamp="20201117 14:43:12.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:11.795" endtime="20201117 14:43:12.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022504208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.088" endtime="20201117 14:43:12.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.096" endtime="20201117 14:43:12.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.792" endtime="20201117 14:43:12.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.790" endtime="20201117 14:43:12.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.103" level="INFO">${RESULT} = [{'time': 0.022504208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011406900000000136, 'source_diff': 0.00011406900000000136}, {'time': 0.022625222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:12.100" endtime="20201117 14:43:12.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.116" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.104" endtime="20201117 14:43:12.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.121" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.120" endtime="20201117 14:43:12.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.124" level="INFO">VALUE: [0.00011406900000000136, 0.000114290999999999, 0.00011361099999999957, 0.00011386099999999982, 0.00011384700000000025, 0.00011432000000000109, 0.00011384699999999678, 0.00011365299999999828, 0.00011383300000000068, 0.00011415200000000278, 0.00011416599999999888, 0.00011433300000000118, 0.00011366700000000132, 0.00011368099999999742, 0.00011438899999999946, 0.00011401399999999909, 0.00011401299999999961, 0.00011367999999999795, 0.00011451399999999959, 0.00011417999999999845, 0.00011404199999999823, 0.00011384700000000025, 0.00011368100000000089, 0.00011434800000000023, 0.00011419399999999802, 0.00011450000000000002, 0.00011438899999999946, 0.00011368000000000142, 0.00011457000000000134, 0.00011455600000000177, 0.00011369500000000046, 0.00011456900000000186, 0.00011368100000000089, 0.00011418100000000139, 0.00011381899999999764, 0.00011456999999999787, 0.00011384699999999678, 0.00011450000000000002, 0.00011401399999999909, 0.00011366700000000132, 0.00011434700000000075, 0.00011451399999999959, 0.00011366700000000132, 0.00011402699999999918, 0.00011434700000000075, 0.00011384700000000025, 0.00011452800000000263, 0.00011401399999999909, 0.00011393100000000114, 0.00011416699999999835]</msg>
<status status="PASS" starttime="20201117 14:43:12.122" endtime="20201117 14:43:12.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.117" endtime="20201117 14:43:12.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.127" endtime="20201117 14:43:12.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.131" endtime="20201117 14:43:12.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.129" endtime="20201117 14:43:12.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.125" endtime="20201117 14:43:12.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.753" endtime="20201117 14:43:12.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.354" endtime="20201117 14:43:12.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:11.353" endtime="20201117 14:43:12.152"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.154" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.169" endtime="20201117 14:43:12.190"></status>
</kw>
<msg timestamp="20201117 14:43:12.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.168" endtime="20201117 14:43:12.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.192" endtime="20201117 14:43:12.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.195" endtime="20201117 14:43:12.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.165" endtime="20201117 14:43:12.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.156" endtime="20201117 14:43:12.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.204" endtime="20201117 14:43:12.491"></status>
</kw>
<msg timestamp="20201117 14:43:12.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032352361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.202" endtime="20201117 14:43:12.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032352361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.495" endtime="20201117 14:43:12.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.504" endtime="20201117 14:43:12.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.200" endtime="20201117 14:43:12.506"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.198" endtime="20201117 14:43:12.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.511" level="INFO">${RESULT} = [{'time': 0.032467833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011547199999999841, 'source_diff': 0.00011547199999999841}, {'time': 0.032591764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:12.507" endtime="20201117 14:43:12.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.512" endtime="20201117 14:43:12.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.530" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.529" endtime="20201117 14:43:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.533" level="INFO">VALUE: [0.00011547199999999841, 0.00011483300000000168, 0.00011508300000000193, 0.00011551399999999712, 0.00011505499999999586, 0.00011483300000000168, 0.00011484700000000125, 0.0001148750000000004, 0.00011534700000000175, 0.00011501400000000356, 0.00011499999999999705, 0.00011495899999999781, 0.00011461100000000057, 0.00011516699999999935, 0.00011465199999999981, 0.00011498600000000442, 0.00011505599999999533, 0.00011465299999999928, 0.00011484699999999431, 0.00011466700000000579, 0.00011502799999999619, 0.00011556900000000286, 0.00011484700000000125, 0.00011484700000000125, 0.00011484700000000125, 0.00011465299999999928, 0.00011518099999999892, 0.00011519500000000543, 0.00011486100000000082, 0.00011518100000000586, 0.00011468099999999842, 0.00011520799999999859, 0.00011484700000000125, 0.00011536100000000132, 0.00011486100000000082, 0.00011469499999999799, 0.00011469500000000493, 0.00011533400000000166, 0.00011469499999999799, 0.00011504100000000322, 0.00011515200000000031, 0.0001148750000000004, 0.00011534700000000175, 0.00011484699999999431, 0.00011484700000000125, 0.00011501400000000356, 0.00011516699999999935, 0.00011516699999999935, 0.00011532000000000209, 0.00011483299999999474]</msg>
<status status="PASS" starttime="20201117 14:43:12.531" endtime="20201117 14:43:12.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.526" endtime="20201117 14:43:12.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.536" endtime="20201117 14:43:12.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.540" endtime="20201117 14:43:12.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.538" endtime="20201117 14:43:12.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.534" endtime="20201117 14:43:12.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.155" endtime="20201117 14:43:12.561"></status>
</kw>
<msg timestamp="20201117 14:43:12.561" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.570" endtime="20201117 14:43:12.590"></status>
</kw>
<msg timestamp="20201117 14:43:12.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.568" endtime="20201117 14:43:12.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.592" endtime="20201117 14:43:12.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.594" endtime="20201117 14:43:12.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.565" endtime="20201117 14:43:12.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.563" endtime="20201117 14:43:12.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.605" endtime="20201117 14:43:12.891"></status>
</kw>
<msg timestamp="20201117 14:43:12.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.603" endtime="20201117 14:43:12.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022904333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:12.895" endtime="20201117 14:43:12.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.904" endtime="20201117 14:43:12.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.601" endtime="20201117 14:43:12.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.599" endtime="20201117 14:43:12.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:12.911" level="INFO">${RESULT} = [{'time': 0.022904333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011491599999999963, 'source_diff': 0.00011491599999999963}, {'time': 0.023025361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:12.907" endtime="20201117 14:43:12.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:12.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:12.912" endtime="20201117 14:43:12.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.930" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:43:12.929" endtime="20201117 14:43:12.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.932" level="INFO">VALUE: [0.00011491599999999963, 0.00011536100000000132, 0.00011547200000000188, 0.00011551399999999712, 0.00011531999999999862, 0.00011518100000000239, 0.00011500000000000052, 0.00011536099999999785, 0.00011481900000000211, 0.00011534699999999828, 0.00011463899999999971, 0.00011484700000000125, 0.00011518100000000239, 0.00011516699999999935, 0.00011483400000000116, 0.00011552800000000016, 0.00011551400000000059, 0.00011466599999999938, 0.00011500000000000052, 0.00011466700000000232, 0.00011484700000000125, 0.00011466699999999885, 0.00011534700000000175, 0.00011551400000000059, 0.00011519399999999902, 0.00011466600000000285, 0.00011500000000000052, 0.00011533300000000218, 0.00011501400000000009, 0.00011501400000000009, 0.00011468100000000189, 0.00011484699999999778, 0.00011483400000000116, 0.00011551399999999712, 0.00011517999999999945, 0.00011550000000000102, 0.00011466599999999938, 0.00011551399999999712, 0.0001148750000000004, 0.00011551399999999712, 0.00011484699999999778, 0.00011495899999999781, 0.00011486100000000082, 0.00011467999999999895, 0.00011466599999999938, 0.00011538900000000046, 0.00011501400000000009, 0.00011545799999999884, 0.00011518099999999892, 0.00011532000000000209]</msg>
<status status="PASS" starttime="20201117 14:43:12.931" endtime="20201117 14:43:12.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.926" endtime="20201117 14:43:12.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.936" endtime="20201117 14:43:12.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:12.940" endtime="20201117 14:43:12.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.938" endtime="20201117 14:43:12.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.934" endtime="20201117 14:43:12.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.562" endtime="20201117 14:43:12.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.153" endtime="20201117 14:43:12.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.152" endtime="20201117 14:43:12.961"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.963" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.972" endtime="20201117 14:43:12.992"></status>
</kw>
<msg timestamp="20201117 14:43:12.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.970" endtime="20201117 14:43:12.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:12.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:12.994" endtime="20201117 14:43:12.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:12.997" endtime="20201117 14:43:12.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.967" endtime="20201117 14:43:12.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.965" endtime="20201117 14:43:12.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.006" endtime="20201117 14:43:13.293"></status>
</kw>
<msg timestamp="20201117 14:43:13.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.004" endtime="20201117 14:43:13.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025096264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.297" endtime="20201117 14:43:13.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.305" endtime="20201117 14:43:13.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.002" endtime="20201117 14:43:13.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.000" endtime="20201117 14:43:13.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.312" level="INFO">${RESULT} = [{'time': 0.025096264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011640300000000103, 'source_diff': 0.00011640300000000103}, {'time': 0.025217292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:13.309" endtime="20201117 14:43:13.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.326" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:13.313" endtime="20201117 14:43:13.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.331" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.330" endtime="20201117 14:43:13.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.334" level="INFO">VALUE: [0.00011640300000000103, 0.00011618099999999992, 0.00011633399999999919, 0.00011651300000000211, 0.00011601400000000109, 0.00011584699999999878, 0.00011652800000000116, 0.00011570900000000203, 0.00011598599999999848, 0.00011602800000000066, 0.00011649999999999855, 0.00011569399999999952, 0.00011619400000000002, 0.00011654200000000073, 0.00011619400000000002, 0.00011634699999999928, 0.00011569499999999899, 0.00011584699999999878, 0.00011568099999999942, 0.00011601300000000161, 0.00011634799999999876, 0.00011583300000000268, 0.00011569399999999952, 0.00011652800000000116, 0.00011583300000000268, 0.00011648599999999898, 0.00011649999999999855, 0.00011637499999999842, 0.00011651399999999812, 0.00011633299999999971, 0.00011651399999999812, 0.00011584699999999878, 0.00011567999999999995, 0.00011618099999999992, 0.00011586100000000182, 0.00011599999999999805, 0.00011601399999999762, 0.00011602700000000118, 0.00011601300000000161, 0.00011644400000000027, 0.00011634700000000275, 0.00011567999999999995, 0.0001163750000000019, 0.00011618099999999992, 0.00011600000000000152, 0.00011643100000000017, 0.00011584800000000173, 0.00011584700000000225, 0.00011600000000000152, 0.00011616600000000088]</msg>
<status status="PASS" starttime="20201117 14:43:13.332" endtime="20201117 14:43:13.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.327" endtime="20201117 14:43:13.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.337" endtime="20201117 14:43:13.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.341" endtime="20201117 14:43:13.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.339" endtime="20201117 14:43:13.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.335" endtime="20201117 14:43:13.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.964" endtime="20201117 14:43:13.361"></status>
</kw>
<msg timestamp="20201117 14:43:13.362" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.370" endtime="20201117 14:43:13.391"></status>
</kw>
<msg timestamp="20201117 14:43:13.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.369" endtime="20201117 14:43:13.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.393" endtime="20201117 14:43:13.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.396" endtime="20201117 14:43:13.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.366" endtime="20201117 14:43:13.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.364" endtime="20201117 14:43:13.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.406" endtime="20201117 14:43:13.692"></status>
</kw>
<msg timestamp="20201117 14:43:13.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:13.404" endtime="20201117 14:43:13.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02282725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:13.696" endtime="20201117 14:43:13.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.705" endtime="20201117 14:43:13.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.402" endtime="20201117 14:43:13.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.400" endtime="20201117 14:43:13.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:13.712" level="INFO">${RESULT} = [{'time': 0.022943833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011658299999999996, 'source_diff': 0.00011658299999999996}, {'time': 0.023070847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:13.708" endtime="20201117 14:43:13.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:13.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:13.713" endtime="20201117 14:43:13.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.730" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:43:13.729" endtime="20201117 14:43:13.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.733" level="INFO">VALUE: [0.00011658299999999996, 0.00011584699999999878, 0.00011569399999999952, 0.00011581899999999964, 0.00011602800000000066, 0.00011611100000000207, 0.00011598600000000195, 0.00011562500000000114, 0.00011583300000000268, 0.00011569399999999952, 0.00011634699999999928, 0.0001162360000000022, 0.00011566699999999985, 0.00011616700000000035, 0.00011601400000000109, 0.00011613899999999774, 0.00011566699999999985, 0.00011645799999999984, 0.00011601400000000109, 0.00011597200000000238, 0.00011634700000000275, 0.00011652800000000116, 0.00011568099999999942, 0.00011615299999999731, 0.00011636199999999833, 0.00011618099999999992, 0.00011567999999999995, 0.00011645799999999984, 0.00011633299999999971, 0.00011650000000000202, 0.00011566699999999985, 0.00011586099999999835, 0.00011652800000000116, 0.00011633400000000266, 0.00011565300000000028, 0.00011651400000000159, 0.00011636099999999885, 0.00011601400000000109, 0.00011634699999999928, 0.00011584699999999878, 0.00011654200000000073, 0.00011634800000000223, 0.00011575000000000127, 0.00011616600000000088, 0.00011584699999999878, 0.00011583299999999921, 0.00011634699999999928, 0.00011627799999999744, 0.00011584699999999878, 0.00011601400000000109]</msg>
<status status="PASS" starttime="20201117 14:43:13.731" endtime="20201117 14:43:13.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.726" endtime="20201117 14:43:13.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.736" endtime="20201117 14:43:13.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:13.740" endtime="20201117 14:43:13.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.738" endtime="20201117 14:43:13.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.734" endtime="20201117 14:43:13.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.362" endtime="20201117 14:43:13.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.962" endtime="20201117 14:43:13.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:12.961" endtime="20201117 14:43:13.761"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.763" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.772" endtime="20201117 14:43:13.793"></status>
</kw>
<msg timestamp="20201117 14:43:13.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.770" endtime="20201117 14:43:13.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:13.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:13.795" endtime="20201117 14:43:13.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.797" endtime="20201117 14:43:13.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.768" endtime="20201117 14:43:13.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.765" endtime="20201117 14:43:13.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:13.807" endtime="20201117 14:43:14.092"></status>
</kw>
<msg timestamp="20201117 14:43:14.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026059736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026177097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:13.805" endtime="20201117 14:43:14.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026059736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026177097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.096" endtime="20201117 14:43:14.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.105" endtime="20201117 14:43:14.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.803" endtime="20201117 14:43:14.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.801" endtime="20201117 14:43:14.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.112" level="INFO">${RESULT} = [{'time': 0.026177097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011736099999999985, 'source_diff': 0.00011736099999999985}, {'time': 0.026302083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:14.109" endtime="20201117 14:43:14.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.113" endtime="20201117 14:43:14.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.132" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.131" endtime="20201117 14:43:14.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.134" level="INFO">VALUE: [0.00011736099999999985, 0.00011734700000000028, 0.00011749999999999955, 0.00011680500000000107, 0.00011752799999999869, 0.00011734700000000028, 0.00011715300000000178, 0.00011702800000000166, 0.00011684799999999926, 0.00011751299999999965, 0.00011748599999999998, 0.00011679200000000098, 0.00011684699999999978, 0.00011684699999999978, 0.00011704200000000123, 0.00011699999999999905, 0.00011684800000000273, 0.00011716699999999788, 0.00011749999999999955, 0.00011686100000000282, 0.00011733299999999725, 0.00011701399999999862, 0.00011751399999999912, 0.00011736099999999985, 0.00011668099999999695, 0.00011718100000000092, 0.00011736099999999985, 0.00011701399999999862, 0.00011734700000000028, 0.00011686099999999935, 0.00011749999999999955, 0.00011684700000000325, 0.00011752799999999869, 0.00011701400000000209, 0.00011751399999999912, 0.00011722200000000016, 0.00011718000000000145, 0.00011668000000000095, 0.00011719400000000102, 0.00011713900000000221, 0.00011700000000000252, 0.00011751399999999565, 0.00011686099999999588, 0.00011734700000000375, 0.00011747200000000041, 0.00011702799999999819, 0.00011734700000000375, 0.00011752799999999869, 0.00011697199999999991, 0.00011751399999999912]</msg>
<status status="PASS" starttime="20201117 14:43:14.133" endtime="20201117 14:43:14.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.128" endtime="20201117 14:43:14.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.138" endtime="20201117 14:43:14.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.141" endtime="20201117 14:43:14.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.140" endtime="20201117 14:43:14.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.136" endtime="20201117 14:43:14.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.764" endtime="20201117 14:43:14.162"></status>
</kw>
<msg timestamp="20201117 14:43:14.162" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.171" endtime="20201117 14:43:14.191"></status>
</kw>
<msg timestamp="20201117 14:43:14.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.169" endtime="20201117 14:43:14.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.193" endtime="20201117 14:43:14.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.195" endtime="20201117 14:43:14.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.166" endtime="20201117 14:43:14.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.164" endtime="20201117 14:43:14.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.206" endtime="20201117 14:43:14.492"></status>
</kw>
<msg timestamp="20201117 14:43:14.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.204" endtime="20201117 14:43:14.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.496" endtime="20201117 14:43:14.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.505" endtime="20201117 14:43:14.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.201" endtime="20201117 14:43:14.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.200" endtime="20201117 14:43:14.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.512" level="INFO">${RESULT} = [{'time': 0.022469278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011740299999999856, 'source_diff': 0.00011740299999999856}, {'time': 0.022598319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:14.509" endtime="20201117 14:43:14.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.513" endtime="20201117 14:43:14.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.530" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.529" endtime="20201117 14:43:14.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.533" level="INFO">VALUE: [0.00011740299999999856, 0.00011754099999999879, 0.00011719400000000102, 0.00011751299999999965, 0.00011716599999999841, 0.00011705599999999733, 0.00011702800000000166, 0.00011718100000000092, 0.00011715299999999831, 0.00011733399999999672, 0.00011752700000000268, 0.00011665200000000181, 0.00011727700000000243, 0.00011733300000000071, 0.00011751399999999912, 0.00011663899999999824, 0.00011669499999999999, 0.00011734700000000028, 0.00011755499999999836, 0.00011699999999999905, 0.00011698599999999948, 0.00011734700000000028, 0.00011669399999999705, 0.00011684699999999978, 0.00011701399999999862, 0.00011683300000000021, 0.00011687499999999892, 0.00011666700000000085, 0.00011722200000000016, 0.00011668000000000095, 0.00011734700000000028, 0.00011734700000000028, 0.00011737499999999942, 0.00011751399999999912, 0.00011686099999999935, 0.00011677799999999794, 0.00011704100000000175, 0.00011666600000000138, 0.00011734700000000028, 0.00011715300000000178, 0.00011701400000000209, 0.00011752800000000216, 0.00011751400000000259, 0.00011684800000000273, 0.00011718100000000092, 0.00011751399999999912, 0.00011715199999999884, 0.00011695800000000034, 0.00011704199999999776, 0.00011719500000000049]</msg>
<status status="PASS" starttime="20201117 14:43:14.531" endtime="20201117 14:43:14.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.526" endtime="20201117 14:43:14.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.536" endtime="20201117 14:43:14.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.540" endtime="20201117 14:43:14.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.538" endtime="20201117 14:43:14.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.534" endtime="20201117 14:43:14.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.163" endtime="20201117 14:43:14.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.762" endtime="20201117 14:43:14.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:13.761" endtime="20201117 14:43:14.561"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.563" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.572" endtime="20201117 14:43:14.592"></status>
</kw>
<msg timestamp="20201117 14:43:14.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.570" endtime="20201117 14:43:14.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.594" endtime="20201117 14:43:14.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.596" endtime="20201117 14:43:14.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.568" endtime="20201117 14:43:14.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.565" endtime="20201117 14:43:14.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.606" endtime="20201117 14:43:14.894"></status>
</kw>
<msg timestamp="20201117 14:43:14.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.605" endtime="20201117 14:43:14.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024972139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025090222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:14.898" endtime="20201117 14:43:14.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.906" endtime="20201117 14:43:14.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.602" endtime="20201117 14:43:14.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.600" endtime="20201117 14:43:14.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:14.913" level="INFO">${RESULT} = [{'time': 0.025090222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000118082999999998, 'source_diff': 0.000118082999999998}, {'time': 0.025214236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:14.910" endtime="20201117 14:43:14.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:14.928" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:14.914" endtime="20201117 14:43:14.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.933" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:14.932" endtime="20201117 14:43:14.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.935" level="INFO">VALUE: [0.000118082999999998, 0.00011834700000000128, 0.0001181950000000015, 0.00011801399999999962, 0.00011783399999999722, 0.00011784800000000026, 0.00011852700000000022, 0.00011800000000000005, 0.00011836100000000085, 0.00011767999999999848, 0.00011834700000000128, 0.00011816699999999888, 0.00011802799999999919, 0.00011848600000000098, 0.00011781999999999765, 0.00011784699999999732, 0.00011802799999999919, 0.00011836100000000085, 0.00011795800000000134, 0.00011786100000000035, 0.00011784699999999732, 0.00011834700000000128, 0.00011812500000000017, 0.00011818100000000192, 0.00011854099999999979, 0.00011834700000000128, 0.00011783300000000121, 0.00011818099999999845, 0.00011800000000000005, 0.00011836100000000085, 0.00011802800000000266, 0.00011834799999999729, 0.00011847200000000141, 0.00011818000000000245, 0.00011784699999999732, 0.00011819400000000202, 0.00011801399999999962, 0.00011830599999999858, 0.00011834700000000128, 0.0001178620000000033, 0.00011766700000000185, 0.00011836100000000085, 0.00011819400000000202, 0.00011851400000000012, 0.00011836100000000085, 0.00011801399999999962, 0.00011802800000000266, 0.00011784800000000026, 0.00011834700000000128, 0.0001185129999999937]</msg>
<status status="PASS" starttime="20201117 14:43:14.934" endtime="20201117 14:43:14.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.929" endtime="20201117 14:43:14.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.938" endtime="20201117 14:43:14.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:14.942" endtime="20201117 14:43:14.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.940" endtime="20201117 14:43:14.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.936" endtime="20201117 14:43:14.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.564" endtime="20201117 14:43:14.963"></status>
</kw>
<msg timestamp="20201117 14:43:14.963" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.971" endtime="20201117 14:43:14.993"></status>
</kw>
<msg timestamp="20201117 14:43:14.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.970" endtime="20201117 14:43:14.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:14.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:14.994" endtime="20201117 14:43:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:14.997" endtime="20201117 14:43:15.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.967" endtime="20201117 14:43:15.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.965" endtime="20201117 14:43:15.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.008" endtime="20201117 14:43:15.317"></status>
</kw>
<msg timestamp="20201117 14:43:15.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.006" endtime="20201117 14:43:15.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022186444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.322" endtime="20201117 14:43:15.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.330" endtime="20201117 14:43:15.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.003" endtime="20201117 14:43:15.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.002" endtime="20201117 14:43:15.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.337" level="INFO">${RESULT} = [{'time': 0.022186444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011791599999999916, 'source_diff': 0.00011791599999999916}, {'time': 0.022319458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:15.334" endtime="20201117 14:43:15.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:15.338" endtime="20201117 14:43:15.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.355" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.354" endtime="20201117 14:43:15.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.358" level="INFO">VALUE: [0.00011791599999999916, 0.00011834700000000128, 0.00011784700000000078, 0.00011851400000000012, 0.00011834700000000128, 0.00011802800000000266, 0.00011818099999999845, 0.00011786199999999983, 0.00011786100000000035, 0.00011768000000000195, 0.00011836099999999738, 0.00011834699999999782, 0.00011784699999999732, 0.00011851400000000012, 0.00011786100000000035, 0.00011773600000000023, 0.0001179309999999982, 0.00011816700000000235, 0.00011834699999999782, 0.00011801399999999962, 0.00011836100000000085, 0.00011830599999999858, 0.00011801399999999962, 0.00011836100000000085, 0.00011784800000000026, 0.00011834800000000076, 0.00011766599999999891, 0.00011767999999999848, 0.00011786099999999688, 0.00011768100000000142, 0.00011851400000000012, 0.00011801399999999962, 0.00011831999999999815, 0.00011816699999999888, 0.00011765299999999881, 0.00011819399999999855, 0.00011769399999999805, 0.00011781899999999818, 0.00011802800000000266, 0.00011784700000000078, 0.00011766699999999838, 0.00011770800000000109, 0.00011787499999999992, 0.00011818000000000245, 0.00011768000000000195, 0.00011852799999999969, 0.00011768000000000195, 0.00011851400000000012, 0.00011833300000000171, 0.00011834700000000128]</msg>
<status status="PASS" starttime="20201117 14:43:15.356" endtime="20201117 14:43:15.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.352" endtime="20201117 14:43:15.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.361" endtime="20201117 14:43:15.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.365" endtime="20201117 14:43:15.384"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.363" endtime="20201117 14:43:15.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.359" endtime="20201117 14:43:15.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.964" endtime="20201117 14:43:15.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.562" endtime="20201117 14:43:15.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:14.561" endtime="20201117 14:43:15.386"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.388" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.397" endtime="20201117 14:43:15.420"></status>
</kw>
<msg timestamp="20201117 14:43:15.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.396" endtime="20201117 14:43:15.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.421" endtime="20201117 14:43:15.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.424" endtime="20201117 14:43:15.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.393" endtime="20201117 14:43:15.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.391" endtime="20201117 14:43:15.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.433" endtime="20201117 14:43:15.719"></status>
</kw>
<msg timestamp="20201117 14:43:15.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026487333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026606917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.432" endtime="20201117 14:43:15.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026487333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026606917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.724" endtime="20201117 14:43:15.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.732" endtime="20201117 14:43:15.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.429" endtime="20201117 14:43:15.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.427" endtime="20201117 14:43:15.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:15.739" level="INFO">${RESULT} = [{'time': 0.026606917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011958400000000244, 'source_diff': 0.00011958400000000244}, {'time': 0.026735958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:15.735" endtime="20201117 14:43:15.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:15.754" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:15.740" endtime="20201117 14:43:15.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.758" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:15.757" endtime="20201117 14:43:15.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.761" level="INFO">VALUE: [0.00011958400000000244, 0.000119389000000001, 0.00011952700000000122, 0.00011936099999999839, 0.00011934700000000228, 0.00011868000000000295, 0.0001192639999999974, 0.00011934699999999882, 0.00011952800000000069, 0.00011868099999999895, 0.00011918099999999945, 0.00011865200000000034, 0.00011934699999999882, 0.00011897200000000191, 0.00011867999999999948, 0.00011897199999999844, 0.00011934700000000228, 0.00011934700000000228, 0.00011948599999999851, 0.00011867999999999948, 0.00011884699999999832, 0.00011931899999999968, 0.00011870800000000209, 0.00011951399999999765, 0.00011950000000000155, 0.00011918099999999945, 0.00011918099999999945, 0.00011865299999999981, 0.00011916599999999694, 0.00011886100000000135, 0.00011901400000000062, 0.00011936099999999839, 0.00011879199999999951, 0.00011916699999999988, 0.00011954100000000079, 0.00011917999999999998, 0.00011901300000000115, 0.00011880499999999614, 0.00011902800000000019, 0.00011900000000000105, 0.00011950000000000155, 0.00011884699999999832, 0.00011904199999999976, 0.00011866700000000285, 0.00011954100000000079, 0.00011884700000000525, 0.00011866600000000338, 0.00011877799999999994, 0.00011934699999999882, 0.00011950000000000155]</msg>
<status status="PASS" starttime="20201117 14:43:15.760" endtime="20201117 14:43:15.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.755" endtime="20201117 14:43:15.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.764" endtime="20201117 14:43:15.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:15.768" endtime="20201117 14:43:15.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.766" endtime="20201117 14:43:15.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.763" endtime="20201117 14:43:15.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.389" endtime="20201117 14:43:15.789"></status>
</kw>
<msg timestamp="20201117 14:43:15.790" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.798" endtime="20201117 14:43:15.819"></status>
</kw>
<msg timestamp="20201117 14:43:15.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.797" endtime="20201117 14:43:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:15.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:15.820" endtime="20201117 14:43:15.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.823" endtime="20201117 14:43:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.794" endtime="20201117 14:43:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.792" endtime="20201117 14:43:15.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:15.833" endtime="20201117 14:43:16.119"></status>
</kw>
<msg timestamp="20201117 14:43:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:15.832" endtime="20201117 14:43:16.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.123" endtime="20201117 14:43:16.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.132" endtime="20201117 14:43:16.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.829" endtime="20201117 14:43:16.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.827" endtime="20201117 14:43:16.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.139" level="INFO">${RESULT} = [{'time': 0.022590694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001192630000000014, 'source_diff': 0.0001192630000000014}, {'time': 0.022717708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.135" endtime="20201117 14:43:16.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.140" endtime="20201117 14:43:16.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.157" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.156" endtime="20201117 14:43:16.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.160" level="INFO">VALUE: [0.0001192630000000014, 0.00011866599999999991, 0.00011930600000000305, 0.00011949999999999808, 0.00011934699999999882, 0.00011865299999999981, 0.00011897299999999791, 0.00011887500000000092, 0.00011933300000000271, 0.00011916600000000041, 0.00011934700000000228, 0.00011895799999999887, 0.00011868100000000242, 0.00011891600000000016, 0.00011931999999999915, 0.00011918099999999945, 0.00011883399999999822, 0.00011898600000000148, 0.0001189439999999993, 0.00011952800000000069, 0.00011922299999999816, 0.00011936100000000185, 0.00011868099999999895, 0.00011934799999999829, 0.00011866700000000285, 0.00011901300000000115, 0.00011934700000000228, 0.00011917999999999998, 0.00011936100000000185, 0.00011934699999999882, 0.00011949999999999808, 0.0001191950000000025, 0.00011951399999999765, 0.00011884699999999832, 0.00011867999999999948, 0.00011934700000000228, 0.00011868000000000295, 0.0001188890000000005, 0.00011880599999999908, 0.00011950000000000155, 0.00011868099999999895, 0.00011868099999999895, 0.00011899999999999758, 0.00011950000000000155, 0.00011883299999999875, 0.00011919399999999955, 0.00011887500000000092, 0.00011886099999999789, 0.00011900000000000105, 0.00011951400000000112]</msg>
<status status="PASS" starttime="20201117 14:43:16.158" endtime="20201117 14:43:16.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.153" endtime="20201117 14:43:16.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.163" endtime="20201117 14:43:16.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.167" endtime="20201117 14:43:16.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.165" endtime="20201117 14:43:16.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.162" endtime="20201117 14:43:16.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.790" endtime="20201117 14:43:16.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.387" endtime="20201117 14:43:16.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:15.386" endtime="20201117 14:43:16.188"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.191" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.199" endtime="20201117 14:43:16.220"></status>
</kw>
<msg timestamp="20201117 14:43:16.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.197" endtime="20201117 14:43:16.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.222" endtime="20201117 14:43:16.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.224" endtime="20201117 14:43:16.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.195" endtime="20201117 14:43:16.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.193" endtime="20201117 14:43:16.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.234" endtime="20201117 14:43:16.520"></status>
</kw>
<msg timestamp="20201117 14:43:16.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025146694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.232" endtime="20201117 14:43:16.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025146694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:16.524" endtime="20201117 14:43:16.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.533" endtime="20201117 14:43:16.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.229" endtime="20201117 14:43:16.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.227" endtime="20201117 14:43:16.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.540" level="INFO">${RESULT} = [{'time': 0.025266903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001202089999999996, 'source_diff': 0.0001202089999999996}, {'time': 0.025392917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:16.536" endtime="20201117 14:43:16.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.541" endtime="20201117 14:43:16.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.558" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.557" endtime="20201117 14:43:16.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.561" level="INFO">VALUE: [0.0001202089999999996, 0.00011966700000000038, 0.00011984800000000226, 0.00011966600000000091, 0.00011969400000000005, 0.00012034699999999982, 0.00012034699999999982, 0.00012033299999999678, 0.00012016700000000088, 0.00012000000000000205, 0.00012051399999999865, 0.00011968099999999995, 0.00012049999999999908, 0.00012034699999999982, 0.00011984700000000278, 0.00012051399999999865, 0.00011984699999999932, 0.00012036100000000285, 0.00012016700000000088, 0.00011984799999999879, 0.00012018000000000098, 0.00012017999999999751, 0.00012018000000000098, 0.00012037499999999896, 0.00012019500000000002, 0.00012047299999999941, 0.00012004099999999782, 0.00012016699999999741, 0.00011998600000000248, 0.00012018000000000098, 0.00012019400000000055, 0.00011997199999999944, 0.00011983299999999975, 0.00012033300000000025, 0.00011997200000000291, 0.00012051400000000212, 0.00012019399999999708, 0.00012004200000000076, 0.00011972200000000266, 0.00012013899999999827, 0.000120389000000002, 0.00012019500000000002, 0.00011968000000000048, 0.00011972200000000266, 0.00012001399999999815, 0.00012000000000000205, 0.00012051399999999865, 0.00012047199999999647, 0.00012023599999999579, 0.00012001400000000162]</msg>
<status status="PASS" starttime="20201117 14:43:16.559" endtime="20201117 14:43:16.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.554" endtime="20201117 14:43:16.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.564" endtime="20201117 14:43:16.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.568" endtime="20201117 14:43:16.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.566" endtime="20201117 14:43:16.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.562" endtime="20201117 14:43:16.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.191" endtime="20201117 14:43:16.589"></status>
</kw>
<msg timestamp="20201117 14:43:16.589" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.597" endtime="20201117 14:43:16.618"></status>
</kw>
<msg timestamp="20201117 14:43:16.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.596" endtime="20201117 14:43:16.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.620" endtime="20201117 14:43:16.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.622" endtime="20201117 14:43:16.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.593" endtime="20201117 14:43:16.626"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.591" endtime="20201117 14:43:16.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.633" endtime="20201117 14:43:16.920"></status>
</kw>
<msg timestamp="20201117 14:43:16.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:16.631" endtime="20201117 14:43:16.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201117 14:43:16.924" endtime="20201117 14:43:16.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.932" endtime="20201117 14:43:16.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.629" endtime="20201117 14:43:16.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.627" endtime="20201117 14:43:16.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:16.939" level="INFO">${RESULT} = [{'time': 0.022695986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011998600000000248, 'source_diff': 0.00011998600000000248}, {'time': 0.022821, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:43:16.936" endtime="20201117 14:43:16.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:16.952" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:16.940" endtime="20201117 14:43:16.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.957" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:43:16.956" endtime="20201117 14:43:16.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.960" level="INFO">VALUE: [0.00011998600000000248, 0.00012051400000000212, 0.00011987499999999846, 0.00012002800000000119, 0.00012051400000000212, 0.0001197500000000018, 0.00012055499999999789, 0.00012051399999999865, 0.00011969400000000005, 0.00011999999999999858, 0.00012018099999999698, 0.00011984699999999932, 0.00012011099999999914, 0.00012051399999999865, 0.00012018000000000098, 0.00012017999999999751, 0.00012001399999999815, 0.00011968000000000048, 0.00012051400000000212, 0.00012001399999999815, 0.00011968099999999995, 0.00011983399999999922, 0.00012048599999999951, 0.00011984699999999932, 0.00011969400000000005, 0.00012034700000000328, 0.00011969499999999952, 0.00012002800000000119, 0.00012034699999999982, 0.00012030600000000058, 0.00011968099999999995, 0.00012016600000000141, 0.00012050000000000255, 0.00012004200000000076, 0.00011983299999999975, 0.0001201249999999987, 0.00011968099999999995, 0.00011984800000000226, 0.00011984799999999879, 0.00011969400000000005, 0.00012049999999999908, 0.00012005600000000033, 0.00011968000000000048, 0.00012018100000000045, 0.00012049999999999908, 0.00012000000000000205, 0.00012019500000000002, 0.00012016699999999741, 0.00011998599999999901, 0.00011998599999999901]</msg>
<status status="PASS" starttime="20201117 14:43:16.959" endtime="20201117 14:43:16.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.954" endtime="20201117 14:43:16.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:16.963" endtime="20201117 14:43:16.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:16.967" endtime="20201117 14:43:16.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.965" endtime="20201117 14:43:16.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.962" endtime="20201117 14:43:16.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.590" endtime="20201117 14:43:16.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.189" endtime="20201117 14:43:16.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.188" endtime="20201117 14:43:16.988"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:16.991" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.000" endtime="20201117 14:43:17.021"></status>
</kw>
<msg timestamp="20201117 14:43:17.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:16.998" endtime="20201117 14:43:17.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.023" endtime="20201117 14:43:17.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.026" endtime="20201117 14:43:17.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.995" endtime="20201117 14:43:17.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.993" endtime="20201117 14:43:17.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.035" endtime="20201117 14:43:17.322"></status>
</kw>
<msg timestamp="20201117 14:43:17.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026721708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.034" endtime="20201117 14:43:17.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026721708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.326" endtime="20201117 14:43:17.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.334" endtime="20201117 14:43:17.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.031" endtime="20201117 14:43:17.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.029" endtime="20201117 14:43:17.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.346" level="INFO">${RESULT} = [{'time': 0.026721708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012105500000000186, 'source_diff': 0.00012105500000000186}, {'time': 0.026855708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:17.343" endtime="20201117 14:43:17.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.361" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:17.347" endtime="20201117 14:43:17.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.366" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.365" endtime="20201117 14:43:17.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.368" level="INFO">VALUE: [0.00012105500000000186, 0.0001208189999999977, 0.00012150000000000008, 0.00012133299999999778, 0.0001211249999999997, 0.00012099999999999958, 0.00012150000000000008, 0.00012068100000000095, 0.00012152699999999975, 0.00012117999999999851, 0.00012081900000000118, 0.00012152799999999922, 0.00012102799999999872, 0.00012084700000000032, 0.00012134800000000029, 0.00012123600000000026, 0.0001208050000000016, 0.00012068000000000148, 0.00012133299999999778, 0.00012119399999999808, 0.00012084700000000032, 0.00012136100000000039, 0.00012102799999999872, 0.00012118099999999798, 0.00012118100000000145, 0.00012152699999999975, 0.00012134700000000082, 0.00012151399999999965, 0.00012131900000000168, 0.0001213189999999982, 0.00012083400000000022, 0.00012102800000000219, 0.00012083400000000022, 0.00012133299999999778, 0.00012086099999999989, 0.00012151399999999965, 0.00012068000000000495, 0.00012080600000000108, 0.000120695000000004, 0.00012099999999999611, 0.00012101400000000262, 0.00012100000000000305, 0.00012151400000000312, 0.00012084700000000032, 0.00012134700000000082, 0.00012149999999999661, 0.00012116699999999841, 0.00012118099999999798, 0.00012154100000000279, 0.00012099999999999611]</msg>
<status status="PASS" starttime="20201117 14:43:17.367" endtime="20201117 14:43:17.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.362" endtime="20201117 14:43:17.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.372" endtime="20201117 14:43:17.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.375" endtime="20201117 14:43:17.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.374" endtime="20201117 14:43:17.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.370" endtime="20201117 14:43:17.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.992" endtime="20201117 14:43:17.396"></status>
</kw>
<msg timestamp="20201117 14:43:17.396" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.405" endtime="20201117 14:43:17.426"></status>
</kw>
<msg timestamp="20201117 14:43:17.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.403" endtime="20201117 14:43:17.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.427" endtime="20201117 14:43:17.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.430" endtime="20201117 14:43:17.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.401" endtime="20201117 14:43:17.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.398" endtime="20201117 14:43:17.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.441" endtime="20201117 14:43:17.726"></status>
</kw>
<msg timestamp="20201117 14:43:17.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.439" endtime="20201117 14:43:17.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022821583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.730" endtime="20201117 14:43:17.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.739" endtime="20201117 14:43:17.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.436" endtime="20201117 14:43:17.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.434" endtime="20201117 14:43:17.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:17.746" level="INFO">${RESULT} = [{'time': 0.022821583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012073599999999976, 'source_diff': 0.00012073599999999976}, {'time': 0.022949597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:17.742" endtime="20201117 14:43:17.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:17.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:17.747" endtime="20201117 14:43:17.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.764" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:43:17.763" endtime="20201117 14:43:17.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.766" level="INFO">VALUE: [0.00012073599999999976, 0.0001213189999999982, 0.00012116700000000188, 0.00012081999999999718, 0.00012068100000000095, 0.00012068099999999748, 0.00012069400000000105, 0.00012098600000000001, 0.00012116599999999894, 0.00012119400000000155, 0.00012151399999999965, 0.0001207090000000001, 0.00012150000000000008, 0.00012065300000000181, 0.00012084700000000032, 0.00012150000000000008, 0.00012116599999999894, 0.00012070800000000062, 0.00012134700000000082, 0.0001212090000000006, 0.00012134700000000082, 0.00012116700000000188, 0.0001214029999999991, 0.00012084799999999979, 0.00012152699999999975, 0.00012066600000000191, 0.0001208050000000016, 0.00012136100000000039, 0.0001207090000000001, 0.00012068100000000095, 0.00012063899999999877, 0.00012102699999999925, 0.00012134699999999735, 0.00012084700000000032, 0.00012084699999999685, 0.00012095800000000087, 0.00012068100000000095, 0.00012151399999999965, 0.00012086099999999989, 0.00012083400000000022, 0.00012116700000000188, 0.00012101400000000262, 0.00012151399999999965, 0.00012102799999999872, 0.00012134700000000082, 0.00012134700000000082, 0.00012130599999999811, 0.00012134799999999682, 0.00012069399999999758, 0.00012084700000000032]</msg>
<status status="PASS" starttime="20201117 14:43:17.765" endtime="20201117 14:43:17.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.760" endtime="20201117 14:43:17.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.770" endtime="20201117 14:43:17.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:17.774" endtime="20201117 14:43:17.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.772" endtime="20201117 14:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.768" endtime="20201117 14:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.397" endtime="20201117 14:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.990" endtime="20201117 14:43:17.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:16.989" endtime="20201117 14:43:17.795"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.797" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.806" endtime="20201117 14:43:17.826"></status>
</kw>
<msg timestamp="20201117 14:43:17.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.804" endtime="20201117 14:43:17.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:17.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:17.828" endtime="20201117 14:43:17.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.831" endtime="20201117 14:43:17.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.801" endtime="20201117 14:43:17.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.799" endtime="20201117 14:43:17.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:17.841" endtime="20201117 14:43:18.127"></status>
</kw>
<msg timestamp="20201117 14:43:18.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:17.839" endtime="20201117 14:43:18.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024925944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.131" endtime="20201117 14:43:18.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.140" endtime="20201117 14:43:18.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.836" endtime="20201117 14:43:18.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.834" endtime="20201117 14:43:18.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.147" level="INFO">${RESULT} = [{'time': 0.025048153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001222090000000016, 'source_diff': 0.0001222090000000016}, {'time': 0.025182194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:18.143" endtime="20201117 14:43:18.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.148" endtime="20201117 14:43:18.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.165" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.164" endtime="20201117 14:43:18.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.167" level="INFO">VALUE: [0.0001222090000000016, 0.00012219400000000255, 0.00012251300000000118, 0.00012167999999999901, 0.0001225419999999998, 0.00012220800000000212, 0.00012251399999999718, 0.00012251400000000065, 0.00012186100000000089, 0.00012197300000000091, 0.00012184800000000079, 0.00012219400000000255, 0.00012215299999999985, 0.00012248599999999804, 0.00012201400000000015, 0.0001217090000000011, 0.00012201400000000015, 0.00012238900000000053, 0.00012184800000000079, 0.00012234699999999835, 0.00012200000000000058, 0.00012169399999999858, 0.00012236099999999792, 0.00012201400000000015, 0.00012166699999999891, 0.00012166699999999891, 0.00012252700000000075, 0.0001225129999999977, 0.0001218050000000026, 0.00012167999999999901, 0.00012201400000000015, 0.00012237499999999749, 0.00012183400000000122, 0.00012252800000000022, 0.00012218099999999898, 0.00012201300000000068, 0.00012166599999999944, 0.00012186100000000089, 0.00012186100000000089, 0.00012184700000000132, 0.00012204199999999929, 0.00012168099999999848, 0.00012186200000000036, 0.0001223059999999991, 0.00012201300000000068, 0.00012167999999999901, 0.0001221799999999995, 0.00012250000000000108, 0.00012186100000000089, 0.00012186100000000089]</msg>
<status status="PASS" starttime="20201117 14:43:18.166" endtime="20201117 14:43:18.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.161" endtime="20201117 14:43:18.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.171" endtime="20201117 14:43:18.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.174" endtime="20201117 14:43:18.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.173" endtime="20201117 14:43:18.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.169" endtime="20201117 14:43:18.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.798" endtime="20201117 14:43:18.195"></status>
</kw>
<msg timestamp="20201117 14:43:18.195" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.204" endtime="20201117 14:43:18.225"></status>
</kw>
<msg timestamp="20201117 14:43:18.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.202" endtime="20201117 14:43:18.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.227" endtime="20201117 14:43:18.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.230" endtime="20201117 14:43:18.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.200" endtime="20201117 14:43:18.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.197" endtime="20201117 14:43:18.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.241" endtime="20201117 14:43:18.526"></status>
</kw>
<msg timestamp="20201117 14:43:18.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.239" endtime="20201117 14:43:18.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.530" endtime="20201117 14:43:18.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.539" endtime="20201117 14:43:18.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.236" endtime="20201117 14:43:18.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.234" endtime="20201117 14:43:18.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.546" level="INFO">${RESULT} = [{'time': 0.022474236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001224030000000001, 'source_diff': 0.0001224030000000001}, {'time': 0.022603333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:18.542" endtime="20201117 14:43:18.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.559" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.547" endtime="20201117 14:43:18.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.564" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.563" endtime="20201117 14:43:18.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.566" level="INFO">VALUE: [0.0001224030000000001, 0.00012220799999999865, 0.00012200000000000058, 0.0001222359999999978, 0.00012168099999999848, 0.00012234699999999835, 0.00012251400000000065, 0.00012200000000000058, 0.00012236099999999792, 0.0001220969999999981, 0.00012250000000000108, 0.00012218099999999898, 0.00012168100000000195, 0.00012251400000000065, 0.00012252800000000022, 0.00012233299999999878, 0.000122292000000003, 0.00012186100000000089, 0.00012169500000000152, 0.00012165299999999934, 0.00012252700000000075, 0.00012184699999999785, 0.00012251400000000065, 0.00012184699999999785, 0.00012186099999999742, 0.00012183299999999828, 0.00012168099999999848, 0.00012182000000000165, 0.00012218099999999898, 0.00012252700000000075, 0.00012219400000000255, 0.00012200000000000058, 0.00012184700000000132, 0.00012186100000000089, 0.00012197200000000144, 0.00012252800000000022, 0.00012251400000000065, 0.00012251400000000065, 0.00012216699999999941, 0.00012234700000000182, 0.0001221799999999995, 0.00012167999999999901, 0.00012234699999999835, 0.00012215299999999985, 0.00012166699999999891, 0.00012168100000000195, 0.00012169399999999858, 0.0001224999999999976, 0.0001221799999999995, 0.00012186100000000089]</msg>
<status status="PASS" starttime="20201117 14:43:18.565" endtime="20201117 14:43:18.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.560" endtime="20201117 14:43:18.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.570" endtime="20201117 14:43:18.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.573" endtime="20201117 14:43:18.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.572" endtime="20201117 14:43:18.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.568" endtime="20201117 14:43:18.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.196" endtime="20201117 14:43:18.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.796" endtime="20201117 14:43:18.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:17.795" endtime="20201117 14:43:18.594"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.597" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.606" endtime="20201117 14:43:18.627"></status>
</kw>
<msg timestamp="20201117 14:43:18.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.604" endtime="20201117 14:43:18.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:18.629" endtime="20201117 14:43:18.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.632" endtime="20201117 14:43:18.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.602" endtime="20201117 14:43:18.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.599" endtime="20201117 14:43:18.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.641" endtime="20201117 14:43:18.927"></status>
</kw>
<msg timestamp="20201117 14:43:18.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026260181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026383597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.639" endtime="20201117 14:43:18.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026260181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026383597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:18.931" endtime="20201117 14:43:18.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.939" endtime="20201117 14:43:18.941"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.637" endtime="20201117 14:43:18.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.635" endtime="20201117 14:43:18.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:18.946" level="INFO">${RESULT} = [{'time': 0.026383597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001234160000000012, 'source_diff': 0.0001234160000000012}, {'time': 0.026516597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:18.943" endtime="20201117 14:43:18.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:18.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:18.947" endtime="20201117 14:43:18.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.966" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:18.965" endtime="20201117 14:43:18.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:18.968" level="INFO">VALUE: [0.0001234160000000012, 0.00012301399999999768, 0.00012284699999999885, 0.00012286100000000189, 0.00012302800000000072, 0.00012268099999999948, 0.00012351399999999818, 0.00012329200000000054, 0.00012336099999999892, 0.00012268, 0.00012283299999999928, 0.00012351400000000165, 0.00012336100000000239, 0.00012301399999999768, 0.0001233480000000023, 0.00012269399999999958, 0.00012351300000000218, 0.00012287499999999799, 0.00012333299999999978, 0.00012298599999999854, 0.00012333299999999978, 0.00012286100000000189, 0.00012336099999999892, 0.00012318099999999998, 0.00012266600000000044, 0.00012319400000000008, 0.00012301400000000115, 0.00012301400000000115, 0.00012352800000000122, 0.00012352799999999775, 0.00012268099999999948, 0.00012352700000000175, 0.00012304100000000082, 0.00012333299999999978, 0.00012286099999999842, 0.00012283299999999928, 0.00012301400000000115, 0.00012268099999999602, 0.000122777999999997, 0.00012268099999999948, 0.00012287499999999452, 0.0001234999999999986, 0.00012284700000000232, 0.00012287500000000146, 0.00012287500000000146, 0.00012333300000000325, 0.00012302799999999725, 0.0001229449999999993, 0.0001229030000000006, 0.00012334700000000282]</msg>
<status status="PASS" starttime="20201117 14:43:18.967" endtime="20201117 14:43:18.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.962" endtime="20201117 14:43:18.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:18.972" endtime="20201117 14:43:18.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:18.975" endtime="20201117 14:43:18.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.974" endtime="20201117 14:43:18.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.970" endtime="20201117 14:43:18.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.598" endtime="20201117 14:43:18.996"></status>
</kw>
<msg timestamp="20201117 14:43:18.997" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.006" endtime="20201117 14:43:19.027"></status>
</kw>
<msg timestamp="20201117 14:43:19.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.004" endtime="20201117 14:43:19.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.029" endtime="20201117 14:43:19.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.031" endtime="20201117 14:43:19.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.002" endtime="20201117 14:43:19.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.999" endtime="20201117 14:43:19.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.042" endtime="20201117 14:43:19.327"></status>
</kw>
<msg timestamp="20201117 14:43:19.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023791778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.040" endtime="20201117 14:43:19.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023791778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.331" endtime="20201117 14:43:19.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.339" endtime="20201117 14:43:19.341"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.037" endtime="20201117 14:43:19.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.036" endtime="20201117 14:43:19.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.346" level="INFO">${RESULT} = [{'time': 0.023791778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012306999999999943, 'source_diff': 0.00012306999999999943}, {'time': 0.023921806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.343" endtime="20201117 14:43:19.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.360" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:19.347" endtime="20201117 14:43:19.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.364" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.363" endtime="20201117 14:43:19.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.367" level="INFO">VALUE: [0.00012306999999999943, 0.0001228480000000018, 0.00012283300000000275, 0.00012336099999999892, 0.00012268, 0.00012337500000000196, 0.00012272300000000166, 0.00012266700000000338, 0.00012269500000000252, 0.00012301400000000115, 0.0001228480000000018, 0.00012291700000000017, 0.00012351400000000165, 0.00012269400000000305, 0.00012334700000000282, 0.00012284699999999885, 0.00012334699999999935, 0.00012351399999999818, 0.00012301400000000115, 0.00012336099999999892, 0.00012284700000000232, 0.00012273600000000176, 0.00012268099999999948, 0.00012284699999999885, 0.00012268099999999948, 0.00012268099999999948, 0.00012334799999999882, 0.0001232359999999988, 0.0001233190000000002, 0.00012350000000000208, 0.0001232090000000026, 0.00012269500000000252, 0.00012348599999999904, 0.0001229999999999981, 0.00012347199999999947, 0.00012284699999999885, 0.00012352799999999775, 0.00012270799999999915, 0.00012301400000000115, 0.00012305599999999986, 0.00012268100000000295, 0.00012318099999999998, 0.00012348699999999851, 0.00012334699999999935, 0.0001229999999999981, 0.00012334699999999935, 0.00012283299999999928, 0.0001234999999999986, 0.00012352800000000122, 0.00012333399999999925]</msg>
<status status="PASS" starttime="20201117 14:43:19.365" endtime="20201117 14:43:19.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.360" endtime="20201117 14:43:19.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.371" endtime="20201117 14:43:19.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.374" endtime="20201117 14:43:19.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.373" endtime="20201117 14:43:19.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.369" endtime="20201117 14:43:19.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.997" endtime="20201117 14:43:19.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.596" endtime="20201117 14:43:19.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:18.595" endtime="20201117 14:43:19.395"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.398" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.406" endtime="20201117 14:43:19.427"></status>
</kw>
<msg timestamp="20201117 14:43:19.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.405" endtime="20201117 14:43:19.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.429" endtime="20201117 14:43:19.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.431" endtime="20201117 14:43:19.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.402" endtime="20201117 14:43:19.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.400" endtime="20201117 14:43:19.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.441" endtime="20201117 14:43:19.727"></status>
</kw>
<msg timestamp="20201117 14:43:19.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025016639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025141222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.439" endtime="20201117 14:43:19.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025016639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025141222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.731" endtime="20201117 14:43:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.740" endtime="20201117 14:43:19.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.436" endtime="20201117 14:43:19.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.435" endtime="20201117 14:43:19.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:19.746" level="INFO">${RESULT} = [{'time': 0.025141222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012458300000000103, 'source_diff': 0.00012458300000000103}, {'time': 0.025276236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:19.743" endtime="20201117 14:43:19.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:19.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:19.747" endtime="20201117 14:43:19.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.765" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:19.764" endtime="20201117 14:43:19.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.768" level="INFO">VALUE: [0.00012458300000000103, 0.00012377800000000147, 0.00012454199999999832, 0.00012418100000000099, 0.00012368099999999702, 0.00012369500000000005, 0.0001241800000000015, 0.0001241800000000015, 0.00012401399999999868, 0.00012424999999999936, 0.00012398599999999954, 0.00012438899999999906, 0.00012401399999999868, 0.00012366700000000092, 0.00012388899999999856, 0.00012452699999999928, 0.00012386100000000289, 0.0001244999999999996, 0.00012447200000000047, 0.00012434700000000035, 0.00012368099999999702, 0.00012401400000000215, 0.00012368099999999702, 0.000123680000000001, 0.00012386099999999942, 0.0001244030000000021, 0.000123680000000001, 0.00012434700000000035, 0.00012451399999999918, 0.00012384799999999932, 0.0001245129999999997, 0.00012398599999999954, 0.00012434700000000035, 0.00012434700000000035, 0.00012434700000000035, 0.0001244999999999996, 0.0001240129999999992, 0.0001239999999999991, 0.00012387500000000246, 0.00012417999999999804, 0.00012393100000000074, 0.00012365300000000135, 0.00012452799999999875, 0.00012368100000000048, 0.00012451399999999918, 0.00012433400000000025, 0.00012366700000000438, 0.00012434699999999688, 0.00012451399999999918, 0.00012451399999999918]</msg>
<status status="PASS" starttime="20201117 14:43:19.766" endtime="20201117 14:43:19.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.761" endtime="20201117 14:43:19.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.771" endtime="20201117 14:43:19.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:19.775" endtime="20201117 14:43:19.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.773" endtime="20201117 14:43:19.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.770" endtime="20201117 14:43:19.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.398" endtime="20201117 14:43:19.796"></status>
</kw>
<msg timestamp="20201117 14:43:19.796" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.805" endtime="20201117 14:43:19.825"></status>
</kw>
<msg timestamp="20201117 14:43:19.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.803" endtime="20201117 14:43:19.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:19.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:19.827" endtime="20201117 14:43:19.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.829" endtime="20201117 14:43:19.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.800" endtime="20201117 14:43:19.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.798" endtime="20201117 14:43:19.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:19.840" endtime="20201117 14:43:20.128"></status>
</kw>
<msg timestamp="20201117 14:43:20.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:19.838" endtime="20201117 14:43:20.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.133" endtime="20201117 14:43:20.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.141" endtime="20201117 14:43:20.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.836" endtime="20201117 14:43:20.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.834" endtime="20201117 14:43:20.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.148" level="INFO">${RESULT} = [{'time': 0.022478722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012391599999999822, 'source_diff': 0.00012391599999999822}, {'time': 0.022614722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.144" endtime="20201117 14:43:20.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.149" endtime="20201117 14:43:20.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.166" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.165" endtime="20201117 14:43:20.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.169" level="INFO">VALUE: [0.00012391599999999822, 0.00012451399999999918, 0.00012451400000000265, 0.00012452799999999875, 0.00012418099999999752, 0.00012417999999999804, 0.000123680000000001, 0.00012384699999999985, 0.00012438900000000253, 0.00012386099999999942, 0.00012456999999999746, 0.00012434699999999688, 0.00012418100000000099, 0.00012402799999999825, 0.00012451399999999918, 0.00012383300000000028, 0.00012384699999999985, 0.00012401399999999868, 0.0001241939999999976, 0.00012434700000000035, 0.00012451399999999918, 0.0001239999999999991, 0.00012434799999999982, 0.00012434700000000035, 0.00012402800000000172, 0.00012417999999999804, 0.00012451399999999918, 0.00012386099999999942, 0.00012415300000000185, 0.00012416700000000142, 0.00012384799999999932, 0.0001244999999999996, 0.00012369400000000058, 0.00012397199999999997, 0.00012401400000000215, 0.00012418100000000099, 0.00012402799999999825, 0.00012451400000000265, 0.00012400000000000258, 0.00012366700000000092, 0.00012434699999999688, 0.00012401400000000215, 0.000123680000000001, 0.00012436099999999992, 0.00012390199999999865, 0.00012434700000000035, 0.00012401399999999868, 0.00012369400000000058, 0.0001244999999999996, 0.0001236939999999971]</msg>
<status status="PASS" starttime="20201117 14:43:20.167" endtime="20201117 14:43:20.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.163" endtime="20201117 14:43:20.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.172" endtime="20201117 14:43:20.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.176" endtime="20201117 14:43:20.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.174" endtime="20201117 14:43:20.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.171" endtime="20201117 14:43:20.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.797" endtime="20201117 14:43:20.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.396" endtime="20201117 14:43:20.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:19.396" endtime="20201117 14:43:20.197"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.200" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.208" endtime="20201117 14:43:20.230"></status>
</kw>
<msg timestamp="20201117 14:43:20.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.206" endtime="20201117 14:43:20.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.231" endtime="20201117 14:43:20.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.234" endtime="20201117 14:43:20.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.204" endtime="20201117 14:43:20.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.202" endtime="20201117 14:43:20.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.244" endtime="20201117 14:43:20.530"></status>
</kw>
<msg timestamp="20201117 14:43:20.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025974125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026099403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.242" endtime="20201117 14:43:20.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025974125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026099403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.534" endtime="20201117 14:43:20.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.543" endtime="20201117 14:43:20.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.239" endtime="20201117 14:43:20.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.237" endtime="20201117 14:43:20.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.550" level="INFO">${RESULT} = [{'time': 0.026099403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001252779999999995, 'source_diff': 0.0001252779999999995}, {'time': 0.026235389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:20.547" endtime="20201117 14:43:20.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.551" endtime="20201117 14:43:20.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.570" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.569" endtime="20201117 14:43:20.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.572" level="INFO">VALUE: [0.0001252779999999995, 0.00012466700000000192, 0.00012468099999999802, 0.00012501399999999968, 0.00012515300000000285, 0.00012466599999999897, 0.00012551400000000018, 0.00012534700000000135, 0.00012534700000000135, 0.00012551400000000018, 0.00012484700000000085, 0.00012466699999999845, 0.00012518100000000199, 0.00012517999999999904, 0.00012484699999999738, 0.00012469400000000158, 0.00012486099999999695, 0.00012518100000000199, 0.00012469499999999759, 0.00012487499999999999, 0.00012519400000000208, 0.00012486100000000042, 0.00012517999999999904, 0.00012483300000000128, 0.00012494399999999836, 0.00012468100000000149, 0.00012551400000000018, 0.00012483400000000075, 0.00012497300000000044, 0.00012533300000000178, 0.00012484700000000085, 0.00012551400000000018, 0.00012552799999999975, 0.00012534700000000135, 0.00012520899999999766, 0.00012502799999999925, 0.00012518100000000199, 0.0001250000000000001, 0.00012536100000000092, 0.00012487499999999652, 0.000124680000000002, 0.0001252360000000008, 0.000124777999999999, 0.00012534699999999788, 0.00012469499999999412, 0.000124680000000002, 0.00012554099999999985, 0.0001246529999999954, 0.00012519400000000208, 0.00012484699999999738]</msg>
<status status="PASS" starttime="20201117 14:43:20.571" endtime="20201117 14:43:20.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.566" endtime="20201117 14:43:20.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.575" endtime="20201117 14:43:20.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.579" endtime="20201117 14:43:20.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.577" endtime="20201117 14:43:20.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.574" endtime="20201117 14:43:20.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.200" endtime="20201117 14:43:20.600"></status>
</kw>
<msg timestamp="20201117 14:43:20.600" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.609" endtime="20201117 14:43:20.629"></status>
</kw>
<msg timestamp="20201117 14:43:20.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.607" endtime="20201117 14:43:20.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:20.631" endtime="20201117 14:43:20.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.633" endtime="20201117 14:43:20.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.604" endtime="20201117 14:43:20.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.602" endtime="20201117 14:43:20.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.644" endtime="20201117 14:43:20.930"></status>
</kw>
<msg timestamp="20201117 14:43:20.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.642" endtime="20201117 14:43:20.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022429125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:20.934" endtime="20201117 14:43:20.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.943" endtime="20201117 14:43:20.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.640" endtime="20201117 14:43:20.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.638" endtime="20201117 14:43:20.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:20.950" level="INFO">${RESULT} = [{'time': 0.022554653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012552799999999975, 'source_diff': 0.00012552799999999975}, {'time': 0.022693681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:20.947" endtime="20201117 14:43:20.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:20.964" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:20.951" endtime="20201117 14:43:20.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.968" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:43:20.967" endtime="20201117 14:43:20.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:20.971" level="INFO">VALUE: [0.00012552799999999975, 0.00012502799999999925, 0.00012547200000000147, 0.000124680000000002, 0.00012551400000000018, 0.00012516700000000242, 0.00012519500000000156, 0.00012518100000000199, 0.00012468099999999802, 0.00012551400000000018, 0.00012484800000000032, 0.00012534700000000135, 0.00012467999999999854, 0.0001251800000000025, 0.00012518099999999852, 0.00012502799999999925, 0.00012483400000000075, 0.00012497300000000044, 0.00012462499999999974, 0.00012533300000000178, 0.00012486100000000042, 0.00012533300000000178, 0.00012538900000000006, 0.00012484700000000085, 0.00012484800000000032, 0.00012508300000000153, 0.00012538900000000006, 0.00012484700000000085, 0.0001255559999999989, 0.00012515299999999938, 0.00012518100000000199, 0.00012469500000000105, 0.00012505499999999892, 0.00012501399999999968, 0.00012516699999999895, 0.0001251800000000025, 0.00012467999999999854, 0.00012554199999999932, 0.00012540299999999963, 0.0001248060000000016, 0.00012486100000000042, 0.00012468100000000149, 0.00012534800000000082, 0.00012502699999999978, 0.00012501400000000315, 0.0001246939999999981, 0.00012530500000000264, 0.0001248190000000017, 0.00012466699999999845, 0.00012518099999999852]</msg>
<status status="PASS" starttime="20201117 14:43:20.970" endtime="20201117 14:43:20.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.965" endtime="20201117 14:43:20.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:20.974" endtime="20201117 14:43:20.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:20.978" endtime="20201117 14:43:20.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.976" endtime="20201117 14:43:20.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.973" endtime="20201117 14:43:20.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.601" endtime="20201117 14:43:20.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.198" endtime="20201117 14:43:20.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:20.197" endtime="20201117 14:43:20.999"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.002" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.010" endtime="20201117 14:43:21.032"></status>
</kw>
<msg timestamp="20201117 14:43:21.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.009" endtime="20201117 14:43:21.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.034" endtime="20201117 14:43:21.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.036" endtime="20201117 14:43:21.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.006" endtime="20201117 14:43:21.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.004" endtime="20201117 14:43:21.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.047" endtime="20201117 14:43:21.333"></status>
</kw>
<msg timestamp="20201117 14:43:21.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025350861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.045" endtime="20201117 14:43:21.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025224292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025350861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.337" endtime="20201117 14:43:21.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.345" endtime="20201117 14:43:21.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.043" endtime="20201117 14:43:21.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.040" endtime="20201117 14:43:21.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.352" level="INFO">${RESULT} = [{'time': 0.025350861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000126569, 'source_diff': 0.000126569}, {'time': 0.025483875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000126514000000...</msg>
<status status="PASS" starttime="20201117 14:43:21.349" endtime="20201117 14:43:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:21.353" endtime="20201117 14:43:21.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.371" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.370" endtime="20201117 14:43:21.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.373" level="INFO">VALUE: [0.000126569, 0.00012651400000000118, 0.0001265000000000016, 0.00012619499999999909, 0.00012597300000000144, 0.00012568100000000249, 0.0001265130000000017, 0.00012601400000000068, 0.00012584699999999838, 0.00012591600000000022, 0.00012588900000000056, 0.00012619499999999909, 0.00012655500000000042, 0.00012568099999999902, 0.00012588900000000056, 0.00012631899999999974, 0.0001265559999999999, 0.00012618099999999952, 0.00012634699999999888, 0.0001265000000000016, 0.00012568099999999902, 0.00012636100000000192, 0.00012586100000000142, 0.0001261939999999996, 0.00012567999999999954, 0.00012634700000000235, 0.00012566699999999945, 0.000126471999999999, 0.00012601400000000068, 0.00012612500000000124, 0.00012583300000000228, 0.00012580499999999967, 0.00012567999999999954, 0.00012567999999999954, 0.00012601400000000068, 0.00012565299999999988, 0.0001258620000000009, 0.00012601400000000068, 0.00012616600000000047, 0.0001260000000000011, 0.0001265139999999977, 0.00012601400000000068, 0.00012586100000000142, 0.0001260000000000011, 0.00012634799999999835, 0.000126569, 0.000126165999999997, 0.00012636099999999845, 0.00012651400000000118, 0.00012649999999999467]</msg>
<status status="PASS" starttime="20201117 14:43:21.372" endtime="20201117 14:43:21.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.367" endtime="20201117 14:43:21.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.377" endtime="20201117 14:43:21.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.380" endtime="20201117 14:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.379" endtime="20201117 14:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.375" endtime="20201117 14:43:21.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.002" endtime="20201117 14:43:21.401"></status>
</kw>
<msg timestamp="20201117 14:43:21.401" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.410" endtime="20201117 14:43:21.431"></status>
</kw>
<msg timestamp="20201117 14:43:21.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.408" endtime="20201117 14:43:21.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.432" endtime="20201117 14:43:21.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.435" endtime="20201117 14:43:21.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.405" endtime="20201117 14:43:21.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.403" endtime="20201117 14:43:21.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.446" endtime="20201117 14:43:21.732"></status>
</kw>
<msg timestamp="20201117 14:43:21.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.444" endtime="20201117 14:43:21.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.736" endtime="20201117 14:43:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.745" endtime="20201117 14:43:21.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.442" endtime="20201117 14:43:21.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.440" endtime="20201117 14:43:21.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:21.752" level="INFO">${RESULT} = [{'time': 0.022815083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012636099999999845, 'source_diff': 0.00012636099999999845}, {'time': 0.022954111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:21.748" endtime="20201117 14:43:21.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:21.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:21.753" endtime="20201117 14:43:21.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.770" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:43:21.769" endtime="20201117 14:43:21.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.773" level="INFO">VALUE: [0.00012636099999999845, 0.00012566699999999945, 0.00012618100000000299, 0.00012579199999999957, 0.00012584699999999838, 0.00012584800000000132, 0.00012586099999999795, 0.00012570800000000215, 0.00012616600000000047, 0.0001256939999999991, 0.00012651400000000118, 0.00012652800000000075, 0.00012569499999999859, 0.00012652800000000075, 0.00012562500000000074, 0.00012567999999999954, 0.0001260139999999972, 0.00012634699999999888, 0.00012636100000000192, 0.00012651400000000118, 0.00012649999999999814, 0.00012598599999999807, 0.00012566699999999945, 0.0001265130000000017, 0.00012593099999999927, 0.00012601400000000068, 0.00012586100000000142, 0.00012618100000000299, 0.00012584700000000185, 0.00012601400000000068, 0.0001261939999999996, 0.0001265130000000017, 0.00012612500000000124, 0.00012619400000000308, 0.00012566699999999945, 0.0001263329999999993, 0.00012634700000000235, 0.00012618100000000299, 0.00012634800000000182, 0.00012622199999999875, 0.00012634699999999888, 0.0001256939999999991, 0.00012651400000000118, 0.00012584699999999838, 0.00012602800000000025, 0.00012566699999999945, 0.000126569, 0.00012618000000000004, 0.00012652800000000075, 0.0001256939999999991]</msg>
<status status="PASS" starttime="20201117 14:43:21.771" endtime="20201117 14:43:21.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.766" endtime="20201117 14:43:21.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.776" endtime="20201117 14:43:21.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:21.779" endtime="20201117 14:43:21.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.778" endtime="20201117 14:43:21.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.774" endtime="20201117 14:43:21.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.402" endtime="20201117 14:43:21.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.000" endtime="20201117 14:43:21.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.000" endtime="20201117 14:43:21.801"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.803" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.812" endtime="20201117 14:43:21.835"></status>
</kw>
<msg timestamp="20201117 14:43:21.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.811" endtime="20201117 14:43:21.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:21.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:21.836" endtime="20201117 14:43:21.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.839" endtime="20201117 14:43:21.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.808" endtime="20201117 14:43:21.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.805" endtime="20201117 14:43:21.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:21.848" endtime="20201117 14:43:22.134"></status>
</kw>
<msg timestamp="20201117 14:43:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026363056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026490125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:21.847" endtime="20201117 14:43:22.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026363056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026490125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.138" endtime="20201117 14:43:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.146" endtime="20201117 14:43:22.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.844" endtime="20201117 14:43:22.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.842" endtime="20201117 14:43:22.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.153" level="INFO">${RESULT} = [{'time': 0.026490125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001270690000000005, 'source_diff': 0.0001270690000000005}, {'time': 0.026631139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:22.150" endtime="20201117 14:43:22.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.168" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.154" endtime="20201117 14:43:22.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.173" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.172" endtime="20201117 14:43:22.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.175" level="INFO">VALUE: [0.0001270690000000005, 0.00012668100000000002, 0.00012718100000000052, 0.00012748599999999957, 0.00012740300000000163, 0.00012667999999999707, 0.00012734699999999988, 0.00012749999999999914, 0.00012686100000000242, 0.00012749999999999914, 0.00012668100000000002, 0.00012668100000000002, 0.00012736100000000292, 0.00012718000000000104, 0.00012751400000000218, 0.00012668100000000002, 0.0001268329999999998, 0.0001273879999999991, 0.00012725000000000236, 0.00012751400000000218, 0.00012718000000000104, 0.00012749999999999914, 0.00012734699999999988, 0.0001275000000000026, 0.00012734699999999988, 0.00012734699999999988, 0.00012734699999999988, 0.00012684799999999885, 0.00012719399999999714, 0.00012734699999999988, 0.0001273889999999986, 0.0001268329999999998, 0.00012749999999999914, 0.0001275139999999987, 0.00012748599999999957, 0.00012748699999999558, 0.0001266659999999975, 0.00012717999999999757, 0.0001270000000000021, 0.0001273189999999938, 0.0001275000000000026, 0.00012736099999999945, 0.00012718100000000399, 0.00012674999999999492, 0.0001268329999999998, 0.00012736099999999945, 0.0001272079999999967, 0.0001271800000000045, 0.00012701399999999474, 0.00012701400000000168]</msg>
<status status="PASS" starttime="20201117 14:43:22.174" endtime="20201117 14:43:22.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.169" endtime="20201117 14:43:22.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.179" endtime="20201117 14:43:22.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.182" endtime="20201117 14:43:22.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.181" endtime="20201117 14:43:22.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.177" endtime="20201117 14:43:22.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.804" endtime="20201117 14:43:22.203"></status>
</kw>
<msg timestamp="20201117 14:43:22.204" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.212" endtime="20201117 14:43:22.234"></status>
</kw>
<msg timestamp="20201117 14:43:22.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.211" endtime="20201117 14:43:22.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.235" endtime="20201117 14:43:22.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.238" endtime="20201117 14:43:22.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.208" endtime="20201117 14:43:22.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.206" endtime="20201117 14:43:22.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.248" endtime="20201117 14:43:22.534"></status>
</kw>
<msg timestamp="20201117 14:43:22.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.247" endtime="20201117 14:43:22.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.538" endtime="20201117 14:43:22.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.546" endtime="20201117 14:43:22.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.244" endtime="20201117 14:43:22.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.242" endtime="20201117 14:43:22.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.553" level="INFO">${RESULT} = [{'time': 0.022513542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012743100000000077, 'source_diff': 0.00012743100000000077}, {'time': 0.022645542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:22.550" endtime="20201117 14:43:22.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.554" endtime="20201117 14:43:22.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.571" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.570" endtime="20201117 14:43:22.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.574" level="INFO">VALUE: [0.00012743100000000077, 0.0001275000000000026, 0.00012705500000000092, 0.00012668000000000054, 0.00012736100000000292, 0.00012684699999999938, 0.0001275139999999987, 0.00012730599999999717, 0.00012669499999999959, 0.00012702800000000125, 0.0001269170000000007, 0.0001274170000000012, 0.00012752799999999828, 0.00012684699999999938, 0.00012734699999999988, 0.00012751400000000218, 0.0001273200000000002, 0.00012736199999999892, 0.00012684799999999885, 0.0001268889999999981, 0.00012731899999999727, 0.00012668000000000054, 0.0001273330000000003, 0.00012701400000000168, 0.00012666700000000045, 0.00012666700000000045, 0.00012668100000000002, 0.00012731900000000074, 0.00012701400000000168, 0.0001275139999999987, 0.0001268329999999998, 0.00012670899999999916, 0.00012718099999999705, 0.00012701400000000168, 0.00012716700000000095, 0.00012726400000000193, 0.00012752800000000175, 0.0001273330000000003, 0.00012734699999999988, 0.00012662500000000174, 0.0001273200000000002, 0.00012752799999999828, 0.00012734800000000282, 0.0001273330000000003, 0.00012718000000000104, 0.0001275139999999987, 0.0001275139999999987, 0.00012734699999999988, 0.0001270000000000021, 0.00012688900000000156]</msg>
<status status="PASS" starttime="20201117 14:43:22.573" endtime="20201117 14:43:22.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.568" endtime="20201117 14:43:22.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.582" endtime="20201117 14:43:22.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.585" endtime="20201117 14:43:22.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.583" endtime="20201117 14:43:22.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.580" endtime="20201117 14:43:22.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.204" endtime="20201117 14:43:22.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.802" endtime="20201117 14:43:22.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:21.801" endtime="20201117 14:43:22.606"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.609" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.617" endtime="20201117 14:43:22.638"></status>
</kw>
<msg timestamp="20201117 14:43:22.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.616" endtime="20201117 14:43:22.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:22.639" endtime="20201117 14:43:22.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.642" endtime="20201117 14:43:22.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.613" endtime="20201117 14:43:22.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.611" endtime="20201117 14:43:22.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.651" endtime="20201117 14:43:22.937"></status>
</kw>
<msg timestamp="20201117 14:43:22.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025112722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.650" endtime="20201117 14:43:22.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025112722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:22.942" endtime="20201117 14:43:22.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.950" endtime="20201117 14:43:22.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.647" endtime="20201117 14:43:22.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.645" endtime="20201117 14:43:22.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:22.957" level="INFO">${RESULT} = [{'time': 0.025112722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000128569000000002, 'source_diff': 0.000128569000000002}, {'time': 0.025246722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:22.953" endtime="20201117 14:43:22.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:22.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:22.958" endtime="20201117 14:43:22.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.975" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:22.974" endtime="20201117 14:43:22.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:22.978" level="INFO">VALUE: [0.000128569000000002, 0.00012831899999999827, 0.0001285139999999997, 0.0001280139999999992, 0.00012834700000000088, 0.00012768100000000102, 0.000128472000000001, 0.0001283469999999974, 0.00012784700000000038, 0.00012793100000000127, 0.00012762499999999927, 0.00012836100000000045, 0.00012850000000000014, 0.00012768100000000102, 0.00012816699999999848, 0.0001280139999999992, 0.0001285139999999997, 0.00012772200000000025, 0.00012784700000000038, 0.00012809700000000063, 0.00012812499999999977, 0.00012818099999999805, 0.0001278889999999991, 0.0001285139999999997, 0.0001278469999999969, 0.00012766700000000145, 0.00012816700000000195, 0.00012837500000000002, 0.00012818099999999805, 0.00012818099999999805, 0.0001280269999999993, 0.00012850000000000014, 0.00012817999999999857, 0.00012818000000000204, 0.00012784700000000038, 0.0001280139999999992, 0.0001279309999999978, 0.00012844499999999787, 0.00012818000000000204, 0.0001280139999999992, 0.00012834700000000088, 0.00012833299999999784, 0.00012768100000000102, 0.00012768100000000102, 0.00012848600000000057, 0.00012783300000000428, 0.00012852699999999634, 0.00012817999999999857, 0.00012837500000000002, 0.00012769399999999764]</msg>
<status status="PASS" starttime="20201117 14:43:22.976" endtime="20201117 14:43:22.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.971" endtime="20201117 14:43:22.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:22.981" endtime="20201117 14:43:22.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:22.985" endtime="20201117 14:43:23.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.983" endtime="20201117 14:43:23.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.980" endtime="20201117 14:43:23.006"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.609" endtime="20201117 14:43:23.006"></status>
</kw>
<msg timestamp="20201117 14:43:23.006" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.015" endtime="20201117 14:43:23.035"></status>
</kw>
<msg timestamp="20201117 14:43:23.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.013" endtime="20201117 14:43:23.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.037" endtime="20201117 14:43:23.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.040" endtime="20201117 14:43:23.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.011" endtime="20201117 14:43:23.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.008" endtime="20201117 14:43:23.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.050" endtime="20201117 14:43:23.336"></status>
</kw>
<msg timestamp="20201117 14:43:23.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.049" endtime="20201117 14:43:23.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022512194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.340" endtime="20201117 14:43:23.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.348" endtime="20201117 14:43:23.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.046" endtime="20201117 14:43:23.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.044" endtime="20201117 14:43:23.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.355" level="INFO">${RESULT} = [{'time': 0.022640764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012857000000000146, 'source_diff': 0.00012857000000000146}, {'time': 0.022780792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:23.352" endtime="20201117 14:43:23.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:23.356" endtime="20201117 14:43:23.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.374" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.373" endtime="20201117 14:43:23.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.376" level="INFO">VALUE: [0.00012857000000000146, 0.00012819500000000109, 0.00012786099999999995, 0.00012806899999999802, 0.00012852799999999928, 0.00012833299999999784, 0.00012818099999999805, 0.00012784700000000038, 0.00012831999999999774, 0.00012786199999999942, 0.0001282499999999999, 0.0001281940000000016, 0.00012799999999999964, 0.00012786099999999995, 0.00012807000000000096, 0.00012850000000000014, 0.00012834799999999688, 0.00012840299999999916, 0.00012765300000000188, 0.00012784700000000038, 0.00012834700000000088, 0.00012777799999999853, 0.00012859700000000113, 0.00012786099999999995, 0.0001278469999999969, 0.00012808300000000106, 0.00012762499999999927, 0.00012786099999999995, 0.00012786099999999995, 0.00012802799999999878, 0.00012818099999999805, 0.00012768100000000102, 0.00012816700000000195, 0.00012854099999999938, 0.00012784799999999985, 0.0001282499999999999, 0.00012767999999999807, 0.0001278330000000008, 0.00012834700000000088, 0.00012850000000000014, 0.00012818100000000152, 0.0001285139999999997, 0.00012834800000000035, 0.0001281110000000002, 0.00012831899999999827, 0.00012786099999999995, 0.0001280139999999992, 0.0001285139999999997, 0.0001280139999999992, 0.00012784799999999985]</msg>
<status status="PASS" starttime="20201117 14:43:23.375" endtime="20201117 14:43:23.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.370" endtime="20201117 14:43:23.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.380" endtime="20201117 14:43:23.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.383" endtime="20201117 14:43:23.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.382" endtime="20201117 14:43:23.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.378" endtime="20201117 14:43:23.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.007" endtime="20201117 14:43:23.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.607" endtime="20201117 14:43:23.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:22.607" endtime="20201117 14:43:23.405"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.407" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.416" endtime="20201117 14:43:23.437"></status>
</kw>
<msg timestamp="20201117 14:43:23.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.414" endtime="20201117 14:43:23.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.438" endtime="20201117 14:43:23.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.441" endtime="20201117 14:43:23.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.411" endtime="20201117 14:43:23.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.409" endtime="20201117 14:43:23.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.450" endtime="20201117 14:43:23.737"></status>
</kw>
<msg timestamp="20201117 14:43:23.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025848667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02597775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:23.449" endtime="20201117 14:43:23.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025848667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02597775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:43:23.741" endtime="20201117 14:43:23.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.749" endtime="20201117 14:43:23.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.446" endtime="20201117 14:43:23.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.444" endtime="20201117 14:43:23.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:23.757" level="INFO">${RESULT} = [{'time': 0.02597775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012908300000000206, 'source_diff': 0.00012908300000000206}, {'time': 0.026120764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:43:23.753" endtime="20201117 14:43:23.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:23.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:23.758" endtime="20201117 14:43:23.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.776" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:23.775" endtime="20201117 14:43:23.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.779" level="INFO">VALUE: [0.00012908300000000206, 0.0001288330000000018, 0.00012868100000000202, 0.00012869499999999812, 0.00012897300000000098, 0.00012919399999999914, 0.0001290140000000002, 0.0001294439999999994, 0.0001290140000000002, 0.0001293469999999984, 0.00012884700000000138, 0.0001295270000000008, 0.00012917999999999957, 0.0001293469999999984, 0.00012951399999999724, 0.00012950000000000114, 0.00012931900000000274, 0.00012950000000000114, 0.00012954100000000038, 0.00012868099999999855, 0.00012883299999999834, 0.00012919399999999914, 0.0001288330000000018, 0.00012867999999999907, 0.00012918099999999905, 0.00012954100000000038, 0.0001290140000000002, 0.00012868099999999855, 0.00012917999999999957, 0.00012952800000000028, 0.00012954199999999985, 0.00012881900000000224, 0.00012900000000000064, 0.0001288890000000001, 0.00012934800000000135, 0.00012916699999999948, 0.0001293469999999984, 0.00012886099999999748, 0.0001289439999999989, 0.0001286669999999955, 0.0001295000000000046, 0.00012902800000000325, 0.00012902800000000325, 0.00012916699999999948, 0.00012869399999999864, 0.00012931900000000274, 0.00012867999999999907, 0.00012916699999999948, 0.00012920899999999819, 0.00012937499999999408]</msg>
<status status="PASS" starttime="20201117 14:43:23.777" endtime="20201117 14:43:23.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.773" endtime="20201117 14:43:23.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.782" endtime="20201117 14:43:23.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:23.786" endtime="20201117 14:43:23.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.784" endtime="20201117 14:43:23.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.780" endtime="20201117 14:43:23.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.408" endtime="20201117 14:43:23.806"></status>
</kw>
<msg timestamp="20201117 14:43:23.807" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.815" endtime="20201117 14:43:23.837"></status>
</kw>
<msg timestamp="20201117 14:43:23.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.814" endtime="20201117 14:43:23.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:23.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:23.838" endtime="20201117 14:43:23.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.841" endtime="20201117 14:43:23.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.811" endtime="20201117 14:43:23.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.809" endtime="20201117 14:43:23.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:23.851" endtime="20201117 14:43:24.138"></status>
</kw>
<msg timestamp="20201117 14:43:24.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:23.850" endtime="20201117 14:43:24.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.142" endtime="20201117 14:43:24.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.151" endtime="20201117 14:43:24.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.847" endtime="20201117 14:43:24.153"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.845" endtime="20201117 14:43:24.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.158" level="INFO">${RESULT} = [{'time': 0.022487819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012961099999999823, 'source_diff': 0.00012961099999999823}, {'time': 0.022625778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:24.154" endtime="20201117 14:43:24.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.171" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.159" endtime="20201117 14:43:24.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.176" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.175" endtime="20201117 14:43:24.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.179" level="INFO">VALUE: [0.00012961099999999823, 0.00012900000000000064, 0.0001290140000000002, 0.00012886100000000095, 0.0001295140000000007, 0.00012900000000000064, 0.00012868000000000254, 0.00012902799999999978, 0.00012936099999999798, 0.0001288339999999978, 0.0001295140000000007, 0.00012887500000000052, 0.00012898600000000107, 0.00012884700000000138, 0.0001293330000000023, 0.00012869500000000159, 0.00012948600000000157, 0.00012916699999999948, 0.00012934800000000135, 0.00012933299999999884, 0.0001295140000000007, 0.00012934700000000188, 0.00012918099999999905, 0.00012916699999999948, 0.00012886100000000095, 0.00012868099999999855, 0.0001295829999999991, 0.00012936099999999798, 0.00012950000000000114, 0.00012876299999999702, 0.00012906899999999902, 0.00012884700000000138, 0.00012886100000000095, 0.00012916699999999948, 0.0001295270000000008, 0.0001288469999999979, 0.00012862500000000027, 0.0001288469999999979, 0.0001290140000000002, 0.00012936100000000145, 0.0001290140000000002, 0.00012869500000000159, 0.00012951399999999724, 0.00012917999999999957, 0.00012867999999999907, 0.0001287630000000005, 0.0001293890000000006, 0.00012918099999999905, 0.00012884700000000138, 0.00012883400000000128]</msg>
<status status="PASS" starttime="20201117 14:43:24.177" endtime="20201117 14:43:24.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.172" endtime="20201117 14:43:24.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.182" endtime="20201117 14:43:24.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.186" endtime="20201117 14:43:24.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.184" endtime="20201117 14:43:24.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.180" endtime="20201117 14:43:24.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.807" endtime="20201117 14:43:24.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.406" endtime="20201117 14:43:24.207"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:23.405" endtime="20201117 14:43:24.207"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.209" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.218" endtime="20201117 14:43:24.239"></status>
</kw>
<msg timestamp="20201117 14:43:24.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.216" endtime="20201117 14:43:24.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.241" endtime="20201117 14:43:24.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.243" endtime="20201117 14:43:24.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.214" endtime="20201117 14:43:24.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.211" endtime="20201117 14:43:24.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.253" endtime="20201117 14:43:24.540"></status>
</kw>
<msg timestamp="20201117 14:43:24.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.252" endtime="20201117 14:43:24.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024983431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025113778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:24.545" endtime="20201117 14:43:24.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.553" endtime="20201117 14:43:24.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.249" endtime="20201117 14:43:24.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.247" endtime="20201117 14:43:24.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.560" level="INFO">${RESULT} = [{'time': 0.025113778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001303469999999994, 'source_diff': 0.0001303469999999994}, {'time': 0.025251792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:24.556" endtime="20201117 14:43:24.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.573" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.561" endtime="20201117 14:43:24.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.578" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.577" endtime="20201117 14:43:24.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.581" level="INFO">VALUE: [0.0001303469999999994, 0.0001303339999999993, 0.00013044499999999987, 0.0001297079999999992, 0.00013033299999999984, 0.0001305140000000017, 0.00012966699999999998, 0.0001305140000000017, 0.00012969500000000259, 0.00012972200000000225, 0.0001296660000000005, 0.0001298050000000002, 0.00013018000000000057, 0.0001303469999999994, 0.00012968099999999955, 0.00013049999999999867, 0.00013016700000000048, 0.00013030600000000017, 0.00013018000000000057, 0.00013051399999999824, 0.0001300140000000012, 0.00012968000000000007, 0.00013033299999999984, 0.00013018100000000005, 0.00013033400000000278, 0.00013038899999999812, 0.00012968000000000007, 0.00013001399999999774, 0.0001300279999999973, 0.00012968099999999955, 0.00013019499999999962, 0.00013034800000000235, 0.00012984799999999838, 0.00012980599999999967, 0.0001303469999999994, 0.0001305140000000017, 0.00012968000000000007, 0.0001303469999999994, 0.00012970900000000216, 0.0001300140000000012, 0.00013002800000000078, 0.0001300270000000013, 0.00013034700000000288, 0.00012995799999999946, 0.0001298469999999989, 0.00012968099999999955, 0.00012968099999999955, 0.00013054199999999738, 0.00013002699999999784, 0.00012974999999999792]</msg>
<status status="PASS" starttime="20201117 14:43:24.579" endtime="20201117 14:43:24.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.574" endtime="20201117 14:43:24.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.584" endtime="20201117 14:43:24.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.588" endtime="20201117 14:43:24.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.586" endtime="20201117 14:43:24.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.582" endtime="20201117 14:43:24.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.210" endtime="20201117 14:43:24.608"></status>
</kw>
<msg timestamp="20201117 14:43:24.609" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.617" endtime="20201117 14:43:24.638"></status>
</kw>
<msg timestamp="20201117 14:43:24.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.616" endtime="20201117 14:43:24.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:24.640" endtime="20201117 14:43:24.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.643" endtime="20201117 14:43:24.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.613" endtime="20201117 14:43:24.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.611" endtime="20201117 14:43:24.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.653" endtime="20201117 14:43:24.940"></status>
</kw>
<msg timestamp="20201117 14:43:24.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:24.652" endtime="20201117 14:43:24.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022378153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:43:24.945" endtime="20201117 14:43:24.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.953" endtime="20201117 14:43:24.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.649" endtime="20201117 14:43:24.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.647" endtime="20201117 14:43:24.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:24.960" level="INFO">${RESULT} = [{'time': 0.0225085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001303469999999994, 'source_diff': 0.0001303469999999994}, {'time': 0.022651514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:43:24.956" endtime="20201117 14:43:24.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:24.973" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:24.961" endtime="20201117 14:43:24.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.978" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:43:24.977" endtime="20201117 14:43:24.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:24.980" level="INFO">VALUE: [0.0001303469999999994, 0.00012984700000000238, 0.00013016700000000048, 0.00013054100000000138, 0.0001298339999999988, 0.00013001399999999774, 0.00012966599999999703, 0.00012968000000000007, 0.0001303469999999994, 0.0001305140000000017, 0.00013002800000000078, 0.00013004100000000088, 0.0001299859999999986, 0.00013018000000000057, 0.00013033299999999984, 0.00013052800000000128, 0.00013059699999999966, 0.00013052800000000128, 0.0001302920000000006, 0.00013050000000000214, 0.0001303469999999994, 0.0001305279999999978, 0.0001296249999999978, 0.00013018100000000005, 0.00013002800000000078, 0.00013019499999999962, 0.00012984799999999838, 0.00013051399999999824, 0.0001302079999999997, 0.00013027700000000156, 0.00012983299999999934, 0.00013052800000000128, 0.00012986099999999848, 0.00013034800000000235, 0.0001302079999999997, 0.00013018100000000005, 0.00012968000000000007, 0.00012968000000000007, 0.00012968099999999955, 0.00013034700000000288, 0.00013049999999999867, 0.00012968099999999955, 0.00013052800000000128, 0.0001296660000000005, 0.0001305279999999978, 0.0001300140000000012, 0.0001305140000000017, 0.00013018100000000005, 0.00012968099999999955, 0.00013001399999999774]</msg>
<status status="PASS" starttime="20201117 14:43:24.979" endtime="20201117 14:43:24.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.974" endtime="20201117 14:43:24.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:24.984" endtime="20201117 14:43:24.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:24.987" endtime="20201117 14:43:25.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.986" endtime="20201117 14:43:25.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.982" endtime="20201117 14:43:25.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.609" endtime="20201117 14:43:25.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.208" endtime="20201117 14:43:25.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:24.207" endtime="20201117 14:43:25.009"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.011" level="INFO">Repeating keyword, round 1/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.020" endtime="20201117 14:43:25.042"></status>
</kw>
<msg timestamp="20201117 14:43:25.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.019" endtime="20201117 14:43:25.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.044" endtime="20201117 14:43:25.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.046" endtime="20201117 14:43:25.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.016" endtime="20201117 14:43:25.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.013" endtime="20201117 14:43:25.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.056" endtime="20201117 14:43:25.343"></status>
</kw>
<msg timestamp="20201117 14:43:25.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026743361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026874792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.054" endtime="20201117 14:43:25.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026743361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026874792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.347" endtime="20201117 14:43:25.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.356" endtime="20201117 14:43:25.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.052" endtime="20201117 14:43:25.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.050" endtime="20201117 14:43:25.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.363" level="INFO">${RESULT} = [{'time': 0.026874792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001314310000000013, 'source_diff': 0.0001314310000000013}, {'time': 0.027012792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:43:25.359" endtime="20201117 14:43:25.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.377" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:25.364" endtime="20201117 14:43:25.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.382" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.381" endtime="20201117 14:43:25.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.385" level="INFO">VALUE: [0.0001314310000000013, 0.00013116700000000148, 0.00013083300000000034, 0.0001315140000000027, 0.00013068000000000107, 0.000131166999999998, 0.00013152800000000228, 0.0001313470000000004, 0.0001310279999999983, 0.00013134799999999988, 0.00013109700000000016, 0.0001308469999999999, 0.0001311799999999981, 0.0001313189999999978, 0.00013122299999999976, 0.000131166999999998, 0.00013134799999999988, 0.00013152699999999934, 0.00013151299999999977, 0.0001313470000000004, 0.00013151399999999924, 0.0001313470000000004, 0.00013151399999999924, 0.00013151399999999924, 0.00013118100000000105, 0.0001313470000000004, 0.0001308469999999999, 0.00013111099999999973, 0.0001313470000000004, 0.00013086099999999948, 0.00013072199999999978, 0.0001309859999999996, 0.00013151299999999977, 0.00013102700000000578, 0.00013083299999999687, 0.00013101399999999874, 0.00013113900000000234, 0.00013118100000000105, 0.0001315279999999988, 0.0001306809999999936, 0.00013118100000000105, 0.0001313890000000026, 0.00013137499999999608, 0.00013149999999999967, 0.00013134699999999694, 0.00013134700000000388, 0.00013151400000000618, 0.00013086200000000242, 0.00013101299999999927, 0.00013149999999999967]</msg>
<status status="PASS" starttime="20201117 14:43:25.383" endtime="20201117 14:43:25.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.378" endtime="20201117 14:43:25.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.388" endtime="20201117 14:43:25.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.392" endtime="20201117 14:43:25.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.390" endtime="20201117 14:43:25.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.386" endtime="20201117 14:43:25.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.012" endtime="20201117 14:43:25.413"></status>
</kw>
<msg timestamp="20201117 14:43:25.413" level="INFO">Repeating keyword, round 2/2.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.422" endtime="20201117 14:43:25.443"></status>
</kw>
<msg timestamp="20201117 14:43:25.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.420" endtime="20201117 14:43:25.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:43:25.445" endtime="20201117 14:43:25.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.448" endtime="20201117 14:43:25.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.417" endtime="20201117 14:43:25.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.415" endtime="20201117 14:43:25.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.458" endtime="20201117 14:43:25.743"></status>
</kw>
<msg timestamp="20201117 14:43:25.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.456" endtime="20201117 14:43:25.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:43:25.747" endtime="20201117 14:43:25.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.756" endtime="20201117 14:43:25.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.454" endtime="20201117 14:43:25.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.452" endtime="20201117 14:43:25.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:43:25.763" level="INFO">${RESULT} = [{'time': 0.022767111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013068000000000107, 'source_diff': 0.00013068000000000107}, {'time': 0.022909139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:43:25.759" endtime="20201117 14:43:25.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:43:25.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:43:25.764" endtime="20201117 14:43:25.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.781" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:43:25.780" endtime="20201117 14:43:25.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:43:25.784" level="INFO">VALUE: [0.00013068000000000107, 0.0001310279999999983, 0.00013149999999999967, 0.00013134699999999694, 0.00013084799999999938, 0.00013069400000000064, 0.0001315140000000027, 0.00013086099999999948, 0.00013104199999999788, 0.00013147200000000053, 0.00013151399999999924, 0.0001315140000000027, 0.00013151399999999924, 0.00013119400000000114, 0.00013119400000000114, 0.00013151399999999924, 0.00013086099999999948, 0.00013099999999999917, 0.00013137499999999955, 0.0001315140000000027, 0.0001308339999999998, 0.00013101299999999927, 0.00013101399999999874, 0.0001310700000000005, 0.0001314440000000014, 0.00013138899999999912, 0.0001310279999999983, 0.00013134799999999988, 0.00013102699999999884, 0.00013133300000000084, 0.00013119400000000114, 0.0001310700000000005, 0.00013101399999999874, 0.00013130600000000117, 0.00013151399999999924, 0.00013149999999999967, 0.0001311799999999981, 0.0001315140000000027, 0.00013119400000000114, 0.00013123599999999985, 0.00013066700000000098, 0.00013102699999999884, 0.00013101399999999874, 0.00013101399999999874, 0.00013063899999999837, 0.00013150000000000314, 0.0001308469999999999, 0.00013083300000000034, 0.0001313470000000004, 0.00013095899999999994]</msg>
<status status="PASS" starttime="20201117 14:43:25.782" endtime="20201117 14:43:25.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.777" endtime="20201117 14:43:25.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:43:25.787" endtime="20201117 14:43:25.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.791" endtime="20201117 14:43:25.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.789" endtime="20201117 14:43:25.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.786" endtime="20201117 14:43:25.811"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.414" endtime="20201117 14:43:25.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.010" endtime="20201117 14:43:25.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.009" endtime="20201117 14:43:25.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:42:05.938" endtime="20201117 14:43:25.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:43:25.821" endtime="20201117 14:43:25.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.820" endtime="20201117 14:43:25.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:43:25.818" endtime="20201117 14:43:25.842"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:42:05.865" endtime="20201117 14:43:25.842" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:40:44.370" endtime="20201117 14:43:25.848"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:40:42.299" endtime="20201117 14:43:25.862"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
