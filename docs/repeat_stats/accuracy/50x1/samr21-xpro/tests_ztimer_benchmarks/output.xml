<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 22:59:50.373" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:51.606" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:51.622" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:53.556" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:51.602" endtime="20201115 22:59:53.557"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.563" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:53.559" endtime="20201115 22:59:53.564"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.599" endtime="20201115 22:59:53.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:53.570" endtime="20201115 22:59:53.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.567" endtime="20201115 22:59:53.896"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.926" endtime="20201115 22:59:53.942"></status>
</kw>
<msg timestamp="20201115 22:59:53.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.923" endtime="20201115 22:59:53.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:53.945" endtime="20201115 22:59:53.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:53.956" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:53.951" endtime="20201115 22:59:53.957"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:53.917" endtime="20201115 22:59:53.959"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:53.911" endtime="20201115 22:59:53.960"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.908" endtime="20201115 22:59:53.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:53.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:53.968" endtime="20201115 22:59:53.970"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.963" endtime="20201115 22:59:53.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.907" endtime="20201115 22:59:53.971"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.905" endtime="20201115 22:59:53.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.973" endtime="20201115 22:59:53.976"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.901" endtime="20201115 22:59:53.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:53.979" endtime="20201115 22:59:53.983"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.898" endtime="20201115 22:59:53.985"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:51.596" endtime="20201115 22:59:53.985"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:54.001" endtime="20201115 22:59:54.023"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.998" endtime="20201115 22:59:54.025"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.058" endtime="20201115 22:59:54.073"></status>
</kw>
<msg timestamp="20201115 22:59:54.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.055" endtime="20201115 22:59:54.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.077" endtime="20201115 22:59:54.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.087" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:54.083" endtime="20201115 22:59:54.088"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:54.048" endtime="20201115 22:59:54.090"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:54.041" endtime="20201115 22:59:54.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.038" endtime="20201115 22:59:54.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:54.100" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:54.098" endtime="20201115 22:59:54.100"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.094" endtime="20201115 22:59:54.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.036" endtime="20201115 22:59:54.101"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.034" endtime="20201115 22:59:54.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.103" endtime="20201115 22:59:54.107"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.030" endtime="20201115 22:59:54.108"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.026" endtime="20201115 22:59:54.110"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:53.995" endtime="20201115 22:59:54.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.128" endtime="20201115 22:59:54.138"></status>
</kw>
<msg timestamp="20201115 22:59:54.139" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.124" endtime="20201115 22:59:54.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.145" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:54.141" endtime="20201115 22:59:54.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:54.147" endtime="20201115 22:59:54.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.117" endtime="20201115 22:59:54.154"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.112" endtime="20201115 22:59:54.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.166" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 22:59:54.164" endtime="20201115 22:59:54.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.170" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 22:59:54.168" endtime="20201115 22:59:54.171"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.158" endtime="20201115 22:59:54.173"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:53.986" endtime="20201115 22:59:54.175" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:50.633" endtime="20201115 22:59:54.183"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:54.317" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:54.333" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 22:59:56.275" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:54.314" endtime="20201115 22:59:56.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.282" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 22:59:56.279" endtime="20201115 22:59:56.282"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.311" endtime="20201115 22:59:56.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.288" endtime="20201115 22:59:56.614"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.286" endtime="20201115 22:59:56.616"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.645" endtime="20201115 22:59:56.660"></status>
</kw>
<msg timestamp="20201115 22:59:56.662" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.642" endtime="20201115 22:59:56.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.668" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.664" endtime="20201115 22:59:56.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.675" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:56.670" endtime="20201115 22:59:56.676"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:56.635" endtime="20201115 22:59:56.677"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:56.630" endtime="20201115 22:59:56.679"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.627" endtime="20201115 22:59:56.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:56.688" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:56.686" endtime="20201115 22:59:56.688"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.681" endtime="20201115 22:59:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.625" endtime="20201115 22:59:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.624" endtime="20201115 22:59:56.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.693" endtime="20201115 22:59:56.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.621" endtime="20201115 22:59:56.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.699" endtime="20201115 22:59:56.703"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.617" endtime="20201115 22:59:56.705"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:54.308" endtime="20201115 22:59:56.705"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:56.719" endtime="20201115 22:59:56.741"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.716" endtime="20201115 22:59:56.743"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.775" endtime="20201115 22:59:56.790"></status>
</kw>
<msg timestamp="20201115 22:59:56.791" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.772" endtime="20201115 22:59:56.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.799" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.794" endtime="20201115 22:59:56.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.805" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 22:59:56.801" endtime="20201115 22:59:56.806"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:56.765" endtime="20201115 22:59:56.807"></status>
</kw>
<status status="FAIL" starttime="20201115 22:59:56.758" endtime="20201115 22:59:56.809"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.756" endtime="20201115 22:59:56.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 22:59:56.817" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 22:59:56.816" endtime="20201115 22:59:56.818"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.812" endtime="20201115 22:59:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.754" endtime="20201115 22:59:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.752" endtime="20201115 22:59:56.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.821" endtime="20201115 22:59:56.824"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.749" endtime="20201115 22:59:56.826"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.744" endtime="20201115 22:59:56.827"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.713" endtime="20201115 22:59:56.828"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.919" endtime="20201115 22:59:56.936"></status>
</kw>
<msg timestamp="20201115 22:59:56.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.916" endtime="20201115 22:59:56.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:56.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:56.939" endtime="20201115 22:59:56.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.946" endtime="20201115 22:59:56.949"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.908" endtime="20201115 22:59:56.951"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.841" endtime="20201115 22:59:56.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:56.968" endtime="20201115 22:59:57.316"></status>
</kw>
<msg timestamp="20201115 22:59:57.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.191553458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191592222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:56.965" endtime="20201115 22:59:57.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.191553458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191592222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.326" endtime="20201115 22:59:57.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.344" endtime="20201115 22:59:57.348"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.958" endtime="20201115 22:59:57.349"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.954" endtime="20201115 22:59:57.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.361" level="INFO">${RESULT} = [{'time': 0.191592222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.876399999999669e-05, 'source_diff': 3.876399999999669e-05}, {'time': 0.191664389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.352" endtime="20201115 22:59:57.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.393" level="INFO">${ACCURACY} = {'source_diff': [3.876399999999669e-05, 3.954200000000352e-05, 3.89580000000056e-05, 3.8847000000008514e-05, 3.866599999999276e-05, 3.9319000000009874e-05, 3.949999999999787e-05, 3.881999999999497e-05...</msg>
<status status="PASS" starttime="20201115 22:59:57.364" endtime="20201115 22:59:57.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.404" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.402" endtime="20201115 22:59:57.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.409" level="INFO">VALUE: [3.876399999999669e-05, 3.954200000000352e-05, 3.89580000000056e-05, 3.8847000000008514e-05, 3.866599999999276e-05, 3.9319000000009874e-05, 3.949999999999787e-05, 3.881999999999497e-05, 3.9554999999996676e-05, 3.91939999999924e-05, 3.872199999999104e-05, 3.91939999999924e-05, 3.8666999999992235e-05, 3.9319000000009874e-05, 4.0069000000003685e-05, 3.9444999999999064e-05, 3.919500000001963e-05, 3.915300000001398e-05, 3.9055000000010054e-05, 3.856899999998831e-05, 3.86380000000075e-05, 3.95139999999905e-05, 3.955599999999615e-05, 3.9138999999993596e-05, 3.868000000001315e-05, 3.890299999997904e-05, 3.948699999997696e-05, 3.883300000001588e-05, 3.9541000000004045e-05, 3.909699999998795e-05, 3.890200000000732e-05, 3.8805000000002865e-05, 3.87370000000109e-05, 3.945799999999222e-05, 3.881900000002325e-05, 3.858400000000817e-05, 3.952800000001089e-05, 3.866600000002052e-05, 3.8847000000008514e-05, 3.9527000000011414e-05, 3.863900000000697e-05, 3.901400000000388e-05, 3.872199999999104e-05, 3.936100000001552e-05, 4.04170000000148e-05, 3.892999999999258e-05, 3.8708999999997884e-05, 3.9138999999993596e-05, 3.876399999999669e-05, 3.9444999999999064e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.406" endtime="20201115 22:59:57.410"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.395" endtime="20201115 22:59:57.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.418" endtime="20201115 22:59:57.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.427" endtime="20201115 22:59:57.448"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.422" endtime="20201115 22:59:57.450"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.414" endtime="20201115 22:59:57.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.837" endtime="20201115 22:59:57.452"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.833" endtime="20201115 22:59:57.453"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.831" endtime="20201115 22:59:57.453"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.481" endtime="20201115 22:59:57.497"></status>
</kw>
<msg timestamp="20201115 22:59:57.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.477" endtime="20201115 22:59:57.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:57.500" endtime="20201115 22:59:57.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.507" endtime="20201115 22:59:57.510"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.470" endtime="20201115 22:59:57.512"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.464" endtime="20201115 22:59:57.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.530" endtime="20201115 22:59:57.862"></status>
</kw>
<msg timestamp="20201115 22:59:57.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045451403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045491181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.527" endtime="20201115 22:59:57.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045451403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045491181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:57.872" endtime="20201115 22:59:57.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.891" endtime="20201115 22:59:57.895"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.519" endtime="20201115 22:59:57.897"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.515" endtime="20201115 22:59:57.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:57.908" level="INFO">${RESULT} = [{'time': 0.045491181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.977799999999726e-05, 'source_diff': 3.977799999999726e-05}, {'time': 0.045562361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:57.899" endtime="20201115 22:59:57.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:57.938" level="INFO">${ACCURACY} = {'source_diff': [3.977799999999726e-05, 3.87780000000032e-05, 3.894399999999909e-05, 3.9472999999998204e-05, 3.943000000000002e-05, 3.9305000000003365e-05, 3.948600000000524e-05, 3.880600000000234e-05...</msg>
<status status="PASS" starttime="20201115 22:59:57.910" endtime="20201115 22:59:57.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.949" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 22:59:57.947" endtime="20201115 22:59:57.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:57.955" level="INFO">VALUE: [3.977799999999726e-05, 3.87780000000032e-05, 3.894399999999909e-05, 3.9472999999998204e-05, 3.943000000000002e-05, 3.9305000000003365e-05, 3.948600000000524e-05, 3.880600000000234e-05, 3.9153000000000104e-05, 3.9402999999993416e-05, 3.930600000000284e-05, 3.9403000000000354e-05, 3.993000000000052e-05, 3.8666999999999174e-05, 3.88059999999954e-05, 3.944399999999959e-05, 4.0431000000000494e-05, 3.876399999999669e-05, 3.9347000000002075e-05, 3.9194999999998814e-05, 3.9888999999994346e-05, 3.9472999999998204e-05, 3.905600000000259e-05, 3.902799999999651e-05, 3.9458999999998634e-05, 3.9111000000001395e-05, 3.873599999999755e-05, 3.941600000000045e-05, 3.902799999999651e-05, 3.923600000000499e-05, 4.025000000000556e-05, 3.855600000000209e-05, 3.9097000000001825e-05, 3.894399999999909e-05, 3.8694999999998314e-05, 3.9403000000000354e-05, 3.883400000000148e-05, 3.899999999999737e-05, 3.920799999999891e-05, 3.952800000000395e-05, 3.9416999999999924e-05, 3.9026999999997036e-05, 3.9153000000000104e-05, 3.905600000000259e-05, 3.952799999999701e-05, 3.976400000000463e-05, 3.895799999999866e-05, 3.949999999999787e-05, 3.8916999999999424e-05, 3.8611000000000895e-05]</msg>
<status status="PASS" starttime="20201115 22:59:57.951" endtime="20201115 22:59:57.955"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.940" endtime="20201115 22:59:57.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:57.963" endtime="20201115 22:59:57.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:57.971" endtime="20201115 22:59:57.993"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.967" endtime="20201115 22:59:57.995"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.959" endtime="20201115 22:59:57.996"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.460" endtime="20201115 22:59:57.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.456" endtime="20201115 22:59:57.997"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.454" endtime="20201115 22:59:57.998"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.024" endtime="20201115 22:59:58.041"></status>
</kw>
<msg timestamp="20201115 22:59:58.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.021" endtime="20201115 22:59:58.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.044" endtime="20201115 22:59:58.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.050" endtime="20201115 22:59:58.054"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.014" endtime="20201115 22:59:58.056"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.008" endtime="20201115 22:59:58.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.074" endtime="20201115 22:59:58.408"></status>
</kw>
<msg timestamp="20201115 22:59:58.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044604486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.070" endtime="20201115 22:59:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044604486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.417" endtime="20201115 22:59:58.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.436" endtime="20201115 22:59:58.440"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.063" endtime="20201115 22:59:58.442"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.058" endtime="20201115 22:59:58.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:58.454" level="INFO">${RESULT} = [{'time': 0.044604486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.947199999999873e-05, 'source_diff': 3.947199999999873e-05}, {'time': 0.04467575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 22:59:58.445" endtime="20201115 22:59:58.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:58.484" level="INFO">${ACCURACY} = {'source_diff': [3.947199999999873e-05, 3.9166999999999674e-05, 3.8861000000001145e-05, 4.041600000000145e-05, 3.8611000000000895e-05, 3.944399999999959e-05, 3.8790999999996356e-05, 3.955600000000309e...</msg>
<status status="PASS" starttime="20201115 22:59:58.456" endtime="20201115 22:59:58.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.496" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 22:59:58.493" endtime="20201115 22:59:58.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.501" level="INFO">VALUE: [3.947199999999873e-05, 3.9166999999999674e-05, 3.8861000000001145e-05, 4.041600000000145e-05, 3.8611000000000895e-05, 3.944399999999959e-05, 3.8790999999996356e-05, 3.955600000000309e-05, 3.869399999999884e-05, 3.9180999999999244e-05, 4.0445000000000064e-05, 3.8777000000003725e-05, 3.8944999999998564e-05, 3.8652999999999604e-05, 3.905600000000259e-05, 3.9540999999997106e-05, 3.93059999999959e-05, 3.9069000000002685e-05, 3.8930999999998994e-05, 4.0124999999995026e-05, 3.87780000000032e-05, 3.9416999999999924e-05, 3.9319000000002935e-05, 3.883400000000148e-05, 3.9083000000002255e-05, 3.9526999999997536e-05, 3.9111000000001395e-05, 3.8639000000000034e-05, 3.924999999999762e-05, 3.8708999999997884e-05, 3.9361000000001645e-05, 3.874999999999712e-05, 3.9930999999999994e-05, 3.926400000000413e-05, 3.955600000000309e-05, 3.872200000000492e-05, 3.8833000000002005e-05, 3.9111000000001395e-05, 3.8652999999999604e-05, 3.872199999999798e-05, 3.880600000000234e-05, 3.951399999999744e-05, 3.8652999999999604e-05, 3.974999999999812e-05, 3.9361000000001645e-05, 3.927799999999676e-05, 3.876399999999669e-05, 3.9180999999999244e-05, 3.922199999999848e-05, 3.884800000000105e-05]</msg>
<status status="PASS" starttime="20201115 22:59:58.498" endtime="20201115 22:59:58.502"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.486" endtime="20201115 22:59:58.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.510" endtime="20201115 22:59:58.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:58.518" endtime="20201115 22:59:58.539"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.514" endtime="20201115 22:59:58.541"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.505" endtime="20201115 22:59:58.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.004" endtime="20201115 22:59:58.543"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.000" endtime="20201115 22:59:58.544"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:57.999" endtime="20201115 22:59:58.544"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.549" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.571" endtime="20201115 22:59:58.588"></status>
</kw>
<msg timestamp="20201115 22:59:58.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.568" endtime="20201115 22:59:58.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:58.591" endtime="20201115 22:59:58.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.599" endtime="20201115 22:59:58.603"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.560" endtime="20201115 22:59:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.555" endtime="20201115 22:59:58.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.624" endtime="20201115 22:59:58.957"></status>
</kw>
<msg timestamp="20201115 22:59:58.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044921958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044961014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.621" endtime="20201115 22:59:58.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:58.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044921958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044961014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:58.967" endtime="20201115 22:59:58.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:58.986" endtime="20201115 22:59:58.989"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.613" endtime="20201115 22:59:58.991"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.608" endtime="20201115 22:59:58.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.003" level="INFO">${RESULT} = [{'time': 0.044961014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.905600000000259e-05, 'source_diff': 3.905600000000259e-05}, {'time': 0.045031208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 22:59:58.994" endtime="20201115 22:59:59.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.035" level="INFO">${ACCURACY} = {'source_diff': [3.905600000000259e-05, 3.9361000000001645e-05, 3.9139000000000534e-05, 3.920900000000532e-05, 3.8790999999996356e-05, 3.929200000000327e-05, 3.8597000000001325e-05, 3.9403000000000354...</msg>
<status status="PASS" starttime="20201115 22:59:59.005" endtime="20201115 22:59:59.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.046" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.044" endtime="20201115 22:59:59.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.051" level="INFO">VALUE: [3.905600000000259e-05, 3.9361000000001645e-05, 3.9139000000000534e-05, 3.920900000000532e-05, 3.8790999999996356e-05, 3.929200000000327e-05, 3.8597000000001325e-05, 3.9403000000000354e-05, 3.919399999999934e-05, 3.9166999999999674e-05, 3.919400000000628e-05, 3.891700000000636e-05, 3.9097000000001825e-05, 3.872200000000492e-05, 3.8875000000000715e-05, 3.9139000000000534e-05, 3.8597000000001325e-05, 3.865200000000013e-05, 3.9153000000000104e-05, 4.0374999999995276e-05, 3.9416999999999924e-05, 3.8610999999993956e-05, 3.926399999999719e-05, 3.872199999999798e-05, 3.8639000000000034e-05, 3.958399999999529e-05, 3.890200000000038e-05, 3.944399999999959e-05, 3.8944999999998564e-05, 3.947199999999873e-05, 3.85980000000008e-05, 4.0389000000001785e-05, 3.9276999999997286e-05, 3.947199999999873e-05, 3.9389000000000784e-05, 4.0417000000000924e-05, 3.9055000000003115e-05, 3.8722999999997454e-05, 3.9416999999999924e-05, 3.882000000000191e-05, 3.8916999999999424e-05, 3.880600000000234e-05, 3.923599999999805e-05, 3.8625000000000465e-05, 3.973599999999855e-05, 3.915200000000063e-05, 3.8666999999999174e-05, 3.9389000000000784e-05, 3.9889000000001285e-05, 3.927799999999676e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.048" endtime="20201115 22:59:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.037" endtime="20201115 22:59:59.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.060" endtime="20201115 22:59:59.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.068" endtime="20201115 22:59:59.089"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.064" endtime="20201115 22:59:59.091"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.055" endtime="20201115 22:59:59.092"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.551" endtime="20201115 22:59:59.093"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.547" endtime="20201115 22:59:59.094"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:58.545" endtime="20201115 22:59:59.094"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.121" endtime="20201115 22:59:59.138"></status>
</kw>
<msg timestamp="20201115 22:59:59.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.118" endtime="20201115 22:59:59.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.141" endtime="20201115 22:59:59.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.148" endtime="20201115 22:59:59.151"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.110" endtime="20201115 22:59:59.153"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.105" endtime="20201115 22:59:59.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.170" endtime="20201115 22:59:59.502"></status>
</kw>
<msg timestamp="20201115 22:59:59.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045031903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045070486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.167" endtime="20201115 22:59:59.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045031903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045070486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.512" endtime="20201115 22:59:59.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.531" endtime="20201115 22:59:59.536"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.160" endtime="20201115 22:59:59.538"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.156" endtime="20201115 22:59:59.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 22:59:59.550" level="INFO">${RESULT} = [{'time': 0.045070486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8583000000001755e-05, 'source_diff': 3.8583000000001755e-05}, {'time': 0.045138653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 22:59:59.541" endtime="20201115 22:59:59.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 22:59:59.580" level="INFO">${ACCURACY} = {'source_diff': [3.8583000000001755e-05, 3.897199999999823e-05, 3.879200000000277e-05, 3.927799999999676e-05, 3.972199999999898e-05, 3.951399999999744e-05, 3.947200000000567e-05, 3.947200000000567e-05...</msg>
<status status="PASS" starttime="20201115 22:59:59.552" endtime="20201115 22:59:59.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.590" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 22:59:59.588" endtime="20201115 22:59:59.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.596" level="INFO">VALUE: [3.8583000000001755e-05, 3.897199999999823e-05, 3.879200000000277e-05, 3.927799999999676e-05, 3.972199999999898e-05, 3.951399999999744e-05, 3.947200000000567e-05, 3.947200000000567e-05, 3.952799999999701e-05, 3.9416999999999924e-05, 3.911200000000087e-05, 3.956999999999572e-05, 3.9180999999999244e-05, 3.867999999999927e-05, 3.919399999999934e-05, 3.9333000000002505e-05, 3.8680999999998744e-05, 3.869399999999884e-05, 3.9111000000001395e-05, 3.9124999999994026e-05, 3.9416999999999924e-05, 4.0069000000003685e-05, 3.9153000000000104e-05, 3.9346999999995136e-05, 3.8875000000000715e-05, 3.9124999999994026e-05, 3.9375000000001215e-05, 3.941600000000045e-05, 3.865200000000013e-05, 3.9319000000002935e-05, 3.920800000000585e-05, 3.897199999999823e-05, 3.926400000000413e-05, 3.8875000000000715e-05, 3.8611000000000895e-05, 3.902800000000345e-05, 3.919399999999934e-05, 3.8680999999998744e-05, 3.8596999999994386e-05, 3.9153000000000104e-05, 3.951399999999744e-05, 4.0389000000001785e-05, 3.8708999999997884e-05, 3.901399999999694e-05, 3.945799999999916e-05, 3.883399999999454e-05, 3.9416999999999924e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.8694999999998314e-05]</msg>
<status status="PASS" starttime="20201115 22:59:59.593" endtime="20201115 22:59:59.597"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.581" endtime="20201115 22:59:59.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.604" endtime="20201115 22:59:59.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 22:59:59.613" endtime="20201115 22:59:59.635"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.608" endtime="20201115 22:59:59.636"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.600" endtime="20201115 22:59:59.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.101" endtime="20201115 22:59:59.639"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.097" endtime="20201115 22:59:59.640"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.095" endtime="20201115 22:59:59.640"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.646" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.667" endtime="20201115 22:59:59.683"></status>
</kw>
<msg timestamp="20201115 22:59:59.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.663" endtime="20201115 22:59:59.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 22:59:59.687" endtime="20201115 22:59:59.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.693" endtime="20201115 22:59:59.696"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.656" endtime="20201115 22:59:59.698"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.651" endtime="20201115 22:59:59.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 22:59:59.716" endtime="20201115 23:00:00.048"></status>
</kw>
<msg timestamp="20201115 23:00:00.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045262681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045301944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 22:59:59.712" endtime="20201115 23:00:00.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045262681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045301944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.057" endtime="20201115 23:00:00.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.076" endtime="20201115 23:00:00.080"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.705" endtime="20201115 23:00:00.081"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.701" endtime="20201115 23:00:00.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.093" level="INFO">${RESULT} = [{'time': 0.045301944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9262999999997716e-05, 'source_diff': 3.9262999999997716e-05}, {'time': 0.045369139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.084" endtime="20201115 23:00:00.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.123" level="INFO">${ACCURACY} = {'source_diff': [3.9262999999997716e-05, 3.8833000000002005e-05, 3.8722999999997454e-05, 3.8805000000002865e-05, 3.882000000000191e-05, 3.8597000000001325e-05, 3.8652999999999604e-05, 3.93329999999955...</msg>
<status status="PASS" starttime="20201115 23:00:00.095" endtime="20201115 23:00:00.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.134" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.132" endtime="20201115 23:00:00.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.139" level="INFO">VALUE: [3.9262999999997716e-05, 3.8833000000002005e-05, 3.8722999999997454e-05, 3.8805000000002865e-05, 3.882000000000191e-05, 3.8597000000001325e-05, 3.8652999999999604e-05, 3.9332999999995566e-05, 3.8708999999997884e-05, 3.941600000000045e-05, 3.9375000000001215e-05, 4.023599999999905e-05, 3.954199999999658e-05, 4.0068999999996746e-05, 3.897199999999823e-05, 3.972199999999898e-05, 3.8875000000000715e-05, 3.9555000000003615e-05, 3.8833000000002005e-05, 3.872200000000492e-05, 3.879200000000277e-05, 3.9012999999997466e-05, 3.8610999999993956e-05, 3.8611000000000895e-05, 3.9194999999998814e-05, 3.8875000000000715e-05, 3.879200000000277e-05, 3.948600000000524e-05, 3.955600000000309e-05, 3.9416999999999924e-05, 3.8791000000003295e-05, 3.973599999999855e-05, 3.868100000000568e-05, 4.0403000000001354e-05, 3.9846999999995636e-05, 3.9110999999994456e-05, 3.8986999999997274e-05, 3.8611000000000895e-05, 3.899999999999737e-05, 3.876400000000363e-05, 3.881999999999497e-05, 3.9375000000001215e-05, 3.957000000000266e-05, 3.9333000000002505e-05, 3.9347000000002075e-05, 3.891599999999995e-05, 3.9096999999994886e-05, 3.867999999999927e-05, 3.902799999999651e-05, 3.908400000000173e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.136" endtime="20201115 23:00:00.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.125" endtime="20201115 23:00:00.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.148" endtime="20201115 23:00:00.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.157" endtime="20201115 23:00:00.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.152" endtime="20201115 23:00:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.144" endtime="20201115 23:00:00.181"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.647" endtime="20201115 23:00:00.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.643" endtime="20201115 23:00:00.182"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.641" endtime="20201115 23:00:00.183"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.188" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.210" endtime="20201115 23:00:00.226"></status>
</kw>
<msg timestamp="20201115 23:00:00.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.206" endtime="20201115 23:00:00.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.230" endtime="20201115 23:00:00.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.236" endtime="20201115 23:00:00.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.199" endtime="20201115 23:00:00.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.193" endtime="20201115 23:00:00.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.259" endtime="20201115 23:00:00.591"></status>
</kw>
<msg timestamp="20201115 23:00:00.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044594736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044633611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.256" endtime="20201115 23:00:00.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044594736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044633611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.601" endtime="20201115 23:00:00.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.619" endtime="20201115 23:00:00.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.249" endtime="20201115 23:00:00.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.244" endtime="20201115 23:00:00.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:00.638" level="INFO">${RESULT} = [{'time': 0.044633611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8874999999993776e-05, 'source_diff': 3.8874999999993776e-05}, {'time': 0.044706806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:00.629" endtime="20201115 23:00:00.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:00.668" level="INFO">${ACCURACY} = {'source_diff': [3.8874999999993776e-05, 3.90980000000013e-05, 3.8832999999995066e-05, 3.8652999999999604e-05, 3.895799999999866e-05, 3.9375000000001215e-05, 3.8860999999994206e-05, 3.89859999999978e-...</msg>
<status status="PASS" starttime="20201115 23:00:00.640" endtime="20201115 23:00:00.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.678" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:00.676" endtime="20201115 23:00:00.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.685" level="INFO">VALUE: [3.8874999999993776e-05, 3.90980000000013e-05, 3.8832999999995066e-05, 3.8652999999999604e-05, 3.895799999999866e-05, 3.9375000000001215e-05, 3.8860999999994206e-05, 3.89859999999978e-05, 4.00980000000023e-05, 3.882000000000191e-05, 3.8611000000000895e-05, 3.9416999999999924e-05, 3.9333000000002505e-05, 3.9180999999999244e-05, 3.940200000000088e-05, 3.9917000000000424e-05, 3.8930999999998994e-05, 3.872199999999798e-05, 3.8652999999999604e-05, 3.901400000000388e-05, 3.9166999999999674e-05, 3.872199999999798e-05, 3.869399999999884e-05, 3.9111000000001395e-05, 3.8790999999996356e-05, 3.930600000000284e-05, 3.955600000000309e-05, 3.952800000000395e-05, 3.899999999999737e-05, 3.873599999999755e-05, 3.94859999999983e-05, 3.922199999999848e-05, 3.8583000000001755e-05, 3.9361000000001645e-05, 3.8652999999999604e-05, 3.902800000000345e-05, 4.020799999999991e-05, 3.895799999999866e-05, 3.8847000000001575e-05, 3.902799999999651e-05, 3.9361000000001645e-05, 4.0054999999997176e-05, 3.932000000000241e-05, 3.9332999999995566e-05, 3.883400000000148e-05, 3.9403000000000354e-05, 3.9347000000002075e-05, 3.932000000000241e-05, 3.9055000000003115e-05, 3.954199999999658e-05]</msg>
<status status="PASS" starttime="20201115 23:00:00.681" endtime="20201115 23:00:00.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.669" endtime="20201115 23:00:00.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.693" endtime="20201115 23:00:00.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.701" endtime="20201115 23:00:00.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.697" endtime="20201115 23:00:00.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.689" endtime="20201115 23:00:00.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.189" endtime="20201115 23:00:00.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.186" endtime="20201115 23:00:00.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.184" endtime="20201115 23:00:00.728"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.733" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.754" endtime="20201115 23:00:00.771"></status>
</kw>
<msg timestamp="20201115 23:00:00.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.751" endtime="20201115 23:00:00.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.774" endtime="20201115 23:00:00.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.780" endtime="20201115 23:00:00.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.744" endtime="20201115 23:00:00.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.738" endtime="20201115 23:00:00.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.803" endtime="20201115 23:00:01.135"></status>
</kw>
<msg timestamp="20201115 23:00:01.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044396486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044435986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:00.800" endtime="20201115 23:00:01.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044396486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044435986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.145" endtime="20201115 23:00:01.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.164" endtime="20201115 23:00:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.793" endtime="20201115 23:00:01.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.788" endtime="20201115 23:00:01.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.181" level="INFO">${RESULT} = [{'time': 0.044435986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.949999999999787e-05, 'source_diff': 3.949999999999787e-05}, {'time': 0.044505153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.172" endtime="20201115 23:00:01.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.214" level="INFO">${ACCURACY} = {'source_diff': [3.949999999999787e-05, 3.908400000000173e-05, 3.9527000000004475e-05, 3.9097000000001825e-05, 3.92780000000037e-05, 3.9166999999999674e-05, 3.926400000000413e-05, 3.8597000000001325e-...</msg>
<status status="PASS" starttime="20201115 23:00:01.183" endtime="20201115 23:00:01.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.225" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.222" endtime="20201115 23:00:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.230" level="INFO">VALUE: [3.949999999999787e-05, 3.908400000000173e-05, 3.9527000000004475e-05, 3.9097000000001825e-05, 3.92780000000037e-05, 3.9166999999999674e-05, 3.926400000000413e-05, 3.8597000000001325e-05, 3.9276999999997286e-05, 3.89859999999978e-05, 3.9458999999998634e-05, 3.882000000000191e-05, 3.955600000000309e-05, 3.9111000000001395e-05, 4.043000000000102e-05, 3.894399999999909e-05, 3.883400000000148e-05, 3.9375000000001215e-05, 3.9083000000002255e-05, 3.8666999999999174e-05, 3.8889000000000284e-05, 3.8611000000000895e-05, 3.9347000000002075e-05, 3.8930999999998994e-05, 3.8833000000002005e-05, 3.89859999999978e-05, 3.8666999999999174e-05, 3.950000000000481e-05, 3.932000000000241e-05, 4.0361000000002645e-05, 3.952799999999701e-05, 3.8819000000002435e-05, 3.880600000000234e-05, 3.955600000000309e-05, 3.872199999999798e-05, 3.88059999999954e-05, 3.974999999999812e-05, 3.972199999999898e-05, 3.945799999999916e-05, 3.9596999999995386e-05, 4.018000000000077e-05, 3.870799999999841e-05, 3.892999999999952e-05, 3.908399999999479e-05, 3.9375000000001215e-05, 3.931999999999547e-05, 3.901399999999694e-05, 3.9346999999995136e-05, 4.024999999999862e-05, 3.940200000000088e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.227" endtime="20201115 23:00:01.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.216" endtime="20201115 23:00:01.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.239" endtime="20201115 23:00:01.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.247" endtime="20201115 23:00:01.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.242" endtime="20201115 23:00:01.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.234" endtime="20201115 23:00:01.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.734" endtime="20201115 23:00:01.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.730" endtime="20201115 23:00:01.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.729" endtime="20201115 23:00:01.273"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.299" endtime="20201115 23:00:01.316"></status>
</kw>
<msg timestamp="20201115 23:00:01.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.296" endtime="20201115 23:00:01.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.319" endtime="20201115 23:00:01.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.325" endtime="20201115 23:00:01.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.289" endtime="20201115 23:00:01.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.283" endtime="20201115 23:00:01.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.348" endtime="20201115 23:00:01.695"></status>
</kw>
<msg timestamp="20201115 23:00:01.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044176236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044215556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.345" endtime="20201115 23:00:01.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044176236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044215556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.705" endtime="20201115 23:00:01.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.725" endtime="20201115 23:00:01.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.338" endtime="20201115 23:00:01.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.333" endtime="20201115 23:00:01.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:01.744" level="INFO">${RESULT} = [{'time': 0.044215556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.932000000000241e-05, 'source_diff': 3.932000000000241e-05}, {'time': 0.044281736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:01.735" endtime="20201115 23:00:01.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:01.775" level="INFO">${ACCURACY} = {'source_diff': [3.932000000000241e-05, 3.8611000000000895e-05, 3.90980000000013e-05, 3.898600000000474e-05, 3.8889000000000284e-05, 3.8930999999998994e-05, 3.883400000000148e-05, 3.902799999999651e-0...</msg>
<status status="PASS" starttime="20201115 23:00:01.746" endtime="20201115 23:00:01.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.787" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:01.784" endtime="20201115 23:00:01.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.792" level="INFO">VALUE: [3.932000000000241e-05, 3.8611000000000895e-05, 3.90980000000013e-05, 3.898600000000474e-05, 3.8889000000000284e-05, 3.8930999999998994e-05, 3.883400000000148e-05, 3.902799999999651e-05, 3.9554999999996676e-05, 3.89859999999978e-05, 3.8889000000000284e-05, 3.9347000000002075e-05, 3.931999999999547e-05, 3.9569000000003185e-05, 3.87780000000032e-05, 3.867999999999927e-05, 3.8639000000000034e-05, 3.8625000000000465e-05, 3.954200000000352e-05, 3.9416999999999924e-05, 3.897200000000517e-05, 3.8652999999999604e-05, 3.973600000000549e-05, 3.8639000000000034e-05, 3.923600000000499e-05, 3.904199999999608e-05, 3.905600000000259e-05, 3.8624999999993526e-05, 3.9361000000001645e-05, 3.907000000000216e-05, 3.858400000000123e-05, 4.023599999999905e-05, 3.907000000000216e-05, 3.9139000000000534e-05, 3.931999999999547e-05, 3.874999999999712e-05, 3.902799999999651e-05, 3.8874999999993776e-05, 3.8944999999998564e-05, 3.9152999999993165e-05, 3.920799999999891e-05, 3.943000000000002e-05, 3.8889000000000284e-05, 3.915200000000063e-05, 3.876399999999669e-05, 3.951400000000438e-05, 3.869500000000525e-05, 3.940200000000088e-05, 3.922199999999848e-05, 3.867999999999927e-05]</msg>
<status status="PASS" starttime="20201115 23:00:01.789" endtime="20201115 23:00:01.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.777" endtime="20201115 23:00:01.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.801" endtime="20201115 23:00:01.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:01.810" endtime="20201115 23:00:01.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.805" endtime="20201115 23:00:01.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.797" endtime="20201115 23:00:01.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.280" endtime="20201115 23:00:01.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.276" endtime="20201115 23:00:01.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.274" endtime="20201115 23:00:01.837"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.864" endtime="20201115 23:00:01.884"></status>
</kw>
<msg timestamp="20201115 23:00:01.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.861" endtime="20201115 23:00:01.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:01.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:01.887" endtime="20201115 23:00:01.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.895" endtime="20201115 23:00:01.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.853" endtime="20201115 23:00:01.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.847" endtime="20201115 23:00:01.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:01.920" endtime="20201115 23:00:02.267"></status>
</kw>
<msg timestamp="20201115 23:00:02.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046151458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046191694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:01.916" endtime="20201115 23:00:02.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046151458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046191694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.277" endtime="20201115 23:00:02.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.296" endtime="20201115 23:00:02.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.908" endtime="20201115 23:00:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.904" endtime="20201115 23:00:02.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.314" level="INFO">${RESULT} = [{'time': 0.046191694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.023599999999905e-05, 'source_diff': 4.023599999999905e-05}, {'time': 0.046258889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:02.305" endtime="20201115 23:00:02.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.345" level="INFO">${ACCURACY} = {'source_diff': [4.023599999999905e-05, 3.8652999999999604e-05, 3.886200000000062e-05, 3.9375000000001215e-05, 3.973599999999855e-05, 3.8861000000001145e-05, 4.0097000000002825e-05, 3.8611000000000895...</msg>
<status status="PASS" starttime="20201115 23:00:02.316" endtime="20201115 23:00:02.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.356" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.354" endtime="20201115 23:00:02.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.362" level="INFO">VALUE: [4.023599999999905e-05, 3.8652999999999604e-05, 3.886200000000062e-05, 3.9375000000001215e-05, 3.973599999999855e-05, 3.8861000000001145e-05, 4.0097000000002825e-05, 3.8611000000000895e-05, 3.920799999999891e-05, 3.902799999999651e-05, 3.9082999999995316e-05, 3.904200000000302e-05, 3.995799999999966e-05, 3.8875000000000715e-05, 3.9208999999998384e-05, 3.867999999999927e-05, 3.8680999999998744e-05, 3.920799999999891e-05, 3.904200000000302e-05, 3.948600000000524e-05, 3.876399999999669e-05, 3.8833000000002005e-05, 3.9180999999999244e-05, 4.024999999999862e-05, 3.9527000000004475e-05, 3.9472999999998204e-05, 3.870799999999841e-05, 3.908400000000173e-05, 4.043000000000102e-05, 3.9290999999996856e-05, 3.894399999999909e-05, 3.952799999999701e-05, 3.8875000000000715e-05, 3.9291000000003795e-05, 3.8930999999998994e-05, 3.949999999999787e-05, 3.872300000000439e-05, 3.9333000000002505e-05, 3.869400000000578e-05, 3.9319000000002935e-05, 3.919400000000628e-05, 3.922199999999848e-05, 3.8680999999998744e-05, 3.86659999999997e-05, 3.9180999999999244e-05, 3.8930999999998994e-05, 3.9139000000000534e-05, 4.0389000000001785e-05, 3.924999999999762e-05, 3.901400000000388e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.359" endtime="20201115 23:00:02.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.347" endtime="20201115 23:00:02.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.371" endtime="20201115 23:00:02.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.379" endtime="20201115 23:00:02.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.375" endtime="20201115 23:00:02.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.366" endtime="20201115 23:00:02.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.844" endtime="20201115 23:00:02.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.839" endtime="20201115 23:00:02.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:01.838" endtime="20201115 23:00:02.406"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.434" endtime="20201115 23:00:02.453"></status>
</kw>
<msg timestamp="20201115 23:00:02.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.430" endtime="20201115 23:00:02.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:02.457" endtime="20201115 23:00:02.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.465" endtime="20201115 23:00:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.423" endtime="20201115 23:00:02.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.417" endtime="20201115 23:00:02.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.489" endtime="20201115 23:00:02.835"></status>
</kw>
<msg timestamp="20201115 23:00:02.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045996764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046037833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.486" endtime="20201115 23:00:02.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045996764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046037833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:02.845" endtime="20201115 23:00:02.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.864" endtime="20201115 23:00:02.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.478" endtime="20201115 23:00:02.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.473" endtime="20201115 23:00:02.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:02.884" level="INFO">${RESULT} = [{'time': 0.046037833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1068999999997746e-05, 'source_diff': 4.1068999999997746e-05}, {'time': 0.046111097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:02.874" endtime="20201115 23:00:02.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:02.914" level="INFO">${ACCURACY} = {'source_diff': [4.1068999999997746e-05, 4.0096999999995886e-05, 4.041600000000145e-05, 4.0346999999996136e-05, 4.051399999999844e-05, 4.0208999999999384e-05, 4.1388999999995846e-05, 3.99450000000065e...</msg>
<status status="PASS" starttime="20201115 23:00:02.886" endtime="20201115 23:00:02.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.926" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:02.923" endtime="20201115 23:00:02.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.931" level="INFO">VALUE: [4.1068999999997746e-05, 4.0096999999995886e-05, 4.041600000000145e-05, 4.0346999999996136e-05, 4.051399999999844e-05, 4.0208999999999384e-05, 4.1388999999995846e-05, 3.99450000000065e-05, 3.975000000000506e-05, 3.976399999999769e-05, 4.052799999999801e-05, 3.991599999999401e-05, 3.9667000000000174e-05, 4.049999999999887e-05, 4.0361000000002645e-05, 4.075000000000606e-05, 3.9667000000000174e-05, 3.9667000000000174e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.1403000000002355e-05, 3.968000000000027e-05, 4.044399999999365e-05, 4.04859999999993e-05, 4.049999999999887e-05, 4.1068999999997746e-05, 3.9917000000000424e-05, 3.986200000000162e-05, 4.005600000000359e-05, 3.9847000000002575e-05, 4.019400000000034e-05, 4.005599999999665e-05, 4.0388999999994846e-05, 4.0582999999996816e-05, 4.0625000000002465e-05, 4.0124999999995026e-05, 3.9667000000000174e-05, 4.0389000000001785e-05, 3.999999999999837e-05, 4.074999999999912e-05, 3.96660000000007e-05, 4.123600000000005e-05, 4.048600000000624e-05, 4.033399999999604e-05, 4.1431000000001494e-05, 4.0276999999998286e-05, 4.1431000000001494e-05, 4.076399999999869e-05, 4.0304999999997426e-05, 4.0569000000004185e-05]</msg>
<status status="PASS" starttime="20201115 23:00:02.928" endtime="20201115 23:00:02.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.916" endtime="20201115 23:00:02.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:02.940" endtime="20201115 23:00:02.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:02.949" endtime="20201115 23:00:02.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.944" endtime="20201115 23:00:02.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.936" endtime="20201115 23:00:02.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.413" endtime="20201115 23:00:02.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.409" endtime="20201115 23:00:02.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.407" endtime="20201115 23:00:02.975"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:02.981" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.004" endtime="20201115 23:00:03.024"></status>
</kw>
<msg timestamp="20201115 23:00:03.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.000" endtime="20201115 23:00:03.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.027" endtime="20201115 23:00:03.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.034" endtime="20201115 23:00:03.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.992" endtime="20201115 23:00:03.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.986" endtime="20201115 23:00:03.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.057" endtime="20201115 23:00:03.403"></status>
</kw>
<msg timestamp="20201115 23:00:03.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047066694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047107569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.054" endtime="20201115 23:00:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047066694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047107569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.413" endtime="20201115 23:00:03.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.432" endtime="20201115 23:00:03.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.047" endtime="20201115 23:00:03.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.042" endtime="20201115 23:00:03.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:03.450" level="INFO">${RESULT} = [{'time': 0.047107569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0875000000002715e-05, 'source_diff': 4.0875000000002715e-05}, {'time': 0.047180764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:03.441" endtime="20201115 23:00:03.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:03.483" level="INFO">${ACCURACY} = {'source_diff': [4.0875000000002715e-05, 4.13059999999979e-05, 4.1110999999996456e-05, 4.0805000000004865e-05, 4.097200000000023e-05, 4.0624999999995526e-05, 4.100000000000631e-05, 4.155599999999815e-...</msg>
<status status="PASS" starttime="20201115 23:00:03.452" endtime="20201115 23:00:03.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.495" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:03.492" endtime="20201115 23:00:03.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.500" level="INFO">VALUE: [4.0875000000002715e-05, 4.13059999999979e-05, 4.1110999999996456e-05, 4.0805000000004865e-05, 4.097200000000023e-05, 4.0624999999995526e-05, 4.100000000000631e-05, 4.155599999999815e-05, 4.074999999999912e-05, 4.156999999999772e-05, 4.1374999999996276e-05, 4.102800000000545e-05, 4.0902999999994916e-05, 4.120800000000091e-05, 4.1445000000001064e-05, 4.225000000000062e-05, 4.058400000000323e-05, 4.06660000000017e-05, 4.104199999999808e-05, 4.095800000000066e-05, 4.108399999999679e-05, 4.147200000000073e-05, 4.0625000000002465e-05, 4.131999999999747e-05, 4.0625000000002465e-05, 4.079200000000477e-05, 4.173600000000055e-05, 4.131999999999747e-05, 4.119400000000134e-05, 4.0653000000001605e-05, 4.145799999999422e-05, 4.1124999999996026e-05, 4.0889000000002285e-05, 4.1776999999999787e-05, 4.070800000000041e-05, 4.099999999999937e-05, 4.1152999999995166e-05, 4.1167000000001674e-05, 4.129199999999833e-05, 4.0596999999996386e-05, 4.1403000000002355e-05, 4.109799999999636e-05, 4.1375000000003215e-05, 4.190200000000338e-05, 4.1097000000003825e-05, 4.122200000000048e-05, 4.1402999999995416e-05, 4.1083000000004255e-05, 4.155599999999815e-05, 4.0624999999995526e-05]</msg>
<status status="PASS" starttime="20201115 23:00:03.497" endtime="20201115 23:00:03.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.486" endtime="20201115 23:00:03.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.509" endtime="20201115 23:00:03.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.517" endtime="20201115 23:00:03.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.513" endtime="20201115 23:00:03.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.505" endtime="20201115 23:00:03.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.982" endtime="20201115 23:00:03.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.978" endtime="20201115 23:00:03.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:02.976" endtime="20201115 23:00:03.545"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.572" endtime="20201115 23:00:03.592"></status>
</kw>
<msg timestamp="20201115 23:00:03.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.569" endtime="20201115 23:00:03.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.595" endtime="20201115 23:00:03.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.602" endtime="20201115 23:00:03.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.561" endtime="20201115 23:00:03.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.556" endtime="20201115 23:00:03.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.626" endtime="20201115 23:00:03.964"></status>
</kw>
<msg timestamp="20201115 23:00:03.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046528972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046570639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.622" endtime="20201115 23:00:03.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046528972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046570639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:03.974" endtime="20201115 23:00:03.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.992" endtime="20201115 23:00:03.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.615" endtime="20201115 23:00:04.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.610" endtime="20201115 23:00:04.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.012" level="INFO">${RESULT} = [{'time': 0.046570639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1666999999995236e-05, 'source_diff': 4.1666999999995236e-05}, {'time': 0.046640847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.003" endtime="20201115 23:00:04.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.043" level="INFO">${ACCURACY} = {'source_diff': [4.1666999999995236e-05, 4.1874999999996776e-05, 4.2222999999994015e-05, 4.173600000000055e-05, 4.21939999999954e-05, 4.24860000000013e-05, 4.233400000000498e-05, 4.2027000000000037e-0...</msg>
<status status="PASS" starttime="20201115 23:00:04.014" endtime="20201115 23:00:04.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.054" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.051" endtime="20201115 23:00:04.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.059" level="INFO">VALUE: [4.1666999999995236e-05, 4.1874999999996776e-05, 4.2222999999994015e-05, 4.173600000000055e-05, 4.21939999999954e-05, 4.24860000000013e-05, 4.233400000000498e-05, 4.2027000000000037e-05, 4.177799999999926e-05, 4.2110999999997456e-05, 4.294400000000309e-05, 4.2208999999994445e-05, 4.2125000000003965e-05, 4.2068999999998746e-05, 4.229199999999933e-05, 4.168000000000227e-05, 4.245800000000216e-05, 4.1653000000002605e-05, 4.3096999999998886e-05, 4.172200000000098e-05, 4.18059999999984e-05, 4.245799999999522e-05, 4.24860000000013e-05, 4.2931000000002995e-05, 4.1625000000003465e-05, 4.2487000000000774e-05, 4.2860999999998206e-05, 4.1597000000004325e-05, 4.2527000000000537e-05, 4.1681000000001744e-05, 4.25139999999935e-05, 4.25139999999935e-05, 4.1667000000002175e-05, 4.2930999999996056e-05, 4.251400000000044e-05, 4.241599999999651e-05, 4.1653000000002605e-05, 4.175000000000012e-05, 4.2068999999998746e-05, 4.177799999999926e-05, 4.167999999999533e-05, 4.227799999999976e-05, 4.177799999999926e-05, 4.1694999999994375e-05, 4.3082999999999316e-05, 4.2554999999999676e-05, 4.183399999999754e-05, 4.1916999999995486e-05, 4.173599999999361e-05, 4.21660000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.056" endtime="20201115 23:00:04.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.044" endtime="20201115 23:00:04.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.068" endtime="20201115 23:00:04.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.077" endtime="20201115 23:00:04.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.072" endtime="20201115 23:00:04.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.064" endtime="20201115 23:00:04.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.552" endtime="20201115 23:00:04.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.548" endtime="20201115 23:00:04.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.546" endtime="20201115 23:00:04.103"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.130" endtime="20201115 23:00:04.147"></status>
</kw>
<msg timestamp="20201115 23:00:04.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.127" endtime="20201115 23:00:04.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.151" endtime="20201115 23:00:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.157" endtime="20201115 23:00:04.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.119" endtime="20201115 23:00:04.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.114" endtime="20201115 23:00:04.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.180" endtime="20201115 23:00:04.516"></status>
</kw>
<msg timestamp="20201115 23:00:04.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04504125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045085333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:04.177" endtime="20201115 23:00:04.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04504125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045085333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:04.525" endtime="20201115 23:00:04.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.544" endtime="20201115 23:00:04.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.170" endtime="20201115 23:00:04.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.165" endtime="20201115 23:00:04.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:04.561" level="INFO">${RESULT} = [{'time': 0.045085333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4083000000000316e-05, 'source_diff': 4.4083000000000316e-05}, {'time': 0.045160583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:04.552" endtime="20201115 23:00:04.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:04.592" level="INFO">${ACCURACY} = {'source_diff': [4.4083000000000316e-05, 4.270799999999547e-05, 4.305600000000659e-05, 4.375000000000212e-05, 4.300000000000137e-05, 4.3374999999998276e-05, 4.327800000000076e-05, 4.2804999999999926e-...</msg>
<status status="PASS" starttime="20201115 23:00:04.564" endtime="20201115 23:00:04.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.603" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:04.601" endtime="20201115 23:00:04.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.609" level="INFO">VALUE: [4.4083000000000316e-05, 4.270799999999547e-05, 4.305600000000659e-05, 4.375000000000212e-05, 4.300000000000137e-05, 4.3374999999998276e-05, 4.327800000000076e-05, 4.2804999999999926e-05, 4.256999999999872e-05, 4.2804999999999926e-05, 4.354200000000058e-05, 4.2832999999999066e-05, 4.345800000000316e-05, 4.345800000000316e-05, 4.313799999999812e-05, 4.3097000000005825e-05, 4.301400000000094e-05, 4.408399999999979e-05, 4.373599999999561e-05, 4.320800000000291e-05, 4.2875000000004715e-05, 4.325000000000162e-05, 4.355600000000015e-05, 4.2804999999999926e-05, 4.2722999999994515e-05, 4.315199999999769e-05, 4.356999999999972e-05, 4.343000000000402e-05, 4.276400000000069e-05, 4.327800000000076e-05, 4.2667000000003175e-05, 4.331999999999947e-05, 4.2695000000002314e-05, 4.26939999999959e-05, 4.374999999999518e-05, 4.3389000000004785e-05, 4.279099999999342e-05, 4.269400000000284e-05, 4.347199999999579e-05, 4.291600000000395e-05, 4.3445000000003064e-05, 4.3096999999998886e-05, 4.320800000000291e-05, 4.297199999999529e-05, 4.3181000000003245e-05, 4.323599999999511e-05, 4.326300000000172e-05, 4.3944999999996626e-05, 4.26660000000037e-05, 4.294399999999615e-05]</msg>
<status status="PASS" starttime="20201115 23:00:04.605" endtime="20201115 23:00:04.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.594" endtime="20201115 23:00:04.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.618" endtime="20201115 23:00:04.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:04.626" endtime="20201115 23:00:04.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.622" endtime="20201115 23:00:04.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.613" endtime="20201115 23:00:04.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.110" endtime="20201115 23:00:04.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.106" endtime="20201115 23:00:04.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.104" endtime="20201115 23:00:04.653"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.681" endtime="20201115 23:00:04.699"></status>
</kw>
<msg timestamp="20201115 23:00:04.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.678" endtime="20201115 23:00:04.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:04.702" endtime="20201115 23:00:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.709" endtime="20201115 23:00:04.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.670" endtime="20201115 23:00:04.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.664" endtime="20201115 23:00:04.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:04.732" endtime="20201115 23:00:05.067"></status>
</kw>
<msg timestamp="20201115 23:00:05.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046947069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046991042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:04.729" endtime="20201115 23:00:05.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046947069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046991042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.077" endtime="20201115 23:00:05.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.096" endtime="20201115 23:00:05.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.722" endtime="20201115 23:00:05.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.717" endtime="20201115 23:00:05.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.114" level="INFO">${RESULT} = [{'time': 0.046991042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3972999999995765e-05, 'source_diff': 4.3972999999995765e-05}, {'time': 0.04706525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:05.106" endtime="20201115 23:00:05.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.145" level="INFO">${ACCURACY} = {'source_diff': [4.3972999999995765e-05, 4.4917000000005425e-05, 4.3610999999998956e-05, 4.404200000000108e-05, 4.395800000000366e-05, 4.3638999999998096e-05, 4.4402999999998416e-05, 4.422199999999654...</msg>
<status status="PASS" starttime="20201115 23:00:05.117" endtime="20201115 23:00:05.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.156" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.154" endtime="20201115 23:00:05.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.162" level="INFO">VALUE: [4.3972999999995765e-05, 4.4917000000005425e-05, 4.3610999999998956e-05, 4.404200000000108e-05, 4.395800000000366e-05, 4.3638999999998096e-05, 4.4402999999998416e-05, 4.422199999999654e-05, 4.419400000000434e-05, 4.542999999999908e-05, 4.423600000000305e-05, 4.372200000000298e-05, 4.3861000000006145e-05, 4.402799999999457e-05, 4.370799999999647e-05, 4.3875000000005715e-05, 4.423599999999611e-05, 4.394399999999715e-05, 4.397199999999629e-05, 4.3596999999999386e-05, 4.3625000000005465e-05, 4.3931000000003995e-05, 4.404200000000108e-05, 4.4083000000000316e-05, 4.404200000000108e-05, 4.39860000000028e-05, 4.4444999999997126e-05, 4.4069000000000746e-05, 4.3930999999997056e-05, 4.525000000000362e-05, 4.4417000000004925e-05, 4.41939999999974e-05, 4.3833000000000066e-05, 4.4319000000000996e-05, 4.38060000000004e-05, 4.44860000000033e-05, 4.5416999999998986e-05, 4.45139999999955e-05, 4.426299999999578e-05, 4.4902999999998916e-05, 4.427800000000176e-05, 4.377800000000126e-05, 4.5430999999998556e-05, 4.402700000000204e-05, 4.420799999999697e-05, 4.372199999999604e-05, 4.45139999999955e-05, 4.4417000000004925e-05, 4.434799999999961e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.159" endtime="20201115 23:00:05.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.147" endtime="20201115 23:00:05.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.171" endtime="20201115 23:00:05.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.179" endtime="20201115 23:00:05.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.175" endtime="20201115 23:00:05.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.166" endtime="20201115 23:00:05.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.660" endtime="20201115 23:00:05.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.656" endtime="20201115 23:00:05.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:04.654" endtime="20201115 23:00:05.205"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.232" endtime="20201115 23:00:05.250"></status>
</kw>
<msg timestamp="20201115 23:00:05.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.229" endtime="20201115 23:00:05.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.253" endtime="20201115 23:00:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.259" endtime="20201115 23:00:05.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.222" endtime="20201115 23:00:05.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.216" endtime="20201115 23:00:05.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.283" endtime="20201115 23:00:05.621"></status>
</kw>
<msg timestamp="20201115 23:00:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045219611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.279" endtime="20201115 23:00:05.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045219611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.631" endtime="20201115 23:00:05.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.650" endtime="20201115 23:00:05.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.272" endtime="20201115 23:00:05.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.268" endtime="20201115 23:00:05.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:05.667" level="INFO">${RESULT} = [{'time': 0.045264986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5375000000000276e-05, 'source_diff': 4.5375000000000276e-05}, {'time': 0.045339181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:05.658" endtime="20201115 23:00:05.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:05.701" level="INFO">${ACCURACY} = {'source_diff': [4.5375000000000276e-05, 4.624999999999768e-05, 4.523599999999711e-05, 4.626400000000419e-05, 4.5569000000002247e-05, 4.4874999999999776e-05, 4.523599999999711e-05, 4.5180999999998306e...</msg>
<status status="PASS" starttime="20201115 23:00:05.669" endtime="20201115 23:00:05.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.712" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:05.710" endtime="20201115 23:00:05.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.718" level="INFO">VALUE: [4.5375000000000276e-05, 4.624999999999768e-05, 4.523599999999711e-05, 4.626400000000419e-05, 4.5569000000002247e-05, 4.4874999999999776e-05, 4.523599999999711e-05, 4.5180999999998306e-05, 4.551400000000344e-05, 4.6458999999998696e-05, 4.499999999999643e-05, 4.5138999999999596e-05, 4.48469999999937e-05, 4.509800000000036e-05, 4.555499999999574e-05, 4.4681000000004745e-05, 4.551300000000397e-05, 4.497199999999729e-05, 4.5625000000000526e-05, 4.5388999999999846e-05, 4.6125000000001026e-05, 4.577800000000326e-05, 4.4902999999998916e-05, 4.524999999999668e-05, 4.4638999999999096e-05, 4.5097000000000886e-05, 4.555599999999521e-05, 4.544399999999865e-05, 4.551400000000344e-05, 4.4861000000000206e-05, 4.4638999999999096e-05, 4.502799999999557e-05, 4.4597000000000386e-05, 4.480500000000193e-05, 4.552700000000354e-05, 4.504200000000208e-05, 4.5388999999999846e-05, 4.4861000000000206e-05, 4.4944999999997626e-05, 4.5180999999998306e-05, 4.520799999999797e-05, 4.524999999999668e-05, 4.4833000000001066e-05, 4.5347000000001136e-05, 4.552800000000301e-05, 4.522199999999754e-05, 4.4847000000000636e-05, 4.490199999999944e-05, 4.548599999999736e-05, 4.6097000000001886e-05]</msg>
<status status="PASS" starttime="20201115 23:00:05.715" endtime="20201115 23:00:05.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.703" endtime="20201115 23:00:05.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.728" endtime="20201115 23:00:05.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:05.736" endtime="20201115 23:00:05.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.732" endtime="20201115 23:00:05.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.723" endtime="20201115 23:00:05.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.212" endtime="20201115 23:00:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.208" endtime="20201115 23:00:05.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.206" endtime="20201115 23:00:05.763"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.789" endtime="20201115 23:00:05.807"></status>
</kw>
<msg timestamp="20201115 23:00:05.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.786" endtime="20201115 23:00:05.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:05.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:05.810" endtime="20201115 23:00:05.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.816" endtime="20201115 23:00:05.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.779" endtime="20201115 23:00:05.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.773" endtime="20201115 23:00:05.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:05.840" endtime="20201115 23:00:06.175"></status>
</kw>
<msg timestamp="20201115 23:00:06.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044999736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045045972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:05.836" endtime="20201115 23:00:06.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044999736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045045972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.185" endtime="20201115 23:00:06.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.204" endtime="20201115 23:00:06.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.829" endtime="20201115 23:00:06.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.825" endtime="20201115 23:00:06.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.223" level="INFO">${RESULT} = [{'time': 0.045045972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.623599999999811e-05, 'source_diff': 4.623599999999811e-05}, {'time': 0.045122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.214" endtime="20201115 23:00:06.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.253" level="INFO">${ACCURACY} = {'source_diff': [4.623599999999811e-05, 4.5639000000000096e-05, 4.63060000000029e-05, 4.6389000000000846e-05, 4.5652999999999666e-05, 4.555500000000268e-05, 4.654200000000358e-05, 4.6194999999998876e-...</msg>
<status status="PASS" starttime="20201115 23:00:06.225" endtime="20201115 23:00:06.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.264" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.262" endtime="20201115 23:00:06.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.270" level="INFO">VALUE: [4.623599999999811e-05, 4.5639000000000096e-05, 4.63060000000029e-05, 4.6389000000000846e-05, 4.5652999999999666e-05, 4.555500000000268e-05, 4.654200000000358e-05, 4.6194999999998876e-05, 4.6361000000001706e-05, 4.595799999999872e-05, 4.5959000000005135e-05, 4.606900000000275e-05, 4.744400000000065e-05, 4.5902999999999916e-05, 4.7097000000002887e-05, 4.601300000000447e-05, 4.5611000000000956e-05, 4.5652999999999666e-05, 4.633299999999563e-05, 4.599999999999743e-05, 4.6208999999998446e-05, 4.594399999999915e-05, 4.574999999999718e-05, 4.6444999999999126e-05, 4.568000000000627e-05, 4.58339999999946e-05, 4.644399999999965e-05, 4.633400000000204e-05, 4.633299999999563e-05, 4.649999999999793e-05, 4.5694999999998376e-05, 4.6583000000002817e-05, 4.580599999999546e-05, 4.5625000000000526e-05, 4.622199999999854e-05, 4.629200000000333e-05, 4.580499999999599e-05, 4.6180999999999306e-05, 4.583299999999513e-05, 4.599999999999743e-05, 4.654199999999664e-05, 4.634800000000161e-05, 4.658400000000229e-05, 4.5722999999997516e-05, 4.6903000000000916e-05, 4.65269999999976e-05, 4.581899999999556e-05, 4.636099999999477e-05, 4.5987000000004274e-05, 4.657000000000272e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.267" endtime="20201115 23:00:06.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.255" endtime="20201115 23:00:06.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.279" endtime="20201115 23:00:06.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.287" endtime="20201115 23:00:06.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.282" endtime="20201115 23:00:06.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.274" endtime="20201115 23:00:06.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.769" endtime="20201115 23:00:06.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.765" endtime="20201115 23:00:06.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:05.764" endtime="20201115 23:00:06.313"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.340" endtime="20201115 23:00:06.358"></status>
</kw>
<msg timestamp="20201115 23:00:06.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.337" endtime="20201115 23:00:06.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.361" endtime="20201115 23:00:06.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.368" endtime="20201115 23:00:06.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.330" endtime="20201115 23:00:06.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.324" endtime="20201115 23:00:06.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.391" endtime="20201115 23:00:06.729"></status>
</kw>
<msg timestamp="20201115 23:00:06.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045104653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.388" endtime="20201115 23:00:06.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045104653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.739" endtime="20201115 23:00:06.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.758" endtime="20201115 23:00:06.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.381" endtime="20201115 23:00:06.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.376" endtime="20201115 23:00:06.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:06.776" level="INFO">${RESULT} = [{'time': 0.045151778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.712499999999509e-05, 'source_diff': 4.712499999999509e-05}, {'time': 0.045229042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:06.767" endtime="20201115 23:00:06.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:06.806" level="INFO">${ACCURACY} = {'source_diff': [4.712499999999509e-05, 4.73339999999961e-05, 4.7139000000001596e-05, 4.7181000000000306e-05, 4.777699999999885e-05, 4.672199999999904e-05, 4.7431000000000556e-05, 4.7347000000003137e-...</msg>
<status status="PASS" starttime="20201115 23:00:06.778" endtime="20201115 23:00:06.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.817" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:06.815" endtime="20201115 23:00:06.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.822" level="INFO">VALUE: [4.712499999999509e-05, 4.73339999999961e-05, 4.7139000000001596e-05, 4.7181000000000306e-05, 4.777699999999885e-05, 4.672199999999904e-05, 4.7431000000000556e-05, 4.7347000000003137e-05, 4.745800000000022e-05, 4.776399999999875e-05, 4.752800000000501e-05, 4.716600000000126e-05, 4.7458999999999696e-05, 4.724999999999868e-05, 4.7139000000001596e-05, 4.672199999999904e-05, 4.827800000000576e-05, 4.756999999999678e-05, 4.827800000000576e-05, 4.752799999999807e-05, 4.811099999999652e-05, 4.747199999999979e-05, 4.706900000000375e-05, 4.756899999999731e-05, 4.706899999999681e-05, 4.727699999999835e-05, 4.7222999999999016e-05, 4.7013999999998e-05, 4.7208999999999446e-05, 4.747199999999979e-05, 4.759699999999645e-05, 4.6903000000000916e-05, 4.73469999999962e-05, 4.71940000000004e-05, 4.681899999999656e-05, 4.7445000000000126e-05, 4.7403000000001416e-05, 4.6861000000002206e-05, 4.7125000000002026e-05, 4.702799999999757e-05, 4.733299999999663e-05, 4.66939999999999e-05, 4.6903000000000916e-05, 4.69860000000058e-05, 4.705499999999724e-05, 4.75139999999985e-05, 4.729199999999739e-05, 4.83060000000049e-05, 4.676400000000469e-05, 4.756900000000425e-05]</msg>
<status status="PASS" starttime="20201115 23:00:06.819" endtime="20201115 23:00:06.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.808" endtime="20201115 23:00:06.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.831" endtime="20201115 23:00:06.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:06.839" endtime="20201115 23:00:06.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.835" endtime="20201115 23:00:06.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.827" endtime="20201115 23:00:06.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.320" endtime="20201115 23:00:06.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.316" endtime="20201115 23:00:06.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.314" endtime="20201115 23:00:06.866"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.894" endtime="20201115 23:00:06.911"></status>
</kw>
<msg timestamp="20201115 23:00:06.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.890" endtime="20201115 23:00:06.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.915" endtime="20201115 23:00:06.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.921" endtime="20201115 23:00:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.883" endtime="20201115 23:00:06.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.876" endtime="20201115 23:00:06.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.945" endtime="20201115 23:00:07.285"></status>
</kw>
<msg timestamp="20201115 23:00:07.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:06.941" endtime="20201115 23:00:07.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.295" endtime="20201115 23:00:07.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.314" endtime="20201115 23:00:07.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.934" endtime="20201115 23:00:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.929" endtime="20201115 23:00:07.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.333" level="INFO">${RESULT} = [{'time': 0.045908806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7681000000000806e-05, 'source_diff': 4.7681000000000806e-05}, {'time': 0.045991056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:07.324" endtime="20201115 23:00:07.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.363" level="INFO">${ACCURACY} = {'source_diff': [4.7681000000000806e-05, 4.836200000000318e-05, 4.9125000000004027e-05, 4.8139000000002596e-05, 4.804099999999867e-05, 4.843000000000208e-05, 4.81940000000014e-05, 4.799999999999943e-0...</msg>
<status status="PASS" starttime="20201115 23:00:07.335" endtime="20201115 23:00:07.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.374" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.372" endtime="20201115 23:00:07.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.379" level="INFO">VALUE: [4.7681000000000806e-05, 4.836200000000318e-05, 4.9125000000004027e-05, 4.8139000000002596e-05, 4.804099999999867e-05, 4.843000000000208e-05, 4.81940000000014e-05, 4.799999999999943e-05, 4.815299999999523e-05, 4.8389000000002846e-05, 4.847199999999385e-05, 4.826399999999925e-05, 4.845800000000122e-05, 4.831899999999806e-05, 4.923600000000111e-05, 4.804199999999814e-05, 4.830499999999849e-05, 4.805500000000518e-05, 4.779199999999789e-05, 4.8167000000001736e-05, 4.806999999999728e-05, 4.812499999999609e-05, 4.8193999999994463e-05, 4.86940000000019e-05, 4.876300000000028e-05, 4.807000000000422e-05, 4.85139999999995e-05, 4.911099999999752e-05, 4.805599999999771e-05, 4.8153000000002166e-05, 4.8415999999995574e-05, 4.762499999999559e-05, 4.811099999999652e-05, 4.8375000000003276e-05, 4.823600000000011e-05, 4.765299999999473e-05, 4.841600000000251e-05, 4.8223000000000016e-05, 4.852799999999907e-05, 4.7611000000002957e-05, 4.831899999999806e-05, 4.856999999999778e-05, 4.798599999999986e-05, 4.894400000000215e-05, 4.856900000000525e-05, 4.7597000000003387e-05, 4.76940000000009e-05, 4.8223000000000016e-05, 4.832000000000447e-05, 4.906999999999828e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.376" endtime="20201115 23:00:07.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.365" endtime="20201115 23:00:07.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.388" endtime="20201115 23:00:07.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.397" endtime="20201115 23:00:07.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.392" endtime="20201115 23:00:07.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.384" endtime="20201115 23:00:07.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.873" endtime="20201115 23:00:07.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.869" endtime="20201115 23:00:07.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.867" endtime="20201115 23:00:07.424"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.451" endtime="20201115 23:00:07.470"></status>
</kw>
<msg timestamp="20201115 23:00:07.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.447" endtime="20201115 23:00:07.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:07.474" endtime="20201115 23:00:07.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.480" endtime="20201115 23:00:07.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.440" endtime="20201115 23:00:07.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.434" endtime="20201115 23:00:07.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.503" endtime="20201115 23:00:07.849"></status>
</kw>
<msg timestamp="20201115 23:00:07.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045896597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.500" endtime="20201115 23:00:07.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045896597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:07.859" endtime="20201115 23:00:07.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.877" endtime="20201115 23:00:07.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.493" endtime="20201115 23:00:07.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.488" endtime="20201115 23:00:07.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:07.894" level="INFO">${RESULT} = [{'time': 0.045945583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.898600000000086e-05, 'source_diff': 4.898600000000086e-05}, {'time': 0.046026819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:07.886" endtime="20201115 23:00:07.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:07.927" level="INFO">${ACCURACY} = {'source_diff': [4.898600000000086e-05, 4.952699999999366e-05, 4.879200000000583e-05, 5.0137999999998184e-05, 4.937499999999734e-05, 4.9014e-05, 4.959699999999845e-05, 4.927799999999982e-05, 4.9250000...</msg>
<status status="PASS" starttime="20201115 23:00:07.897" endtime="20201115 23:00:07.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.938" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:07.936" endtime="20201115 23:00:07.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.943" level="INFO">VALUE: [4.898600000000086e-05, 4.952699999999366e-05, 4.879200000000583e-05, 5.0137999999998184e-05, 4.937499999999734e-05, 4.9014e-05, 4.959699999999845e-05, 4.927799999999982e-05, 4.925000000000068e-05, 4.9403000000003416e-05, 4.955499999999974e-05, 4.8639000000003096e-05, 4.880599999999846e-05, 4.936099999999777e-05, 4.8931000000002056e-05, 4.912499999999709e-05, 4.954199999999964e-05, 4.957000000000572e-05, 4.908299999999838e-05, 4.954199999999964e-05, 4.952800000000007e-05, 4.913800000000412e-05, 4.8695000000001376e-05, 4.95140000000005e-05, 4.9459000000001696e-05, 4.88060000000054e-05, 4.915299999999623e-05, 4.879200000000583e-05, 4.923600000000111e-05, 4.931999999999853e-05, 4.8639000000003096e-05, 4.9167000000002736e-05, 4.947200000000179e-05, 4.9415999999996574e-05, 4.9153000000003166e-05, 4.904200000000608e-05, 5.027800000000082e-05, 4.9193999999995464e-05, 4.8653000000002666e-05, 4.8667000000002236e-05, 4.88469999999977e-05, 4.904099999999967e-05, 4.8651999999996254e-05, 4.9417000000002986e-05, 4.9417000000002986e-05, 4.8651999999996254e-05, 5.011099999999852e-05, 4.9417000000002986e-05, 5.009699999999895e-05, 4.881899999999856e-05]</msg>
<status status="PASS" starttime="20201115 23:00:07.940" endtime="20201115 23:00:07.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.929" endtime="20201115 23:00:07.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:07.959" endtime="20201115 23:00:07.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.967" endtime="20201115 23:00:07.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.963" endtime="20201115 23:00:07.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.954" endtime="20201115 23:00:07.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.430" endtime="20201115 23:00:07.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.426" endtime="20201115 23:00:07.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.425" endtime="20201115 23:00:07.993"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.021" endtime="20201115 23:00:08.040"></status>
</kw>
<msg timestamp="20201115 23:00:08.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.018" endtime="20201115 23:00:08.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.044" endtime="20201115 23:00:08.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.050" endtime="20201115 23:00:08.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.011" endtime="20201115 23:00:08.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.005" endtime="20201115 23:00:08.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.073" endtime="20201115 23:00:08.417"></status>
</kw>
<msg timestamp="20201115 23:00:08.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046088222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046139528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.070" endtime="20201115 23:00:08.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046088222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046139528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.427" endtime="20201115 23:00:08.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.445" endtime="20201115 23:00:08.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.063" endtime="20201115 23:00:08.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.058" endtime="20201115 23:00:08.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:08.464" level="INFO">${RESULT} = [{'time': 0.046139528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.130600000000096e-05, 'source_diff': 5.130600000000096e-05}, {'time': 0.046218736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:08.455" endtime="20201115 23:00:08.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:08.494" level="INFO">${ACCURACY} = {'source_diff': [5.130600000000096e-05, 5.129200000000139e-05, 4.9737000000001086e-05, 5.008399999999885e-05, 4.98469999999987e-05, 5.013899999999766e-05, 5.129100000000192e-05, 4.973599999999467e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:08.466" endtime="20201115 23:00:08.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.505" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:08.502" endtime="20201115 23:00:08.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.511" level="INFO">VALUE: [5.130600000000096e-05, 5.129200000000139e-05, 4.9737000000001086e-05, 5.008399999999885e-05, 4.98469999999987e-05, 5.013899999999766e-05, 5.129100000000192e-05, 4.973599999999467e-05, 5.108300000000038e-05, 5.026300000000178e-05, 4.9737000000001086e-05, 5.023600000000211e-05, 5.0207999999996034e-05, 4.972200000000204e-05, 4.973600000000161e-05, 5.056900000000031e-05, 4.979199999999989e-05, 5.005599999999971e-05, 5.0207999999996034e-05, 4.999999999999449e-05, 5.012499999999809e-05, 5.011099999999852e-05, 5.054200000000064e-05, 5.0179999999996894e-05, 5.058299999999988e-05, 5.036099999999877e-05, 5.043000000000408e-05, 5.048600000000236e-05, 4.975000000000118e-05, 5.05140000000015e-05, 4.979199999999989e-05, 5.144499999999719e-05, 5.027800000000082e-05, 5.111099999999952e-05, 5.041699999999705e-05, 5.056999999999978e-05, 4.9889000000004347e-05, 5.004200000000014e-05, 5.0237000000001586e-05, 5.129200000000139e-05, 4.986100000000521e-05, 5.002699999999416e-05, 5.029099999999398e-05, 4.984800000000511e-05, 5.056999999999978e-05, 5.059799999999892e-05, 5.031900000000006e-05, 4.9665999999996824e-05, 5.050000000000193e-05, 5.008299999999938e-05]</msg>
<status status="PASS" starttime="20201115 23:00:08.507" endtime="20201115 23:00:08.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.496" endtime="20201115 23:00:08.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.519" endtime="20201115 23:00:08.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:08.528" endtime="20201115 23:00:08.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.524" endtime="20201115 23:00:08.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.515" endtime="20201115 23:00:08.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.001" endtime="20201115 23:00:08.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.996" endtime="20201115 23:00:08.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.994" endtime="20201115 23:00:08.554"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.581" endtime="20201115 23:00:08.600"></status>
</kw>
<msg timestamp="20201115 23:00:08.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.577" endtime="20201115 23:00:08.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:08.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.603" endtime="20201115 23:00:08.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.609" endtime="20201115 23:00:08.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.570" endtime="20201115 23:00:08.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.565" endtime="20201115 23:00:08.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.632" endtime="20201115 23:00:08.975"></status>
</kw>
<msg timestamp="20201115 23:00:08.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044528097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.629" endtime="20201115 23:00:08.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044528097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044579375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:08.985" endtime="20201115 23:00:09.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.003" endtime="20201115 23:00:09.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.622" endtime="20201115 23:00:09.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.617" endtime="20201115 23:00:09.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.021" level="INFO">${RESULT} = [{'time': 0.044579375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.127799999999488e-05, 'source_diff': 5.127799999999488e-05}, {'time': 0.044662625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.012" endtime="20201115 23:00:09.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.051" level="INFO">${ACCURACY} = {'source_diff': [5.127799999999488e-05, 5.0707999999996534e-05, 5.105500000000124e-05, 5.159799999999992e-05, 5.069499999999644e-05, 5.126399999999531e-05, 5.06669999999973e-05, 5.088899999999841e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:09.023" endtime="20201115 23:00:09.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.062" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.060" endtime="20201115 23:00:09.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.067" level="INFO">VALUE: [5.127799999999488e-05, 5.0707999999996534e-05, 5.105500000000124e-05, 5.159799999999992e-05, 5.069499999999644e-05, 5.126399999999531e-05, 5.06669999999973e-05, 5.088899999999841e-05, 5.1457999999997284e-05, 5.150000000000293e-05, 5.1165999999998324e-05, 5.070899999999601e-05, 5.062499999999859e-05, 5.062499999999859e-05, 5.1403000000005417e-05, 5.213899999999966e-05, 5.15549999999948e-05, 5.1457999999997284e-05, 5.136099999999977e-05, 5.0903000000004917e-05, 5.102800000000157e-05, 5.108300000000038e-05, 5.175000000000318e-05, 5.154200000000164e-05, 5.0681000000003806e-05, 5.075000000000218e-05, 5.157000000000078e-05, 5.108300000000038e-05, 5.0639000000005097e-05, 5.154200000000164e-05, 5.180500000000199e-05, 5.141699999999805e-05, 5.245899999999776e-05, 5.113899999999866e-05, 5.137499999999934e-05, 5.087499999999884e-05, 5.126299999999584e-05, 5.130600000000096e-05, 5.086099999999927e-05, 5.181899999999462e-05, 5.243099999999862e-05, 5.118099999999737e-05, 5.091699999999755e-05, 5.106900000000081e-05, 5.177799999999538e-05, 5.152699999999566e-05, 5.158400000000035e-05, 5.127800000000182e-05, 5.107000000000028e-05, 5.084700000000664e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.064" endtime="20201115 23:00:09.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.053" endtime="20201115 23:00:09.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.076" endtime="20201115 23:00:09.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.084" endtime="20201115 23:00:09.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.080" endtime="20201115 23:00:09.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.072" endtime="20201115 23:00:09.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.561" endtime="20201115 23:00:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.557" endtime="20201115 23:00:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.555" endtime="20201115 23:00:09.111"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.137" endtime="20201115 23:00:09.155"></status>
</kw>
<msg timestamp="20201115 23:00:09.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.134" endtime="20201115 23:00:09.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.158" endtime="20201115 23:00:09.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.165" endtime="20201115 23:00:09.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.127" endtime="20201115 23:00:09.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.121" endtime="20201115 23:00:09.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.188" endtime="20201115 23:00:09.519"></status>
</kw>
<msg timestamp="20201115 23:00:09.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044733194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044785472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.184" endtime="20201115 23:00:09.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044733194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044785472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.528" endtime="20201115 23:00:09.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.547" endtime="20201115 23:00:09.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.177" endtime="20201115 23:00:09.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.173" endtime="20201115 23:00:09.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:09.566" level="INFO">${RESULT} = [{'time': 0.044785472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.227800000000282e-05, 'source_diff': 5.227800000000282e-05}, {'time': 0.044871722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:09.557" endtime="20201115 23:00:09.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:09.596" level="INFO">${ACCURACY} = {'source_diff': [5.227800000000282e-05, 5.237500000000034e-05, 5.3443999999999714e-05, 5.186100000000027e-05, 5.311100000000152e-05, 5.162499999999959e-05, 5.188899999999941e-05, 5.1971999999997354e-0...</msg>
<status status="PASS" starttime="20201115 23:00:09.568" endtime="20201115 23:00:09.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.607" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:09.605" endtime="20201115 23:00:09.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.612" level="INFO">VALUE: [5.227800000000282e-05, 5.237500000000034e-05, 5.3443999999999714e-05, 5.186100000000027e-05, 5.311100000000152e-05, 5.162499999999959e-05, 5.188899999999941e-05, 5.1971999999997354e-05, 5.1915999999999074e-05, 5.237500000000034e-05, 5.2179999999998894e-05, 5.2443999999998714e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.259700000000145e-05, 5.1679999999998394e-05, 5.231900000000206e-05, 5.255500000000274e-05, 5.2431000000005556e-05, 5.277799999999638e-05, 5.1707999999997534e-05, 5.259700000000145e-05, 5.20419999999952e-05, 5.237500000000034e-05, 5.327700000000435e-05, 5.343099999999962e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.327800000000382e-05, 5.213899999999966e-05, 5.1693999999997964e-05, 5.338900000000091e-05, 5.201399999999606e-05, 5.1707999999997534e-05, 5.20270000000031e-05, 5.209700000000095e-05, 5.262500000000059e-05, 5.259799999999398e-05, 5.162499999999959e-05, 5.255600000000221e-05, 5.2179999999998894e-05, 5.193099999999812e-05, 5.23340000000011e-05, 5.247299999999733e-05, 5.2513999999996563e-05, 5.230600000000196e-05, 5.183299999999419e-05, 5.359700000000245e-05, 5.1721999999997104e-05, 5.236100000000077e-05]</msg>
<status status="PASS" starttime="20201115 23:00:09.609" endtime="20201115 23:00:09.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.598" endtime="20201115 23:00:09.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.621" endtime="20201115 23:00:09.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:09.629" endtime="20201115 23:00:09.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.625" endtime="20201115 23:00:09.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.617" endtime="20201115 23:00:09.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.117" endtime="20201115 23:00:09.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.113" endtime="20201115 23:00:09.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.112" endtime="20201115 23:00:09.656"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.682" endtime="20201115 23:00:09.700"></status>
</kw>
<msg timestamp="20201115 23:00:09.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.679" endtime="20201115 23:00:09.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:09.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:09.703" endtime="20201115 23:00:09.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.709" endtime="20201115 23:00:09.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.672" endtime="20201115 23:00:09.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.666" endtime="20201115 23:00:09.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:09.733" endtime="20201115 23:00:10.065"></status>
</kw>
<msg timestamp="20201115 23:00:10.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044707153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044760083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:09.729" endtime="20201115 23:00:10.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044707153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044760083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.075" endtime="20201115 23:00:10.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.093" endtime="20201115 23:00:10.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.722" endtime="20201115 23:00:10.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.717" endtime="20201115 23:00:10.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.111" level="INFO">${RESULT} = [{'time': 0.044760083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2929999999999644e-05, 'source_diff': 5.2929999999999644e-05}, {'time': 0.044841306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:10.102" endtime="20201115 23:00:10.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.143" level="INFO">${ACCURACY} = {'source_diff': [5.2929999999999644e-05, 5.345899999999876e-05, 5.358299999999594e-05, 5.333300000000263e-05, 5.375000000000518e-05, 5.329199999999645e-05, 5.280499999999605e-05, 5.305600000000271e-05...</msg>
<status status="PASS" starttime="20201115 23:00:10.113" endtime="20201115 23:00:10.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.154" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.152" endtime="20201115 23:00:10.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.159" level="INFO">VALUE: [5.2929999999999644e-05, 5.345899999999876e-05, 5.358299999999594e-05, 5.333300000000263e-05, 5.375000000000518e-05, 5.329199999999645e-05, 5.280499999999605e-05, 5.305600000000271e-05, 5.35140000000045e-05, 5.4263999999998314e-05, 5.262500000000059e-05, 5.3471999999998854e-05, 5.352699999999766e-05, 5.304200000000314e-05, 5.336100000000177e-05, 5.354200000000364e-05, 5.2888000000000934e-05, 5.288900000000041e-05, 5.359700000000245e-05, 5.312500000000109e-05, 5.3513999999997564e-05, 5.3471999999998854e-05, 5.333300000000263e-05, 5.3499999999997994e-05, 5.3513999999997564e-05, 5.293099999999912e-05, 5.352800000000407e-05, 5.3014000000004e-05, 5.270899999999801e-05, 5.26669999999993e-05, 5.2679999999999394e-05, 5.269499999999844e-05, 5.3013999999997063e-05, 5.293099999999912e-05, 5.28619999999938e-05, 5.318099999999937e-05, 5.315300000000023e-05, 5.312500000000109e-05, 5.284699999999476e-05, 5.306900000000281e-05, 5.265299999999973e-05, 5.337500000000134e-05, 5.3944000000000214e-05, 5.355500000000374e-05, 5.265299999999973e-05, 5.359799999999498e-05, 5.356899999999637e-05, 5.340300000000048e-05, 5.261200000000049e-05, 5.2902000000000504e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.156" endtime="20201115 23:00:10.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.145" endtime="20201115 23:00:10.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.168" endtime="20201115 23:00:10.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.176" endtime="20201115 23:00:10.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.172" endtime="20201115 23:00:10.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.164" endtime="20201115 23:00:10.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.662" endtime="20201115 23:00:10.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.658" endtime="20201115 23:00:10.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:09.656" endtime="20201115 23:00:10.203"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.229" endtime="20201115 23:00:10.246"></status>
</kw>
<msg timestamp="20201115 23:00:10.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.226" endtime="20201115 23:00:10.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.250" endtime="20201115 23:00:10.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.257" endtime="20201115 23:00:10.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.219" endtime="20201115 23:00:10.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.213" endtime="20201115 23:00:10.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.280" endtime="20201115 23:00:10.609"></status>
</kw>
<msg timestamp="20201115 23:00:10.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044450875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044505819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.276" endtime="20201115 23:00:10.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044450875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044505819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.619" endtime="20201115 23:00:10.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.637" endtime="20201115 23:00:10.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.269" endtime="20201115 23:00:10.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.265" endtime="20201115 23:00:10.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:10.656" level="INFO">${RESULT} = [{'time': 0.044505819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4944000000001214e-05, 'source_diff': 5.4944000000001214e-05}, {'time': 0.044590042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:10.647" endtime="20201115 23:00:10.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:10.686" level="INFO">${ACCURACY} = {'source_diff': [5.4944000000001214e-05, 5.430600000000396e-05, 5.545900000000076e-05, 5.456999999999684e-05, 5.415300000000123e-05, 5.45549999999978e-05, 5.454099999999823e-05, 5.4513999999998564e-05...</msg>
<status status="PASS" starttime="20201115 23:00:10.658" endtime="20201115 23:00:10.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.697" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:10.695" endtime="20201115 23:00:10.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.702" level="INFO">VALUE: [5.4944000000001214e-05, 5.430600000000396e-05, 5.545900000000076e-05, 5.456999999999684e-05, 5.415300000000123e-05, 5.45549999999978e-05, 5.454099999999823e-05, 5.4513999999998564e-05, 5.411100000000252e-05, 5.413900000000166e-05, 5.426400000000525e-05, 5.4166000000001324e-05, 5.431999999999659e-05, 5.3749999999998244e-05, 5.4249999999998744e-05, 5.412500000000209e-05, 5.404099999999773e-05, 5.4235999999999174e-05, 5.4777999999998384e-05, 5.440299999999454e-05, 5.509700000000395e-05, 5.413899999999472e-05, 5.459700000000345e-05, 5.398600000000586e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.420899999999951e-05, 5.383300000000313e-05, 5.5249999999999744e-05, 5.480499999999805e-05, 5.3944000000000214e-05, 5.411100000000252e-05, 5.4527999999998134e-05, 5.4249999999998744e-05, 5.4513999999998564e-05, 5.381899999999662e-05, 5.4166000000001324e-05, 5.379200000000389e-05, 5.504099999999873e-05, 5.38470000000027e-05, 5.375000000000518e-05, 5.386099999999533e-05, 5.459699999999651e-05, 5.4179999999993955e-05, 5.3679999999993455e-05, 5.395899999999926e-05, 5.420899999999951e-05, 5.4249999999998744e-05, 5.5277999999998884e-05, 5.433300000000363e-05]</msg>
<status status="PASS" starttime="20201115 23:00:10.699" endtime="20201115 23:00:10.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.688" endtime="20201115 23:00:10.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.711" endtime="20201115 23:00:10.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:10.719" endtime="20201115 23:00:10.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.715" endtime="20201115 23:00:10.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.707" endtime="20201115 23:00:10.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.209" endtime="20201115 23:00:10.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.205" endtime="20201115 23:00:10.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.204" endtime="20201115 23:00:10.745"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.773" endtime="20201115 23:00:10.790"></status>
</kw>
<msg timestamp="20201115 23:00:10.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.769" endtime="20201115 23:00:10.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:10.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:10.794" endtime="20201115 23:00:10.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.800" endtime="20201115 23:00:10.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.761" endtime="20201115 23:00:10.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.756" endtime="20201115 23:00:10.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:10.823" endtime="20201115 23:00:11.154"></status>
</kw>
<msg timestamp="20201115 23:00:11.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045291083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045346319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:10.820" endtime="20201115 23:00:11.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045291083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045346319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.163" endtime="20201115 23:00:11.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.182" endtime="20201115 23:00:11.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.813" endtime="20201115 23:00:11.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.808" endtime="20201115 23:00:11.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.199" level="INFO">${RESULT} = [{'time': 0.045346319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5236000000000174e-05, 'source_diff': 5.5236000000000174e-05}, {'time': 0.045434597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:11.190" endtime="20201115 23:00:11.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.229" level="INFO">${ACCURACY} = {'source_diff': [5.5236000000000174e-05, 5.533299999999769e-05, 5.4915999999995135e-05, 5.5208000000001034e-05, 5.6472000000001854e-05, 5.5263999999999314e-05, 5.5208000000001034e-05, 5.52639999999993...</msg>
<status status="PASS" starttime="20201115 23:00:11.201" endtime="20201115 23:00:11.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.240" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.238" endtime="20201115 23:00:11.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.246" level="INFO">VALUE: [5.5236000000000174e-05, 5.533299999999769e-05, 5.4915999999995135e-05, 5.5208000000001034e-05, 5.6472000000001854e-05, 5.5263999999999314e-05, 5.5208000000001034e-05, 5.5263999999999314e-05, 5.518099999999443e-05, 5.561100000000402e-05, 5.595900000000126e-05, 5.6138000000004185e-05, 5.4944000000001214e-05, 5.483300000000413e-05, 5.559700000000445e-05, 5.487500000000284e-05, 5.4901999999995565e-05, 5.577699999999991e-05, 5.5152000000002754e-05, 5.5137999999996246e-05, 5.612499999999715e-05, 5.4958000000000784e-05, 5.5194000000001464e-05, 5.4722000000000104e-05, 5.4708000000000534e-05, 5.5305999999998023e-05, 5.530500000000549e-05, 5.4666000000001824e-05, 5.515299999999529e-05, 5.637500000000434e-05, 5.541700000000205e-05, 5.5805999999998523e-05, 5.508399999999691e-05, 5.48749999999959e-05, 5.6401999999997066e-05, 5.5444000000001714e-05, 5.506900000000481e-05, 5.4944000000001214e-05, 5.515300000000223e-05, 5.615300000000323e-05, 5.515299999999529e-05, 5.51670000000018e-05, 5.6305999999999023e-05, 5.511100000000352e-05, 5.6430000000003144e-05, 5.480499999999805e-05, 5.615299999999629e-05, 5.483299999999719e-05, 5.502699999999916e-05, 5.4971999999993415e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.242" endtime="20201115 23:00:11.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.231" endtime="20201115 23:00:11.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.254" endtime="20201115 23:00:11.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.263" endtime="20201115 23:00:11.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.258" endtime="20201115 23:00:11.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.250" endtime="20201115 23:00:11.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.752" endtime="20201115 23:00:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.748" endtime="20201115 23:00:11.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:10.746" endtime="20201115 23:00:11.290"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.295" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.316" endtime="20201115 23:00:11.334"></status>
</kw>
<msg timestamp="20201115 23:00:11.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.313" endtime="20201115 23:00:11.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.337" endtime="20201115 23:00:11.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.343" endtime="20201115 23:00:11.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.306" endtime="20201115 23:00:11.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.300" endtime="20201115 23:00:11.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.367" endtime="20201115 23:00:11.697"></status>
</kw>
<msg timestamp="20201115 23:00:11.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045111653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.363" endtime="20201115 23:00:11.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045111653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.706" endtime="20201115 23:00:11.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.725" endtime="20201115 23:00:11.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.356" endtime="20201115 23:00:11.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.351" endtime="20201115 23:00:11.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:11.744" level="INFO">${RESULT} = [{'time': 0.045167681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6027999999999634e-05, 'source_diff': 5.6027999999999634e-05}, {'time': 0.045251903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:11.735" endtime="20201115 23:00:11.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:11.774" level="INFO">${ACCURACY} = {'source_diff': [5.6027999999999634e-05, 5.6500000000000994e-05, 5.615300000000323e-05, 5.6555999999999274e-05, 5.608300000000538e-05, 5.6528000000000134e-05, 5.608399999999791e-05, 5.730500000000055e...</msg>
<status status="PASS" starttime="20201115 23:00:11.746" endtime="20201115 23:00:11.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.785" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:11.782" endtime="20201115 23:00:11.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.790" level="INFO">VALUE: [5.6027999999999634e-05, 5.6500000000000994e-05, 5.615300000000323e-05, 5.6555999999999274e-05, 5.608300000000538e-05, 5.6528000000000134e-05, 5.608399999999791e-05, 5.730500000000055e-05, 5.590299999999604e-05, 5.5680000000002394e-05, 5.6277999999999884e-05, 5.584699999999776e-05, 5.6943999999996275e-05, 5.6222000000001604e-05, 5.661100000000502e-05, 5.6528000000000134e-05, 5.6305999999999023e-05, 5.566699999999536e-05, 5.5888000000003935e-05, 5.5957999999994845e-05, 5.6041999999999204e-05, 5.679100000000048e-05, 5.713899999999772e-05, 5.608299999999844e-05, 5.6528000000000134e-05, 5.745899999999582e-05, 5.58749999999969e-05, 5.6179999999995955e-05, 5.6430000000003144e-05, 5.727700000000141e-05, 5.6528000000000134e-05, 5.6264000000000314e-05, 5.6472000000001854e-05, 5.6430000000003144e-05, 5.641700000000305e-05, 5.686099999999833e-05, 5.613899999999672e-05, 5.5750000000000244e-05, 5.618100000000237e-05, 5.6319999999998593e-05, 5.6499999999994055e-05, 5.5972000000001354e-05, 5.637500000000434e-05, 5.583299999999819e-05, 5.565299999999579e-05, 5.7083999999998913e-05, 5.633399999999816e-05, 5.632000000000553e-05, 5.56949999999945e-05, 5.641699999999611e-05]</msg>
<status status="PASS" starttime="20201115 23:00:11.787" endtime="20201115 23:00:11.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.776" endtime="20201115 23:00:11.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.799" endtime="20201115 23:00:11.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.808" endtime="20201115 23:00:11.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.803" endtime="20201115 23:00:11.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.795" endtime="20201115 23:00:11.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.296" endtime="20201115 23:00:11.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.292" endtime="20201115 23:00:11.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.291" endtime="20201115 23:00:11.834"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.860" endtime="20201115 23:00:11.878"></status>
</kw>
<msg timestamp="20201115 23:00:11.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.857" endtime="20201115 23:00:11.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.881" endtime="20201115 23:00:11.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.887" endtime="20201115 23:00:11.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.850" endtime="20201115 23:00:11.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.844" endtime="20201115 23:00:11.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.911" endtime="20201115 23:00:12.245"></status>
</kw>
<msg timestamp="20201115 23:00:12.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044437625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044494972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:11.908" endtime="20201115 23:00:12.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044437625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044494972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.255" endtime="20201115 23:00:12.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.273" endtime="20201115 23:00:12.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.901" endtime="20201115 23:00:12.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.896" endtime="20201115 23:00:12.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.291" level="INFO">${RESULT} = [{'time': 0.044494972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.734699999999926e-05, 'source_diff': 5.734699999999926e-05}, {'time': 0.044580167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.282" endtime="20201115 23:00:12.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.324" level="INFO">${ACCURACY} = {'source_diff': [5.734699999999926e-05, 5.7069999999999343e-05, 5.727700000000141e-05, 5.687500000000484e-05, 5.718100000000337e-05, 5.68749999999979e-05, 5.716699999999686e-05, 5.736100000000577e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:12.293" endtime="20201115 23:00:12.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.335" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.332" endtime="20201115 23:00:12.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.341" level="INFO">VALUE: [5.734699999999926e-05, 5.7069999999999343e-05, 5.727700000000141e-05, 5.687500000000484e-05, 5.718100000000337e-05, 5.68749999999979e-05, 5.716699999999686e-05, 5.736100000000577e-05, 5.7486000000002424e-05, 5.8443999999997776e-05, 5.6944000000003214e-05, 5.684699999999876e-05, 5.68749999999979e-05, 5.7415999999997636e-05, 5.738900000000491e-05, 5.756900000000037e-05, 5.758299999999994e-05, 5.7472000000002854e-05, 5.791699999999761e-05, 5.7514000000001564e-05, 5.691699999999661e-05, 5.6791999999999954e-05, 5.7235999999995235e-05, 5.734699999999926e-05, 5.716699999999686e-05, 5.711099999999858e-05, 5.7208000000003034e-05, 5.7000000000001494e-05, 5.683399999999866e-05, 5.697299999999489e-05, 5.662500000000459e-05, 5.7306000000000024e-05, 5.7485999999995485e-05, 5.713900000000466e-05, 5.6791999999999954e-05, 5.68749999999979e-05, 5.6888000000004935e-05, 5.6791999999999954e-05, 5.73749999999984e-05, 5.677699999999397e-05, 5.6778000000000384e-05, 5.7250000000001744e-05, 5.70550000000003e-05, 5.7250000000001744e-05, 5.6721999999995165e-05, 5.665299999999679e-05, 5.665299999999679e-05, 5.68749999999979e-05, 5.693099999999618e-05, 5.686100000000527e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.337" endtime="20201115 23:00:12.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.326" endtime="20201115 23:00:12.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.349" endtime="20201115 23:00:12.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.358" endtime="20201115 23:00:12.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.353" endtime="20201115 23:00:12.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.345" endtime="20201115 23:00:12.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.840" endtime="20201115 23:00:12.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.836" endtime="20201115 23:00:12.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.835" endtime="20201115 23:00:12.384"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.410" endtime="20201115 23:00:12.428"></status>
</kw>
<msg timestamp="20201115 23:00:12.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.407" endtime="20201115 23:00:12.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.431" endtime="20201115 23:00:12.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.438" endtime="20201115 23:00:12.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.400" endtime="20201115 23:00:12.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.394" endtime="20201115 23:00:12.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.461" endtime="20201115 23:00:12.792"></status>
</kw>
<msg timestamp="20201115 23:00:12.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.457" endtime="20201115 23:00:12.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044586125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044644236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:12.801" endtime="20201115 23:00:12.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.820" endtime="20201115 23:00:12.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.450" endtime="20201115 23:00:12.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.446" endtime="20201115 23:00:12.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:12.839" level="INFO">${RESULT} = [{'time': 0.044644236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.811099999999958e-05, 'source_diff': 5.811099999999958e-05}, {'time': 0.044731431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:12.830" endtime="20201115 23:00:12.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:12.870" level="INFO">${ACCURACY} = {'source_diff': [5.811099999999958e-05, 5.7750000000002244e-05, 5.912500000000015e-05, 5.8194999999997e-05, 5.838899999999897e-05, 5.7679999999997456e-05, 5.8236000000003174e-05, 5.8292000000001454e-0...</msg>
<status status="PASS" starttime="20201115 23:00:12.842" endtime="20201115 23:00:12.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.881" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:12.878" endtime="20201115 23:00:12.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.886" level="INFO">VALUE: [5.811099999999958e-05, 5.7750000000002244e-05, 5.912500000000015e-05, 5.8194999999997e-05, 5.838899999999897e-05, 5.7679999999997456e-05, 5.8236000000003174e-05, 5.8292000000001454e-05, 5.9306000000002024e-05, 5.8778000000002384e-05, 5.765300000000473e-05, 5.8236000000003174e-05, 5.83619999999993e-05, 5.8597999999999983e-05, 5.788900000000541e-05, 5.8221999999996665e-05, 5.840299999999854e-05, 5.7694000000003964e-05, 5.8429999999998206e-05, 5.7791999999994015e-05, 5.8429999999998206e-05, 5.76949999999965e-05, 5.83749999999994e-05, 5.858300000000094e-05, 5.7708000000003534e-05, 5.7971999999996415e-05, 5.7778000000001384e-05, 5.929100000000298e-05, 5.851300000000309e-05, 5.795900000000326e-05, 5.780500000000105e-05, 5.8222000000003604e-05, 5.830500000000155e-05, 5.843100000000462e-05, 5.8778000000002384e-05, 5.786099999999933e-05, 5.9277999999995945e-05, 5.8221999999996665e-05, 5.859700000000051e-05, 5.78749999999989e-05, 5.818099999999743e-05, 5.8028000000001634e-05, 5.8207999999997095e-05, 5.7750000000002244e-05, 5.7971999999996415e-05, 5.791699999999761e-05, 5.761099999999908e-05, 5.912500000000015e-05, 5.861100000000008e-05, 5.8207999999997095e-05]</msg>
<status status="PASS" starttime="20201115 23:00:12.883" endtime="20201115 23:00:12.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.872" endtime="20201115 23:00:12.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.895" endtime="20201115 23:00:12.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:12.903" endtime="20201115 23:00:12.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.898" endtime="20201115 23:00:12.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.890" endtime="20201115 23:00:12.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.390" endtime="20201115 23:00:12.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.386" endtime="20201115 23:00:12.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.385" endtime="20201115 23:00:12.930"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.935" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.958" endtime="20201115 23:00:12.976"></status>
</kw>
<msg timestamp="20201115 23:00:12.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.954" endtime="20201115 23:00:12.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:12.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:12.979" endtime="20201115 23:00:12.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:12.986" endtime="20201115 23:00:12.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.947" endtime="20201115 23:00:12.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.941" endtime="20201115 23:00:12.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.009" endtime="20201115 23:00:13.342"></status>
</kw>
<msg timestamp="20201115 23:00:13.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047169069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.006" endtime="20201115 23:00:13.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047110194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047169069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.351" endtime="20201115 23:00:13.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.371" endtime="20201115 23:00:13.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.998" endtime="20201115 23:00:13.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.994" endtime="20201115 23:00:13.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.388" level="INFO">${RESULT} = [{'time': 0.047169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.88749999999999e-05, 'source_diff': 5.88749999999999e-05}, {'time': 0.047257361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:13.380" endtime="20201115 23:00:13.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.419" level="INFO">${ACCURACY} = {'source_diff': [5.88749999999999e-05, 5.980499999999611e-05, 5.9582999999995e-05, 5.9569999999994905e-05, 5.869500000000444e-05, 5.909700000000101e-05, 5.8736000000003674e-05, 6.033300000000269e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:13.391" endtime="20201115 23:00:13.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.430" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.427" endtime="20201115 23:00:13.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.435" level="INFO">VALUE: [5.88749999999999e-05, 5.980499999999611e-05, 5.9582999999995e-05, 5.9569999999994905e-05, 5.869500000000444e-05, 5.909700000000101e-05, 5.8736000000003674e-05, 6.033300000000269e-05, 5.9013999999996125e-05, 5.88749999999999e-05, 5.891699999999861e-05, 5.9556000000002274e-05, 5.8778000000002384e-05, 5.891699999999861e-05, 5.9208000000005034e-05, 5.947299999999739e-05, 5.9570000000001844e-05, 5.9179999999998956e-05, 5.8693999999998026e-05, 5.8708000000004534e-05, 5.9278000000002884e-05, 5.866699999999836e-05, 5.9320000000001594e-05, 5.8749999999996305e-05, 5.908300000000144e-05, 5.9457999999998346e-05, 6.059700000000251e-05, 5.9264000000003314e-05, 5.9805999999995585e-05, 5.9194000000005464e-05, 5.8943999999998276e-05, 5.9014000000003064e-05, 5.9499999999997055e-05, 5.941699999999911e-05, 5.9443999999998776e-05, 5.8792000000001954e-05, 5.9415999999999636e-05, 5.9555999999995335e-05, 5.9098000000000483e-05, 5.9486000000004424e-05, 5.9264000000003314e-05, 5.934700000000126e-05, 5.9278000000002884e-05, 5.9485999999997485e-05, 5.929100000000298e-05, 5.962500000000065e-05, 5.9070000000001344e-05, 6.0334000000002164e-05, 5.916699999999886e-05, 5.93750000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.432" endtime="20201115 23:00:13.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.421" endtime="20201115 23:00:13.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.444" endtime="20201115 23:00:13.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.452" endtime="20201115 23:00:13.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.448" endtime="20201115 23:00:13.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.439" endtime="20201115 23:00:13.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.937" endtime="20201115 23:00:13.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.932" endtime="20201115 23:00:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:12.931" endtime="20201115 23:00:13.478"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.484" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.505" endtime="20201115 23:00:13.523"></status>
</kw>
<msg timestamp="20201115 23:00:13.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.501" endtime="20201115 23:00:13.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:13.526" endtime="20201115 23:00:13.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.532" endtime="20201115 23:00:13.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.494" endtime="20201115 23:00:13.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.489" endtime="20201115 23:00:13.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.556" endtime="20201115 23:00:13.887"></status>
</kw>
<msg timestamp="20201115 23:00:13.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044619347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044679972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.552" endtime="20201115 23:00:13.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044619347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044679972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:13.896" endtime="20201115 23:00:13.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.915" endtime="20201115 23:00:13.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.545" endtime="20201115 23:00:13.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.540" endtime="20201115 23:00:13.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:13.934" level="INFO">${RESULT} = [{'time': 0.044679972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.062500000000165e-05, 'source_diff': 6.062500000000165e-05}, {'time': 0.044770153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:13.925" endtime="20201115 23:00:13.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:13.964" level="INFO">${ACCURACY} = {'source_diff': [6.062500000000165e-05, 6.034700000000226e-05, 5.9764000000003814e-05, 6.009700000000201e-05, 6.0193999999999526e-05, 6.059700000000251e-05, 6.080500000000405e-05, 6.038900000000097e-0...</msg>
<status status="PASS" starttime="20201115 23:00:13.936" endtime="20201115 23:00:13.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.975" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:13.973" endtime="20201115 23:00:13.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:13.981" level="INFO">VALUE: [6.062500000000165e-05, 6.034700000000226e-05, 5.9764000000003814e-05, 6.009700000000201e-05, 6.0193999999999526e-05, 6.059700000000251e-05, 6.080500000000405e-05, 6.038900000000097e-05, 6.113800000000225e-05, 6.04029999999936e-05, 5.991699999999961e-05, 5.9749999999997305e-05, 5.9806000000002524e-05, 6.145800000000035e-05, 6.0485999999998485e-05, 6.061099999999514e-05, 6.008300000000244e-05, 6.009700000000201e-05, 5.9598000000000984e-05, 6.044500000000619e-05, 5.9916000000000136e-05, 6.129099999999804e-05, 6.127699999999847e-05, 6.0402000000001066e-05, 6.129099999999804e-05, 5.9749999999997305e-05, 6.0569999999995905e-05, 5.972299999999764e-05, 5.9722000000005104e-05, 5.966699999999936e-05, 6.145800000000035e-05, 6.145800000000035e-05, 6.0263999999997375e-05, 6.031900000000312e-05, 5.984700000000176e-05, 6.044500000000619e-05, 6.0556000000003274e-05, 6.0791999999997015e-05, 6.041700000000011e-05, 6.022299999999814e-05, 6.0193999999999526e-05, 6.0070000000002344e-05, 6.0207999999999096e-05, 5.983300000000219e-05, 6.0207999999999096e-05, 6.0443999999999776e-05, 5.981900000000262e-05, 6.0014000000004064e-05, 6.0584000000002414e-05, 6.0541999999996765e-05]</msg>
<status status="PASS" starttime="20201115 23:00:13.977" endtime="20201115 23:00:13.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.966" endtime="20201115 23:00:13.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:13.990" endtime="20201115 23:00:13.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:13.999" endtime="20201115 23:00:14.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.994" endtime="20201115 23:00:14.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.985" endtime="20201115 23:00:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.485" endtime="20201115 23:00:14.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.481" endtime="20201115 23:00:14.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:13.479" endtime="20201115 23:00:14.025"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.052" endtime="20201115 23:00:14.070"></status>
</kw>
<msg timestamp="20201115 23:00:14.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.049" endtime="20201115 23:00:14.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.073" endtime="20201115 23:00:14.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.080" endtime="20201115 23:00:14.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.041" endtime="20201115 23:00:14.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.036" endtime="20201115 23:00:14.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.103" endtime="20201115 23:00:14.437"></status>
</kw>
<msg timestamp="20201115 23:00:14.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044634681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044695639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.100" endtime="20201115 23:00:14.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044634681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044695639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.446" endtime="20201115 23:00:14.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.465" endtime="20201115 23:00:14.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.093" endtime="20201115 23:00:14.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.088" endtime="20201115 23:00:14.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.482" level="INFO">${RESULT} = [{'time': 0.044695639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0957999999999846e-05, 'source_diff': 6.0957999999999846e-05}, {'time': 0.044788944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.473" endtime="20201115 23:00:14.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.515" level="INFO">${ACCURACY} = {'source_diff': [6.0957999999999846e-05, 6.088799999999506e-05, 6.12080000000001e-05, 6.0985999999998985e-05, 6.141600000000164e-05, 6.077699999999797e-05, 6.088799999999506e-05, 6.179099999999854e-05...</msg>
<status status="PASS" starttime="20201115 23:00:14.484" endtime="20201115 23:00:14.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.525" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.523" endtime="20201115 23:00:14.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.531" level="INFO">VALUE: [6.0957999999999846e-05, 6.088799999999506e-05, 6.12080000000001e-05, 6.0985999999998985e-05, 6.141600000000164e-05, 6.077699999999797e-05, 6.088799999999506e-05, 6.179099999999854e-05, 6.152699999999872e-05, 6.136099999999589e-05, 6.090300000000104e-05, 6.247200000000092e-05, 6.149999999999906e-05, 6.130600000000402e-05, 6.159799999999604e-05, 6.136100000000283e-05, 6.116599999999445e-05, 6.227799999999895e-05, 6.108300000000344e-05, 6.105599999999684e-05, 6.159700000000351e-05, 6.090300000000104e-05, 6.147199999999992e-05, 6.159699999999657e-05, 6.133299999999675e-05, 6.0944000000000276e-05, 6.155600000000427e-05, 6.09029999999941e-05, 6.115300000000129e-05, 6.231999999999766e-05, 6.116700000000086e-05, 6.163899999999528e-05, 6.163900000000222e-05, 6.152699999999872e-05, 6.151399999999863e-05, 6.140200000000207e-05, 6.1195e-05, 6.08750000000019e-05, 6.133299999999675e-05, 6.0749999999998305e-05, 6.183400000000366e-05, 6.144400000000078e-05, 6.165300000000179e-05, 6.0666000000000886e-05, 6.102699999999822e-05, 6.091700000000061e-05, 6.179200000000495e-05, 6.0806000000003524e-05, 6.130600000000402e-05, 6.0736000000005674e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.528" endtime="20201115 23:00:14.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.516" endtime="20201115 23:00:14.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.539" endtime="20201115 23:00:14.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.547" endtime="20201115 23:00:14.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.543" endtime="20201115 23:00:14.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.535" endtime="20201115 23:00:14.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.032" endtime="20201115 23:00:14.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.028" endtime="20201115 23:00:14.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.026" endtime="20201115 23:00:14.574"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.601" endtime="20201115 23:00:14.619"></status>
</kw>
<msg timestamp="20201115 23:00:14.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.597" endtime="20201115 23:00:14.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.622" endtime="20201115 23:00:14.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.628" endtime="20201115 23:00:14.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.590" endtime="20201115 23:00:14.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.584" endtime="20201115 23:00:14.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.651" endtime="20201115 23:00:14.992"></status>
</kw>
<msg timestamp="20201115 23:00:15.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045138986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045200847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.648" endtime="20201115 23:00:15.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045138986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045200847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.002" endtime="20201115 23:00:15.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.022" endtime="20201115 23:00:15.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.641" endtime="20201115 23:00:15.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.636" endtime="20201115 23:00:15.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.042" level="INFO">${RESULT} = [{'time': 0.045200847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.186100000000333e-05, 'source_diff': 6.186100000000333e-05}, {'time': 0.045291069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.033" endtime="20201115 23:00:15.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.073" level="INFO">${ACCURACY} = {'source_diff': [6.186100000000333e-05, 6.168000000000146e-05, 6.201299999999965e-05, 6.233299999999775e-05, 6.218100000000143e-05, 6.251399999999963e-05, 6.30420000000062e-05, 6.306899999999893e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:15.044" endtime="20201115 23:00:15.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.084" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.082" endtime="20201115 23:00:15.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.090" level="INFO">VALUE: [6.186100000000333e-05, 6.168000000000146e-05, 6.201299999999965e-05, 6.233299999999775e-05, 6.218100000000143e-05, 6.251399999999963e-05, 6.30420000000062e-05, 6.306899999999893e-05, 6.166700000000136e-05, 6.194399999999434e-05, 6.261100000000408e-05, 6.255600000000527e-05, 6.198599999999999e-05, 6.230599999999809e-05, 6.238900000000297e-05, 6.229200000000545e-05, 6.186100000000333e-05, 6.216599999999545e-05, 6.241700000000211e-05, 6.265200000000332e-05, 6.223600000000024e-05, 6.247200000000092e-05, 6.170900000000007e-05, 6.241699999999517e-05, 6.25279999999992e-05, 6.16950000000005e-05, 6.281999999999816e-05, 6.184800000000323e-05, 6.237499999999646e-05, 6.237499999999646e-05, 6.2195000000001e-05, 6.194400000000128e-05, 6.23750000000034e-05, 6.22499999999998e-05, 6.175000000000624e-05, 6.205599999999784e-05, 6.209700000000401e-05, 6.168100000000093e-05, 6.183400000000366e-05, 6.312499999999721e-05, 6.294500000000175e-05, 6.218000000000196e-05, 6.199999999999956e-05, 6.255499999999886e-05, 6.258399999999747e-05, 6.25279999999992e-05, 6.347200000000192e-05, 6.23880000000035e-05, 6.211100000000358e-05, 6.259700000000451e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.087" endtime="20201115 23:00:15.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.075" endtime="20201115 23:00:15.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.099" endtime="20201115 23:00:15.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.107" endtime="20201115 23:00:15.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.103" endtime="20201115 23:00:15.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.094" endtime="20201115 23:00:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.580" endtime="20201115 23:00:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.576" endtime="20201115 23:00:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.575" endtime="20201115 23:00:15.135"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.162" endtime="20201115 23:00:15.183"></status>
</kw>
<msg timestamp="20201115 23:00:15.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.159" endtime="20201115 23:00:15.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.186" endtime="20201115 23:00:15.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.193" endtime="20201115 23:00:15.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.151" endtime="20201115 23:00:15.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.145" endtime="20201115 23:00:15.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.217" endtime="20201115 23:00:15.564"></status>
</kw>
<msg timestamp="20201115 23:00:15.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.213" endtime="20201115 23:00:15.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046797778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046860764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.573" endtime="20201115 23:00:15.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.592" endtime="20201115 23:00:15.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.206" endtime="20201115 23:00:15.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.201" endtime="20201115 23:00:15.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.610" level="INFO">${RESULT} = [{'time': 0.046860764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.298600000000099e-05, 'source_diff': 6.298600000000099e-05}, {'time': 0.046952042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.601" endtime="20201115 23:00:15.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.641" level="INFO">${ACCURACY} = {'source_diff': [6.298600000000099e-05, 6.359799999999804e-05, 6.318100000000243e-05, 6.298600000000099e-05, 6.284699999999782e-05, 6.35280000000002e-05, 6.365299999999685e-05, 6.344399999999584e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:15.612" endtime="20201115 23:00:15.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.652" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.650" endtime="20201115 23:00:15.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.658" level="INFO">VALUE: [6.298600000000099e-05, 6.359799999999804e-05, 6.318100000000243e-05, 6.298600000000099e-05, 6.284699999999782e-05, 6.35280000000002e-05, 6.365299999999685e-05, 6.344399999999584e-05, 6.312499999999721e-05, 6.35699999999989e-05, 6.26950000000015e-05, 6.316599999999645e-05, 6.344399999999584e-05, 6.347300000000139e-05, 6.333400000000516e-05, 6.451400000000163e-05, 6.320900000000157e-05, 6.311100000000458e-05, 6.305499999999936e-05, 6.313900000000372e-05, 6.27500000000003e-05, 6.270799999999466e-05, 6.336099999999789e-05, 6.293100000000218e-05, 6.351400000000063e-05, 6.326400000000038e-05, 6.330499999999961e-05, 6.293099999999524e-05, 6.272200000000117e-05, 6.422200000000267e-05, 6.359699999999857e-05, 6.313899999999678e-05, 6.34159999999967e-05, 6.323600000000124e-05, 6.316600000000339e-05, 6.283299999999825e-05, 6.334800000000473e-05, 6.3582999999999e-05, 6.288900000000347e-05, 6.315299999999635e-05, 6.295900000000132e-05, 6.270899999999413e-05, 6.266599999999595e-05, 6.342999999999627e-05, 6.427800000000095e-05, 6.277799999999945e-05, 6.300000000000056e-05, 6.355599999999934e-05, 6.431900000000018e-05, 6.365300000000379e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.655" endtime="20201115 23:00:15.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.643" endtime="20201115 23:00:15.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.668" endtime="20201115 23:00:15.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.676" endtime="20201115 23:00:15.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.672" endtime="20201115 23:00:15.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.663" endtime="20201115 23:00:15.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.141" endtime="20201115 23:00:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.137" endtime="20201115 23:00:15.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.136" endtime="20201115 23:00:15.703"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.730" endtime="20201115 23:00:15.751"></status>
</kw>
<msg timestamp="20201115 23:00:15.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.727" endtime="20201115 23:00:15.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.755" endtime="20201115 23:00:15.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.761" endtime="20201115 23:00:15.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.720" endtime="20201115 23:00:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.714" endtime="20201115 23:00:15.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.785" endtime="20201115 23:00:16.131"></status>
</kw>
<msg timestamp="20201115 23:00:16.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046197042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.782" endtime="20201115 23:00:16.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046131722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046197042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.141" endtime="20201115 23:00:16.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.160" endtime="20201115 23:00:16.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.774" endtime="20201115 23:00:16.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.770" endtime="20201115 23:00:16.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.179" level="INFO">${RESULT} = [{'time': 0.046197042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.532000000000066e-05, 'source_diff': 6.532000000000066e-05}, {'time': 0.046293319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.170" endtime="20201115 23:00:16.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.210" level="INFO">${ACCURACY} = {'source_diff': [6.532000000000066e-05, 6.37630000000014e-05, 6.416600000000439e-05, 6.429100000000104e-05, 6.418000000000396e-05, 6.377700000000097e-05, 6.39300000000037e-05, 6.387499999999796e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:00:16.181" endtime="20201115 23:00:16.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.221" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.219" endtime="20201115 23:00:16.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.228" level="INFO">VALUE: [6.532000000000066e-05, 6.37630000000014e-05, 6.416600000000439e-05, 6.429100000000104e-05, 6.418000000000396e-05, 6.377700000000097e-05, 6.39300000000037e-05, 6.387499999999796e-05, 6.433399999999923e-05, 6.422199999999573e-05, 6.384699999999882e-05, 6.426400000000138e-05, 6.372300000000164e-05, 6.455600000000034e-05, 6.445799999999641e-05, 6.455500000000086e-05, 6.426400000000138e-05, 6.548600000000349e-05, 6.366699999999642e-05, 6.462500000000565e-05, 6.462499999999871e-05, 6.416699999999692e-05, 6.442999999999727e-05, 6.369399999999609e-05, 6.379200000000002e-05, 6.458399999999948e-05, 6.372300000000164e-05, 6.423600000000224e-05, 6.551400000000263e-05, 6.411099999999864e-05, 6.536099999999989e-05, 6.481900000000068e-05, 6.40829999999995e-05, 6.40280000000007e-05, 6.463899999999828e-05, 6.386099999999839e-05, 6.368100000000293e-05, 6.388899999999753e-05, 6.365300000000379e-05, 6.420899999999563e-05, 6.422300000000214e-05, 6.455500000000086e-05, 6.443099999999674e-05, 6.40699999999994e-05, 6.443099999999674e-05, 6.409699999999907e-05, 6.40829999999995e-05, 6.45559999999934e-05, 6.529199999999458e-05, 6.377800000000045e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.224" endtime="20201115 23:00:16.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.212" endtime="20201115 23:00:16.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.237" endtime="20201115 23:00:16.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.245" endtime="20201115 23:00:16.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.241" endtime="20201115 23:00:16.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.232" endtime="20201115 23:00:16.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.710" endtime="20201115 23:00:16.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.706" endtime="20201115 23:00:16.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.704" endtime="20201115 23:00:16.272"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.299" endtime="20201115 23:00:16.320"></status>
</kw>
<msg timestamp="20201115 23:00:16.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.296" endtime="20201115 23:00:16.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.324" endtime="20201115 23:00:16.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.330" endtime="20201115 23:00:16.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.289" endtime="20201115 23:00:16.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.283" endtime="20201115 23:00:16.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.353" endtime="20201115 23:00:16.700"></status>
</kw>
<msg timestamp="20201115 23:00:16.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.350" endtime="20201115 23:00:16.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045754847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.710" endtime="20201115 23:00:16.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.729" endtime="20201115 23:00:16.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.343" endtime="20201115 23:00:16.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.338" endtime="20201115 23:00:16.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.747" level="INFO">${RESULT} = [{'time': 0.045819889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.504200000000127e-05, 'source_diff': 6.504200000000127e-05}, {'time': 0.045915167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:16.738" endtime="20201115 23:00:16.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.782" level="INFO">${ACCURACY} = {'source_diff': [6.504200000000127e-05, 6.50280000000017e-05, 6.466699999999742e-05, 6.50280000000017e-05, 6.556899999999449e-05, 6.468000000000446e-05, 6.480600000000059e-05, 6.522200000000367e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:00:16.750" endtime="20201115 23:00:16.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.793" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.790" endtime="20201115 23:00:16.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.798" level="INFO">VALUE: [6.504200000000127e-05, 6.50280000000017e-05, 6.466699999999742e-05, 6.50280000000017e-05, 6.556899999999449e-05, 6.468000000000446e-05, 6.480600000000059e-05, 6.522200000000367e-05, 6.522300000000314e-05, 6.551400000000263e-05, 6.616699999999892e-05, 6.522200000000367e-05, 6.468100000000393e-05, 6.520799999999716e-05, 6.509700000000007e-05, 6.538899999999903e-05, 6.494399999999734e-05, 6.509700000000007e-05, 6.55700000000009e-05, 6.508399999999998e-05, 6.498600000000299e-05, 6.494499999999681e-05, 6.541699999999817e-05, 6.561100000000014e-05, 6.506999999999347e-05, 6.50280000000017e-05, 6.484699999999982e-05, 6.476399999999494e-05, 6.470799999999666e-05, 6.469499999999656e-05, 6.533400000000023e-05, 6.513799999999931e-05, 6.645799999999841e-05, 6.630600000000209e-05, 6.649999999999712e-05, 6.555499999999492e-05, 6.520799999999716e-05, 6.48479999999993e-05, 6.486099999999939e-05, 6.493100000000418e-05, 6.558400000000048e-05, 6.547199999999698e-05, 6.479200000000102e-05, 6.470799999999666e-05, 6.648700000000396e-05, 6.50280000000017e-05, 6.490300000000504e-05, 6.493099999999724e-05, 6.531900000000118e-05, 6.631899999999524e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.795" endtime="20201115 23:00:16.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.784" endtime="20201115 23:00:16.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.807" endtime="20201115 23:00:16.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.816" endtime="20201115 23:00:16.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.811" endtime="20201115 23:00:16.840"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.803" endtime="20201115 23:00:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.279" endtime="20201115 23:00:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.275" endtime="20201115 23:00:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.273" endtime="20201115 23:00:16.843"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.870" endtime="20201115 23:00:16.891"></status>
</kw>
<msg timestamp="20201115 23:00:16.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.867" endtime="20201115 23:00:16.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.895" endtime="20201115 23:00:16.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.901" endtime="20201115 23:00:16.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.859" endtime="20201115 23:00:16.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.854" endtime="20201115 23:00:16.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.925" endtime="20201115 23:00:17.272"></status>
</kw>
<msg timestamp="20201115 23:00:17.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046103, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046169986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:16.922" endtime="20201115 23:00:17.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046103, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046169986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:17.282" endtime="20201115 23:00:17.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.301" endtime="20201115 23:00:17.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.914" endtime="20201115 23:00:17.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.909" endtime="20201115 23:00:17.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.321" level="INFO">${RESULT} = [{'time': 0.046169986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.698600000000499e-05, 'source_diff': 6.698600000000499e-05}, {'time': 0.046265236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:17.312" endtime="20201115 23:00:17.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.352" level="INFO">${ACCURACY} = {'source_diff': [6.698600000000499e-05, 6.659700000000157e-05, 6.64029999999996e-05, 6.60830000000015e-05, 6.57500000000033e-05, 6.654099999999635e-05, 6.748599999999855e-05, 6.599999999999662e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:00:17.323" endtime="20201115 23:00:17.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.363" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.361" endtime="20201115 23:00:17.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.369" level="INFO">VALUE: [6.698600000000499e-05, 6.659700000000157e-05, 6.64029999999996e-05, 6.60830000000015e-05, 6.57500000000033e-05, 6.654099999999635e-05, 6.748599999999855e-05, 6.599999999999662e-05, 6.581899999999474e-05, 6.655500000000286e-05, 6.665299999999985e-05, 6.655500000000286e-05, 6.629200000000252e-05, 6.713900000000078e-05, 6.616599999999945e-05, 6.65280000000032e-05, 6.60280000000027e-05, 6.612500000000021e-05, 6.651399999999669e-05, 6.612500000000021e-05, 6.62500000000038e-05, 6.65559999999954e-05, 6.620799999999816e-05, 6.658400000000148e-05, 6.595900000000432e-05, 6.647199999999798e-05, 6.619399999999859e-05, 6.643100000000568e-05, 6.637500000000046e-05, 6.624999999999687e-05, 6.57080000000046e-05, 6.57500000000033e-05, 6.593100000000518e-05, 6.612500000000021e-05, 6.59029999999991e-05, 6.73480000000018e-05, 6.6583000000002e-05, 6.699999999999762e-05, 6.619399999999859e-05, 6.581999999999422e-05, 6.638800000000056e-05, 6.616699999999892e-05, 6.643099999999874e-05, 6.59159999999992e-05, 6.713900000000078e-05, 6.604199999999533e-05, 6.606999999999447e-05, 6.573699999999627e-05, 6.569399999999809e-05, 6.609700000000107e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.365" endtime="20201115 23:00:17.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.354" endtime="20201115 23:00:17.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.378" endtime="20201115 23:00:17.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.386" endtime="20201115 23:00:17.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.382" endtime="20201115 23:00:17.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.373" endtime="20201115 23:00:17.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.850" endtime="20201115 23:00:17.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.846" endtime="20201115 23:00:17.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.844" endtime="20201115 23:00:17.413"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.419" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.441" endtime="20201115 23:00:17.462"></status>
</kw>
<msg timestamp="20201115 23:00:17.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.437" endtime="20201115 23:00:17.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.465" endtime="20201115 23:00:17.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.472" endtime="20201115 23:00:17.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.430" endtime="20201115 23:00:17.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.424" endtime="20201115 23:00:17.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.496" endtime="20201115 23:00:17.844"></status>
</kw>
<msg timestamp="20201115 23:00:17.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04622525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046292306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:17.492" endtime="20201115 23:00:17.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04622525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046292306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:17.854" endtime="20201115 23:00:17.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.873" endtime="20201115 23:00:17.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.485" endtime="20201115 23:00:17.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.480" endtime="20201115 23:00:17.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.891" level="INFO">${RESULT} = [{'time': 0.046292306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.70559999999959e-05, 'source_diff': 6.70559999999959e-05}, {'time': 0.046389569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:17.882" endtime="20201115 23:00:17.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.922" level="INFO">${ACCURACY} = {'source_diff': [6.70559999999959e-05, 6.708299999999556e-05, 6.665200000000038e-05, 6.715300000000035e-05, 6.674999999999737e-05, 6.754100000000429e-05, 6.759699999999563e-05, 6.724999999999787e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:17.893" endtime="20201115 23:00:17.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.933" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.931" endtime="20201115 23:00:17.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.938" level="INFO">VALUE: [6.70559999999959e-05, 6.708299999999556e-05, 6.665200000000038e-05, 6.715300000000035e-05, 6.674999999999737e-05, 6.754100000000429e-05, 6.759699999999563e-05, 6.724999999999787e-05, 6.670799999999866e-05, 6.719499999999906e-05, 6.686100000000139e-05, 6.672199999999823e-05, 6.726399999999744e-05, 6.752699999999778e-05, 6.706900000000293e-05, 6.736100000000189e-05, 6.708299999999556e-05, 6.766600000000095e-05, 6.691699999999967e-05, 6.676400000000388e-05, 6.829200000000452e-05, 6.743099999999974e-05, 6.847299999999945e-05, 6.756900000000343e-05, 6.737500000000146e-05, 6.672200000000517e-05, 6.737500000000146e-05, 6.741700000000017e-05, 6.715300000000035e-05, 6.752700000000472e-05, 6.67500000000043e-05, 6.729100000000404e-05, 6.756899999999649e-05, 6.659700000000157e-05, 6.704099999999685e-05, 6.719399999999959e-05, 6.766700000000042e-05, 6.67359999999978e-05, 6.736100000000189e-05, 6.736100000000189e-05, 6.69030000000001e-05, 6.744499999999931e-05, 6.716600000000045e-05, 6.669399999999909e-05, 6.723600000000524e-05, 6.761100000000214e-05, 6.686200000000087e-05, 6.705499999999642e-05, 6.683299999999531e-05, 6.720799999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.935" endtime="20201115 23:00:17.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.924" endtime="20201115 23:00:17.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.947" endtime="20201115 23:00:17.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.956" endtime="20201115 23:00:17.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.951" endtime="20201115 23:00:17.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.943" endtime="20201115 23:00:17.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.420" endtime="20201115 23:00:17.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.416" endtime="20201115 23:00:17.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.414" endtime="20201115 23:00:17.983"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.988" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.010" endtime="20201115 23:00:18.031"></status>
</kw>
<msg timestamp="20201115 23:00:18.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.007" endtime="20201115 23:00:18.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.035" endtime="20201115 23:00:18.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.042" endtime="20201115 23:00:18.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.999" endtime="20201115 23:00:18.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.993" endtime="20201115 23:00:18.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.065" endtime="20201115 23:00:18.414"></status>
</kw>
<msg timestamp="20201115 23:00:18.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046091514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046159972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.062" endtime="20201115 23:00:18.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046091514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046159972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.424" endtime="20201115 23:00:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.444" endtime="20201115 23:00:18.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.055" endtime="20201115 23:00:18.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.050" endtime="20201115 23:00:18.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.463" level="INFO">${RESULT} = [{'time': 0.046159972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.845800000000041e-05, 'source_diff': 6.845800000000041e-05}, {'time': 0.046259222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:18.454" endtime="20201115 23:00:18.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.493" level="INFO">${ACCURACY} = {'source_diff': [6.845800000000041e-05, 6.862500000000271e-05, 6.865300000000185e-05, 6.776399999999794e-05, 6.847199999999998e-05, 6.82229999999992e-05, 6.812500000000221e-05, 6.769400000000009e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:18.465" endtime="20201115 23:00:18.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.504" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.501" endtime="20201115 23:00:18.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.509" level="INFO">VALUE: [6.845800000000041e-05, 6.862500000000271e-05, 6.865300000000185e-05, 6.776399999999794e-05, 6.847199999999998e-05, 6.82229999999992e-05, 6.812500000000221e-05, 6.769400000000009e-05, 6.880599999999765e-05, 6.858399999999654e-05, 6.813900000000178e-05, 6.881899999999774e-05, 6.862500000000271e-05, 6.818100000000049e-05, 6.833300000000375e-05, 6.77359999999988e-05, 6.812500000000221e-05, 6.951399999999969e-05, 6.784699999999588e-05, 6.781999999999622e-05, 6.82359999999993e-05, 6.85280000000052e-05, 6.849999999999912e-05, 6.95559999999984e-05, 6.838900000000203e-05, 6.855499999999792e-05, 6.847199999999998e-05, 6.822199999999973e-05, 6.844400000000084e-05, 6.805499999999742e-05, 6.836099999999595e-05, 6.916599999999551e-05, 6.786099999999545e-05, 6.768099999999999e-05, 6.836100000000289e-05, 6.836099999999595e-05, 6.794499999999981e-05, 6.838899999999509e-05, 6.776399999999794e-05, 6.858399999999654e-05, 6.861100000000314e-05, 6.79030000000011e-05, 6.862500000000271e-05, 6.811200000000212e-05, 6.829100000000504e-05, 6.913900000000278e-05, 6.776299999999846e-05, 6.852699999999878e-05, 6.840299999999466e-05, 6.801399999999819e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.506" endtime="20201115 23:00:18.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.495" endtime="20201115 23:00:18.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.518" endtime="20201115 23:00:18.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.526" endtime="20201115 23:00:18.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.521" endtime="20201115 23:00:18.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.513" endtime="20201115 23:00:18.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.989" endtime="20201115 23:00:18.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.985" endtime="20201115 23:00:18.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.984" endtime="20201115 23:00:18.553"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.558" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.580" endtime="20201115 23:00:18.598"></status>
</kw>
<msg timestamp="20201115 23:00:18.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.577" endtime="20201115 23:00:18.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.602" endtime="20201115 23:00:18.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.608" endtime="20201115 23:00:18.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.569" endtime="20201115 23:00:18.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.563" endtime="20201115 23:00:18.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.631" endtime="20201115 23:00:18.966"></status>
</kw>
<msg timestamp="20201115 23:00:18.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045455403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045524667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.628" endtime="20201115 23:00:18.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045455403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045524667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.975" endtime="20201115 23:00:18.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.994" endtime="20201115 23:00:18.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.621" endtime="20201115 23:00:18.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.616" endtime="20201115 23:00:19.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.011" level="INFO">${RESULT} = [{'time': 0.045524667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.926399999999944e-05, 'source_diff': 6.926399999999944e-05}, {'time': 0.045625931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.002" endtime="20201115 23:00:19.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.044" level="INFO">${ACCURACY} = {'source_diff': [6.926399999999944e-05, 6.983400000000473e-05, 6.89030000000021e-05, 6.90830000000045e-05, 6.962499999999677e-05, 6.950000000000012e-05, 6.87909999999986e-05, 6.868000000000152e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:00:19.013" endtime="20201115 23:00:19.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.055" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.053" endtime="20201115 23:00:19.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.060" level="INFO">VALUE: [6.926399999999944e-05, 6.983400000000473e-05, 6.89030000000021e-05, 6.90830000000045e-05, 6.962499999999677e-05, 6.950000000000012e-05, 6.87909999999986e-05, 6.868000000000152e-05, 6.870900000000013e-05, 6.945900000000088e-05, 6.898600000000005e-05, 6.911200000000312e-05, 6.929199999999858e-05, 6.899999999999962e-05, 6.916699999999498e-05, 6.92360000000003e-05, 6.959700000000457e-05, 6.962500000000371e-05, 6.905500000000536e-05, 6.891700000000167e-05, 6.868000000000152e-05, 6.945800000000141e-05, 6.951399999999969e-05, 6.876299999999946e-05, 6.930499999999867e-05, 6.89030000000021e-05, 7.01109999999977e-05, 7.045899999999494e-05, 6.872200000000023e-05, 6.89030000000021e-05, 6.891700000000167e-05, 7.000000000000062e-05, 6.938799999999662e-05, 6.948600000000055e-05, 6.915299999999541e-05, 7.048599999999461e-05, 6.90559999999979e-05, 6.909699999999713e-05, 6.922200000000073e-05, 6.954099999999935e-05, 6.904099999999885e-05, 6.913900000000278e-05, 6.959700000000457e-05, 6.883299999999731e-05, 6.918099999999455e-05, 6.89030000000021e-05, 7.022200000000173e-05, 6.936100000000389e-05, 6.963899999999634e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.057" endtime="20201115 23:00:19.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.046" endtime="20201115 23:00:19.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.069" endtime="20201115 23:00:19.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.077" endtime="20201115 23:00:19.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.073" endtime="20201115 23:00:19.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.064" endtime="20201115 23:00:19.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.559" endtime="20201115 23:00:19.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.555" endtime="20201115 23:00:19.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.554" endtime="20201115 23:00:19.104"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.131" endtime="20201115 23:00:19.150"></status>
</kw>
<msg timestamp="20201115 23:00:19.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.127" endtime="20201115 23:00:19.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.153" endtime="20201115 23:00:19.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.160" endtime="20201115 23:00:19.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.120" endtime="20201115 23:00:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.114" endtime="20201115 23:00:19.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.183" endtime="20201115 23:00:19.515"></status>
</kw>
<msg timestamp="20201115 23:00:19.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045875319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.180" endtime="20201115 23:00:19.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045875319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.525" endtime="20201115 23:00:19.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.543" endtime="20201115 23:00:19.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.173" endtime="20201115 23:00:19.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.168" endtime="20201115 23:00:19.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.562" level="INFO">${RESULT} = [{'time': 0.045945153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.983400000000473e-05, 'source_diff': 6.983400000000473e-05}, {'time': 0.046048403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.553" endtime="20201115 23:00:19.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.592" level="INFO">${ACCURACY} = {'source_diff': [6.983400000000473e-05, 7.002799999999976e-05, 7.06109999999982e-05, 7.112500000000521e-05, 6.991599999999626e-05, 7.062499999999777e-05, 6.986100000000439e-05, 7.002799999999976e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:19.564" endtime="20201115 23:00:19.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.603" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.601" endtime="20201115 23:00:19.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.608" level="INFO">VALUE: [6.983400000000473e-05, 7.002799999999976e-05, 7.06109999999982e-05, 7.112500000000521e-05, 6.991599999999626e-05, 7.062499999999777e-05, 6.986100000000439e-05, 7.002799999999976e-05, 7.045800000000241e-05, 7.016600000000345e-05, 6.983300000000525e-05, 7.061100000000514e-05, 6.965300000000285e-05, 6.966700000000242e-05, 7.122200000000273e-05, 6.981999999999822e-05, 7.05689999999995e-05, 7.055500000000686e-05, 6.983299999999831e-05, 7.058299999999906e-05, 7.131999999999972e-05, 7.051400000000069e-05, 7.002799999999976e-05, 7.037500000000446e-05, 7.05559999999994e-05, 7.027800000000001e-05, 7.004099999999985e-05, 7.034700000000532e-05, 7.130600000000015e-05, 7.020799999999522e-05, 7.00559999999989e-05, 7.040199999999719e-05, 6.99030000000031e-05, 7.012500000000421e-05, 7.147300000000245e-05, 6.967999999999558e-05, 7.005499999999942e-05, 6.97909999999996e-05, 7.115300000000435e-05, 7.017999999999608e-05, 7.023700000000077e-05, 7.038899999999709e-05, 7.037499999999752e-05, 7.023599999999436e-05, 7.104200000000033e-05, 7.042999999999633e-05, 7.150000000000212e-05, 7.047199999999504e-05, 7.131900000000024e-05, 7.020799999999522e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.605" endtime="20201115 23:00:19.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.594" endtime="20201115 23:00:19.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.618" endtime="20201115 23:00:19.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.626" endtime="20201115 23:00:19.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.622" endtime="20201115 23:00:19.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.614" endtime="20201115 23:00:19.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.110" endtime="20201115 23:00:19.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.107" endtime="20201115 23:00:19.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.105" endtime="20201115 23:00:19.653"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.679" endtime="20201115 23:00:19.697"></status>
</kw>
<msg timestamp="20201115 23:00:19.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.676" endtime="20201115 23:00:19.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.701" endtime="20201115 23:00:19.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.708" endtime="20201115 23:00:19.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.669" endtime="20201115 23:00:19.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.663" endtime="20201115 23:00:19.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.731" endtime="20201115 23:00:20.064"></status>
</kw>
<msg timestamp="20201115 23:00:20.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044396917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044468542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.728" endtime="20201115 23:00:20.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044396917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044468542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.073" endtime="20201115 23:00:20.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.092" endtime="20201115 23:00:20.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.721" endtime="20201115 23:00:20.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.716" endtime="20201115 23:00:20.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.109" level="INFO">${RESULT} = [{'time': 0.044468542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.162499999999877e-05, 'source_diff': 7.162499999999877e-05}, {'time': 0.044572792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.101" endtime="20201115 23:00:20.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.140" level="INFO">${ACCURACY} = {'source_diff': [7.162499999999877e-05, 7.12230000000022e-05, 7.080500000000017e-05, 7.14439999999969e-05, 7.141700000000417e-05, 7.12360000000023e-05, 7.072200000000223e-05, 7.152700000000178e-05, 7....</msg>
<status status="PASS" starttime="20201115 23:00:20.111" endtime="20201115 23:00:20.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.150" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.148" endtime="20201115 23:00:20.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.156" level="INFO">VALUE: [7.162499999999877e-05, 7.12230000000022e-05, 7.080500000000017e-05, 7.14439999999969e-05, 7.141700000000417e-05, 7.12360000000023e-05, 7.072200000000223e-05, 7.152700000000178e-05, 7.119400000000359e-05, 7.140299999999766e-05, 7.149999999999518e-05, 7.104200000000033e-05, 7.150000000000212e-05, 7.083399999999879e-05, 7.158399999999954e-05, 7.141699999999723e-05, 7.147199999999604e-05, 7.158300000000006e-05, 7.151399999999475e-05, 7.076400000000094e-05, 7.095899999999544e-05, 7.100000000000162e-05, 7.126400000000144e-05, 7.145900000000288e-05, 7.141700000000417e-05, 7.1069e-05, 7.111100000000564e-05, 7.138899999999809e-05, 7.186099999999945e-05, 7.075000000000137e-05, 7.092999999999683e-05, 7.248600000000355e-05, 7.201399999999525e-05, 7.084700000000582e-05, 7.072200000000223e-05, 7.126400000000144e-05, 7.165299999999791e-05, 7.2069000000001e-05, 7.143100000000374e-05, 7.163900000000528e-05, 7.183399999999979e-05, 7.116600000000445e-05, 7.09309999999963e-05, 7.168100000000399e-05, 7.116599999999751e-05, 7.093100000000324e-05, 7.100000000000162e-05, 7.122199999999579e-05, 7.162499999999877e-05, 7.16109999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.153" endtime="20201115 23:00:20.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.141" endtime="20201115 23:00:20.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.166" endtime="20201115 23:00:20.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.174" endtime="20201115 23:00:20.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.170" endtime="20201115 23:00:20.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.161" endtime="20201115 23:00:20.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.659" endtime="20201115 23:00:20.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.655" endtime="20201115 23:00:20.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.653" endtime="20201115 23:00:20.201"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.228" endtime="20201115 23:00:20.246"></status>
</kw>
<msg timestamp="20201115 23:00:20.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.225" endtime="20201115 23:00:20.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.249" endtime="20201115 23:00:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.256" endtime="20201115 23:00:20.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.217" endtime="20201115 23:00:20.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.212" endtime="20201115 23:00:20.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.279" endtime="20201115 23:00:20.609"></status>
</kw>
<msg timestamp="20201115 23:00:20.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04491725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044989569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:20.276" endtime="20201115 23:00:20.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04491725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044989569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:20.619" endtime="20201115 23:00:20.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.637" endtime="20201115 23:00:20.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.268" endtime="20201115 23:00:20.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.264" endtime="20201115 23:00:20.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.656" level="INFO">${RESULT} = [{'time': 0.044989569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.231900000000124e-05, 'source_diff': 7.231900000000124e-05}, {'time': 0.045089847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:20.647" endtime="20201115 23:00:20.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.687" level="INFO">${ACCURACY} = {'source_diff': [7.231900000000124e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.219500000000406e-05, 7.186099999999945e-05, 7.197200000000348e-05, 7.190199999999869e-05, 7.241699999999823e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:20.659" endtime="20201115 23:00:20.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.697" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.695" endtime="20201115 23:00:20.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.703" level="INFO">VALUE: [7.231900000000124e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.219500000000406e-05, 7.186099999999945e-05, 7.197200000000348e-05, 7.190199999999869e-05, 7.241699999999823e-05, 7.204100000000185e-05, 7.21109999999997e-05, 7.244499999999737e-05, 7.247300000000345e-05, 7.175000000000237e-05, 7.266700000000542e-05, 7.333299999999487e-05, 7.212499999999927e-05, 7.240299999999866e-05, 7.267999999999858e-05, 7.26110000000002e-05, 7.24309999999978e-05, 7.209700000000013e-05, 7.212499999999927e-05, 7.243000000000527e-05, 7.197199999999654e-05, 7.351299999999727e-05, 7.179200000000108e-05, 7.19309999999973e-05, 7.230600000000115e-05, 7.191599999999826e-05, 7.232000000000072e-05, 7.352700000000378e-05, 7.263899999999934e-05, 7.255599999999446e-05, 7.166700000000442e-05, 7.219399999999765e-05, 7.204200000000133e-05, 7.212499999999927e-05, 7.263899999999934e-05, 7.33189999999953e-05, 7.172200000000323e-05, 7.216699999999798e-05, 7.251400000000269e-05, 7.265199999999944e-05, 7.205500000000142e-05, 7.252800000000226e-05, 7.173599999999586e-05, 7.230600000000115e-05, 7.176400000000194e-05, 7.165199999999844e-05, 7.233300000000081e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.700" endtime="20201115 23:00:20.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.689" endtime="20201115 23:00:20.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.712" endtime="20201115 23:00:20.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.720" endtime="20201115 23:00:20.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.715" endtime="20201115 23:00:20.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.707" endtime="20201115 23:00:20.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.208" endtime="20201115 23:00:20.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.204" endtime="20201115 23:00:20.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.202" endtime="20201115 23:00:20.746"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.772" endtime="20201115 23:00:20.791"></status>
</kw>
<msg timestamp="20201115 23:00:20.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.769" endtime="20201115 23:00:20.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.794" endtime="20201115 23:00:20.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.800" endtime="20201115 23:00:20.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.762" endtime="20201115 23:00:20.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.756" endtime="20201115 23:00:20.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.824" endtime="20201115 23:00:21.155"></status>
</kw>
<msg timestamp="20201115 23:00:21.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044353861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.820" endtime="20201115 23:00:21.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044353861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.164" endtime="20201115 23:00:21.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.183" endtime="20201115 23:00:21.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.813" endtime="20201115 23:00:21.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.808" endtime="20201115 23:00:21.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.200" level="INFO">${RESULT} = [{'time': 0.044427153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.329199999999564e-05, 'source_diff': 7.329199999999564e-05}, {'time': 0.044530431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.191" endtime="20201115 23:00:21.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.234" level="INFO">${ACCURACY} = {'source_diff': [7.329199999999564e-05, 7.400000000000462e-05, 7.363900000000034e-05, 7.384700000000188e-05, 7.288899999999959e-05, 7.270799999999772e-05, 7.2763999999996e-05, 7.342999999999933e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:21.203" endtime="20201115 23:00:21.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.245" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.243" endtime="20201115 23:00:21.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.250" level="INFO">VALUE: [7.329199999999564e-05, 7.400000000000462e-05, 7.363900000000034e-05, 7.384700000000188e-05, 7.288899999999959e-05, 7.270799999999772e-05, 7.2763999999996e-05, 7.342999999999933e-05, 7.313800000000037e-05, 7.32639999999965e-05, 7.336100000000095e-05, 7.351399999999675e-05, 7.355500000000292e-05, 7.270800000000466e-05, 7.436100000000195e-05, 7.363900000000034e-05, 7.297200000000448e-05, 7.270800000000466e-05, 7.433300000000281e-05, 7.286100000000045e-05, 7.35690000000025e-05, 7.318000000000602e-05, 7.358299999999512e-05, 7.308400000000104e-05, 7.272200000000423e-05, 7.330500000000267e-05, 7.383300000000231e-05, 7.334700000000138e-05, 7.416699999999998e-05, 7.416699999999998e-05, 7.319499999999812e-05, 7.305599999999496e-05, 7.298600000000405e-05, 7.336100000000095e-05, 7.32639999999965e-05, 7.315299999999941e-05, 7.368099999999905e-05, 7.336100000000095e-05, 7.270899999999719e-05, 7.348599999999761e-05, 7.344499999999837e-05, 7.318099999999855e-05, 7.269400000000509e-05, 7.272299999999676e-05, 7.340200000000019e-05, 7.287500000000002e-05, 7.366600000000001e-05, 7.308400000000104e-05, 7.29309999999983e-05, 7.270799999999772e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.247" endtime="20201115 23:00:21.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.236" endtime="20201115 23:00:21.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.259" endtime="20201115 23:00:21.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.267" endtime="20201115 23:00:21.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.263" endtime="20201115 23:00:21.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.255" endtime="20201115 23:00:21.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.752" endtime="20201115 23:00:21.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.749" endtime="20201115 23:00:21.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.747" endtime="20201115 23:00:21.294"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.299" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.320" endtime="20201115 23:00:21.339"></status>
</kw>
<msg timestamp="20201115 23:00:21.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.317" endtime="20201115 23:00:21.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.342" endtime="20201115 23:00:21.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.348" endtime="20201115 23:00:21.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.310" endtime="20201115 23:00:21.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.304" endtime="20201115 23:00:21.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.372" endtime="20201115 23:00:21.704"></status>
</kw>
<msg timestamp="20201115 23:00:21.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044401014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.368" endtime="20201115 23:00:21.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044401014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044474722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.713" endtime="20201115 23:00:21.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.731" endtime="20201115 23:00:21.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.361" endtime="20201115 23:00:21.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.356" endtime="20201115 23:00:21.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.750" level="INFO">${RESULT} = [{'time': 0.044474722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.370799999999872e-05, 'source_diff': 7.370799999999872e-05}, {'time': 0.044577, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:21.742" endtime="20201115 23:00:21.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.780" level="INFO">${ACCURACY} = {'source_diff': [7.370799999999872e-05, 7.368099999999905e-05, 7.429200000000358e-05, 7.401399999999725e-05, 7.402799999999682e-05, 7.440300000000066e-05, 7.550000000000612e-05, 7.461099999999526e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:21.752" endtime="20201115 23:00:21.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.791" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.789" endtime="20201115 23:00:21.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.797" level="INFO">VALUE: [7.370799999999872e-05, 7.368099999999905e-05, 7.429200000000358e-05, 7.401399999999725e-05, 7.402799999999682e-05, 7.440300000000066e-05, 7.550000000000612e-05, 7.461099999999526e-05, 7.423599999999836e-05, 7.419399999999965e-05, 7.463900000000134e-05, 7.420799999999922e-05, 7.406899999999605e-05, 7.46110000000022e-05, 7.40969999999952e-05, 7.373599999999786e-05, 7.422200000000573e-05, 7.384699999999494e-05, 7.531999999999678e-05, 7.441700000000023e-05, 7.376400000000394e-05, 7.531900000000424e-05, 7.447200000000598e-05, 7.461099999999526e-05, 7.390300000000016e-05, 7.444499999999937e-05, 7.436099999999501e-05, 7.415300000000041e-05, 7.45560000000034e-05, 7.369400000000609e-05, 7.390300000000016e-05, 7.445899999999894e-05, 7.377799999999657e-05, 7.401400000000419e-05, 7.407000000000247e-05, 7.40560000000029e-05, 7.39439999999994e-05, 7.448599999999861e-05, 7.418099999999955e-05, 7.420799999999922e-05, 7.454200000000383e-05, 7.380500000000317e-05, 7.458400000000254e-05, 7.368099999999905e-05, 7.466700000000048e-05, 7.388900000000059e-05, 7.411099999999476e-05, 7.454199999999689e-05, 7.544399999999396e-05, 7.430499999999673e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.794" endtime="20201115 23:00:21.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.782" endtime="20201115 23:00:21.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.805" endtime="20201115 23:00:21.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.813" endtime="20201115 23:00:21.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.809" endtime="20201115 23:00:21.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.801" endtime="20201115 23:00:21.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.300" endtime="20201115 23:00:21.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.296" endtime="20201115 23:00:21.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.295" endtime="20201115 23:00:21.840"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.866" endtime="20201115 23:00:21.885"></status>
</kw>
<msg timestamp="20201115 23:00:21.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.863" endtime="20201115 23:00:21.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.888" endtime="20201115 23:00:21.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.895" endtime="20201115 23:00:21.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.856" endtime="20201115 23:00:21.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.850" endtime="20201115 23:00:21.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.918" endtime="20201115 23:00:22.270"></status>
</kw>
<msg timestamp="20201115 23:00:22.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044334167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044409167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.915" endtime="20201115 23:00:22.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044334167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044409167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.280" endtime="20201115 23:00:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.298" endtime="20201115 23:00:22.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.908" endtime="20201115 23:00:22.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.903" endtime="20201115 23:00:22.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.316" level="INFO">${RESULT} = [{'time': 0.044409167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999999868e-05, 'source_diff': 7.499999999999868e-05}, {'time': 0.044513514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.307" endtime="20201115 23:00:22.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.346" level="INFO">${ACCURACY} = {'source_diff': [7.499999999999868e-05, 7.4763999999998e-05, 7.551399999999875e-05, 7.474999999999843e-05, 7.563900000000234e-05, 7.491700000000073e-05, 7.519500000000012e-05, 7.504199999999739e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:22.318" endtime="20201115 23:00:22.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.357" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.354" endtime="20201115 23:00:22.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.362" level="INFO">VALUE: [7.499999999999868e-05, 7.4763999999998e-05, 7.551399999999875e-05, 7.474999999999843e-05, 7.563900000000234e-05, 7.491700000000073e-05, 7.519500000000012e-05, 7.504199999999739e-05, 7.526299999999903e-05, 7.541700000000123e-05, 7.532000000000372e-05, 7.534700000000338e-05, 7.512500000000227e-05, 7.491700000000073e-05, 7.543000000000133e-05, 7.633299999999787e-05, 7.501399999999825e-05, 7.519500000000012e-05, 7.586099999999651e-05, 7.601399999999925e-05, 7.557000000000397e-05, 7.540300000000166e-05, 7.499999999999868e-05, 7.479199999999714e-05, 7.494399999999346e-05, 7.529199999999764e-05, 7.557000000000397e-05, 7.64310000000018e-05, 7.499999999999868e-05, 7.551399999999875e-05, 7.538899999999515e-05, 7.465300000000091e-05, 7.51110000000027e-05, 7.474999999999843e-05, 7.488900000000159e-05, 7.524999999999893e-05, 7.55560000000044e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.595800000000097e-05, 7.526400000000544e-05, 7.562500000000277e-05, 7.536099999999601e-05, 7.558300000000406e-05, 7.545800000000047e-05, 7.541700000000123e-05, 7.533299999999687e-05, 7.508300000000356e-05, 7.549999999999918e-05, 7.536100000000295e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.359" endtime="20201115 23:00:22.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.348" endtime="20201115 23:00:22.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.371" endtime="20201115 23:00:22.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.379" endtime="20201115 23:00:22.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.374" endtime="20201115 23:00:22.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.366" endtime="20201115 23:00:22.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.846" endtime="20201115 23:00:22.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.842" endtime="20201115 23:00:22.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.841" endtime="20201115 23:00:22.405"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.432" endtime="20201115 23:00:22.453"></status>
</kw>
<msg timestamp="20201115 23:00:22.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.429" endtime="20201115 23:00:22.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.456" endtime="20201115 23:00:22.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.462" endtime="20201115 23:00:22.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.421" endtime="20201115 23:00:22.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.416" endtime="20201115 23:00:22.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.486" endtime="20201115 23:00:22.829"></status>
</kw>
<msg timestamp="20201115 23:00:22.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045583153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.482" endtime="20201115 23:00:22.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045583153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.838" endtime="20201115 23:00:22.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.857" endtime="20201115 23:00:22.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.475" endtime="20201115 23:00:22.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.470" endtime="20201115 23:00:22.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.875" level="INFO">${RESULT} = [{'time': 0.045583153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.623600000000036e-05, 'source_diff': 7.623600000000036e-05}, {'time': 0.045690431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:22.867" endtime="20201115 23:00:22.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.905" level="INFO">${ACCURACY} = {'source_diff': [7.623600000000036e-05, 7.634799999999692e-05, 7.568000000000158e-05, 7.598600000000011e-05, 7.6069000000005e-05, 7.734699999999844e-05, 7.720799999999528e-05, 7.734699999999844e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:22.877" endtime="20201115 23:00:22.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.916" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.914" endtime="20201115 23:00:22.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.921" level="INFO">VALUE: [7.623600000000036e-05, 7.634799999999692e-05, 7.568000000000158e-05, 7.598600000000011e-05, 7.6069000000005e-05, 7.734699999999844e-05, 7.720799999999528e-05, 7.734699999999844e-05, 7.666699999999554e-05, 7.754199999999989e-05, 7.719499999999518e-05, 7.644399999999496e-05, 7.734699999999844e-05, 7.647200000000104e-05, 7.61110000000037e-05, 7.655599999999846e-05, 7.566600000000201e-05, 7.60560000000049e-05, 7.576299999999953e-05, 7.590299999999522e-05, 7.572200000000029e-05, 7.66110000000042e-05, 7.665200000000344e-05, 7.623600000000036e-05, 7.65839999999976e-05, 7.61110000000037e-05, 7.597200000000054e-05, 7.633399999999735e-05, 7.6151999999996e-05, 7.595900000000044e-05, 7.661099999999726e-05, 7.719500000000212e-05, 7.641700000000223e-05, 7.651300000000028e-05, 7.58189999999978e-05, 7.668100000000205e-05, 7.574999999999943e-05, 7.608300000000456e-05, 7.579199999999814e-05, 7.716599999999657e-05, 7.577800000000551e-05, 7.627800000000601e-05, 7.642999999999539e-05, 7.599999999999968e-05, 7.751400000000075e-05, 7.629199999999864e-05, 7.630599999999821e-05, 7.5763999999999e-05, 7.6069000000005e-05, 7.612500000000327e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.918" endtime="20201115 23:00:22.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.907" endtime="20201115 23:00:22.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.931" endtime="20201115 23:00:22.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.939" endtime="20201115 23:00:22.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.935" endtime="20201115 23:00:22.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.926" endtime="20201115 23:00:22.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.412" endtime="20201115 23:00:22.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.408" endtime="20201115 23:00:22.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.406" endtime="20201115 23:00:22.967"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.997" endtime="20201115 23:00:23.017"></status>
</kw>
<msg timestamp="20201115 23:00:23.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.993" endtime="20201115 23:00:23.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.021" endtime="20201115 23:00:23.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.027" endtime="20201115 23:00:23.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.986" endtime="20201115 23:00:23.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.980" endtime="20201115 23:00:23.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.050" endtime="20201115 23:00:23.383"></status>
</kw>
<msg timestamp="20201115 23:00:23.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049908972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.047" endtime="20201115 23:00:23.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049908972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049986361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.393" endtime="20201115 23:00:23.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.412" endtime="20201115 23:00:23.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.040" endtime="20201115 23:00:23.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.035" endtime="20201115 23:00:23.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.429" level="INFO">${RESULT} = [{'time': 0.049986361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.738899999999715e-05, 'source_diff': 7.738899999999715e-05}, {'time': 0.050096625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.420" endtime="20201115 23:00:23.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.461" level="INFO">${ACCURACY} = {'source_diff': [7.738899999999715e-05, 7.743099999999586e-05, 7.730599999999921e-05, 7.73189999999993e-05, 7.687500000000402e-05, 7.745900000000194e-05, 7.691700000000273e-05, 7.682000000000522e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:23.431" endtime="20201115 23:00:23.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.472" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.470" endtime="20201115 23:00:23.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.478" level="INFO">VALUE: [7.738899999999715e-05, 7.743099999999586e-05, 7.730599999999921e-05, 7.73189999999993e-05, 7.687500000000402e-05, 7.745900000000194e-05, 7.691700000000273e-05, 7.682000000000522e-05, 7.781999999999928e-05, 7.705499999999949e-05, 7.686099999999751e-05, 7.723600000000136e-05, 7.752700000000085e-05, 7.702799999999982e-05, 7.801400000000125e-05, 7.729199999999964e-05, 7.741700000000323e-05, 7.784800000000536e-05, 7.819400000000365e-05, 7.745900000000194e-05, 7.712500000000427e-05, 7.761099999999826e-05, 7.680599999999871e-05, 7.802800000000082e-05, 7.723600000000136e-05, 7.758300000000606e-05, 7.729199999999964e-05, 7.756999999999903e-05, 7.752800000000032e-05, 7.833299999999987e-05, 7.719500000000212e-05, 7.704099999999992e-05, 7.829100000000117e-05, 7.751300000000128e-05, 7.766699999999654e-05, 7.741700000000323e-05, 7.67770000000001e-05, 7.736200000000443e-05, 7.74719999999951e-05, 7.70969999999982e-05, 7.729199999999964e-05, 7.691600000000326e-05, 7.765299999999697e-05, 7.72640000000005e-05, 7.69440000000024e-05, 7.701400000000025e-05, 7.765300000000391e-05, 7.745800000000247e-05, 7.684699999999794e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.475" endtime="20201115 23:00:23.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.463" endtime="20201115 23:00:23.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.487" endtime="20201115 23:00:23.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.495" endtime="20201115 23:00:23.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.491" endtime="20201115 23:00:23.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.482" endtime="20201115 23:00:23.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.975" endtime="20201115 23:00:23.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.970" endtime="20201115 23:00:23.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.968" endtime="20201115 23:00:23.522"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.548" endtime="20201115 23:00:23.567"></status>
</kw>
<msg timestamp="20201115 23:00:23.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.545" endtime="20201115 23:00:23.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.570" endtime="20201115 23:00:23.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.576" endtime="20201115 23:00:23.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.538" endtime="20201115 23:00:23.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.532" endtime="20201115 23:00:23.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.599" endtime="20201115 23:00:23.929"></status>
</kw>
<msg timestamp="20201115 23:00:23.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044459639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044537639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.596" endtime="20201115 23:00:23.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044459639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044537639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.938" endtime="20201115 23:00:23.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.957" endtime="20201115 23:00:23.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.589" endtime="20201115 23:00:23.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.584" endtime="20201115 23:00:23.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.976" level="INFO">${RESULT} = [{'time': 0.044537639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.799999999999474e-05, 'source_diff': 7.799999999999474e-05}, {'time': 0.044648, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:23.967" endtime="20201115 23:00:23.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.006" level="INFO">${ACCURACY} = {'source_diff': [7.799999999999474e-05, 7.854200000000089e-05, 7.837499999999858e-05, 7.852800000000132e-05, 7.830600000000021e-05, 7.837499999999858e-05, 7.78189999999998e-05, 7.856900000000056e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:23.978" endtime="20201115 23:00:24.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.017" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.015" endtime="20201115 23:00:24.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.027" level="INFO">VALUE: [7.799999999999474e-05, 7.854200000000089e-05, 7.837499999999858e-05, 7.852800000000132e-05, 7.830600000000021e-05, 7.837499999999858e-05, 7.78189999999998e-05, 7.856900000000056e-05, 7.84310000000038e-05, 7.801399999999431e-05, 7.919399999999771e-05, 7.823600000000236e-05, 7.834799999999892e-05, 7.851400000000175e-05, 7.829100000000117e-05, 7.791600000000426e-05, 7.862499999999883e-05, 7.830600000000021e-05, 7.840299999999772e-05, 7.919499999999718e-05, 7.825000000000193e-05, 7.791700000000373e-05, 7.790199999999775e-05, 7.793099999999636e-05, 7.772199999999535e-05, 7.937500000000652e-05, 7.802800000000082e-05, 7.916599999999857e-05, 7.847200000000304e-05, 7.779100000000067e-05, 7.790200000000469e-05, 7.849999999999524e-05, 7.809799999999867e-05, 7.855600000000046e-05, 7.787499999999808e-05, 7.937499999999958e-05, 7.819500000000312e-05, 7.809700000000613e-05, 7.837499999999858e-05, 7.80969999999992e-05, 7.862499999999883e-05, 7.772299999999482e-05, 7.849999999999524e-05, 7.775000000000143e-05, 7.85969999999997e-05, 7.775000000000143e-05, 7.780599999999971e-05, 7.857000000000003e-05, 7.858300000000012e-05, 7.784699999999894e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.019" endtime="20201115 23:00:24.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.008" endtime="20201115 23:00:24.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.036" endtime="20201115 23:00:24.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.044" endtime="20201115 23:00:24.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.040" endtime="20201115 23:00:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.031" endtime="20201115 23:00:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.528" endtime="20201115 23:00:24.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.524" endtime="20201115 23:00:24.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.522" endtime="20201115 23:00:24.071"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.097" endtime="20201115 23:00:24.116"></status>
</kw>
<msg timestamp="20201115 23:00:24.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.094" endtime="20201115 23:00:24.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.119" endtime="20201115 23:00:24.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.126" endtime="20201115 23:00:24.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.087" endtime="20201115 23:00:24.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.081" endtime="20201115 23:00:24.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.149" endtime="20201115 23:00:24.481"></status>
</kw>
<msg timestamp="20201115 23:00:24.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044550222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044629736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.145" endtime="20201115 23:00:24.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044550222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044629736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.490" endtime="20201115 23:00:24.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.509" endtime="20201115 23:00:24.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.138" endtime="20201115 23:00:24.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.134" endtime="20201115 23:00:24.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.526" level="INFO">${RESULT} = [{'time': 0.044629736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.951400000000275e-05, 'source_diff': 7.951400000000275e-05}, {'time': 0.044742028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.517" endtime="20201115 23:00:24.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.557" level="INFO">${ACCURACY} = {'source_diff': [7.951400000000275e-05, 7.880600000000071e-05, 7.911099999999976e-05, 7.891599999999832e-05, 7.969400000000515e-05, 7.887499999999908e-05, 7.944399999999796e-05, 7.883300000000037e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:24.529" endtime="20201115 23:00:24.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.568" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.566" endtime="20201115 23:00:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.573" level="INFO">VALUE: [7.951400000000275e-05, 7.880600000000071e-05, 7.911099999999976e-05, 7.891599999999832e-05, 7.969400000000515e-05, 7.887499999999908e-05, 7.944399999999796e-05, 7.883300000000037e-05, 7.874999999999549e-05, 7.908300000000063e-05, 7.929200000000164e-05, 7.963900000000634e-05, 7.940299999999872e-05, 7.915299999999847e-05, 7.932000000000078e-05, 7.879200000000114e-05, 7.948599999999667e-05, 7.890300000000516e-05, 7.925000000000293e-05, 7.905600000000096e-05, 7.91389999999989e-05, 7.900000000000268e-05, 7.87369999999954e-05, 7.954200000000189e-05, 7.875000000000243e-05, 7.938899999999915e-05, 7.883399999999985e-05, 7.986100000000051e-05, 7.887499999999908e-05, 7.87770000000021e-05, 7.884699999999994e-05, 7.986100000000051e-05, 7.930500000000174e-05, 7.938899999999915e-05, 8.002800000000282e-05, 7.948599999999667e-05, 8.036100000000101e-05, 7.955499999999505e-05, 7.869500000000362e-05, 7.923599999999642e-05, 7.873599999999592e-05, 7.962499999999983e-05, 8.000000000000368e-05, 7.945900000000394e-05, 7.93190000000013e-05, 7.873600000000286e-05, 7.968099999999811e-05, 8.018099999999861e-05, 7.929200000000164e-05, 7.969499999999768e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.570" endtime="20201115 23:00:24.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.559" endtime="20201115 23:00:24.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.582" endtime="20201115 23:00:24.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.590" endtime="20201115 23:00:24.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.586" endtime="20201115 23:00:24.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.577" endtime="20201115 23:00:24.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.077" endtime="20201115 23:00:24.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.073" endtime="20201115 23:00:24.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.072" endtime="20201115 23:00:24.617"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.643" endtime="20201115 23:00:24.662"></status>
</kw>
<msg timestamp="20201115 23:00:24.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.640" endtime="20201115 23:00:24.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.665" endtime="20201115 23:00:24.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.671" endtime="20201115 23:00:24.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.633" endtime="20201115 23:00:24.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.627" endtime="20201115 23:00:24.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.695" endtime="20201115 23:00:25.025"></status>
</kw>
<msg timestamp="20201115 23:00:25.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044531333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044611556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.691" endtime="20201115 23:00:25.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044531333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044611556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.034" endtime="20201115 23:00:25.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.053" endtime="20201115 23:00:25.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.684" endtime="20201115 23:00:25.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.679" endtime="20201115 23:00:25.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.072" level="INFO">${RESULT} = [{'time': 0.044611556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.022299999999732e-05, 'source_diff': 8.022299999999732e-05}, {'time': 0.044725861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.063" endtime="20201115 23:00:25.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.102" level="INFO">${ACCURACY} = {'source_diff': [8.022299999999732e-05, 8.062500000000083e-05, 7.983399999999391e-05, 8.05970000000017e-05, 8.011200000000024e-05, 8.040200000000025e-05, 7.972200000000429e-05, 7.980500000000224e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:25.074" endtime="20201115 23:00:25.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.113" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.111" endtime="20201115 23:00:25.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.118" level="INFO">VALUE: [8.022299999999732e-05, 8.062500000000083e-05, 7.983399999999391e-05, 8.05970000000017e-05, 8.011200000000024e-05, 8.040200000000025e-05, 7.972200000000429e-05, 7.980500000000224e-05, 8.037500000000058e-05, 8.016599999999957e-05, 8.024999999999699e-05, 7.99169999999988e-05, 8.036100000000101e-05, 7.970800000000472e-05, 8.151399999999781e-05, 8.136100000000202e-05, 7.99589999999975e-05, 8.137500000000158e-05, 8.149999999999824e-05, 8.019399999999871e-05, 8.118099999999961e-05, 7.998599999999717e-05, 8.026299999999709e-05, 8.001399999999631e-05, 7.998600000000411e-05, 8.019499999999818e-05, 8.015299999999947e-05, 8.019499999999818e-05, 8.001400000000325e-05, 8.012500000000033e-05, 7.969499999999768e-05, 7.998599999999717e-05, 8.045799999999853e-05, 8.012500000000033e-05, 8.012500000000033e-05, 8.033300000000188e-05, 8.023599999999742e-05, 8.084799999999448e-05, 8.009699999999426e-05, 8.036100000000101e-05, 8.054199999999595e-05, 7.977800000000257e-05, 8.022200000000479e-05, 8.040299999999972e-05, 8.04169999999993e-05, 8.041700000000623e-05, 8.055500000000299e-05, 8.034700000000145e-05, 7.983300000000138e-05, 7.9764000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.115" endtime="20201115 23:00:25.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.104" endtime="20201115 23:00:25.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.127" endtime="20201115 23:00:25.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.135" endtime="20201115 23:00:25.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.131" endtime="20201115 23:00:25.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.122" endtime="20201115 23:00:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.623" endtime="20201115 23:00:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.619" endtime="20201115 23:00:25.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.617" endtime="20201115 23:00:25.161"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.188" endtime="20201115 23:00:25.207"></status>
</kw>
<msg timestamp="20201115 23:00:25.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.185" endtime="20201115 23:00:25.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.210" endtime="20201115 23:00:25.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.216" endtime="20201115 23:00:25.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.178" endtime="20201115 23:00:25.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.172" endtime="20201115 23:00:25.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.240" endtime="20201115 23:00:25.573"></status>
</kw>
<msg timestamp="20201115 23:00:25.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044685736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044766625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.236" endtime="20201115 23:00:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044685736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044766625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.582" endtime="20201115 23:00:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.601" endtime="20201115 23:00:25.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.229" endtime="20201115 23:00:25.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.224" endtime="20201115 23:00:25.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.618" level="INFO">${RESULT} = [{'time': 0.044766625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.088900000000065e-05, 'source_diff': 8.088900000000065e-05}, {'time': 0.044882931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.609" endtime="20201115 23:00:25.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.651" level="INFO">${ACCURACY} = {'source_diff': [8.088900000000065e-05, 8.234800000000292e-05, 8.169400000000021e-05, 8.075000000000443e-05, 8.11390000000009e-05, 8.10970000000022e-05, 8.086100000000151e-05, 8.086100000000151e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:00:25.620" endtime="20201115 23:00:25.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.661" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.659" endtime="20201115 23:00:25.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.667" level="INFO">VALUE: [8.088900000000065e-05, 8.234800000000292e-05, 8.169400000000021e-05, 8.075000000000443e-05, 8.11390000000009e-05, 8.10970000000022e-05, 8.086100000000151e-05, 8.086100000000151e-05, 8.104099999999698e-05, 8.101300000000478e-05, 8.143099999999986e-05, 8.137500000000158e-05, 8.122199999999885e-05, 8.108399999999516e-05, 8.155599999999652e-05, 8.16390000000014e-05, 8.107000000000253e-05, 8.138900000000115e-05, 8.098599999999817e-05, 8.108399999999516e-05, 8.123599999999842e-05, 8.082000000000228e-05, 8.11390000000009e-05, 8.162500000000183e-05, 8.154100000000442e-05, 8.1152000000001e-05, 8.115300000000047e-05, 8.249999999999924e-05, 8.15970000000027e-05, 8.14719999999991e-05, 8.148599999999867e-05, 8.06520000000005e-05, 8.145799999999953e-05, 8.169499999999968e-05, 8.127699999999766e-05, 8.151399999999781e-05, 8.119499999999918e-05, 8.119399999999971e-05, 8.087500000000108e-05, 8.155499999999705e-05, 8.090300000000022e-05, 8.113799999999449e-05, 8.148600000000561e-05, 8.168100000000011e-05, 8.111100000000177e-05, 8.12640000000045e-05, 8.155499999999705e-05, 8.122199999999885e-05, 8.11249999999944e-05, 8.092999999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.664" endtime="20201115 23:00:25.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.652" endtime="20201115 23:00:25.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.676" endtime="20201115 23:00:25.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.684" endtime="20201115 23:00:25.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.679" endtime="20201115 23:00:25.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.671" endtime="20201115 23:00:25.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.168" endtime="20201115 23:00:25.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.164" endtime="20201115 23:00:25.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.162" endtime="20201115 23:00:25.710"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.715" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.736" endtime="20201115 23:00:25.755"></status>
</kw>
<msg timestamp="20201115 23:00:25.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.733" endtime="20201115 23:00:25.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.758" endtime="20201115 23:00:25.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.765" endtime="20201115 23:00:25.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.726" endtime="20201115 23:00:25.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.720" endtime="20201115 23:00:25.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.788" endtime="20201115 23:00:26.121"></status>
</kw>
<msg timestamp="20201115 23:00:26.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044333681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.785" endtime="20201115 23:00:26.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044333681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.131" endtime="20201115 23:00:26.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.149" endtime="20201115 23:00:26.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.778" endtime="20201115 23:00:26.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.773" endtime="20201115 23:00:26.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.168" level="INFO">${RESULT} = [{'time': 0.044333681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.224999999999899e-05, 'source_diff': 8.224999999999899e-05}, {'time': 0.044444986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.159" endtime="20201115 23:00:26.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.198" level="INFO">${ACCURACY} = {'source_diff': [8.224999999999899e-05, 8.2846999999997e-05, 8.22919999999977e-05, 8.257000000000403e-05, 8.227699999999866e-05, 8.208299999999669e-05, 8.266700000000154e-05, 8.2459e-05, 8.17779999999...</msg>
<status status="PASS" starttime="20201115 23:00:26.170" endtime="20201115 23:00:26.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.209" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.207" endtime="20201115 23:00:26.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.214" level="INFO">VALUE: [8.224999999999899e-05, 8.2846999999997e-05, 8.22919999999977e-05, 8.257000000000403e-05, 8.227699999999866e-05, 8.208299999999669e-05, 8.266700000000154e-05, 8.2459e-05, 8.177799999999763e-05, 8.174999999999849e-05, 8.165300000000097e-05, 8.209799999999573e-05, 8.351399999999981e-05, 8.21249999999954e-05, 8.191599999999438e-05, 8.16390000000014e-05, 8.216700000000104e-05, 8.26119999999958e-05, 8.170799999999978e-05, 8.181999999999634e-05, 8.24170000000013e-05, 8.199999999999874e-05, 8.266599999999513e-05, 8.211099999999583e-05, 8.197300000000601e-05, 8.198600000000611e-05, 8.215300000000147e-05, 8.169400000000021e-05, 8.240300000000172e-05, 8.202799999999788e-05, 8.233299999999694e-05, 8.306999999999759e-05, 8.170899999999925e-05, 8.208299999999669e-05, 8.243100000000086e-05, 8.237499999999565e-05, 8.283399999999691e-05, 8.352699999999991e-05, 8.227800000000507e-05, 8.269499999999375e-05, 8.195800000000003e-05, 8.265299999999504e-05, 8.190299999999429e-05, 8.256900000000456e-05, 8.191699999999386e-05, 8.21249999999954e-05, 8.319399999999477e-05, 8.240300000000172e-05, 8.268000000000164e-05, 8.316700000000204e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.211" endtime="20201115 23:00:26.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.200" endtime="20201115 23:00:26.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.223" endtime="20201115 23:00:26.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.231" endtime="20201115 23:00:26.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.227" endtime="20201115 23:00:26.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.218" endtime="20201115 23:00:26.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.716" endtime="20201115 23:00:26.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.713" endtime="20201115 23:00:26.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.711" endtime="20201115 23:00:26.257"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.285" endtime="20201115 23:00:26.304"></status>
</kw>
<msg timestamp="20201115 23:00:26.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.281" endtime="20201115 23:00:26.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.307" endtime="20201115 23:00:26.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.313" endtime="20201115 23:00:26.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.273" endtime="20201115 23:00:26.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.268" endtime="20201115 23:00:26.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.336" endtime="20201115 23:00:26.669"></status>
</kw>
<msg timestamp="20201115 23:00:26.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045245806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045329292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.333" endtime="20201115 23:00:26.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045245806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045329292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.679" endtime="20201115 23:00:26.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.697" endtime="20201115 23:00:26.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.326" endtime="20201115 23:00:26.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.321" endtime="20201115 23:00:26.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.714" level="INFO">${RESULT} = [{'time': 0.045329292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.348600000000067e-05, 'source_diff': 8.348600000000067e-05}, {'time': 0.045445611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.706" endtime="20201115 23:00:26.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.745" level="INFO">${ACCURACY} = {'source_diff': [8.348600000000067e-05, 8.455500000000005e-05, 8.326399999999956e-05, 8.273599999999992e-05, 8.3459000000001e-05, 8.334700000000445e-05, 8.355599999999852e-05, 8.298600000000017e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:00:26.716" endtime="20201115 23:00:26.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.755" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.753" endtime="20201115 23:00:26.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.761" level="INFO">VALUE: [8.348600000000067e-05, 8.455500000000005e-05, 8.326399999999956e-05, 8.273599999999992e-05, 8.3459000000001e-05, 8.334700000000445e-05, 8.355599999999852e-05, 8.298600000000017e-05, 8.36520000000035e-05, 8.338799999999674e-05, 8.311099999999683e-05, 8.301399999999931e-05, 8.365300000000297e-05, 8.313899999999597e-05, 8.276299999999959e-05, 8.286099999999658e-05, 8.338899999999622e-05, 8.33190000000053e-05, 8.369399999999527e-05, 8.279200000000514e-05, 8.324999999999999e-05, 8.398700000000064e-05, 8.355499999999905e-05, 8.299999999999974e-05, 8.338899999999622e-05, 8.31390000000029e-05, 8.433299999999894e-05, 8.298600000000017e-05, 8.345800000000153e-05, 8.33049999999988e-05, 8.362500000000384e-05, 8.315199999999606e-05, 8.287500000000309e-05, 8.348600000000067e-05, 8.345800000000153e-05, 8.33049999999988e-05, 8.318099999999468e-05, 8.308399999999716e-05, 8.361100000000427e-05, 8.330599999999827e-05, 8.3846999999998e-05, 8.280600000000471e-05, 8.313899999999597e-05, 8.337499999999665e-05, 8.316600000000257e-05, 8.331999999999784e-05, 8.3846999999998e-05, 8.313899999999597e-05, 8.273599999999992e-05, 8.27919999999982e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.758" endtime="20201115 23:00:26.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.746" endtime="20201115 23:00:26.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.769" endtime="20201115 23:00:26.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.777" endtime="20201115 23:00:26.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.773" endtime="20201115 23:00:26.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.765" endtime="20201115 23:00:26.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.264" endtime="20201115 23:00:26.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.260" endtime="20201115 23:00:26.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.258" endtime="20201115 23:00:26.805"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.831" endtime="20201115 23:00:26.850"></status>
</kw>
<msg timestamp="20201115 23:00:26.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.828" endtime="20201115 23:00:26.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.853" endtime="20201115 23:00:26.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.860" endtime="20201115 23:00:26.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.820" endtime="20201115 23:00:26.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.815" endtime="20201115 23:00:26.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.882" endtime="20201115 23:00:27.214"></status>
</kw>
<msg timestamp="20201115 23:00:27.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045111181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.879" endtime="20201115 23:00:27.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045111181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.223" endtime="20201115 23:00:27.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.242" endtime="20201115 23:00:27.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.872" endtime="20201115 23:00:27.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.867" endtime="20201115 23:00:27.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.260" level="INFO">${RESULT} = [{'time': 0.045195736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.455500000000005e-05, 'source_diff': 8.455500000000005e-05}, {'time': 0.045312028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.252" endtime="20201115 23:00:27.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.290" level="INFO">${ACCURACY} = {'source_diff': [8.455500000000005e-05, 8.39999999999938e-05, 8.516700000000405e-05, 8.416700000000304e-05, 8.3846999999998e-05, 8.548700000000214e-05, 8.42919999999997e-05, 8.423600000000142e-05, 8.4...</msg>
<status status="PASS" starttime="20201115 23:00:27.263" endtime="20201115 23:00:27.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.301" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.299" endtime="20201115 23:00:27.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.307" level="INFO">VALUE: [8.455500000000005e-05, 8.39999999999938e-05, 8.516700000000405e-05, 8.416700000000304e-05, 8.3846999999998e-05, 8.548700000000214e-05, 8.42919999999997e-05, 8.423600000000142e-05, 8.444400000000296e-05, 8.443099999999593e-05, 8.379099999999973e-05, 8.391600000000332e-05, 8.380600000000571e-05, 8.38049999999993e-05, 8.483299999999944e-05, 8.413799999999749e-05, 8.376400000000006e-05, 8.406999999999859e-05, 8.370800000000178e-05, 8.43469999999985e-05, 8.54999999999953e-05, 8.451400000000081e-05, 8.415300000000348e-05, 8.386099999999758e-05, 8.390299999999629e-05, 8.469399999999627e-05, 8.4846999999999e-05, 8.370800000000178e-05, 8.372200000000135e-05, 8.430599999999927e-05, 8.440300000000373e-05, 8.461100000000527e-05, 8.373600000000092e-05, 8.461099999999833e-05, 8.465199999999756e-05, 8.411099999999783e-05, 8.390300000000323e-05, 8.375000000000049e-05, 8.454100000000048e-05, 8.54999999999953e-05, 8.487499999999815e-05, 8.380599999999877e-05, 8.438899999999722e-05, 8.39720000000016e-05, 8.465299999999704e-05, 8.411099999999783e-05, 8.404199999999945e-05, 8.41390000000039e-05, 8.469400000000321e-05, 8.437500000000459e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.304" endtime="20201115 23:00:27.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.292" endtime="20201115 23:00:27.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.316" endtime="20201115 23:00:27.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.324" endtime="20201115 23:00:27.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.320" endtime="20201115 23:00:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.311" endtime="20201115 23:00:27.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.811" endtime="20201115 23:00:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.807" endtime="20201115 23:00:27.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.805" endtime="20201115 23:00:27.351"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.377" endtime="20201115 23:00:27.396"></status>
</kw>
<msg timestamp="20201115 23:00:27.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.374" endtime="20201115 23:00:27.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.400" endtime="20201115 23:00:27.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.406" endtime="20201115 23:00:27.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.367" endtime="20201115 23:00:27.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.361" endtime="20201115 23:00:27.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.431" endtime="20201115 23:00:27.763"></status>
</kw>
<msg timestamp="20201115 23:00:27.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044547486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044632986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.427" endtime="20201115 23:00:27.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044547486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044632986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.773" endtime="20201115 23:00:27.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.791" endtime="20201115 23:00:27.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.420" endtime="20201115 23:00:27.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.415" endtime="20201115 23:00:27.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.808" level="INFO">${RESULT} = [{'time': 0.044632986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.550000000000224e-05, 'source_diff': 8.550000000000224e-05}, {'time': 0.044750319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.799" endtime="20201115 23:00:27.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.841" level="INFO">${ACCURACY} = {'source_diff': [8.550000000000224e-05, 8.604099999999504e-05, 8.619400000000471e-05, 8.488899999999772e-05, 8.520800000000328e-05, 8.618099999999768e-05, 8.53469999999995e-05, 8.532000000000678e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:27.810" endtime="20201115 23:00:27.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.852" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.849" endtime="20201115 23:00:27.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.858" level="INFO">VALUE: [8.550000000000224e-05, 8.604099999999504e-05, 8.619400000000471e-05, 8.488899999999772e-05, 8.520800000000328e-05, 8.618099999999768e-05, 8.53469999999995e-05, 8.532000000000678e-05, 8.537499999999865e-05, 8.526399999999462e-05, 8.505500000000055e-05, 8.638899999999922e-05, 8.556900000000062e-05, 8.509699999999926e-05, 8.559699999999976e-05, 8.490299999999729e-05, 8.636100000000008e-05, 8.558300000000019e-05, 8.50970000000062e-05, 8.569399999999727e-05, 8.522200000000285e-05, 8.558300000000019e-05, 8.538900000000516e-05, 8.488899999999772e-05, 8.469400000000321e-05, 8.476399999999412e-05, 8.63470000000005e-05, 8.498600000000217e-05, 8.569400000000421e-05, 8.52920000000007e-05, 8.545799999999659e-05, 8.486199999999805e-05, 8.480599999999977e-05, 8.654100000000248e-05, 8.504100000000098e-05, 8.544400000000396e-05, 8.533299999999994e-05, 8.505600000000002e-05, 8.494400000000346e-05, 8.559699999999976e-05, 8.493099999999643e-05, 8.526400000000156e-05, 8.472200000000235e-05, 8.541600000000482e-05, 8.502800000000088e-05, 8.551400000000181e-05, 8.559799999999923e-05, 8.474999999999455e-05, 8.583399999999991e-05, 8.550000000000224e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.854" endtime="20201115 23:00:27.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.843" endtime="20201115 23:00:27.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.866" endtime="20201115 23:00:27.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.875" endtime="20201115 23:00:27.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.870" endtime="20201115 23:00:27.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.862" endtime="20201115 23:00:27.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.357" endtime="20201115 23:00:27.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.353" endtime="20201115 23:00:27.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.351" endtime="20201115 23:00:27.901"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.906" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.927" endtime="20201115 23:00:27.946"></status>
</kw>
<msg timestamp="20201115 23:00:27.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.924" endtime="20201115 23:00:27.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.950" endtime="20201115 23:00:27.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.956" endtime="20201115 23:00:27.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.917" endtime="20201115 23:00:27.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.911" endtime="20201115 23:00:27.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.979" endtime="20201115 23:00:28.309"></status>
</kw>
<msg timestamp="20201115 23:00:28.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044417917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.976" endtime="20201115 23:00:28.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044417917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.318" endtime="20201115 23:00:28.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.337" endtime="20201115 23:00:28.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.969" endtime="20201115 23:00:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.964" endtime="20201115 23:00:28.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.356" level="INFO">${RESULT} = [{'time': 0.044417917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.588899999999872e-05, 'source_diff': 8.588899999999872e-05}, {'time': 0.044538222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.347" endtime="20201115 23:00:28.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.386" level="INFO">${ACCURACY} = {'source_diff': [8.588899999999872e-05, 8.63050000000018e-05, 8.588899999999872e-05, 8.61249999999994e-05, 8.654100000000248e-05, 8.601400000000231e-05, 8.623600000000342e-05, 8.611099999999983e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:00:28.358" endtime="20201115 23:00:28.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.397" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.395" endtime="20201115 23:00:28.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.402" level="INFO">VALUE: [8.588899999999872e-05, 8.63050000000018e-05, 8.588899999999872e-05, 8.61249999999994e-05, 8.654100000000248e-05, 8.601400000000231e-05, 8.623600000000342e-05, 8.611099999999983e-05, 8.636100000000008e-05, 8.630600000000127e-05, 8.627800000000213e-05, 8.573599999999598e-05, 8.572200000000335e-05, 8.597300000000307e-05, 8.595800000000403e-05, 8.59869999999957e-05, 8.583300000000044e-05, 8.669399999999827e-05, 8.669499999999775e-05, 8.615299999999854e-05, 8.625000000000299e-05, 8.666700000000555e-05, 8.591599999999838e-05, 8.601400000000231e-05, 8.658300000000119e-05, 8.61799999999982e-05, 8.641599999999888e-05, 8.570800000000378e-05, 8.600000000000274e-05, 8.658300000000119e-05, 8.626400000000256e-05, 8.608400000000016e-05, 8.581900000000087e-05, 8.576300000000259e-05, 8.572200000000335e-05, 8.64869999999962e-05, 8.625000000000299e-05, 8.576399999999512e-05, 8.66669999999986e-05, 8.644399999999802e-05, 8.658400000000066e-05, 8.605599999999408e-05, 8.701400000000331e-05, 8.572199999999641e-05, 8.656900000000162e-05, 8.608300000000069e-05, 8.643000000000539e-05, 8.579099999999479e-05, 8.758300000000219e-05, 8.666700000000555e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.399" endtime="20201115 23:00:28.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.388" endtime="20201115 23:00:28.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.411" endtime="20201115 23:00:28.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.419" endtime="20201115 23:00:28.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.415" endtime="20201115 23:00:28.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.407" endtime="20201115 23:00:28.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.907" endtime="20201115 23:00:28.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.904" endtime="20201115 23:00:28.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.902" endtime="20201115 23:00:28.446"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.474" endtime="20201115 23:00:28.493"></status>
</kw>
<msg timestamp="20201115 23:00:28.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.470" endtime="20201115 23:00:28.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.496" endtime="20201115 23:00:28.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.502" endtime="20201115 23:00:28.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.463" endtime="20201115 23:00:28.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.457" endtime="20201115 23:00:28.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.526" endtime="20201115 23:00:28.857"></status>
</kw>
<msg timestamp="20201115 23:00:28.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046347361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046434542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.522" endtime="20201115 23:00:28.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046347361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046434542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.866" endtime="20201115 23:00:28.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.885" endtime="20201115 23:00:28.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.515" endtime="20201115 23:00:28.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.510" endtime="20201115 23:00:28.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.902" level="INFO">${RESULT} = [{'time': 0.046434542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.718100000000562e-05, 'source_diff': 8.718100000000562e-05}, {'time': 0.046553833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.893" endtime="20201115 23:00:28.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.933" level="INFO">${ACCURACY} = {'source_diff': [8.718100000000562e-05, 8.675000000000349e-05, 8.722299999999739e-05, 8.801399999999737e-05, 8.666599999999913e-05, 8.6847000000001e-05, 8.72920000000027e-05, 8.763900000000047e-05, 8....</msg>
<status status="PASS" starttime="20201115 23:00:28.904" endtime="20201115 23:00:28.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.943" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.941" endtime="20201115 23:00:28.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.949" level="INFO">VALUE: [8.718100000000562e-05, 8.675000000000349e-05, 8.722299999999739e-05, 8.801399999999737e-05, 8.666599999999913e-05, 8.6847000000001e-05, 8.72920000000027e-05, 8.763900000000047e-05, 8.707000000000159e-05, 8.683300000000144e-05, 8.723600000000442e-05, 8.763900000000047e-05, 8.679099999999579e-05, 8.719399999999877e-05, 8.726399999999662e-05, 8.808400000000216e-05, 8.770799999999884e-05, 8.677800000000263e-05, 8.697199999999766e-05, 8.713899999999997e-05, 8.81250000000014e-05, 8.742999999999945e-05, 8.784800000000148e-05, 8.702700000000341e-05, 8.82920000000037e-05, 8.677799999999569e-05, 8.754199999999601e-05, 8.804200000000345e-05, 8.801400000000431e-05, 8.743099999999893e-05, 8.722300000000432e-05, 8.763900000000047e-05, 8.801400000000431e-05, 8.73470000000015e-05, 8.74449999999985e-05, 8.695799999999809e-05, 8.673600000000392e-05, 8.745899999999807e-05, 8.763900000000047e-05, 8.6847000000001e-05, 8.700000000000374e-05, 8.756900000000262e-05, 8.762499999999396e-05, 8.679100000000273e-05, 8.745899999999807e-05, 8.734699999999457e-05, 8.697299999999714e-05, 8.761100000000133e-05, 8.734800000000098e-05, 8.733300000000194e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.946" endtime="20201115 23:00:28.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.935" endtime="20201115 23:00:28.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.958" endtime="20201115 23:00:28.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.966" endtime="20201115 23:00:28.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.961" endtime="20201115 23:00:28.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.953" endtime="20201115 23:00:28.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.453" endtime="20201115 23:00:28.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.449" endtime="20201115 23:00:28.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.447" endtime="20201115 23:00:28.992"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.019" endtime="20201115 23:00:29.038"></status>
</kw>
<msg timestamp="20201115 23:00:29.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.016" endtime="20201115 23:00:29.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.041" endtime="20201115 23:00:29.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.048" endtime="20201115 23:00:29.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.009" endtime="20201115 23:00:29.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.003" endtime="20201115 23:00:29.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.076" endtime="20201115 23:00:29.407"></status>
</kw>
<msg timestamp="20201115 23:00:29.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044871375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04495925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:29.067" endtime="20201115 23:00:29.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044871375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04495925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:29.416" endtime="20201115 23:00:29.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.435" endtime="20201115 23:00:29.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.060" endtime="20201115 23:00:29.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.056" endtime="20201115 23:00:29.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.454" level="INFO">${RESULT} = [{'time': 0.04495925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.787500000000115e-05, 'source_diff': 8.787500000000115e-05}, {'time': 0.045077569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:29.445" endtime="20201115 23:00:29.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.484" level="INFO">${ACCURACY} = {'source_diff': [8.787500000000115e-05, 8.862499999999496e-05, 8.847199999999916e-05, 8.86250000000019e-05, 8.81670000000001e-05, 8.823599999999848e-05, 8.77920000000032e-05, 8.937500000000265e-05, 8....</msg>
<status status="PASS" starttime="20201115 23:00:29.456" endtime="20201115 23:00:29.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.496" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.493" endtime="20201115 23:00:29.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.501" level="INFO">VALUE: [8.787500000000115e-05, 8.862499999999496e-05, 8.847199999999916e-05, 8.86250000000019e-05, 8.81670000000001e-05, 8.823599999999848e-05, 8.77920000000032e-05, 8.937500000000265e-05, 8.845799999999959e-05, 8.820799999999934e-05, 8.777800000000363e-05, 8.852699999999797e-05, 8.787500000000115e-05, 8.827699999999772e-05, 8.86670000000006e-05, 8.795899999999857e-05, 8.837500000000165e-05, 8.829099999999729e-05, 8.868100000000018e-05, 8.851400000000481e-05, 8.861100000000233e-05, 8.780599999999583e-05, 8.792999999999995e-05, 8.829199999999676e-05, 8.794399999999952e-05, 8.902799999999794e-05, 8.863900000000147e-05, 8.806999999999565e-05, 8.837500000000165e-05, 8.797300000000507e-05, 8.841700000000036e-05, 8.77920000000032e-05, 8.823600000000542e-05, 8.829099999999729e-05, 8.859700000000276e-05, 8.845799999999959e-05, 8.797199999999866e-05, 8.811099999999489e-05, 8.857000000000309e-05, 8.847199999999916e-05, 8.823599999999848e-05, 8.84449999999995e-05, 8.770899999999832e-05, 8.819499999999925e-05, 8.940300000000179e-05, 8.774999999999755e-05, 8.777799999999669e-05, 8.815200000000106e-05, 8.79999999999978e-05, 8.831900000000337e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.498" endtime="20201115 23:00:29.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.486" endtime="20201115 23:00:29.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.510" endtime="20201115 23:00:29.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.518" endtime="20201115 23:00:29.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.514" endtime="20201115 23:00:29.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.506" endtime="20201115 23:00:29.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.999" endtime="20201115 23:00:29.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.995" endtime="20201115 23:00:29.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.993" endtime="20201115 23:00:29.545"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.571" endtime="20201115 23:00:29.592"></status>
</kw>
<msg timestamp="20201115 23:00:29.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.568" endtime="20201115 23:00:29.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.596" endtime="20201115 23:00:29.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.602" endtime="20201115 23:00:29.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.561" endtime="20201115 23:00:29.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.555" endtime="20201115 23:00:29.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.626" endtime="20201115 23:00:29.970"></status>
</kw>
<msg timestamp="20201115 23:00:29.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044495319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044584972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.622" endtime="20201115 23:00:29.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044495319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044584972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.979" endtime="20201115 23:00:29.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.998" endtime="20201115 23:00:30.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.615" endtime="20201115 23:00:30.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.611" endtime="20201115 23:00:30.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.015" level="INFO">${RESULT} = [{'time': 0.044584972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.965300000000204e-05, 'source_diff': 8.965300000000204e-05}, {'time': 0.044703278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.006" endtime="20201115 23:00:30.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.048" level="INFO">${ACCURACY} = {'source_diff': [8.965300000000204e-05, 8.933399999999647e-05, 8.963900000000247e-05, 8.923599999999948e-05, 8.926399999999862e-05, 8.954199999999801e-05, 8.909699999999632e-05, 8.956900000000462e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:30.017" endtime="20201115 23:00:30.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.059" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.057" endtime="20201115 23:00:30.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.064" level="INFO">VALUE: [8.965300000000204e-05, 8.933399999999647e-05, 8.963900000000247e-05, 8.923599999999948e-05, 8.926399999999862e-05, 8.954199999999801e-05, 8.909699999999632e-05, 8.956900000000462e-05, 8.877799999999769e-05, 8.905599999999708e-05, 8.970900000000032e-05, 8.879199999999726e-05, 8.947200000000016e-05, 8.913900000000197e-05, 8.904099999999804e-05, 8.933300000000394e-05, 8.952699999999897e-05, 8.959699999999682e-05, 8.904099999999804e-05, 8.96529999999951e-05, 8.904200000000445e-05, 8.944499999999356e-05, 8.940299999999485e-05, 8.92920000000047e-05, 8.94999999999993e-05, 8.926399999999862e-05, 8.915300000000154e-05, 8.945900000000007e-05, 8.952799999999844e-05, 8.968100000000118e-05, 9.017999999999526e-05, 8.950000000000624e-05, 9.052699999999997e-05, 8.902799999999794e-05, 8.970800000000084e-05, 8.88329999999965e-05, 8.927799999999819e-05, 8.926399999999862e-05, 8.891700000000086e-05, 8.883400000000291e-05, 8.965300000000204e-05, 8.965300000000204e-05, 9.051399999999987e-05, 8.933399999999647e-05, 8.923599999999948e-05, 8.883300000000344e-05, 8.88199999999964e-05, 8.96250000000029e-05, 8.86670000000006e-05, 8.913900000000197e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.061" endtime="20201115 23:00:30.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.050" endtime="20201115 23:00:30.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.073" endtime="20201115 23:00:30.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.081" endtime="20201115 23:00:30.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.077" endtime="20201115 23:00:30.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.068" endtime="20201115 23:00:30.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.551" endtime="20201115 23:00:30.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.547" endtime="20201115 23:00:30.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.545" endtime="20201115 23:00:30.107"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.134" endtime="20201115 23:00:30.156"></status>
</kw>
<msg timestamp="20201115 23:00:30.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.131" endtime="20201115 23:00:30.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.159" endtime="20201115 23:00:30.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.165" endtime="20201115 23:00:30.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.123" endtime="20201115 23:00:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.118" endtime="20201115 23:00:30.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.188" endtime="20201115 23:00:30.532"></status>
</kw>
<msg timestamp="20201115 23:00:30.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045269236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045359042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.185" endtime="20201115 23:00:30.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045269236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045359042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.542" endtime="20201115 23:00:30.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.560" endtime="20201115 23:00:30.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.178" endtime="20201115 23:00:30.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.173" endtime="20201115 23:00:30.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.579" level="INFO">${RESULT} = [{'time': 0.045359042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.980600000000477e-05, 'source_diff': 8.980600000000477e-05}, {'time': 0.045477306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.570" endtime="20201115 23:00:30.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.609" level="INFO">${ACCURACY} = {'source_diff': [8.980600000000477e-05, 9.007000000000459e-05, 8.988899999999578e-05, 9.043000000000245e-05, 8.973599999999998e-05, 9.026399999999962e-05, 8.998600000000023e-05, 9.009699999999732e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:30.581" endtime="20201115 23:00:30.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.620" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.618" endtime="20201115 23:00:30.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.625" level="INFO">VALUE: [8.980600000000477e-05, 9.007000000000459e-05, 8.988899999999578e-05, 9.043000000000245e-05, 8.973599999999998e-05, 9.026399999999962e-05, 8.998600000000023e-05, 9.009699999999732e-05, 9.019400000000177e-05, 9.025000000000005e-05, 9.052699999999997e-05, 9.026400000000656e-05, 9.087499999999721e-05, 9.004199999999851e-05, 9.019400000000177e-05, 9.104199999999951e-05, 9.048600000000073e-05, 9.037500000000365e-05, 9.041699999999542e-05, 9.059799999999729e-05, 9.01800000000022e-05, 8.995900000000057e-05, 9.013899999999603e-05, 9.051399999999987e-05, 9.027799999999919e-05, 8.991699999999492e-05, 9.15000000000013e-05, 9.023600000000048e-05, 8.982000000000434e-05, 8.979199999999826e-05, 9.051399999999987e-05, 9.041700000000236e-05, 9.06250000000039e-05, 8.972299999999989e-05, 9.026399999999962e-05, 9.065199999999662e-05, 9.023600000000048e-05, 8.982000000000434e-05, 8.9945000000001e-05, 9.036100000000408e-05, 9.027799999999919e-05, 9.011100000000383e-05, 9.136199999999761e-05, 9.025000000000005e-05, 8.995800000000109e-05, 8.979100000000573e-05, 9.055499999999911e-05, 8.991700000000186e-05, 9.004199999999851e-05, 9.15279999999935e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.622" endtime="20201115 23:00:30.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.611" endtime="20201115 23:00:30.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.634" endtime="20201115 23:00:30.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.642" endtime="20201115 23:00:30.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.638" endtime="20201115 23:00:30.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.629" endtime="20201115 23:00:30.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.114" endtime="20201115 23:00:30.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.110" endtime="20201115 23:00:30.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.108" endtime="20201115 23:00:30.669"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.696" endtime="20201115 23:00:30.717"></status>
</kw>
<msg timestamp="20201115 23:00:30.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.692" endtime="20201115 23:00:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.720" endtime="20201115 23:00:30.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.726" endtime="20201115 23:00:30.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.685" endtime="20201115 23:00:30.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.679" endtime="20201115 23:00:30.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.749" endtime="20201115 23:00:31.094"></status>
</kw>
<msg timestamp="20201115 23:00:31.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045428736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045520056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.746" endtime="20201115 23:00:31.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045428736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045520056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.104" endtime="20201115 23:00:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.122" endtime="20201115 23:00:31.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.739" endtime="20201115 23:00:31.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.734" endtime="20201115 23:00:31.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.139" level="INFO">${RESULT} = [{'time': 0.045520056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.132000000000584e-05, 'source_diff': 9.132000000000584e-05}, {'time': 0.045639347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.131" endtime="20201115 23:00:31.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.169" level="INFO">${ACCURACY} = {'source_diff': [9.132000000000584e-05, 9.080499999999936e-05, 9.087499999999721e-05, 9.115199999999712e-05, 9.129100000000029e-05, 9.095800000000209e-05, 9.248600000000273e-05, 9.112499999999746e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:31.141" endtime="20201115 23:00:31.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.180" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.178" endtime="20201115 23:00:31.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.186" level="INFO">VALUE: [9.132000000000584e-05, 9.080499999999936e-05, 9.087499999999721e-05, 9.115199999999712e-05, 9.129100000000029e-05, 9.095800000000209e-05, 9.248600000000273e-05, 9.112499999999746e-05, 9.097200000000166e-05, 9.143100000000293e-05, 9.072299999999395e-05, 9.069399999999533e-05, 9.126400000000062e-05, 9.08329999999985e-05, 9.136099999999814e-05, 9.101400000000037e-05, 9.10000000000008e-05, 9.086100000000458e-05, 9.129100000000029e-05, 9.141699999999642e-05, 9.111099999999789e-05, 9.241699999999742e-05, 9.101400000000037e-05, 9.081900000000587e-05, 9.119500000000225e-05, 9.254200000000101e-05, 9.133399999999847e-05, 9.116699999999617e-05, 9.123600000000148e-05, 9.088899999999678e-05, 9.109800000000473e-05, 9.11659999999967e-05, 9.076400000000012e-05, 9.156899999999968e-05, 9.165300000000404e-05, 9.079199999999926e-05, 9.137499999999771e-05, 9.129199999999976e-05, 9.115199999999712e-05, 9.155599999999958e-05, 9.122300000000139e-05, 9.112499999999746e-05, 9.098600000000123e-05, 9.140299999999685e-05, 9.088900000000372e-05, 9.219500000000325e-05, 9.125000000000105e-05, 9.131899999999943e-05, 9.14859999999948e-05, 9.156899999999968e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.183" endtime="20201115 23:00:31.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.171" endtime="20201115 23:00:31.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.195" endtime="20201115 23:00:31.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.203" endtime="20201115 23:00:31.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.199" endtime="20201115 23:00:31.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.190" endtime="20201115 23:00:31.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.676" endtime="20201115 23:00:31.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.672" endtime="20201115 23:00:31.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.670" endtime="20201115 23:00:31.230"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.256" endtime="20201115 23:00:31.278"></status>
</kw>
<msg timestamp="20201115 23:00:31.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.253" endtime="20201115 23:00:31.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.281" endtime="20201115 23:00:31.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.287" endtime="20201115 23:00:31.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.246" endtime="20201115 23:00:31.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.240" endtime="20201115 23:00:31.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.310" endtime="20201115 23:00:31.655"></status>
</kw>
<msg timestamp="20201115 23:00:31.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044773181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.307" endtime="20201115 23:00:31.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044773181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.664" endtime="20201115 23:00:31.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.683" endtime="20201115 23:00:31.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.300" endtime="20201115 23:00:31.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.295" endtime="20201115 23:00:31.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.701" level="INFO">${RESULT} = [{'time': 0.044773181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.220900000000282e-05, 'source_diff': 9.220900000000282e-05}, {'time': 0.044894403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.693" endtime="20201115 23:00:31.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.731" level="INFO">${ACCURACY} = {'source_diff': [9.220900000000282e-05, 9.334700000000057e-05, 9.231900000000043e-05, 9.2333e-05, 9.225000000000205e-05, 9.25000000000023e-05, 9.254199999999407e-05, 9.186099999999864e-05, 9.237499999...</msg>
<status status="PASS" starttime="20201115 23:00:31.703" endtime="20201115 23:00:31.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.742" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.740" endtime="20201115 23:00:31.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.748" level="INFO">VALUE: [9.220900000000282e-05, 9.334700000000057e-05, 9.231900000000043e-05, 9.2333e-05, 9.225000000000205e-05, 9.25000000000023e-05, 9.254199999999407e-05, 9.186099999999864e-05, 9.237499999999871e-05, 9.212499999999846e-05, 9.320800000000434e-05, 9.240300000000479e-05, 9.227800000000119e-05, 9.245799999999665e-05, 9.26250000000059e-05, 9.268099999999724e-05, 9.179099999999385e-05, 9.204200000000051e-05, 9.225000000000205e-05, 9.344399999999808e-05, 9.241700000000436e-05, 9.205600000000008e-05, 9.272200000000341e-05, 9.184800000000548e-05, 9.244399999999708e-05, 9.21250000000054e-05, 9.336100000000014e-05, 9.227800000000119e-05, 9.230500000000086e-05, 9.223600000000248e-05, 9.223600000000248e-05, 9.301400000000237e-05, 9.354200000000201e-05, 9.21529999999976e-05, 9.188899999999778e-05, 9.21529999999976e-05, 9.252800000000144e-05, 9.258300000000025e-05, 9.301399999999543e-05, 9.340199999999937e-05, 9.261099999999939e-05, 9.238800000000574e-05, 9.206900000000018e-05, 9.24859999999958e-05, 9.249999999999536e-05, 9.272200000000341e-05, 9.224999999999511e-05, 9.267999999999776e-05, 9.225000000000205e-05, 9.225000000000205e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.745" endtime="20201115 23:00:31.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.733" endtime="20201115 23:00:31.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.757" endtime="20201115 23:00:31.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.765" endtime="20201115 23:00:31.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.761" endtime="20201115 23:00:31.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.753" endtime="20201115 23:00:31.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.236" endtime="20201115 23:00:31.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.232" endtime="20201115 23:00:31.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.231" endtime="20201115 23:00:31.792"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.818" endtime="20201115 23:00:31.840"></status>
</kw>
<msg timestamp="20201115 23:00:31.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.815" endtime="20201115 23:00:31.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.843" endtime="20201115 23:00:31.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.849" endtime="20201115 23:00:31.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.808" endtime="20201115 23:00:31.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.802" endtime="20201115 23:00:31.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.872" endtime="20201115 23:00:32.218"></status>
</kw>
<msg timestamp="20201115 23:00:32.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044719708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044813361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.869" endtime="20201115 23:00:32.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044719708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044813361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.228" endtime="20201115 23:00:32.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.246" endtime="20201115 23:00:32.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.862" endtime="20201115 23:00:32.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.857" endtime="20201115 23:00:32.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.263" level="INFO">${RESULT} = [{'time': 0.044813361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.365300000000604e-05, 'source_diff': 9.365300000000604e-05}, {'time': 0.044935694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.255" endtime="20201115 23:00:32.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.297" level="INFO">${ACCURACY} = {'source_diff': [9.365300000000604e-05, 9.35409999999956e-05, 9.319399999999783e-05, 9.313899999999903e-05, 9.279200000000126e-05, 9.331900000000143e-05, 9.337499999999971e-05, 9.323599999999654e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:32.266" endtime="20201115 23:00:32.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.308" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.306" endtime="20201115 23:00:32.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.313" level="INFO">VALUE: [9.365300000000604e-05, 9.35409999999956e-05, 9.319399999999783e-05, 9.313899999999903e-05, 9.279200000000126e-05, 9.331900000000143e-05, 9.337499999999971e-05, 9.323599999999654e-05, 9.355499999999517e-05, 9.437500000000071e-05, 9.451299999999746e-05, 9.340299999999885e-05, 9.341600000000588e-05, 9.419500000000525e-05, 9.362499999999996e-05, 9.366699999999867e-05, 9.330600000000133e-05, 9.362499999999996e-05, 9.290299999999835e-05, 9.36529999999991e-05, 9.284700000000007e-05, 9.297200000000366e-05, 9.35409999999956e-05, 9.280600000000083e-05, 9.375000000000355e-05, 9.345799999999765e-05, 9.454200000000301e-05, 9.340199999999937e-05, 9.386100000000064e-05, 9.29859999999963e-05, 9.291699999999792e-05, 9.361100000000039e-05, 9.295799999999715e-05, 9.367999999999876e-05, 9.291699999999792e-05, 9.370800000000484e-05, 9.355600000000158e-05, 9.345799999999765e-05, 9.327799999999525e-05, 9.42079999999984e-05, 9.305600000000108e-05, 9.348600000000373e-05, 9.318099999999774e-05, 9.370800000000484e-05, 9.442999999999951e-05, 9.312499999999946e-05, 9.372200000000441e-05, 9.355600000000158e-05, 9.29859999999963e-05, 9.333400000000047e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.310" endtime="20201115 23:00:32.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.299" endtime="20201115 23:00:32.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.322" endtime="20201115 23:00:32.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.330" endtime="20201115 23:00:32.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.326" endtime="20201115 23:00:32.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.318" endtime="20201115 23:00:32.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.798" endtime="20201115 23:00:32.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.795" endtime="20201115 23:00:32.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.793" endtime="20201115 23:00:32.357"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.362" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.383" endtime="20201115 23:00:32.404"></status>
</kw>
<msg timestamp="20201115 23:00:32.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.380" endtime="20201115 23:00:32.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.408" endtime="20201115 23:00:32.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.414" endtime="20201115 23:00:32.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.373" endtime="20201115 23:00:32.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.367" endtime="20201115 23:00:32.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.437" endtime="20201115 23:00:32.782"></status>
</kw>
<msg timestamp="20201115 23:00:32.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044742556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044836681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.434" endtime="20201115 23:00:32.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044742556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044836681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.791" endtime="20201115 23:00:32.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.810" endtime="20201115 23:00:32.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.427" endtime="20201115 23:00:32.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.422" endtime="20201115 23:00:32.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.829" level="INFO">${RESULT} = [{'time': 0.044836681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.412500000000046e-05, 'source_diff': 9.412500000000046e-05}, {'time': 0.044962069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.820" endtime="20201115 23:00:32.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.859" level="INFO">${ACCURACY} = {'source_diff': [9.412500000000046e-05, 9.430500000000286e-05, 9.418099999999874e-05, 9.423599999999754e-05, 9.402800000000294e-05, 9.470899999999838e-05, 9.388899999999978e-05, 9.380600000000183e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:32.831" endtime="20201115 23:00:32.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.870" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.868" endtime="20201115 23:00:32.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.876" level="INFO">VALUE: [9.412500000000046e-05, 9.430500000000286e-05, 9.418099999999874e-05, 9.423599999999754e-05, 9.402800000000294e-05, 9.470899999999838e-05, 9.388899999999978e-05, 9.380600000000183e-05, 9.379199999999532e-05, 9.409700000000132e-05, 9.426399999999668e-05, 9.384700000000107e-05, 9.475000000000455e-05, 9.518099999999974e-05, 9.454199999999607e-05, 9.468099999999924e-05, 9.369499999999781e-05, 9.415200000000012e-05, 9.433299999999506e-05, 9.434699999999463e-05, 9.540300000000085e-05, 9.47079999999989e-05, 9.399999999999686e-05, 9.455500000000311e-05, 9.454100000000354e-05, 9.46660000000002e-05, 9.419399999999883e-05, 9.544400000000008e-05, 9.559700000000282e-05, 9.380600000000183e-05, 9.447200000000516e-05, 9.411100000000089e-05, 9.399999999999686e-05, 9.523600000000548e-05, 9.390299999999935e-05, 9.473599999999804e-05, 9.419500000000525e-05, 9.387500000000021e-05, 9.438900000000028e-05, 9.449999999999736e-05, 9.38609999999937e-05, 9.434700000000157e-05, 9.459699999999488e-05, 9.426399999999668e-05, 9.470899999999838e-05, 9.425000000000405e-05, 9.399999999999686e-05, 9.42079999999984e-05, 9.404200000000251e-05, 9.422199999999797e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.872" endtime="20201115 23:00:32.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.861" endtime="20201115 23:00:32.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.884" endtime="20201115 23:00:32.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.892" endtime="20201115 23:00:32.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.888" endtime="20201115 23:00:32.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.880" endtime="20201115 23:00:32.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.363" endtime="20201115 23:00:32.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.359" endtime="20201115 23:00:32.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.358" endtime="20201115 23:00:32.919"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.945" endtime="20201115 23:00:32.965"></status>
</kw>
<msg timestamp="20201115 23:00:32.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.942" endtime="20201115 23:00:32.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.968" endtime="20201115 23:00:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.974" endtime="20201115 23:00:32.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.935" endtime="20201115 23:00:32.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.929" endtime="20201115 23:00:32.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.998" endtime="20201115 23:00:33.330"></status>
</kw>
<msg timestamp="20201115 23:00:33.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044318042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044413236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.994" endtime="20201115 23:00:33.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044318042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044413236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.340" endtime="20201115 23:00:33.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.358" endtime="20201115 23:00:33.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.987" endtime="20201115 23:00:33.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.982" endtime="20201115 23:00:33.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.376" level="INFO">${RESULT} = [{'time': 0.044413236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.519399999999983e-05, 'source_diff': 9.519399999999983e-05}, {'time': 0.044538597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.367" endtime="20201115 23:00:33.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.406" level="INFO">${ACCURACY} = {'source_diff': [9.519399999999983e-05, 9.658299999999731e-05, 9.654200000000501e-05, 9.531900000000343e-05, 9.543099999999999e-05, 9.534699999999563e-05, 9.529200000000376e-05, 9.561200000000186e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:33.378" endtime="20201115 23:00:33.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.417" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.414" endtime="20201115 23:00:33.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.422" level="INFO">VALUE: [9.519399999999983e-05, 9.658299999999731e-05, 9.654200000000501e-05, 9.531900000000343e-05, 9.543099999999999e-05, 9.534699999999563e-05, 9.529200000000376e-05, 9.561200000000186e-05, 9.506999999999571e-05, 9.524999999999811e-05, 9.551400000000487e-05, 9.526399999999768e-05, 9.473599999999804e-05, 9.529199999999682e-05, 9.543000000000051e-05, 9.51660000000007e-05, 9.605599999999714e-05, 9.543000000000051e-05, 9.511099999999495e-05, 9.655600000000458e-05, 9.479099999999685e-05, 9.48059999999959e-05, 9.483299999999556e-05, 9.508300000000275e-05, 9.543000000000051e-05, 9.480500000000336e-05, 9.473599999999804e-05, 9.524999999999811e-05, 9.495799999999915e-05, 9.533400000000247e-05, 9.497199999999872e-05, 9.479100000000379e-05, 9.491699999999992e-05, 9.494499999999906e-05, 9.52079999999994e-05, 9.49859999999983e-05, 9.556899999999674e-05, 9.552699999999803e-05, 9.50000000000048e-05, 9.499999999999786e-05, 9.484699999999513e-05, 9.566700000000067e-05, 9.475000000000455e-05, 9.47079999999989e-05, 9.543000000000051e-05, 9.588900000000178e-05, 9.63609999999962e-05, 9.538899999999434e-05, 9.654199999999807e-05, 9.501299999999796e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.419" endtime="20201115 23:00:33.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.408" endtime="20201115 23:00:33.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.431" endtime="20201115 23:00:33.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.439" endtime="20201115 23:00:33.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.435" endtime="20201115 23:00:33.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.426" endtime="20201115 23:00:33.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.925" endtime="20201115 23:00:33.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.921" endtime="20201115 23:00:33.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.919" endtime="20201115 23:00:33.465"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.470" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.492" endtime="20201115 23:00:33.511"></status>
</kw>
<msg timestamp="20201115 23:00:33.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.488" endtime="20201115 23:00:33.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.515" endtime="20201115 23:00:33.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.522" endtime="20201115 23:00:33.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.481" endtime="20201115 23:00:33.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.475" endtime="20201115 23:00:33.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.545" endtime="20201115 23:00:33.875"></status>
</kw>
<msg timestamp="20201115 23:00:33.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044655764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044751694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.541" endtime="20201115 23:00:33.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044655764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044751694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.884" endtime="20201115 23:00:33.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.902" endtime="20201115 23:00:33.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.534" endtime="20201115 23:00:33.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.530" endtime="20201115 23:00:33.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.921" level="INFO">${RESULT} = [{'time': 0.044751694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.593000000000101e-05, 'source_diff': 9.593000000000101e-05}, {'time': 0.044882028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:33.912" endtime="20201115 23:00:33.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.951" level="INFO">${ACCURACY} = {'source_diff': [9.593000000000101e-05, 9.659699999999688e-05, 9.672299999999995e-05, 9.750000000000036e-05, 9.593100000000049e-05, 9.581900000000393e-05, 9.661100000000339e-05, 9.655599999999764e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:33.923" endtime="20201115 23:00:33.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.962" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.959" endtime="20201115 23:00:33.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.967" level="INFO">VALUE: [9.593000000000101e-05, 9.659699999999688e-05, 9.672299999999995e-05, 9.750000000000036e-05, 9.593100000000049e-05, 9.581900000000393e-05, 9.661100000000339e-05, 9.655599999999764e-05, 9.576399999999818e-05, 9.581900000000393e-05, 9.669400000000133e-05, 9.704199999999857e-05, 9.591700000000092e-05, 9.7027999999999e-05, 9.722300000000045e-05, 9.662500000000296e-05, 9.573599999999904e-05, 9.659700000000382e-05, 9.580500000000436e-05, 9.586100000000264e-05, 9.658299999999731e-05, 9.576399999999818e-05, 9.672299999999995e-05, 9.579100000000479e-05, 9.622199999999997e-05, 9.576399999999818e-05, 9.595800000000015e-05, 9.61660000000017e-05, 9.584699999999613e-05, 9.580500000000436e-05, 9.613800000000255e-05, 9.6027999999998e-05, 9.623599999999954e-05, 9.59859999999993e-05, 9.66530000000021e-05, 9.662500000000296e-05, 9.756899999999874e-05, 9.755599999999864e-05, 9.629099999999835e-05, 9.668100000000124e-05, 9.593000000000101e-05, 9.738900000000328e-05, 9.629200000000476e-05, 9.581899999999699e-05, 9.68609999999967e-05, 9.593099999999355e-05, 9.58609999999957e-05, 9.647200000000022e-05, 9.634800000000304e-05, 9.591700000000092e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.964" endtime="20201115 23:00:33.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.953" endtime="20201115 23:00:33.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.976" endtime="20201115 23:00:33.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.984" endtime="20201115 23:00:34.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.980" endtime="20201115 23:00:34.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.971" endtime="20201115 23:00:34.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.472" endtime="20201115 23:00:34.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.468" endtime="20201115 23:00:34.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.466" endtime="20201115 23:00:34.011"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.016" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.038" endtime="20201115 23:00:34.058"></status>
</kw>
<msg timestamp="20201115 23:00:34.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.035" endtime="20201115 23:00:34.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.061" endtime="20201115 23:00:34.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.067" endtime="20201115 23:00:34.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.027" endtime="20201115 23:00:34.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.021" endtime="20201115 23:00:34.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.090" endtime="20201115 23:00:34.423"></status>
</kw>
<msg timestamp="20201115 23:00:34.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045496125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045593556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.087" endtime="20201115 23:00:34.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045496125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045593556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.433" endtime="20201115 23:00:34.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.451" endtime="20201115 23:00:34.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.080" endtime="20201115 23:00:34.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.075" endtime="20201115 23:00:34.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.468" level="INFO">${RESULT} = [{'time': 0.045593556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.743100000000199e-05, 'source_diff': 9.743100000000199e-05}, {'time': 0.045723931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.460" endtime="20201115 23:00:34.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.501" level="INFO">${ACCURACY} = {'source_diff': [9.743100000000199e-05, 9.704200000000551e-05, 9.831899999999949e-05, 9.73200000000049e-05, 9.674999999999961e-05, 9.715200000000312e-05, 9.68200000000044e-05, 9.68330000000045e-05, 9....</msg>
<status status="PASS" starttime="20201115 23:00:34.470" endtime="20201115 23:00:34.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.512" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.510" endtime="20201115 23:00:34.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.518" level="INFO">VALUE: [9.743100000000199e-05, 9.704200000000551e-05, 9.831899999999949e-05, 9.73200000000049e-05, 9.674999999999961e-05, 9.715200000000312e-05, 9.68200000000044e-05, 9.68330000000045e-05, 9.773600000000104e-05, 9.708399999999728e-05, 9.711099999999695e-05, 9.675000000000655e-05, 9.709699999999738e-05, 9.769400000000233e-05, 9.734699999999763e-05, 9.705499999999867e-05, 9.683299999999756e-05, 9.801400000000043e-05, 9.763800000000405e-05, 9.695800000000115e-05, 9.747200000000122e-05, 9.744399999999515e-05, 9.708400000000422e-05, 9.750000000000036e-05, 9.674999999999961e-05, 9.673600000000004e-05, 9.731999999999796e-05, 9.68330000000045e-05, 9.75409999999996e-05, 9.704199999999857e-05, 9.768000000000276e-05, 9.68609999999967e-05, 9.787499999999727e-05, 9.758299999999831e-05, 9.855599999999964e-05, 9.716599999999576e-05, 9.859699999999888e-05, 9.708400000000422e-05, 9.673600000000004e-05, 9.704199999999857e-05, 9.759699999999788e-05, 9.765199999999669e-05, 9.762500000000396e-05, 9.7333000000005e-05, 9.745799999999472e-05, 9.68609999999967e-05, 9.706999999999771e-05, 9.831899999999949e-05, 9.712500000000346e-05, 9.694499999999412e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.515" endtime="20201115 23:00:34.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.503" endtime="20201115 23:00:34.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.526" endtime="20201115 23:00:34.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.534" endtime="20201115 23:00:34.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.530" endtime="20201115 23:00:34.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.522" endtime="20201115 23:00:34.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.017" endtime="20201115 23:00:34.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.013" endtime="20201115 23:00:34.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.011" endtime="20201115 23:00:34.565"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.592" endtime="20201115 23:00:34.612"></status>
</kw>
<msg timestamp="20201115 23:00:34.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.589" endtime="20201115 23:00:34.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.615" endtime="20201115 23:00:34.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.621" endtime="20201115 23:00:34.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.581" endtime="20201115 23:00:34.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.576" endtime="20201115 23:00:34.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.645" endtime="20201115 23:00:34.975"></status>
</kw>
<msg timestamp="20201115 23:00:34.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04923325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049331028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:34.642" endtime="20201115 23:00:34.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04923325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049331028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:34.985" endtime="20201115 23:00:35.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.003" endtime="20201115 23:00:35.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.634" endtime="20201115 23:00:35.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.629" endtime="20201115 23:00:35.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.022" level="INFO">${RESULT} = [{'time': 0.049331028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777799999999975e-05, 'source_diff': 9.777799999999975e-05}, {'time': 0.049461361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.013" endtime="20201115 23:00:35.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.052" level="INFO">${ACCURACY} = {'source_diff': [9.777799999999975e-05, 9.827800000000025e-05, 9.856899999999974e-05, 9.863899999999759e-05, 9.788900000000378e-05, 9.863899999999759e-05, 9.840200000000437e-05, 9.829199999999982e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:35.024" endtime="20201115 23:00:35.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.063" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.061" endtime="20201115 23:00:35.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.068" level="INFO">VALUE: [9.777799999999975e-05, 9.827800000000025e-05, 9.856899999999974e-05, 9.863899999999759e-05, 9.788900000000378e-05, 9.863899999999759e-05, 9.840200000000437e-05, 9.829199999999982e-05, 9.844400000000308e-05, 9.815200000000412e-05, 9.825000000000111e-05, 9.867999999999683e-05, 9.801400000000043e-05, 9.784699999999813e-05, 9.806899999999924e-05, 9.844400000000308e-05, 9.790199999999694e-05, 9.844399999999615e-05, 9.822200000000197e-05, 9.861199999999792e-05, 9.773600000000104e-05, 9.868100000000324e-05, 9.779099999999985e-05, 9.863900000000453e-05, 9.905500000000067e-05, 9.802700000000053e-05, 9.784699999999813e-05, 9.845799999999572e-05, 9.78609999999977e-05, 9.788899999999684e-05, 9.812500000000446e-05, 9.868000000000376e-05, 9.78059999999989e-05, 9.8028e-05, 9.852799999999357e-05, 9.81530000000036e-05, 9.794499999999512e-05, 9.777700000000028e-05, 9.843100000000299e-05, 9.819400000000283e-05, 9.77359999999941e-05, 9.83479999999981e-05, 9.870900000000238e-05, 9.919499999999637e-05, 9.831999999999896e-05, 9.780499999999942e-05, 9.794499999999512e-05, 9.957000000000021e-05, 9.773600000000104e-05, 9.833399999999853e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.065" endtime="20201115 23:00:35.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.054" endtime="20201115 23:00:35.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.078" endtime="20201115 23:00:35.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.086" endtime="20201115 23:00:35.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.082" endtime="20201115 23:00:35.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.073" endtime="20201115 23:00:35.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.572" endtime="20201115 23:00:35.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.568" endtime="20201115 23:00:35.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.566" endtime="20201115 23:00:35.112"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.139" endtime="20201115 23:00:35.158"></status>
</kw>
<msg timestamp="20201115 23:00:35.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.135" endtime="20201115 23:00:35.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.162" endtime="20201115 23:00:35.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.168" endtime="20201115 23:00:35.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.128" endtime="20201115 23:00:35.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.123" endtime="20201115 23:00:35.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.191" endtime="20201115 23:00:35.523"></status>
</kw>
<msg timestamp="20201115 23:00:35.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044389014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044488597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.188" endtime="20201115 23:00:35.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044389014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044488597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.532" endtime="20201115 23:00:35.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.551" endtime="20201115 23:00:35.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.181" endtime="20201115 23:00:35.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.176" endtime="20201115 23:00:35.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.568" level="INFO">${RESULT} = [{'time': 0.044488597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.958300000000031e-05, 'source_diff': 9.958300000000031e-05}, {'time': 0.044618931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.559" endtime="20201115 23:00:35.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.598" level="INFO">${ACCURACY} = {'source_diff': [9.958300000000031e-05, 9.958399999999978e-05, 0.00010022199999999704, 9.927800000000125e-05, 9.931999999999996e-05, 9.961100000000639e-05, 9.905600000000014e-05, 9.956900000000074e-05...</msg>
<status status="PASS" starttime="20201115 23:00:35.570" endtime="20201115 23:00:35.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.609" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.607" endtime="20201115 23:00:35.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.615" level="INFO">VALUE: [9.958300000000031e-05, 9.958399999999978e-05, 0.00010022199999999704, 9.927800000000125e-05, 9.931999999999996e-05, 9.961100000000639e-05, 9.905600000000014e-05, 9.956900000000074e-05, 9.943100000000399e-05, 9.901400000000143e-05, 9.916699999999723e-05, 0.00010051400000000293, 9.877700000000128e-05, 9.927700000000178e-05, 9.91809999999968e-05, 9.906900000000024e-05, 9.906999999999971e-05, 0.00010043099999999805, 9.883299999999956e-05, 9.881999999999946e-05, 9.883399999999903e-05, 9.968100000000424e-05, 9.948599999999586e-05, 9.959699999999988e-05, 9.93609999999992e-05, 9.906999999999971e-05, 9.91809999999968e-05, 9.943099999999705e-05, 9.88609999999987e-05, 0.00010040199999999944, 9.883299999999956e-05, 9.880500000000042e-05, 9.919400000000383e-05, 9.931999999999996e-05, 0.00010058400000000078, 9.929100000000135e-05, 9.905500000000067e-05, 9.958300000000031e-05, 9.950000000000236e-05, 9.962499999999902e-05, 9.927700000000178e-05, 9.933300000000006e-05, 0.00010054199999999514, 9.883299999999956e-05, 9.913899999999809e-05, 0.00010038899999999934, 9.894399999999665e-05, 0.00010013899999999909, 9.91530000000046e-05, 0.00010062500000000002]</msg>
<status status="PASS" starttime="20201115 23:00:35.611" endtime="20201115 23:00:35.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.600" endtime="20201115 23:00:35.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.624" endtime="20201115 23:00:35.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.632" endtime="20201115 23:00:35.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.628" endtime="20201115 23:00:35.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.620" endtime="20201115 23:00:35.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.119" endtime="20201115 23:00:35.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.115" endtime="20201115 23:00:35.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.113" endtime="20201115 23:00:35.658"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.686" endtime="20201115 23:00:35.706"></status>
</kw>
<msg timestamp="20201115 23:00:35.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.683" endtime="20201115 23:00:35.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.710" endtime="20201115 23:00:35.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.716" endtime="20201115 23:00:35.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.675" endtime="20201115 23:00:35.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.669" endtime="20201115 23:00:35.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.739" endtime="20201115 23:00:36.071"></status>
</kw>
<msg timestamp="20201115 23:00:36.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045999875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046099875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.736" endtime="20201115 23:00:36.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045999875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046099875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.080" endtime="20201115 23:00:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.098" endtime="20201115 23:00:36.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.729" endtime="20201115 23:00:36.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.724" endtime="20201115 23:00:36.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.117" level="INFO">${RESULT} = [{'time': 0.046099875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999999593e-05, 'source_diff': 9.999999999999593e-05}, {'time': 0.046231181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.108" endtime="20201115 23:00:36.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.147" level="INFO">${ACCURACY} = {'source_diff': [9.999999999999593e-05, 0.00010155600000000264, 0.00010019500000000431, 9.972300000000295e-05, 0.00010120799999999847, 0.0001006530000000061, 9.994499999999712e-05, 0.00010061100000000...</msg>
<status status="PASS" starttime="20201115 23:00:36.119" endtime="20201115 23:00:36.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.158" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.156" endtime="20201115 23:00:36.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.163" level="INFO">VALUE: [9.999999999999593e-05, 0.00010155600000000264, 0.00010019500000000431, 9.972300000000295e-05, 0.00010120799999999847, 0.0001006530000000061, 9.994499999999712e-05, 0.00010061100000000045, 0.00010045799999999772, 0.0001006939999999984, 0.00010015299999999866, 0.000101028000000003, 0.00010012499999999952, 0.00010024999999999618, 0.00010002799999999507, 0.0001001809999999978, 0.00010067999999999883, 0.00010047299999999676, 0.00010020900000000388, 9.988899999999884e-05, 0.0001002359999999966, 9.992999999999808e-05, 0.00010041699999999848, 0.00010031900000000149, 0.00010137500000000077, 0.00010045800000000465, 9.995799999999722e-05, 9.976400000000218e-05, 0.0001002359999999966, 0.0001003610000000002, 9.990199999999894e-05, 9.99860000000033e-05, 0.00010058300000000131, 0.00010066599999999926, 0.00010040299999999891, 0.00010012499999999952, 0.00010063899999999959, 9.990299999999841e-05, 0.000100415999999999, 0.00010029199999999489, 0.00010062500000000002, 9.977800000000175e-05, 0.00010102799999999607, 9.988899999999884e-05, 0.00010001300000000296, 0.00010037499999999977, 0.00010001400000000243, 0.00010069500000000481, 9.98609999999997e-05, 9.998599999999636e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.160" endtime="20201115 23:00:36.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.149" endtime="20201115 23:00:36.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.172" endtime="20201115 23:00:36.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.180" endtime="20201115 23:00:36.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.176" endtime="20201115 23:00:36.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.168" endtime="20201115 23:00:36.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.665" endtime="20201115 23:00:36.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.661" endtime="20201115 23:00:36.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.659" endtime="20201115 23:00:36.207"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.212" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.234" endtime="20201115 23:00:36.253"></status>
</kw>
<msg timestamp="20201115 23:00:36.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.230" endtime="20201115 23:00:36.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.257" endtime="20201115 23:00:36.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.263" endtime="20201115 23:00:36.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.223" endtime="20201115 23:00:36.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.217" endtime="20201115 23:00:36.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.286" endtime="20201115 23:00:36.619"></status>
</kw>
<msg timestamp="20201115 23:00:36.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044933222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.283" endtime="20201115 23:00:36.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044933222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.628" endtime="20201115 23:00:36.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.647" endtime="20201115 23:00:36.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.276" endtime="20201115 23:00:36.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.271" endtime="20201115 23:00:36.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.664" level="INFO">${RESULT} = [{'time': 0.045034486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010126399999999675, 'source_diff': 0.00010126399999999675}, {'time': 0.045168847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.655" endtime="20201115 23:00:36.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.696" level="INFO">${ACCURACY} = {'source_diff': [0.00010126399999999675, 0.000101416, 0.00010208300000000281, 0.00010077700000000328, 0.00010116599999999976, 0.0001008480000000006, 0.00010084700000000113, 0.00010104200000000257, 0.0...</msg>
<status status="PASS" starttime="20201115 23:00:36.666" endtime="20201115 23:00:36.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.707" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.705" endtime="20201115 23:00:36.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.713" level="INFO">VALUE: [0.00010126399999999675, 0.000101416, 0.00010208300000000281, 0.00010077700000000328, 0.00010116599999999976, 0.0001008480000000006, 0.00010084700000000113, 0.00010104200000000257, 0.00010109700000000138, 0.00010109699999999444, 0.00010174999999999768, 0.00010247200000000622, 0.00010100000000000386, 0.0001022359999999986, 0.00010122200000000497, 0.00010097199999999779, 0.00010112500000000052, 0.00010145800000000565, 0.0001015410000000036, 0.00010090199999999994, 0.000101028000000003, 0.0001017359999999981, 0.00010094400000000558, 0.00010150000000000436, 0.00010165300000000016, 0.00010226399999999775, 0.00010125000000000411, 0.00010209800000000185, 0.00010193000000000008, 0.0001008610000000007, 0.00010098599999999736, 0.00010195799999999922, 0.00010106999999999478, 0.00010076399999999625, 0.00010081999999999453, 0.00010181900000000299, 0.00010156900000000274, 0.00010137500000000077, 0.00010175000000000461, 0.00010161100000000145, 0.00010113900000000009, 0.00010120900000000488, 0.00010134700000000163, 0.00010079099999999591, 0.00010138900000000034, 0.00010151400000000393, 0.00010124999999999718, 0.00010150000000000436, 0.00010090199999999994, 0.00010134700000000163]</msg>
<status status="PASS" starttime="20201115 23:00:36.710" endtime="20201115 23:00:36.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.698" endtime="20201115 23:00:36.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.722" endtime="20201115 23:00:36.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.731" endtime="20201115 23:00:36.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.726" endtime="20201115 23:00:36.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.718" endtime="20201115 23:00:36.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.214" endtime="20201115 23:00:36.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.209" endtime="20201115 23:00:36.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.208" endtime="20201115 23:00:36.757"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.784" endtime="20201115 23:00:36.804"></status>
</kw>
<msg timestamp="20201115 23:00:36.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.781" endtime="20201115 23:00:36.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.807" endtime="20201115 23:00:36.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.814" endtime="20201115 23:00:36.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.774" endtime="20201115 23:00:36.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.768" endtime="20201115 23:00:36.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.837" endtime="20201115 23:00:37.170"></status>
</kw>
<msg timestamp="20201115 23:00:37.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044781917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044884486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.833" endtime="20201115 23:00:37.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044781917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044884486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.179" endtime="20201115 23:00:37.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.197" endtime="20201115 23:00:37.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.826" endtime="20201115 23:00:37.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.822" endtime="20201115 23:00:37.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.216" level="INFO">${RESULT} = [{'time': 0.044884486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010256900000000374, 'source_diff': 0.00010256900000000374}, {'time': 0.045016819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.207" endtime="20201115 23:00:37.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.246" level="INFO">${ACCURACY} = {'source_diff': [0.00010256900000000374, 0.00010272199999999954, 0.00010179099999999691, 0.00010247299999999876, 0.00010256900000000374, 0.00010183400000000203, 0.00010204200000000357, 0.0001023470000...</msg>
<status status="PASS" starttime="20201115 23:00:37.218" endtime="20201115 23:00:37.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.256" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.254" endtime="20201115 23:00:37.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.262" level="INFO">VALUE: [0.00010256900000000374, 0.00010272199999999954, 0.00010179099999999691, 0.00010247299999999876, 0.00010256900000000374, 0.00010183400000000203, 0.00010204200000000357, 0.00010234700000000263, 0.00010206900000000324, 0.00010263799999999518, 0.00010359800000000335, 0.00010320899999999994, 0.00010306999999999678, 0.00010265200000000169, 0.00010212499999999458, 0.00010258300000000331, 0.00010240200000000144, 0.00010174999999999768, 0.0001027359999999991, 0.00010255600000000364, 0.00010180499999999648, 0.00010209700000000238, 0.00010241700000000048, 0.00010179199999999639, 0.00010188900000000084, 0.00010212500000000152, 0.00010204099999999716, 0.00010231999999999603, 0.00010215300000000066, 0.00010183299999999562, 0.00010230500000000392, 0.0001033610000000032, 0.0001020139999999975, 0.00010197199999999879, 0.00010177700000000428, 0.0001033889999999954, 0.00010247199999999929, 0.0001027359999999991, 0.00010212500000000152, 0.0001025410000000046, 0.00010222199999999904, 0.0001023610000000022, 0.0001033339999999966, 0.00010184700000000213, 0.00010187499999999433, 0.0001020689999999963, 0.0001021809999999998, 0.00010198599999999836, 0.000102513999999998, 0.00010213900000000109]</msg>
<status status="PASS" starttime="20201115 23:00:37.259" endtime="20201115 23:00:37.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.248" endtime="20201115 23:00:37.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.270" endtime="20201115 23:00:37.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.278" endtime="20201115 23:00:37.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.274" endtime="20201115 23:00:37.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.266" endtime="20201115 23:00:37.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.764" endtime="20201115 23:00:37.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.760" endtime="20201115 23:00:37.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.758" endtime="20201115 23:00:37.305"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.331" endtime="20201115 23:00:37.351"></status>
</kw>
<msg timestamp="20201115 23:00:37.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.328" endtime="20201115 23:00:37.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.355" endtime="20201115 23:00:37.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.361" endtime="20201115 23:00:37.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.321" endtime="20201115 23:00:37.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.315" endtime="20201115 23:00:37.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.385" endtime="20201115 23:00:37.718"></status>
</kw>
<msg timestamp="20201115 23:00:37.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044632806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.381" endtime="20201115 23:00:37.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044632806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.727" endtime="20201115 23:00:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.745" endtime="20201115 23:00:37.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.374" endtime="20201115 23:00:37.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.370" endtime="20201115 23:00:37.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.763" level="INFO">${RESULT} = [{'time': 0.044632806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010311199999999549, 'source_diff': 0.00010311199999999549}, {'time': 0.044770222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:37.754" endtime="20201115 23:00:37.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.793" level="INFO">${ACCURACY} = {'source_diff': [0.00010311199999999549, 0.00010334699999999669, 0.00010280599999999696, 0.00010298599999999936, 0.00010340299999999497, 0.00010349999999999943, 0.00010340300000000191, 0.0001028060000...</msg>
<status status="PASS" starttime="20201115 23:00:37.765" endtime="20201115 23:00:37.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.804" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.802" endtime="20201115 23:00:37.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.809" level="INFO">VALUE: [0.00010311199999999549, 0.00010334699999999669, 0.00010280599999999696, 0.00010298599999999936, 0.00010340299999999497, 0.00010349999999999943, 0.00010340300000000191, 0.0001028060000000039, 0.00010304200000000457, 0.00010284699999999619, 0.00010308399999999635, 0.00010463899999999665, 0.00010299999999999893, 0.00010299999999999893, 0.00010324999999999918, 0.00010300000000000586, 0.000103513999999999, 0.00010362499999999608, 0.00010337499999999583, 0.00010348599999999986, 0.00010291599999999457, 0.00010348599999999986, 0.00010355600000000464, 0.0001028480000000026, 0.00010279199999999739, 0.00010324999999999918, 0.00010304099999999816, 0.00010325000000000611, 0.00010323699999999908, 0.0001028610000000027, 0.0001032359999999996, 0.00010370799999999403, 0.00010298599999999936, 0.00010445899999999425, 0.00010311200000000242, 0.00010298599999999936, 0.0001031940000000009, 0.00010322299999999951, 0.00010459800000000435, 0.00010369500000000087, 0.00010281899999999705, 0.00010372200000000054, 0.00010356999999999728, 0.00010343000000000158, 0.0001031940000000009, 0.00010288900000000184, 0.0001028060000000039, 0.00010336099999999626, 0.00010341700000000148, 0.00010361100000000345]</msg>
<status status="PASS" starttime="20201115 23:00:37.806" endtime="20201115 23:00:37.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.795" endtime="20201115 23:00:37.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.818" endtime="20201115 23:00:37.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.826" endtime="20201115 23:00:37.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.822" endtime="20201115 23:00:37.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.813" endtime="20201115 23:00:37.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.311" endtime="20201115 23:00:37.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.307" endtime="20201115 23:00:37.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.306" endtime="20201115 23:00:37.852"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.858" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.880" endtime="20201115 23:00:37.899"></status>
</kw>
<msg timestamp="20201115 23:00:37.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.876" endtime="20201115 23:00:37.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.903" endtime="20201115 23:00:37.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.909" endtime="20201115 23:00:37.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.869" endtime="20201115 23:00:37.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.863" endtime="20201115 23:00:37.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.932" endtime="20201115 23:00:38.263"></status>
</kw>
<msg timestamp="20201115 23:00:38.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045188792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.929" endtime="20201115 23:00:38.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045188792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.273" endtime="20201115 23:00:38.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.291" endtime="20201115 23:00:38.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.922" endtime="20201115 23:00:38.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.917" endtime="20201115 23:00:38.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.310" level="INFO">${RESULT} = [{'time': 0.045188792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010445900000000119, 'source_diff': 0.00010445900000000119}, {'time': 0.045322153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.301" endtime="20201115 23:00:38.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.339" level="INFO">${ACCURACY} = {'source_diff': [0.00010445900000000119, 0.00010393099999999461, 0.00010541699999999654, 0.00010511099999999801, 0.00010402799999999907, 0.00010429199999999889, 0.00010412499999999658, 0.0001045279999...</msg>
<status status="PASS" starttime="20201115 23:00:38.312" endtime="20201115 23:00:38.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.350" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.348" endtime="20201115 23:00:38.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.355" level="INFO">VALUE: [0.00010445900000000119, 0.00010393099999999461, 0.00010541699999999654, 0.00010511099999999801, 0.00010402799999999907, 0.00010429199999999889, 0.00010412499999999658, 0.00010452799999999957, 0.00010462500000000402, 0.00010397200000000079, 0.00010476400000000025, 0.00010466699999999579, 0.00010477799999999982, 0.00010469500000000187, 0.0001043339999999976, 0.00010544400000000315, 0.00010420800000000147, 0.00010448600000000086, 0.00010412500000000352, 0.00010381899999999805, 0.00010440299999999597, 0.00010381899999999805, 0.00010395800000000122, 0.0001043889999999964, 0.00010387500000000327, 0.00010561200000000492, 0.00010395900000000069, 0.00010381899999999805, 0.00010407000000000471, 0.00010456999999999828, 0.00010393000000000208, 0.00010469399999999546, 0.00010422200000000104, 0.00010394400000000165, 0.00010427799999999932, 0.00010390299999999547, 0.0001045559999999987, 0.00010440299999999597, 0.00010468000000000283, 0.00010390299999999547, 0.00010444500000000162, 0.00010412500000000352, 0.00010462500000000402, 0.00010380499999999848, 0.00010376399999999925, 0.00010391700000000198, 0.000104514, 0.00010476300000000077, 0.00010470800000000197, 0.00010422200000000104]</msg>
<status status="PASS" starttime="20201115 23:00:38.352" endtime="20201115 23:00:38.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.341" endtime="20201115 23:00:38.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.364" endtime="20201115 23:00:38.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.373" endtime="20201115 23:00:38.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.368" endtime="20201115 23:00:38.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.359" endtime="20201115 23:00:38.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.859" endtime="20201115 23:00:38.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.855" endtime="20201115 23:00:38.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.853" endtime="20201115 23:00:38.400"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.405" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.426" endtime="20201115 23:00:38.446"></status>
</kw>
<msg timestamp="20201115 23:00:38.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.423" endtime="20201115 23:00:38.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.450" endtime="20201115 23:00:38.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.456" endtime="20201115 23:00:38.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.416" endtime="20201115 23:00:38.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.410" endtime="20201115 23:00:38.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.479" endtime="20201115 23:00:38.814"></status>
</kw>
<msg timestamp="20201115 23:00:38.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044640375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044745472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.476" endtime="20201115 23:00:38.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044640375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044745472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.824" endtime="20201115 23:00:38.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.842" endtime="20201115 23:00:38.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.469" endtime="20201115 23:00:38.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.464" endtime="20201115 23:00:38.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.859" level="INFO">${RESULT} = [{'time': 0.044745472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010509699999999844, 'source_diff': 0.00010509699999999844}, {'time': 0.044879792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:38.850" endtime="20201115 23:00:38.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.892" level="INFO">${ACCURACY} = {'source_diff': [0.00010509699999999844, 0.00010508399999999835, 0.00010494499999999518, 0.0001050689999999993, 0.00010500000000000093, 0.00010502800000000007, 0.000105514000000001, 0.0001062920000000...</msg>
<status status="PASS" starttime="20201115 23:00:38.861" endtime="20201115 23:00:38.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.902" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.900" endtime="20201115 23:00:38.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.907" level="INFO">VALUE: [0.00010509699999999844, 0.00010508399999999835, 0.00010494499999999518, 0.0001050689999999993, 0.00010500000000000093, 0.00010502800000000007, 0.000105514000000001, 0.00010629200000000089, 0.00010609699999999944, 0.0001057219999999956, 0.00010519399999999596, 0.0001054019999999975, 0.0001060560000000002, 0.0001053339999999986, 0.00010509699999999844, 0.00010513800000000462, 0.00010497200000000179, 0.00010483299999999862, 0.000105208999999995, 0.00010513899999999715, 0.00010641599999999807, 0.00010536199999999774, 0.00010566700000000373, 0.00010547200000000229, 0.000105514000000001, 0.00010637499999999883, 0.00010658300000000037, 0.00010477799999999982, 0.00010644499999999668, 0.0001057360000000021, 0.00010526400000000075, 0.00010608399999999935, 0.00010562499999999808, 0.00010498600000000136, 0.00010604100000000116, 0.00010494400000000265, 0.00010497300000000126, 0.00010640299999999797, 0.00010534699999999869, 0.00010480599999999896, 0.00010591599999999757, 0.00010548600000000186, 0.00010529099999999347, 0.00010480499999999948, 0.0001057360000000021, 0.00010658300000000037, 0.0001053610000000052, 0.00010512499999999758, 0.00010484799999999767, 0.00010545900000000219]</msg>
<status status="PASS" starttime="20201115 23:00:38.905" endtime="20201115 23:00:38.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.893" endtime="20201115 23:00:38.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.917" endtime="20201115 23:00:38.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.925" endtime="20201115 23:00:38.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.921" endtime="20201115 23:00:38.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.912" endtime="20201115 23:00:38.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.406" endtime="20201115 23:00:38.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.402" endtime="20201115 23:00:38.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.401" endtime="20201115 23:00:38.951"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.978" endtime="20201115 23:00:39.000"></status>
</kw>
<msg timestamp="20201115 23:00:39.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.975" endtime="20201115 23:00:39.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.004" endtime="20201115 23:00:39.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.010" endtime="20201115 23:00:39.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.968" endtime="20201115 23:00:39.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.962" endtime="20201115 23:00:39.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.033" endtime="20201115 23:00:39.377"></status>
</kw>
<msg timestamp="20201115 23:00:39.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0446465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044752375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:39.029" endtime="20201115 23:00:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0446465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044752375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:39.386" endtime="20201115 23:00:39.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.404" endtime="20201115 23:00:39.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.022" endtime="20201115 23:00:39.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.018" endtime="20201115 23:00:39.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.423" level="INFO">${RESULT} = [{'time': 0.044752375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010587499999999833, 'source_diff': 0.00010587499999999833}, {'time': 0.044889736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.414" endtime="20201115 23:00:39.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.452" level="INFO">${ACCURACY} = {'source_diff': [0.00010587499999999833, 0.00010666699999999779, 0.00010619499999999643, 0.00010618099999999686, 0.00010598600000000236, 0.00010726400000000275, 0.00010659799999999942, 0.0001058199999...</msg>
<status status="PASS" starttime="20201115 23:00:39.425" endtime="20201115 23:00:39.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.463" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.461" endtime="20201115 23:00:39.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.469" level="INFO">VALUE: [0.00010587499999999833, 0.00010666699999999779, 0.00010619499999999643, 0.00010618099999999686, 0.00010598600000000236, 0.00010726400000000275, 0.00010659799999999942, 0.00010581999999999953, 0.00010577800000000082, 0.00010665299999999822, 0.00010645799999999678, 0.00010590299999999747, 0.0001058339999999991, 0.00010640300000000491, 0.00010647199999999635, 0.00010591599999999757, 0.00010691599999999857, 0.00010691700000000498, 0.0001063889999999984, 0.00010762500000000008, 0.00010743099999999811, 0.00010648599999999592, 0.00010590299999999747, 0.00010587499999999833, 0.00010724999999999624, 0.00010663899999999865, 0.00010745800000000472, 0.00010655500000000123, 0.00010644399999999721, 0.00010662499999999908, 0.00010693000000000508, 0.00010604200000000064, 0.00010584699999999919, 0.00010708400000000035, 0.00010620900000000294, 0.0001065560000000007, 0.00010591700000000398, 0.00010673699999999564, 0.00010662499999999908, 0.00010645799999999678, 0.0001061940000000039, 0.00010618000000000433, 0.0001060560000000002, 0.00010645800000000372, 0.00010617999999999739, 0.0001060690000000003, 0.00010586199999999824, 0.00010676400000000225, 0.00010634699999999969, 0.00010650000000000243]</msg>
<status status="PASS" starttime="20201115 23:00:39.466" endtime="20201115 23:00:39.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.454" endtime="20201115 23:00:39.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.478" endtime="20201115 23:00:39.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.486" endtime="20201115 23:00:39.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.482" endtime="20201115 23:00:39.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.473" endtime="20201115 23:00:39.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.958" endtime="20201115 23:00:39.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.954" endtime="20201115 23:00:39.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.952" endtime="20201115 23:00:39.513"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.518" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.539" endtime="20201115 23:00:39.562"></status>
</kw>
<msg timestamp="20201115 23:00:39.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.536" endtime="20201115 23:00:39.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.566" endtime="20201115 23:00:39.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.573" endtime="20201115 23:00:39.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.529" endtime="20201115 23:00:39.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.523" endtime="20201115 23:00:39.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.596" endtime="20201115 23:00:39.941"></status>
</kw>
<msg timestamp="20201115 23:00:39.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044720056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044827472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.593" endtime="20201115 23:00:39.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044720056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044827472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.951" endtime="20201115 23:00:39.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.969" endtime="20201115 23:00:39.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.586" endtime="20201115 23:00:39.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.581" endtime="20201115 23:00:39.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.986" level="INFO">${RESULT} = [{'time': 0.044827472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010741599999999907, 'source_diff': 0.00010741599999999907}, {'time': 0.044966875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:39.977" endtime="20201115 23:00:39.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.021" level="INFO">${ACCURACY} = {'source_diff': [0.00010741599999999907, 0.00010745800000000472, 0.00010859700000000194, 0.00010774999999999674, 0.00010732000000000103, 0.00010716699999999829, 0.00010687499999999933, 0.0001072359999...</msg>
<status status="PASS" starttime="20201115 23:00:39.993" endtime="20201115 23:00:40.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.032" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.030" endtime="20201115 23:00:40.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.037" level="INFO">VALUE: [0.00010741599999999907, 0.00010745800000000472, 0.00010859700000000194, 0.00010774999999999674, 0.00010732000000000103, 0.00010716699999999829, 0.00010687499999999933, 0.00010723599999999667, 0.00010726400000000275, 0.0001068889999999989, 0.0001070140000000025, 0.00010791699999999904, 0.00010722300000000351, 0.00010719500000000437, 0.00010762500000000008, 0.00010684700000000019, 0.00010727800000000232, 0.00010697199999999685, 0.00010681900000000105, 0.00010772299999999707, 0.00010691699999999804, 0.00010719399999999796, 0.00010680600000000096, 0.00010843099999999911, 0.00010730600000000146, 0.00010748600000000386, 0.00010699999999999599, 0.00010775000000000368, 0.00010859700000000194, 0.0001077360000000041, 0.00010727800000000232, 0.00010736199999999974, 0.0001068340000000001, 0.00010695799999999728, 0.00010765199999999975, 0.00010762500000000008, 0.00010712499999999958, 0.0001080419999999957, 0.00010693100000000455, 0.00010727700000000284, 0.00010768099999999836, 0.00010752699999999615, 0.0001076810000000053, 0.00010704100000000216, 0.00010811100000000101, 0.00010733300000000112, 0.00010754200000000214, 0.00010744499999999768, 0.00010729200000000189, 0.00010841699999999954]</msg>
<status status="PASS" starttime="20201115 23:00:40.034" endtime="20201115 23:00:40.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.023" endtime="20201115 23:00:40.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.046" endtime="20201115 23:00:40.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.054" endtime="20201115 23:00:40.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.050" endtime="20201115 23:00:40.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.041" endtime="20201115 23:00:40.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.519" endtime="20201115 23:00:40.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.515" endtime="20201115 23:00:40.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.514" endtime="20201115 23:00:40.081"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.107" endtime="20201115 23:00:40.129"></status>
</kw>
<msg timestamp="20201115 23:00:40.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.104" endtime="20201115 23:00:40.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.132" endtime="20201115 23:00:40.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.139" endtime="20201115 23:00:40.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.097" endtime="20201115 23:00:40.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.091" endtime="20201115 23:00:40.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.161" endtime="20201115 23:00:40.503"></status>
</kw>
<msg timestamp="20201115 23:00:40.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044654028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044762292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.158" endtime="20201115 23:00:40.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044654028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044762292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.512" endtime="20201115 23:00:40.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.531" endtime="20201115 23:00:40.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.151" endtime="20201115 23:00:40.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.147" endtime="20201115 23:00:40.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.550" level="INFO">${RESULT} = [{'time': 0.044762292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010826400000000375, 'source_diff': 0.00010826400000000375}, {'time': 0.044899625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:40.541" endtime="20201115 23:00:40.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.580" level="INFO">${ACCURACY} = {'source_diff': [0.00010826400000000375, 0.00010797199999999785, 0.00010959700000000294, 0.00010912500000000158, 0.00010786100000000076, 0.00010802800000000307, 0.0001078340000000011, 0.00010805600000...</msg>
<status status="PASS" starttime="20201115 23:00:40.552" endtime="20201115 23:00:40.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.591" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.589" endtime="20201115 23:00:40.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.596" level="INFO">VALUE: [0.00010826400000000375, 0.00010797199999999785, 0.00010959700000000294, 0.00010912500000000158, 0.00010786100000000076, 0.00010802800000000307, 0.0001078340000000011, 0.0001080560000000022, 0.00010862500000000108, 0.00010849999999999749, 0.00010865300000000022, 0.00010820799999999853, 0.00010800000000000393, 0.00010831999999999509, 0.00010879099999999697, 0.00010872200000000554, 0.00010867999999999989, 0.00010845799999999878, 0.00010820900000000494, 0.0001090419999999967, 0.00010795899999999775, 0.00010837500000000083, 0.0001080140000000035, 0.0001087219999999986, 0.00010958300000000337, 0.00010816699999999929, 0.00010791699999999904, 0.0001078340000000011, 0.0001085560000000027, 0.00010829100000000341, 0.00010894399999999971, 0.00010815299999999972, 0.00010776300000000377, 0.00010837499999999389, 0.00010815299999999972, 0.00010786100000000076, 0.00010944400000000021, 0.00010816599999999982, 0.00010820800000000547, 0.00010843099999999911, 0.00010833300000000212, 0.00010815299999999972, 0.00010786100000000076, 0.0001087089999999985, 0.00010816599999999982, 0.00010866600000000032, 0.00010861100000000151, 0.00010849999999999749, 0.00010945899999999925, 0.00010790299999999947]</msg>
<status status="PASS" starttime="20201115 23:00:40.593" endtime="20201115 23:00:40.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.582" endtime="20201115 23:00:40.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.605" endtime="20201115 23:00:40.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.613" endtime="20201115 23:00:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.609" endtime="20201115 23:00:40.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.601" endtime="20201115 23:00:40.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.087" endtime="20201115 23:00:40.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.083" endtime="20201115 23:00:40.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.081" endtime="20201115 23:00:40.640"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.667" endtime="20201115 23:00:40.687"></status>
</kw>
<msg timestamp="20201115 23:00:40.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.664" endtime="20201115 23:00:40.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.691" endtime="20201115 23:00:40.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.697" endtime="20201115 23:00:40.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.656" endtime="20201115 23:00:40.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.650" endtime="20201115 23:00:40.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.721" endtime="20201115 23:00:41.059"></status>
</kw>
<msg timestamp="20201115 23:00:41.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045044, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045153625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:40.717" endtime="20201115 23:00:41.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045044, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045153625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:41.068" endtime="20201115 23:00:41.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.086" endtime="20201115 23:00:41.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.710" endtime="20201115 23:00:41.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.705" endtime="20201115 23:00:41.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.104" level="INFO">${RESULT} = [{'time': 0.045153625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010962500000000208, 'source_diff': 0.00010962500000000208}, {'time': 0.045296028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.095" endtime="20201115 23:00:41.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.136" level="INFO">${ACCURACY} = {'source_diff': [0.00010962500000000208, 0.00011027800000000532, 0.00010965199999999481, 0.00010947199999999935, 0.00010997199999999985, 0.00010934700000000269, 0.00010918099999999986, 0.0001089030000...</msg>
<status status="PASS" starttime="20201115 23:00:41.106" endtime="20201115 23:00:41.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.147" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.145" endtime="20201115 23:00:41.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.152" level="INFO">VALUE: [0.00010962500000000208, 0.00011027800000000532, 0.00010965199999999481, 0.00010947199999999935, 0.00010997199999999985, 0.00010934700000000269, 0.00010918099999999986, 0.00010890300000000047, 0.00010962499999999514, 0.00010940299999999403, 0.0001097360000000061, 0.00010949999999999849, 0.00010920800000000647, 0.00010926399999999781, 0.00011031899999999761, 0.00010967999999999395, 0.00010919399999999996, 0.00010891700000000004, 0.00010883300000000262, 0.00010908399999999541, 0.00011058400000000385, 0.00010948599999999892, 0.00010966700000000079, 0.00010886100000000176, 0.00010979099999999797, 0.00010937500000000183, 0.00010912500000000158, 0.00010913900000000115, 0.00010968100000000036, 0.00010981900000000405, 0.00010941700000000054, 0.0001095419999999972, 0.00010966700000000079, 0.00010957000000000328, 0.0001092360000000056, 0.0001088890000000009, 0.00010900000000000493, 0.0001092219999999991, 0.000109514000000005, 0.00010958399999999591, 0.00010951399999999806, 0.0001093890000000014, 0.00010897199999999885, 0.00010948599999999892, 0.00010937500000000183, 0.00010886099999999482, 0.00010973599999999917, 0.00010900000000000493, 0.0001093890000000014, 0.0001090560000000032]</msg>
<status status="PASS" starttime="20201115 23:00:41.149" endtime="20201115 23:00:41.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.138" endtime="20201115 23:00:41.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.161" endtime="20201115 23:00:41.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.169" endtime="20201115 23:00:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.165" endtime="20201115 23:00:41.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.157" endtime="20201115 23:00:41.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.647" endtime="20201115 23:00:41.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.643" endtime="20201115 23:00:41.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.641" endtime="20201115 23:00:41.196"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.223" endtime="20201115 23:00:41.244"></status>
</kw>
<msg timestamp="20201115 23:00:41.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.220" endtime="20201115 23:00:41.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.247" endtime="20201115 23:00:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.254" endtime="20201115 23:00:41.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.212" endtime="20201115 23:00:41.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.207" endtime="20201115 23:00:41.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.277" endtime="20201115 23:00:41.611"></status>
</kw>
<msg timestamp="20201115 23:00:41.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045262236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045373042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.274" endtime="20201115 23:00:41.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045262236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045373042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.620" endtime="20201115 23:00:41.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.639" endtime="20201115 23:00:41.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.267" endtime="20201115 23:00:41.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.262" endtime="20201115 23:00:41.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.658" level="INFO">${RESULT} = [{'time': 0.045373042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011080600000000496, 'source_diff': 0.00011080600000000496}, {'time': 0.045514458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:41.649" endtime="20201115 23:00:41.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.687" level="INFO">${ACCURACY} = {'source_diff': [0.00011080600000000496, 0.00011076399999999931, 0.00011080600000000496, 0.00011018100000000086, 0.00011061199999999605, 0.00011162500000000408, 0.00010987499999999539, 0.0001106669999...</msg>
<status status="PASS" starttime="20201115 23:00:41.660" endtime="20201115 23:00:41.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.698" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.696" endtime="20201115 23:00:41.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.704" level="INFO">VALUE: [0.00011080600000000496, 0.00011076399999999931, 0.00011080600000000496, 0.00011018100000000086, 0.00011061199999999605, 0.00011162500000000408, 0.00010987499999999539, 0.00011066699999999485, 0.00011058300000000437, 0.0001103890000000024, 0.00011013800000000268, 0.00011008299999999693, 0.00011019500000000043, 0.00011044400000000121, 0.00011062500000000308, 0.00010999999999999899, 0.00010984699999999625, 0.00011038899999999546, 0.00010987500000000233, 0.00011065300000000222, 0.00010995899999999975, 0.00010984799999999573, 0.00011079199999999845, 0.00010990300000000147, 0.00011040199999999556, 0.00011026400000000575, 0.00011061200000000299, 0.000110514000000006, 0.00011034700000000369, 0.00011074999999999974, 0.00010986100000000276, 0.00011144399999999527, 0.00011073600000000017, 0.00011040300000000197, 0.00011056999999999734, 0.00010999999999999899, 0.00011143100000000211, 0.0001100969999999965, 0.00010994500000000018, 0.00010983300000000362, 0.00010993100000000061, 0.00011068100000000136, 0.00010981999999999659, 0.0001107090000000005, 0.00010982000000000353, 0.00011037500000000283, 0.00011054099999999872, 0.00010986200000000224, 0.00010995800000000028, 0.0001100419999999977]</msg>
<status status="PASS" starttime="20201115 23:00:41.701" endtime="20201115 23:00:41.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.689" endtime="20201115 23:00:41.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.712" endtime="20201115 23:00:41.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.721" endtime="20201115 23:00:41.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.716" endtime="20201115 23:00:41.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.708" endtime="20201115 23:00:41.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.203" endtime="20201115 23:00:41.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.199" endtime="20201115 23:00:41.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.197" endtime="20201115 23:00:41.747"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.775" endtime="20201115 23:00:41.796"></status>
</kw>
<msg timestamp="20201115 23:00:41.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.772" endtime="20201115 23:00:41.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.799" endtime="20201115 23:00:41.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.805" endtime="20201115 23:00:41.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.764" endtime="20201115 23:00:41.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.758" endtime="20201115 23:00:41.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.829" endtime="20201115 23:00:42.167"></status>
</kw>
<msg timestamp="20201115 23:00:42.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045959792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.826" endtime="20201115 23:00:42.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045848625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045959792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.176" endtime="20201115 23:00:42.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.194" endtime="20201115 23:00:42.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.818" endtime="20201115 23:00:42.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.814" endtime="20201115 23:00:42.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.212" level="INFO">${RESULT} = [{'time': 0.045959792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011116700000000229, 'source_diff': 0.00011116700000000229}, {'time': 0.046104208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:42.204" endtime="20201115 23:00:42.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.242" level="INFO">${ACCURACY} = {'source_diff': [0.00011116700000000229, 0.00011181899999999911, 0.00011093099999999467, 0.00011166700000000279, 0.00011227800000000038, 0.00011099999999999999, 0.0001110549999999988, 0.00011158399999...</msg>
<status status="PASS" starttime="20201115 23:00:42.214" endtime="20201115 23:00:42.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.252" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.250" endtime="20201115 23:00:42.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.258" level="INFO">VALUE: [0.00011116700000000229, 0.00011181899999999911, 0.00011093099999999467, 0.00011166700000000279, 0.00011227800000000038, 0.00011099999999999999, 0.0001110549999999988, 0.00011158399999999791, 0.00011163799999999724, 0.00011133299999999818, 0.00011134699999999775, 0.00011215199999999731, 0.00011095900000000075, 0.00011147200000000135, 0.00011134700000000469, 0.00011219500000000243, 0.00011126399999999981, 0.0001115419999999992, 0.00011154099999999972, 0.0001117499999999938, 0.00011150000000000049, 0.00011156899999999886, 0.00011229199999999995, 0.00011161100000000451, 0.0001110419999999987, 0.00011086100000000376, 0.00011093099999999467, 0.00011154099999999972, 0.00011152799999999963, 0.00011111099999999707, 0.00011162499999999714, 0.00011083300000000462, 0.00011172299999999413, 0.0001114020000000035, 0.000111596999999998, 0.00011112499999999664, 0.00011084699999999725, 0.00011123600000000067, 0.00011141700000000254, 0.00011120800000000153, 0.00011141700000000254, 0.0001117090000000015, 0.00011131999999999809, 0.00011127799999999938, 0.00011163900000000365, 0.00011093000000000214, 0.00011148600000000092, 0.00011140300000000297, 0.00011113900000000315, 0.00011216599999999688]</msg>
<status status="PASS" starttime="20201115 23:00:42.255" endtime="20201115 23:00:42.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.244" endtime="20201115 23:00:42.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.266" endtime="20201115 23:00:42.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.275" endtime="20201115 23:00:42.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.270" endtime="20201115 23:00:42.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.262" endtime="20201115 23:00:42.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.754" endtime="20201115 23:00:42.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.750" endtime="20201115 23:00:42.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.748" endtime="20201115 23:00:42.302"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.328" endtime="20201115 23:00:42.349"></status>
</kw>
<msg timestamp="20201115 23:00:42.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.325" endtime="20201115 23:00:42.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.352" endtime="20201115 23:00:42.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.358" endtime="20201115 23:00:42.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.318" endtime="20201115 23:00:42.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.312" endtime="20201115 23:00:42.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.382" endtime="20201115 23:00:42.717"></status>
</kw>
<msg timestamp="20201115 23:00:42.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044651111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.379" endtime="20201115 23:00:42.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044651111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.726" endtime="20201115 23:00:42.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.744" endtime="20201115 23:00:42.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.371" endtime="20201115 23:00:42.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.367" endtime="20201115 23:00:42.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.763" level="INFO">${RESULT} = [{'time': 0.044763611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011250000000000149, 'source_diff': 0.00011250000000000149}, {'time': 0.044907042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:42.754" endtime="20201115 23:00:42.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.792" level="INFO">${ACCURACY} = {'source_diff': [0.00011250000000000149, 0.00011233399999999866, 0.00011238899999999746, 0.00011218099999999592, 0.00011184699999999825, 0.0001123749999999979, 0.00011183299999999868, 0.00011186099999...</msg>
<status status="PASS" starttime="20201115 23:00:42.765" endtime="20201115 23:00:42.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.803" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.801" endtime="20201115 23:00:42.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.808" level="INFO">VALUE: [0.00011250000000000149, 0.00011233399999999866, 0.00011238899999999746, 0.00011218099999999592, 0.00011184699999999825, 0.0001123749999999979, 0.00011183299999999868, 0.00011186099999999782, 0.00011269400000000346, 0.00011269399999999652, 0.00011272199999999566, 0.00011240300000000397, 0.00011202700000000065, 0.00011277800000000088, 0.00011256899999999986, 0.00011261099999999857, 0.00011259799999999848, 0.00011198600000000142, 0.00011233399999999866, 0.0001118890000000039, 0.00011256999999999934, 0.00011248599999999498, 0.00011244500000000268, 0.00011230500000000004, 0.00011216700000000329, 0.00011200000000000099, 0.00011273600000000217, 0.00011233299999999918, 0.00011265299999999728, 0.00011258299999999943, 0.00011247200000000235, 0.00011200000000000099, 0.00011313899999999821, 0.00011250000000000149, 0.00011344400000000421, 0.00011215299999999678, 0.00011347200000000335, 0.00011252800000000063, 0.0001127220000000026, 0.00011262500000000508, 0.00011259799999999848, 0.00011251400000000106, 0.00011208299999999893, 0.00011231899999999961, 0.00011361099999999957, 0.00011277800000000088, 0.0001122220000000021, 0.00011248600000000192, 0.00011252800000000063, 0.00011233399999999866]</msg>
<status status="PASS" starttime="20201115 23:00:42.805" endtime="20201115 23:00:42.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.794" endtime="20201115 23:00:42.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.818" endtime="20201115 23:00:42.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.826" endtime="20201115 23:00:42.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.821" endtime="20201115 23:00:42.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.813" endtime="20201115 23:00:42.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.308" endtime="20201115 23:00:42.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.304" endtime="20201115 23:00:42.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.302" endtime="20201115 23:00:42.852"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.857" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.879" endtime="20201115 23:00:42.899"></status>
</kw>
<msg timestamp="20201115 23:00:42.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.875" endtime="20201115 23:00:42.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.903" endtime="20201115 23:00:42.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.909" endtime="20201115 23:00:42.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.868" endtime="20201115 23:00:42.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.862" endtime="20201115 23:00:42.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.933" endtime="20201115 23:00:43.267"></status>
</kw>
<msg timestamp="20201115 23:00:43.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044523167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044636583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.930" endtime="20201115 23:00:43.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044523167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044636583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.276" endtime="20201115 23:00:43.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.294" endtime="20201115 23:00:43.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.923" endtime="20201115 23:00:43.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.918" endtime="20201115 23:00:43.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.311" level="INFO">${RESULT} = [{'time': 0.044636583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011341599999999813, 'source_diff': 0.00011341599999999813}, {'time': 0.044783028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.302" endtime="20201115 23:00:43.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.343" level="INFO">${ACCURACY} = {'source_diff': [0.00011341599999999813, 0.00011287500000000533, 0.0001135550000000013, 0.00011366699999999785, 0.00011316599999999788, 0.00011336100000000626, 0.00011463899999999971, 0.00011467999999...</msg>
<status status="PASS" starttime="20201115 23:00:43.313" endtime="20201115 23:00:43.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.354" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.352" endtime="20201115 23:00:43.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.360" level="INFO">VALUE: [0.00011341599999999813, 0.00011287500000000533, 0.0001135550000000013, 0.00011366699999999785, 0.00011316599999999788, 0.00011336100000000626, 0.00011463899999999971, 0.00011467999999999895, 0.00011463899999999971, 0.00011379099999999504, 0.00011465300000000622, 0.00011376300000000283, 0.00011311099999999907, 0.00011316699999999735, 0.00011376400000000231, 0.00011365299999999828, 0.00011340199999999856, 0.00011341700000000454, 0.00011366699999999785, 0.00011323600000000267, 0.00011333399999999966, 0.00011322300000000257, 0.00011319500000000343, 0.00011370799999999709, 0.00011286099999999882, 0.00011281900000000011, 0.00011369499999999699, 0.0001132629999999954, 0.00011345799999999684, 0.00011329100000000147, 0.00011397199999999691, 0.00011331900000000061, 0.0001135550000000013, 0.00011284699999999925, 0.00011373599999999623, 0.00011290299999999753, 0.00011391700000000504, 0.00011298600000000242, 0.00011348600000000292, 0.00011332000000000009, 0.0001133619999999988, 0.0001130969999999995, 0.00011291599999999763, 0.00011277800000000088, 0.00011362499999999914, 0.00011450000000000349, 0.00011463899999999971, 0.00011316699999999735, 0.00011354100000000172, 0.00011373599999999623]</msg>
<status status="PASS" starttime="20201115 23:00:43.356" endtime="20201115 23:00:43.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.345" endtime="20201115 23:00:43.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.369" endtime="20201115 23:00:43.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.377" endtime="20201115 23:00:43.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.373" endtime="20201115 23:00:43.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.364" endtime="20201115 23:00:43.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.859" endtime="20201115 23:00:43.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.855" endtime="20201115 23:00:43.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.853" endtime="20201115 23:00:43.403"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.408" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.430" endtime="20201115 23:00:43.450"></status>
</kw>
<msg timestamp="20201115 23:00:43.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.426" endtime="20201115 23:00:43.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.453" endtime="20201115 23:00:43.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.460" endtime="20201115 23:00:43.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.419" endtime="20201115 23:00:43.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.414" endtime="20201115 23:00:43.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.482" endtime="20201115 23:00:43.812"></status>
</kw>
<msg timestamp="20201115 23:00:43.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044322444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.479" endtime="20201115 23:00:43.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044322444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044436931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.822" endtime="20201115 23:00:43.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.840" endtime="20201115 23:00:43.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.472" endtime="20201115 23:00:43.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.468" endtime="20201115 23:00:43.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.858" level="INFO">${RESULT} = [{'time': 0.044436931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011448699999999645, 'source_diff': 0.00011448699999999645}, {'time': 0.044584375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:43.850" endtime="20201115 23:00:43.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.889" level="INFO">${ACCURACY} = {'source_diff': [0.00011448699999999645, 0.00011427800000000238, 0.00011451399999999612, 0.00011459800000000048, 0.00011407000000000084, 0.00011425000000000324, 0.00011423600000000367, 0.0001144439999...</msg>
<status status="PASS" starttime="20201115 23:00:43.861" endtime="20201115 23:00:43.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.900" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.897" endtime="20201115 23:00:43.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.905" level="INFO">VALUE: [0.00011448699999999645, 0.00011427800000000238, 0.00011451399999999612, 0.00011459800000000048, 0.00011407000000000084, 0.00011425000000000324, 0.00011423600000000367, 0.00011444399999999827, 0.00011390299999999853, 0.00011467999999999895, 0.00011544399999999927, 0.00011412499999999964, 0.00011412499999999964, 0.0001139169999999981, 0.00011530500000000304, 0.0001147499999999968, 0.00011468099999999842, 0.00011391599999999863, 0.00011388799999999949, 0.0001139169999999981, 0.00011441599999999913, 0.00011416599999999888, 0.00011440299999999903, 0.00011398600000000342, 0.00011515299999999978, 0.00011415300000000572, 0.00011469499999999799, 0.00011456899999999492, 0.00011472199999999766, 0.00011444500000000468, 0.00011402700000000265, 0.00011416599999999888, 0.00011438899999999946, 0.00011449999999999655, 0.00011436100000000032, 0.00011411199999999955, 0.00011452800000000263, 0.00011408300000000093, 0.00011379099999999504, 0.00011382000000000059, 0.00011417999999999845, 0.00011452800000000263, 0.0001139299999999982, 0.00011394399999999777, 0.00011416699999999835, 0.00011413899999999921, 0.00011422199999999716, 0.00011388899999999896, 0.00011419499999999749, 0.00011466699999999885]</msg>
<status status="PASS" starttime="20201115 23:00:43.902" endtime="20201115 23:00:43.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.891" endtime="20201115 23:00:43.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.914" endtime="20201115 23:00:43.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.922" endtime="20201115 23:00:43.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.917" endtime="20201115 23:00:43.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.909" endtime="20201115 23:00:43.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.410" endtime="20201115 23:00:43.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.406" endtime="20201115 23:00:43.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.404" endtime="20201115 23:00:43.948"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.954" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.976" endtime="20201115 23:00:43.997"></status>
</kw>
<msg timestamp="20201115 23:00:43.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.973" endtime="20201115 23:00:43.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.000" endtime="20201115 23:00:44.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.006" endtime="20201115 23:00:44.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.966" endtime="20201115 23:00:44.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.960" endtime="20201115 23:00:44.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.029" endtime="20201115 23:00:44.361"></status>
</kw>
<msg timestamp="20201115 23:00:44.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045936986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.026" endtime="20201115 23:00:44.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045936986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.370" endtime="20201115 23:00:44.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.389" endtime="20201115 23:00:44.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.019" endtime="20201115 23:00:44.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.014" endtime="20201115 23:00:44.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.406" level="INFO">${RESULT} = [{'time': 0.046052736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001157499999999978, 'source_diff': 0.0001157499999999978}, {'time': 0.046199153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.397" endtime="20201115 23:00:44.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.436" level="INFO">${ACCURACY} = {'source_diff': [0.0001157499999999978, 0.00011483400000000116, 0.00011573599999999823, 0.00011575000000000474, 0.00011569399999999952, 0.00011515299999999978, 0.00011508300000000193, 0.00011508400000...</msg>
<status status="PASS" starttime="20201115 23:00:44.408" endtime="20201115 23:00:44.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.447" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.444" endtime="20201115 23:00:44.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.452" level="INFO">VALUE: [0.0001157499999999978, 0.00011483400000000116, 0.00011573599999999823, 0.00011575000000000474, 0.00011569399999999952, 0.00011515299999999978, 0.00011508300000000193, 0.00011508400000000141, 0.00011484700000000125, 0.00011597199999999891, 0.00011494399999999877, 0.00011645799999999984, 0.00011480500000000254, 0.00011569499999999899, 0.00011494499999999824, 0.0001148890000000069, 0.00011558300000000243, 0.00011501399999999662, 0.00011515299999999978, 0.00011540300000000003, 0.00011661100000000257, 0.00011501399999999662, 0.0001164300000000007, 0.00011540200000000056, 0.00011645799999999984, 0.00011522199999999816, 0.0001150420000000027, 0.00011576399999999737, 0.00011519399999999902, 0.00011551399999999712, 0.00011511100000000107, 0.00011558400000000191, 0.00011558400000000191, 0.00011552800000000363, 0.0001150550000000028, 0.00011552799999999669, 0.0001147629999999969, 0.00011568100000000636, 0.00011640300000000103, 0.00011505499999999586, 0.0001156249999999942, 0.0001157499999999978, 0.00011645899999999931, 0.00011547199999999841, 0.00011631999999999615, 0.00011566699999999985, 0.00011538900000000046, 0.00011519499999999849, 0.000115597000000002, 0.0001148750000000004]</msg>
<status status="PASS" starttime="20201115 23:00:44.449" endtime="20201115 23:00:44.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.437" endtime="20201115 23:00:44.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.460" endtime="20201115 23:00:44.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.468" endtime="20201115 23:00:44.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.464" endtime="20201115 23:00:44.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.456" endtime="20201115 23:00:44.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.955" endtime="20201115 23:00:44.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.951" endtime="20201115 23:00:44.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.949" endtime="20201115 23:00:44.495"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.521" endtime="20201115 23:00:44.542"></status>
</kw>
<msg timestamp="20201115 23:00:44.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.518" endtime="20201115 23:00:44.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.546" endtime="20201115 23:00:44.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.552" endtime="20201115 23:00:44.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.511" endtime="20201115 23:00:44.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.505" endtime="20201115 23:00:44.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.576" endtime="20201115 23:00:44.907"></status>
</kw>
<msg timestamp="20201115 23:00:44.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044771903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044887764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.571" endtime="20201115 23:00:44.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044771903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044887764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.916" endtime="20201115 23:00:44.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.934" endtime="20201115 23:00:44.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.564" endtime="20201115 23:00:44.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.560" endtime="20201115 23:00:44.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.953" level="INFO">${RESULT} = [{'time': 0.044887764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011586099999999488, 'source_diff': 0.00011586099999999488}, {'time': 0.045033194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:44.944" endtime="20201115 23:00:44.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.983" level="INFO">${ACCURACY} = {'source_diff': [0.00011586099999999488, 0.00011633299999999624, 0.00011670800000000009, 0.00011598599999999848, 0.00011673599999999923, 0.00011588900000000096, 0.00011584700000000225, 0.0001161520000...</msg>
<status status="PASS" starttime="20201115 23:00:44.955" endtime="20201115 23:00:44.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.994" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.992" endtime="20201115 23:00:44.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.000" level="INFO">VALUE: [0.00011586099999999488, 0.00011633299999999624, 0.00011670800000000009, 0.00011598599999999848, 0.00011673599999999923, 0.00011588900000000096, 0.00011584700000000225, 0.00011615200000000131, 0.00011620899999999906, 0.0001164170000000006, 0.0001159300000000002, 0.00011663899999999477, 0.00011633400000000266, 0.00011736100000000332, 0.00011676399999999837, 0.00011659699999999606, 0.00011634700000000275, 0.0001162629999999984, 0.0001162499999999983, 0.00011652699999999822, 0.00011647299999999888, 0.00011665300000000128, 0.00011638900000000146, 0.00011676399999999837, 0.00011583299999999574, 0.0001163750000000019, 0.00011602799999999719, 0.00011672199999999966, 0.00011679099999999804, 0.00011652799999999769, 0.00011608300000000293, 0.00011633400000000266, 0.00011634799999999529, 0.00011606899999999643, 0.00011618099999999992, 0.00011598600000000542, 0.00011640300000000103, 0.00011577799999999694, 0.0001165420000000042, 0.00011616700000000035, 0.00011707000000000384, 0.0001162499999999983, 0.00011587499999999445, 0.00011633300000000318, 0.00011609800000000198, 0.00011629100000000447, 0.00011581899999999618, 0.00011668100000000042, 0.00011647199999999941, 0.0001167499999999988]</msg>
<status status="PASS" starttime="20201115 23:00:44.997" endtime="20201115 23:00:45.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.985" endtime="20201115 23:00:45.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.009" endtime="20201115 23:00:45.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.017" endtime="20201115 23:00:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.013" endtime="20201115 23:00:45.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.004" endtime="20201115 23:00:45.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.501" endtime="20201115 23:00:45.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.497" endtime="20201115 23:00:45.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.496" endtime="20201115 23:00:45.043"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.048" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.070" endtime="20201115 23:00:45.090"></status>
</kw>
<msg timestamp="20201115 23:00:45.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.067" endtime="20201115 23:00:45.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.094" endtime="20201115 23:00:45.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.107" endtime="20201115 23:00:45.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.059" endtime="20201115 23:00:45.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.054" endtime="20201115 23:00:45.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.130" endtime="20201115 23:00:45.463"></status>
</kw>
<msg timestamp="20201115 23:00:45.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.126" endtime="20201115 23:00:45.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044406875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044524681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.472" endtime="20201115 23:00:45.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.490" endtime="20201115 23:00:45.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.119" endtime="20201115 23:00:45.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.115" endtime="20201115 23:00:45.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.507" level="INFO">${RESULT} = [{'time': 0.044524681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011780600000000502, 'source_diff': 0.00011780600000000502}, {'time': 0.044670083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:45.499" endtime="20201115 23:00:45.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.539" level="INFO">${ACCURACY} = {'source_diff': [0.00011780600000000502, 0.00011737499999999595, 0.00011694500000000024, 0.00011745900000000031, 0.00011722200000000016, 0.00011761099999999663, 0.00011747200000000041, 0.0001171660000...</msg>
<status status="PASS" starttime="20201115 23:00:45.509" endtime="20201115 23:00:45.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.550" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.548" endtime="20201115 23:00:45.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.556" level="INFO">VALUE: [0.00011780600000000502, 0.00011737499999999595, 0.00011694500000000024, 0.00011745900000000031, 0.00011722200000000016, 0.00011761099999999663, 0.00011747200000000041, 0.00011716600000000188, 0.00011847199999999447, 0.00011734700000000375, 0.00011718100000000092, 0.0001169300000000012, 0.00011845900000000131, 0.00011847199999999447, 0.00011756899999999793, 0.00011776399999999937, 0.000118082999999998, 0.00011777699999999947, 0.00011763900000000271, 0.00011777800000000588, 0.00011716600000000188, 0.00011747200000000041, 0.00011813900000000321, 0.00011715300000000178, 0.0001186249999999972, 0.0001172629999999994, 0.00011688900000000196, 0.00011740300000000203, 0.00011720900000000006, 0.00011748599999999998, 0.00011812500000000364, 0.00011687499999999545, 0.00011762500000000314, 0.000117695000000001, 0.0001174300000000017, 0.00011745800000000084, 0.00011684700000000325, 0.0001175550000000053, 0.0001168750000000024, 0.00011766700000000185, 0.0001182500000000003, 0.00011697299999999938, 0.00011845800000000184, 0.00011695800000000034, 0.00011699999999999905, 0.00011716700000000135, 0.00011779200000000545, 0.0001184579999999949, 0.0001177499999999998, 0.00011768100000000142]</msg>
<status status="PASS" starttime="20201115 23:00:45.553" endtime="20201115 23:00:45.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.541" endtime="20201115 23:00:45.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.565" endtime="20201115 23:00:45.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.573" endtime="20201115 23:00:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.568" endtime="20201115 23:00:45.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.560" endtime="20201115 23:00:45.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.050" endtime="20201115 23:00:45.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.046" endtime="20201115 23:00:45.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.044" endtime="20201115 23:00:45.599"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.626" endtime="20201115 23:00:45.647"></status>
</kw>
<msg timestamp="20201115 23:00:45.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.623" endtime="20201115 23:00:45.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.650" endtime="20201115 23:00:45.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.657" endtime="20201115 23:00:45.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.616" endtime="20201115 23:00:45.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.609" endtime="20201115 23:00:45.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.680" endtime="20201115 23:00:46.012"></status>
</kw>
<msg timestamp="20201115 23:00:46.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045384889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.676" endtime="20201115 23:00:46.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045384889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.021" endtime="20201115 23:00:46.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.040" endtime="20201115 23:00:46.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.669" endtime="20201115 23:00:46.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.665" endtime="20201115 23:00:46.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.058" level="INFO">${RESULT} = [{'time': 0.045384889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011783299999999775, 'source_diff': 0.00011783299999999775}, {'time': 0.045533306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:46.050" endtime="20201115 23:00:46.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.088" level="INFO">${ACCURACY} = {'source_diff': [0.00011783299999999775, 0.00011848700000000045, 0.0001180970000000045, 0.0001184170000000026, 0.00011877799999999994, 0.00011924999999999436, 0.00011927800000000044, 0.000119472000000...</msg>
<status status="PASS" starttime="20201115 23:00:46.060" endtime="20201115 23:00:46.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.098" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.096" endtime="20201115 23:00:46.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.104" level="INFO">VALUE: [0.00011783299999999775, 0.00011848700000000045, 0.0001180970000000045, 0.0001184170000000026, 0.00011877799999999994, 0.00011924999999999436, 0.00011927800000000044, 0.00011947200000000241, 0.00011876400000000037, 0.00011823600000000073, 0.00011784800000000373, 0.00011822200000000116, 0.00011947300000000188, 0.00011855499999999936, 0.00011804199999999876, 0.00011877799999999994, 0.00011898600000000148, 0.00011845900000000131, 0.0001185829999999985, 0.0001179300000000022, 0.00011813899999999627, 0.00011870899999999462, 0.00011869399999999558, 0.0001184029999999961, 0.00011913899999999727, 0.00011837499999999695, 0.00011783299999999775, 0.0001182500000000003, 0.00011788899999999602, 0.00011833399999999772, 0.00011847200000000141, 0.00011829199999999901, 0.00011862500000000414, 0.00011879199999999951, 0.00011804199999999876, 0.00011788899999999602, 0.00011844400000000227, 0.00011866700000000285, 0.00011852799999999969, 0.00011800000000000005, 0.00011898600000000148, 0.00011841699999999566, 0.00011947200000000241, 0.00011863899999999677, 0.00011788800000000349, 0.00011869499999999505, 0.00011866700000000285, 0.0001196249999999982, 0.00011836100000000432, 0.0001187630000000009]</msg>
<status status="PASS" starttime="20201115 23:00:46.101" endtime="20201115 23:00:46.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.089" endtime="20201115 23:00:46.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.112" endtime="20201115 23:00:46.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.121" endtime="20201115 23:00:46.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.116" endtime="20201115 23:00:46.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.108" endtime="20201115 23:00:46.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.606" endtime="20201115 23:00:46.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.602" endtime="20201115 23:00:46.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.600" endtime="20201115 23:00:46.147"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.152" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.174" endtime="20201115 23:00:46.195"></status>
</kw>
<msg timestamp="20201115 23:00:46.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.170" endtime="20201115 23:00:46.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.198" endtime="20201115 23:00:46.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.204" endtime="20201115 23:00:46.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.163" endtime="20201115 23:00:46.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.158" endtime="20201115 23:00:46.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.227" endtime="20201115 23:00:46.558"></status>
</kw>
<msg timestamp="20201115 23:00:46.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044368986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044489278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.224" endtime="20201115 23:00:46.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044368986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044489278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.567" endtime="20201115 23:00:46.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.585" endtime="20201115 23:00:46.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.217" endtime="20201115 23:00:46.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.212" endtime="20201115 23:00:46.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.602" level="INFO">${RESULT} = [{'time': 0.044489278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012029200000000101, 'source_diff': 0.00012029200000000101}, {'time': 0.04463975, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:46.594" endtime="20201115 23:00:46.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.632" level="INFO">${ACCURACY} = {'source_diff': [0.00012029200000000101, 0.00011972199999999572, 0.00011905600000000627, 0.00011887499999999745, 0.00011976400000000137, 0.0001194029999999971, 0.00011945800000000284, 0.00011900000000...</msg>
<status status="PASS" starttime="20201115 23:00:46.604" endtime="20201115 23:00:46.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.643" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.641" endtime="20201115 23:00:46.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.648" level="INFO">VALUE: [0.00012029200000000101, 0.00011972199999999572, 0.00011905600000000627, 0.00011887499999999745, 0.00011976400000000137, 0.0001194029999999971, 0.00011945800000000284, 0.00011900000000000105, 0.00012013899999999827, 0.00011888899999999702, 0.00011892999999999626, 0.00011908399999999847, 0.00011977800000000094, 0.00011936099999999839, 0.00011916700000000335, 0.00011883299999999875, 0.00011919400000000302, 0.0001190699999999989, 0.00011887499999999745, 0.00011916599999999694, 0.00011898599999999454, 0.00012050000000000255, 0.00011938899999999752, 0.00011974999999999486, 0.00011959699999999907, 0.00011942999999999676, 0.00011987499999999846, 0.00011956899999999993, 0.00011895800000000234, 0.00011963900000000471, 0.00012050000000000255, 0.00011940300000000403, 0.00012013900000000521, 0.0001195829999999995, 0.00012030599999999364, 0.00011937499999999795, 0.00011940199999999762, 0.00011933399999999872, 0.00011959699999999907, 0.00012047199999999647, 0.00011904199999999976, 0.00011883299999999875, 0.00012047199999999647, 0.00011905599999999933, 0.0001194300000000037, 0.00011997200000000291, 0.00011941699999999666, 0.00011947200000000241, 0.0001189170000000031, 0.00012043099999999723]</msg>
<status status="PASS" starttime="20201115 23:00:46.645" endtime="20201115 23:00:46.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.634" endtime="20201115 23:00:46.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.658" endtime="20201115 23:00:46.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.666" endtime="20201115 23:00:46.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.662" endtime="20201115 23:00:46.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.653" endtime="20201115 23:00:46.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.154" endtime="20201115 23:00:46.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.150" endtime="20201115 23:00:46.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.148" endtime="20201115 23:00:46.692"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.697" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.719" endtime="20201115 23:00:46.739"></status>
</kw>
<msg timestamp="20201115 23:00:46.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.715" endtime="20201115 23:00:46.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.743" endtime="20201115 23:00:46.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.749" endtime="20201115 23:00:46.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.708" endtime="20201115 23:00:46.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.703" endtime="20201115 23:00:46.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.772" endtime="20201115 23:00:47.106"></status>
</kw>
<msg timestamp="20201115 23:00:47.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044389083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044509292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.769" endtime="20201115 23:00:47.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044389083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044509292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.116" endtime="20201115 23:00:47.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.134" endtime="20201115 23:00:47.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.762" endtime="20201115 23:00:47.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.757" endtime="20201115 23:00:47.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.152" level="INFO">${RESULT} = [{'time': 0.044509292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012020899999999612, 'source_diff': 0.00012020899999999612}, {'time': 0.044659722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:47.144" endtime="20201115 23:00:47.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.182" level="INFO">${ACCURACY} = {'source_diff': [0.00012020899999999612, 0.00012020799999999665, 0.00012067999999999801, 0.00012032000000000015, 0.00011995800000000334, 0.0001204029999999981, 0.0001209579999999974, 0.000120069000000...</msg>
<status status="PASS" starttime="20201115 23:00:47.154" endtime="20201115 23:00:47.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.192" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.190" endtime="20201115 23:00:47.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.198" level="INFO">VALUE: [0.00012020899999999612, 0.00012020799999999665, 0.00012067999999999801, 0.00012032000000000015, 0.00011995800000000334, 0.0001204029999999981, 0.0001209579999999974, 0.00012006900000000043, 0.00011990199999999812, 0.00012127800000000244, 0.00012016700000000435, 0.00012081900000000118, 0.00012070899999999662, 0.00012073599999999629, 0.00012047199999999647, 0.00012041699999999766, 0.00012051400000000212, 0.00012072300000000313, 0.0001205830000000005, 0.00012061099999999964, 0.00012034699999999982, 0.00012009699999999957, 0.00012074999999999586, 0.00012001400000000162, 0.00012030600000000058, 0.0001204029999999981, 0.00012023599999999579, 0.00012019400000000402, 0.00012094399999999783, 0.00012013899999999827, 0.00011993100000000367, 0.00012040199999999862, 0.0001205830000000005, 0.00012009799999999904, 0.00012081900000000118, 0.00012058399999999997, 0.00012059700000000007, 0.00012054200000000126, 0.00011980600000000008, 0.00012017999999999751, 0.00012072200000000366, 0.00011984699999999932, 0.00012038899999999852, 0.00012030600000000058, 0.00012052800000000169, 0.00012165299999999934, 0.0001207500000000028, 0.00012067999999999801, 0.00012002799999999425, 0.00011979200000000051]</msg>
<status status="PASS" starttime="20201115 23:00:47.195" endtime="20201115 23:00:47.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.184" endtime="20201115 23:00:47.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.207" endtime="20201115 23:00:47.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.215" endtime="20201115 23:00:47.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.211" endtime="20201115 23:00:47.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.203" endtime="20201115 23:00:47.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.699" endtime="20201115 23:00:47.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.695" endtime="20201115 23:00:47.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.693" endtime="20201115 23:00:47.242"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.268" endtime="20201115 23:00:47.289"></status>
</kw>
<msg timestamp="20201115 23:00:47.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.265" endtime="20201115 23:00:47.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.292" endtime="20201115 23:00:47.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.299" endtime="20201115 23:00:47.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.258" endtime="20201115 23:00:47.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.252" endtime="20201115 23:00:47.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.322" endtime="20201115 23:00:47.654"></status>
</kw>
<msg timestamp="20201115 23:00:47.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044561986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.318" endtime="20201115 23:00:47.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044561986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.663" endtime="20201115 23:00:47.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.681" endtime="20201115 23:00:47.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.311" endtime="20201115 23:00:47.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.307" endtime="20201115 23:00:47.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.698" level="INFO">${RESULT} = [{'time': 0.044561986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012133300000000125, 'source_diff': 0.00012133300000000125}, {'time': 0.044714403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:47.690" endtime="20201115 23:00:47.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.731" level="INFO">${ACCURACY} = {'source_diff': [0.00012133300000000125, 0.0001209449999999973, 0.00012090200000000606, 0.00012144399999999833, 0.00012118100000000492, 0.00012106899999999449, 0.00012177800000000294, 0.00012090199999...</msg>
<status status="PASS" starttime="20201115 23:00:47.701" endtime="20201115 23:00:47.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.742" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.740" endtime="20201115 23:00:47.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.747" level="INFO">VALUE: [0.00012133300000000125, 0.0001209449999999973, 0.00012090200000000606, 0.00012144399999999833, 0.00012118100000000492, 0.00012106899999999449, 0.00012177800000000294, 0.00012090199999999912, 0.000121083000000001, 0.00012092999999999826, 0.00012134700000000082, 0.00012119399999999808, 0.00012148600000000398, 0.00012169399999999858, 0.0001215700000000014, 0.00012181900000000218, 0.0001215830000000015, 0.00012247299999999794, 0.00012094400000000477, 0.00012179100000000304, 0.00012147199999999747, 0.0001212500000000033, 0.0001212500000000033, 0.00012084799999999979, 0.00012154199999999532, 0.00012136199999999986, 0.00012106900000000143, 0.00012212499999999377, 0.0001209449999999973, 0.00012113899999999928, 0.00012076399999999543, 0.00012137499999999996, 0.00012115199999999937, 0.00012126400000000287, 0.00012158399999999403, 0.00012094399999999783, 0.00012137499999999996, 0.0001213329999999943, 0.00012137499999999996, 0.00012172200000000466, 0.00012265300000000035, 0.00012141699999999866, 0.00012083300000000075, 0.00012170899999999762, 0.00012144399999999833, 0.00012176400000000337, 0.0001211379999999998, 0.00012161100000000064, 0.00012195899999999787, 0.00012081900000000118]</msg>
<status status="PASS" starttime="20201115 23:00:47.744" endtime="20201115 23:00:47.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.733" endtime="20201115 23:00:47.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.756" endtime="20201115 23:00:47.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.764" endtime="20201115 23:00:47.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.760" endtime="20201115 23:00:47.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.752" endtime="20201115 23:00:47.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.248" endtime="20201115 23:00:47.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.244" endtime="20201115 23:00:47.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.243" endtime="20201115 23:00:47.791"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.796" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.817" endtime="20201115 23:00:47.838"></status>
</kw>
<msg timestamp="20201115 23:00:47.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.814" endtime="20201115 23:00:47.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.841" endtime="20201115 23:00:47.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.848" endtime="20201115 23:00:47.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.807" endtime="20201115 23:00:47.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.801" endtime="20201115 23:00:47.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.871" endtime="20201115 23:00:48.203"></status>
</kw>
<msg timestamp="20201115 23:00:48.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044535403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044657958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.867" endtime="20201115 23:00:48.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044535403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044657958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.212" endtime="20201115 23:00:48.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.231" endtime="20201115 23:00:48.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.860" endtime="20201115 23:00:48.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.856" endtime="20201115 23:00:48.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.249" level="INFO">${RESULT} = [{'time': 0.044657958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012255499999999642, 'source_diff': 0.00012255499999999642}, {'time': 0.044813347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:48.241" endtime="20201115 23:00:48.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.279" level="INFO">${ACCURACY} = {'source_diff': [0.00012255499999999642, 0.00012218000000000645, 0.0001229579999999994, 0.00012259700000000207, 0.00012192999999999926, 0.00012213900000000028, 0.00012186100000000089, 0.00012205500000...</msg>
<status status="PASS" starttime="20201115 23:00:48.251" endtime="20201115 23:00:48.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.290" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.287" endtime="20201115 23:00:48.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.295" level="INFO">VALUE: [0.00012255499999999642, 0.00012218000000000645, 0.0001229579999999994, 0.00012259700000000207, 0.00012192999999999926, 0.00012213900000000028, 0.00012186100000000089, 0.00012205500000000286, 0.00012184699999999438, 0.00012202799999999625, 0.00012201400000000362, 0.00012233300000000225, 0.0001220700000000019, 0.0001220700000000019, 0.000122568999999996, 0.0001224030000000001, 0.00012197199999999797, 0.00012247299999999794, 0.00012269399999999958, 0.0001224030000000001, 0.00012186100000000089, 0.0001221120000000006, 0.00012250000000000455, 0.00012201400000000362, 0.00012263900000000078, 0.00012362499999999527, 0.00012213900000000028, 0.00012237500000000096, 0.00012329199999999707, 0.0001221250000000007, 0.00012234699999999488, 0.00012216699999999941, 0.00012266699999999991, 0.00012255500000000336, 0.00012220799999999865, 0.0001220700000000019, 0.00012245800000000584, 0.00012274999999999786, 0.00012283399999999528, 0.0001222229999999977, 0.0001221799999999995, 0.00012274999999999786, 0.00012187500000000046, 0.0001224579999999989, 0.0001219029999999996, 0.00012230600000000258, 0.00012237500000000096, 0.00012269399999999958, 0.00012240200000000062, 0.00012232000000000215]</msg>
<status status="PASS" starttime="20201115 23:00:48.292" endtime="20201115 23:00:48.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.281" endtime="20201115 23:00:48.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.304" endtime="20201115 23:00:48.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.312" endtime="20201115 23:00:48.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.308" endtime="20201115 23:00:48.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.299" endtime="20201115 23:00:48.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.797" endtime="20201115 23:00:48.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.793" endtime="20201115 23:00:48.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.791" endtime="20201115 23:00:48.338"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.343" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.365" endtime="20201115 23:00:48.386"></status>
</kw>
<msg timestamp="20201115 23:00:48.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.361" endtime="20201115 23:00:48.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.389" endtime="20201115 23:00:48.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.395" endtime="20201115 23:00:48.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.354" endtime="20201115 23:00:48.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.349" endtime="20201115 23:00:48.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.419" endtime="20201115 23:00:48.751"></status>
</kw>
<msg timestamp="20201115 23:00:48.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044465875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044589556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.415" endtime="20201115 23:00:48.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044465875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044589556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.760" endtime="20201115 23:00:48.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.779" endtime="20201115 23:00:48.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.408" endtime="20201115 23:00:48.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.403" endtime="20201115 23:00:48.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.796" level="INFO">${RESULT} = [{'time': 0.044589556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012368100000000048, 'source_diff': 0.00012368100000000048}, {'time': 0.044743, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:48.787" endtime="20201115 23:00:48.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.825" level="INFO">${ACCURACY} = {'source_diff': [0.00012368100000000048, 0.00012320799999999965, 0.00012347199999999947, 0.00012387499999999552, 0.00012369500000000005, 0.00012368100000000048, 0.00012372199999999972, 0.0001232220000...</msg>
<status status="PASS" starttime="20201115 23:00:48.798" endtime="20201115 23:00:48.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.836" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.834" endtime="20201115 23:00:48.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.841" level="INFO">VALUE: [0.00012368100000000048, 0.00012320799999999965, 0.00012347199999999947, 0.00012387499999999552, 0.00012369500000000005, 0.00012368100000000048, 0.00012372199999999972, 0.00012322200000000616, 0.00012341700000000067, 0.00012372199999999972, 0.00012280599999999614, 0.00012320799999999965, 0.00012351399999999818, 0.00012309700000000257, 0.0001235830000000035, 0.00012291700000000017, 0.0001232500000000053, 0.00012286100000000189, 0.0001238199999999967, 0.0001232359999999988, 0.00012334699999999588, 0.00012334700000000282, 0.00012288900000000103, 0.00012388900000000203, 0.00012351399999999818, 0.00012320799999999965, 0.0001230559999999964, 0.0001244999999999996, 0.00012354100000000479, 0.0001237229999999992, 0.00012372199999999972, 0.00012309699999999563, 0.00012326399999999793, 0.00012344400000000033, 0.00012334700000000282, 0.00012287500000000146, 0.00012448600000000004, 0.00012343000000000076, 0.0001234999999999986, 0.00012363900000000178, 0.00012343000000000076, 0.0001232500000000053, 0.00012379199999999757, 0.000123777999999998, 0.00012343100000000023, 0.00012334700000000282, 0.00012376399999999843, 0.0001229030000000006, 0.00012354200000000426, 0.00012326399999999793]</msg>
<status status="PASS" starttime="20201115 23:00:48.838" endtime="20201115 23:00:48.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.827" endtime="20201115 23:00:48.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.850" endtime="20201115 23:00:48.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.858" endtime="20201115 23:00:48.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.854" endtime="20201115 23:00:48.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.845" endtime="20201115 23:00:48.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.345" endtime="20201115 23:00:48.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.341" endtime="20201115 23:00:48.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.339" endtime="20201115 23:00:48.884"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.911" endtime="20201115 23:00:48.932"></status>
</kw>
<msg timestamp="20201115 23:00:48.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.908" endtime="20201115 23:00:48.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.935" endtime="20201115 23:00:48.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.942" endtime="20201115 23:00:48.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.901" endtime="20201115 23:00:48.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.895" endtime="20201115 23:00:48.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.965" endtime="20201115 23:00:49.298"></status>
</kw>
<msg timestamp="20201115 23:00:49.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044610597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.962" endtime="20201115 23:00:49.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044610597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.307" endtime="20201115 23:00:49.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.325" endtime="20201115 23:00:49.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.955" endtime="20201115 23:00:49.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.950" endtime="20201115 23:00:49.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.344" level="INFO">${RESULT} = [{'time': 0.044610597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012511100000000414, 'source_diff': 0.00012511100000000414}, {'time': 0.044767042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:49.335" endtime="20201115 23:00:49.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.373" level="INFO">${ACCURACY} = {'source_diff': [0.00012511100000000414, 0.0001241250000000027, 0.000124680000000002, 0.00012390200000000212, 0.00012473699999999976, 0.00012388899999999509, 0.000125680000000003, 0.000125555000000006...</msg>
<status status="PASS" starttime="20201115 23:00:49.346" endtime="20201115 23:00:49.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.384" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.381" endtime="20201115 23:00:49.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.389" level="INFO">VALUE: [0.00012511100000000414, 0.0001241250000000027, 0.000124680000000002, 0.00012390200000000212, 0.00012473699999999976, 0.00012388899999999509, 0.000125680000000003, 0.00012555500000000636, 0.000124083000000004, 0.00012401399999999868, 0.00012469500000000105, 0.00012388900000000203, 0.00012406900000000443, 0.00012493100000000174, 0.00012401399999999868, 0.00012466700000000192, 0.00012447299999999994, 0.00012468099999999455, 0.00012455499999999842, 0.00012463900000000278, 0.0001239999999999991, 0.00012415300000000185, 0.0001238480000000028, 0.00012454099999999885, 0.0001238329999999968, 0.00012415300000000185, 0.0001242359999999998, 0.00012455499999999842, 0.00012420800000000065, 0.00012380499999999767, 0.00012494400000000183, 0.00012436100000000339, 0.00012436099999999645, 0.00012383300000000375, 0.0001237920000000045, 0.00012454199999999832, 0.00012416700000000142, 0.00012383300000000375, 0.00012433300000000425, 0.0001245559999999979, 0.00012438900000000253, 0.00012447299999999994, 0.0001255979999999976, 0.00012468100000000149, 0.00012395899999999987, 0.00012386199999999542, 0.00012476399999999943, 0.00012442999999999482, 0.00012465300000000235, 0.0001246250000000032]</msg>
<status status="PASS" starttime="20201115 23:00:49.386" endtime="20201115 23:00:49.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.375" endtime="20201115 23:00:49.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.398" endtime="20201115 23:00:49.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.406" endtime="20201115 23:00:49.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.402" endtime="20201115 23:00:49.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.393" endtime="20201115 23:00:49.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.891" endtime="20201115 23:00:49.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.887" endtime="20201115 23:00:49.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.885" endtime="20201115 23:00:49.432"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.437" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.460" endtime="20201115 23:00:49.481"></status>
</kw>
<msg timestamp="20201115 23:00:49.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.456" endtime="20201115 23:00:49.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.484" endtime="20201115 23:00:49.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.490" endtime="20201115 23:00:49.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.449" endtime="20201115 23:00:49.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.443" endtime="20201115 23:00:49.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.513" endtime="20201115 23:00:49.845"></status>
</kw>
<msg timestamp="20201115 23:00:49.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045237236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.510" endtime="20201115 23:00:49.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045237236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.854" endtime="20201115 23:00:49.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.872" endtime="20201115 23:00:49.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.503" endtime="20201115 23:00:49.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.498" endtime="20201115 23:00:49.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.889" level="INFO">${RESULT} = [{'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001265000000000016, 'source_diff': 0.0001265000000000016}, {'time': 0.045516125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.881" endtime="20201115 23:00:49.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.921" level="INFO">${ACCURACY} = {'source_diff': [0.0001265000000000016, 0.00012490299999999566, 0.0001248889999999961, 0.00012484799999999685, 0.00012570800000000215, 0.00012541599999999625, 0.00012484699999999738, 0.000125778, 0.00...</msg>
<status status="PASS" starttime="20201115 23:00:49.891" endtime="20201115 23:00:49.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.932" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.930" endtime="20201115 23:00:49.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.938" level="INFO">VALUE: [0.0001265000000000016, 0.00012490299999999566, 0.0001248889999999961, 0.00012484799999999685, 0.00012570800000000215, 0.00012541599999999625, 0.00012484699999999738, 0.000125778, 0.0001266109999999987, 0.0001253329999999983, 0.000125292000000006, 0.00012504099999999935, 0.00012663899999999784, 0.00012551400000000018, 0.00012484699999999738, 0.00012484700000000432, 0.0001257230000000012, 0.00012525000000000036, 0.00012486099999999695, 0.00012536100000000439, 0.00012568100000000249, 0.00012570800000000215, 0.00012554199999999932, 0.0001254309999999953, 0.0001254580000000019, 0.00012568100000000249, 0.00012563900000000378, 0.00012569500000000206, 0.00012509800000000404, 0.00012558299999999856, 0.00012533399999999778, 0.00012534699999999788, 0.0001257230000000012, 0.0001255130000000007, 0.00012515300000000285, 0.00012577700000000053, 0.00012531899999999874, 0.00012519400000000208, 0.00012526399999999993, 0.00012572199999999478, 0.00012537499999999702, 0.00012518100000000199, 0.00012533399999999778, 0.00012501399999999968, 0.00012559699999999813, 0.00012572200000000172, 0.00012558299999999856, 0.0001251250000000037, 0.0001248480000000038, 0.00012537499999999702]</msg>
<status status="PASS" starttime="20201115 23:00:49.935" endtime="20201115 23:00:49.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.923" endtime="20201115 23:00:49.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.946" endtime="20201115 23:00:49.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.955" endtime="20201115 23:00:49.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.950" endtime="20201115 23:00:49.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.942" endtime="20201115 23:00:49.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.439" endtime="20201115 23:00:49.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.435" endtime="20201115 23:00:49.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.433" endtime="20201115 23:00:49.981"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.987" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.008" endtime="20201115 23:00:50.029"></status>
</kw>
<msg timestamp="20201115 23:00:50.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.005" endtime="20201115 23:00:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.033" endtime="20201115 23:00:50.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.039" endtime="20201115 23:00:50.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.998" endtime="20201115 23:00:50.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.992" endtime="20201115 23:00:50.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.062" endtime="20201115 23:00:50.395"></status>
</kw>
<msg timestamp="20201115 23:00:50.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044715542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04484225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:50.059" endtime="20201115 23:00:50.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044715542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04484225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:50.404" endtime="20201115 23:00:50.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.422" endtime="20201115 23:00:50.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.051" endtime="20201115 23:00:50.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.047" endtime="20201115 23:00:50.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.441" level="INFO">${RESULT} = [{'time': 0.04484225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012670800000000315, 'source_diff': 0.00012670800000000315}, {'time': 0.045000736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:50.432" endtime="20201115 23:00:50.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.471" level="INFO">${ACCURACY} = {'source_diff': [0.00012670800000000315, 0.00012587499999999752, 0.00012609699999999863, 0.00012679099999999416, 0.0001260559999999994, 0.0001267079999999962, 0.00012608299999999906, 0.000126472000000...</msg>
<status status="PASS" starttime="20201115 23:00:50.443" endtime="20201115 23:00:50.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.481" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.479" endtime="20201115 23:00:50.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.487" level="INFO">VALUE: [0.00012670800000000315, 0.00012587499999999752, 0.00012609699999999863, 0.00012679099999999416, 0.0001260559999999994, 0.0001267079999999962, 0.00012608299999999906, 0.00012647200000000247, 0.0001275000000000026, 0.0001270000000000021, 0.00012655500000000042, 0.00012626400000000093, 0.00012684799999999885, 0.00012659699999999913, 0.00012680600000000014, 0.00012681900000000024, 0.00012683400000000622, 0.0001264160000000042, 0.00012680600000000014, 0.0001261529999999969, 0.000126778000000001, 0.00012584699999999838, 0.0001259859999999946, 0.00012597200000000197, 0.00012611100000000514, 0.0001262360000000018, 0.0001266109999999987, 0.0001265559999999999, 0.000126569, 0.00012669500000000306, 0.00012604199999999982, 0.00012619400000000308, 0.0001261800000000035, 0.0001262910000000006, 0.00012637499999999802, 0.00012637500000000496, 0.00012601400000000068, 0.00012634699999999888, 0.00012651400000000118, 0.00012634700000000582, 0.00012654200000000032, 0.00012640199999999768, 0.0001264309999999963, 0.00012656999999999946, 0.00012642999999999682, 0.00012670800000000315, 0.00012629200000000007, 0.00012584799999999785, 0.00012658399999999903, 0.00012681900000000024]</msg>
<status status="PASS" starttime="20201115 23:00:50.484" endtime="20201115 23:00:50.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.472" endtime="20201115 23:00:50.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.501" endtime="20201115 23:00:50.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.509" endtime="20201115 23:00:50.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.505" endtime="20201115 23:00:50.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.496" endtime="20201115 23:00:50.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.988" endtime="20201115 23:00:50.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.984" endtime="20201115 23:00:50.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.982" endtime="20201115 23:00:50.535"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.540" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.562" endtime="20201115 23:00:50.583"></status>
</kw>
<msg timestamp="20201115 23:00:50.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.558" endtime="20201115 23:00:50.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.586" endtime="20201115 23:00:50.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.592" endtime="20201115 23:00:50.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.551" endtime="20201115 23:00:50.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.546" endtime="20201115 23:00:50.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.616" endtime="20201115 23:00:50.947"></status>
</kw>
<msg timestamp="20201115 23:00:50.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044502861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044630486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.612" endtime="20201115 23:00:50.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044502861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044630486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.956" endtime="20201115 23:00:50.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.975" endtime="20201115 23:00:50.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.605" endtime="20201115 23:00:50.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.601" endtime="20201115 23:00:50.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.991" level="INFO">${RESULT} = [{'time': 0.044630486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012762499999999927, 'source_diff': 0.00012762499999999927}, {'time': 0.044790917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:50.983" endtime="20201115 23:00:50.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.021" level="INFO">${ACCURACY} = {'source_diff': [0.00012762499999999927, 0.00012716699999999748, 0.00012747200000000347, 0.0001277360000000033, 0.00012751299999999577, 0.00012859700000000113, 0.00012690199999999818, 0.00012852699999...</msg>
<status status="PASS" starttime="20201115 23:00:50.994" endtime="20201115 23:00:51.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.032" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.030" endtime="20201115 23:00:51.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.038" level="INFO">VALUE: [0.00012762499999999927, 0.00012716699999999748, 0.00012747200000000347, 0.0001277360000000033, 0.00012751299999999577, 0.00012859700000000113, 0.00012690199999999818, 0.00012852699999999634, 0.0001270690000000005, 0.00012744499999999687, 0.00012726400000000193, 0.00012738900000000553, 0.00012734699999999988, 0.0001277639999999955, 0.00012734799999999935, 0.00012694499999999637, 0.00012754100000000185, 0.00012680600000000014, 0.0001274030000000051, 0.00012762499999999927, 0.00012762499999999927, 0.00012777799999999506, 0.00012704200000000082, 0.00012727700000000203, 0.00012776400000000243, 0.00012713899999999834, 0.0001273889999999986, 0.00012777799999999506, 0.0001280279999999953, 0.00012755499999999448, 0.00012812499999999977, 0.00012690299999999766, 0.00012768099999999755, 0.00012731900000000074, 0.00012708300000000006, 0.0001270000000000021, 0.00012827799999999556, 0.0001275969999999932, 0.00012826400000000293, 0.00012702800000000125, 0.00012727700000000203, 0.00012773599999999635, 0.0001277230000000032, 0.00012749999999999567, 0.0001267910000000011, 0.00012813899999999934, 0.00012709699999999963, 0.0001271109999999992, 0.00012873599999999735, 0.0001276529999999984]</msg>
<status status="PASS" starttime="20201115 23:00:51.034" endtime="20201115 23:00:51.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.023" endtime="20201115 23:00:51.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.047" endtime="20201115 23:00:51.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.055" endtime="20201115 23:00:51.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.051" endtime="20201115 23:00:51.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.042" endtime="20201115 23:00:51.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.542" endtime="20201115 23:00:51.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.538" endtime="20201115 23:00:51.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.536" endtime="20201115 23:00:51.081"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.087" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.108" endtime="20201115 23:00:51.129"></status>
</kw>
<msg timestamp="20201115 23:00:51.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.105" endtime="20201115 23:00:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.133" endtime="20201115 23:00:51.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.139" endtime="20201115 23:00:51.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.098" endtime="20201115 23:00:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.092" endtime="20201115 23:00:51.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.162" endtime="20201115 23:00:51.494"></status>
</kw>
<msg timestamp="20201115 23:00:51.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044728819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.159" endtime="20201115 23:00:51.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044728819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.503" endtime="20201115 23:00:51.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.521" endtime="20201115 23:00:51.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.151" endtime="20201115 23:00:51.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.147" endtime="20201115 23:00:51.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.540" level="INFO">${RESULT} = [{'time': 0.044728819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012854100000000285, 'source_diff': 0.00012854100000000285}, {'time': 0.044890181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:51.531" endtime="20201115 23:00:51.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.570" level="INFO">${ACCURACY} = {'source_diff': [0.00012854100000000285, 0.00012870900000000463, 0.00012833299999999437, 0.00012797199999999703, 0.0001281529999999989, 0.0001280980000000001, 0.00012847199999999753, 0.000128806000000...</msg>
<status status="PASS" starttime="20201115 23:00:51.542" endtime="20201115 23:00:51.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.581" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.579" endtime="20201115 23:00:51.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.586" level="INFO">VALUE: [0.00012854100000000285, 0.00012870900000000463, 0.00012833299999999437, 0.00012797199999999703, 0.0001281529999999989, 0.0001280980000000001, 0.00012847199999999753, 0.00012880600000000214, 0.00012872199999999778, 0.00012962500000000127, 0.00012830500000000217, 0.0001287079999999982, 0.00012913900000000034, 0.00012836100000000045, 0.0001288330000000018, 0.00012869499999999812, 0.0001282079999999977, 0.00012879199999999563, 0.00012858299999999462, 0.00012866699999999898, 0.0001280000000000031, 0.00012897199999999803, 0.00012842999999999882, 0.00012801399999999574, 0.0001280690000000015, 0.0001280279999999953, 0.0001296110000000017, 0.00012791700000000517, 0.00012799999999999617, 0.00012874999999999692, 0.00012842999999999882, 0.00012879199999999563, 0.0001282780000000025, 0.00012897199999999803, 0.00012836100000000045, 0.00012840299999999916, 0.00012824999999999642, 0.00012879199999999563, 0.0001279859999999966, 0.00012879200000000257, 0.0001296110000000017, 0.00012813899999999934, 0.00012826400000000293, 0.00012823599999999685, 0.00012787499999999952, 0.00012870899999999769, 0.00012962500000000127, 0.00012822199999999728, 0.0001279439999999979, 0.0001278330000000008]</msg>
<status status="PASS" starttime="20201115 23:00:51.583" endtime="20201115 23:00:51.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.572" endtime="20201115 23:00:51.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.595" endtime="20201115 23:00:51.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.603" endtime="20201115 23:00:51.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.599" endtime="20201115 23:00:51.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.590" endtime="20201115 23:00:51.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.088" endtime="20201115 23:00:51.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.084" endtime="20201115 23:00:51.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.082" endtime="20201115 23:00:51.629"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.635" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.656" endtime="20201115 23:00:51.678"></status>
</kw>
<msg timestamp="20201115 23:00:51.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.653" endtime="20201115 23:00:51.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.681" endtime="20201115 23:00:51.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.687" endtime="20201115 23:00:51.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.646" endtime="20201115 23:00:51.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.640" endtime="20201115 23:00:51.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.711" endtime="20201115 23:00:52.044"></status>
</kw>
<msg timestamp="20201115 23:00:52.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044695903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044825292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.707" endtime="20201115 23:00:52.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044695903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044825292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.053" endtime="20201115 23:00:52.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.072" endtime="20201115 23:00:52.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.700" endtime="20201115 23:00:52.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.695" endtime="20201115 23:00:52.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.089" level="INFO">${RESULT} = [{'time': 0.044825292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001293890000000006, 'source_diff': 0.0001293890000000006}, {'time': 0.044988667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:52.080" endtime="20201115 23:00:52.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.121" level="INFO">${ACCURACY} = {'source_diff': [0.0001293890000000006, 0.0001293200000000022, 0.0001293330000000023, 0.00012923599999999785, 0.0001297360000000053, 0.00012931900000000274, 0.00012972200000000572, 0.00012905500000000...</msg>
<status status="PASS" starttime="20201115 23:00:52.091" endtime="20201115 23:00:52.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.132" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.130" endtime="20201115 23:00:52.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.137" level="INFO">VALUE: [0.0001293890000000006, 0.0001293200000000022, 0.0001293330000000023, 0.00012923599999999785, 0.0001297360000000053, 0.00012931900000000274, 0.00012972200000000572, 0.00012905500000000292, 0.000129263999999997, 0.0001288330000000018, 0.00012956999999999552, 0.0001288890000000001, 0.00012912499999999383, 0.00012974999999999792, 0.00012979199999999663, 0.00012954200000000332, 0.00012969499999999912, 0.00012958400000000203, 0.00012911200000000067, 0.00012922199999999828, 0.0001293890000000006, 0.00012905599999999545, 0.00012966699999999998, 0.00012940300000000016, 0.00013061200000000217, 0.0001289439999999989, 0.00013047199999999953, 0.0001291529999999999, 0.00012941600000000025, 0.00012974999999999792, 0.00012929099999999666, 0.00012958299999999562, 0.00012933299999999537, 0.00012968099999999955, 0.00012947199999999853, 0.0001306530000000014, 0.00012948600000000504, 0.00012959700000000213, 0.00012966699999999998, 0.0001288890000000001, 0.00012926300000000446, 0.00012980500000000367, 0.00012952800000000375, 0.00012986100000000195, 0.00012999999999999817, 0.00012874999999999692, 0.00012980499999999673, 0.00012945799999999896, 0.00012887500000000052, 0.0001302780000000045]</msg>
<status status="PASS" starttime="20201115 23:00:52.134" endtime="20201115 23:00:52.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.123" endtime="20201115 23:00:52.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.146" endtime="20201115 23:00:52.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.154" endtime="20201115 23:00:52.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.150" endtime="20201115 23:00:52.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.141" endtime="20201115 23:00:52.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.636" endtime="20201115 23:00:52.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.632" endtime="20201115 23:00:52.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.630" endtime="20201115 23:00:52.180"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:56.829" endtime="20201115 23:00:52.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.191" endtime="20201115 23:00:52.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.187" endtime="20201115 23:00:52.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.184" endtime="20201115 23:00:52.215"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 22:59:56.707" endtime="20201115 23:00:52.216" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.235" endtime="20201115 23:00:52.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.231" endtime="20201115 23:00:52.258"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.291" endtime="20201115 23:00:52.307"></status>
</kw>
<msg timestamp="20201115 23:00:52.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.287" endtime="20201115 23:00:52.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.312" endtime="20201115 23:00:52.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:52.318" endtime="20201115 23:00:52.323"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:52.280" endtime="20201115 23:00:52.325"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:52.274" endtime="20201115 23:00:52.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.271" endtime="20201115 23:00:52.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:52.335" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:52.333" endtime="20201115 23:00:52.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.329" endtime="20201115 23:00:52.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.270" endtime="20201115 23:00:52.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.268" endtime="20201115 23:00:52.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.338" endtime="20201115 23:00:52.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.264" endtime="20201115 23:00:52.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.260" endtime="20201115 23:00:52.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.228" endtime="20201115 23:00:52.345"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.353" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.375" endtime="20201115 23:00:52.392"></status>
</kw>
<msg timestamp="20201115 23:00:52.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.371" endtime="20201115 23:00:52.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.395" endtime="20201115 23:00:52.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.402" endtime="20201115 23:00:52.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.364" endtime="20201115 23:00:52.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.358" endtime="20201115 23:00:52.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.425" endtime="20201115 23:00:52.765"></status>
</kw>
<msg timestamp="20201115 23:00:52.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131705653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:52.421" endtime="20201115 23:00:52.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131631, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131705653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:52.775" endtime="20201115 23:00:52.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.793" endtime="20201115 23:00:52.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.414" endtime="20201115 23:00:52.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.410" endtime="20201115 23:00:52.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.811" level="INFO">${RESULT} = [{'time': 0.131705653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.465300000000785e-05, 'source_diff': 7.465300000000785e-05}, {'time': 0.131785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:52.801" endtime="20201115 23:00:52.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.843" level="INFO">${ACCURACY} = {'source_diff': [7.465300000000785e-05, 7.105600000001377e-05, 7.022200000000867e-05, 7.030599999999221e-05, 7.038900000000403e-05, 7.402800000000376e-05, 7.49160000000082e-05, 7.052799999998638e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:52.813" endtime="20201115 23:00:52.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.854" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.852" endtime="20201115 23:00:52.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.859" level="INFO">VALUE: [7.465300000000785e-05, 7.105600000001377e-05, 7.022200000000867e-05, 7.030599999999221e-05, 7.038900000000403e-05, 7.402800000000376e-05, 7.49160000000082e-05, 7.052799999998638e-05, 7.47500000000123e-05, 7.105599999998602e-05, 7.558300000001794e-05, 7.09160000000042e-05, 7.088899999999065e-05, 7.573599999999292e-05, 7.40700000000094e-05, 7.422199999998491e-05, 7.069499999998174e-05, 7.556999999999703e-05, 7.491700000000767e-05, 7.456899999999655e-05, 7.040299999999666e-05, 7.574999999998555e-05, 7.44169999999933e-05, 7.069399999998227e-05, 7.476399999997718e-05, 7.07500000000083e-05, 7.558299999999019e-05, 7.491700000000767e-05, 7.088800000001894e-05, 7.538900000000903e-05, 7.022200000000867e-05, 7.05269999999869e-05, 7.040200000002494e-05, 7.438899999998028e-05, 7.430499999999673e-05, 7.108299999999956e-05, 7.04300000000102e-05, 7.070800000000266e-05, 7.027800000000695e-05, 7.105499999998655e-05, 7.112500000000521e-05, 7.46529999999801e-05, 7.44169999999933e-05, 7.054199999997901e-05, 7.105499999998655e-05, 7.070900000000213e-05, 7.037499999998365e-05, 7.422199999998491e-05, 7.506899999998318e-05, 7.040199999999719e-05]</msg>
<status status="PASS" starttime="20201115 23:00:52.856" endtime="20201115 23:00:52.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.845" endtime="20201115 23:00:52.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.868" endtime="20201115 23:00:52.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.877" endtime="20201115 23:00:52.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.872" endtime="20201115 23:00:52.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.864" endtime="20201115 23:00:52.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.355" endtime="20201115 23:00:52.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.350" endtime="20201115 23:00:52.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.349" endtime="20201115 23:00:52.903"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.929" endtime="20201115 23:00:52.947"></status>
</kw>
<msg timestamp="20201115 23:00:52.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.926" endtime="20201115 23:00:52.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.950" endtime="20201115 23:00:52.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.956" endtime="20201115 23:00:52.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.919" endtime="20201115 23:00:52.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.914" endtime="20201115 23:00:52.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.980" endtime="20201115 23:00:53.312"></status>
</kw>
<msg timestamp="20201115 23:00:53.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044631653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.976" endtime="20201115 23:00:53.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044631653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.322" endtime="20201115 23:00:53.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.341" endtime="20201115 23:00:53.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.969" endtime="20201115 23:00:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.964" endtime="20201115 23:00:53.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.358" level="INFO">${RESULT} = [{'time': 0.044631653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.545899999999994e-05, 'source_diff': 7.545899999999994e-05}, {'time': 0.044713889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.349" endtime="20201115 23:00:53.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.390" level="INFO">${ACCURACY} = {'source_diff': [7.545899999999994e-05, 7.44309999999998e-05, 7.405500000000342e-05, 7.445799999999947e-05, 7.055499999999992e-05, 7.52639999999985e-05, 7.454199999999689e-05, 7.070900000000213e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:53.360" endtime="20201115 23:00:53.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.400" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.398" endtime="20201115 23:00:53.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.406" level="INFO">VALUE: [7.545899999999994e-05, 7.44309999999998e-05, 7.405500000000342e-05, 7.445799999999947e-05, 7.055499999999992e-05, 7.52639999999985e-05, 7.454199999999689e-05, 7.070900000000213e-05, 7.029199999999958e-05, 7.507000000000347e-05, 7.079200000000008e-05, 7.524999999999893e-05, 7.458299999999612e-05, 7.077800000000051e-05, 7.109699999999913e-05, 7.018099999999555e-05, 7.580599999999771e-05, 7.506899999999705e-05, 7.441700000000023e-05, 7.022199999999479e-05, 7.409700000000213e-05, 7.055499999999992e-05, 7.055499999999992e-05, 7.069500000000256e-05, 7.088899999999759e-05, 7.458299999999612e-05, 7.468100000000005e-05, 7.475000000000537e-05, 7.073599999999486e-05, 7.455599999999646e-05, 7.07360000000018e-05, 7.025000000000087e-05, 7.408300000000256e-05, 7.42639999999975e-05, 7.56110000000032e-05, 7.106999999999947e-05, 7.426299999999803e-05, 7.45560000000034e-05, 7.412499999999433e-05, 7.072299999999476e-05, 7.038899999999709e-05, 7.49310000000003e-05, 7.443000000000033e-05, 7.472199999999929e-05, 7.077799999999357e-05, 7.09160000000042e-05, 7.112499999999827e-05, 7.090299999999716e-05, 7.105500000000042e-05, 7.434700000000238e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.403" endtime="20201115 23:00:53.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.391" endtime="20201115 23:00:53.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.415" endtime="20201115 23:00:53.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.423" endtime="20201115 23:00:53.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.419" endtime="20201115 23:00:53.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.410" endtime="20201115 23:00:53.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.910" endtime="20201115 23:00:53.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.906" endtime="20201115 23:00:53.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.904" endtime="20201115 23:00:53.449"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.454" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.476" endtime="20201115 23:00:53.493"></status>
</kw>
<msg timestamp="20201115 23:00:53.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.472" endtime="20201115 23:00:53.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.496" endtime="20201115 23:00:53.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.502" endtime="20201115 23:00:53.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.465" endtime="20201115 23:00:53.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.459" endtime="20201115 23:00:53.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.526" endtime="20201115 23:00:53.857"></status>
</kw>
<msg timestamp="20201115 23:00:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044621514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.523" endtime="20201115 23:00:53.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044550556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044621514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.866" endtime="20201115 23:00:53.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.885" endtime="20201115 23:00:53.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.516" endtime="20201115 23:00:53.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.510" endtime="20201115 23:00:53.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.902" level="INFO">${RESULT} = [{'time': 0.044621514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.095800000000291e-05, 'source_diff': 7.095800000000291e-05}, {'time': 0.04469875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:53.893" endtime="20201115 23:00:53.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.933" level="INFO">${ACCURACY} = {'source_diff': [7.095800000000291e-05, 7.059700000000557e-05, 7.05689999999995e-05, 7.05689999999995e-05, 7.022199999999479e-05, 7.492999999999389e-05, 7.05559999999994e-05, 7.091700000000367e-05, 7....</msg>
<status status="PASS" starttime="20201115 23:00:53.904" endtime="20201115 23:00:53.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.944" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.942" endtime="20201115 23:00:53.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.949" level="INFO">VALUE: [7.095800000000291e-05, 7.059700000000557e-05, 7.05689999999995e-05, 7.05689999999995e-05, 7.022199999999479e-05, 7.492999999999389e-05, 7.05559999999994e-05, 7.091700000000367e-05, 7.05689999999995e-05, 7.02360000000013e-05, 7.073599999999486e-05, 7.490300000000116e-05, 7.424999999999793e-05, 7.104200000000033e-05, 7.023599999999436e-05, 7.442999999999339e-05, 7.069400000000309e-05, 7.540300000000166e-05, 7.077800000000051e-05, 7.427800000000401e-05, 7.427799999999707e-05, 7.1069e-05, 7.474999999999843e-05, 7.056999999999897e-05, 7.04030000000036e-05, 7.09030000000041e-05, 7.022200000000173e-05, 7.456999999999603e-05, 7.558299999999712e-05, 7.018000000000302e-05, 7.075000000000137e-05, 7.093100000000324e-05, 7.047200000000198e-05, 7.02360000000013e-05, 7.577799999999857e-05, 7.098599999999511e-05, 7.020900000000163e-05, 7.054199999999983e-05, 7.037499999999752e-05, 7.491700000000073e-05, 7.115299999999741e-05, 7.493000000000083e-05, 7.055499999999992e-05, 7.070800000000266e-05, 7.491700000000073e-05, 7.025000000000087e-05, 7.02360000000013e-05, 7.479200000000408e-05, 7.109699999999913e-05, 7.408300000000256e-05]</msg>
<status status="PASS" starttime="20201115 23:00:53.947" endtime="20201115 23:00:53.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.935" endtime="20201115 23:00:53.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.958" endtime="20201115 23:00:53.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.966" endtime="20201115 23:00:53.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.962" endtime="20201115 23:00:53.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.954" endtime="20201115 23:00:53.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.456" endtime="20201115 23:00:53.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.452" endtime="20201115 23:00:53.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.450" endtime="20201115 23:00:53.993"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.020" endtime="20201115 23:00:54.037"></status>
</kw>
<msg timestamp="20201115 23:00:54.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.016" endtime="20201115 23:00:54.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.041" endtime="20201115 23:00:54.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.047" endtime="20201115 23:00:54.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.009" endtime="20201115 23:00:54.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.003" endtime="20201115 23:00:54.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.070" endtime="20201115 23:00:54.401"></status>
</kw>
<msg timestamp="20201115 23:00:54.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044958972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.067" endtime="20201115 23:00:54.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044958972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.411" endtime="20201115 23:00:54.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.429" endtime="20201115 23:00:54.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.060" endtime="20201115 23:00:54.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.055" endtime="20201115 23:00:54.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.447" level="INFO">${RESULT} = [{'time': 0.044958972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038899999999709e-05, 'source_diff': 7.038899999999709e-05}, {'time': 0.045035181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.438" endtime="20201115 23:00:54.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:54.481" level="INFO">${ACCURACY} = {'source_diff': [7.038899999999709e-05, 7.051400000000069e-05, 7.088900000000453e-05, 7.040299999999666e-05, 7.44309999999998e-05, 7.44309999999998e-05, 7.02360000000013e-05, 7.087499999999802e-05, 7....</msg>
<status status="PASS" starttime="20201115 23:00:54.449" endtime="20201115 23:00:54.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.492" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:54.489" endtime="20201115 23:00:54.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.497" level="INFO">VALUE: [7.038899999999709e-05, 7.051400000000069e-05, 7.088900000000453e-05, 7.040299999999666e-05, 7.44309999999998e-05, 7.44309999999998e-05, 7.02360000000013e-05, 7.087499999999802e-05, 7.526400000000544e-05, 7.075000000000137e-05, 7.42639999999975e-05, 7.470799999999972e-05, 7.090199999999769e-05, 7.492999999999389e-05, 7.025000000000087e-05, 7.080599999999965e-05, 7.561200000000268e-05, 7.072199999999529e-05, 7.425000000000487e-05, 7.037499999999752e-05, 7.06109999999982e-05, 7.106999999999947e-05, 7.1069e-05, 7.04030000000036e-05, 7.036099999999795e-05, 7.491599999999432e-05, 7.409800000000161e-05, 7.459800000000211e-05, 7.020799999999522e-05, 7.112499999999827e-05, 7.4763999999998e-05, 7.540300000000166e-05, 7.075000000000137e-05, 7.558300000000406e-05, 7.425000000000487e-05, 7.423599999999836e-05, 7.02360000000013e-05, 7.49310000000003e-05, 7.091599999999726e-05, 7.088900000000453e-05, 7.058299999999906e-05, 7.025000000000087e-05, 7.443000000000033e-05, 7.091599999999726e-05, 7.091599999999726e-05, 7.495899999999944e-05, 7.422199999999879e-05, 7.544399999999396e-05, 7.020800000000216e-05, 7.037499999999752e-05]</msg>
<status status="PASS" starttime="20201115 23:00:54.494" endtime="20201115 23:00:54.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.483" endtime="20201115 23:00:54.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.506" endtime="20201115 23:00:54.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:54.514" endtime="20201115 23:00:54.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.509" endtime="20201115 23:00:54.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.501" endtime="20201115 23:00:54.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.999" endtime="20201115 23:00:54.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.995" endtime="20201115 23:00:54.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.994" endtime="20201115 23:00:54.540"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.545" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.567" endtime="20201115 23:00:54.585"></status>
</kw>
<msg timestamp="20201115 23:00:54.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.564" endtime="20201115 23:00:54.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:54.588" endtime="20201115 23:00:54.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.594" endtime="20201115 23:00:54.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.557" endtime="20201115 23:00:54.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.551" endtime="20201115 23:00:54.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.617" endtime="20201115 23:00:54.948"></status>
</kw>
<msg timestamp="20201115 23:00:54.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045137861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.614" endtime="20201115 23:00:54.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:54.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045137861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:54.957" endtime="20201115 23:00:54.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:54.976" endtime="20201115 23:00:54.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.607" endtime="20201115 23:00:54.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.602" endtime="20201115 23:00:54.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:54.993" level="INFO">${RESULT} = [{'time': 0.045212111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.424999999999793e-05, 'source_diff': 7.424999999999793e-05}, {'time': 0.045292306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:54.984" endtime="20201115 23:00:54.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.024" level="INFO">${ACCURACY} = {'source_diff': [7.424999999999793e-05, 7.441700000000023e-05, 7.5763999999999e-05, 7.47910000000046e-05, 7.544500000000037e-05, 7.477799999999757e-05, 7.10979999999986e-05, 7.490200000000169e-05, 7.0...</msg>
<status status="PASS" starttime="20201115 23:00:54.995" endtime="20201115 23:00:55.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.036" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.034" endtime="20201115 23:00:55.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.041" level="INFO">VALUE: [7.424999999999793e-05, 7.441700000000023e-05, 7.5763999999999e-05, 7.47910000000046e-05, 7.544500000000037e-05, 7.477799999999757e-05, 7.10979999999986e-05, 7.490200000000169e-05, 7.055499999999992e-05, 7.429199999999664e-05, 7.02360000000013e-05, 7.037500000000446e-05, 7.059699999999863e-05, 7.41110000000017e-05, 7.019499999999512e-05, 7.441600000000076e-05, 7.04030000000036e-05, 7.058299999999906e-05, 7.477799999999757e-05, 7.020800000000216e-05, 7.424999999999793e-05, 7.02360000000013e-05, 7.084699999999888e-05, 7.020900000000163e-05, 7.056999999999897e-05, 7.50969999999962e-05, 7.494499999999987e-05, 7.40560000000029e-05, 7.529099999999816e-05, 7.408299999999562e-05, 7.090299999999716e-05, 7.424999999999793e-05, 7.075000000000137e-05, 7.108299999999956e-05, 7.42639999999975e-05, 7.072199999999529e-05, 7.574999999999943e-05, 7.508300000000356e-05, 7.580500000000517e-05, 7.052800000000026e-05, 7.490300000000116e-05, 7.1069e-05, 7.441600000000076e-05, 7.037500000000446e-05, 7.41110000000017e-05, 7.458299999999612e-05, 7.05689999999995e-05, 7.493000000000083e-05, 7.497199999999954e-05, 7.470799999999972e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.038" endtime="20201115 23:00:55.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.026" endtime="20201115 23:00:55.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.050" endtime="20201115 23:00:55.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.059" endtime="20201115 23:00:55.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.054" endtime="20201115 23:00:55.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.045" endtime="20201115 23:00:55.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.547" endtime="20201115 23:00:55.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.543" endtime="20201115 23:00:55.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:54.541" endtime="20201115 23:00:55.085"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.090" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.111" endtime="20201115 23:00:55.129"></status>
</kw>
<msg timestamp="20201115 23:00:55.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.108" endtime="20201115 23:00:55.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.132" endtime="20201115 23:00:55.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.138" endtime="20201115 23:00:55.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.101" endtime="20201115 23:00:55.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.095" endtime="20201115 23:00:55.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.161" endtime="20201115 23:00:55.492"></status>
</kw>
<msg timestamp="20201115 23:00:55.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044653875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.158" endtime="20201115 23:00:55.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044579278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044653875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.501" endtime="20201115 23:00:55.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.520" endtime="20201115 23:00:55.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.151" endtime="20201115 23:00:55.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.146" endtime="20201115 23:00:55.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:55.537" level="INFO">${RESULT} = [{'time': 0.044653875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.459700000000263e-05, 'source_diff': 7.459700000000263e-05}, {'time': 0.044731333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:55.528" endtime="20201115 23:00:55.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:55.568" level="INFO">${ACCURACY} = {'source_diff': [7.459700000000263e-05, 7.104100000000085e-05, 7.104200000000033e-05, 7.041699999999623e-05, 7.05689999999995e-05, 7.479200000000408e-05, 7.040299999999666e-05, 7.043100000000274e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:55.539" endtime="20201115 23:00:55.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.580" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:55.576" endtime="20201115 23:00:55.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.585" level="INFO">VALUE: [7.459700000000263e-05, 7.104100000000085e-05, 7.104200000000033e-05, 7.041699999999623e-05, 7.05689999999995e-05, 7.479200000000408e-05, 7.040299999999666e-05, 7.043100000000274e-05, 7.026400000000044e-05, 7.491600000000126e-05, 7.412500000000127e-05, 7.412500000000127e-05, 7.511099999999576e-05, 7.059700000000557e-05, 7.4763999999998e-05, 7.495899999999944e-05, 7.022199999999479e-05, 7.441700000000023e-05, 7.094500000000281e-05, 7.1069e-05, 7.50839999999961e-05, 7.44309999999998e-05, 7.033299999999881e-05, 7.105500000000042e-05, 7.077800000000051e-05, 7.09160000000042e-05, 7.025000000000087e-05, 7.45690000000035e-05, 7.462500000000177e-05, 7.52639999999985e-05, 7.090299999999716e-05, 7.409800000000161e-05, 7.477799999999757e-05, 7.11109999999987e-05, 7.070799999999572e-05, 7.025000000000087e-05, 7.459700000000263e-05, 7.40839999999951e-05, 7.038900000000403e-05, 7.44309999999998e-05, 7.106999999999947e-05, 7.443000000000033e-05, 7.490200000000169e-05, 7.524999999999893e-05, 7.491700000000073e-05, 7.41110000000017e-05, 7.41110000000017e-05, 7.405500000000342e-05, 7.51110000000027e-05, 7.50969999999962e-05]</msg>
<status status="PASS" starttime="20201115 23:00:55.582" endtime="20201115 23:00:55.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.569" endtime="20201115 23:00:55.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.599" endtime="20201115 23:00:55.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:55.607" endtime="20201115 23:00:55.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.603" endtime="20201115 23:00:55.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.595" endtime="20201115 23:00:55.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.091" endtime="20201115 23:00:55.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.087" endtime="20201115 23:00:55.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.086" endtime="20201115 23:00:55.634"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.660" endtime="20201115 23:00:55.677"></status>
</kw>
<msg timestamp="20201115 23:00:55.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.657" endtime="20201115 23:00:55.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:55.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:55.680" endtime="20201115 23:00:55.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.687" endtime="20201115 23:00:55.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.649" endtime="20201115 23:00:55.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.644" endtime="20201115 23:00:55.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:55.710" endtime="20201115 23:00:56.041"></status>
</kw>
<msg timestamp="20201115 23:00:56.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044358653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:55.706" endtime="20201115 23:00:56.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044358653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.050" endtime="20201115 23:00:56.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.069" endtime="20201115 23:00:56.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.699" endtime="20201115 23:00:56.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.695" endtime="20201115 23:00:56.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.086" level="INFO">${RESULT} = [{'time': 0.044358653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038899999999709e-05, 'source_diff': 7.038899999999709e-05}, {'time': 0.044441653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:56.077" endtime="20201115 23:00:56.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.116" level="INFO">${ACCURACY} = {'source_diff': [7.038899999999709e-05, 7.441700000000023e-05, 7.409700000000213e-05, 7.022200000000173e-05, 7.073700000000127e-05, 7.458299999999612e-05, 7.422199999999879e-05, 7.524999999999893e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:56.088" endtime="20201115 23:00:56.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.127" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.125" endtime="20201115 23:00:56.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.135" level="INFO">VALUE: [7.038899999999709e-05, 7.441700000000023e-05, 7.409700000000213e-05, 7.022200000000173e-05, 7.073700000000127e-05, 7.458299999999612e-05, 7.422199999999879e-05, 7.524999999999893e-05, 7.474999999999843e-05, 7.07910000000006e-05, 7.022200000000173e-05, 7.04030000000036e-05, 7.102700000000128e-05, 7.02230000000012e-05, 7.1069e-05, 7.108399999999904e-05, 7.026400000000044e-05, 7.44309999999998e-05, 7.493000000000083e-05, 7.493000000000083e-05, 7.487500000000202e-05, 7.054199999999983e-05, 7.072199999999529e-05, 7.42639999999975e-05, 7.443000000000033e-05, 7.498599999999911e-05, 7.022200000000173e-05, 7.577799999999857e-05, 7.52639999999985e-05, 7.109699999999913e-05, 7.1069e-05, 7.038899999999709e-05, 7.111100000000564e-05, 7.033299999999881e-05, 7.440300000000066e-05, 7.495799999999997e-05, 7.499999999999868e-05, 7.574999999999943e-05, 7.056900000000643e-05, 7.457000000000297e-05, 7.074999999999443e-05, 7.458400000000254e-05, 7.473599999999886e-05, 7.458299999999612e-05, 7.4763999999998e-05, 7.540300000000166e-05, 7.038900000000403e-05, 7.4069000000003e-05, 7.459700000000263e-05, 7.075000000000137e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.129" endtime="20201115 23:00:56.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.118" endtime="20201115 23:00:56.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.143" endtime="20201115 23:00:56.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.151" endtime="20201115 23:00:56.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.147" endtime="20201115 23:00:56.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.139" endtime="20201115 23:00:56.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.640" endtime="20201115 23:00:56.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.636" endtime="20201115 23:00:56.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:55.634" endtime="20201115 23:00:56.178"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.183" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.204" endtime="20201115 23:00:56.221"></status>
</kw>
<msg timestamp="20201115 23:00:56.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.201" endtime="20201115 23:00:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.225" endtime="20201115 23:00:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.231" endtime="20201115 23:00:56.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.194" endtime="20201115 23:00:56.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.188" endtime="20201115 23:00:56.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.254" endtime="20201115 23:00:56.585"></status>
</kw>
<msg timestamp="20201115 23:00:56.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044474861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044545264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.250" endtime="20201115 23:00:56.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044474861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044545264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.594" endtime="20201115 23:00:56.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.612" endtime="20201115 23:00:56.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.243" endtime="20201115 23:00:56.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.239" endtime="20201115 23:00:56.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:56.629" level="INFO">${RESULT} = [{'time': 0.044545264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04030000000036e-05, 'source_diff': 7.04030000000036e-05}, {'time': 0.044625556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:56.621" endtime="20201115 23:00:56.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:56.663" level="INFO">${ACCURACY} = {'source_diff': [7.04030000000036e-05, 7.104199999999339e-05, 7.408400000000204e-05, 7.495799999999997e-05, 7.113899999999784e-05, 7.573599999999986e-05, 7.493000000000083e-05, 7.459700000000263e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:56.632" endtime="20201115 23:00:56.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.674" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:56.671" endtime="20201115 23:00:56.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.679" level="INFO">VALUE: [7.04030000000036e-05, 7.104199999999339e-05, 7.408400000000204e-05, 7.495799999999997e-05, 7.113899999999784e-05, 7.573599999999986e-05, 7.493000000000083e-05, 7.459700000000263e-05, 7.576400000000594e-05, 7.441700000000023e-05, 7.06109999999982e-05, 7.495899999999944e-05, 7.524999999999893e-05, 7.091700000000367e-05, 7.041599999999676e-05, 7.46110000000022e-05, 7.458300000000306e-05, 7.42639999999975e-05, 7.043000000000327e-05, 7.408299999999562e-05, 7.1069e-05, 7.072200000000223e-05, 7.040299999999666e-05, 7.479200000000408e-05, 7.409700000000213e-05, 7.038900000000403e-05, 7.05559999999994e-05, 7.431900000000324e-05, 7.091700000000367e-05, 7.026300000000096e-05, 7.408300000000256e-05, 7.040200000000413e-05, 7.040199999999719e-05, 7.474999999999843e-05, 7.44439999999999e-05, 7.058299999999906e-05, 7.477800000000451e-05, 7.076400000000094e-05, 7.444499999999937e-05, 7.075000000000137e-05, 7.443000000000033e-05, 7.059700000000557e-05, 7.063900000000428e-05, 7.091699999999673e-05, 7.441700000000023e-05, 7.040200000000413e-05, 7.458299999999612e-05, 7.043000000000327e-05, 7.022199999999479e-05, 7.441600000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:00:56.676" endtime="20201115 23:00:56.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.665" endtime="20201115 23:00:56.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.689" endtime="20201115 23:00:56.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:56.697" endtime="20201115 23:00:56.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.693" endtime="20201115 23:00:56.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.684" endtime="20201115 23:00:56.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.184" endtime="20201115 23:00:56.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.180" endtime="20201115 23:00:56.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.178" endtime="20201115 23:00:56.723"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.750" endtime="20201115 23:00:56.767"></status>
</kw>
<msg timestamp="20201115 23:00:56.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.746" endtime="20201115 23:00:56.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:56.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:56.770" endtime="20201115 23:00:56.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.776" endtime="20201115 23:00:56.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.739" endtime="20201115 23:00:56.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.734" endtime="20201115 23:00:56.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:56.799" endtime="20201115 23:00:57.130"></status>
</kw>
<msg timestamp="20201115 23:00:57.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044416278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:56.796" endtime="20201115 23:00:57.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044416278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.140" endtime="20201115 23:00:57.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.159" endtime="20201115 23:00:57.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.789" endtime="20201115 23:00:57.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.784" endtime="20201115 23:00:57.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.176" level="INFO">${RESULT} = [{'time': 0.044487194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.09160000000042e-05, 'source_diff': 7.09160000000042e-05}, {'time': 0.044567181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:57.167" endtime="20201115 23:00:57.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.207" level="INFO">${ACCURACY} = {'source_diff': [7.09160000000042e-05, 7.494499999999987e-05, 7.494399999999346e-05, 7.038899999999709e-05, 7.561099999999626e-05, 7.108299999999956e-05, 7.427800000000401e-05, 7.458400000000254e-05, ...</msg>
<status status="PASS" starttime="20201115 23:00:57.178" endtime="20201115 23:00:57.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.218" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.215" endtime="20201115 23:00:57.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.223" level="INFO">VALUE: [7.09160000000042e-05, 7.494499999999987e-05, 7.494399999999346e-05, 7.038899999999709e-05, 7.561099999999626e-05, 7.108299999999956e-05, 7.427800000000401e-05, 7.458400000000254e-05, 7.07230000000017e-05, 7.026400000000044e-05, 7.411200000000118e-05, 7.476400000000494e-05, 7.42639999999975e-05, 7.449999999999818e-05, 7.088799999999812e-05, 7.077800000000051e-05, 7.109699999999913e-05, 7.05689999999995e-05, 7.42639999999975e-05, 7.574999999999943e-05, 7.462500000000177e-05, 7.090199999999769e-05, 7.445799999999947e-05, 7.040200000000413e-05, 7.088899999999759e-05, 7.473599999999886e-05, 7.076400000000094e-05, 7.495799999999997e-05, 7.041599999999676e-05, 7.10559999999999e-05, 7.041700000000317e-05, 7.444499999999937e-05, 7.058299999999906e-05, 7.025000000000087e-05, 7.109699999999913e-05, 7.093100000000324e-05, 7.038800000000456e-05, 7.104200000000033e-05, 7.466600000000101e-05, 7.026400000000044e-05, 7.025000000000087e-05, 7.072200000000223e-05, 7.033400000000523e-05, 7.108299999999956e-05, 7.040299999999666e-05, 7.427800000000401e-05, 7.44309999999998e-05, 7.477800000000451e-05, 7.055499999999992e-05, 7.025000000000087e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.220" endtime="20201115 23:00:57.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.209" endtime="20201115 23:00:57.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.233" endtime="20201115 23:00:57.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.241" endtime="20201115 23:00:57.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.237" endtime="20201115 23:00:57.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.228" endtime="20201115 23:00:57.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.730" endtime="20201115 23:00:57.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.726" endtime="20201115 23:00:57.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:56.724" endtime="20201115 23:00:57.267"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.272" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.294" endtime="20201115 23:00:57.311"></status>
</kw>
<msg timestamp="20201115 23:00:57.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.290" endtime="20201115 23:00:57.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.314" endtime="20201115 23:00:57.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.320" endtime="20201115 23:00:57.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.283" endtime="20201115 23:00:57.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.278" endtime="20201115 23:00:57.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.344" endtime="20201115 23:00:57.676"></status>
</kw>
<msg timestamp="20201115 23:00:57.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044533139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044603875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.340" endtime="20201115 23:00:57.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044533139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044603875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.686" endtime="20201115 23:00:57.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.704" endtime="20201115 23:00:57.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.333" endtime="20201115 23:00:57.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.329" endtime="20201115 23:00:57.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.721" level="INFO">${RESULT} = [{'time': 0.044603875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.07360000000018e-05, 'source_diff': 7.07360000000018e-05}, {'time': 0.044686819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:57.712" endtime="20201115 23:00:57.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.752" level="INFO">${ACCURACY} = {'source_diff': [7.07360000000018e-05, 7.490200000000169e-05, 7.058299999999906e-05, 7.022200000000173e-05, 7.070799999999572e-05, 7.440300000000066e-05, 7.022200000000173e-05, 7.4069000000003e-05, 7....</msg>
<status status="PASS" starttime="20201115 23:00:57.723" endtime="20201115 23:00:57.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.762" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.760" endtime="20201115 23:00:57.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.768" level="INFO">VALUE: [7.07360000000018e-05, 7.490200000000169e-05, 7.058299999999906e-05, 7.022200000000173e-05, 7.070799999999572e-05, 7.440300000000066e-05, 7.022200000000173e-05, 7.4069000000003e-05, 7.037499999999752e-05, 7.022200000000173e-05, 7.459800000000211e-05, 7.054199999999983e-05, 7.087500000000496e-05, 7.443000000000033e-05, 7.420799999999922e-05, 7.108299999999956e-05, 7.456899999999655e-05, 7.038900000000403e-05, 7.10559999999999e-05, 7.069400000000309e-05, 7.438900000000109e-05, 7.574999999999943e-05, 7.1069e-05, 7.02360000000013e-05, 7.490300000000116e-05, 7.038899999999709e-05, 7.066700000000342e-05, 7.025000000000087e-05, 7.558299999999712e-05, 7.05559999999994e-05, 7.557000000000397e-05, 7.041699999999623e-05, 7.408300000000256e-05, 7.106999999999947e-05, 7.023599999999436e-05, 7.41110000000017e-05, 7.074999999999443e-05, 7.02360000000013e-05, 7.051300000000121e-05, 7.076400000000094e-05, 7.45839999999956e-05, 7.087499999999802e-05, 7.02360000000013e-05, 7.037500000000446e-05, 7.407000000000247e-05, 7.1069e-05, 7.069500000000256e-05, 7.075000000000137e-05, 7.088900000000453e-05, 7.04160000000037e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.765" endtime="20201115 23:00:57.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.754" endtime="20201115 23:00:57.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.778" endtime="20201115 23:00:57.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.786" endtime="20201115 23:00:57.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.782" endtime="20201115 23:00:57.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.773" endtime="20201115 23:00:57.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.274" endtime="20201115 23:00:57.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.270" endtime="20201115 23:00:57.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.268" endtime="20201115 23:00:57.812"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.839" endtime="20201115 23:00:57.856"></status>
</kw>
<msg timestamp="20201115 23:00:57.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.835" endtime="20201115 23:00:57.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.859" endtime="20201115 23:00:57.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.866" endtime="20201115 23:00:57.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.828" endtime="20201115 23:00:57.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.823" endtime="20201115 23:00:57.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.889" endtime="20201115 23:00:58.219"></status>
</kw>
<msg timestamp="20201115 23:00:58.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044482194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04455675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:57.886" endtime="20201115 23:00:58.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044482194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04455675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:58.229" endtime="20201115 23:00:58.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.247" endtime="20201115 23:00:58.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.879" endtime="20201115 23:00:58.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.874" endtime="20201115 23:00:58.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.264" level="INFO">${RESULT} = [{'time': 0.04455675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.455599999999646e-05, 'source_diff': 7.455599999999646e-05}, {'time': 0.044636069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:58.255" endtime="20201115 23:00:58.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.295" level="INFO">${ACCURACY} = {'source_diff': [7.455599999999646e-05, 7.409700000000213e-05, 7.457000000000297e-05, 7.427800000000401e-05, 7.408300000000256e-05, 7.427799999999707e-05, 7.443000000000033e-05, 7.408400000000204e-05,...</msg>
<status status="PASS" starttime="20201115 23:00:58.266" endtime="20201115 23:00:58.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.305" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.303" endtime="20201115 23:00:58.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.311" level="INFO">VALUE: [7.455599999999646e-05, 7.409700000000213e-05, 7.457000000000297e-05, 7.427800000000401e-05, 7.408300000000256e-05, 7.427799999999707e-05, 7.443000000000033e-05, 7.408400000000204e-05, 7.459700000000263e-05, 7.488800000000212e-05, 7.476400000000494e-05, 7.491600000000126e-05, 7.479199999999714e-05, 7.469499999999962e-05, 7.577799999999857e-05, 7.44439999999999e-05, 7.44439999999999e-05, 7.44439999999999e-05, 7.472199999999929e-05, 7.52639999999985e-05, 7.45690000000035e-05, 7.476400000000494e-05, 7.408300000000256e-05, 7.418000000000008e-05, 7.42639999999975e-05, 7.463900000000134e-05, 7.462499999999483e-05, 7.4763999999998e-05, 7.52639999999985e-05, 7.470900000000613e-05, 7.441599999999382e-05, 7.474999999999843e-05, 7.445799999999947e-05, 7.477800000000451e-05, 7.46110000000022e-05, 7.49310000000003e-05, 7.491600000000126e-05, 7.476400000000494e-05, 7.486099999999551e-05, 7.426400000000444e-05, 7.488800000000212e-05, 7.494499999999987e-05, 7.468100000000005e-05, 7.42639999999975e-05, 7.409700000000213e-05, 7.458300000000306e-05, 7.44309999999998e-05, 7.569400000000115e-05, 7.42639999999975e-05, 7.408400000000204e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.308" endtime="20201115 23:00:58.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.296" endtime="20201115 23:00:58.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.321" endtime="20201115 23:00:58.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.329" endtime="20201115 23:00:58.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.325" endtime="20201115 23:00:58.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.316" endtime="20201115 23:00:58.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.819" endtime="20201115 23:00:58.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.815" endtime="20201115 23:00:58.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.813" endtime="20201115 23:00:58.355"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.360" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.382" endtime="20201115 23:00:58.400"></status>
</kw>
<msg timestamp="20201115 23:00:58.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.379" endtime="20201115 23:00:58.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.404" endtime="20201115 23:00:58.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.410" endtime="20201115 23:00:58.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.371" endtime="20201115 23:00:58.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.366" endtime="20201115 23:00:58.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.435" endtime="20201115 23:00:58.767"></status>
</kw>
<msg timestamp="20201115 23:00:58.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.431" endtime="20201115 23:00:58.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045409208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.777" endtime="20201115 23:00:58.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.795" endtime="20201115 23:00:58.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.424" endtime="20201115 23:00:58.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.419" endtime="20201115 23:00:58.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.813" level="INFO">${RESULT} = [{'time': 0.045409208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46110000000022e-05, 'source_diff': 7.46110000000022e-05}, {'time': 0.045491472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:58.804" endtime="20201115 23:00:58.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.847" level="INFO">${ACCURACY} = {'source_diff': [7.46110000000022e-05, 7.40969999999952e-05, 7.526299999999903e-05, 7.407000000000247e-05, 7.459800000000211e-05, 7.40969999999952e-05, 7.49440000000004e-05, 7.457000000000297e-05, 7.4...</msg>
<status status="PASS" starttime="20201115 23:00:58.816" endtime="20201115 23:00:58.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.858" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.856" endtime="20201115 23:00:58.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.865" level="INFO">VALUE: [7.46110000000022e-05, 7.40969999999952e-05, 7.526299999999903e-05, 7.407000000000247e-05, 7.459800000000211e-05, 7.40969999999952e-05, 7.49440000000004e-05, 7.457000000000297e-05, 7.462499999999483e-05, 7.474999999999843e-05, 7.409799999999467e-05, 7.424999999999793e-05, 7.459700000000263e-05, 7.490300000000116e-05, 7.54310000000008e-05, 7.409800000000161e-05, 7.42360000000053e-05, 7.473599999999886e-05, 7.443000000000033e-05, 7.409700000000213e-05, 7.491600000000126e-05, 7.4763999999998e-05, 7.42639999999975e-05, 7.445799999999947e-05, 7.447199999999904e-05, 7.424999999999793e-05, 7.46389999999944e-05, 7.409700000000213e-05, 7.46110000000022e-05, 7.497299999999901e-05, 7.4069000000003e-05, 7.426400000000444e-05, 7.444499999999937e-05, 7.41110000000017e-05, 7.52639999999985e-05, 7.442999999999339e-05, 7.441700000000023e-05, 7.4763999999998e-05, 7.487499999999508e-05, 7.41110000000017e-05, 7.426300000000496e-05, 7.5763999999999e-05, 7.46110000000022e-05, 7.462500000000177e-05, 7.476400000000494e-05, 7.412500000000127e-05, 7.456999999999603e-05, 7.491700000000073e-05, 7.49440000000004e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.860" endtime="20201115 23:00:58.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.849" endtime="20201115 23:00:58.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.873" endtime="20201115 23:00:58.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.881" endtime="20201115 23:00:58.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.877" endtime="20201115 23:00:58.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.869" endtime="20201115 23:00:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.362" endtime="20201115 23:00:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.358" endtime="20201115 23:00:58.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.356" endtime="20201115 23:00:58.909"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.935" endtime="20201115 23:00:58.953"></status>
</kw>
<msg timestamp="20201115 23:00:58.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.932" endtime="20201115 23:00:58.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.956" endtime="20201115 23:00:58.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.962" endtime="20201115 23:00:58.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.925" endtime="20201115 23:00:58.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.919" endtime="20201115 23:00:58.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.986" endtime="20201115 23:00:59.316"></status>
</kw>
<msg timestamp="20201115 23:00:59.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045639403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045714181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.982" endtime="20201115 23:00:59.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045639403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045714181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.326" endtime="20201115 23:00:59.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.344" endtime="20201115 23:00:59.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.975" endtime="20201115 23:00:59.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.970" endtime="20201115 23:00:59.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.361" level="INFO">${RESULT} = [{'time': 0.045714181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.477799999999757e-05, 'source_diff': 7.477799999999757e-05}, {'time': 0.045799375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.352" endtime="20201115 23:00:59.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.392" level="INFO">${ACCURACY} = {'source_diff': [7.477799999999757e-05, 7.42360000000053e-05, 7.424999999999793e-05, 7.440300000000066e-05, 7.459700000000263e-05, 7.495899999999944e-05, 7.422299999999826e-05, 7.40969999999952e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:00:59.363" endtime="20201115 23:00:59.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.403" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.400" endtime="20201115 23:00:59.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.408" level="INFO">VALUE: [7.477799999999757e-05, 7.42360000000053e-05, 7.424999999999793e-05, 7.440300000000066e-05, 7.459700000000263e-05, 7.495899999999944e-05, 7.422299999999826e-05, 7.40969999999952e-05, 7.458400000000254e-05, 7.423699999999783e-05, 7.441600000000076e-05, 7.497299999999901e-05, 7.573599999999986e-05, 7.556999999999703e-05, 7.458400000000254e-05, 7.441600000000076e-05, 7.440199999999425e-05, 7.424999999999793e-05, 7.44439999999999e-05, 7.490300000000116e-05, 7.406899999999605e-05, 7.49310000000003e-05, 7.52769999999986e-05, 7.494499999999987e-05, 7.441700000000023e-05, 7.438800000000162e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.452700000000478e-05, 7.49310000000003e-05, 7.41110000000017e-05, 7.422199999999879e-05, 7.441600000000076e-05, 7.488799999999518e-05, 7.42639999999975e-05, 7.458300000000306e-05, 7.490200000000169e-05, 7.440200000000119e-05, 7.459700000000263e-05, 7.441600000000076e-05, 7.424999999999793e-05, 7.52639999999985e-05, 7.472199999999929e-05, 7.424999999999793e-05, 7.488900000000159e-05, 7.493000000000083e-05, 7.529199999999764e-05, 7.541600000000176e-05, 7.405499999999648e-05, 7.456999999999603e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.405" endtime="20201115 23:00:59.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.394" endtime="20201115 23:00:59.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.419" endtime="20201115 23:00:59.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.427" endtime="20201115 23:00:59.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.423" endtime="20201115 23:00:59.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.414" endtime="20201115 23:00:59.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.915" endtime="20201115 23:00:59.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.911" endtime="20201115 23:00:59.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.910" endtime="20201115 23:00:59.464"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.469" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.490" endtime="20201115 23:00:59.509"></status>
</kw>
<msg timestamp="20201115 23:00:59.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.487" endtime="20201115 23:00:59.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.512" endtime="20201115 23:00:59.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.518" endtime="20201115 23:00:59.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.480" endtime="20201115 23:00:59.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.474" endtime="20201115 23:00:59.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.542" endtime="20201115 23:00:59.871"></status>
</kw>
<msg timestamp="20201115 23:00:59.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.054976014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055058486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.538" endtime="20201115 23:00:59.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.054976014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055058486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.880" endtime="20201115 23:00:59.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.899" endtime="20201115 23:00:59.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.531" endtime="20201115 23:00:59.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.527" endtime="20201115 23:00:59.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.916" level="INFO">${RESULT} = [{'time': 0.055058486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.24720000000001e-05, 'source_diff': 8.24720000000001e-05}, {'time': 0.055147778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:59.907" endtime="20201115 23:00:59.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.947" level="INFO">${ACCURACY} = {'source_diff': [8.24720000000001e-05, 8.133400000000235e-05, 8.13049999999968e-05, 8.155599999999652e-05, 8.140200000000125e-05, 8.191600000000132e-05, 8.14719999999991e-05, 8.111100000000177e-05, 8....</msg>
<status status="PASS" starttime="20201115 23:00:59.918" endtime="20201115 23:00:59.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.957" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.955" endtime="20201115 23:00:59.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.964" level="INFO">VALUE: [8.24720000000001e-05, 8.133400000000235e-05, 8.13049999999968e-05, 8.155599999999652e-05, 8.140200000000125e-05, 8.191600000000132e-05, 8.14719999999991e-05, 8.111100000000177e-05, 8.120899999999875e-05, 8.148599999999867e-05, 8.211099999999583e-05, 8.182000000000328e-05, 8.280500000000524e-05, 8.24720000000001e-05, 8.186099999999558e-05, 8.281899999999787e-05, 8.112500000000133e-05, 8.130599999999627e-05, 8.194499999999993e-05, 8.116700000000004e-05, 8.16390000000014e-05, 8.122199999999885e-05, 8.16390000000014e-05, 8.186100000000252e-05, 8.16390000000014e-05, 8.136200000000149e-05, 8.215300000000147e-05, 8.156999999999609e-05, 8.166600000000107e-05, 8.194400000000046e-05, 8.186100000000252e-05, 8.17090000000062e-05, 8.154199999999695e-05, 8.192999999999395e-05, 8.19719999999996e-05, 8.108399999999516e-05, 8.162500000000183e-05, 8.124999999999799e-05, 8.170899999999925e-05, 8.187499999999515e-05, 8.187499999999515e-05, 8.149999999999824e-05, 8.133399999999541e-05, 8.168000000000064e-05, 8.129200000000364e-05, 8.123599999999842e-05, 8.120800000000622e-05, 8.134700000000245e-05, 8.1152000000001e-05, 8.137500000000158e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.960" endtime="20201115 23:00:59.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.949" endtime="20201115 23:00:59.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.974" endtime="20201115 23:00:59.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.982" endtime="20201115 23:01:00.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.978" endtime="20201115 23:01:00.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.969" endtime="20201115 23:01:00.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.470" endtime="20201115 23:01:00.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.466" endtime="20201115 23:01:00.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.465" endtime="20201115 23:01:00.008"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.035" endtime="20201115 23:01:00.053"></status>
</kw>
<msg timestamp="20201115 23:01:00.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.031" endtime="20201115 23:01:00.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.056" endtime="20201115 23:01:00.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.062" endtime="20201115 23:01:00.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.024" endtime="20201115 23:01:00.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.019" endtime="20201115 23:01:00.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.085" endtime="20201115 23:01:00.415"></status>
</kw>
<msg timestamp="20201115 23:01:00.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044784653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.082" endtime="20201115 23:01:00.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044784653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.425" endtime="20201115 23:01:00.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.443" endtime="20201115 23:01:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.075" endtime="20201115 23:01:00.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.070" endtime="20201115 23:01:00.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.461" level="INFO">${RESULT} = [{'time': 0.044784653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.304199999999845e-05, 'source_diff': 8.304199999999845e-05}, {'time': 0.044872861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.452" endtime="20201115 23:01:00.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.493" level="INFO">${ACCURACY} = {'source_diff': [8.304199999999845e-05, 8.320800000000128e-05, 8.306900000000506e-05, 8.387500000000409e-05, 8.350000000000024e-05, 8.405599999999902e-05, 8.38049999999993e-05, 8.387499999999715e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:00.464" endtime="20201115 23:01:00.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.504" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.502" endtime="20201115 23:01:00.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.511" level="INFO">VALUE: [8.304199999999845e-05, 8.320800000000128e-05, 8.306900000000506e-05, 8.387500000000409e-05, 8.350000000000024e-05, 8.405599999999902e-05, 8.38049999999993e-05, 8.387499999999715e-05, 8.334700000000445e-05, 8.354099999999948e-05, 8.358300000000513e-05, 8.327799999999913e-05, 8.356999999999809e-05, 8.381999999999834e-05, 8.357000000000503e-05, 8.290299999999529e-05, 8.319500000000118e-05, 8.374999999999355e-05, 8.390200000000375e-05, 8.390300000000323e-05, 8.301399999999931e-05, 8.441699999999636e-05, 8.366700000000254e-05, 8.326399999999956e-05, 8.333299999999794e-05, 8.441600000000382e-05, 8.302799999999888e-05, 8.337499999999665e-05, 8.36249999999969e-05, 8.375000000000049e-05, 8.251399999999881e-05, 8.363899999999647e-05, 8.411099999999783e-05, 8.355499999999905e-05, 8.306899999999812e-05, 8.363800000000393e-05, 8.366599999999613e-05, 8.44170000000033e-05, 8.408399999999816e-05, 8.354199999999895e-05, 8.358300000000513e-05, 8.222199999999985e-05, 8.395800000000203e-05, 8.395800000000203e-05, 8.36390000000034e-05, 8.352799999999938e-05, 8.316600000000257e-05, 8.322200000000085e-05, 8.356999999999809e-05, 8.240300000000172e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.507" endtime="20201115 23:01:00.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.495" endtime="20201115 23:01:00.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.520" endtime="20201115 23:01:00.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.528" endtime="20201115 23:01:00.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.524" endtime="20201115 23:01:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.516" endtime="20201115 23:01:00.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.015" endtime="20201115 23:01:00.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.011" endtime="20201115 23:01:00.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.009" endtime="20201115 23:01:00.556"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.582" endtime="20201115 23:01:00.600"></status>
</kw>
<msg timestamp="20201115 23:01:00.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.579" endtime="20201115 23:01:00.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.604" endtime="20201115 23:01:00.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.610" endtime="20201115 23:01:00.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.572" endtime="20201115 23:01:00.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.566" endtime="20201115 23:01:00.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.633" endtime="20201115 23:01:00.967"></status>
</kw>
<msg timestamp="20201115 23:01:00.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045727264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045812097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.630" endtime="20201115 23:01:00.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045727264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045812097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.977" endtime="20201115 23:01:01.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.002" endtime="20201115 23:01:01.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.623" endtime="20201115 23:01:01.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.618" endtime="20201115 23:01:01.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.019" level="INFO">${RESULT} = [{'time': 0.045812097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.483300000000638e-05, 'source_diff': 8.483300000000638e-05}, {'time': 0.045906264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.011" endtime="20201115 23:01:01.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.052" level="INFO">${ACCURACY} = {'source_diff': [8.483300000000638e-05, 8.444500000000243e-05, 8.430599999999927e-05, 8.438899999999722e-05, 8.473600000000192e-05, 8.493099999999643e-05, 8.454199999999995e-05, 8.423599999999448e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:01.021" endtime="20201115 23:01:01.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.063" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.061" endtime="20201115 23:01:01.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.070" level="INFO">VALUE: [8.483300000000638e-05, 8.444500000000243e-05, 8.430599999999927e-05, 8.438899999999722e-05, 8.473600000000192e-05, 8.493099999999643e-05, 8.454199999999995e-05, 8.423599999999448e-05, 8.490300000000423e-05, 8.483399999999891e-05, 8.483299999999944e-05, 8.440299999999679e-05, 8.46669999999966e-05, 8.505600000000002e-05, 8.463899999999747e-05, 8.543100000000386e-05, 8.491699999999686e-05, 8.465300000000398e-05, 8.423600000000142e-05, 8.480599999999977e-05, 8.409699999999826e-05, 8.405600000000596e-05, 8.470899999999532e-05, 8.409799999999773e-05, 8.47920000000002e-05, 8.544400000000396e-05, 8.509799999999873e-05, 8.423600000000142e-05, 8.415299999999654e-05, 8.468099999999618e-05, 8.415300000000348e-05, 8.448600000000167e-05, 8.406899999999912e-05, 8.576400000000206e-05, 8.430599999999927e-05, 8.488900000000466e-05, 8.466700000000354e-05, 8.495799999999609e-05, 8.433399999999841e-05, 8.436099999999808e-05, 8.451400000000081e-05, 8.455599999999952e-05, 8.469399999999627e-05, 8.411100000000477e-05, 8.41249999999974e-05, 8.415300000000348e-05, 8.486099999999858e-05, 8.508399999999916e-05, 8.455599999999952e-05, 8.451400000000081e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.065" endtime="20201115 23:01:01.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.054" endtime="20201115 23:01:01.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.078" endtime="20201115 23:01:01.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.086" endtime="20201115 23:01:01.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.082" endtime="20201115 23:01:01.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.074" endtime="20201115 23:01:01.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.562" endtime="20201115 23:01:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.558" endtime="20201115 23:01:01.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.557" endtime="20201115 23:01:01.113"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.139" endtime="20201115 23:01:01.157"></status>
</kw>
<msg timestamp="20201115 23:01:01.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.136" endtime="20201115 23:01:01.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.161" endtime="20201115 23:01:01.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.167" endtime="20201115 23:01:01.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.129" endtime="20201115 23:01:01.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.123" endtime="20201115 23:01:01.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.191" endtime="20201115 23:01:01.523"></status>
</kw>
<msg timestamp="20201115 23:01:01.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044620778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044706556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.187" endtime="20201115 23:01:01.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044620778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044706556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.532" endtime="20201115 23:01:01.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.551" endtime="20201115 23:01:01.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.180" endtime="20201115 23:01:01.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.175" endtime="20201115 23:01:01.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.568" level="INFO">${RESULT} = [{'time': 0.044706556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.577800000000163e-05, 'source_diff': 8.577800000000163e-05}, {'time': 0.04479975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:01.559" endtime="20201115 23:01:01.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.599" level="INFO">${ACCURACY} = {'source_diff': [8.577800000000163e-05, 8.577800000000163e-05, 8.59170000000048e-05, 8.543100000000386e-05, 8.541699999999736e-05, 8.5847e-05, 8.556900000000062e-05, 8.59170000000048e-05, 8.5042000000...</msg>
<status status="PASS" starttime="20201115 23:01:01.570" endtime="20201115 23:01:01.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.610" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.607" endtime="20201115 23:01:01.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.616" level="INFO">VALUE: [8.577800000000163e-05, 8.577800000000163e-05, 8.59170000000048e-05, 8.543100000000386e-05, 8.541699999999736e-05, 8.5847e-05, 8.556900000000062e-05, 8.59170000000048e-05, 8.504200000000045e-05, 8.551400000000181e-05, 8.57920000000012e-05, 8.544399999999702e-05, 8.522200000000285e-05, 8.547199999999616e-05, 8.620799999999734e-05, 8.519400000000371e-05, 8.522199999999591e-05, 8.558300000000019e-05, 8.522200000000285e-05, 8.602800000000188e-05, 8.506999999999959e-05, 8.545899999999607e-05, 8.555600000000052e-05, 8.602800000000188e-05, 8.53469999999995e-05, 8.552800000000138e-05, 8.538899999999822e-05, 8.529100000000123e-05, 8.552800000000138e-05, 8.56669999999976e-05, 8.522299999999539e-05, 8.56390000000054e-05, 8.534799999999898e-05, 8.505600000000002e-05, 8.59999999999958e-05, 8.558399999999966e-05, 8.526400000000156e-05, 8.58050000000013e-05, 8.5847e-05, 8.531900000000037e-05, 8.531900000000037e-05, 8.577799999999469e-05, 8.551400000000181e-05, 8.513899999999797e-05, 8.582000000000034e-05, 8.551399999999487e-05, 8.558300000000019e-05, 8.536099999999908e-05, 8.555600000000052e-05, 8.690299999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.612" endtime="20201115 23:01:01.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.601" endtime="20201115 23:01:01.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.625" endtime="20201115 23:01:01.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.633" endtime="20201115 23:01:01.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.629" endtime="20201115 23:01:01.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.620" endtime="20201115 23:01:01.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.119" endtime="20201115 23:01:01.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.115" endtime="20201115 23:01:01.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.114" endtime="20201115 23:01:01.659"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.689" endtime="20201115 23:01:01.708"></status>
</kw>
<msg timestamp="20201115 23:01:01.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.685" endtime="20201115 23:01:01.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.712" endtime="20201115 23:01:01.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.720" endtime="20201115 23:01:01.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.676" endtime="20201115 23:01:01.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.669" endtime="20201115 23:01:01.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.749" endtime="20201115 23:01:02.086"></status>
</kw>
<msg timestamp="20201115 23:01:02.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048449764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048536472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.744" endtime="20201115 23:01:02.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048449764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048536472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.095" endtime="20201115 23:01:02.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.114" endtime="20201115 23:01:02.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.736" endtime="20201115 23:01:02.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.730" endtime="20201115 23:01:02.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.131" level="INFO">${RESULT} = [{'time': 0.048536472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.670799999999784e-05, 'source_diff': 8.670799999999784e-05}, {'time': 0.048630681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.122" endtime="20201115 23:01:02.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.161" level="INFO">${ACCURACY} = {'source_diff': [8.670799999999784e-05, 8.688899999999972e-05, 8.636100000000008e-05, 8.609700000000026e-05, 8.63470000000005e-05, 8.620799999999734e-05, 8.611099999999983e-05, 8.670799999999784e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:02.133" endtime="20201115 23:01:02.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.172" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.170" endtime="20201115 23:01:02.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.179" level="INFO">VALUE: [8.670799999999784e-05, 8.688899999999972e-05, 8.636100000000008e-05, 8.609700000000026e-05, 8.63470000000005e-05, 8.620799999999734e-05, 8.611099999999983e-05, 8.670799999999784e-05, 8.630499999999486e-05, 8.650000000000324e-05, 8.669500000000468e-05, 8.622299999999639e-05, 8.783400000000191e-05, 8.605499999999461e-05, 8.656900000000162e-05, 8.631899999999443e-05, 8.638899999999922e-05, 8.658400000000066e-05, 8.675000000000349e-05, 8.661100000000033e-05, 8.61249999999994e-05, 8.619500000000418e-05, 8.63470000000005e-05, 8.643100000000487e-05, 8.625000000000299e-05, 8.736100000000108e-05, 8.609699999999332e-05, 8.622199999999691e-05, 8.648600000000367e-05, 8.61799999999982e-05, 8.63470000000005e-05, 8.780600000000277e-05, 8.686200000000005e-05, 8.674999999999655e-05, 8.698700000000364e-05, 8.681900000000187e-05, 8.697199999999766e-05, 8.66249999999999e-05, 8.608300000000069e-05, 8.656900000000162e-05, 8.736100000000108e-05, 8.638899999999922e-05, 8.62370000000029e-05, 8.59999999999958e-05, 8.65129999999964e-05, 8.601400000000231e-05, 8.645800000000453e-05, 8.620800000000428e-05, 8.697199999999766e-05, 8.606899999999418e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.174" endtime="20201115 23:01:02.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.163" endtime="20201115 23:01:02.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.187" endtime="20201115 23:01:02.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.196" endtime="20201115 23:01:02.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.191" endtime="20201115 23:01:02.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.183" endtime="20201115 23:01:02.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.666" endtime="20201115 23:01:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.662" endtime="20201115 23:01:02.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.660" endtime="20201115 23:01:02.222"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.249" endtime="20201115 23:01:02.267"></status>
</kw>
<msg timestamp="20201115 23:01:02.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.246" endtime="20201115 23:01:02.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.271" endtime="20201115 23:01:02.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.277" endtime="20201115 23:01:02.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.238" endtime="20201115 23:01:02.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.232" endtime="20201115 23:01:02.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.300" endtime="20201115 23:01:02.633"></status>
</kw>
<msg timestamp="20201115 23:01:02.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045279458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.297" endtime="20201115 23:01:02.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045279458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.642" endtime="20201115 23:01:02.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.661" endtime="20201115 23:01:02.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.289" endtime="20201115 23:01:02.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.285" endtime="20201115 23:01:02.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.678" level="INFO">${RESULT} = [{'time': 0.045367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791699999999986e-05, 'source_diff': 8.791699999999986e-05}, {'time': 0.045465597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.669" endtime="20201115 23:01:02.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.708" level="INFO">${ACCURACY} = {'source_diff': [8.791699999999986e-05, 8.776400000000406e-05, 8.740200000000031e-05, 8.723600000000442e-05, 8.78050000000033e-05, 8.798599999999823e-05, 8.705499999999561e-05, 8.747199999999816e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:02.680" endtime="20201115 23:01:02.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.719" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.717" endtime="20201115 23:01:02.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.726" level="INFO">VALUE: [8.791699999999986e-05, 8.776400000000406e-05, 8.740200000000031e-05, 8.723600000000442e-05, 8.78050000000033e-05, 8.798599999999823e-05, 8.705499999999561e-05, 8.747199999999816e-05, 8.790300000000029e-05, 8.713899999999997e-05, 8.815300000000054e-05, 8.798599999999823e-05, 8.704099999999604e-05, 8.781899999999593e-05, 8.879199999999726e-05, 8.772199999999841e-05, 8.798599999999823e-05, 8.781899999999593e-05, 8.868100000000018e-05, 8.741699999999936e-05, 8.751399999999687e-05, 8.741699999999936e-05, 8.777800000000363e-05, 8.740299999999979e-05, 8.709699999999432e-05, 8.723600000000442e-05, 8.784700000000201e-05, 8.737499999999371e-05, 8.736100000000108e-05, 8.76250000000009e-05, 8.744399999999902e-05, 8.745799999999859e-05, 8.758300000000219e-05, 8.719500000000519e-05, 8.76799999999997e-05, 8.727800000000313e-05, 8.719500000000519e-05, 8.787500000000115e-05, 8.776400000000406e-05, 8.77920000000032e-05, 8.861100000000233e-05, 8.702799999999594e-05, 8.788900000000072e-05, 8.870899999999932e-05, 8.773599999999798e-05, 8.695799999999809e-05, 8.71669999999991e-05, 8.741599999999988e-05, 8.713899999999997e-05, 8.708300000000169e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.721" endtime="20201115 23:01:02.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.710" endtime="20201115 23:01:02.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.734" endtime="20201115 23:01:02.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.743" endtime="20201115 23:01:02.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.738" endtime="20201115 23:01:02.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.730" endtime="20201115 23:01:02.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.228" endtime="20201115 23:01:02.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.225" endtime="20201115 23:01:02.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.223" endtime="20201115 23:01:02.770"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.796" endtime="20201115 23:01:02.814"></status>
</kw>
<msg timestamp="20201115 23:01:02.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.793" endtime="20201115 23:01:02.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.818" endtime="20201115 23:01:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.824" endtime="20201115 23:01:02.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.786" endtime="20201115 23:01:02.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.780" endtime="20201115 23:01:02.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.847" endtime="20201115 23:01:03.178"></status>
</kw>
<msg timestamp="20201115 23:01:03.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045325542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045416319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.844" endtime="20201115 23:01:03.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045325542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045416319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.188" endtime="20201115 23:01:03.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.206" endtime="20201115 23:01:03.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.837" endtime="20201115 23:01:03.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.832" endtime="20201115 23:01:03.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.223" level="INFO">${RESULT} = [{'time': 0.045416319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.077699999999328e-05, 'source_diff': 9.077699999999328e-05}, {'time': 0.045510569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.214" endtime="20201115 23:01:03.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.256" level="INFO">${ACCURACY} = {'source_diff': [9.077699999999328e-05, 8.954099999999854e-05, 8.981899999999793e-05, 8.969399999999433e-05, 9.090300000000329e-05, 8.923699999999896e-05, 9.047300000000064e-05, 8.979099999999879e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:03.225" endtime="20201115 23:01:03.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.267" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.265" endtime="20201115 23:01:03.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.274" level="INFO">VALUE: [9.077699999999328e-05, 8.954099999999854e-05, 8.981899999999793e-05, 8.969399999999433e-05, 9.090300000000329e-05, 8.923699999999896e-05, 9.047300000000064e-05, 8.979099999999879e-05, 8.972200000000041e-05, 9.029099999999929e-05, 8.919500000000025e-05, 8.905500000000455e-05, 8.987500000000315e-05, 9.029199999999876e-05, 8.905599999999708e-05, 8.897199999999966e-05, 9.027799999999919e-05, 8.987500000000315e-05, 8.923599999999948e-05, 8.965300000000204e-05, 8.979199999999826e-05, 8.934700000000351e-05, 8.983399999999697e-05, 8.993100000000143e-05, 8.973599999999998e-05, 8.898599999999923e-05, 8.913899999999503e-05, 8.968100000000118e-05, 8.993000000000195e-05, 8.96250000000029e-05, 8.9945000000001e-05, 8.958399999999672e-05, 8.902800000000488e-05, 8.973599999999998e-05, 8.997200000000066e-05, 8.954200000000495e-05, 8.951399999999887e-05, 8.986100000000358e-05, 8.895800000000009e-05, 8.906999999999665e-05, 8.909699999999632e-05, 8.972299999999989e-05, 8.913900000000197e-05, 8.923599999999948e-05, 8.96659999999952e-05, 8.936099999999614e-05, 8.951399999999887e-05, 8.974999999999955e-05, 8.979199999999826e-05, 8.959699999999682e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.270" endtime="20201115 23:01:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.258" endtime="20201115 23:01:03.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.283" endtime="20201115 23:01:03.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.291" endtime="20201115 23:01:03.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.287" endtime="20201115 23:01:03.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.279" endtime="20201115 23:01:03.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.776" endtime="20201115 23:01:03.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.772" endtime="20201115 23:01:03.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.770" endtime="20201115 23:01:03.318"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.323" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.344" endtime="20201115 23:01:03.362"></status>
</kw>
<msg timestamp="20201115 23:01:03.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.341" endtime="20201115 23:01:03.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.366" endtime="20201115 23:01:03.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.372" endtime="20201115 23:01:03.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.334" endtime="20201115 23:01:03.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.328" endtime="20201115 23:01:03.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.395" endtime="20201115 23:01:03.726"></status>
</kw>
<msg timestamp="20201115 23:01:03.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044603778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044694625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.392" endtime="20201115 23:01:03.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044603778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044694625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.736" endtime="20201115 23:01:03.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.754" endtime="20201115 23:01:03.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.385" endtime="20201115 23:01:03.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.380" endtime="20201115 23:01:03.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.771" level="INFO">${RESULT} = [{'time': 0.044694625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.084700000000501e-05, 'source_diff': 9.084700000000501e-05}, {'time': 0.044794958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.763" endtime="20201115 23:01:03.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.802" level="INFO">${ACCURACY} = {'source_diff': [9.084700000000501e-05, 9.11250000000044e-05, 9.086099999999764e-05, 9.08199999999984e-05, 9.180599999999983e-05, 9.058399999999772e-05, 9.05000000000003e-05, 9.092999999999601e-05, 9....</msg>
<status status="PASS" starttime="20201115 23:01:03.774" endtime="20201115 23:01:03.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.813" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.810" endtime="20201115 23:01:03.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.820" level="INFO">VALUE: [9.084700000000501e-05, 9.11250000000044e-05, 9.086099999999764e-05, 9.08199999999984e-05, 9.180599999999983e-05, 9.058399999999772e-05, 9.05000000000003e-05, 9.092999999999601e-05, 9.106899999999918e-05, 9.10000000000008e-05, 9.041599999999594e-05, 9.033400000000441e-05, 9.062499999999696e-05, 9.080499999999936e-05, 9.059700000000476e-05, 9.019399999999483e-05, 9.129199999999976e-05, 9.026399999999962e-05, 9.044499999999456e-05, 9.026300000000015e-05, 9.104199999999951e-05, 9.045900000000107e-05, 9.031900000000537e-05, 9.045900000000107e-05, 9.093100000000243e-05, 9.109699999999832e-05, 9.036100000000408e-05, 9.072199999999447e-05, 9.013900000000297e-05, 9.107000000000559e-05, 9.008399999999722e-05, 9.022300000000039e-05, 9.023600000000048e-05, 9.083399999999797e-05, 9.083399999999797e-05, 9.033400000000441e-05, 9.06800000000027e-05, 9.069400000000227e-05, 9.018099999999474e-05, 9.015200000000306e-05, 9.06800000000027e-05, 9.023600000000048e-05, 9.061099999999739e-05, 9.088899999999678e-05, 9.156899999999968e-05, 9.051399999999987e-05, 9.036099999999714e-05, 9.018099999999474e-05, 9.106899999999918e-05, 9.030599999999833e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.815" endtime="20201115 23:01:03.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.804" endtime="20201115 23:01:03.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.829" endtime="20201115 23:01:03.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.837" endtime="20201115 23:01:03.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.832" endtime="20201115 23:01:03.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.824" endtime="20201115 23:01:03.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.324" endtime="20201115 23:01:03.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.320" endtime="20201115 23:01:03.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.318" endtime="20201115 23:01:03.863"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.868" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.889" endtime="20201115 23:01:03.908"></status>
</kw>
<msg timestamp="20201115 23:01:03.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.886" endtime="20201115 23:01:03.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.911" endtime="20201115 23:01:03.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.917" endtime="20201115 23:01:03.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.879" endtime="20201115 23:01:03.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.873" endtime="20201115 23:01:03.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.940" endtime="20201115 23:01:04.271"></status>
</kw>
<msg timestamp="20201115 23:01:04.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044509597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.937" endtime="20201115 23:01:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044509597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.280" endtime="20201115 23:01:04.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.299" endtime="20201115 23:01:04.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.930" endtime="20201115 23:01:04.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.925" endtime="20201115 23:01:04.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.316" level="INFO">${RESULT} = [{'time': 0.044509597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.186099999999864e-05, 'source_diff': 9.186099999999864e-05}, {'time': 0.044607861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:04.307" endtime="20201115 23:01:04.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.347" level="INFO">${ACCURACY} = {'source_diff': [9.186099999999864e-05, 9.187499999999821e-05, 9.179200000000026e-05, 9.126400000000062e-05, 9.136099999999814e-05, 9.176400000000112e-05, 9.279200000000126e-05, 9.195799999999615e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:04.319" endtime="20201115 23:01:04.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.358" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.356" endtime="20201115 23:01:04.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.365" level="INFO">VALUE: [9.186099999999864e-05, 9.187499999999821e-05, 9.179200000000026e-05, 9.126400000000062e-05, 9.136099999999814e-05, 9.176400000000112e-05, 9.279200000000126e-05, 9.195799999999615e-05, 9.280500000000136e-05, 9.168099999999624e-05, 9.106899999999918e-05, 9.191699999999692e-05, 9.169399999999633e-05, 9.156899999999968e-05, 9.105599999999908e-05, 9.127800000000019e-05, 9.183399999999897e-05, 9.127700000000072e-05, 9.272200000000341e-05, 9.213899999999803e-05, 9.141700000000336e-05, 9.127700000000072e-05, 9.136100000000508e-05, 9.108299999999875e-05, 9.11250000000044e-05, 9.156899999999968e-05, 9.147199999999522e-05, 9.163899999999753e-05, 9.191599999999744e-05, 9.109699999999832e-05, 9.138899999999728e-05, 9.202700000000147e-05, 9.123600000000148e-05, 9.234699999999957e-05, 9.131899999999943e-05, 9.141600000000388e-05, 9.144400000000302e-05, 9.127800000000019e-05, 9.190300000000429e-05, 9.195800000000309e-05, 9.156899999999968e-05, 9.163900000000447e-05, 9.179100000000079e-05, 9.162499999999796e-05, 9.262499999999896e-05, 9.111100000000483e-05, 9.263899999999853e-05, 9.101400000000037e-05, 9.213900000000497e-05, 9.154200000000001e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.360" endtime="20201115 23:01:04.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.349" endtime="20201115 23:01:04.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.374" endtime="20201115 23:01:04.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.382" endtime="20201115 23:01:04.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.377" endtime="20201115 23:01:04.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.369" endtime="20201115 23:01:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.869" endtime="20201115 23:01:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.866" endtime="20201115 23:01:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.864" endtime="20201115 23:01:04.408"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.435" endtime="20201115 23:01:04.453"></status>
</kw>
<msg timestamp="20201115 23:01:04.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.431" endtime="20201115 23:01:04.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.457" endtime="20201115 23:01:04.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.463" endtime="20201115 23:01:04.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.424" endtime="20201115 23:01:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.419" endtime="20201115 23:01:04.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.486" endtime="20201115 23:01:04.819"></status>
</kw>
<msg timestamp="20201115 23:01:04.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045102292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.483" endtime="20201115 23:01:04.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045102292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.828" endtime="20201115 23:01:04.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.847" endtime="20201115 23:01:04.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.476" endtime="20201115 23:01:04.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.471" endtime="20201115 23:01:04.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.865" level="INFO">${RESULT} = [{'time': 0.045102292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.338899999999928e-05, 'source_diff': 9.338899999999928e-05}, {'time': 0.0452005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:04.856" endtime="20201115 23:01:04.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.895" level="INFO">${ACCURACY} = {'source_diff': [9.338899999999928e-05, 9.295799999999715e-05, 9.269400000000427e-05, 9.255600000000058e-05, 9.205500000000061e-05, 9.26529999999981e-05, 9.30000000000028e-05, 9.263799999999905e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:01:04.867" endtime="20201115 23:01:04.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.906" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.904" endtime="20201115 23:01:04.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.912" level="INFO">VALUE: [9.338899999999928e-05, 9.295799999999715e-05, 9.269400000000427e-05, 9.255600000000058e-05, 9.205500000000061e-05, 9.26529999999981e-05, 9.30000000000028e-05, 9.263799999999905e-05, 9.236100000000608e-05, 9.213799999999855e-05, 9.261099999999939e-05, 9.295799999999715e-05, 9.251400000000187e-05, 9.261099999999939e-05, 9.259699999999982e-05, 9.25000000000023e-05, 9.323600000000348e-05, 9.265300000000504e-05, 9.244399999999708e-05, 9.391699999999892e-05, 9.237499999999871e-05, 9.284799999999954e-05, 9.286099999999964e-05, 9.26529999999981e-05, 9.243100000000393e-05, 9.234799999999904e-05, 9.340300000000579e-05, 9.234799999999904e-05, 9.233399999999947e-05, 9.209699999999932e-05, 9.212499999999846e-05, 9.21659999999977e-05, 9.25000000000023e-05, 9.270900000000332e-05, 9.213899999999803e-05, 9.30000000000028e-05, 9.27079999999969e-05, 9.254199999999407e-05, 9.243100000000393e-05, 9.234699999999957e-05, 9.261099999999939e-05, 9.261100000000633e-05, 9.256900000000068e-05, 9.281899999999399e-05, 9.355600000000158e-05, 9.281900000000093e-05, 9.273600000000298e-05, 9.216699999999717e-05, 9.370899999999738e-05, 9.304100000000204e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.908" endtime="20201115 23:01:04.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.897" endtime="20201115 23:01:04.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.921" endtime="20201115 23:01:04.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.929" endtime="20201115 23:01:04.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.925" endtime="20201115 23:01:04.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.917" endtime="20201115 23:01:04.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.415" endtime="20201115 23:01:04.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.411" endtime="20201115 23:01:04.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.409" endtime="20201115 23:01:04.955"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.982" endtime="20201115 23:01:05.000"></status>
</kw>
<msg timestamp="20201115 23:01:05.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.978" endtime="20201115 23:01:05.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.004" endtime="20201115 23:01:05.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.010" endtime="20201115 23:01:05.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.971" endtime="20201115 23:01:05.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.966" endtime="20201115 23:01:05.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.034" endtime="20201115 23:01:05.363"></status>
</kw>
<msg timestamp="20201115 23:01:05.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044524139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044618167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.030" endtime="20201115 23:01:05.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044524139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044618167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.372" endtime="20201115 23:01:05.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.391" endtime="20201115 23:01:05.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.022" endtime="20201115 23:01:05.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.018" endtime="20201115 23:01:05.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.408" level="INFO">${RESULT} = [{'time': 0.044618167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402800000000294e-05, 'source_diff': 9.402800000000294e-05}, {'time': 0.044717444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:05.399" endtime="20201115 23:01:05.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.441" level="INFO">${ACCURACY} = {'source_diff': [9.402800000000294e-05, 9.406900000000218e-05, 9.413900000000003e-05, 9.309700000000032e-05, 9.405600000000208e-05, 9.402700000000347e-05, 9.4027999999996e-05, 9.441699999999942e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:01:05.410" endtime="20201115 23:01:05.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.452" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.450" endtime="20201115 23:01:05.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.458" level="INFO">VALUE: [9.402800000000294e-05, 9.406900000000218e-05, 9.413900000000003e-05, 9.309700000000032e-05, 9.405600000000208e-05, 9.402700000000347e-05, 9.4027999999996e-05, 9.441699999999942e-05, 9.33059999999944e-05, 9.458300000000225e-05, 9.327800000000219e-05, 9.359800000000029e-05, 9.401400000000337e-05, 9.359700000000082e-05, 9.361099999999345e-05, 9.315199999999912e-05, 9.362499999999996e-05, 9.326399999999568e-05, 9.393099999999849e-05, 9.442999999999951e-05, 9.424999999999711e-05, 9.387500000000021e-05, 9.361100000000039e-05, 9.393099999999849e-05, 9.494399999999958e-05, 9.354200000000201e-05, 9.38200000000014e-05, 9.37079999999979e-05, 9.423600000000448e-05, 9.361100000000039e-05, 9.342999999999851e-05, 9.340299999999885e-05, 9.31800000000052e-05, 9.361100000000039e-05, 9.311099999999989e-05, 9.31250000000064e-05, 9.370800000000484e-05, 9.384700000000107e-05, 9.3333000000001e-05, 9.437500000000071e-05, 9.362499999999996e-05, 9.391599999999944e-05, 9.357000000000115e-05, 9.361100000000039e-05, 9.3333000000001e-05, 9.390299999999935e-05, 9.362499999999996e-05, 9.38200000000014e-05, 9.323600000000348e-05, 9.458300000000225e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.454" endtime="20201115 23:01:05.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.443" endtime="20201115 23:01:05.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.467" endtime="20201115 23:01:05.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.475" endtime="20201115 23:01:05.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.471" endtime="20201115 23:01:05.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.462" endtime="20201115 23:01:05.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.962" endtime="20201115 23:01:05.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.958" endtime="20201115 23:01:05.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.956" endtime="20201115 23:01:05.501"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.507" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.528" endtime="20201115 23:01:05.546"></status>
</kw>
<msg timestamp="20201115 23:01:05.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.525" endtime="20201115 23:01:05.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.550" endtime="20201115 23:01:05.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.556" endtime="20201115 23:01:05.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.517" endtime="20201115 23:01:05.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.512" endtime="20201115 23:01:05.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.580" endtime="20201115 23:01:05.910"></status>
</kw>
<msg timestamp="20201115 23:01:05.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044476861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044571681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.576" endtime="20201115 23:01:05.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044476861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044571681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.919" endtime="20201115 23:01:05.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.937" endtime="20201115 23:01:05.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.569" endtime="20201115 23:01:05.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.565" endtime="20201115 23:01:05.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.955" level="INFO">${RESULT} = [{'time': 0.044571681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.48200000000024e-05, 'source_diff': 9.48200000000024e-05}, {'time': 0.044677931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:05.946" endtime="20201115 23:01:05.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.985" level="INFO">${ACCURACY} = {'source_diff': [9.48200000000024e-05, 9.527799999999725e-05, 9.473599999999804e-05, 9.46660000000002e-05, 9.449999999999736e-05, 9.502800000000394e-05, 9.441599999999994e-05, 9.484699999999513e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:01:05.957" endtime="20201115 23:01:05.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.996" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.994" endtime="20201115 23:01:05.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.003" level="INFO">VALUE: [9.48200000000024e-05, 9.527799999999725e-05, 9.473599999999804e-05, 9.46660000000002e-05, 9.449999999999736e-05, 9.502800000000394e-05, 9.441599999999994e-05, 9.484699999999513e-05, 9.579200000000426e-05, 9.458299999999531e-05, 9.487500000000121e-05, 9.405499999999567e-05, 9.443099999999899e-05, 9.422200000000491e-05, 9.44859999999978e-05, 9.44859999999978e-05, 9.4945000000006e-05, 9.42079999999984e-05, 9.474999999999761e-05, 9.530499999999692e-05, 9.462500000000096e-05, 9.436100000000114e-05, 9.423599999999754e-05, 9.440299999999985e-05, 9.44859999999978e-05, 9.481900000000293e-05, 9.452800000000344e-05, 9.459800000000129e-05, 9.452699999999703e-05, 9.454100000000354e-05, 9.45000000000043e-05, 9.490300000000035e-05, 9.434700000000157e-05, 9.41659999999997e-05, 9.497199999999872e-05, 9.445799999999865e-05, 9.437500000000071e-05, 9.512500000000146e-05, 9.405499999999567e-05, 9.490300000000035e-05, 9.424999999999711e-05, 9.469399999999933e-05, 9.488900000000078e-05, 9.431899999999549e-05, 9.413900000000003e-05, 9.53059999999964e-05, 9.417999999999926e-05, 9.404100000000304e-05, 9.455500000000311e-05, 9.466699999999967e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.998" endtime="20201115 23:01:06.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.987" endtime="20201115 23:01:06.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.011" endtime="20201115 23:01:06.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.020" endtime="20201115 23:01:06.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.015" endtime="20201115 23:01:06.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.007" endtime="20201115 23:01:06.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.508" endtime="20201115 23:01:06.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.504" endtime="20201115 23:01:06.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.502" endtime="20201115 23:01:06.046"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.080" endtime="20201115 23:01:06.099"></status>
</kw>
<msg timestamp="20201115 23:01:06.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.077" endtime="20201115 23:01:06.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.102" endtime="20201115 23:01:06.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.108" endtime="20201115 23:01:06.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.062" endtime="20201115 23:01:06.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.056" endtime="20201115 23:01:06.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.131" endtime="20201115 23:01:06.462"></status>
</kw>
<msg timestamp="20201115 23:01:06.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052295153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052391792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.128" endtime="20201115 23:01:06.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052295153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052391792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.471" endtime="20201115 23:01:06.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.489" endtime="20201115 23:01:06.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.121" endtime="20201115 23:01:06.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.116" endtime="20201115 23:01:06.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.507" level="INFO">${RESULT} = [{'time': 0.052391792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.663900000000253e-05, 'source_diff': 9.663900000000253e-05}, {'time': 0.052498153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.498" endtime="20201115 23:01:06.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.537" level="INFO">${ACCURACY} = {'source_diff': [9.663900000000253e-05, 9.579199999999732e-05, 9.569499999999981e-05, 9.58330000000035e-05, 9.502800000000394e-05, 9.576399999999818e-05, 9.577800000000469e-05, 9.554199999999707e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:06.509" endtime="20201115 23:01:06.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.548" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.546" endtime="20201115 23:01:06.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.555" level="INFO">VALUE: [9.663900000000253e-05, 9.579199999999732e-05, 9.569499999999981e-05, 9.58330000000035e-05, 9.502800000000394e-05, 9.576399999999818e-05, 9.577800000000469e-05, 9.554199999999707e-05, 9.554200000000401e-05, 9.594399999999365e-05, 9.512500000000146e-05, 9.6027999999998e-05, 9.554200000000401e-05, 9.531899999999649e-05, 9.593100000000049e-05, 9.583299999999656e-05, 9.584699999999613e-05, 9.524999999999811e-05, 9.676399999999918e-05, 9.511100000000189e-05, 9.525000000000505e-05, 9.544400000000008e-05, 9.59729999999992e-05, 9.591600000000144e-05, 9.623699999999902e-05, 9.556899999999674e-05, 9.594500000000006e-05, 9.674999999999961e-05, 9.658400000000372e-05, 9.554199999999707e-05, 9.527800000000419e-05, 9.522199999999897e-05, 9.573599999999904e-05, 9.575000000000555e-05, 9.669400000000133e-05, 9.537500000000171e-05, 9.533400000000247e-05, 9.531899999999649e-05, 9.561099999999545e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.583299999999656e-05, 9.588900000000178e-05, 9.617999999999433e-05, 9.545799999999965e-05, 9.505599999999614e-05, 9.605500000000461e-05, 9.55279999999975e-05, 9.640300000000185e-05, 9.573599999999904e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.550" endtime="20201115 23:01:06.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.539" endtime="20201115 23:01:06.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.563" endtime="20201115 23:01:06.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.571" endtime="20201115 23:01:06.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.567" endtime="20201115 23:01:06.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.559" endtime="20201115 23:01:06.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.052" endtime="20201115 23:01:06.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.048" endtime="20201115 23:01:06.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.047" endtime="20201115 23:01:06.599"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.625" endtime="20201115 23:01:06.644"></status>
</kw>
<msg timestamp="20201115 23:01:06.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.622" endtime="20201115 23:01:06.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.647" endtime="20201115 23:01:06.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.653" endtime="20201115 23:01:06.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.615" endtime="20201115 23:01:06.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.609" endtime="20201115 23:01:06.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.677" endtime="20201115 23:01:07.007"></status>
</kw>
<msg timestamp="20201115 23:01:07.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045543722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045639986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.673" endtime="20201115 23:01:07.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045543722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045639986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.017" endtime="20201115 23:01:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.035" endtime="20201115 23:01:07.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.666" endtime="20201115 23:01:07.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.661" endtime="20201115 23:01:07.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.052" level="INFO">${RESULT} = [{'time': 0.045639986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.626399999999868e-05, 'source_diff': 9.626399999999868e-05}, {'time': 0.045746333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.043" endtime="20201115 23:01:07.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.083" level="INFO">${ACCURACY} = {'source_diff': [9.626399999999868e-05, 9.744400000000208e-05, 9.637499999999577e-05, 9.74860000000008e-05, 9.677699999999928e-05, 9.791700000000292e-05, 9.612500000000246e-05, 9.611100000000289e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:07.054" endtime="20201115 23:01:07.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.094" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.091" endtime="20201115 23:01:07.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.100" level="INFO">VALUE: [9.626399999999868e-05, 9.744400000000208e-05, 9.637499999999577e-05, 9.74860000000008e-05, 9.677699999999928e-05, 9.791700000000292e-05, 9.612500000000246e-05, 9.611100000000289e-05, 9.67080000000009e-05, 9.652800000000544e-05, 9.630600000000433e-05, 9.606999999999671e-05, 9.691700000000192e-05, 9.704199999999857e-05, 9.691600000000244e-05, 9.617999999999433e-05, 9.64729999999997e-05, 9.702699999999953e-05, 9.641700000000142e-05, 9.684700000000407e-05, 9.673600000000004e-05, 9.666699999999473e-05, 9.629099999999835e-05, 9.666700000000167e-05, 9.651400000000587e-05, 9.636100000000314e-05, 9.630600000000433e-05, 9.622199999999997e-05, 9.683400000000397e-05, 9.702699999999953e-05, 9.623599999999954e-05, 9.701400000000637e-05, 9.666699999999473e-05, 9.775000000000061e-05, 9.622199999999997e-05, 9.647200000000022e-05, 9.699999999999986e-05, 9.647200000000022e-05, 9.688900000000278e-05, 9.67080000000009e-05, 9.636100000000314e-05, 9.702699999999953e-05, 9.690299999999541e-05, 9.69860000000003e-05, 9.756999999999821e-05, 9.65409999999986e-05, 9.618000000000126e-05, 9.692999999999508e-05, 9.618000000000126e-05, 9.661100000000339e-05]</msg>
<status status="PASS" starttime="20201115 23:01:07.096" endtime="20201115 23:01:07.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.085" endtime="20201115 23:01:07.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.110" endtime="20201115 23:01:07.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.118" endtime="20201115 23:01:07.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.114" endtime="20201115 23:01:07.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.105" endtime="20201115 23:01:07.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.605" endtime="20201115 23:01:07.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.601" endtime="20201115 23:01:07.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.599" endtime="20201115 23:01:07.144"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.149" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.170" endtime="20201115 23:01:07.189"></status>
</kw>
<msg timestamp="20201115 23:01:07.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.167" endtime="20201115 23:01:07.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.193" endtime="20201115 23:01:07.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.199" endtime="20201115 23:01:07.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.160" endtime="20201115 23:01:07.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.154" endtime="20201115 23:01:07.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.222" endtime="20201115 23:01:07.553"></status>
</kw>
<msg timestamp="20201115 23:01:07.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044587944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044686375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.219" endtime="20201115 23:01:07.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044587944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044686375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.563" endtime="20201115 23:01:07.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.582" endtime="20201115 23:01:07.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.211" endtime="20201115 23:01:07.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.207" endtime="20201115 23:01:07.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.599" level="INFO">${RESULT} = [{'time': 0.044686375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.843100000000299e-05, 'source_diff': 9.843100000000299e-05}, {'time': 0.044791722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.590" endtime="20201115 23:01:07.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.632" level="INFO">${ACCURACY} = {'source_diff': [9.843100000000299e-05, 9.72080000000014e-05, 9.801400000000043e-05, 9.711099999999695e-05, 9.805499999999967e-05, 9.808400000000522e-05, 9.723700000000002e-05, 9.755499999999917e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:07.601" endtime="20201115 23:01:07.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.643" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.641" endtime="20201115 23:01:07.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.650" level="INFO">VALUE: [9.843100000000299e-05, 9.72080000000014e-05, 9.801400000000043e-05, 9.711099999999695e-05, 9.805499999999967e-05, 9.808400000000522e-05, 9.723700000000002e-05, 9.755499999999917e-05, 9.755600000000558e-05, 9.875000000000161e-05, 9.74860000000008e-05, 9.74730000000007e-05, 9.75409999999996e-05, 9.806899999999924e-05, 9.712500000000346e-05, 9.762500000000396e-05, 9.720900000000088e-05, 9.76939999999954e-05, 9.768100000000224e-05, 9.78059999999989e-05, 9.801400000000043e-05, 9.783299999999856e-05, 9.777799999999975e-05, 9.812500000000446e-05, 9.783299999999856e-05, 9.738899999999634e-05, 9.741700000000242e-05, 9.725000000000011e-05, 9.754199999999907e-05, 9.750000000000036e-05, 9.722300000000045e-05, 9.809699999999838e-05, 9.805599999999914e-05, 9.766700000000267e-05, 9.766700000000267e-05, 9.841699999999648e-05, 9.8028e-05, 9.783299999999856e-05, 9.755500000000611e-05, 9.731899999999849e-05, 9.790299999999641e-05, 9.730499999999892e-05, 9.808399999999828e-05, 9.786200000000411e-05, 9.762499999999702e-05, 9.712500000000346e-05, 9.716700000000217e-05, 9.733299999999806e-05, 9.744500000000156e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201115 23:01:07.645" endtime="20201115 23:01:07.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.634" endtime="20201115 23:01:07.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.659" endtime="20201115 23:01:07.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.667" endtime="20201115 23:01:07.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.663" endtime="20201115 23:01:07.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.655" endtime="20201115 23:01:07.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.151" endtime="20201115 23:01:07.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.147" endtime="20201115 23:01:07.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.145" endtime="20201115 23:01:07.694"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.699" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.721" endtime="20201115 23:01:07.740"></status>
</kw>
<msg timestamp="20201115 23:01:07.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.718" endtime="20201115 23:01:07.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.744" endtime="20201115 23:01:07.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.750" endtime="20201115 23:01:07.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.710" endtime="20201115 23:01:07.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.704" endtime="20201115 23:01:07.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.773" endtime="20201115 23:01:08.105"></status>
</kw>
<msg timestamp="20201115 23:01:08.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045911014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046009153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.770" endtime="20201115 23:01:08.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045911014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046009153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.114" endtime="20201115 23:01:08.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.132" endtime="20201115 23:01:08.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.763" endtime="20201115 23:01:08.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.758" endtime="20201115 23:01:08.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.150" level="INFO">${RESULT} = [{'time': 0.046009153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.813899999999709e-05, 'source_diff': 9.813899999999709e-05}, {'time': 0.046113458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:08.141" endtime="20201115 23:01:08.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.180" level="INFO">${ACCURACY} = {'source_diff': [9.813899999999709e-05, 9.875000000000161e-05, 9.863899999999759e-05, 9.856999999999921e-05, 9.80410000000001e-05, 9.834700000000557e-05, 9.893099999999655e-05, 9.861100000000539e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:08.152" endtime="20201115 23:01:08.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.191" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.189" endtime="20201115 23:01:08.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.198" level="INFO">VALUE: [9.813899999999709e-05, 9.875000000000161e-05, 9.863899999999759e-05, 9.856999999999921e-05, 9.80410000000001e-05, 9.834700000000557e-05, 9.893099999999655e-05, 9.861100000000539e-05, 9.827700000000078e-05, 9.942999999999758e-05, 9.959699999999988e-05, 9.852700000000103e-05, 9.869400000000333e-05, 9.91530000000046e-05, 9.900000000000186e-05, 9.891700000000392e-05, 9.861099999999845e-05, 9.854200000000007e-05, 9.85280000000005e-05, 9.877800000000075e-05, 9.891600000000444e-05, 9.931900000000049e-05, 9.848699999999433e-05, 9.834699999999863e-05, 9.979200000000132e-05, 9.861099999999845e-05, 9.859699999999888e-05, 9.876400000000118e-05, 9.806899999999924e-05, 9.856899999999974e-05, 9.851400000000093e-05, 9.874999999999468e-05, 9.806899999999924e-05, 9.838900000000428e-05, 9.85280000000005e-05, 9.995899999999669e-05, 9.8028e-05, 9.850000000000136e-05, 9.862500000000496e-05, 9.841699999999648e-05, 9.904199999999364e-05, 9.8028e-05, 9.829100000000035e-05, 9.888900000000478e-05, 9.897200000000272e-05, 9.858299999999931e-05, 9.856899999999974e-05, 9.809699999999838e-05, 9.908299999999981e-05, 9.794500000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.194" endtime="20201115 23:01:08.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.182" endtime="20201115 23:01:08.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.207" endtime="20201115 23:01:08.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.215" endtime="20201115 23:01:08.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.210" endtime="20201115 23:01:08.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.202" endtime="20201115 23:01:08.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.700" endtime="20201115 23:01:08.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.696" endtime="20201115 23:01:08.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.695" endtime="20201115 23:01:08.241"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.268" endtime="20201115 23:01:08.286"></status>
</kw>
<msg timestamp="20201115 23:01:08.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.264" endtime="20201115 23:01:08.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.290" endtime="20201115 23:01:08.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.296" endtime="20201115 23:01:08.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.257" endtime="20201115 23:01:08.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.251" endtime="20201115 23:01:08.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.319" endtime="20201115 23:01:08.650"></status>
</kw>
<msg timestamp="20201115 23:01:08.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044731972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044831833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.316" endtime="20201115 23:01:08.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044731972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044831833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.659" endtime="20201115 23:01:08.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.678" endtime="20201115 23:01:08.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.309" endtime="20201115 23:01:08.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.304" endtime="20201115 23:01:08.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.696" level="INFO">${RESULT} = [{'time': 0.044831833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98609999999997e-05, 'source_diff': 9.98609999999997e-05}, {'time': 0.04494025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:08.687" endtime="20201115 23:01:08.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.726" level="INFO">${ACCURACY} = {'source_diff': [9.98609999999997e-05, 9.929200000000082e-05, 9.999999999999593e-05, 9.922199999999604e-05, 9.991699999999798e-05, 9.91939999999969e-05, 9.96939999999974e-05, 0.00010066699999999873, 0...</msg>
<status status="PASS" starttime="20201115 23:01:08.698" endtime="20201115 23:01:08.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.737" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.735" endtime="20201115 23:01:08.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.744" level="INFO">VALUE: [9.98609999999997e-05, 9.929200000000082e-05, 9.999999999999593e-05, 9.922199999999604e-05, 9.991699999999798e-05, 9.91939999999969e-05, 9.96939999999974e-05, 0.00010066699999999873, 0.00010022199999999704, 9.943100000000399e-05, 9.906900000000024e-05, 9.922300000000245e-05, 9.957000000000021e-05, 9.976399999999525e-05, 9.913899999999809e-05, 9.912499999999852e-05, 9.937499999999877e-05, 9.950000000000236e-05, 9.948599999999586e-05, 0.0001000139999999955, 9.918000000000426e-05, 9.958300000000031e-05, 9.944399999999715e-05, 0.00010044500000000456, 9.958300000000031e-05, 9.965299999999816e-05, 9.95280000000015e-05, 9.979200000000132e-05, 9.926400000000168e-05, 9.988900000000578e-05, 9.962499999999902e-05, 0.0001003610000000002, 9.904099999999416e-05, 0.0001007359999999971, 9.98609999999997e-05, 0.00010050000000000336, 9.956900000000074e-05, 0.00010045899999999719, 9.988899999999884e-05, 0.00010087500000000027, 9.909799999999885e-05, 9.933300000000006e-05, 9.955600000000064e-05, 9.96939999999974e-05, 9.915199999999819e-05, 9.975000000000261e-05, 9.927799999999432e-05, 9.945800000000365e-05, 9.95280000000015e-05, 9.994399999999765e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.739" endtime="20201115 23:01:08.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.728" endtime="20201115 23:01:08.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.753" endtime="20201115 23:01:08.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.762" endtime="20201115 23:01:08.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.757" endtime="20201115 23:01:08.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.748" endtime="20201115 23:01:08.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.248" endtime="20201115 23:01:08.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.244" endtime="20201115 23:01:08.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.242" endtime="20201115 23:01:08.788"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.794" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.815" endtime="20201115 23:01:08.834"></status>
</kw>
<msg timestamp="20201115 23:01:08.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.812" endtime="20201115 23:01:08.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.837" endtime="20201115 23:01:08.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.844" endtime="20201115 23:01:08.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.805" endtime="20201115 23:01:08.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.799" endtime="20201115 23:01:08.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.868" endtime="20201115 23:01:09.199"></status>
</kw>
<msg timestamp="20201115 23:01:09.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045053764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045154931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.864" endtime="20201115 23:01:09.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045053764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045154931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.208" endtime="20201115 23:01:09.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.226" endtime="20201115 23:01:09.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.857" endtime="20201115 23:01:09.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.852" endtime="20201115 23:01:09.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.243" level="INFO">${RESULT} = [{'time': 0.045154931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010116699999999923, 'source_diff': 0.00010116699999999923}, {'time': 0.045265236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:09.234" endtime="20201115 23:01:09.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.273" level="INFO">${ACCURACY} = {'source_diff': [0.00010116699999999923, 0.000101513999999997, 0.00010033400000000053, 0.00010145799999999872, 0.00010008300000000081, 0.00010031900000000149, 0.00010057000000000121, 0.000101679999999...</msg>
<status status="PASS" starttime="20201115 23:01:09.245" endtime="20201115 23:01:09.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.284" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.281" endtime="20201115 23:01:09.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.290" level="INFO">VALUE: [0.00010116699999999923, 0.000101513999999997, 0.00010033400000000053, 0.00010145799999999872, 0.00010008300000000081, 0.00010031900000000149, 0.00010057000000000121, 0.00010167999999999983, 0.00010091700000000592, 0.00010038899999999934, 0.00010088899999999984, 0.00010016700000000517, 0.00010079199999999539, 0.00010043100000000499, 0.00010038899999999934, 0.0001001939999999979, 0.00010009700000000038, 0.00010029199999999489, 0.00010137500000000077, 0.00010056999999999428, 0.00010063899999999959, 0.00010004200000000157, 0.00010062500000000002, 0.00010029200000000182, 0.00010030500000000192, 0.00010147200000000522, 0.00010058300000000131, 0.00010037499999999977, 0.00010029199999999489, 0.0001001660000000057, 0.00010033300000000106, 0.00010055499999999523, 0.00010061100000000045, 0.00010030500000000192, 0.00010063899999999959, 0.0001005559999999947, 0.00010040199999999944, 0.00010077799999999582, 0.00010097199999999779, 0.00010008400000000028, 0.00010015299999999866, 0.00010077800000000275, 0.00010088899999999984, 0.0001003480000000001, 0.00010029200000000182, 0.00010083400000000103, 0.00010093099999999855, 0.00010094399999999865, 0.0001009860000000043, 0.00010134700000000163]</msg>
<status status="PASS" starttime="20201115 23:01:09.286" endtime="20201115 23:01:09.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.275" endtime="20201115 23:01:09.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.299" endtime="20201115 23:01:09.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.307" endtime="20201115 23:01:09.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.303" endtime="20201115 23:01:09.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.294" endtime="20201115 23:01:09.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.795" endtime="20201115 23:01:09.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.791" endtime="20201115 23:01:09.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.789" endtime="20201115 23:01:09.333"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.360" endtime="20201115 23:01:09.378"></status>
</kw>
<msg timestamp="20201115 23:01:09.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.356" endtime="20201115 23:01:09.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.382" endtime="20201115 23:01:09.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.389" endtime="20201115 23:01:09.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.349" endtime="20201115 23:01:09.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.344" endtime="20201115 23:01:09.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.412" endtime="20201115 23:01:09.743"></status>
</kw>
<msg timestamp="20201115 23:01:09.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044524611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.409" endtime="20201115 23:01:09.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044524611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.752" endtime="20201115 23:01:09.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.770" endtime="20201115 23:01:09.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.401" endtime="20201115 23:01:09.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.397" endtime="20201115 23:01:09.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.787" level="INFO">${RESULT} = [{'time': 0.044524611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010127799999999632, 'source_diff': 0.00010127799999999632}, {'time': 0.044633917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:09.779" endtime="20201115 23:01:09.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.820" level="INFO">${ACCURACY} = {'source_diff': [0.00010127799999999632, 0.00010270899999999944, 0.00010116699999999923, 0.00010180599999999596, 0.00010162499999999408, 0.00010143099999999905, 0.00010180599999999596, 0.0001015280000...</msg>
<status status="PASS" starttime="20201115 23:01:09.789" endtime="20201115 23:01:09.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.831" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.829" endtime="20201115 23:01:09.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.838" level="INFO">VALUE: [0.00010127799999999632, 0.00010270899999999944, 0.00010116699999999923, 0.00010180599999999596, 0.00010162499999999408, 0.00010143099999999905, 0.00010180599999999596, 0.0001015280000000035, 0.00010198599999999836, 0.00010127699999999684, 0.00010190299999999347, 0.00010151400000000393, 0.00010166600000000026, 0.00010145799999999872, 0.00010113800000000062, 0.00010186099999999476, 0.00010147200000000522, 0.00010190300000000041, 0.00010226399999999775, 0.00010199999999999793, 0.000101416, 0.00010137500000000077, 0.00010122200000000497, 0.00010286099999999576, 0.00010122199999999804, 0.00010140299999999991, 0.00010291700000000098, 0.00010112500000000052, 0.00010190300000000041, 0.00010113900000000009, 0.00010148599999999786, 0.00010157000000000221, 0.00010120899999999794, 0.00010166600000000026, 0.00010145799999999872, 0.00010176399999999725, 0.00010267999999999389, 0.00010162500000000102, 0.00010195799999999922, 0.00010174999999999768, 0.00010170799999999897, 0.00010172299999999801, 0.00010199999999999793, 0.00010169499999999887, 0.00010181899999999605, 0.00010191699999999998, 0.00010108299999999487, 0.00010174999999999768, 0.00010107000000000171, 0.00010248699999999833]</msg>
<status status="PASS" starttime="20201115 23:01:09.834" endtime="20201115 23:01:09.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.822" endtime="20201115 23:01:09.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.847" endtime="20201115 23:01:09.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.855" endtime="20201115 23:01:09.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.850" endtime="20201115 23:01:09.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.842" endtime="20201115 23:01:09.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.340" endtime="20201115 23:01:09.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.336" endtime="20201115 23:01:09.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.334" endtime="20201115 23:01:09.881"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.908" endtime="20201115 23:01:09.927"></status>
</kw>
<msg timestamp="20201115 23:01:09.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.905" endtime="20201115 23:01:09.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.931" endtime="20201115 23:01:09.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.937" endtime="20201115 23:01:09.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.898" endtime="20201115 23:01:09.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.891" endtime="20201115 23:01:09.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.960" endtime="20201115 23:01:10.291"></status>
</kw>
<msg timestamp="20201115 23:01:10.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045403903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.956" endtime="20201115 23:01:10.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045403903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.300" endtime="20201115 23:01:10.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.319" endtime="20201115 23:01:10.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.949" endtime="20201115 23:01:10.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.945" endtime="20201115 23:01:10.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.336" level="INFO">${RESULT} = [{'time': 0.045403903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001028610000000027, 'source_diff': 0.0001028610000000027}, {'time': 0.045511167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:10.327" endtime="20201115 23:01:10.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.366" level="INFO">${ACCURACY} = {'source_diff': [0.0001028610000000027, 0.00010277799999999782, 0.00010272299999999901, 0.0001032359999999996, 0.00010227799999999732, 0.0001023610000000022, 0.00010359699999999694, 0.0001022360000000...</msg>
<status status="PASS" starttime="20201115 23:01:10.338" endtime="20201115 23:01:10.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.376" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.374" endtime="20201115 23:01:10.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.383" level="INFO">VALUE: [0.0001028610000000027, 0.00010277799999999782, 0.00010272299999999901, 0.0001032359999999996, 0.00010227799999999732, 0.0001023610000000022, 0.00010359699999999694, 0.00010223600000000554, 0.00010259799999999542, 0.0001026810000000003, 0.00010305499999999773, 0.0001026940000000004, 0.00010270799999999997, 0.00010254099999999766, 0.00010232000000000296, 0.00010237500000000177, 0.0001037360000000001, 0.00010277800000000475, 0.00010270799999999997, 0.00010272199999999954, 0.00010209700000000238, 0.00010233300000000306, 0.00010226399999999775, 0.0001028610000000027, 0.00010212500000000152, 0.00010283300000000356, 0.00010265300000000116, 0.00010240299999999397, 0.000102513999999998, 0.00010265300000000116, 0.00010294400000000065, 0.00010283299999999662, 0.0001025280000000045, 0.0001027359999999991, 0.000102513999999998, 0.00010247299999999876, 0.00010247199999999929, 0.00010390299999999547, 0.00010227800000000425, 0.00010258300000000331, 0.0001021809999999998, 0.00010237500000000177, 0.00010259699999999594, 0.00010288900000000184, 0.00010249999999999843, 0.00010231900000000349, 0.00010352799999999857, 0.00010255499999999723, 0.00010243100000000005, 0.00010280599999999696]</msg>
<status status="PASS" starttime="20201115 23:01:10.379" endtime="20201115 23:01:10.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.367" endtime="20201115 23:01:10.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.391" endtime="20201115 23:01:10.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.400" endtime="20201115 23:01:10.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.395" endtime="20201115 23:01:10.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.387" endtime="20201115 23:01:10.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.888" endtime="20201115 23:01:10.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.884" endtime="20201115 23:01:10.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.882" endtime="20201115 23:01:10.427"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.453" endtime="20201115 23:01:10.472"></status>
</kw>
<msg timestamp="20201115 23:01:10.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.450" endtime="20201115 23:01:10.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.476" endtime="20201115 23:01:10.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.482" endtime="20201115 23:01:10.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.442" endtime="20201115 23:01:10.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.437" endtime="20201115 23:01:10.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.505" endtime="20201115 23:01:10.836"></status>
</kw>
<msg timestamp="20201115 23:01:10.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044804542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04490775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:10.502" endtime="20201115 23:01:10.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044804542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04490775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:10.846" endtime="20201115 23:01:10.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.864" endtime="20201115 23:01:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.495" endtime="20201115 23:01:10.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.490" endtime="20201115 23:01:10.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.881" level="INFO">${RESULT} = [{'time': 0.04490775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010320800000000047, 'source_diff': 0.00010320800000000047}, {'time': 0.045017056, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:10.872" endtime="20201115 23:01:10.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.911" level="INFO">${ACCURACY} = {'source_diff': [0.00010320800000000047, 0.0001033339999999966, 0.00010394400000000165, 0.00010399999999999993, 0.0001035689999999978, 0.00010393100000000155, 0.00010365300000000216, 0.000103708000000...</msg>
<status status="PASS" starttime="20201115 23:01:10.883" endtime="20201115 23:01:10.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.922" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.920" endtime="20201115 23:01:10.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.928" level="INFO">VALUE: [0.00010320800000000047, 0.0001033339999999966, 0.00010394400000000165, 0.00010399999999999993, 0.0001035689999999978, 0.00010393100000000155, 0.00010365300000000216, 0.00010370800000000097, 0.00010390299999999547, 0.00010337499999999583, 0.00010379199999999839, 0.00010374999999999968, 0.00010343100000000105, 0.00010390299999999547, 0.0001038610000000037, 0.00010376399999999925, 0.00010399999999999993, 0.00010347200000000029, 0.00010365300000000216, 0.0001036940000000014, 0.00010406900000000524, 0.0001035689999999978, 0.00010383299999999762, 0.00010397300000000026, 0.00010333300000000406, 0.00010319500000000037, 0.00010334699999999669, 0.00010398600000000036, 0.00010383299999999762, 0.00010343100000000105, 0.00010493100000000255, 0.0001031940000000009, 0.00010361200000000292, 0.00010327799999999832, 0.00010380500000000542, 0.0001037360000000001, 0.00010344400000000115, 0.0001030689999999973, 0.00010351400000000593, 0.0001040559999999982, 0.0001038610000000037, 0.00010331899999999755, 0.00010333299999999712, 0.00010343099999999411, 0.00010405499999999873, 0.00010354099999999866, 0.00010384699999999719, 0.000103513999999999, 0.00010426399999999975, 0.000103901999999996]</msg>
<status status="PASS" starttime="20201115 23:01:10.924" endtime="20201115 23:01:10.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.913" endtime="20201115 23:01:10.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.938" endtime="20201115 23:01:10.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.946" endtime="20201115 23:01:10.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.942" endtime="20201115 23:01:10.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.933" endtime="20201115 23:01:10.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.433" endtime="20201115 23:01:10.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.429" endtime="20201115 23:01:10.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.427" endtime="20201115 23:01:10.972"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.977" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.999" endtime="20201115 23:01:11.018"></status>
</kw>
<msg timestamp="20201115 23:01:11.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.995" endtime="20201115 23:01:11.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.021" endtime="20201115 23:01:11.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.028" endtime="20201115 23:01:11.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.988" endtime="20201115 23:01:11.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.983" endtime="20201115 23:01:11.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.051" endtime="20201115 23:01:11.381"></status>
</kw>
<msg timestamp="20201115 23:01:11.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044890778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.047" endtime="20201115 23:01:11.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044890778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.390" endtime="20201115 23:01:11.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.408" endtime="20201115 23:01:11.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.040" endtime="20201115 23:01:11.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.036" endtime="20201115 23:01:11.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.425" level="INFO">${RESULT} = [{'time': 0.044995625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010484699999999819, 'source_diff': 0.00010484699999999819}, {'time': 0.045105889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:11.417" endtime="20201115 23:01:11.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:11.455" level="INFO">${ACCURACY} = {'source_diff': [0.00010484699999999819, 0.00010488900000000384, 0.0001047219999999946, 0.00010577799999999388, 0.00010470800000000197, 0.00010504100000000016, 0.00010425000000000018, 0.00010408300000...</msg>
<status status="PASS" starttime="20201115 23:01:11.427" endtime="20201115 23:01:11.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.466" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:11.464" endtime="20201115 23:01:11.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.473" level="INFO">VALUE: [0.00010484699999999819, 0.00010488900000000384, 0.0001047219999999946, 0.00010577799999999388, 0.00010470800000000197, 0.00010504100000000016, 0.00010425000000000018, 0.00010408300000000481, 0.00010465300000000316, 0.0001050140000000005, 0.00010472200000000154, 0.00010481999999999853, 0.00010590300000000441, 0.00010418000000000233, 0.00010508299999999887, 0.00010427799999999932, 0.00010465300000000316, 0.00010433299999999812, 0.00010490300000000341, 0.00010509699999999844, 0.00010498600000000136, 0.00010475000000000068, 0.00010487499999999733, 0.00010415300000000266, 0.00010475000000000068, 0.00010463800000000412, 0.0001043339999999976, 0.00010431899999999855, 0.00010492999999999614, 0.00010481999999999853, 0.00010559699999999894, 0.00010577800000000082, 0.00010527800000000032, 0.00010595900000000269, 0.00010562499999999808, 0.0001050140000000005, 0.00010593099999999661, 0.00010443099999999511, 0.00010426399999999975, 0.00010448600000000086, 0.00010427799999999932, 0.00010431999999999803, 0.0001047360000000011, 0.00010527800000000032, 0.0001046940000000024, 0.00010416599999999582, 0.00010413900000000309, 0.00010497199999999485, 0.00010461100000000445, 0.00010479199999999939]</msg>
<status status="PASS" starttime="20201115 23:01:11.468" endtime="20201115 23:01:11.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.457" endtime="20201115 23:01:11.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.482" endtime="20201115 23:01:11.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.490" endtime="20201115 23:01:11.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.486" endtime="20201115 23:01:11.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.478" endtime="20201115 23:01:11.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.979" endtime="20201115 23:01:11.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.975" endtime="20201115 23:01:11.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.973" endtime="20201115 23:01:11.517"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.522" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.543" endtime="20201115 23:01:11.562"></status>
</kw>
<msg timestamp="20201115 23:01:11.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.540" endtime="20201115 23:01:11.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.566" endtime="20201115 23:01:11.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.572" endtime="20201115 23:01:11.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.533" endtime="20201115 23:01:11.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.527" endtime="20201115 23:01:11.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.595" endtime="20201115 23:01:11.926"></status>
</kw>
<msg timestamp="20201115 23:01:11.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044709722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.592" endtime="20201115 23:01:11.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044709722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044816194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.936" endtime="20201115 23:01:11.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.954" endtime="20201115 23:01:11.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.585" endtime="20201115 23:01:11.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.580" endtime="20201115 23:01:11.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.970" level="INFO">${RESULT} = [{'time': 0.044816194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010647199999999635, 'source_diff': 0.00010647199999999635}, {'time': 0.044932528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:11.962" endtime="20201115 23:01:11.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.004" level="INFO">${ACCURACY} = {'source_diff': [0.00010647199999999635, 0.00010597200000000279, 0.00010540299999999697, 0.00010576400000000125, 0.00010512499999999758, 0.0001057360000000021, 0.00010550000000000143, 0.00010537500000...</msg>
<status status="PASS" starttime="20201115 23:01:11.973" endtime="20201115 23:01:12.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.015" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.012" endtime="20201115 23:01:12.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.021" level="INFO">VALUE: [0.00010647199999999635, 0.00010597200000000279, 0.00010540299999999697, 0.00010576400000000125, 0.00010512499999999758, 0.0001057360000000021, 0.00010550000000000143, 0.00010537500000000477, 0.00010526400000000075, 0.00010586099999999876, 0.00010561100000000545, 0.00010627800000000132, 0.00010562499999999808, 0.00010567999999999689, 0.00010531999999999903, 0.00010522200000000204, 0.00010574999999999474, 0.00010587500000000527, 0.000105514000000001, 0.00010538799999999793, 0.00010537499999999783, 0.00010532000000000596, 0.0001060140000000015, 0.00010525000000000118, 0.00010559699999999894, 0.00010561099999999851, 0.00010556999999999928, 0.00010525000000000118, 0.00010570799999999603, 0.00010561199999999799, 0.0001053889999999974, 0.00010572300000000201, 0.00010550000000000143, 0.00010554100000000066, 0.00010519500000000237, 0.0001055689999999998, 0.00010516699999999629, 0.00010580599999999996, 0.00010593099999999661, 0.00010518000000000333, 0.0001055559999999997, 0.00010595899999999575, 0.00010572200000000254, 0.00010538900000000434, 0.00010526400000000075, 0.00010525000000000118, 0.00010602800000000107, 0.00010555500000000023, 0.00010627800000000132, 0.0001050689999999993]</msg>
<status status="PASS" starttime="20201115 23:01:12.017" endtime="20201115 23:01:12.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.006" endtime="20201115 23:01:12.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.030" endtime="20201115 23:01:12.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.038" endtime="20201115 23:01:12.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.034" endtime="20201115 23:01:12.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.025" endtime="20201115 23:01:12.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.523" endtime="20201115 23:01:12.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.519" endtime="20201115 23:01:12.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.518" endtime="20201115 23:01:12.064"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.069" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.091" endtime="20201115 23:01:12.110"></status>
</kw>
<msg timestamp="20201115 23:01:12.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.088" endtime="20201115 23:01:12.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.113" endtime="20201115 23:01:12.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.120" endtime="20201115 23:01:12.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.080" endtime="20201115 23:01:12.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.075" endtime="20201115 23:01:12.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.143" endtime="20201115 23:01:12.475"></status>
</kw>
<msg timestamp="20201115 23:01:12.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044881042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044988125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.139" endtime="20201115 23:01:12.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044881042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044988125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.485" endtime="20201115 23:01:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.503" endtime="20201115 23:01:12.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.132" endtime="20201115 23:01:12.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.128" endtime="20201115 23:01:12.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.520" level="INFO">${RESULT} = [{'time': 0.044988125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010708299999999393, 'source_diff': 0.00010708299999999393}, {'time': 0.045100458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:12.512" endtime="20201115 23:01:12.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.550" level="INFO">${ACCURACY} = {'source_diff': [0.00010708299999999393, 0.0001061940000000039, 0.00010620800000000347, 0.00010648600000000286, 0.00010631900000000055, 0.00010670799999999703, 0.00010617999999999739, 0.00010779099999...</msg>
<status status="PASS" starttime="20201115 23:01:12.522" endtime="20201115 23:01:12.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.561" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.559" endtime="20201115 23:01:12.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.567" level="INFO">VALUE: [0.00010708299999999393, 0.0001061940000000039, 0.00010620800000000347, 0.00010648600000000286, 0.00010631900000000055, 0.00010670799999999703, 0.00010617999999999739, 0.00010779099999999597, 0.00010763899999999965, 0.00010622300000000251, 0.00010712499999999958, 0.00010647200000000329, 0.0001070969999999935, 0.0001061940000000039, 0.00010663900000000559, 0.00010623699999999514, 0.00010708300000000087, 0.00010637499999999883, 0.00010613800000000562, 0.00010630600000000046, 0.00010669499999999693, 0.00010661199999999899, 0.0001070140000000025, 0.0001065690000000008, 0.00010693100000000455, 0.00010686099999999976, 0.0001063889999999984, 0.00010687499999999933, 0.00010627800000000132, 0.00010659699999999994, 0.00010704200000000164, 0.00010702799999999513, 0.00010655500000000123, 0.00010707000000000078, 0.00010768099999999836, 0.00010683300000000062, 0.00010652800000000157, 0.0001068610000000067, 0.00010637499999999883, 0.00010668099999999736, 0.0001063889999999984, 0.00010711100000000001, 0.00010643099999999711, 0.00010630500000000098, 0.00010670800000000397, 0.00010701300000000302, 0.00010742999999999864, 0.0001067360000000031, 0.00010619500000000337, 0.00010613799999999868]</msg>
<status status="PASS" starttime="20201115 23:01:12.563" endtime="20201115 23:01:12.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.552" endtime="20201115 23:01:12.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.576" endtime="20201115 23:01:12.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.584" endtime="20201115 23:01:12.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.580" endtime="20201115 23:01:12.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.572" endtime="20201115 23:01:12.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.071" endtime="20201115 23:01:12.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.067" endtime="20201115 23:01:12.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.065" endtime="20201115 23:01:12.611"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.616" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.637" endtime="20201115 23:01:12.657"></status>
</kw>
<msg timestamp="20201115 23:01:12.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.634" endtime="20201115 23:01:12.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.660" endtime="20201115 23:01:12.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.666" endtime="20201115 23:01:12.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.627" endtime="20201115 23:01:12.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.621" endtime="20201115 23:01:12.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.690" endtime="20201115 23:01:13.023"></status>
</kw>
<msg timestamp="20201115 23:01:13.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044863667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044971806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.686" endtime="20201115 23:01:13.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044863667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044971806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.032" endtime="20201115 23:01:13.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.051" endtime="20201115 23:01:13.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.679" endtime="20201115 23:01:13.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.674" endtime="20201115 23:01:13.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.067" level="INFO">${RESULT} = [{'time': 0.044971806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010813900000000015, 'source_diff': 0.00010813900000000015}, {'time': 0.045085111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:13.059" endtime="20201115 23:01:13.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.097" level="INFO">${ACCURACY} = {'source_diff': [0.00010813900000000015, 0.00010879199999999645, 0.00010741599999999907, 0.00010713899999999915, 0.00010795800000000522, 0.00010848599999999792, 0.00010747300000000376, 0.0001075980000...</msg>
<status status="PASS" starttime="20201115 23:01:13.070" endtime="20201115 23:01:13.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.108" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.106" endtime="20201115 23:01:13.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.115" level="INFO">VALUE: [0.00010813900000000015, 0.00010879199999999645, 0.00010741599999999907, 0.00010713899999999915, 0.00010795800000000522, 0.00010848599999999792, 0.00010747300000000376, 0.00010759800000000042, 0.0001078889999999999, 0.00010725000000000318, 0.00010765300000000616, 0.00010720799999999753, 0.0001080560000000022, 0.00010899999999999799, 0.00010748599999999692, 0.0001074019999999995, 0.00010816700000000623, 0.00010877800000000382, 0.0001076940000000054, 0.0001080140000000035, 0.00010762500000000008, 0.00010730600000000146, 0.00010737499999999983, 0.00010841699999999954, 0.0001078889999999999, 0.0001080690000000023, 0.0001078889999999999, 0.00010732000000000103, 0.00010722299999999657, 0.00010751399999999606, 0.00010762500000000008, 0.00010787500000000033, 0.00010758299999999443, 0.00010876399999999731, 0.000107514000000003, 0.00010815299999999972, 0.00010727799999999538, 0.00010750000000000343, 0.00010751399999999606, 0.00010758299999999443, 0.00010811100000000101, 0.0001072360000000036, 0.00010876399999999731, 0.00010715199999999925, 0.0001073889999999994, 0.00010830500000000298, 0.00010808400000000135, 0.0001077769999999964, 0.00010762500000000008, 0.00010777800000000282]</msg>
<status status="PASS" starttime="20201115 23:01:13.110" endtime="20201115 23:01:13.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.099" endtime="20201115 23:01:13.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.123" endtime="20201115 23:01:13.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.132" endtime="20201115 23:01:13.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.127" endtime="20201115 23:01:13.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.119" endtime="20201115 23:01:13.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.618" endtime="20201115 23:01:13.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.614" endtime="20201115 23:01:13.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.612" endtime="20201115 23:01:13.158"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.163" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.185" endtime="20201115 23:01:13.204"></status>
</kw>
<msg timestamp="20201115 23:01:13.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.181" endtime="20201115 23:01:13.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.207" endtime="20201115 23:01:13.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.214" endtime="20201115 23:01:13.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.174" endtime="20201115 23:01:13.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.169" endtime="20201115 23:01:13.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.237" endtime="20201115 23:01:13.569"></status>
</kw>
<msg timestamp="20201115 23:01:13.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044903792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.234" endtime="20201115 23:01:13.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044903792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045012653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.578" endtime="20201115 23:01:13.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.596" endtime="20201115 23:01:13.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.227" endtime="20201115 23:01:13.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.222" endtime="20201115 23:01:13.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.613" level="INFO">${RESULT} = [{'time': 0.045012653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010886100000000176, 'source_diff': 0.00010886100000000176}, {'time': 0.045130986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:13.605" endtime="20201115 23:01:13.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.643" level="INFO">${ACCURACY} = {'source_diff': [0.00010886100000000176, 0.00010817999999999939, 0.00010825000000000418, 0.00010815299999999972, 0.00010863900000000065, 0.00010884699999999525, 0.00010819499999999843, 0.0001086530000...</msg>
<status status="PASS" starttime="20201115 23:01:13.615" endtime="20201115 23:01:13.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.654" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.652" endtime="20201115 23:01:13.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.661" level="INFO">VALUE: [0.00010886100000000176, 0.00010817999999999939, 0.00010825000000000418, 0.00010815299999999972, 0.00010863900000000065, 0.00010884699999999525, 0.00010819499999999843, 0.00010865300000000022, 0.00010801399999999656, 0.00010863900000000065, 0.00010852800000000357, 0.00010815299999999972, 0.00010884699999999525, 0.00010836099999999432, 0.00010823599999999767, 0.00010908300000000287, 0.00010863900000000065, 0.00010825000000000418, 0.00010887499999999439, 0.00010836100000000126, 0.0001088890000000009, 0.00010849999999999749, 0.00010827799999999638, 0.00010830500000000298, 0.00010830599999999552, 0.0001088890000000009, 0.00010818099999999886, 0.00010825000000000418, 0.00010881999999999559, 0.00010887499999999439, 0.00010895799999999928, 0.00010862499999999414, 0.00010893099999999961, 0.00010863800000000118, 0.00010897199999999885, 0.00010819399999999896, 0.0001088890000000009, 0.0001097769999999984, 0.00010858399999999491, 0.00010911100000000201, 0.00010890300000000047, 0.00010887500000000133, 0.00010884700000000219, 0.00010872299999999807, 0.00010847199999999835, 0.00010820799999999853, 0.00010831900000000255, 0.00010904200000000364, 0.00010883299999999568, 0.00010891600000000057]</msg>
<status status="PASS" starttime="20201115 23:01:13.656" endtime="20201115 23:01:13.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.645" endtime="20201115 23:01:13.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.669" endtime="20201115 23:01:13.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.678" endtime="20201115 23:01:13.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.673" endtime="20201115 23:01:13.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.665" endtime="20201115 23:01:13.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.165" endtime="20201115 23:01:13.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.161" endtime="20201115 23:01:13.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.159" endtime="20201115 23:01:13.704"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.731" endtime="20201115 23:01:13.750"></status>
</kw>
<msg timestamp="20201115 23:01:13.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.728" endtime="20201115 23:01:13.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.754" endtime="20201115 23:01:13.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.760" endtime="20201115 23:01:13.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.721" endtime="20201115 23:01:13.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.714" endtime="20201115 23:01:13.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.783" endtime="20201115 23:01:14.114"></status>
</kw>
<msg timestamp="20201115 23:01:14.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045651861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.780" endtime="20201115 23:01:14.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045651861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.124" endtime="20201115 23:01:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.141" endtime="20201115 23:01:14.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.773" endtime="20201115 23:01:14.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.768" endtime="20201115 23:01:14.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.158" level="INFO">${RESULT} = [{'time': 0.045651861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010915300000000072, 'source_diff': 0.00010915300000000072}, {'time': 0.045772347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:14.150" endtime="20201115 23:01:14.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.191" level="INFO">${ACCURACY} = {'source_diff': [0.00010915300000000072, 0.00011001399999999856, 0.00011095800000000128, 0.00011049999999999949, 0.00010943100000000011, 0.00010930600000000346, 0.00011066700000000179, 0.0001100140000...</msg>
<status status="PASS" starttime="20201115 23:01:14.160" endtime="20201115 23:01:14.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.201" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.199" endtime="20201115 23:01:14.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.208" level="INFO">VALUE: [0.00010915300000000072, 0.00011001399999999856, 0.00011095800000000128, 0.00011049999999999949, 0.00010943100000000011, 0.00010930600000000346, 0.00011066700000000179, 0.0001100140000000055, 0.00011005599999999727, 0.00010973599999999917, 0.00010912500000000158, 0.00010940299999999403, 0.00010980599999999702, 0.0001092769999999979, 0.00010943100000000011, 0.00010934700000000269, 0.00010918099999999986, 0.00010954200000000414, 0.00011008299999999693, 0.00010983299999999668, 0.00010936100000000226, 0.00011009700000000344, 0.00011066700000000179, 0.00011052800000000557, 0.00010958299999999643, 0.00010919499999999943, 0.00011001399999999856, 0.00010974999999999874, 0.00010961100000000251, 0.00010949999999999849, 0.00010991700000000104, 0.0001093890000000014, 0.00011047200000000035, 0.00011015200000000225, 0.00010936099999999532, 0.00010993000000000114, 0.00011033299999999718, 0.00010923599999999867, 0.00010949999999999849, 0.00010948599999999892, 0.00010958300000000337, 0.00010972299999999907, 0.00010999999999999899, 0.00011069500000000093, 0.00010926299999999833, 0.00010976400000000525, 0.00010958299999999643, 0.00011065300000000222, 0.00010993100000000061, 0.00010929200000000389]</msg>
<status status="PASS" starttime="20201115 23:01:14.204" endtime="20201115 23:01:14.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.192" endtime="20201115 23:01:14.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.217" endtime="20201115 23:01:14.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.226" endtime="20201115 23:01:14.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.221" endtime="20201115 23:01:14.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.212" endtime="20201115 23:01:14.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.710" endtime="20201115 23:01:14.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.706" endtime="20201115 23:01:14.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.705" endtime="20201115 23:01:14.252"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.257" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.278" endtime="20201115 23:01:14.298"></status>
</kw>
<msg timestamp="20201115 23:01:14.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.275" endtime="20201115 23:01:14.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.301" endtime="20201115 23:01:14.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.307" endtime="20201115 23:01:14.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.268" endtime="20201115 23:01:14.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.262" endtime="20201115 23:01:14.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.330" endtime="20201115 23:01:14.660"></status>
</kw>
<msg timestamp="20201115 23:01:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044546361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044656681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.327" endtime="20201115 23:01:14.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044546361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044656681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.669" endtime="20201115 23:01:14.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.687" endtime="20201115 23:01:14.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.320" endtime="20201115 23:01:14.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.315" endtime="20201115 23:01:14.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.704" level="INFO">${RESULT} = [{'time': 0.044656681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011031999999999709, 'source_diff': 0.00011031999999999709}, {'time': 0.04477825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:14.696" endtime="20201115 23:01:14.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.734" level="INFO">${ACCURACY} = {'source_diff': [0.00011031999999999709, 0.00011120800000000153, 0.00011076399999999931, 0.00011184699999999825, 0.00011012499999999564, 0.0001104169999999946, 0.00011134700000000469, 0.00011038900000...</msg>
<status status="PASS" starttime="20201115 23:01:14.706" endtime="20201115 23:01:14.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.745" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.743" endtime="20201115 23:01:14.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.751" level="INFO">VALUE: [0.00011031999999999709, 0.00011120800000000153, 0.00011076399999999931, 0.00011184699999999825, 0.00011012499999999564, 0.0001104169999999946, 0.00011134700000000469, 0.0001103890000000024, 0.00011068000000000189, 0.00011040300000000197, 0.00011022199999999316, 0.00011061099999999657, 0.00011108399999999741, 0.00011012499999999564, 0.00011058400000000385, 0.00011084699999999725, 0.00011076399999999931, 0.00011048599999999992, 0.00011099999999999999, 0.00011029200000000489, 0.00011030500000000498, 0.00011070800000000103, 0.00011058300000000437, 0.00011079199999999845, 0.00011109700000000444, 0.00011112499999999664, 0.00011029199999999795, 0.00011101399999999956, 0.00011068000000000189, 0.00011065300000000222, 0.00011054200000000514, 0.00011101399999999956, 0.00011004100000000516, 0.00011179199999999945, 0.00011067999999999495, 0.00011070800000000103, 0.00011061100000000351, 0.00011098600000000042, 0.00011083299999999768, 0.00011044400000000121, 0.00011026399999999881, 0.00011037500000000283, 0.00011094400000000171, 0.00011076399999999931, 0.00011013900000000215, 0.00011074999999999974, 0.0001108340000000041, 0.00011111100000000401, 0.00011044400000000121, 0.00011034699999999675]</msg>
<status status="PASS" starttime="20201115 23:01:14.747" endtime="20201115 23:01:14.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.736" endtime="20201115 23:01:14.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.761" endtime="20201115 23:01:14.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.769" endtime="20201115 23:01:14.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.765" endtime="20201115 23:01:14.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.756" endtime="20201115 23:01:14.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.258" endtime="20201115 23:01:14.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.254" endtime="20201115 23:01:14.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.253" endtime="20201115 23:01:14.795"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.822" endtime="20201115 23:01:14.841"></status>
</kw>
<msg timestamp="20201115 23:01:14.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.818" endtime="20201115 23:01:14.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.844" endtime="20201115 23:01:14.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.851" endtime="20201115 23:01:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.811" endtime="20201115 23:01:14.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.806" endtime="20201115 23:01:14.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.874" endtime="20201115 23:01:15.205"></status>
</kw>
<msg timestamp="20201115 23:01:15.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044732153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.870" endtime="20201115 23:01:15.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044732153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.214" endtime="20201115 23:01:15.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.232" endtime="20201115 23:01:15.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.863" endtime="20201115 23:01:15.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.859" endtime="20201115 23:01:15.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.249" level="INFO">${RESULT} = [{'time': 0.044844514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011236100000000526, 'source_diff': 0.00011236100000000526}, {'time': 0.044961972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:15.240" endtime="20201115 23:01:15.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.279" level="INFO">${ACCURACY} = {'source_diff': [0.00011236100000000526, 0.00011126399999999981, 0.00011133300000000512, 0.00011208399999999841, 0.00011125000000000024, 0.00011137500000000383, 0.00011181899999999911, 0.0001113339999...</msg>
<status status="PASS" starttime="20201115 23:01:15.251" endtime="20201115 23:01:15.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.290" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.287" endtime="20201115 23:01:15.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.297" level="INFO">VALUE: [0.00011236100000000526, 0.00011126399999999981, 0.00011133300000000512, 0.00011208399999999841, 0.00011125000000000024, 0.00011137500000000383, 0.00011181899999999911, 0.00011133399999999766, 0.00011157000000000528, 0.00011190299999999653, 0.00011165300000000322, 0.00011181899999999911, 0.00011184800000000467, 0.00011165300000000322, 0.00011299999999999505, 0.00011119500000000143, 0.00011140299999999603, 0.00011159799999999748, 0.00011136099999999732, 0.00011193100000000261, 0.0001117090000000015, 0.00011173599999999423, 0.00011156999999999834, 0.00011177799999999988, 0.00011145799999999484, 0.00011202700000000065, 0.00011300000000000199, 0.00011161099999999757, 0.00011184700000000519, 0.00011188899999999696, 0.00011191700000000304, 0.00011151400000000006, 0.00011197200000000185, 0.00011172300000000107, 0.00011108299999999793, 0.00011154099999999972, 0.00011147200000000135, 0.00011155599999999877, 0.00011137500000000383, 0.0001120969999999985, 0.00011250000000000149, 0.00011175000000000074, 0.00011212499999999764, 0.00011191700000000304, 0.00011118100000000186, 0.00011165299999999628, 0.00011170800000000203, 0.00011141600000000307, 0.00011126399999999981, 0.00011118100000000186]</msg>
<status status="PASS" starttime="20201115 23:01:15.292" endtime="20201115 23:01:15.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.281" endtime="20201115 23:01:15.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.306" endtime="20201115 23:01:15.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.314" endtime="20201115 23:01:15.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.310" endtime="20201115 23:01:15.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.301" endtime="20201115 23:01:15.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.802" endtime="20201115 23:01:15.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.798" endtime="20201115 23:01:15.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.796" endtime="20201115 23:01:15.340"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.346" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.367" endtime="20201115 23:01:15.386"></status>
</kw>
<msg timestamp="20201115 23:01:15.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.363" endtime="20201115 23:01:15.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.389" endtime="20201115 23:01:15.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.396" endtime="20201115 23:01:15.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.356" endtime="20201115 23:01:15.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.351" endtime="20201115 23:01:15.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.419" endtime="20201115 23:01:15.749"></status>
</kw>
<msg timestamp="20201115 23:01:15.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044746083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.416" endtime="20201115 23:01:15.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044633194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044746083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.759" endtime="20201115 23:01:15.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.777" endtime="20201115 23:01:15.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.409" endtime="20201115 23:01:15.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.404" endtime="20201115 23:01:15.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.794" level="INFO">${RESULT} = [{'time': 0.044746083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011288899999999796, 'source_diff': 0.00011288899999999796}, {'time': 0.044864278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:15.785" endtime="20201115 23:01:15.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.824" level="INFO">${ACCURACY} = {'source_diff': [0.00011288899999999796, 0.00011368099999999742, 0.0001138049999999946, 0.00011255599999999977, 0.00011279100000000097, 0.0001120419999999997, 0.0001123890000000044, 0.0001126670000000...</msg>
<status status="PASS" starttime="20201115 23:01:15.796" endtime="20201115 23:01:15.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.835" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.833" endtime="20201115 23:01:15.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.842" level="INFO">VALUE: [0.00011288899999999796, 0.00011368099999999742, 0.0001138049999999946, 0.00011255599999999977, 0.00011279100000000097, 0.0001120419999999997, 0.0001123890000000044, 0.00011266700000000379, 0.00011308399999999941, 0.00011206999999999884, 0.0001123749999999979, 0.00011395800000000428, 0.00011222300000000157, 0.0001120969999999985, 0.00011269400000000346, 0.00011306999999999984, 0.00011225000000000124, 0.00011252800000000063, 0.00011297199999999591, 0.00011280500000000054, 0.00011397299999999638, 0.00011273700000000164, 0.00011297199999999591, 0.00011291700000000404, 0.00011241599999999713, 0.00011294499999999624, 0.00011218000000000339, 0.00011213900000000415, 0.00011293000000000414, 0.00011240299999999703, 0.00011300000000000199, 0.00011216600000000382, 0.00011297200000000285, 0.00011249999999999455, 0.00011236099999999832, 0.00011255499999999335, 0.00011275000000000174, 0.00011348599999999598, 0.0001122770000000009, 0.0001139299999999982, 0.00011215300000000372, 0.00011286099999999882, 0.00011369499999999699, 0.00011279200000000045, 0.00011219400000000296, 0.00011287500000000533, 0.0001122499999999943, 0.00011217999999999645, 0.00011255599999999977, 0.00011219500000000243]</msg>
<status status="PASS" starttime="20201115 23:01:15.837" endtime="20201115 23:01:15.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.826" endtime="20201115 23:01:15.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.850" endtime="20201115 23:01:15.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.858" endtime="20201115 23:01:15.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.854" endtime="20201115 23:01:15.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.846" endtime="20201115 23:01:15.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.347" endtime="20201115 23:01:15.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.343" endtime="20201115 23:01:15.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.341" endtime="20201115 23:01:15.885"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.911" endtime="20201115 23:01:15.931"></status>
</kw>
<msg timestamp="20201115 23:01:15.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.908" endtime="20201115 23:01:15.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.934" endtime="20201115 23:01:15.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.940" endtime="20201115 23:01:15.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.901" endtime="20201115 23:01:15.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.895" endtime="20201115 23:01:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.963" endtime="20201115 23:01:16.297"></status>
</kw>
<msg timestamp="20201115 23:01:16.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044729458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044842611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.960" endtime="20201115 23:01:16.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044729458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044842611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.306" endtime="20201115 23:01:16.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.324" endtime="20201115 23:01:16.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.953" endtime="20201115 23:01:16.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.948" endtime="20201115 23:01:16.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.341" level="INFO">${RESULT} = [{'time': 0.044842611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011315299999999778, 'source_diff': 0.00011315299999999778}, {'time': 0.044962917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.333" endtime="20201115 23:01:16.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.374" level="INFO">${ACCURACY} = {'source_diff': [0.00011315299999999778, 0.00011382000000000059, 0.00011379099999999504, 0.00011384700000000025, 0.00011395800000000428, 0.00011418099999999792, 0.00011384700000000025, 0.0001139029999...</msg>
<status status="PASS" starttime="20201115 23:01:16.343" endtime="20201115 23:01:16.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.385" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.382" endtime="20201115 23:01:16.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.391" level="INFO">VALUE: [0.00011315299999999778, 0.00011382000000000059, 0.00011379099999999504, 0.00011384700000000025, 0.00011395800000000428, 0.00011418099999999792, 0.00011384700000000025, 0.00011390299999999853, 0.00011390300000000547, 0.00011315299999999778, 0.0001145550000000023, 0.0001139169999999981, 0.00011362499999999914, 0.00011408400000000041, 0.00011352800000000163, 0.00011331900000000061, 0.00011348599999999598, 0.0001148750000000004, 0.00011488899999999996, 0.00011369499999999699, 0.00011355600000000077, 0.00011363899999999871, 0.00011315199999999831, 0.00011433400000000066, 0.00011300000000000199, 0.00011384700000000025, 0.00011376300000000283, 0.0001133619999999988, 0.00011397200000000385, 0.00011345800000000378, 0.0001132499999999953, 0.00011323600000000267, 0.00011388899999999896, 0.00011365300000000522, 0.00011380500000000154, 0.00011365199999999881, 0.0001134299999999977, 0.00011358300000000043, 0.00011313899999999821, 0.0001145420000000022, 0.00011352800000000163, 0.00011411100000000007, 0.00011325000000000224, 0.00011332000000000009, 0.00011386099999999982, 0.00011320800000000353, 0.00011362499999999914, 0.00011432000000000109, 0.00011326400000000181, 0.00011379199999999451]</msg>
<status status="PASS" starttime="20201115 23:01:16.387" endtime="20201115 23:01:16.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.376" endtime="20201115 23:01:16.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.400" endtime="20201115 23:01:16.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.408" endtime="20201115 23:01:16.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.404" endtime="20201115 23:01:16.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.395" endtime="20201115 23:01:16.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.891" endtime="20201115 23:01:16.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.887" endtime="20201115 23:01:16.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.886" endtime="20201115 23:01:16.434"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.461" endtime="20201115 23:01:16.480"></status>
</kw>
<msg timestamp="20201115 23:01:16.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.458" endtime="20201115 23:01:16.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.484" endtime="20201115 23:01:16.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.490" endtime="20201115 23:01:16.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.450" endtime="20201115 23:01:16.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.445" endtime="20201115 23:01:16.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.520" endtime="20201115 23:01:16.852"></status>
</kw>
<msg timestamp="20201115 23:01:16.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044686236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044800681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.510" endtime="20201115 23:01:16.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044686236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044800681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.861" endtime="20201115 23:01:16.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.879" endtime="20201115 23:01:16.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.503" endtime="20201115 23:01:16.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.498" endtime="20201115 23:01:16.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.896" level="INFO">${RESULT} = [{'time': 0.044800681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011444500000000468, 'source_diff': 0.00011444500000000468}, {'time': 0.044925028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.888" endtime="20201115 23:01:16.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.926" level="INFO">${ACCURACY} = {'source_diff': [0.00011444500000000468, 0.00011463899999999971, 0.00011462500000000014, 0.00011440299999999903, 0.00011404100000000222, 0.0001143749999999999, 0.00011433300000000118, 0.00011461100000...</msg>
<status status="PASS" starttime="20201115 23:01:16.898" endtime="20201115 23:01:16.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.937" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.935" endtime="20201115 23:01:16.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.944" level="INFO">VALUE: [0.00011444500000000468, 0.00011463899999999971, 0.00011462500000000014, 0.00011440299999999903, 0.00011404100000000222, 0.0001143749999999999, 0.00011433300000000118, 0.00011461100000000057, 0.00011458300000000143, 0.0001147499999999968, 0.00011498599999999748, 0.00011484700000000125, 0.00011419399999999802, 0.0001153620000000008, 0.00011469500000000493, 0.00011479100000000297, 0.00011425000000000324, 0.00011505600000000227, 0.00011449999999999655, 0.00011486100000000082, 0.0001145550000000023, 0.00011506900000000236, 0.00011457000000000134, 0.00011445799999999784, 0.00011469399999999852, 0.00011423600000000367, 0.0001148049999999956, 0.00011458400000000091, 0.00011476399999999637, 0.00011436100000000032, 0.00011423599999999673, 0.00011505599999999533, 0.00011451299999999665, 0.00011444500000000468, 0.00011456900000000186, 0.00011468099999999842, 0.00011465199999999981, 0.00011465199999999981, 0.00011465200000000675, 0.00011448599999999698, 0.00011568099999999942, 0.00011420800000000453, 0.00011456900000000186, 0.00011588799999999455, 0.00011498599999999748, 0.00011583400000000216, 0.00011451399999999612, 0.0001150970000000015, 0.0001144299999999987, 0.00011476300000000383]</msg>
<status status="PASS" starttime="20201115 23:01:16.939" endtime="20201115 23:01:16.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.928" endtime="20201115 23:01:16.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.952" endtime="20201115 23:01:16.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.960" endtime="20201115 23:01:16.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.956" endtime="20201115 23:01:16.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.948" endtime="20201115 23:01:16.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.441" endtime="20201115 23:01:16.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.437" endtime="20201115 23:01:16.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.435" endtime="20201115 23:01:16.987"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.014" endtime="20201115 23:01:17.034"></status>
</kw>
<msg timestamp="20201115 23:01:17.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.010" endtime="20201115 23:01:17.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.037" endtime="20201115 23:01:17.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.045" endtime="20201115 23:01:17.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.003" endtime="20201115 23:01:17.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.997" endtime="20201115 23:01:17.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.068" endtime="20201115 23:01:17.399"></status>
</kw>
<msg timestamp="20201115 23:01:17.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045790958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.065" endtime="20201115 23:01:17.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045790958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.409" endtime="20201115 23:01:17.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.427" endtime="20201115 23:01:17.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.057" endtime="20201115 23:01:17.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.053" endtime="20201115 23:01:17.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.444" level="INFO">${RESULT} = [{'time': 0.045790958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001154299999999997, 'source_diff': 0.0001154299999999997}, {'time': 0.045915472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.435" endtime="20201115 23:01:17.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.474" level="INFO">${ACCURACY} = {'source_diff': [0.0001154299999999997, 0.00011570799999999909, 0.00011576399999999737, 0.00011569399999999952, 0.00011684800000000273, 0.00011688899999999502, 0.00011550000000000449, 0.00011567999999...</msg>
<status status="PASS" starttime="20201115 23:01:17.446" endtime="20201115 23:01:17.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.485" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.482" endtime="20201115 23:01:17.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.491" level="INFO">VALUE: [0.0001154299999999997, 0.00011570799999999909, 0.00011576399999999737, 0.00011569399999999952, 0.00011684800000000273, 0.00011688899999999502, 0.00011550000000000449, 0.00011567999999999995, 0.00011595800000000628, 0.00011544400000000621, 0.00011533299999999524, 0.000115082999999995, 0.00011581999999999565, 0.00011581999999999565, 0.00011554099999999679, 0.00011579199999999651, 0.00011513900000000021, 0.0001153750000000009, 0.00011577800000000388, 0.00011586099999999488, 0.00011576400000000431, 0.00011527800000000338, 0.00011604199999999676, 0.00011591600000000063, 0.00011572199999999866, 0.00011579100000000397, 0.0001157499999999978, 0.0001159170000000001, 0.00011513900000000021, 0.00011570799999999909, 0.00011561100000000157, 0.00011605600000000327, 0.00011531999999999515, 0.00011594399999999977, 0.00011561100000000157, 0.00011570899999999856, 0.00011595899999999881, 0.00011569499999999899, 0.0001152499999999973, 0.00011562500000000114, 0.00011601399999999762, 0.00011563900000000071, 0.00011531900000000261, 0.00011613899999999427, 0.00011586100000000182, 0.00011606899999999643, 0.00011558300000000243, 0.00011626399999999787, 0.00011595799999999934, 0.00011522199999999816]</msg>
<status status="PASS" starttime="20201115 23:01:17.487" endtime="20201115 23:01:17.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.476" endtime="20201115 23:01:17.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.500" endtime="20201115 23:01:17.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.508" endtime="20201115 23:01:17.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.504" endtime="20201115 23:01:17.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.495" endtime="20201115 23:01:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.993" endtime="20201115 23:01:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.989" endtime="20201115 23:01:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.988" endtime="20201115 23:01:17.534"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.562" endtime="20201115 23:01:17.581"></status>
</kw>
<msg timestamp="20201115 23:01:17.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.558" endtime="20201115 23:01:17.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.585" endtime="20201115 23:01:17.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.591" endtime="20201115 23:01:17.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.551" endtime="20201115 23:01:17.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.545" endtime="20201115 23:01:17.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.614" endtime="20201115 23:01:17.946"></status>
</kw>
<msg timestamp="20201115 23:01:17.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045708681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0458255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:17.611" endtime="20201115 23:01:17.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045708681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0458255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:17.955" endtime="20201115 23:01:17.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.973" endtime="20201115 23:01:17.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.604" endtime="20201115 23:01:17.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.599" endtime="20201115 23:01:17.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.990" level="INFO">${RESULT} = [{'time': 0.0458255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011681899999999718, 'source_diff': 0.00011681899999999718}, {'time': 0.045952875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.981" endtime="20201115 23:01:17.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.020" level="INFO">${ACCURACY} = {'source_diff': [0.00011681899999999718, 0.00011648599999999898, 0.00011619400000000002, 0.00011684700000000325, 0.00011616600000000088, 0.00011770800000000109, 0.00011705499999999786, 0.0001162499999...</msg>
<status status="PASS" starttime="20201115 23:01:17.992" endtime="20201115 23:01:18.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.031" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.029" endtime="20201115 23:01:18.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.037" level="INFO">VALUE: [0.00011681899999999718, 0.00011648599999999898, 0.00011619400000000002, 0.00011684700000000325, 0.00011616600000000088, 0.00011770800000000109, 0.00011705499999999786, 0.0001162499999999983, 0.00011648599999999898, 0.00011676399999999837, 0.00011668100000000042, 0.00011699999999999905, 0.00011626399999999787, 0.00011669400000000052, 0.00011683300000000368, 0.00011662500000000214, 0.00011688900000000196, 0.00011652799999999769, 0.00011694400000000077, 0.00011768100000000142, 0.00011701399999999862, 0.00011613900000000121, 0.00011652800000000463, 0.00011652799999999769, 0.00011665300000000128, 0.00011609699999999556, 0.00011608300000000293, 0.00011763900000000271, 0.0001160970000000025, 0.00011705499999999786, 0.00011699999999999905, 0.00011701399999999862, 0.00011731900000000461, 0.00011666600000000138, 0.00011738899999999552, 0.00011618099999999992, 0.00011681899999999718, 0.00011676399999999837, 0.00011615300000000078, 0.00011633300000000318, 0.00011694400000000077, 0.00011633300000000318, 0.00011617999999999351, 0.000116597000000003, 0.00011615200000000131, 0.00011680599999999708, 0.00011725000000000624, 0.00011663900000000171, 0.00011734699999999681, 0.00011640300000000103]</msg>
<status status="PASS" starttime="20201115 23:01:18.033" endtime="20201115 23:01:18.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.022" endtime="20201115 23:01:18.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.047" endtime="20201115 23:01:18.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.056" endtime="20201115 23:01:18.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.051" endtime="20201115 23:01:18.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.042" endtime="20201115 23:01:18.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.541" endtime="20201115 23:01:18.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.537" endtime="20201115 23:01:18.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.535" endtime="20201115 23:01:18.083"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.109" endtime="20201115 23:01:18.129"></status>
</kw>
<msg timestamp="20201115 23:01:18.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.106" endtime="20201115 23:01:18.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.132" endtime="20201115 23:01:18.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.139" endtime="20201115 23:01:18.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.099" endtime="20201115 23:01:18.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.093" endtime="20201115 23:01:18.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.161" endtime="20201115 23:01:18.492"></status>
</kw>
<msg timestamp="20201115 23:01:18.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044955903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045073903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.158" endtime="20201115 23:01:18.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044955903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045073903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.501" endtime="20201115 23:01:18.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.519" endtime="20201115 23:01:18.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.151" endtime="20201115 23:01:18.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.147" endtime="20201115 23:01:18.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.536" level="INFO">${RESULT} = [{'time': 0.045073903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011800000000000005, 'source_diff': 0.00011800000000000005}, {'time': 0.045202292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:18.528" endtime="20201115 23:01:18.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.569" level="INFO">${ACCURACY} = {'source_diff': [0.00011800000000000005, 0.00011761099999999663, 0.00011751399999999912, 0.00011822200000000116, 0.00011777799999999894, 0.00011749999999999955, 0.00011726399999999887, 0.0001172780000...</msg>
<status status="PASS" starttime="20201115 23:01:18.539" endtime="20201115 23:01:18.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.580" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.578" endtime="20201115 23:01:18.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.656" level="INFO">VALUE: [0.00011800000000000005, 0.00011761099999999663, 0.00011751399999999912, 0.00011822200000000116, 0.00011777799999999894, 0.00011749999999999955, 0.00011726399999999887, 0.00011727800000000538, 0.0001178750000000034, 0.00011784700000000425, 0.00011751399999999912, 0.00011738900000000246, 0.00011793100000000167, 0.00011768100000000142, 0.00011726399999999887, 0.00011773600000000023, 0.00011712500000000264, 0.00011797200000000091, 0.00011754199999999826, 0.00011783299999999775, 0.0001180420000000057, 0.00011711099999999613, 0.00011791699999999516, 0.00011754199999999826, 0.00011729199999999801, 0.00011723599999999973, 0.00011781900000000511, 0.00011751399999999912, 0.00011811100000000407, 0.00011740200000000256, 0.00011743100000000117, 0.00011773600000000023, 0.0001174029999999951, 0.00011798600000000048, 0.00011770800000000109, 0.00011802800000000613, 0.0001174170000000016, 0.0001176379999999963, 0.00011734700000000375, 0.00011755499999999836, 0.00011890199999999712, 0.00011723599999999973, 0.00011777699999999947, 0.00011744400000000127, 0.00011769400000000152, 0.00011808300000000493, 0.0001179300000000022, 0.00011744400000000127, 0.00011854199999999926, 0.00011759699999999706]</msg>
<status status="PASS" starttime="20201115 23:01:18.582" endtime="20201115 23:01:18.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.571" endtime="20201115 23:01:18.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.666" endtime="20201115 23:01:18.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.677" endtime="20201115 23:01:18.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.672" endtime="20201115 23:01:18.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.661" endtime="20201115 23:01:18.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.089" endtime="20201115 23:01:18.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.085" endtime="20201115 23:01:18.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.084" endtime="20201115 23:01:18.704"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.730" endtime="20201115 23:01:18.750"></status>
</kw>
<msg timestamp="20201115 23:01:18.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.727" endtime="20201115 23:01:18.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.754" endtime="20201115 23:01:18.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.760" endtime="20201115 23:01:18.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.720" endtime="20201115 23:01:18.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.714" endtime="20201115 23:01:18.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.783" endtime="20201115 23:01:19.115"></status>
</kw>
<msg timestamp="20201115 23:01:19.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.780" endtime="20201115 23:01:19.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045283125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.124" endtime="20201115 23:01:19.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.142" endtime="20201115 23:01:19.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.772" endtime="20201115 23:01:19.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.768" endtime="20201115 23:01:19.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.159" level="INFO">${RESULT} = [{'time': 0.045283125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011830599999999858, 'source_diff': 0.00011830599999999858}, {'time': 0.045410542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.150" endtime="20201115 23:01:19.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.189" level="INFO">${ACCURACY} = {'source_diff': [0.00011830599999999858, 0.00011852799999999969, 0.0001184170000000026, 0.00011856899999999893, 0.00011898600000000148, 0.00011819400000000202, 0.00011830599999999858, 0.00011863899999...</msg>
<status status="PASS" starttime="20201115 23:01:19.161" endtime="20201115 23:01:19.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.200" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.198" endtime="20201115 23:01:19.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.206" level="INFO">VALUE: [0.00011830599999999858, 0.00011852799999999969, 0.0001184170000000026, 0.00011856899999999893, 0.00011898600000000148, 0.00011819400000000202, 0.00011830599999999858, 0.00011863899999999677, 0.00011897300000000138, 0.00011831999999999815, 0.00011836099999999738, 0.00011862500000000414, 0.00011808399999999747, 0.000118695000000002, 0.00011845800000000184, 0.00011898600000000148, 0.00011883299999999875, 0.00011987499999999846, 0.0001190699999999989, 0.00011901400000000062, 0.00011936099999999839, 0.000119082999999999, 0.00011815299999999584, 0.00011866599999999644, 0.0001185829999999985, 0.0001182500000000003, 0.00011987499999999846, 0.00011901400000000062, 0.00011897200000000191, 0.00011872199999999472, 0.00011827799999999944, 0.00011848600000000098, 0.00011886099999999789, 0.00011883299999999875, 0.00011800000000000005, 0.00011822300000000063, 0.00011883399999999822, 0.00011830599999999858, 0.00011833299999999825, 0.00011811099999999713, 0.00011847200000000141, 0.00011809699999999757, 0.00011893099999999573, 0.00011848600000000098, 0.00011850000000000055, 0.00011844400000000227, 0.0001187500000000008, 0.00011972200000000266, 0.0001187500000000008, 0.00011893100000000267]</msg>
<status status="PASS" starttime="20201115 23:01:19.202" endtime="20201115 23:01:19.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.191" endtime="20201115 23:01:19.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.215" endtime="20201115 23:01:19.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.223" endtime="20201115 23:01:19.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.218" endtime="20201115 23:01:19.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.210" endtime="20201115 23:01:19.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.710" endtime="20201115 23:01:19.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.706" endtime="20201115 23:01:19.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.705" endtime="20201115 23:01:19.249"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.276" endtime="20201115 23:01:19.296"></status>
</kw>
<msg timestamp="20201115 23:01:19.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.272" endtime="20201115 23:01:19.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.299" endtime="20201115 23:01:19.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.305" endtime="20201115 23:01:19.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.265" endtime="20201115 23:01:19.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.260" endtime="20201115 23:01:19.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.330" endtime="20201115 23:01:19.661"></status>
</kw>
<msg timestamp="20201115 23:01:19.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045005208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.325" endtime="20201115 23:01:19.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044885819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045005208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.671" endtime="20201115 23:01:19.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.689" endtime="20201115 23:01:19.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.318" endtime="20201115 23:01:19.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.313" endtime="20201115 23:01:19.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.707" level="INFO">${RESULT} = [{'time': 0.045005208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011938899999999752, 'source_diff': 0.00011938899999999752}, {'time': 0.045134583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:19.698" endtime="20201115 23:01:19.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.737" level="INFO">${ACCURACY} = {'source_diff': [0.00011938899999999752, 0.00011987499999999846, 0.00011937499999999795, 0.00011942999999999676, 0.0001205830000000005, 0.0001204029999999981, 0.00012005500000000086, 0.000119374999999...</msg>
<status status="PASS" starttime="20201115 23:01:19.709" endtime="20201115 23:01:19.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.748" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.745" endtime="20201115 23:01:19.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.753" level="INFO">VALUE: [0.00011938899999999752, 0.00011987499999999846, 0.00011937499999999795, 0.00011942999999999676, 0.0001205830000000005, 0.0001204029999999981, 0.00012005500000000086, 0.00011937499999999795, 0.00011965300000000428, 0.00011916700000000335, 0.00011979199999999357, 0.00011915299999999684, 0.00011983399999999922, 0.00011945900000000231, 0.00012006900000000043, 0.00011963900000000471, 0.00011933399999999872, 0.00011915299999999684, 0.00011948700000000145, 0.00012004200000000076, 0.00011927700000000097, 0.00011937499999999795, 0.00011913899999999727, 0.00011938899999999752, 0.00012005500000000086, 0.00011938899999999752, 0.00012004200000000076, 0.0001197500000000018, 0.00011995899999999587, 0.00011994500000000324, 0.0001205830000000005, 0.00011919400000000302, 0.00011950000000000155, 0.00011951399999999418, 0.000120083, 0.00011968100000000342, 0.00012002800000000119, 0.00011909699999999857, 0.00011968099999999648, 0.00011994399999999683, 0.00011934699999999882, 0.0001200699999999999, 0.000120083, 0.000120083, 0.00011952800000000069, 0.0001205830000000005, 0.00011981900000000018, 0.00011987499999999846, 0.00011986099999999889, 0.00011927800000000044]</msg>
<status status="PASS" starttime="20201115 23:01:19.750" endtime="20201115 23:01:19.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.739" endtime="20201115 23:01:19.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.762" endtime="20201115 23:01:19.764"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.770" endtime="20201115 23:01:19.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.765" endtime="20201115 23:01:19.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.757" endtime="20201115 23:01:19.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.256" endtime="20201115 23:01:19.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.252" endtime="20201115 23:01:19.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.250" endtime="20201115 23:01:19.796"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.823" endtime="20201115 23:01:19.843"></status>
</kw>
<msg timestamp="20201115 23:01:19.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.819" endtime="20201115 23:01:19.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.846" endtime="20201115 23:01:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.852" endtime="20201115 23:01:19.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.812" endtime="20201115 23:01:19.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.807" endtime="20201115 23:01:19.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.875" endtime="20201115 23:01:20.210"></status>
</kw>
<msg timestamp="20201115 23:01:20.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0451185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:19.872" endtime="20201115 23:01:20.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044997694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0451185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:20.219" endtime="20201115 23:01:20.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.238" endtime="20201115 23:01:20.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.865" endtime="20201115 23:01:20.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.860" endtime="20201115 23:01:20.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.255" level="INFO">${RESULT} = [{'time': 0.0451185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012080600000000108, 'source_diff': 0.00012080600000000108}, {'time': 0.045246875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:20.246" endtime="20201115 23:01:20.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.284" level="INFO">${ACCURACY} = {'source_diff': [0.00012080600000000108, 0.00012102800000000219, 0.0001210700000000009, 0.00012055600000000083, 0.00012047299999999594, 0.00012032000000000015, 0.0001206249999999992, 0.000120236000000...</msg>
<status status="PASS" starttime="20201115 23:01:20.257" endtime="20201115 23:01:20.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.295" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.293" endtime="20201115 23:01:20.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.300" level="INFO">VALUE: [0.00012080600000000108, 0.00012102800000000219, 0.0001210700000000009, 0.00012055600000000083, 0.00012047299999999594, 0.00012032000000000015, 0.0001206249999999992, 0.00012023600000000273, 0.00012026400000000187, 0.00012165299999999934, 0.00012083300000000075, 0.00012081900000000118, 0.00012108400000000047, 0.00012063899999999877, 0.00012098600000000348, 0.00012063899999999877, 0.00012087499999999946, 0.00012045900000000331, 0.00012077800000000194, 0.00012102800000000219, 0.00012054199999999432, 0.00012054199999999432, 0.00012034699999999982, 0.00012070799999999715, 0.0001204170000000046, 0.00012032000000000015, 0.00012143100000000517, 0.00012011099999999914, 0.00012088899999999903, 0.00012102800000000219, 0.00012027800000000144, 0.00012134700000000082, 0.00012105600000000133, 0.00012083300000000075, 0.00012101400000000262, 0.00012105500000000186, 0.00012104099999999535, 0.00012041699999999766, 0.0001201249999999987, 0.00012031900000000068, 0.00012023599999999579, 0.00012109700000000057, 0.0001211950000000045, 0.000120777999999995, 0.00012054200000000126, 0.00012102800000000219, 0.00012076399999999543, 0.00012059700000000007, 0.00012051400000000212, 0.0001201249999999987]</msg>
<status status="PASS" starttime="20201115 23:01:20.297" endtime="20201115 23:01:20.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.286" endtime="20201115 23:01:20.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.309" endtime="20201115 23:01:20.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.318" endtime="20201115 23:01:20.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.314" endtime="20201115 23:01:20.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.305" endtime="20201115 23:01:20.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.803" endtime="20201115 23:01:20.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.799" endtime="20201115 23:01:20.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.797" endtime="20201115 23:01:20.344"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.349" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.371" endtime="20201115 23:01:20.391"></status>
</kw>
<msg timestamp="20201115 23:01:20.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.367" endtime="20201115 23:01:20.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.394" endtime="20201115 23:01:20.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.400" endtime="20201115 23:01:20.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.360" endtime="20201115 23:01:20.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.355" endtime="20201115 23:01:20.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.424" endtime="20201115 23:01:20.758"></status>
</kw>
<msg timestamp="20201115 23:01:20.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044790819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.420" endtime="20201115 23:01:20.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044790819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.767" endtime="20201115 23:01:20.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.785" endtime="20201115 23:01:20.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.413" endtime="20201115 23:01:20.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.408" endtime="20201115 23:01:20.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.802" level="INFO">${RESULT} = [{'time': 0.044790819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001211379999999998, 'source_diff': 0.0001211379999999998}, {'time': 0.044921181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:20.794" endtime="20201115 23:01:20.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.834" level="INFO">${ACCURACY} = {'source_diff': [0.0001211379999999998, 0.00012187500000000046, 0.00012202799999999625, 0.00012116699999999841, 0.00012152699999999628, 0.0001210700000000009, 0.00012151400000000312, 0.000122291999999...</msg>
<status status="PASS" starttime="20201115 23:01:20.804" endtime="20201115 23:01:20.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.845" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.842" endtime="20201115 23:01:20.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.850" level="INFO">VALUE: [0.0001211379999999998, 0.00012187500000000046, 0.00012202799999999625, 0.00012116699999999841, 0.00012152699999999628, 0.0001210700000000009, 0.00012151400000000312, 0.00012229199999999607, 0.00012115199999999937, 0.00012123699999999626, 0.00012204100000000329, 0.0001216250000000002, 0.00012149999999999661, 0.00012177700000000347, 0.00012165299999999934, 0.00012208299999999506, 0.00012197199999999797, 0.00012155600000000183, 0.00012194399999999883, 0.00012180599999999514, 0.0001217500000000038, 0.00012111100000000014, 0.00012174999999999686, 0.00012194399999999883, 0.00012179100000000304, 0.00012190200000000012, 0.00012172300000000413, 0.00012143099999999823, 0.00012145800000000484, 0.0001227500000000048, 0.00012168099999999848, 0.00012158400000000097, 0.00012188900000000003, 0.00012176399999999643, 0.00012163899999999978, 0.00012145800000000484, 0.00012199999999999711, 0.00012208400000000147, 0.00012167999999999901, 0.00012184700000000132, 0.00012181900000000218, 0.00012165199999999987, 0.00012151400000000312, 0.00012202800000000319, 0.0001217909999999961, 0.00012129200000000201, 0.00012137499999999996, 0.00012144399999999833, 0.00012131900000000168, 0.00012111100000000014]</msg>
<status status="PASS" starttime="20201115 23:01:20.847" endtime="20201115 23:01:20.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.836" endtime="20201115 23:01:20.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.859" endtime="20201115 23:01:20.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.867" endtime="20201115 23:01:20.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.862" endtime="20201115 23:01:20.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.854" endtime="20201115 23:01:20.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.351" endtime="20201115 23:01:20.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.347" endtime="20201115 23:01:20.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.345" endtime="20201115 23:01:20.893"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.898" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.920" endtime="20201115 23:01:20.939"></status>
</kw>
<msg timestamp="20201115 23:01:20.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.916" endtime="20201115 23:01:20.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.943" endtime="20201115 23:01:20.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.950" endtime="20201115 23:01:20.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.909" endtime="20201115 23:01:20.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.903" endtime="20201115 23:01:20.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.973" endtime="20201115 23:01:21.305"></status>
</kw>
<msg timestamp="20201115 23:01:21.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044738278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044860389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.969" endtime="20201115 23:01:21.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044738278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044860389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.314" endtime="20201115 23:01:21.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.332" endtime="20201115 23:01:21.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.962" endtime="20201115 23:01:21.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.958" endtime="20201115 23:01:21.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.351" level="INFO">${RESULT} = [{'time': 0.044860389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012211100000000114, 'source_diff': 0.00012211100000000114}, {'time': 0.044989833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.342" endtime="20201115 23:01:21.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.380" level="INFO">${ACCURACY} = {'source_diff': [0.00012211100000000114, 0.00012294399999999983, 0.00012230600000000258, 0.00012280600000000308, 0.00012266600000000044, 0.00012223600000000473, 0.00012270799999999915, 0.0001229579999...</msg>
<status status="PASS" starttime="20201115 23:01:21.353" endtime="20201115 23:01:21.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.391" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.389" endtime="20201115 23:01:21.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.396" level="INFO">VALUE: [0.00012211100000000114, 0.00012294399999999983, 0.00012230600000000258, 0.00012280600000000308, 0.00012266600000000044, 0.00012223600000000473, 0.00012270799999999915, 0.0001229579999999994, 0.00012258400000000197, 0.0001228050000000036, 0.00012284700000000232, 0.0001230280000000042, 0.00012295899999999887, 0.00012255600000000283, 0.00012254200000000326, 0.00012227800000000344, 0.00012270899999999862, 0.00012276399999999743, 0.0001226250000000012, 0.00012341700000000067, 0.00012248700000000445, 0.00012300000000000505, 0.0001224160000000002, 0.00012263899999999384, 0.00012265300000000035, 0.00012309699999999563, 0.0001227370000000047, 0.00012213900000000028, 0.00012238900000000053, 0.00012216699999999941, 0.00012298600000000548, 0.0001225700000000024, 0.00012288899999999409, 0.00012293000000000026, 0.0001237359999999993, 0.0001229030000000006, 0.00012344400000000033, 0.00012265300000000035, 0.00012237500000000096, 0.00012259700000000207, 0.00012286200000000136, 0.00012247199999999847, 0.00012261100000000164, 0.00012270900000000556, 0.00012283300000000275, 0.00012236100000000139, 0.00012254200000000326, 0.0001230280000000042, 0.00012243099999999923, 0.00012302799999999725]</msg>
<status status="PASS" starttime="20201115 23:01:21.394" endtime="20201115 23:01:21.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.382" endtime="20201115 23:01:21.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.405" endtime="20201115 23:01:21.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.413" endtime="20201115 23:01:21.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.409" endtime="20201115 23:01:21.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.401" endtime="20201115 23:01:21.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.899" endtime="20201115 23:01:21.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.896" endtime="20201115 23:01:21.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.894" endtime="20201115 23:01:21.440"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.445" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.467" endtime="20201115 23:01:21.487"></status>
</kw>
<msg timestamp="20201115 23:01:21.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.464" endtime="20201115 23:01:21.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.490" endtime="20201115 23:01:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.497" endtime="20201115 23:01:21.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.456" endtime="20201115 23:01:21.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.450" endtime="20201115 23:01:21.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.519" endtime="20201115 23:01:21.852"></status>
</kw>
<msg timestamp="20201115 23:01:21.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045284889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045409486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.516" endtime="20201115 23:01:21.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045284889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045409486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.861" endtime="20201115 23:01:21.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.879" endtime="20201115 23:01:21.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.509" endtime="20201115 23:01:21.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.505" endtime="20201115 23:01:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.896" level="INFO">${RESULT} = [{'time': 0.045409486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012459699999999713, 'source_diff': 0.00012459699999999713}, {'time': 0.045541889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.888" endtime="20201115 23:01:21.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.926" level="INFO">${ACCURACY} = {'source_diff': [0.00012459699999999713, 0.0001232500000000053, 0.0001237359999999993, 0.0001236250000000022, 0.00012374999999999886, 0.00012384700000000332, 0.00012355600000000383, 0.0001235829999999...</msg>
<status status="PASS" starttime="20201115 23:01:21.898" endtime="20201115 23:01:21.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.936" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.934" endtime="20201115 23:01:21.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.942" level="INFO">VALUE: [0.00012459699999999713, 0.0001232500000000053, 0.0001237359999999993, 0.0001236250000000022, 0.00012374999999999886, 0.00012384700000000332, 0.00012355600000000383, 0.00012358299999999656, 0.00012386200000000236, 0.0001239030000000016, 0.00012338900000000153, 0.00012386099999999595, 0.00012404199999999782, 0.00012366600000000144, 0.00012347199999999947, 0.00012337500000000196, 0.00012497200000000097, 0.0001234579999999999, 0.00012366699999999398, 0.0001234999999999986, 0.00012397199999999997, 0.00012445900000000037, 0.00012384700000000332, 0.0001239030000000016, 0.00012344400000000033, 0.00012386099999999595, 0.00012459699999999713, 0.00012354199999999732, 0.00012481899999999824, 0.00012322199999999922, 0.0001239030000000016, 0.00012476399999999943, 0.00012493000000000226, 0.0001239999999999991, 0.00012362499999999527, 0.00012386099999999595, 0.00012343100000000023, 0.00012331899999999674, 0.000124777999999999, 0.00012363899999999484, 0.00012461100000000364, 0.0001232779999999975, 0.00012369400000000058, 0.00012318099999999998, 0.00012352799999999775, 0.0001233329999999963, 0.000123777999999998, 0.0001235830000000035, 0.0001232779999999975, 0.00012404200000000476]</msg>
<status status="PASS" starttime="20201115 23:01:21.939" endtime="20201115 23:01:21.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.927" endtime="20201115 23:01:21.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.950" endtime="20201115 23:01:21.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.966" endtime="20201115 23:01:21.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.954" endtime="20201115 23:01:21.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.946" endtime="20201115 23:01:21.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.446" endtime="20201115 23:01:21.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.442" endtime="20201115 23:01:21.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.441" endtime="20201115 23:01:21.992"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.020" endtime="20201115 23:01:22.040"></status>
</kw>
<msg timestamp="20201115 23:01:22.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.017" endtime="20201115 23:01:22.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.044" endtime="20201115 23:01:22.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.050" endtime="20201115 23:01:22.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.010" endtime="20201115 23:01:22.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.004" endtime="20201115 23:01:22.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.073" endtime="20201115 23:01:22.405"></status>
</kw>
<msg timestamp="20201115 23:01:22.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046182944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:22.070" endtime="20201115 23:01:22.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046182944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:22.414" endtime="20201115 23:01:22.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.432" endtime="20201115 23:01:22.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.063" endtime="20201115 23:01:22.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.058" endtime="20201115 23:01:22.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.450" level="INFO">${RESULT} = [{'time': 0.046182944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001249439999999949, 'source_diff': 0.0001249439999999949}, {'time': 0.046318361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.442" endtime="20201115 23:01:22.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.480" level="INFO">${ACCURACY} = {'source_diff': [0.0001249439999999949, 0.00012484700000000432, 0.0001246250000000032, 0.00012448600000000004, 0.0001250000000000001, 0.0001250000000000001, 0.00012511100000000414, 0.00012493000000000...</msg>
<status status="PASS" starttime="20201115 23:01:22.452" endtime="20201115 23:01:22.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.491" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.488" endtime="20201115 23:01:22.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.496" level="INFO">VALUE: [0.0001249439999999949, 0.00012484700000000432, 0.0001246250000000032, 0.00012448600000000004, 0.0001250000000000001, 0.0001250000000000001, 0.00012511100000000414, 0.00012493000000000226, 0.00012509699999999763, 0.00012479199999999857, 0.0001249450000000013, 0.00012434700000000382, 0.00012529199999999907, 0.00012415300000000185, 0.0001242359999999998, 0.00012505600000000533, 0.00012412499999999577, 0.00012484699999999738, 0.00012501399999999968, 0.00012505600000000533, 0.00012443100000000124, 0.00012430599999999764, 0.0001243199999999972, 0.00012558299999999856, 0.00012444400000000133, 0.0001244999999999996, 0.00012518100000000199, 0.0001244999999999996, 0.00012461100000000364, 0.00012476399999999943, 0.00012448699999999951, 0.0001254859999999941, 0.00012447199999999353, 0.00012416600000000194, 0.00012506900000000543, 0.00012405499999999792, 0.00012429100000000554, 0.00012434700000000382, 0.0001247230000000002, 0.00012502799999999925, 0.00012440200000000262, 0.0001250130000000002, 0.0001240700000000039, 0.00012413899999999534, 0.00012408299999999706, 0.0001247360000000003, 0.00012497300000000044, 0.0001242359999999998, 0.0001242779999999985, 0.00012488900000000303]</msg>
<status status="PASS" starttime="20201115 23:01:22.493" endtime="20201115 23:01:22.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.482" endtime="20201115 23:01:22.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.506" endtime="20201115 23:01:22.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.514" endtime="20201115 23:01:22.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.509" endtime="20201115 23:01:22.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.501" endtime="20201115 23:01:22.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.000" endtime="20201115 23:01:22.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.995" endtime="20201115 23:01:22.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.993" endtime="20201115 23:01:22.541"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.568" endtime="20201115 23:01:22.588"></status>
</kw>
<msg timestamp="20201115 23:01:22.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.564" endtime="20201115 23:01:22.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.591" endtime="20201115 23:01:22.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.597" endtime="20201115 23:01:22.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.557" endtime="20201115 23:01:22.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.551" endtime="20201115 23:01:22.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.621" endtime="20201115 23:01:22.954"></status>
</kw>
<msg timestamp="20201115 23:01:22.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0457305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045856181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:22.617" endtime="20201115 23:01:22.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0457305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045856181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:22.963" endtime="20201115 23:01:22.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.981" endtime="20201115 23:01:22.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.610" endtime="20201115 23:01:22.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.606" endtime="20201115 23:01:22.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.998" level="INFO">${RESULT} = [{'time': 0.045856181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012568100000000249, 'source_diff': 0.00012568100000000249}, {'time': 0.045993583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.989" endtime="20201115 23:01:22.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.030" level="INFO">${ACCURACY} = {'source_diff': [0.00012568100000000249, 0.00012640199999999768, 0.0001259859999999946, 0.00012509700000000457, 0.00012588900000000403, 0.00012513899999999634, 0.00012529199999999907, 0.00012583299999...</msg>
<status status="PASS" starttime="20201115 23:01:23.000" endtime="20201115 23:01:23.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.041" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.039" endtime="20201115 23:01:23.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.047" level="INFO">VALUE: [0.00012568100000000249, 0.00012640199999999768, 0.0001259859999999946, 0.00012509700000000457, 0.00012588900000000403, 0.00012513899999999634, 0.00012529199999999907, 0.0001258329999999988, 0.0001253889999999966, 0.00012576400000000043, 0.00012587499999999752, 0.0001251250000000037, 0.00012547300000000094, 0.00012569400000000258, 0.00012580499999999967, 0.00012602800000000025, 0.00012554099999999985, 0.0001264580000000029, 0.000125778, 0.00012536100000000439, 0.00012604100000000035, 0.00012548600000000104, 0.0001265559999999999, 0.00012551400000000018, 0.00012620800000000265, 0.0001259580000000024, 0.00012654100000000085, 0.00012593000000000326, 0.0001250979999999971, 0.000125568999999999, 0.00012591700000000317, 0.00012626400000000093, 0.000125778, 0.00012626400000000093, 0.00012581899999999924, 0.00012526399999999993, 0.0001259450000000023, 0.0001251529999999959, 0.00012572200000000172, 0.00012515199999999643, 0.00012598600000000154, 0.00012544400000000233, 0.00012562499999999727, 0.00012586099999999795, 0.0001256250000000042, 0.00012562499999999727, 0.00012576400000000043, 0.00012554099999999985, 0.0001254580000000019, 0.00012584700000000532]</msg>
<status status="PASS" starttime="20201115 23:01:23.043" endtime="20201115 23:01:23.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.032" endtime="20201115 23:01:23.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.056" endtime="20201115 23:01:23.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.064" endtime="20201115 23:01:23.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.060" endtime="20201115 23:01:23.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.051" endtime="20201115 23:01:23.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.547" endtime="20201115 23:01:23.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.543" endtime="20201115 23:01:23.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.542" endtime="20201115 23:01:23.090"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.117" endtime="20201115 23:01:23.137"></status>
</kw>
<msg timestamp="20201115 23:01:23.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.113" endtime="20201115 23:01:23.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.140" endtime="20201115 23:01:23.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.146" endtime="20201115 23:01:23.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.106" endtime="20201115 23:01:23.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.100" endtime="20201115 23:01:23.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.169" endtime="20201115 23:01:23.501"></status>
</kw>
<msg timestamp="20201115 23:01:23.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044729694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.166" endtime="20201115 23:01:23.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044729694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.510" endtime="20201115 23:01:23.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.528" endtime="20201115 23:01:23.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.159" endtime="20201115 23:01:23.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.154" endtime="20201115 23:01:23.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.547" level="INFO">${RESULT} = [{'time': 0.044729694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001269580000000034, 'source_diff': 0.0001269580000000034}, {'time': 0.044865153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.538" endtime="20201115 23:01:23.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.577" level="INFO">${ACCURACY} = {'source_diff': [0.0001269580000000034, 0.00012636099999999845, 0.00012613899999999734, 0.00012612499999999777, 0.00012780600000000114, 0.00012676400000000143, 0.0001265000000000016, 0.000126209000000...</msg>
<status status="PASS" starttime="20201115 23:01:23.549" endtime="20201115 23:01:23.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.587" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.585" endtime="20201115 23:01:23.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.593" level="INFO">VALUE: [0.0001269580000000034, 0.00012636099999999845, 0.00012613899999999734, 0.00012612499999999777, 0.00012780600000000114, 0.00012676400000000143, 0.0001265000000000016, 0.00012620900000000213, 0.00012683399999999928, 0.00012629200000000007, 0.0001266109999999987, 0.0001271109999999992, 0.000126778000000001, 0.00012647200000000247, 0.00012706999999999996, 0.00012695899999999594, 0.0001263199999999992, 0.0001261250000000047, 0.00012681900000000024, 0.00012672200000000272, 0.00012684699999999938, 0.00012615300000000385, 0.0001264450000000028, 0.000126569, 0.00012680499999999373, 0.00012663900000000478, 0.00012651400000000118, 0.00012651400000000118, 0.00012637499999999802, 0.00012668100000000349, 0.00012667999999999707, 0.0001273889999999986, 0.00012726400000000193, 0.00012648600000000204, 0.00012727700000000203, 0.000126778000000001, 0.00012636199999999792, 0.00012637500000000496, 0.00012641700000000367, 0.0001268329999999998, 0.0001268199999999997, 0.00012704200000000082, 0.000126165999999997, 0.0001270130000000022, 0.0001268889999999981, 0.00012708300000000006, 0.0001269859999999956, 0.00012792999999999832, 0.00012616699999999648, 0.000126569]</msg>
<status status="PASS" starttime="20201115 23:01:23.590" endtime="20201115 23:01:23.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.578" endtime="20201115 23:01:23.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.601" endtime="20201115 23:01:23.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.609" endtime="20201115 23:01:23.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.605" endtime="20201115 23:01:23.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.597" endtime="20201115 23:01:23.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.097" endtime="20201115 23:01:23.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.093" endtime="20201115 23:01:23.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.091" endtime="20201115 23:01:23.636"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.662" endtime="20201115 23:01:23.683"></status>
</kw>
<msg timestamp="20201115 23:01:23.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.659" endtime="20201115 23:01:23.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.686" endtime="20201115 23:01:23.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.692" endtime="20201115 23:01:23.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.652" endtime="20201115 23:01:23.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.646" endtime="20201115 23:01:23.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.715" endtime="20201115 23:01:24.045"></status>
</kw>
<msg timestamp="20201115 23:01:24.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044857708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044985694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.712" endtime="20201115 23:01:24.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044857708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044985694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.054" endtime="20201115 23:01:24.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.073" endtime="20201115 23:01:24.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.705" endtime="20201115 23:01:24.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.700" endtime="20201115 23:01:24.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.090" level="INFO">${RESULT} = [{'time': 0.044985694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001279859999999966, 'source_diff': 0.0001279859999999966}, {'time': 0.045118097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.081" endtime="20201115 23:01:24.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.119" level="INFO">${ACCURACY} = {'source_diff': [0.0001279859999999966, 0.000127569000000001, 0.00012736099999999945, 0.00012865199999999993, 0.0001280000000000031, 0.00012801400000000268, 0.00012749999999999567, 0.00012744499999999...</msg>
<status status="PASS" starttime="20201115 23:01:24.092" endtime="20201115 23:01:24.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.130" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.128" endtime="20201115 23:01:24.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.135" level="INFO">VALUE: [0.0001279859999999966, 0.000127569000000001, 0.00012736099999999945, 0.00012865199999999993, 0.0001280000000000031, 0.00012801400000000268, 0.00012749999999999567, 0.00012744499999999687, 0.00012772200000000372, 0.0001286110000000007, 0.00012722200000000322, 0.0001275979999999996, 0.00012758300000000056, 0.0001274439999999974, 0.0001284859999999971, 0.00012754200000000132, 0.00012769400000000458, 0.00012804199999999488, 0.00012802800000000225, 0.0001272230000000027, 0.00012801400000000268, 0.00012797300000000345, 0.00012754200000000132, 0.00012752800000000175, 0.00012724999999999542, 0.00012784700000000038, 0.00012718099999999705, 0.00012734799999999935, 0.00012875000000000386, 0.0001271109999999992, 0.000128778000000003, 0.000127778000000002, 0.00012730500000000117, 0.0001280560000000014, 0.00012862500000000027, 0.00012761199999999917, 0.00012808300000000106, 0.0001275000000000026, 0.00012723599999999585, 0.00012718100000000399, 0.00012802800000000225, 0.00012722199999999628, 0.0001271529999999979, 0.00012715199999999843, 0.00012845799999999796, 0.00012770899999999669, 0.000127165999999998, 0.00012725000000000236, 0.00012752699999999534, 0.00012715300000000485]</msg>
<status status="PASS" starttime="20201115 23:01:24.132" endtime="20201115 23:01:24.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.121" endtime="20201115 23:01:24.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.144" endtime="20201115 23:01:24.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.152" endtime="20201115 23:01:24.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.148" endtime="20201115 23:01:24.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.140" endtime="20201115 23:01:24.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.642" endtime="20201115 23:01:24.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.639" endtime="20201115 23:01:24.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.637" endtime="20201115 23:01:24.178"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.184" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.205" endtime="20201115 23:01:24.225"></status>
</kw>
<msg timestamp="20201115 23:01:24.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.202" endtime="20201115 23:01:24.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.229" endtime="20201115 23:01:24.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.235" endtime="20201115 23:01:24.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.195" endtime="20201115 23:01:24.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.189" endtime="20201115 23:01:24.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.260" endtime="20201115 23:01:24.590"></status>
</kw>
<msg timestamp="20201115 23:01:24.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044854472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:24.255" endtime="20201115 23:01:24.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044854472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:24.600" endtime="20201115 23:01:24.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.618" endtime="20201115 23:01:24.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.248" endtime="20201115 23:01:24.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.243" endtime="20201115 23:01:24.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.636" level="INFO">${RESULT} = [{'time': 0.044854472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012847199999999753, 'source_diff': 0.00012847199999999753}, {'time': 0.044989861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:24.628" endtime="20201115 23:01:24.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.666" level="INFO">${ACCURACY} = {'source_diff': [0.00012847199999999753, 0.0001291529999999999, 0.00012868100000000549, 0.00012815300000000585, 0.0001283889999999996, 0.00012848600000000404, 0.0001289309999999988, 0.0001287920000000...</msg>
<status status="PASS" starttime="20201115 23:01:24.638" endtime="20201115 23:01:24.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.677" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.674" endtime="20201115 23:01:24.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.682" level="INFO">VALUE: [0.00012847199999999753, 0.0001291529999999999, 0.00012868100000000549, 0.00012815300000000585, 0.0001283889999999996, 0.00012848600000000404, 0.0001289309999999988, 0.00012879200000000257, 0.00012891699999999923, 0.00012855500000000242, 0.00012848600000000404, 0.00012830600000000164, 0.00012862500000000027, 0.00012817999999999857, 0.0001286659999999995, 0.0001286529999999994, 0.00012842999999999882, 0.00012852700000000328, 0.00012902800000000325, 0.00012924999999999742, 0.00012873599999999735, 0.00012854199999999538, 0.00012886100000000095, 0.00012887500000000052, 0.00012901399999999674, 0.00012884700000000138, 0.0001285969999999942, 0.00012816699999999848, 0.00012811199999999967, 0.00012847200000000447, 0.0001282910000000026, 0.00012993000000000032, 0.00012863800000000036, 0.00012906899999999555, 0.00012830500000000217, 0.00012836100000000045, 0.00012834700000000088, 0.00012863899999999984, 0.00012852800000000275, 0.00012884700000000138, 0.00012854200000000232, 0.00012858300000000156, 0.00012841700000000567, 0.00012857000000000146, 0.00012854100000000285, 0.0001289859999999976, 0.00012908400000000153, 0.00012863800000000036, 0.00012980600000000314, 0.00012908299999999512]</msg>
<status status="PASS" starttime="20201115 23:01:24.679" endtime="20201115 23:01:24.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.668" endtime="20201115 23:01:24.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.690" endtime="20201115 23:01:24.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.699" endtime="20201115 23:01:24.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.694" endtime="20201115 23:01:24.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.686" endtime="20201115 23:01:24.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.185" endtime="20201115 23:01:24.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.181" endtime="20201115 23:01:24.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.179" endtime="20201115 23:01:24.725"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.730" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.751" endtime="20201115 23:01:24.772"></status>
</kw>
<msg timestamp="20201115 23:01:24.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.748" endtime="20201115 23:01:24.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.775" endtime="20201115 23:01:24.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.782" endtime="20201115 23:01:24.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.741" endtime="20201115 23:01:24.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.735" endtime="20201115 23:01:24.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.805" endtime="20201115 23:01:25.137"></status>
</kw>
<msg timestamp="20201115 23:01:25.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044821764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.802" endtime="20201115 23:01:25.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044821764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.146" endtime="20201115 23:01:25.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.164" endtime="20201115 23:01:25.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.795" endtime="20201115 23:01:25.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.790" endtime="20201115 23:01:25.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.181" level="INFO">${RESULT} = [{'time': 0.044821764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013016700000000048, 'source_diff': 0.00013016700000000048}, {'time': 0.044961125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.173" endtime="20201115 23:01:25.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.213" level="INFO">${ACCURACY} = {'source_diff': [0.00013016700000000048, 0.0001303059999999967, 0.00012911099999999426, 0.00012961099999999476, 0.0001295279999999968, 0.00012941699999999973, 0.00012983299999999587, 0.000130541999999...</msg>
<status status="PASS" starttime="20201115 23:01:25.183" endtime="20201115 23:01:25.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.224" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.222" endtime="20201115 23:01:25.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.229" level="INFO">VALUE: [0.00013016700000000048, 0.0001303059999999967, 0.00012911099999999426, 0.00012961099999999476, 0.0001295279999999968, 0.00012941699999999973, 0.00012983299999999587, 0.00013054199999999738, 0.00012973699999999783, 0.00012995799999999946, 0.00012979099999999716, 0.00012997199999999903, 0.0001297639999999975, 0.0001297079999999992, 0.00012972200000000572, 0.0001309310000000008, 0.00012955500000000342, 0.0001295560000000029, 0.00012963900000000084, 0.00012975000000000486, 0.00012991700000000023, 0.00012984700000000238, 0.00012916699999999948, 0.00012933400000000178, 0.00012963900000000084, 0.00012979200000000357, 0.00012990300000000066, 0.00012983399999999534, 0.00012942999999999982, 0.0001297769999999976, 0.00012929200000000307, 0.0001293330000000023, 0.00012940300000000016, 0.000129569000000003, 0.00013005599999999645, 0.0001291529999999999, 0.00012968099999999955, 0.00012962500000000127, 0.00012986200000000142, 0.0001301530000000009, 0.00013004199999999688, 0.00013005499999999698, 0.00012934800000000135, 0.00013045799999999996, 0.00012963900000000084, 0.00012959700000000213, 0.00012930500000000317, 0.00012999999999999817, 0.00013005500000000392, 0.00013062499999999533]</msg>
<status status="PASS" starttime="20201115 23:01:25.227" endtime="20201115 23:01:25.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.215" endtime="20201115 23:01:25.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.238" endtime="20201115 23:01:25.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.246" endtime="20201115 23:01:25.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.242" endtime="20201115 23:01:25.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.234" endtime="20201115 23:01:25.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.731" endtime="20201115 23:01:25.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.727" endtime="20201115 23:01:25.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.726" endtime="20201115 23:01:25.273"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.301" endtime="20201115 23:01:25.322"></status>
</kw>
<msg timestamp="20201115 23:01:25.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.297" endtime="20201115 23:01:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.325" endtime="20201115 23:01:25.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.331" endtime="20201115 23:01:25.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.290" endtime="20201115 23:01:25.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.283" endtime="20201115 23:01:25.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.355" endtime="20201115 23:01:25.686"></status>
</kw>
<msg timestamp="20201115 23:01:25.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046870153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047000306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.351" endtime="20201115 23:01:25.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046870153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047000306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.695" endtime="20201115 23:01:25.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.713" endtime="20201115 23:01:25.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.344" endtime="20201115 23:01:25.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.339" endtime="20201115 23:01:25.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.732" level="INFO">${RESULT} = [{'time': 0.047000306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001301530000000009, 'source_diff': 0.0001301530000000009}, {'time': 0.047136708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.723" endtime="20201115 23:01:25.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.761" level="INFO">${ACCURACY} = {'source_diff': [0.0001301530000000009, 0.00013052699999999834, 0.00013151399999999924, 0.0001303330000000033, 0.00013029199999999713, 0.0001304440000000004, 0.00013040300000000116, 0.0001307359999999...</msg>
<status status="PASS" starttime="20201115 23:01:25.734" endtime="20201115 23:01:25.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.772" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.770" endtime="20201115 23:01:25.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.777" level="INFO">VALUE: [0.0001301530000000009, 0.00013052699999999834, 0.00013151399999999924, 0.0001303330000000033, 0.00013029199999999713, 0.0001304440000000004, 0.00013040300000000116, 0.00013073599999999935, 0.0001319860000000006, 0.0001307089999999997, 0.00013076300000000596, 0.00013073599999999935, 0.00013073599999999935, 0.00013055499999999748, 0.00013069500000000012, 0.00013043000000000082, 0.00013195800000000146, 0.0001307639999999985, 0.00013174999999999992, 0.00013074999999999892, 0.00013034699999999594, 0.00013068000000000107, 0.0001310409999999984, 0.0001316110000000037, 0.00013062500000000227, 0.00013062500000000227, 0.00013049999999999867, 0.00013049999999999867, 0.0001307080000000002, 0.00013016699999999354, 0.00013097300000000645, 0.00013068000000000107, 0.00013076400000000543, 0.00013061099999999576, 0.0001303330000000033, 0.00013031900000000374, 0.0001301110000000022, 0.00013073599999999935, 0.00013058300000000356, 0.0001310000000000061, 0.000130860999999996, 0.00013105599999999745, 0.0001303200000000032, 0.00013101399999999874, 0.00013057000000000346, 0.00013104199999999788, 0.00013043000000000082, 0.0001303890000000016, 0.00013069500000000012, 0.00013048600000000604]</msg>
<status status="PASS" starttime="20201115 23:01:25.774" endtime="20201115 23:01:25.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.763" endtime="20201115 23:01:25.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.786" endtime="20201115 23:01:25.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.795" endtime="20201115 23:01:25.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.790" endtime="20201115 23:01:25.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.781" endtime="20201115 23:01:25.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.279" endtime="20201115 23:01:25.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.275" endtime="20201115 23:01:25.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.273" endtime="20201115 23:01:25.821"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.847" endtime="20201115 23:01:25.868"></status>
</kw>
<msg timestamp="20201115 23:01:25.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.844" endtime="20201115 23:01:25.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.871" endtime="20201115 23:01:25.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.877" endtime="20201115 23:01:25.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.837" endtime="20201115 23:01:25.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.831" endtime="20201115 23:01:25.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.900" endtime="20201115 23:01:26.232"></status>
</kw>
<msg timestamp="20201115 23:01:26.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044561444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.897" endtime="20201115 23:01:26.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044561444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.241" endtime="20201115 23:01:26.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.259" endtime="20201115 23:01:26.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.890" endtime="20201115 23:01:26.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.885" endtime="20201115 23:01:26.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.276" level="INFO">${RESULT} = [{'time': 0.044692764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001313200000000042, 'source_diff': 0.0001313200000000042}, {'time': 0.044829167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.268" endtime="20201115 23:01:26.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.306" level="INFO">${ACCURACY} = {'source_diff': [0.0001313200000000042, 0.00013168100000000155, 0.0001320279999999993, 0.00013204199999999888, 0.00013168000000000207, 0.00013123699999999933, 0.00013122200000000028, 0.000131681000000...</msg>
<status status="PASS" starttime="20201115 23:01:26.278" endtime="20201115 23:01:26.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.317" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.314" endtime="20201115 23:01:26.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.322" level="INFO">VALUE: [0.0001313200000000042, 0.00013168100000000155, 0.0001320279999999993, 0.00013204199999999888, 0.00013168000000000207, 0.00013123699999999933, 0.00013122200000000028, 0.00013168100000000155, 0.0001315969999999972, 0.0001317090000000007, 0.0001320560000000054, 0.00013134700000000388, 0.0001324860000000011, 0.00013123599999999985, 0.0001317639999999995, 0.00013195800000000146, 0.00013197200000000103, 0.00013124999999999942, 0.00013266700000000298, 0.00013145800000000096, 0.00013200000000000017, 0.00013151399999999924, 0.00013131999999999727, 0.0001313609999999965, 0.00013129199999999813, 0.00013131999999999727, 0.0001313189999999978, 0.00013201399999999974, 0.00013140299999999522, 0.00013145900000000044, 0.00013240299999999622, 0.00013161099999999676, 0.00013151399999999924, 0.00013187500000000352, 0.0001315279999999988, 0.00013105500000000492, 0.0001320409999999994, 0.00013206999999999802, 0.00013206899999999855, 0.00013174999999999992, 0.00013124999999999942, 0.0001317080000000012, 0.00013112500000000277, 0.00013144500000000087, 0.00013137499999999608, 0.00013112499999999583, 0.00013177799999999906, 0.00013149999999999967, 0.00013245799999999502, 0.0001315409999999989]</msg>
<status status="PASS" starttime="20201115 23:01:26.319" endtime="20201115 23:01:26.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.307" endtime="20201115 23:01:26.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.332" endtime="20201115 23:01:26.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.341" endtime="20201115 23:01:26.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.336" endtime="20201115 23:01:26.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.327" endtime="20201115 23:01:26.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.827" endtime="20201115 23:01:26.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.824" endtime="20201115 23:01:26.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.822" endtime="20201115 23:01:26.367"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.373" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.394" endtime="20201115 23:01:26.415"></status>
</kw>
<msg timestamp="20201115 23:01:26.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.391" endtime="20201115 23:01:26.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.418" endtime="20201115 23:01:26.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.424" endtime="20201115 23:01:26.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.384" endtime="20201115 23:01:26.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.378" endtime="20201115 23:01:26.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.447" endtime="20201115 23:01:26.778"></status>
</kw>
<msg timestamp="20201115 23:01:26.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045050194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045182625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.444" endtime="20201115 23:01:26.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045050194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045182625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.787" endtime="20201115 23:01:26.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.805" endtime="20201115 23:01:26.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.437" endtime="20201115 23:01:26.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.432" endtime="20201115 23:01:26.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.824" level="INFO">${RESULT} = [{'time': 0.045182625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013243099999999536, 'source_diff': 0.00013243099999999536}, {'time': 0.045321069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.815" endtime="20201115 23:01:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.853" level="INFO">${ACCURACY} = {'source_diff': [0.00013243099999999536, 0.00013300000000000117, 0.00013395900000000294, 0.0001323609999999975, 0.00013236100000000445, 0.00013236100000000445, 0.00013299999999999423, 0.00013233299999...</msg>
<status status="PASS" starttime="20201115 23:01:26.826" endtime="20201115 23:01:26.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.864" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.862" endtime="20201115 23:01:26.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.870" level="INFO">VALUE: [0.00013243099999999536, 0.00013300000000000117, 0.00013395900000000294, 0.0001323609999999975, 0.00013236100000000445, 0.00013236100000000445, 0.00013299999999999423, 0.00013233299999999837, 0.00013219500000000162, 0.0001333189999999998, 0.00013231900000000574, 0.0001329860000000016, 0.00013300000000000117, 0.00013256899999999905, 0.00013306999999999902, 0.00013240299999999622, 0.00013308400000000553, 0.000133264000000001, 0.0001326389999999969, 0.00013311099999999826, 0.00013297200000000203, 0.0001327770000000006, 0.0001326530000000034, 0.00013255499999999948, 0.00013256999999999852, 0.00013261099999999776, 0.00013312499999999783, 0.0001328890000000041, 0.00013305499999999998, 0.00013227799999999956, 0.00013251400000000024, 0.0001328189999999993, 0.0001324169999999958, 0.00013345900000000244, 0.00013211099999999726, 0.00013279199999999963, 0.0001336389999999979, 0.00013255500000000642, 0.0001324169999999958, 0.00013290300000000366, 0.00013284699999999844, 0.00013238899999999665, 0.00013304099999999347, 0.0001334440000000034, 0.00013223600000000085, 0.0001330280000000003, 0.000132264, 0.0001321939999999952, 0.00013254199999999938, 0.0001324589999999945]</msg>
<status status="PASS" starttime="20201115 23:01:26.866" endtime="20201115 23:01:26.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.855" endtime="20201115 23:01:26.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.879" endtime="20201115 23:01:26.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.887" endtime="20201115 23:01:26.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.882" endtime="20201115 23:01:26.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.874" endtime="20201115 23:01:26.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.374" endtime="20201115 23:01:26.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.370" endtime="20201115 23:01:26.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.368" endtime="20201115 23:01:26.913"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.918" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.939" endtime="20201115 23:01:26.960"></status>
</kw>
<msg timestamp="20201115 23:01:26.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.936" endtime="20201115 23:01:26.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.963" endtime="20201115 23:01:26.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.970" endtime="20201115 23:01:26.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.929" endtime="20201115 23:01:26.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.923" endtime="20201115 23:01:26.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.992" endtime="20201115 23:01:27.326"></status>
</kw>
<msg timestamp="20201115 23:01:27.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044501583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.989" endtime="20201115 23:01:27.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044501583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.335" endtime="20201115 23:01:27.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.354" endtime="20201115 23:01:27.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.982" endtime="20201115 23:01:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.978" endtime="20201115 23:01:27.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.371" level="INFO">${RESULT} = [{'time': 0.044635528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013394500000000337, 'source_diff': 0.00013394500000000337}, {'time': 0.044775944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.362" endtime="20201115 23:01:27.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.409" level="INFO">${ACCURACY} = {'source_diff': [0.00013394500000000337, 0.00013351299999999483, 0.00013397200000000303, 0.00013311099999999826, 0.00013384699999999944, 0.00013342999999999688, 0.00013472200000000378, 0.0001332080000...</msg>
<status status="PASS" starttime="20201115 23:01:27.379" endtime="20201115 23:01:27.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.420" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.418" endtime="20201115 23:01:27.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.426" level="INFO">VALUE: [0.00013394500000000337, 0.00013351299999999483, 0.00013397200000000303, 0.00013311099999999826, 0.00013384699999999944, 0.00013342999999999688, 0.00013472200000000378, 0.0001332080000000027, 0.00013477800000000206, 0.00013373600000000235, 0.00013387499999999858, 0.00013311099999999826, 0.0001336389999999979, 0.00013348599999999516, 0.0001340969999999997, 0.0001333890000000046, 0.00013377800000000106, 0.000133264000000001, 0.0001344719999999966, 0.0001335969999999992, 0.00013383299999999987, 0.000133264000000001, 0.00013390299999999772, 0.000134651999999999, 0.00013325000000000142, 0.00013397200000000303, 0.000134264000000002, 0.0001340410000000014, 0.00013358299999999962, 0.00013366599999999756, 0.0001335969999999992, 0.0001331389999999974, 0.00013345800000000296, 0.00013343099999999636, 0.0001344860000000031, 0.0001335139999999943, 0.00013338899999999765, 0.00013325000000000142, 0.00013344500000000287, 0.00013408300000000012, 0.00013355599999999995, 0.00013416599999999806, 0.00013373600000000235, 0.0001342919999999942, 0.00013340299999999722, 0.00013319500000000262, 0.00013404200000000088, 0.0001335839999999991, 0.00013374999999999498, 0.0001334719999999956]</msg>
<status status="PASS" starttime="20201115 23:01:27.423" endtime="20201115 23:01:27.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.411" endtime="20201115 23:01:27.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.435" endtime="20201115 23:01:27.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.443" endtime="20201115 23:01:27.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.438" endtime="20201115 23:01:27.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.430" endtime="20201115 23:01:27.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.920" endtime="20201115 23:01:27.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.916" endtime="20201115 23:01:27.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.914" endtime="20201115 23:01:27.469"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.474" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.495" endtime="20201115 23:01:27.516"></status>
</kw>
<msg timestamp="20201115 23:01:27.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.492" endtime="20201115 23:01:27.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.519" endtime="20201115 23:01:27.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.526" endtime="20201115 23:01:27.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.485" endtime="20201115 23:01:27.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.479" endtime="20201115 23:01:27.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.549" endtime="20201115 23:01:27.880"></status>
</kw>
<msg timestamp="20201115 23:01:27.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044658042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044792833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.545" endtime="20201115 23:01:27.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044658042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044792833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.890" endtime="20201115 23:01:27.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.908" endtime="20201115 23:01:27.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.538" endtime="20201115 23:01:27.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.534" endtime="20201115 23:01:27.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.927" level="INFO">${RESULT} = [{'time': 0.044792833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013479099999999522, 'source_diff': 0.00013479099999999522}, {'time': 0.044935236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:27.918" endtime="20201115 23:01:27.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.956" level="INFO">${ACCURACY} = {'source_diff': [0.00013479099999999522, 0.00013506900000000155, 0.00013490299999999872, 0.00013491600000000575, 0.00013505500000000198, 0.0001346389999999989, 0.00013457000000000052, 0.00013472299999...</msg>
<status status="PASS" starttime="20201115 23:01:27.929" endtime="20201115 23:01:27.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.967" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.965" endtime="20201115 23:01:27.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.972" level="INFO">VALUE: [0.00013479099999999522, 0.00013506900000000155, 0.00013490299999999872, 0.00013491600000000575, 0.00013505500000000198, 0.0001346389999999989, 0.00013457000000000052, 0.00013472299999999632, 0.00013419400000000414, 0.00013462499999999933, 0.00013511100000000026, 0.00013598700000000408, 0.00013438899999999865, 0.0001348190000000013, 0.0001354719999999976, 0.0001350280000000023, 0.00013512499999999983, 0.00013505600000000145, 0.00013480500000000173, 0.00013508300000000112, 0.00013465299999999847, 0.0001348469999999935, 0.00013508300000000112, 0.000134861, 0.00013505600000000145, 0.00013469499999999718, 0.00013465299999999847, 0.00013593099999999886, 0.00013425000000000242, 0.00013462499999999933, 0.00013420899999999625, 0.0001340969999999997, 0.00013491599999999881, 0.00013427800000000156, 0.00013480500000000173, 0.000134958999999997, 0.0001350280000000023, 0.00013481899999999436, 0.00013472199999999684, 0.00013455500000000148, 0.00013591599999999981, 0.00013501400000000274, 0.0001345970000000002, 0.00013493099999999786, 0.00013457000000000052, 0.000134861, 0.00013502799999999537, 0.00013452799999999487, 0.00013483300000000087, 0.00013415299999999797]</msg>
<status status="PASS" starttime="20201115 23:01:27.969" endtime="20201115 23:01:27.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.958" endtime="20201115 23:01:27.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.981" endtime="20201115 23:01:27.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.989" endtime="20201115 23:01:28.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.985" endtime="20201115 23:01:28.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.976" endtime="20201115 23:01:28.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.476" endtime="20201115 23:01:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.472" endtime="20201115 23:01:28.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.470" endtime="20201115 23:01:28.015"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.021" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.042" endtime="20201115 23:01:28.063"></status>
</kw>
<msg timestamp="20201115 23:01:28.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.039" endtime="20201115 23:01:28.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.066" endtime="20201115 23:01:28.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.072" endtime="20201115 23:01:28.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.032" endtime="20201115 23:01:28.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.026" endtime="20201115 23:01:28.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.096" endtime="20201115 23:01:28.428"></status>
</kw>
<msg timestamp="20201115 23:01:28.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045020306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.092" endtime="20201115 23:01:28.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044884569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045020306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.437" endtime="20201115 23:01:28.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.456" endtime="20201115 23:01:28.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.085" endtime="20201115 23:01:28.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.080" endtime="20201115 23:01:28.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.473" level="INFO">${RESULT} = [{'time': 0.045020306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013573700000000383, 'source_diff': 0.00013573700000000383}, {'time': 0.045166639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:28.464" endtime="20201115 23:01:28.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.502" level="INFO">${ACCURACY} = {'source_diff': [0.00013573700000000383, 0.00013573600000000435, 0.00013697299999999857, 0.00013550000000000367, 0.00013588900000000015, 0.00013533300000000137, 0.00013576399999999655, 0.0001353200000...</msg>
<status status="PASS" starttime="20201115 23:01:28.475" endtime="20201115 23:01:28.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.513" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.511" endtime="20201115 23:01:28.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.518" level="INFO">VALUE: [0.00013573700000000383, 0.00013573600000000435, 0.00013697299999999857, 0.00013550000000000367, 0.00013588900000000015, 0.00013533300000000137, 0.00013576399999999655, 0.00013532000000000127, 0.000135652, 0.00013592999999999938, 0.00013534700000000094, 0.0001353610000000005, 0.00013543099999999836, 0.00013611200000000073, 0.00013543099999999836, 0.00013538899999999965, 0.0001358339999999944, 0.00013617999999999963, 0.00013609699999999475, 0.00013584700000000144, 0.0001360970000000017, 0.0001354169999999988, 0.00013600000000000417, 0.0001351389999999994, 0.0001356389999999999, 0.00013554200000000238, 0.00013574999999999698, 0.00013516599999999906, 0.0001353060000000017, 0.00013548599999999716, 0.00013682000000000277, 0.00013604099999999647, 0.00013526399999999605, 0.00013523599999999691, 0.00013573600000000435, 0.00013605500000000298, 0.00013598599999999766, 0.0001366809999999996, 0.00013565299999999947, 0.00013602700000000384, 0.0001357640000000035, 0.00013554199999999544, 0.00013574999999999698, 0.0001360410000000034, 0.0001353610000000005, 0.00013587500000000058, 0.00013598599999999766, 0.00013604199999999594, 0.00013566599999999956, 0.00013590299999999972]</msg>
<status status="PASS" starttime="20201115 23:01:28.515" endtime="20201115 23:01:28.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.504" endtime="20201115 23:01:28.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.527" endtime="20201115 23:01:28.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.535" endtime="20201115 23:01:28.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.531" endtime="20201115 23:01:28.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.523" endtime="20201115 23:01:28.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.022" endtime="20201115 23:01:28.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.018" endtime="20201115 23:01:28.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.016" endtime="20201115 23:01:28.562"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.588" endtime="20201115 23:01:28.609"></status>
</kw>
<msg timestamp="20201115 23:01:28.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.585" endtime="20201115 23:01:28.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.612" endtime="20201115 23:01:28.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.619" endtime="20201115 23:01:28.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.578" endtime="20201115 23:01:28.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.572" endtime="20201115 23:01:28.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.642" endtime="20201115 23:01:28.973"></status>
</kw>
<msg timestamp="20201115 23:01:28.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044690375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044826667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.639" endtime="20201115 23:01:28.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044690375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044826667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.983" endtime="20201115 23:01:28.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.001" endtime="20201115 23:01:29.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.632" endtime="20201115 23:01:29.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.627" endtime="20201115 23:01:29.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.019" level="INFO">${RESULT} = [{'time': 0.044826667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013629200000000313, 'source_diff': 0.00013629200000000313}, {'time': 0.044972028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:29.011" endtime="20201115 23:01:29.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.049" level="INFO">${ACCURACY} = {'source_diff': [0.00013629200000000313, 0.00013658399999999515, 0.0001365970000000022, 0.0001370689999999966, 0.00013694399999999995, 0.00013699999999999823, 0.0001365970000000022, 0.0001377639999999...</msg>
<status status="PASS" starttime="20201115 23:01:29.021" endtime="20201115 23:01:29.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.060" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.058" endtime="20201115 23:01:29.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.065" level="INFO">VALUE: [0.00013629200000000313, 0.00013658399999999515, 0.0001365970000000022, 0.0001370689999999966, 0.00013694399999999995, 0.00013699999999999823, 0.0001365970000000022, 0.00013776399999999855, 0.000136958999999999, 0.00013670799999999927, 0.00013666700000000004, 0.00013659699999999525, 0.0001364589999999985, 0.00013682000000000277, 0.00013626399999999705, 0.00013620899999999825, 0.00013670799999999927, 0.00013761100000000276, 0.00013691600000000081, 0.00013684700000000244, 0.0001374719999999996, 0.00013622199999999834, 0.00013649999999999773, 0.0001364719999999986, 0.0001370280000000043, 0.00013677800000000406, 0.00013679200000000363, 0.00013655599999999601, 0.00013676299999999808, 0.00013648599999999816, 0.0001363060000000027, 0.00013651400000000424, 0.0001371669999999936, 0.00013782000000000377, 0.00013658300000000262, 0.00013652799999999687, 0.00013712500000000183, 0.00013690300000000072, 0.00013662500000000133, 0.00013648599999999816, 0.00013662500000000133, 0.00013622199999999834, 0.00013693099999999986, 0.0001368190000000033, 0.0001366939999999997, 0.0001370689999999966, 0.00013663899999999396, 0.0001364169999999998, 0.0001369719999999991, 0.00013618000000000657]</msg>
<status status="PASS" starttime="20201115 23:01:29.062" endtime="20201115 23:01:29.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.051" endtime="20201115 23:01:29.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.074" endtime="20201115 23:01:29.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.082" endtime="20201115 23:01:29.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.077" endtime="20201115 23:01:29.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.069" endtime="20201115 23:01:29.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.568" endtime="20201115 23:01:29.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.564" endtime="20201115 23:01:29.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.562" endtime="20201115 23:01:29.108"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.113" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.135" endtime="20201115 23:01:29.156"></status>
</kw>
<msg timestamp="20201115 23:01:29.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.132" endtime="20201115 23:01:29.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.160" endtime="20201115 23:01:29.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.166" endtime="20201115 23:01:29.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.125" endtime="20201115 23:01:29.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.119" endtime="20201115 23:01:29.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.189" endtime="20201115 23:01:29.523"></status>
</kw>
<msg timestamp="20201115 23:01:29.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045405611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045542847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.186" endtime="20201115 23:01:29.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045405611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045542847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.532" endtime="20201115 23:01:29.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.550" endtime="20201115 23:01:29.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.178" endtime="20201115 23:01:29.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.174" endtime="20201115 23:01:29.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.567" level="INFO">${RESULT} = [{'time': 0.045542847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013723599999999891, 'source_diff': 0.00013723599999999891}, {'time': 0.045690264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:29.559" endtime="20201115 23:01:29.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.599" level="INFO">${ACCURACY} = {'source_diff': [0.00013723599999999891, 0.0001380970000000037, 0.00013759699999999625, 0.00013737499999999514, 0.00013745800000000002, 0.00013748599999999916, 0.00013751400000000524, 0.00013799999999...</msg>
<status status="PASS" starttime="20201115 23:01:29.569" endtime="20201115 23:01:29.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.610" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.608" endtime="20201115 23:01:29.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.616" level="INFO">VALUE: [0.00013723599999999891, 0.0001380970000000037, 0.00013759699999999625, 0.00013737499999999514, 0.00013745800000000002, 0.00013748599999999916, 0.00013751400000000524, 0.00013799999999999923, 0.00013738900000000165, 0.0001374719999999996, 0.00013798599999999966, 0.00013747299999999907, 0.0001375970000000032, 0.0001373889999999947, 0.00013809799999999622, 0.00013777699999999865, 0.0001375840000000031, 0.00013743100000000036, 0.00013720899999999925, 0.00013890300000000272, 0.00013738900000000165, 0.00013809799999999622, 0.00013733300000000337, 0.00013726399999999805, 0.00013766599999999463, 0.000137346999999996, 0.00013788900000000215, 0.00013748599999999916, 0.00013749999999999873, 0.0001375139999999983, 0.00013786099999999607, 0.00013758299999999668, 0.00013727799999999762, 0.00013770800000000027, 0.00013844500000000093, 0.00013729099999999772, 0.00013806900000000455, 0.00013755599999999701, 0.00013787500000000258, 0.00013737500000000208, 0.0001389720000000011, 0.00013756900000000405, 0.00013715300000000097, 0.00013763899999999496, 0.00013772199999999984, 0.0001379170000000013, 0.00013752799999999787, 0.00013733299999999643, 0.00013766700000000104, 0.00013829099999999872]</msg>
<status status="PASS" starttime="20201115 23:01:29.613" endtime="20201115 23:01:29.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.601" endtime="20201115 23:01:29.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.624" endtime="20201115 23:01:29.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.633" endtime="20201115 23:01:29.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.628" endtime="20201115 23:01:29.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.620" endtime="20201115 23:01:29.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.115" endtime="20201115 23:01:29.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.111" endtime="20201115 23:01:29.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.109" endtime="20201115 23:01:29.660"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.665" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.686" endtime="20201115 23:01:29.707"></status>
</kw>
<msg timestamp="20201115 23:01:29.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.683" endtime="20201115 23:01:29.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.710" endtime="20201115 23:01:29.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.716" endtime="20201115 23:01:29.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.676" endtime="20201115 23:01:29.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.670" endtime="20201115 23:01:29.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.739" endtime="20201115 23:01:30.070"></status>
</kw>
<msg timestamp="20201115 23:01:30.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044721736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.736" endtime="20201115 23:01:30.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044582694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044721736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.079" endtime="20201115 23:01:30.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.097" endtime="20201115 23:01:30.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.729" endtime="20201115 23:01:30.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.724" endtime="20201115 23:01:30.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.116" level="INFO">${RESULT} = [{'time': 0.044721736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013904199999999894, 'source_diff': 0.00013904199999999894}, {'time': 0.044871167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.107" endtime="20201115 23:01:30.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.145" level="INFO">${ACCURACY} = {'source_diff': [0.00013904199999999894, 0.00013907000000000502, 0.0001396390000000039, 0.000138346999999997, 0.0001390139999999998, 0.0001394720000000016, 0.00013837500000000308, 0.000138194000000001...</msg>
<status status="PASS" starttime="20201115 23:01:30.118" endtime="20201115 23:01:30.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.156" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.154" endtime="20201115 23:01:30.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.161" level="INFO">VALUE: [0.00013904199999999894, 0.00013907000000000502, 0.0001396390000000039, 0.000138346999999997, 0.0001390139999999998, 0.0001394720000000016, 0.00013837500000000308, 0.0001381940000000012, 0.00013816700000000154, 0.0001386940000000017, 0.00013831999999999733, 0.00013884700000000444, 0.00013865300000000247, 0.00013912500000000383, 0.00013858299999999768, 0.00013822200000000034, 0.00013818000000000163, 0.0001390840000000046, 0.0001388469999999975, 0.00013849999999999973, 0.00013808299999999718, 0.00013901300000000033, 0.00013837500000000308, 0.00013848600000000016, 0.00013823599999999991, 0.00013887500000000358, 0.0001386249999999964, 0.0001382919999999982, 0.00013861100000000376, 0.0001394590000000015, 0.00013943000000000288, 0.00013876399999999955, 0.0001383190000000048, 0.00013816700000000154, 0.00013887500000000358, 0.000138346999999997, 0.00013844500000000093, 0.00013908300000000512, 0.00013866600000000256, 0.00013858300000000462, 0.0001393049999999993, 0.0001388469999999975, 0.00013866700000000204, 0.00013883300000000487, 0.00013888900000000315, 0.00013909699999999775, 0.00013887499999999664, 0.00013823599999999991, 0.00013900000000000023, 0.00013858299999999768]</msg>
<status status="PASS" starttime="20201115 23:01:30.158" endtime="20201115 23:01:30.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.147" endtime="20201115 23:01:30.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.170" endtime="20201115 23:01:30.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.179" endtime="20201115 23:01:30.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.174" endtime="20201115 23:01:30.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.166" endtime="20201115 23:01:30.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.666" endtime="20201115 23:01:30.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.662" endtime="20201115 23:01:30.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.661" endtime="20201115 23:01:30.205"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.210" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.231" endtime="20201115 23:01:30.252"></status>
</kw>
<msg timestamp="20201115 23:01:30.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.228" endtime="20201115 23:01:30.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.256" endtime="20201115 23:01:30.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.262" endtime="20201115 23:01:30.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.221" endtime="20201115 23:01:30.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.215" endtime="20201115 23:01:30.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.285" endtime="20201115 23:01:30.618"></status>
</kw>
<msg timestamp="20201115 23:01:30.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044639806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044779667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.282" endtime="20201115 23:01:30.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044639806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044779667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.627" endtime="20201115 23:01:30.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.645" endtime="20201115 23:01:30.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.275" endtime="20201115 23:01:30.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.270" endtime="20201115 23:01:30.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.662" level="INFO">${RESULT} = [{'time': 0.044779667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000139861000000005, 'source_diff': 0.000139861000000005}, {'time': 0.044930069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:30.653" endtime="20201115 23:01:30.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.691" level="INFO">${ACCURACY} = {'source_diff': [0.000139861000000005, 0.00013943000000000288, 0.00013977800000000012, 0.00013983299999999893, 0.00013968099999999567, 0.00013944399999999552, 0.00013995799999999559, 0.000139972000000...</msg>
<status status="PASS" starttime="20201115 23:01:30.664" endtime="20201115 23:01:30.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.702" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.700" endtime="20201115 23:01:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.708" level="INFO">VALUE: [0.000139861000000005, 0.00013943000000000288, 0.00013977800000000012, 0.00013983299999999893, 0.00013968099999999567, 0.00013944399999999552, 0.00013995799999999559, 0.0001399720000000021, 0.00014068099999999667, 0.00014043100000000336, 0.00014063899999999796, 0.00013919499999999474, 0.0001396799999999962, 0.00013943100000000236, 0.00014095799999999659, 0.00014083299999999993, 0.00013944400000000245, 0.00014000000000000123, 0.00013911100000000426, 0.0001392919999999992, 0.00014048599999999523, 0.00013977800000000012, 0.0001398889999999972, 0.00013931899999999886, 0.00014011099999999832, 0.00013916600000000307, 0.00013940299999999628, 0.00013925000000000048, 0.00014027700000000115, 0.00013944399999999552, 0.0001396390000000039, 0.00013925000000000048, 0.0001400140000000008, 0.00014009699999999875, 0.00013994399999999602, 0.00013954199999999944, 0.0001391390000000034, 0.00013959699999999825, 0.0001399720000000021, 0.00014011099999999832, 0.00013940299999999628, 0.00013948600000000116, 0.00013923600000000091, 0.00014031999999999933, 0.00013961099999999782, 0.00013920800000000177, 0.0001399720000000021, 0.00013972200000000184, 0.0001401119999999978, 0.00014104200000000094]</msg>
<status status="PASS" starttime="20201115 23:01:30.705" endtime="20201115 23:01:30.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.693" endtime="20201115 23:01:30.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.717" endtime="20201115 23:01:30.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.725" endtime="20201115 23:01:30.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.721" endtime="20201115 23:01:30.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.712" endtime="20201115 23:01:30.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.211" endtime="20201115 23:01:30.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.208" endtime="20201115 23:01:30.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.206" endtime="20201115 23:01:30.751"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.757" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.778" endtime="20201115 23:01:30.799"></status>
</kw>
<msg timestamp="20201115 23:01:30.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.775" endtime="20201115 23:01:30.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.802" endtime="20201115 23:01:30.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.808" endtime="20201115 23:01:30.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.767" endtime="20201115 23:01:30.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.762" endtime="20201115 23:01:30.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.831" endtime="20201115 23:01:31.163"></status>
</kw>
<msg timestamp="20201115 23:01:31.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044560153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044701014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.828" endtime="20201115 23:01:31.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044560153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044701014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.172" endtime="20201115 23:01:31.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.190" endtime="20201115 23:01:31.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.821" endtime="20201115 23:01:31.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.816" endtime="20201115 23:01:31.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.209" level="INFO">${RESULT} = [{'time': 0.044701014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014086099999999907, 'source_diff': 0.00014086099999999907}, {'time': 0.044848375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:31.200" endtime="20201115 23:01:31.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.239" level="INFO">${ACCURACY} = {'source_diff': [0.00014086099999999907, 0.00014048600000000216, 0.00014041699999999685, 0.00014109699999999975, 0.0001408339999999994, 0.00014040299999999728, 0.0001404590000000025, 0.000141153000000...</msg>
<status status="PASS" starttime="20201115 23:01:31.211" endtime="20201115 23:01:31.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.250" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.248" endtime="20201115 23:01:31.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.255" level="INFO">VALUE: [0.00014086099999999907, 0.00014048600000000216, 0.00014041699999999685, 0.00014109699999999975, 0.0001408339999999994, 0.00014040299999999728, 0.0001404590000000025, 0.00014115300000000497, 0.00014166599999999863, 0.00014073600000000241, 0.00014022300000000182, 0.00014043000000000389, 0.0001406390000000049, 0.00014051300000000183, 0.00014151399999999537, 0.00014026400000000105, 0.0001408889999999982, 0.0001411249999999989, 0.00014095799999999659, 0.0001405690000000001, 0.00014038900000000465, 0.00014013899999999746, 0.0001406940000000037, 0.00014097199999999616, 0.0001404170000000038, 0.00014120799999999684, 0.00014055500000000054, 0.00014024999999999455, 0.00014072200000000284, 0.000140346999999999, 0.0001408469999999995, 0.00014023600000000191, 0.000141347, 0.00014097300000000257, 0.00014070800000000327, 0.00014120800000000377, 0.00014041699999999685, 0.00014077800000000112, 0.00014058399999999915, 0.0001407769999999947, 0.00014037499999999814, 0.00014051300000000183, 0.00014022300000000182, 0.00014044399999999652, 0.0001418889999999992, 0.00014075000000000198, 0.00014026400000000105, 0.00014016599999999713, 0.00014047300000000207, 0.00014059799999999872]</msg>
<status status="PASS" starttime="20201115 23:01:31.252" endtime="20201115 23:01:31.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.241" endtime="20201115 23:01:31.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.264" endtime="20201115 23:01:31.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.272" endtime="20201115 23:01:31.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.267" endtime="20201115 23:01:31.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.259" endtime="20201115 23:01:31.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.758" endtime="20201115 23:01:31.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.754" endtime="20201115 23:01:31.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.752" endtime="20201115 23:01:31.298"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.325" endtime="20201115 23:01:31.346"></status>
</kw>
<msg timestamp="20201115 23:01:31.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.321" endtime="20201115 23:01:31.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.349" endtime="20201115 23:01:31.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.355" endtime="20201115 23:01:31.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.314" endtime="20201115 23:01:31.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.309" endtime="20201115 23:01:31.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.378" endtime="20201115 23:01:31.711"></status>
</kw>
<msg timestamp="20201115 23:01:31.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044830833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.375" endtime="20201115 23:01:31.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044830833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.720" endtime="20201115 23:01:31.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.739" endtime="20201115 23:01:31.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.368" endtime="20201115 23:01:31.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.363" endtime="20201115 23:01:31.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.756" level="INFO">${RESULT} = [{'time': 0.044973042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001422089999999973, 'source_diff': 0.0001422089999999973}, {'time': 0.045125431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.747" endtime="20201115 23:01:31.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.788" level="INFO">${ACCURACY} = {'source_diff': [0.0001422089999999973, 0.00014143099999999742, 0.0001413050000000013, 0.00014268099999999867, 0.00014201300000000333, 0.00014142999999999795, 0.00014202799999999544, 0.000141736000000...</msg>
<status status="PASS" starttime="20201115 23:01:31.758" endtime="20201115 23:01:31.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.799" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.797" endtime="20201115 23:01:31.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.804" level="INFO">VALUE: [0.0001422089999999973, 0.00014143099999999742, 0.0001413050000000013, 0.00014268099999999867, 0.00014201300000000333, 0.00014142999999999795, 0.00014202799999999544, 0.00014173600000000341, 0.00014208300000000118, 0.0001418470000000005, 0.00014266599999999963, 0.00014213899999999946, 0.00014211100000000032, 0.00014195899999999706, 0.00014126399999999512, 0.00014123599999999598, 0.0001421249999999999, 0.00014195799999999759, 0.0001417089999999968, 0.00014116599999999813, 0.00014195899999999706, 0.0001416799999999982, 0.0001419170000000053, 0.00014197199999999716, 0.00014173600000000341, 0.00014177799999999519, 0.00014120800000000377, 0.00014145899999999656, 0.00014281900000000236, 0.00014176399999999562, 0.00014116700000000454, 0.00014126399999999512, 0.00014250000000000373, 0.00014286100000000107, 0.0001418340000000004, 0.00014190299999999878, 0.00014163899999999896, 0.00014120900000000325, 0.0001415140000000023, 0.00014269399999999877, 0.0001418340000000004, 0.00014169399999999777, 0.00014154100000000197, 0.0001418470000000005, 0.00014209700000000075, 0.00014191599999999888, 0.0001418470000000005, 0.00014174999999999605, 0.00014295800000000553, 0.00014186100000000007]</msg>
<status status="PASS" starttime="20201115 23:01:31.801" endtime="20201115 23:01:31.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.790" endtime="20201115 23:01:31.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.813" endtime="20201115 23:01:31.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.821" endtime="20201115 23:01:31.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.817" endtime="20201115 23:01:31.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.808" endtime="20201115 23:01:31.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.305" endtime="20201115 23:01:31.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.301" endtime="20201115 23:01:31.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.299" endtime="20201115 23:01:31.847"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.852" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.874" endtime="20201115 23:01:31.895"></status>
</kw>
<msg timestamp="20201115 23:01:31.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.870" endtime="20201115 23:01:31.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.898" endtime="20201115 23:01:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.904" endtime="20201115 23:01:31.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.863" endtime="20201115 23:01:31.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.858" endtime="20201115 23:01:31.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.928" endtime="20201115 23:01:32.259"></status>
</kw>
<msg timestamp="20201115 23:01:32.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044718611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.924" endtime="20201115 23:01:32.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044718611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.268" endtime="20201115 23:01:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.286" endtime="20201115 23:01:32.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.917" endtime="20201115 23:01:32.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.912" endtime="20201115 23:01:32.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.305" level="INFO">${RESULT} = [{'time': 0.044718611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014290299999999978, 'source_diff': 0.00014290299999999978}, {'time': 0.044869014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.296" endtime="20201115 23:01:32.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.334" level="INFO">${ACCURACY} = {'source_diff': [0.00014290299999999978, 0.00014257000000000158, 0.0001426250000000004, 0.00014390300000000078, 0.0001428470000000015, 0.0001424720000000046, 0.0001428890000000002, 0.00014309700000000...</msg>
<status status="PASS" starttime="20201115 23:01:32.307" endtime="20201115 23:01:32.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.345" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.342" endtime="20201115 23:01:32.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.350" level="INFO">VALUE: [0.00014290299999999978, 0.00014257000000000158, 0.0001426250000000004, 0.00014390300000000078, 0.0001428470000000015, 0.0001424720000000046, 0.0001428890000000002, 0.00014309700000000175, 0.00014251399999999637, 0.0001422219999999974, 0.00014247199999999766, 0.0001427219999999979, 0.00014256999999999465, 0.00014240299999999928, 0.0001422920000000022, 0.00014263899999999996, 0.0001426669999999991, 0.00014297199999999816, 0.00014244399999999852, 0.00014280599999999533, 0.0001434999999999978, 0.00014251300000000383, 0.00014218099999999817, 0.0001426799999999992, 0.00014291699999999935, 0.00014223599999999698, 0.00014258400000000115, 0.00014234800000000047, 0.00014287500000000064, 0.00014284699999999456, 0.000143347000000002, 0.00014287500000000064, 0.00014308300000000218, 0.0001428890000000002, 0.000142832999999995, 0.00014241699999999885, 0.00014273599999999748, 0.00014255599999999508, 0.0001422370000000034, 0.00014226400000000305, 0.0001429020000000003, 0.00014379199999999676, 0.00014308300000000218, 0.00014263899999999996, 0.00014280600000000226, 0.0001428890000000002, 0.00014274999999999705, 0.00014305600000000251, 0.00014266599999999963, 0.00014361100000000182]</msg>
<status status="PASS" starttime="20201115 23:01:32.347" endtime="20201115 23:01:32.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.336" endtime="20201115 23:01:32.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.359" endtime="20201115 23:01:32.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.367" endtime="20201115 23:01:32.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.362" endtime="20201115 23:01:32.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.354" endtime="20201115 23:01:32.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.854" endtime="20201115 23:01:32.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.850" endtime="20201115 23:01:32.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.848" endtime="20201115 23:01:32.393"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.420" endtime="20201115 23:01:32.441"></status>
</kw>
<msg timestamp="20201115 23:01:32.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.417" endtime="20201115 23:01:32.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.444" endtime="20201115 23:01:32.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.453" endtime="20201115 23:01:32.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.409" endtime="20201115 23:01:32.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.404" endtime="20201115 23:01:32.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.477" endtime="20201115 23:01:32.809"></status>
</kw>
<msg timestamp="20201115 23:01:32.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044696875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.473" endtime="20201115 23:01:32.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044696875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.819" endtime="20201115 23:01:32.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.837" endtime="20201115 23:01:32.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.466" endtime="20201115 23:01:32.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.461" endtime="20201115 23:01:32.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.854" level="INFO">${RESULT} = [{'time': 0.044840333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014345800000000603, 'source_diff': 0.00014345800000000603}, {'time': 0.044991722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:32.845" endtime="20201115 23:01:32.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.883" level="INFO">${ACCURACY} = {'source_diff': [0.00014345800000000603, 0.00014356899999999617, 0.00014388899999999427, 0.00014462499999999545, 0.00014394400000000002, 0.00014365300000000053, 0.00014411099999999538, 0.0001431939999...</msg>
<status status="PASS" starttime="20201115 23:01:32.856" endtime="20201115 23:01:32.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.894" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.892" endtime="20201115 23:01:32.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.900" level="INFO">VALUE: [0.00014345800000000603, 0.00014356899999999617, 0.00014388899999999427, 0.00014462499999999545, 0.00014394400000000002, 0.00014365300000000053, 0.00014411099999999538, 0.00014319399999999927, 0.0001438199999999959, 0.0001433890000000007, 0.00014359700000000225, 0.0001436800000000002, 0.00014354200000000344, 0.00014361100000000182, 0.0001431799999999997, 0.00014320800000000578, 0.0001441250000000019, 0.00014342999999999995, 0.0001439020000000013, 0.0001437219999999989, 0.00014337500000000114, 0.00014358300000000268, 0.00014359800000000172, 0.00014379100000000422, 0.0001434999999999978, 0.00014369399999999977, 0.00014406899999999667, 0.000144041999999997, 0.00014340300000000028, 0.00014327700000000415, 0.00014315300000000003, 0.0001434999999999978, 0.00014365300000000053, 0.000143444999999999, 0.0001435270000000044, 0.00014405600000000351, 0.00014337500000000114, 0.00014315300000000003, 0.00014401399999999787, 0.00014395799999999959, 0.0001433890000000007, 0.00014402799999999744, 0.00014358400000000215, 0.00014480599999999733, 0.0001435969999999953, 0.00014393000000000045, 0.00014402699999999796, 0.00014411099999999538, 0.00014340300000000028, 0.00014379199999999676]</msg>
<status status="PASS" starttime="20201115 23:01:32.897" endtime="20201115 23:01:32.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.885" endtime="20201115 23:01:32.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.908" endtime="20201115 23:01:32.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.916" endtime="20201115 23:01:32.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.912" endtime="20201115 23:01:32.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.904" endtime="20201115 23:01:32.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.400" endtime="20201115 23:01:32.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.396" endtime="20201115 23:01:32.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.394" endtime="20201115 23:01:32.943"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.948" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.970" endtime="20201115 23:01:32.991"></status>
</kw>
<msg timestamp="20201115 23:01:32.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.967" endtime="20201115 23:01:32.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.994" endtime="20201115 23:01:32.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.001" endtime="20201115 23:01:33.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.960" endtime="20201115 23:01:33.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.953" endtime="20201115 23:01:33.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.025" endtime="20201115 23:01:33.358"></status>
</kw>
<msg timestamp="20201115 23:01:33.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045432667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045577194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.021" endtime="20201115 23:01:33.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045432667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045577194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.367" endtime="20201115 23:01:33.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.385" endtime="20201115 23:01:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.014" endtime="20201115 23:01:33.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.010" endtime="20201115 23:01:33.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.404" level="INFO">${RESULT} = [{'time': 0.045577194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014452699999999846, 'source_diff': 0.00014452699999999846}, {'time': 0.045727667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.395" endtime="20201115 23:01:33.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.434" level="INFO">${ACCURACY} = {'source_diff': [0.00014452699999999846, 0.0001451250000000029, 0.00014473699999999895, 0.00014516600000000213, 0.0001446670000000011, 0.00014468100000000067, 0.00014598600000000073, 0.000144667000000...</msg>
<status status="PASS" starttime="20201115 23:01:33.406" endtime="20201115 23:01:33.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.445" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.442" endtime="20201115 23:01:33.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.450" level="INFO">VALUE: [0.00014452699999999846, 0.0001451250000000029, 0.00014473699999999895, 0.00014516600000000213, 0.0001446670000000011, 0.00014468100000000067, 0.00014598600000000073, 0.0001446670000000011, 0.0001446250000000024, 0.00014511099999999638, 0.0001449299999999945, 0.00014508300000000418, 0.00014455500000000454, 0.00014604099999999953, 0.0001447089999999998, 0.0001456670000000021, 0.00014443000000000095, 0.00014472299999999938, 0.00014445800000000009, 0.00014484800000000297, 0.0001448890000000022, 0.000144832999999997, 0.0001445690000000041, 0.00014479099999999828, 0.00014451399999999837, 0.00014587500000000364, 0.00014470800000000034, 0.00014469400000000077, 0.00014508299999999724, 0.00014419400000000027, 0.00014447199999999966, 0.0001446250000000024, 0.0001443340000000029, 0.00014490300000000178, 0.00014430499999999735, 0.00014465200000000206, 0.0001449450000000005, 0.00014486100000000307, 0.00014511100000000332, 0.0001448890000000022, 0.00014458299999999674, 0.0001446250000000024, 0.00014495900000000006, 0.00014502800000000537, 0.00014513899999999552, 0.00014469400000000077, 0.0001449169999999944, 0.00014419399999999333, 0.00014461099999999588, 0.00014466699999999416]</msg>
<status status="PASS" starttime="20201115 23:01:33.447" endtime="20201115 23:01:33.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.436" endtime="20201115 23:01:33.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.459" endtime="20201115 23:01:33.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.467" endtime="20201115 23:01:33.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.462" endtime="20201115 23:01:33.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.454" endtime="20201115 23:01:33.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.949" endtime="20201115 23:01:33.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.945" endtime="20201115 23:01:33.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.944" endtime="20201115 23:01:33.494"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.520" endtime="20201115 23:01:33.541"></status>
</kw>
<msg timestamp="20201115 23:01:33.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.517" endtime="20201115 23:01:33.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.545" endtime="20201115 23:01:33.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.551" endtime="20201115 23:01:33.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.510" endtime="20201115 23:01:33.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.504" endtime="20201115 23:01:33.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.576" endtime="20201115 23:01:33.909"></status>
</kw>
<msg timestamp="20201115 23:01:33.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044860819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045006903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.572" endtime="20201115 23:01:33.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044860819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045006903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.918" endtime="20201115 23:01:33.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.936" endtime="20201115 23:01:33.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.565" endtime="20201115 23:01:33.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.560" endtime="20201115 23:01:33.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.953" level="INFO">${RESULT} = [{'time': 0.045006903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014608399999999772, 'source_diff': 0.00014608399999999772}, {'time': 0.045159306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.945" endtime="20201115 23:01:33.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.986" level="INFO">${ACCURACY} = {'source_diff': [0.00014608399999999772, 0.0001463340000000049, 0.00014552799999999894, 0.0001460690000000056, 0.00014573600000000048, 0.00014584699999999756, 0.0001453340000000039, 0.0001463189999999...</msg>
<status status="PASS" starttime="20201115 23:01:33.956" endtime="20201115 23:01:33.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.997" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.994" endtime="20201115 23:01:33.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.002" level="INFO">VALUE: [0.00014608399999999772, 0.0001463340000000049, 0.00014552799999999894, 0.0001460690000000056, 0.00014573600000000048, 0.00014584699999999756, 0.0001453340000000039, 0.00014631899999999892, 0.0001458890000000032, 0.0001452220000000004, 0.00014699999999999436, 0.00014576300000000014, 0.0001453329999999975, 0.00014520800000000084, 0.00014608400000000465, 0.00014565200000000306, 0.0001458199999999979, 0.0001458470000000045, 0.00014545800000000109, 0.0001465549999999996, 0.0001459169999999954, 0.0001457220000000009, 0.00014615300000000303, 0.00014611099999999738, 0.00014579099999999928, 0.0001466949999999953, 0.00014543100000000142, 0.000146041999999999, 0.00014551399999999937, 0.00014602799999999944, 0.00014545900000000056, 0.000145347000000004, 0.00014593000000000245, 0.00014540300000000228, 0.0001461250000000039, 0.0001452920000000052, 0.00014554099999999903, 0.00014555599999999808, 0.00014516600000000213, 0.0001460969999999978, 0.00014557000000000458, 0.00014543000000000195, 0.00014513900000000246, 0.0001453050000000053, 0.00014543099999999448, 0.0001459169999999954, 0.00014675000000000105, 0.0001452220000000004, 0.00014568100000000167, 0.0001455419999999985]</msg>
<status status="PASS" starttime="20201115 23:01:33.999" endtime="20201115 23:01:34.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.988" endtime="20201115 23:01:34.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.011" endtime="20201115 23:01:34.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.019" endtime="20201115 23:01:34.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.015" endtime="20201115 23:01:34.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.007" endtime="20201115 23:01:34.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.500" endtime="20201115 23:01:34.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.496" endtime="20201115 23:01:34.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.495" endtime="20201115 23:01:34.046"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.072" endtime="20201115 23:01:34.093"></status>
</kw>
<msg timestamp="20201115 23:01:34.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.069" endtime="20201115 23:01:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.097" endtime="20201115 23:01:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.103" endtime="20201115 23:01:34.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.062" endtime="20201115 23:01:34.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.056" endtime="20201115 23:01:34.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.126" endtime="20201115 23:01:34.457"></status>
</kw>
<msg timestamp="20201115 23:01:34.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044661986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044809514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.123" endtime="20201115 23:01:34.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044661986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044809514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.466" endtime="20201115 23:01:34.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.484" endtime="20201115 23:01:34.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.116" endtime="20201115 23:01:34.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.111" endtime="20201115 23:01:34.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.503" level="INFO">${RESULT} = [{'time': 0.044809514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014752800000000094, 'source_diff': 0.00014752800000000094}, {'time': 0.044963972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.495" endtime="20201115 23:01:34.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.532" level="INFO">${ACCURACY} = {'source_diff': [0.00014752800000000094, 0.00014648600000000123, 0.000146429999999996, 0.00014702700000000096, 0.00014716699999999666, 0.00014699999999999436, 0.0001463890000000037, 0.0001473059999999...</msg>
<status status="PASS" starttime="20201115 23:01:34.505" endtime="20201115 23:01:34.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.543" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.541" endtime="20201115 23:01:34.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.549" level="INFO">VALUE: [0.00014752800000000094, 0.00014648600000000123, 0.000146429999999996, 0.00014702700000000096, 0.00014716699999999666, 0.00014699999999999436, 0.0001463890000000037, 0.00014730599999999983, 0.00014697200000000216, 0.0001465000000000008, 0.00014641600000000338, 0.00014679199999999976, 0.0001470969999999988, 0.00014649999999999386, 0.00014713899999999752, 0.0001474580000000031, 0.00014681899999999942, 0.00014688899999999727, 0.0001465419999999995, 0.00014648600000000123, 0.0001470550000000001, 0.0001467499999999941, 0.00014717999999999676, 0.00014669500000000224, 0.00014765199999999812, 0.00014675000000000105, 0.00014661099999999788, 0.000146445000000002, 0.0001466800000000032, 0.00014695899999999512, 0.0001469859999999948, 0.00014640299999999634, 0.00014647200000000166, 0.00014707000000000608, 0.00014620800000000184, 0.00014708300000000618, 0.00014648600000000123, 0.00014711099999999838, 0.00014712499999999795, 0.00014663899999999702, 0.00014620800000000184, 0.00014629199999999926, 0.0001471529999999971, 0.00014693100000000292, 0.00014641599999999644, 0.00014693099999999598, 0.00014807000000000015, 0.000146429999999996, 0.00014694499999999555, 0.000148042000000001]</msg>
<status status="PASS" starttime="20201115 23:01:34.546" endtime="20201115 23:01:34.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.534" endtime="20201115 23:01:34.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.558" endtime="20201115 23:01:34.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.566" endtime="20201115 23:01:34.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.562" endtime="20201115 23:01:34.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.554" endtime="20201115 23:01:34.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.052" endtime="20201115 23:01:34.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.048" endtime="20201115 23:01:34.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.047" endtime="20201115 23:01:34.593"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.621" endtime="20201115 23:01:34.642"></status>
</kw>
<msg timestamp="20201115 23:01:34.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.618" endtime="20201115 23:01:34.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.646" endtime="20201115 23:01:34.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.652" endtime="20201115 23:01:34.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.610" endtime="20201115 23:01:34.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.604" endtime="20201115 23:01:34.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.675" endtime="20201115 23:01:35.007"></status>
</kw>
<msg timestamp="20201115 23:01:35.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046684931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046832931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.672" endtime="20201115 23:01:35.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046684931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046832931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.017" endtime="20201115 23:01:35.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.035" endtime="20201115 23:01:35.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.665" endtime="20201115 23:01:35.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.660" endtime="20201115 23:01:35.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.052" level="INFO">${RESULT} = [{'time': 0.046832931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001480000000000023, 'source_diff': 0.0001480000000000023}, {'time': 0.046986292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.043" endtime="20201115 23:01:35.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.082" level="INFO">${ACCURACY} = {'source_diff': [0.0001480000000000023, 0.00014762499999999845, 0.0001473890000000047, 0.0001489870000000032, 0.00014901400000000287, 0.0001477090000000028, 0.00014884800000000004, 0.00014794400000000...</msg>
<status status="PASS" starttime="20201115 23:01:35.054" endtime="20201115 23:01:35.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.092" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.090" endtime="20201115 23:01:35.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.098" level="INFO">VALUE: [0.0001480000000000023, 0.00014762499999999845, 0.0001473890000000047, 0.0001489870000000032, 0.00014901400000000287, 0.0001477090000000028, 0.00014884800000000004, 0.00014794400000000402, 0.00014725000000000155, 0.00014758299999999974, 0.00014743000000000395, 0.0001476250000000054, 0.0001485550000000016, 0.0001472499999999946, 0.0001474169999999969, 0.00014768100000000367, 0.00014775000000000205, 0.00014805499999999416, 0.00014798600000000273, 0.00014779200000000076, 0.00014793099999999698, 0.00014737500000000514, 0.0001477220000000029, 0.00014808300000000024, 0.00014776400000000162, 0.0001474859999999953, 0.00014784799999999904, 0.0001473749999999982, 0.00014890299999999884, 0.00014795900000000306, 0.00014790199999999837, 0.00014901400000000287, 0.00014730500000000035, 0.00014812499999999895, 0.00014730500000000035, 0.0001473199999999994, 0.00014754100000000103, 0.00014899999999999636, 0.00014736099999999863, 0.00014886100000000013, 0.00014734699999999906, 0.00014718100000000317, 0.00014726400000000112, 0.0001477220000000029, 0.00014761099999999888, 0.00014768100000000367, 0.00014768099999999673, 0.0001483059999999939, 0.00014720800000000284, 0.0001476659999999977]</msg>
<status status="PASS" starttime="20201115 23:01:35.095" endtime="20201115 23:01:35.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.084" endtime="20201115 23:01:35.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.107" endtime="20201115 23:01:35.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.115" endtime="20201115 23:01:35.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.110" endtime="20201115 23:01:35.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.102" endtime="20201115 23:01:35.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.600" endtime="20201115 23:01:35.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.596" endtime="20201115 23:01:35.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.594" endtime="20201115 23:01:35.141"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.167" endtime="20201115 23:01:35.189"></status>
</kw>
<msg timestamp="20201115 23:01:35.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.164" endtime="20201115 23:01:35.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.192" endtime="20201115 23:01:35.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.198" endtime="20201115 23:01:35.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.157" endtime="20201115 23:01:35.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.151" endtime="20201115 23:01:35.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.222" endtime="20201115 23:01:35.552"></status>
</kw>
<msg timestamp="20201115 23:01:35.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044724264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.218" endtime="20201115 23:01:35.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044575903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044724264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.562" endtime="20201115 23:01:35.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.580" endtime="20201115 23:01:35.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.211" endtime="20201115 23:01:35.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.206" endtime="20201115 23:01:35.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.599" level="INFO">${RESULT} = [{'time': 0.044724264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014836099999999963, 'source_diff': 0.00014836099999999963}, {'time': 0.044883708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.590" endtime="20201115 23:01:35.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.629" level="INFO">${ACCURACY} = {'source_diff': [0.00014836099999999963, 0.00014865199999999912, 0.00014833399999999997, 0.00014880600000000133, 0.0001490279999999955, 0.00014876400000000262, 0.00014951400000000337, 0.00014886100000...</msg>
<status status="PASS" starttime="20201115 23:01:35.601" endtime="20201115 23:01:35.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.640" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.638" endtime="20201115 23:01:35.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.646" level="INFO">VALUE: [0.00014836099999999963, 0.00014865199999999912, 0.00014833399999999997, 0.00014880600000000133, 0.0001490279999999955, 0.00014876400000000262, 0.00014951400000000337, 0.00014886100000000013, 0.00014888899999999927, 0.000149042000000002, 0.00014895799999999765, 0.00014879200000000176, 0.00014895799999999765, 0.00014894499999999755, 0.0001485130000000029, 0.00014830600000000083, 0.00014952800000000294, 0.0001484729999999962, 0.0001483879999999993, 0.00014877800000000219, 0.0001482499999999956, 0.00014905600000000158, 0.0001484729999999962, 0.00014969399999999883, 0.00014873600000000348, 0.00014834700000000006, 0.00014913899999999952, 0.00014858400000000022, 0.0001491529999999991, 0.00014873599999999654, 0.00014908400000000072, 0.0001491670000000056, 0.00014869399999999783, 0.00014831900000000092, 0.0001500000000000043, 0.00014888899999999927, 0.00014861099999999988, 0.00014922199999999747, 0.00014877800000000219, 0.00014875000000000305, 0.00014891700000000535, 0.0001491529999999991, 0.00014858300000000074, 0.0001484580000000041, 0.00014915199999999962, 0.0001490000000000033, 0.00014916600000000613, 0.00014870899999999687, 0.00014855600000000108, 0.00014855599999999414]</msg>
<status status="PASS" starttime="20201115 23:01:35.642" endtime="20201115 23:01:35.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.631" endtime="20201115 23:01:35.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.655" endtime="20201115 23:01:35.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.663" endtime="20201115 23:01:35.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.659" endtime="20201115 23:01:35.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.650" endtime="20201115 23:01:35.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.148" endtime="20201115 23:01:35.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.144" endtime="20201115 23:01:35.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.142" endtime="20201115 23:01:35.689"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.716" endtime="20201115 23:01:35.737"></status>
</kw>
<msg timestamp="20201115 23:01:35.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.713" endtime="20201115 23:01:35.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.741" endtime="20201115 23:01:35.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.747" endtime="20201115 23:01:35.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.706" endtime="20201115 23:01:35.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.700" endtime="20201115 23:01:35.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.771" endtime="20201115 23:01:36.105"></status>
</kw>
<msg timestamp="20201115 23:01:36.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044908319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.767" endtime="20201115 23:01:36.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044758653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044908319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.114" endtime="20201115 23:01:36.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.132" endtime="20201115 23:01:36.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.760" endtime="20201115 23:01:36.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.755" endtime="20201115 23:01:36.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.149" level="INFO">${RESULT} = [{'time': 0.044908319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001496659999999997, 'source_diff': 0.0001496659999999997}, {'time': 0.045068806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.141" endtime="20201115 23:01:36.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.181" level="INFO">${ACCURACY} = {'source_diff': [0.0001496659999999997, 0.00014959800000000079, 0.00014925000000000355, 0.00014936100000000063, 0.00014983399999999453, 0.0001494169999999989, 0.00015009699999999487, 0.000150097000000...</msg>
<status status="PASS" starttime="20201115 23:01:36.151" endtime="20201115 23:01:36.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.192" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.190" endtime="20201115 23:01:36.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.198" level="INFO">VALUE: [0.0001496659999999997, 0.00014959800000000079, 0.00014925000000000355, 0.00014936100000000063, 0.00014983399999999453, 0.0001494169999999989, 0.00015009699999999487, 0.0001500970000000018, 0.00014963900000000002, 0.00014991599999999994, 0.00014999999999999736, 0.00014963900000000002, 0.00015049999999999786, 0.00014961100000000088, 0.000149736999999997, 0.000149527999999996, 0.0001497220000000049, 0.0001493750000000002, 0.00014997199999999822, 0.00014920800000000484, 0.00015019399999999933, 0.000149429999999999, 0.00014947200000000466, 0.00014986100000000113, 0.0001496529999999996, 0.00015086100000000213, 0.0001509170000000004, 0.00015101399999999793, 0.00014983399999999453, 0.00014969500000000524, 0.00014934699999999412, 0.00014945799999999815, 0.0001501530000000001, 0.00014990299999999984, 0.00014977800000000319, 0.0001508750000000017, 0.00014941599999999944, 0.0001496659999999997, 0.00014951399999999643, 0.0001497079999999984, 0.00014962500000000045, 0.00014929100000000278, 0.00015001399999999693, 0.00014940299999999934, 0.00014945799999999815, 0.0001508750000000017, 0.00014977800000000319, 0.00014979100000000328, 0.0001495420000000025, 0.00014940299999999934]</msg>
<status status="PASS" starttime="20201115 23:01:36.195" endtime="20201115 23:01:36.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.183" endtime="20201115 23:01:36.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.206" endtime="20201115 23:01:36.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.215" endtime="20201115 23:01:36.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.210" endtime="20201115 23:01:36.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.202" endtime="20201115 23:01:36.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.696" endtime="20201115 23:01:36.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.692" endtime="20201115 23:01:36.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.690" endtime="20201115 23:01:36.241"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.268" endtime="20201115 23:01:36.289"></status>
</kw>
<msg timestamp="20201115 23:01:36.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.264" endtime="20201115 23:01:36.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.292" endtime="20201115 23:01:36.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.299" endtime="20201115 23:01:36.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.257" endtime="20201115 23:01:36.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.251" endtime="20201115 23:01:36.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.322" endtime="20201115 23:01:36.653"></status>
</kw>
<msg timestamp="20201115 23:01:36.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044833931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044984542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.319" endtime="20201115 23:01:36.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044833931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044984542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.663" endtime="20201115 23:01:36.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.681" endtime="20201115 23:01:36.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.312" endtime="20201115 23:01:36.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.307" endtime="20201115 23:01:36.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.700" level="INFO">${RESULT} = [{'time': 0.044984542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015061100000000188, 'source_diff': 0.00015061100000000188}, {'time': 0.045141931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.692" endtime="20201115 23:01:36.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.730" level="INFO">${ACCURACY} = {'source_diff': [0.00015061100000000188, 0.00015025000000000455, 0.0001505420000000035, 0.000151124999999995, 0.0001511379999999951, 0.00015023600000000498, 0.000150736999999998, 0.0001504160000000004...</msg>
<status status="PASS" starttime="20201115 23:01:36.702" endtime="20201115 23:01:36.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.740" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.738" endtime="20201115 23:01:36.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.746" level="INFO">VALUE: [0.00015061100000000188, 0.00015025000000000455, 0.0001505420000000035, 0.000151124999999995, 0.0001511379999999951, 0.00015023600000000498, 0.000150736999999998, 0.00015041600000000044, 0.00015113899999999458, 0.00015052800000000394, 0.0001519859999999998, 0.00015043099999999948, 0.0001505000000000048, 0.00015056900000000317, 0.0001507079999999994, 0.00015090200000000137, 0.00015118100000000023, 0.00015041600000000044, 0.00015173599999999954, 0.00015202699999999902, 0.00015061100000000188, 0.00015051400000000437, 0.00015111100000000238, 0.00015031900000000292, 0.00015101399999999793, 0.0001517080000000004, 0.00015156900000000417, 0.00015031999999999546, 0.0001511530000000011, 0.00015080499999999691, 0.00015111099999999544, 0.00015107000000000315, 0.00015062500000000145, 0.00015019399999999933, 0.00015204100000000553, 0.00015191600000000194, 0.00015059800000000179, 0.00015088900000000127, 0.0001520000000000063, 0.0001504859999999983, 0.00015080600000000333, 0.00015061100000000188, 0.000150833000000003, 0.00015049999999999786, 0.00015049999999999786, 0.00015094400000000008, 0.00015055600000000308, 0.0001514859999999993, 0.00015038899999999383, 0.00015020800000000584]</msg>
<status status="PASS" starttime="20201115 23:01:36.743" endtime="20201115 23:01:36.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.731" endtime="20201115 23:01:36.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.754" endtime="20201115 23:01:36.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.763" endtime="20201115 23:01:36.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.758" endtime="20201115 23:01:36.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.750" endtime="20201115 23:01:36.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.247" endtime="20201115 23:01:36.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.243" endtime="20201115 23:01:36.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.242" endtime="20201115 23:01:36.789"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.794" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.816" endtime="20201115 23:01:36.838"></status>
</kw>
<msg timestamp="20201115 23:01:36.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.813" endtime="20201115 23:01:36.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.841" endtime="20201115 23:01:36.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.847" endtime="20201115 23:01:36.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.806" endtime="20201115 23:01:36.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.799" endtime="20201115 23:01:36.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.870" endtime="20201115 23:01:37.202"></status>
</kw>
<msg timestamp="20201115 23:01:37.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045372486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045524556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.867" endtime="20201115 23:01:37.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045372486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045524556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.211" endtime="20201115 23:01:37.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.230" endtime="20201115 23:01:37.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.860" endtime="20201115 23:01:37.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.855" endtime="20201115 23:01:37.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.247" level="INFO">${RESULT} = [{'time': 0.045524556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015207000000000415, 'source_diff': 0.00015207000000000415}, {'time': 0.045685042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:37.238" endtime="20201115 23:01:37.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.276" level="INFO">${ACCURACY} = {'source_diff': [0.00015207000000000415, 0.00015199999999999936, 0.00015206899999999773, 0.000151527999999998, 0.0001512079999999999, 0.00015213900000000252, 0.00015159699999999637, 0.0001514859999999...</msg>
<status status="PASS" starttime="20201115 23:01:37.249" endtime="20201115 23:01:37.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.287" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.285" endtime="20201115 23:01:37.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.292" level="INFO">VALUE: [0.00015207000000000415, 0.00015199999999999936, 0.00015206899999999773, 0.000151527999999998, 0.0001512079999999999, 0.00015213900000000252, 0.00015159699999999637, 0.0001514859999999993, 0.00015216700000000166, 0.00015197200000000022, 0.0001513609999999957, 0.00015251400000000637, 0.00015168000000000126, 0.00015284700000000456, 0.00015172199999999997, 0.00015145800000000015, 0.00015134800000000254, 0.0001511949999999998, 0.00015134699999999612, 0.00015162500000000245, 0.0001515970000000033, 0.00015179199999999782, 0.00015213899999999558, 0.00015166700000000116, 0.00015216599999999525, 0.0001517780000000052, 0.00015195800000000065, 0.00015286100000000413, 0.00015144500000000005, 0.00015176399999999868, 0.00015197200000000022, 0.00015120899999999937, 0.00015129099999999784, 0.00015138900000000177, 0.0001530279999999995, 0.00015222200000000047, 0.00015254199999999857, 0.00015163900000000202, 0.00015184700000000356, 0.00015166599999999475, 0.0001516809999999938, 0.00015140300000000134, 0.00015127799999999775, 0.00015301399999999993, 0.00015166599999999475, 0.00015181900000000442, 0.00015158399999999628, 0.00015270900000000087, 0.00015300000000000036, 0.00015209699999999687]</msg>
<status status="PASS" starttime="20201115 23:01:37.289" endtime="20201115 23:01:37.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.278" endtime="20201115 23:01:37.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.301" endtime="20201115 23:01:37.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.310" endtime="20201115 23:01:37.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.305" endtime="20201115 23:01:37.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.297" endtime="20201115 23:01:37.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.795" endtime="20201115 23:01:37.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.791" endtime="20201115 23:01:37.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.790" endtime="20201115 23:01:37.336"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.363" endtime="20201115 23:01:37.384"></status>
</kw>
<msg timestamp="20201115 23:01:37.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.360" endtime="20201115 23:01:37.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.388" endtime="20201115 23:01:37.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.394" endtime="20201115 23:01:37.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.352" endtime="20201115 23:01:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.347" endtime="20201115 23:01:37.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.417" endtime="20201115 23:01:37.747"></status>
</kw>
<msg timestamp="20201115 23:01:37.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044618986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044771708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.414" endtime="20201115 23:01:37.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044618986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044771708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.756" endtime="20201115 23:01:37.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.775" endtime="20201115 23:01:37.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.407" endtime="20201115 23:01:37.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.402" endtime="20201115 23:01:37.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.793" level="INFO">${RESULT} = [{'time': 0.044771708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015272200000000097, 'source_diff': 0.00015272200000000097}, {'time': 0.044930139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:37.784" endtime="20201115 23:01:37.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.823" level="INFO">${ACCURACY} = {'source_diff': [0.00015272200000000097, 0.00015245800000000115, 0.00015302800000000644, 0.00015216700000000166, 0.00015227799999999875, 0.00015365200000000412, 0.00015279099999999934, 0.0001528889999...</msg>
<status status="PASS" starttime="20201115 23:01:37.795" endtime="20201115 23:01:37.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.833" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.831" endtime="20201115 23:01:37.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.839" level="INFO">VALUE: [0.00015272200000000097, 0.00015245800000000115, 0.00015302800000000644, 0.00015216700000000166, 0.00015227799999999875, 0.00015365200000000412, 0.00015279099999999934, 0.00015288899999999633, 0.0001528750000000037, 0.00015280600000000533, 0.00015279199999999882, 0.0001531530000000031, 0.0001536939999999959, 0.00015301399999999993, 0.00015306899999999873, 0.00015223600000000004, 0.00015231999999999746, 0.0001524860000000003, 0.000152527999999999, 0.00015316699999999572, 0.00015290300000000284, 0.00015251399999999943, 0.00015270899999999393, 0.00015261099999999694, 0.000152915999999996, 0.00015245800000000115, 0.000153124999999997, 0.000154013999999994, 0.00015251399999999943, 0.0001523330000000045, 0.00015293100000000198, 0.00015249999999999986, 0.00015319400000000233, 0.0001527080000000014, 0.00015255599999999814, 0.00015255499999999866, 0.00015350000000000086, 0.00015279199999999882, 0.00015240300000000234, 0.00015270799999999446, 0.0001528059999999984, 0.0001529300000000025, 0.00015306899999999873, 0.00015284700000000456, 0.00015226399999999918, 0.0001535410000000001, 0.00015279099999999934, 0.00015305599999999864, 0.00015244400000000158, 0.0001528059999999984]</msg>
<status status="PASS" starttime="20201115 23:01:37.836" endtime="20201115 23:01:37.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.825" endtime="20201115 23:01:37.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.852" endtime="20201115 23:01:37.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.860" endtime="20201115 23:01:37.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.856" endtime="20201115 23:01:37.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.847" endtime="20201115 23:01:37.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.343" endtime="20201115 23:01:37.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.339" endtime="20201115 23:01:37.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.337" endtime="20201115 23:01:37.887"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.892" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.914" endtime="20201115 23:01:37.935"></status>
</kw>
<msg timestamp="20201115 23:01:37.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.910" endtime="20201115 23:01:37.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.939" endtime="20201115 23:01:37.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.945" endtime="20201115 23:01:37.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.903" endtime="20201115 23:01:37.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.897" endtime="20201115 23:01:37.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.968" endtime="20201115 23:01:38.301"></status>
</kw>
<msg timestamp="20201115 23:01:38.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045551236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045704611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.965" endtime="20201115 23:01:38.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045551236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045704611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.310" endtime="20201115 23:01:38.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.329" endtime="20201115 23:01:38.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.958" endtime="20201115 23:01:38.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.953" endtime="20201115 23:01:38.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.346" level="INFO">${RESULT} = [{'time': 0.045704611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015337499999999726, 'source_diff': 0.00015337499999999726}, {'time': 0.045866111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:38.337" endtime="20201115 23:01:38.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.378" level="INFO">${ACCURACY} = {'source_diff': [0.00015337499999999726, 0.00015395800000000265, 0.00015377700000000077, 0.0001535829999999988, 0.00015384699999999862, 0.00015355499999999966, 0.00015361099999999794, 0.00015343100000...</msg>
<status status="PASS" starttime="20201115 23:01:38.348" endtime="20201115 23:01:38.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.389" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.387" endtime="20201115 23:01:38.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.396" level="INFO">VALUE: [0.00015337499999999726, 0.00015395800000000265, 0.00015377700000000077, 0.0001535829999999988, 0.00015384699999999862, 0.00015355499999999966, 0.00015361099999999794, 0.00015343100000000248, 0.00015409699999999887, 0.00015365299999999665, 0.00015416700000000366, 0.00015348599999999435, 0.00015337499999999726, 0.00015422300000000194, 0.00015362500000000445, 0.00015329099999999984, 0.00015361100000000488, 0.00015361099999999794, 0.0001541950000000028, 0.00015370900000000187, 0.00015372199999999503, 0.00015356900000000617, 0.0001549029999999979, 0.0001539579999999957, 0.0001542080000000029, 0.00015407000000000615, 0.00015402799999999356, 0.00015340300000000334, 0.00015351400000000043, 0.000153528, 0.0001534029999999964, 0.0001549029999999979, 0.00015343100000000248, 0.00015409799999999835, 0.0001539029999999969, 0.00015355600000000608, 0.00015400000000000136, 0.00015404200000000007, 0.0001532630000000007, 0.0001536809999999958, 0.00015318000000000276, 0.00015333299999999855, 0.00015331899999999898, 0.00015479200000000082, 0.00015344400000000258, 0.00015438899999999783, 0.00015322200000000147, 0.00015400000000000136, 0.0001534579999999952, 0.00015394500000000255]</msg>
<status status="PASS" starttime="20201115 23:01:38.392" endtime="20201115 23:01:38.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.380" endtime="20201115 23:01:38.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.404" endtime="20201115 23:01:38.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.412" endtime="20201115 23:01:38.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.408" endtime="20201115 23:01:38.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.400" endtime="20201115 23:01:38.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.893" endtime="20201115 23:01:38.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.889" endtime="20201115 23:01:38.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.888" endtime="20201115 23:01:38.439"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.466" endtime="20201115 23:01:38.487"></status>
</kw>
<msg timestamp="20201115 23:01:38.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.462" endtime="20201115 23:01:38.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.491" endtime="20201115 23:01:38.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.497" endtime="20201115 23:01:38.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.455" endtime="20201115 23:01:38.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.450" endtime="20201115 23:01:38.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.520" endtime="20201115 23:01:38.868"></status>
</kw>
<msg timestamp="20201115 23:01:38.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045063083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.517" endtime="20201115 23:01:38.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045063083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.877" endtime="20201115 23:01:38.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.896" endtime="20201115 23:01:38.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.510" endtime="20201115 23:01:38.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.505" endtime="20201115 23:01:38.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.915" level="INFO">${RESULT} = [{'time': 0.045063083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015466599999999775, 'source_diff': 0.00015466599999999775}, {'time': 0.045224542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:38.906" endtime="20201115 23:01:38.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.947" level="INFO">${ACCURACY} = {'source_diff': [0.00015466599999999775, 0.0001544449999999961, 0.00015493099999999704, 0.00015515200000000562, 0.00015461099999999894, 0.000154528000000001, 0.00015444400000000358, 0.0001544720000000...</msg>
<status status="PASS" starttime="20201115 23:01:38.918" endtime="20201115 23:01:38.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.958" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.956" endtime="20201115 23:01:38.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.964" level="INFO">VALUE: [0.00015466599999999775, 0.0001544449999999961, 0.00015493099999999704, 0.00015515200000000562, 0.00015461099999999894, 0.000154528000000001, 0.00015444400000000358, 0.00015447200000000272, 0.00015466700000000416, 0.000155013999999995, 0.000154528000000001, 0.00015462499999999851, 0.00015515299999999815, 0.00015441699999999697, 0.00015491699999999747, 0.00015434699999999912, 0.00015462499999999851, 0.00015472199999999603, 0.00015463899999999808, 0.00015484699999999962, 0.000154737000000002, 0.00015447200000000272, 0.0001545829999999998, 0.00015470899999999593, 0.00015511099999999944, 0.0001548060000000004, 0.00015516700000000466, 0.0001543609999999987, 0.00015516700000000466, 0.00015505500000000116, 0.0001547500000000021, 0.00015523600000000304, 0.00015520799999999696, 0.00015472200000000297, 0.00015505499999999423, 0.00015483399999999953, 0.00015462499999999851, 0.00015513899999999858, 0.00015437499999999826, 0.0001549029999999979, 0.00015605600000000164, 0.00015479200000000082, 0.00015512499999999901, 0.00015501400000000193, 0.00015463899999999808, 0.0001544029999999974, 0.00015509799999999935, 0.0001549029999999979, 0.00015427800000000075, 0.00015511199999999892]</msg>
<status status="PASS" starttime="20201115 23:01:38.961" endtime="20201115 23:01:38.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.949" endtime="20201115 23:01:38.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.973" endtime="20201115 23:01:38.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.981" endtime="20201115 23:01:39.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.977" endtime="20201115 23:01:39.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.968" endtime="20201115 23:01:39.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.446" endtime="20201115 23:01:39.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.441" endtime="20201115 23:01:39.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.440" endtime="20201115 23:01:39.008"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.036" endtime="20201115 23:01:39.060"></status>
</kw>
<msg timestamp="20201115 23:01:39.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.032" endtime="20201115 23:01:39.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.064" endtime="20201115 23:01:39.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.070" endtime="20201115 23:01:39.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.025" endtime="20201115 23:01:39.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.019" endtime="20201115 23:01:39.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.094" endtime="20201115 23:01:39.443"></status>
</kw>
<msg timestamp="20201115 23:01:39.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046485556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046641028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.091" endtime="20201115 23:01:39.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046485556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046641028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.452" endtime="20201115 23:01:39.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.472" endtime="20201115 23:01:39.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.084" endtime="20201115 23:01:39.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.079" endtime="20201115 23:01:39.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.489" level="INFO">${RESULT} = [{'time': 0.046641028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015547200000000372, 'source_diff': 0.00015547200000000372}, {'time': 0.046806486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:39.480" endtime="20201115 23:01:39.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.520" level="INFO">${ACCURACY} = {'source_diff': [0.00015547200000000372, 0.00015567999999999832, 0.0001557080000000044, 0.00015579199999999488, 0.0001559579999999977, 0.00015533299999999362, 0.0001559579999999977, 0.0001555560000000...</msg>
<status status="PASS" starttime="20201115 23:01:39.491" endtime="20201115 23:01:39.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.531" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.529" endtime="20201115 23:01:39.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.537" level="INFO">VALUE: [0.00015547200000000372, 0.00015567999999999832, 0.0001557080000000044, 0.00015579199999999488, 0.0001559579999999977, 0.00015533299999999362, 0.0001559579999999977, 0.00015555600000000114, 0.0001565559999999952, 0.00015568100000000473, 0.0001555830000000008, 0.0001558610000000002, 0.0001560830000000013, 0.00015580499999999498, 0.0001554159999999985, 0.0001561380000000001, 0.00015554200000000157, 0.000155528000000002, 0.0001555830000000008, 0.00015555499999999473, 0.0001558610000000002, 0.00015523600000000304, 0.00015541699999999797, 0.00015555500000000166, 0.00015552799999999506, 0.00015594399999999814, 0.00015594399999999814, 0.00015576400000000268, 0.0001560830000000013, 0.00015613899999999958, 0.0001561380000000001, 0.0001567359999999976, 0.00015562499999999951, 0.000155528000000002, 0.0001559860000000038, 0.0001557779999999953, 0.0001558060000000014, 0.00015622199999999753, 0.00015532000000000046, 0.0001558610000000002, 0.0001556660000000057, 0.0001559029999999989, 0.0001559579999999977, 0.00015609699999999394, 0.00015599999999999642, 0.00015598599999999685, 0.0001555700000000007, 0.0001562359999999971, 0.00015584700000000062, 0.00015687500000000076]</msg>
<status status="PASS" starttime="20201115 23:01:39.534" endtime="20201115 23:01:39.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.522" endtime="20201115 23:01:39.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.546" endtime="20201115 23:01:39.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.554" endtime="20201115 23:01:39.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.550" endtime="20201115 23:01:39.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.541" endtime="20201115 23:01:39.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.015" endtime="20201115 23:01:39.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.011" endtime="20201115 23:01:39.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.009" endtime="20201115 23:01:39.581"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.609" endtime="20201115 23:01:39.634"></status>
</kw>
<msg timestamp="20201115 23:01:39.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.605" endtime="20201115 23:01:39.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.637" endtime="20201115 23:01:39.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.643" endtime="20201115 23:01:39.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.598" endtime="20201115 23:01:39.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.592" endtime="20201115 23:01:39.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.668" endtime="20201115 23:01:40.018"></status>
</kw>
<msg timestamp="20201115 23:01:40.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047180181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047336458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.664" endtime="20201115 23:01:40.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047180181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047336458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.028" endtime="20201115 23:01:40.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.047" endtime="20201115 23:01:40.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.657" endtime="20201115 23:01:40.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.652" endtime="20201115 23:01:40.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.066" level="INFO">${RESULT} = [{'time': 0.047336458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015627699999999634, 'source_diff': 0.00015627699999999634}, {'time': 0.047500931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:40.057" endtime="20201115 23:01:40.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.096" level="INFO">${ACCURACY} = {'source_diff': [0.00015627699999999634, 0.00015716699999999972, 0.00015694399999999914, 0.00015647199999999778, 0.00015648700000000376, 0.00015630500000000241, 0.0001562909999999959, 0.00015652800000...</msg>
<status status="PASS" starttime="20201115 23:01:40.068" endtime="20201115 23:01:40.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.107" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.105" endtime="20201115 23:01:40.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.113" level="INFO">VALUE: [0.00015627699999999634, 0.00015716699999999972, 0.00015694399999999914, 0.00015647199999999778, 0.00015648700000000376, 0.00015630500000000241, 0.0001562909999999959, 0.000156528000000003, 0.00015638899999999983, 0.0001571809999999993, 0.0001565689999999953, 0.0001564860000000043, 0.00015627800000000275, 0.0001564029999999994, 0.00015709699999999494, 0.00015662500000000051, 0.0001569029999999999, 0.00015680500000000291, 0.00015665299999999965, 0.0001573610000000017, 0.00015711100000000144, 0.00015712500000000101, 0.00015638800000000036, 0.00015677700000000377, 0.00015674999999999717, 0.00015641600000000644, 0.00015670799999999846, 0.000156916, 0.00015713900000000058, 0.00015687500000000076, 0.00015713900000000058, 0.000156528000000003, 0.0001571939999999994, 0.00015658400000000128, 0.00015782000000000296, 0.00015642999999999907, 0.00015668100000000573, 0.0001568060000000024, 0.00015677699999999684, 0.0001564579999999982, 0.0001562080000000049, 0.00015652700000000352, 0.00015637500000000026, 0.00015638899999999983, 0.00015633299999999462, 0.00015709700000000187, 0.00015680499999999598, 0.00015690200000000043, 0.0001567359999999976, 0.0001564159999999995]</msg>
<status status="PASS" starttime="20201115 23:01:40.110" endtime="20201115 23:01:40.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.098" endtime="20201115 23:01:40.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.122" endtime="20201115 23:01:40.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.130" endtime="20201115 23:01:40.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.126" endtime="20201115 23:01:40.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.117" endtime="20201115 23:01:40.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.588" endtime="20201115 23:01:40.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.584" endtime="20201115 23:01:40.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.582" endtime="20201115 23:01:40.157"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.163" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.186" endtime="20201115 23:01:40.210"></status>
</kw>
<msg timestamp="20201115 23:01:40.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.183" endtime="20201115 23:01:40.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.214" endtime="20201115 23:01:40.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.221" endtime="20201115 23:01:40.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.175" endtime="20201115 23:01:40.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.168" endtime="20201115 23:01:40.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.245" endtime="20201115 23:01:40.603"></status>
</kw>
<msg timestamp="20201115 23:01:40.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047896389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048054458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.242" endtime="20201115 23:01:40.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047896389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048054458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.613" endtime="20201115 23:01:40.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.631" endtime="20201115 23:01:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.235" endtime="20201115 23:01:40.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.230" endtime="20201115 23:01:40.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.649" level="INFO">${RESULT} = [{'time': 0.048054458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015806900000000373, 'source_diff': 0.00015806900000000373}, {'time': 0.048216944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:40.640" endtime="20201115 23:01:40.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.682" level="INFO">${ACCURACY} = {'source_diff': [0.00015806900000000373, 0.00015734699999999519, 0.00015822199999999953, 0.00015729200000000332, 0.0001584030000000014, 0.00015837500000000226, 0.00015813899999999464, 0.00015780599999...</msg>
<status status="PASS" starttime="20201115 23:01:40.651" endtime="20201115 23:01:40.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.694" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.691" endtime="20201115 23:01:40.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.699" level="INFO">VALUE: [0.00015806900000000373, 0.00015734699999999519, 0.00015822199999999953, 0.00015729200000000332, 0.0001584030000000014, 0.00015837500000000226, 0.00015813899999999464, 0.00015780599999999645, 0.0001573060000000029, 0.0001577500000000051, 0.0001577909999999974, 0.00015812500000000201, 0.00015748599999999835, 0.00015729199999999638, 0.00015748599999999835, 0.00015784699999999569, 0.00015791700000000047, 0.00015747199999999878, 0.00015894400000000114, 0.0001581940000000004, 0.00015747199999999878, 0.0001573480000000016, 0.00015752799999999706, 0.00015791700000000047, 0.00015727800000000375, 0.00015818099999999335, 0.00015905499999999823, 0.0001579579999999997, 0.00015799999999999842, 0.00015815300000000115, 0.00015787499999999483, 0.0001577359999999986, 0.00015740200000000093, 0.00015797299999999875, 0.0001575410000000041, 0.00015727700000000427, 0.00015776400000000468, 0.00015737500000000126, 0.00015793000000000057, 0.00015815200000000168, 0.00015743000000000007, 0.00015799999999999842, 0.00015804199999999713, 0.0001577909999999974, 0.00015815300000000115, 0.00015763900000000108, 0.00015891700000000147, 0.00015756900000000323, 0.00015902799999999856, 0.00015799999999999842]</msg>
<status status="PASS" starttime="20201115 23:01:40.696" endtime="20201115 23:01:40.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.685" endtime="20201115 23:01:40.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.708" endtime="20201115 23:01:40.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.717" endtime="20201115 23:01:40.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.712" endtime="20201115 23:01:40.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.703" endtime="20201115 23:01:40.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.164" endtime="20201115 23:01:40.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.160" endtime="20201115 23:01:40.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.158" endtime="20201115 23:01:40.744"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.772" endtime="20201115 23:01:40.797"></status>
</kw>
<msg timestamp="20201115 23:01:40.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.769" endtime="20201115 23:01:40.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.800" endtime="20201115 23:01:40.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.807" endtime="20201115 23:01:40.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.761" endtime="20201115 23:01:40.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.754" endtime="20201115 23:01:40.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.832" endtime="20201115 23:01:41.179"></status>
</kw>
<msg timestamp="20201115 23:01:41.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047065694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047224347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.829" endtime="20201115 23:01:41.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047065694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047224347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.188" endtime="20201115 23:01:41.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.207" endtime="20201115 23:01:41.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.821" endtime="20201115 23:01:41.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.816" endtime="20201115 23:01:41.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.226" level="INFO">${RESULT} = [{'time': 0.047224347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015865300000000165, 'source_diff': 0.00015865300000000165}, {'time': 0.04739075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:41.217" endtime="20201115 23:01:41.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.257" level="INFO">${ACCURACY} = {'source_diff': [0.00015865300000000165, 0.00015837500000000226, 0.00015887500000000276, 0.00016002799999999956, 0.000160014, 0.000158916000000002, 0.00015858299999999687, 0.00015874999999999917, 0.00...</msg>
<status status="PASS" starttime="20201115 23:01:41.228" endtime="20201115 23:01:41.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.268" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.266" endtime="20201115 23:01:41.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.273" level="INFO">VALUE: [0.00015865300000000165, 0.00015837500000000226, 0.00015887500000000276, 0.00016002799999999956, 0.000160014, 0.000158916000000002, 0.00015858299999999687, 0.00015874999999999917, 0.00015913900000000258, 0.00015934700000000412, 0.00015890299999999496, 0.0001588480000000031, 0.00015912499999999608, 0.00015843100000000054, 0.000159916000000003, 0.00015948600000000035, 0.00015861100000000294, 0.00015880499999999798, 0.00015970900000000093, 0.0001590559999999977, 0.00015981899999999855, 0.00015894400000000114, 0.00015874999999999917, 0.0001582359999999991, 0.00015970900000000093, 0.00015847299999999925, 0.00015848599999999935, 0.00015880599999999745, 0.0001584450000000001, 0.00015863900000000208, 0.0001582359999999991, 0.00015845799999999327, 0.0001583339999999961, 0.0001589580000000007, 0.00015951300000000002, 0.00015848599999999935, 0.00015829200000000432, 0.0001588610000000032, 0.00015881900000000448, 0.00015874999999999917, 0.00015919499999999392, 0.00015847199999999978, 0.00015849999999999892, 0.0001590700000000042, 0.00015847199999999978, 0.00015824999999999867, 0.00015902699999999909, 0.00015852799999999806, 0.00015912499999999608, 0.00015898599999999985]</msg>
<status status="PASS" starttime="20201115 23:01:41.270" endtime="20201115 23:01:41.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.259" endtime="20201115 23:01:41.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.282" endtime="20201115 23:01:41.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.292" endtime="20201115 23:01:41.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.286" endtime="20201115 23:01:41.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.278" endtime="20201115 23:01:41.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.750" endtime="20201115 23:01:41.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.746" endtime="20201115 23:01:41.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.745" endtime="20201115 23:01:41.319"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.346" endtime="20201115 23:01:41.371"></status>
</kw>
<msg timestamp="20201115 23:01:41.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.342" endtime="20201115 23:01:41.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.374" endtime="20201115 23:01:41.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.380" endtime="20201115 23:01:41.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.335" endtime="20201115 23:01:41.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.329" endtime="20201115 23:01:41.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.404" endtime="20201115 23:01:41.752"></status>
</kw>
<msg timestamp="20201115 23:01:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046183194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046343069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.401" endtime="20201115 23:01:41.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046183194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046343069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.761" endtime="20201115 23:01:41.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.780" endtime="20201115 23:01:41.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.394" endtime="20201115 23:01:41.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.389" endtime="20201115 23:01:41.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.798" level="INFO">${RESULT} = [{'time': 0.046343069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015987500000000376, 'source_diff': 0.00015987500000000376}, {'time': 0.046509514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:41.789" endtime="20201115 23:01:41.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.829" level="INFO">${ACCURACY} = {'source_diff': [0.00015987500000000376, 0.00015979199999999888, 0.0001595830000000048, 0.00015963899999999615, 0.00015924999999999967, 0.000160916000000004, 0.0001600979999999974, 0.00016008299999999...</msg>
<status status="PASS" starttime="20201115 23:01:41.800" endtime="20201115 23:01:41.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.841" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.838" endtime="20201115 23:01:41.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.847" level="INFO">VALUE: [0.00015987500000000376, 0.00015979199999999888, 0.0001595830000000048, 0.00015963899999999615, 0.00015924999999999967, 0.000160916000000004, 0.0001600979999999974, 0.00016008299999999837, 0.00016002799999999956, 0.00015945900000000068, 0.0001595559999999982, 0.0001597779999999993, 0.00015945900000000068, 0.0001596940000000019, 0.00015979199999999888, 0.00015926399999999924, 0.00015947200000000078, 0.0001598610000000042, 0.00016009699999999794, 0.00015924999999999967, 0.00015965299999999572, 0.0001602639999999933, 0.00015975000000000017, 0.00015972200000000103, 0.00015987499999999683, 0.00015938900000000283, 0.00015981899999999855, 0.00015981999999999802, 0.00015980499999999898, 0.00015979100000000634, 0.00015962499999999658, 0.00016017999999999588, 0.00015926399999999924, 0.00015976300000000027, 0.0001596810000000018, 0.0001607360000000016, 0.00015993000000000257, 0.00015993100000000204, 0.00016016700000000272, 0.0001594580000000012, 0.0001602779999999998, 0.00015963799999999667, 0.00015952799999999906, 0.00015987500000000376, 0.00015937499999999633, 0.00016037500000000426, 0.00016020900000000143, 0.00016055499999999973, 0.00015933400000000403, 0.00015961100000000394]</msg>
<status status="PASS" starttime="20201115 23:01:41.843" endtime="20201115 23:01:41.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.831" endtime="20201115 23:01:41.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.857" endtime="20201115 23:01:41.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.865" endtime="20201115 23:01:41.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.861" endtime="20201115 23:01:41.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.852" endtime="20201115 23:01:41.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.325" endtime="20201115 23:01:41.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.321" endtime="20201115 23:01:41.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.320" endtime="20201115 23:01:41.892"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.898" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.920" endtime="20201115 23:01:41.945"></status>
</kw>
<msg timestamp="20201115 23:01:41.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.917" endtime="20201115 23:01:41.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.948" endtime="20201115 23:01:41.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.955" endtime="20201115 23:01:41.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.909" endtime="20201115 23:01:41.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.903" endtime="20201115 23:01:41.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.979" endtime="20201115 23:01:42.327"></status>
</kw>
<msg timestamp="20201115 23:01:42.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046563833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046724153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.975" endtime="20201115 23:01:42.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046563833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046724153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.336" endtime="20201115 23:01:42.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.355" endtime="20201115 23:01:42.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.968" endtime="20201115 23:01:42.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.963" endtime="20201115 23:01:42.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.374" level="INFO">${RESULT} = [{'time': 0.046724153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016031999999999852, 'source_diff': 0.00016031999999999852}, {'time': 0.046889639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.365" endtime="20201115 23:01:42.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.405" level="INFO">${ACCURACY} = {'source_diff': [0.00016031999999999852, 0.00016036099999999776, 0.0001610559999999997, 0.00016034799999999766, 0.00016169499999999642, 0.00016076400000000074, 0.0001615979999999989, 0.000160749999999...</msg>
<status status="PASS" starttime="20201115 23:01:42.377" endtime="20201115 23:01:42.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.416" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.414" endtime="20201115 23:01:42.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.422" level="INFO">VALUE: [0.00016031999999999852, 0.00016036099999999776, 0.0001610559999999997, 0.00016034799999999766, 0.00016169499999999642, 0.00016076400000000074, 0.0001615979999999989, 0.00016074999999999423, 0.00016112500000000501, 0.0001608339999999986, 0.00016159699999999944, 0.00016102800000000056, 0.00016092999999999663, 0.00016040299999999647, 0.00016093100000000304, 0.00016102800000000056, 0.00016052800000000006, 0.00016087500000000476, 0.00016094400000000314, 0.00016041699999999603, 0.00016067999999999638, 0.00016066700000000322, 0.00016126400000000124, 0.0001607910000000004, 0.000160916000000004, 0.00016104100000000066, 0.00016093000000000357, 0.00016037499999999733, 0.00016050000000000092, 0.0001609439999999962, 0.0001608610000000052, 0.00016034699999999819, 0.00016097200000000228, 0.00016041599999999656, 0.00016044400000000264, 0.00016058399999999834, 0.0001604580000000022, 0.00016036200000000417, 0.00016100000000000142, 0.00016144400000000364, 0.0001609030000000039, 0.0001615979999999989, 0.00016095900000000218, 0.00016041599999999656, 0.0001604580000000022, 0.0001609859999999949, 0.0001608889999999974, 0.00016115200000000468, 0.00016081899999999955, 0.00016079199999999988]</msg>
<status status="PASS" starttime="20201115 23:01:42.419" endtime="20201115 23:01:42.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.407" endtime="20201115 23:01:42.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.431" endtime="20201115 23:01:42.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.440" endtime="20201115 23:01:42.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.435" endtime="20201115 23:01:42.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.427" endtime="20201115 23:01:42.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.899" endtime="20201115 23:01:42.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.895" endtime="20201115 23:01:42.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.893" endtime="20201115 23:01:42.467"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.472" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.494" endtime="20201115 23:01:42.519"></status>
</kw>
<msg timestamp="20201115 23:01:42.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.491" endtime="20201115 23:01:42.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.522" endtime="20201115 23:01:42.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.529" endtime="20201115 23:01:42.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.483" endtime="20201115 23:01:42.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.478" endtime="20201115 23:01:42.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.553" endtime="20201115 23:01:42.901"></status>
</kw>
<msg timestamp="20201115 23:01:42.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046301347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.549" endtime="20201115 23:01:42.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046301347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.910" endtime="20201115 23:01:42.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.929" endtime="20201115 23:01:42.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.542" endtime="20201115 23:01:42.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.537" endtime="20201115 23:01:42.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.947" level="INFO">${RESULT} = [{'time': 0.046463542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016219499999999692, 'source_diff': 0.00016219499999999692}, {'time': 0.046632069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.938" endtime="20201115 23:01:42.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.990" level="INFO">${ACCURACY} = {'source_diff': [0.00016219499999999692, 0.0001620690000000008, 0.00016170799999999652, 0.00016154200000000063, 0.00016197200000000328, 0.00016213799999999917, 0.00016124999999999473, 0.00016208399999...</msg>
<status status="PASS" starttime="20201115 23:01:42.958" endtime="20201115 23:01:42.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.001" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.998" endtime="20201115 23:01:43.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.006" level="INFO">VALUE: [0.00016219499999999692, 0.0001620690000000008, 0.00016170799999999652, 0.00016154200000000063, 0.00016197200000000328, 0.00016213799999999917, 0.00016124999999999473, 0.00016208399999999984, 0.00016219499999999692, 0.00016158399999999934, 0.00016152800000000106, 0.00016223599999999616, 0.00016165299999999772, 0.00016195900000000318, 0.00016137500000000526, 0.0001617360000000026, 0.00016276400000000274, 0.00016181900000000055, 0.00016277799999999537, 0.00016134699999999919, 0.0001621109999999995, 0.00016156999999999977, 0.0001612360000000021, 0.00016129200000000038, 0.00016184699999999969, 0.00016152800000000106, 0.00016219500000000386, 0.0001627639999999958, 0.00016184699999999969, 0.00016144499999999617, 0.0001621109999999995, 0.00016144500000000311, 0.00016152800000000106, 0.00016184699999999969, 0.00016134699999999919, 0.00016202800000000156, 0.00016184699999999969, 0.00016174999999999523, 0.00016194499999999667, 0.000161610999999999, 0.0001612780000000008, 0.0001613889999999979, 0.0001630690000000018, 0.0001613889999999979, 0.00016145899999999574, 0.00016209699999999994, 0.00016130599999999995, 0.00016131900000000005, 0.00016162500000000551, 0.00016177700000000184]</msg>
<status status="PASS" starttime="20201115 23:01:43.003" endtime="20201115 23:01:43.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.991" endtime="20201115 23:01:43.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.015" endtime="20201115 23:01:43.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.024" endtime="20201115 23:01:43.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.020" endtime="20201115 23:01:43.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.011" endtime="20201115 23:01:43.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.474" endtime="20201115 23:01:43.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.469" endtime="20201115 23:01:43.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.467" endtime="20201115 23:01:43.051"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.078" endtime="20201115 23:01:43.103"></status>
</kw>
<msg timestamp="20201115 23:01:43.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.075" endtime="20201115 23:01:43.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.106" endtime="20201115 23:01:43.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.113" endtime="20201115 23:01:43.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.068" endtime="20201115 23:01:43.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.061" endtime="20201115 23:01:43.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.137" endtime="20201115 23:01:43.482"></status>
</kw>
<msg timestamp="20201115 23:01:43.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046238417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046401986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.133" endtime="20201115 23:01:43.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046238417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046401986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.492" endtime="20201115 23:01:43.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.511" endtime="20201115 23:01:43.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.126" endtime="20201115 23:01:43.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.121" endtime="20201115 23:01:43.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.530" level="INFO">${RESULT} = [{'time': 0.046401986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001635690000000023, 'source_diff': 0.0001635690000000023}, {'time': 0.046572458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:43.522" endtime="20201115 23:01:43.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.561" level="INFO">${ACCURACY} = {'source_diff': [0.0001635690000000023, 0.00016292999999999863, 0.000163611000000001, 0.00016295900000000418, 0.00016290299999999897, 0.00016279200000000188, 0.0001631110000000005, 0.00016388900000000...</msg>
<status status="PASS" starttime="20201115 23:01:43.533" endtime="20201115 23:01:43.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.572" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.570" endtime="20201115 23:01:43.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.578" level="INFO">VALUE: [0.0001635690000000023, 0.00016292999999999863, 0.000163611000000001, 0.00016295900000000418, 0.00016290299999999897, 0.00016279200000000188, 0.0001631110000000005, 0.0001638890000000004, 0.00016224999999999573, 0.00016270799999999752, 0.00016255599999999426, 0.00016259700000000044, 0.00016315199999999974, 0.00016405500000000323, 0.00016280499999999504, 0.00016250000000000292, 0.00016250000000000292, 0.00016298700000000332, 0.0001629859999999969, 0.00016238900000000583, 0.00016354200000000263, 0.0001623889999999989, 0.00016306899999999486, 0.00016232000000000052, 0.00016231900000000105, 0.0001622910000000019, 0.0001625140000000025, 0.00016307000000000127, 0.00016245799999999727, 0.000163014000000003, 0.00016320900000000443, 0.0001628889999999994, 0.00016299999999999648, 0.00016408400000000184, 0.0001625690000000013, 0.00016225000000000267, 0.0001629580000000047, 0.00016319499999999793, 0.00016412499999999414, 0.00016258400000000034, 0.0001624859999999964, 0.00016237499999999933, 0.00016232000000000052, 0.00016312500000000008, 0.0001628340000000006, 0.0001630690000000018, 0.00016327799999999587, 0.00016240299999999847, 0.0001637360000000046, 0.0001631110000000005]</msg>
<status status="PASS" starttime="20201115 23:01:43.574" endtime="20201115 23:01:43.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.563" endtime="20201115 23:01:43.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.586" endtime="20201115 23:01:43.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.595" endtime="20201115 23:01:43.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.590" endtime="20201115 23:01:43.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.582" endtime="20201115 23:01:43.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.058" endtime="20201115 23:01:43.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.054" endtime="20201115 23:01:43.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.052" endtime="20201115 23:01:43.622"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.627" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.649" endtime="20201115 23:01:43.674"></status>
</kw>
<msg timestamp="20201115 23:01:43.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.646" endtime="20201115 23:01:43.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.677" endtime="20201115 23:01:43.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.684" endtime="20201115 23:01:43.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.639" endtime="20201115 23:01:43.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.633" endtime="20201115 23:01:43.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.708" endtime="20201115 23:01:44.055"></status>
</kw>
<msg timestamp="20201115 23:01:44.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046113139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046278181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.704" endtime="20201115 23:01:44.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046113139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046278181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.065" endtime="20201115 23:01:44.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.084" endtime="20201115 23:01:44.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.697" endtime="20201115 23:01:44.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.692" endtime="20201115 23:01:44.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.101" level="INFO">${RESULT} = [{'time': 0.046278181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016504200000000413, 'source_diff': 0.00016504200000000413}, {'time': 0.046449681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:44.092" endtime="20201115 23:01:44.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.132" level="INFO">${ACCURACY} = {'source_diff': [0.00016504200000000413, 0.00016352800000000306, 0.00016476299999999833, 0.00016420799999999902, 0.0001638890000000004, 0.00016458400000000234, 0.0001647219999999991, 0.000164000000000...</msg>
<status status="PASS" starttime="20201115 23:01:44.104" endtime="20201115 23:01:44.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.143" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.141" endtime="20201115 23:01:44.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.149" level="INFO">VALUE: [0.00016504200000000413, 0.00016352800000000306, 0.00016476299999999833, 0.00016420799999999902, 0.0001638890000000004, 0.00016458400000000234, 0.0001647219999999991, 0.00016400000000000442, 0.00016355500000000273, 0.0001638890000000004, 0.00016332000000000152, 0.00016490300000000097, 0.00016348600000000435, 0.00016438800000000142, 0.00016422200000000553, 0.00016379199999999594, 0.000164611000000002, 0.00016397299999999781, 0.00016359700000000144, 0.00016334800000000066, 0.0001642639999999973, 0.00016366699999999929, 0.0001637639999999968, 0.00016379200000000288, 0.00016342999999999913, 0.0001637219999999981, 0.00016345900000000468, 0.0001642219999999986, 0.00016351399999999655, 0.0001639859999999979, 0.0001647219999999991, 0.00016418099999999936, 0.00016399999999999748, 0.00016336100000000076, 0.00016345799999999827, 0.00016413900000000065, 0.00016463900000000115, 0.00016356999999999483, 0.00016337500000000033, 0.00016509700000000294, 0.0001641660000000003, 0.0001638890000000004, 0.00016388899999999346, 0.00016394499999999868, 0.0001640560000000027, 0.00016384700000000169, 0.00016409700000000194, 0.00016324999999999673, 0.00016386100000000126, 0.00016409700000000194]</msg>
<status status="PASS" starttime="20201115 23:01:44.146" endtime="20201115 23:01:44.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.134" endtime="20201115 23:01:44.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.158" endtime="20201115 23:01:44.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.166" endtime="20201115 23:01:44.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.162" endtime="20201115 23:01:44.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.153" endtime="20201115 23:01:44.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.629" endtime="20201115 23:01:44.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.625" endtime="20201115 23:01:44.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.623" endtime="20201115 23:01:44.193"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.198" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.221" endtime="20201115 23:01:44.246"></status>
</kw>
<msg timestamp="20201115 23:01:44.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.217" endtime="20201115 23:01:44.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.249" endtime="20201115 23:01:44.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.256" endtime="20201115 23:01:44.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.210" endtime="20201115 23:01:44.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.204" endtime="20201115 23:01:44.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.280" endtime="20201115 23:01:44.628"></status>
</kw>
<msg timestamp="20201115 23:01:44.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046757431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046922333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.277" endtime="20201115 23:01:44.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046757431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046922333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.637" endtime="20201115 23:01:44.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.656" endtime="20201115 23:01:44.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.269" endtime="20201115 23:01:44.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.265" endtime="20201115 23:01:44.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.675" level="INFO">${RESULT} = [{'time': 0.046922333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016490199999999455, 'source_diff': 0.00016490199999999455}, {'time': 0.047092819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:44.666" endtime="20201115 23:01:44.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.706" level="INFO">${ACCURACY} = {'source_diff': [0.00016490199999999455, 0.00016462500000000158, 0.00016417999999999988, 0.00016441700000000004, 0.00016484800000000216, 0.00016512500000000208, 0.00016506899999999686, 0.0001645830000...</msg>
<status status="PASS" starttime="20201115 23:01:44.677" endtime="20201115 23:01:44.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.717" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.715" endtime="20201115 23:01:44.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.722" level="INFO">VALUE: [0.00016490199999999455, 0.00016462500000000158, 0.00016417999999999988, 0.00016441700000000004, 0.00016484800000000216, 0.00016512500000000208, 0.00016506899999999686, 0.00016458300000000287, 0.00016454200000000363, 0.00016461199999999454, 0.00016515300000000122, 0.00016495799999999977, 0.0001645560000000032, 0.00016455599999999626, 0.00016491600000000106, 0.00016436100000000176, 0.00016516700000000079, 0.00016518100000000036, 0.00016465200000000124, 0.0001648890000000014, 0.00016432000000000252, 0.00016516700000000079, 0.00016447199999999884, 0.00016473599999999866, 0.00016487500000000183, 0.0001652360000000061, 0.00016494499999999968, 0.0001644309999999996, 0.0001642910000000039, 0.00016454200000000363, 0.0001660419999999982, 0.00016494499999999968, 0.00016474999999999823, 0.000164305999999996, 0.00016465300000000072, 0.00016457000000000277, 0.00016451399999999755, 0.00016473599999999866, 0.00016468000000000038, 0.00016452800000000406, 0.0001652089999999995, 0.00016476299999999833, 0.00016507000000000327, 0.0001655549999999978, 0.000165014000000005, 0.0001652219999999996, 0.00016512500000000208, 0.00016429200000000338, 0.00016458300000000287, 0.00016523599999999916]</msg>
<status status="PASS" starttime="20201115 23:01:44.719" endtime="20201115 23:01:44.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.708" endtime="20201115 23:01:44.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.731" endtime="20201115 23:01:44.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.740" endtime="20201115 23:01:44.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.735" endtime="20201115 23:01:44.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.727" endtime="20201115 23:01:44.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.200" endtime="20201115 23:01:44.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.196" endtime="20201115 23:01:44.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.194" endtime="20201115 23:01:44.767"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.795" endtime="20201115 23:01:44.820"></status>
</kw>
<msg timestamp="20201115 23:01:44.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.791" endtime="20201115 23:01:44.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.823" endtime="20201115 23:01:44.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.830" endtime="20201115 23:01:44.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.784" endtime="20201115 23:01:44.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.778" endtime="20201115 23:01:44.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.854" endtime="20201115 23:01:45.202"></status>
</kw>
<msg timestamp="20201115 23:01:45.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.850" endtime="20201115 23:01:45.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047245153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.212" endtime="20201115 23:01:45.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.230" endtime="20201115 23:01:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.843" endtime="20201115 23:01:45.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.838" endtime="20201115 23:01:45.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.248" level="INFO">${RESULT} = [{'time': 0.047245153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016586099999999632, 'source_diff': 0.00016586099999999632}, {'time': 0.047415708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:45.239" endtime="20201115 23:01:45.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.282" level="INFO">${ACCURACY} = {'source_diff': [0.00016586099999999632, 0.00016573599999999966, 0.00016615300000000222, 0.0001662639999999993, 0.00016595900000000025, 0.000166096999999997, 0.00016572299999999957, 0.0001660840000000...</msg>
<status status="PASS" starttime="20201115 23:01:45.250" endtime="20201115 23:01:45.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.293" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.290" endtime="20201115 23:01:45.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.298" level="INFO">VALUE: [0.00016586099999999632, 0.00016573599999999966, 0.00016615300000000222, 0.0001662639999999993, 0.00016595900000000025, 0.000166096999999997, 0.00016572299999999957, 0.00016608400000000384, 0.00016599999999999948, 0.0001669589999999943, 0.00016619400000000145, 0.00016570800000000052, 0.0001658890000000024, 0.0001654310000000006, 0.00016616700000000179, 0.000165611000000003, 0.00016591600000000206, 0.00016527799999999787, 0.00016618100000000136, 0.00016590299999999503, 0.00016615200000000274, 0.00016559700000000344, 0.00016588899999999546, 0.00016618100000000136, 0.00016586200000000273, 0.0001659859999999999, 0.00016619400000000145, 0.00016677799999999937, 0.00016569400000000095, 0.00016611099999999657, 0.00016595900000000025, 0.0001662090000000005, 0.00016573599999999966, 0.00016574999999999923, 0.00016613900000000265, 0.00016618099999999442, 0.0001654169999999941, 0.00016549999999999898, 0.0001657780000000053, 0.00016643000000000213, 0.00016558400000000334, 0.00016626299999999983, 0.00016573599999999966, 0.0001660690000000048, 0.0001657639999999988, 0.00016536200000000223, 0.00016611099999999657, 0.00016605500000000523, 0.0001654859999999994, 0.00016577799999999837]</msg>
<status status="PASS" starttime="20201115 23:01:45.295" endtime="20201115 23:01:45.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.284" endtime="20201115 23:01:45.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.307" endtime="20201115 23:01:45.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.316" endtime="20201115 23:01:45.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.311" endtime="20201115 23:01:45.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.302" endtime="20201115 23:01:45.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.773" endtime="20201115 23:01:45.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.769" endtime="20201115 23:01:45.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.767" endtime="20201115 23:01:45.343"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.348" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.370" endtime="20201115 23:01:45.395"></status>
</kw>
<msg timestamp="20201115 23:01:45.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.367" endtime="20201115 23:01:45.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.399" endtime="20201115 23:01:45.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.405" endtime="20201115 23:01:45.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.359" endtime="20201115 23:01:45.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.354" endtime="20201115 23:01:45.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.429" endtime="20201115 23:01:45.777"></status>
</kw>
<msg timestamp="20201115 23:01:45.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046187667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:45.425" endtime="20201115 23:01:45.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046187667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:45.786" endtime="20201115 23:01:45.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.805" endtime="20201115 23:01:45.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.418" endtime="20201115 23:01:45.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.413" endtime="20201115 23:01:45.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.824" level="INFO">${RESULT} = [{'time': 0.046187667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016666700000000229, 'source_diff': 0.00016666700000000229}, {'time': 0.046361222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:45.815" endtime="20201115 23:01:45.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.855" level="INFO">${ACCURACY} = {'source_diff': [0.00016666700000000229, 0.00016780500000000004, 0.0001669860000000009, 0.00016649999999999998, 0.0001678059999999995, 0.00016713900000000365, 0.00016694500000000168, 0.000167124999999...</msg>
<status status="PASS" starttime="20201115 23:01:45.826" endtime="20201115 23:01:45.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.866" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.864" endtime="20201115 23:01:45.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.871" level="INFO">VALUE: [0.00016666700000000229, 0.00016780500000000004, 0.0001669860000000009, 0.00016649999999999998, 0.0001678059999999995, 0.00016713900000000365, 0.00016694500000000168, 0.00016712499999999714, 0.00016652800000000606, 0.00016762499999999764, 0.00016706999999999833, 0.00016679199999999894, 0.0001670560000000057, 0.0001666660000000028, 0.00016668000000000238, 0.00016715300000000322, 0.00016788899999999746, 0.000166709000000001, 0.00016647200000000084, 0.00016684699999999775, 0.0001662780000000058, 0.00016636100000000376, 0.00016701400000000005, 0.0001666389999999962, 0.00016629199999999844, 0.00016722300000000107, 0.00016645900000000075, 0.00016633299999999768, 0.00016666699999999535, 0.00016687500000000383, 0.00016773600000000166, 0.00016666700000000229, 0.00016645799999999433, 0.00016695799999999483, 0.00016654200000000563, 0.000166402000000003, 0.00016777800000000037, 0.00016723600000000116, 0.00016651399999999955, 0.0001670839999999979, 0.00016649999999999998, 0.00016680499999999904, 0.00016624999999999973, 0.00016701300000000058, 0.0001667220000000011, 0.000167402000000004, 0.0001667639999999998, 0.00016713900000000365, 0.00016662500000000358, 0.00016633299999999768]</msg>
<status status="PASS" starttime="20201115 23:01:45.868" endtime="20201115 23:01:45.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.857" endtime="20201115 23:01:45.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.881" endtime="20201115 23:01:45.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.890" endtime="20201115 23:01:45.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.885" endtime="20201115 23:01:45.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.876" endtime="20201115 23:01:45.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.350" endtime="20201115 23:01:45.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.346" endtime="20201115 23:01:45.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.344" endtime="20201115 23:01:45.917"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.945" endtime="20201115 23:01:45.970"></status>
</kw>
<msg timestamp="20201115 23:01:45.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.941" endtime="20201115 23:01:45.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.973" endtime="20201115 23:01:45.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.980" endtime="20201115 23:01:45.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.934" endtime="20201115 23:01:45.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.928" endtime="20201115 23:01:45.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.005" endtime="20201115 23:01:46.354"></status>
</kw>
<msg timestamp="20201115 23:01:46.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046764542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.002" endtime="20201115 23:01:46.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046596486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046764542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.363" endtime="20201115 23:01:46.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.382" endtime="20201115 23:01:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.994" endtime="20201115 23:01:46.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.989" endtime="20201115 23:01:46.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.399" level="INFO">${RESULT} = [{'time': 0.046764542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016805599999999976, 'source_diff': 0.00016805599999999976}, {'time': 0.046939083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:46.391" endtime="20201115 23:01:46.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.430" level="INFO">${ACCURACY} = {'source_diff': [0.00016805599999999976, 0.0001682640000000013, 0.00016806899999999986, 0.00016770799999999558, 0.00016783399999999865, 0.00016734699999999825, 0.0001679310000000031, 0.000167625000000...</msg>
<status status="PASS" starttime="20201115 23:01:46.402" endtime="20201115 23:01:46.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.441" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.439" endtime="20201115 23:01:46.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.448" level="INFO">VALUE: [0.00016805599999999976, 0.0001682640000000013, 0.00016806899999999986, 0.00016770799999999558, 0.00016783399999999865, 0.00016734699999999825, 0.0001679310000000031, 0.00016762500000000458, 0.0001681389999999977, 0.0001678749999999979, 0.0001679310000000031, 0.00016866599999999787, 0.00016737500000000433, 0.00016743099999999567, 0.0001687499999999953, 0.00016795800000000277, 0.0001675980000000049, 0.0001675549999999998, 0.0001681389999999977, 0.00016862500000000558, 0.00016759700000000544, 0.00016783300000000612, 0.0001679719999999954, 0.0001677640000000008, 0.00016801400000000105, 0.00016740300000000347, 0.00016820800000000302, 0.00016741700000000304, 0.0001679860000000019, 0.00016765299999999678, 0.0001679860000000019, 0.00016779199999999994, 0.00016811099999999857, 0.0001677640000000008, 0.0001679020000000045, 0.0001682640000000013, 0.0001680839999999989, 0.00016770800000000252, 0.00016795800000000277, 0.00016733300000000562, 0.00016850000000000198, 0.00016820799999999608, 0.00016808299999999943, 0.0001678749999999979, 0.0001676949999999955, 0.0001688749999999989, 0.00016890299999999803, 0.00016811200000000498, 0.00016727799999999987, 0.00016756999999999883]</msg>
<status status="PASS" starttime="20201115 23:01:46.444" endtime="20201115 23:01:46.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.432" endtime="20201115 23:01:46.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.457" endtime="20201115 23:01:46.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.465" endtime="20201115 23:01:46.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.461" endtime="20201115 23:01:46.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.452" endtime="20201115 23:01:46.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.924" endtime="20201115 23:01:46.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.919" endtime="20201115 23:01:46.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.918" endtime="20201115 23:01:46.492"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.497" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.519" endtime="20201115 23:01:46.544"></status>
</kw>
<msg timestamp="20201115 23:01:46.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.516" endtime="20201115 23:01:46.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.548" endtime="20201115 23:01:46.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.554" endtime="20201115 23:01:46.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.508" endtime="20201115 23:01:46.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.503" endtime="20201115 23:01:46.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.578" endtime="20201115 23:01:46.924"></status>
</kw>
<msg timestamp="20201115 23:01:46.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046030431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046199403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.574" endtime="20201115 23:01:46.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046030431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046199403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.934" endtime="20201115 23:01:46.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.953" endtime="20201115 23:01:46.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.567" endtime="20201115 23:01:46.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.562" endtime="20201115 23:01:46.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.972" level="INFO">${RESULT} = [{'time': 0.046199403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016897200000000334, 'source_diff': 0.00016897200000000334}, {'time': 0.046378917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:46.963" endtime="20201115 23:01:46.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.004" level="INFO">${ACCURACY} = {'source_diff': [0.00016897200000000334, 0.00016850000000000198, 0.00016879100000000147, 0.0001683190000000001, 0.0001684440000000037, 0.00016886099999999932, 0.0001691389999999987, 0.0001696390000000...</msg>
<status status="PASS" starttime="20201115 23:01:46.975" endtime="20201115 23:01:47.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.016" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.013" endtime="20201115 23:01:47.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.022" level="INFO">VALUE: [0.00016897200000000334, 0.00016850000000000198, 0.00016879100000000147, 0.0001683190000000001, 0.0001684440000000037, 0.00016886099999999932, 0.0001691389999999987, 0.00016963900000000615, 0.00016927800000000187, 0.00016827800000000087, 0.00016916699999999785, 0.00016833299999999968, 0.00016901400000000205, 0.00016976399999999586, 0.00017011100000000057, 0.0001694299999999982, 0.0001689719999999964, 0.00016854099999999428, 0.00016845900000000275, 0.00016888899999999846, 0.0001689299999999977, 0.0001690420000000012, 0.0001688060000000005, 0.00016900000000000248, 0.00016882000000000008, 0.00016850000000000198, 0.00016893099999999717, 0.00016865299999999778, 0.00016850000000000198, 0.0001701389999999997, 0.0001688890000000054, 0.0001689719999999964, 0.00016873700000000214, 0.00016927800000000187, 0.00016918100000000436, 0.0001685420000000007, 0.00016907000000000033, 0.00016847299999999538, 0.00016895799999999683, 0.0001689169999999976, 0.00016866699999999735, 0.00016925000000000273, 0.00016870799999999658, 0.000168693999999997, 0.0001699440000000052, 0.0001684860000000024, 0.0001686389999999982, 0.00016915299999999828, 0.00016884699999999975, 0.0001688890000000054]</msg>
<status status="PASS" starttime="20201115 23:01:47.019" endtime="20201115 23:01:47.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.006" endtime="20201115 23:01:47.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.031" endtime="20201115 23:01:47.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.040" endtime="20201115 23:01:47.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.035" endtime="20201115 23:01:47.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.026" endtime="20201115 23:01:47.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.499" endtime="20201115 23:01:47.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.495" endtime="20201115 23:01:47.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.493" endtime="20201115 23:01:47.067"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.094" endtime="20201115 23:01:47.119"></status>
</kw>
<msg timestamp="20201115 23:01:47.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.091" endtime="20201115 23:01:47.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.123" endtime="20201115 23:01:47.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.129" endtime="20201115 23:01:47.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.084" endtime="20201115 23:01:47.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.077" endtime="20201115 23:01:47.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.153" endtime="20201115 23:01:47.502"></status>
</kw>
<msg timestamp="20201115 23:01:47.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046689194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.150" endtime="20201115 23:01:47.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046519639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046689194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.512" endtime="20201115 23:01:47.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.531" endtime="20201115 23:01:47.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.142" endtime="20201115 23:01:47.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.138" endtime="20201115 23:01:47.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.549" level="INFO">${RESULT} = [{'time': 0.046689194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001695550000000018, 'source_diff': 0.0001695550000000018}, {'time': 0.046867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:47.540" endtime="20201115 23:01:47.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.582" level="INFO">${ACCURACY} = {'source_diff': [0.0001695550000000018, 0.00017000000000000348, 0.00016927800000000187, 0.00016973599999999672, 0.0001701389999999997, 0.00016944399999999776, 0.00016994399999999826, 0.000169806000000...</msg>
<status status="PASS" starttime="20201115 23:01:47.551" endtime="20201115 23:01:47.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.593" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.591" endtime="20201115 23:01:47.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.599" level="INFO">VALUE: [0.0001695550000000018, 0.00017000000000000348, 0.00016927800000000187, 0.00016973599999999672, 0.0001701389999999997, 0.00016944399999999776, 0.00016994399999999826, 0.0001698060000000015, 0.00016929200000000144, 0.0001695550000000018, 0.0001695970000000005, 0.00016982000000000108, 0.00016976399999999586, 0.0001697640000000028, 0.00017020800000000502, 0.00016976399999999586, 0.00016977800000000237, 0.000169693999999998, 0.00016950000000000298, 0.00017105599999999582, 0.00016990299999999903, 0.00016986100000000032, 0.00017075000000000423, 0.00017025000000000373, 0.00016998599999999697, 0.00017059699999999456, 0.00017018099999999842, 0.00016980500000000204, 0.00016986100000000032, 0.000169693999999998, 0.00016948599999999647, 0.0001707640000000038, 0.00016930599999999407, 0.00017022299999999713, 0.0001701519999999998, 0.0001698749999999999, 0.00017005600000000176, 0.00016952800000000212, 0.00017105499999999635, 0.00017020800000000502, 0.0001699299999999987, 0.00016951400000000255, 0.00016929200000000144, 0.00016968099999999792, 0.00016973599999999672, 0.00017113899999999377, 0.00017000000000000348, 0.000169693999999998, 0.00016962499999999964, 0.00017111100000000157]</msg>
<status status="PASS" starttime="20201115 23:01:47.596" endtime="20201115 23:01:47.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.584" endtime="20201115 23:01:47.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.608" endtime="20201115 23:01:47.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.616" endtime="20201115 23:01:47.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.612" endtime="20201115 23:01:47.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.603" endtime="20201115 23:01:47.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.073" endtime="20201115 23:01:47.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.069" endtime="20201115 23:01:47.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.068" endtime="20201115 23:01:47.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.347" endtime="20201115 23:01:47.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.654" endtime="20201115 23:01:47.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.650" endtime="20201115 23:01:47.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.647" endtime="20201115 23:01:47.679"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:52.221" endtime="20201115 23:01:47.680" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:54.201" endtime="20201115 23:01:47.692"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:50.382" endtime="20201115 23:01:47.726"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_samr21-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
