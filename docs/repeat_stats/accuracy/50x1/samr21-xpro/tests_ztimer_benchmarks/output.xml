<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201117 14:46:50.795" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:52.053" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:52.068" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:54.000" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:52.049" endtime="20201117 14:46:54.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.007" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:54.004" endtime="20201117 14:46:54.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.046" endtime="20201117 14:46:54.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.015" endtime="20201117 14:46:54.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.012" endtime="20201117 14:46:54.349"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.381" endtime="20201117 14:46:54.397"></status>
</kw>
<msg timestamp="20201117 14:46:54.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.378" endtime="20201117 14:46:54.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.401" endtime="20201117 14:46:54.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.407" endtime="20201117 14:46:54.412"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.371" endtime="20201117 14:46:54.414"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.365" endtime="20201117 14:46:54.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.361" endtime="20201117 14:46:54.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.423" endtime="20201117 14:46:54.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.419" endtime="20201117 14:46:54.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.359" endtime="20201117 14:46:54.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.357" endtime="20201117 14:46:54.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.429" endtime="20201117 14:46:54.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.354" endtime="20201117 14:46:54.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.435" endtime="20201117 14:46:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.350" endtime="20201117 14:46:54.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:52.042" endtime="20201117 14:46:54.441"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.458" endtime="20201117 14:46:54.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.454" endtime="20201117 14:46:54.481"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.515" endtime="20201117 14:46:54.531"></status>
</kw>
<msg timestamp="20201117 14:46:54.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.512" endtime="20201117 14:46:54.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.535" endtime="20201117 14:46:54.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.545" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:54.541" endtime="20201117 14:46:54.546"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.505" endtime="20201117 14:46:54.548"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.498" endtime="20201117 14:46:54.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.495" endtime="20201117 14:46:54.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:54.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:54.557" endtime="20201117 14:46:54.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.552" endtime="20201117 14:46:54.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.493" endtime="20201117 14:46:54.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.491" endtime="20201117 14:46:54.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.562" endtime="20201117 14:46:54.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.487" endtime="20201117 14:46:54.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.483" endtime="20201117 14:46:54.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.451" endtime="20201117 14:46:54.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.596" endtime="20201117 14:46:54.607"></status>
</kw>
<msg timestamp="20201117 14:46:54.608" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.591" endtime="20201117 14:46:54.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.614" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.610" endtime="20201117 14:46:54.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.616" endtime="20201117 14:46:54.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.581" endtime="20201117 14:46:54.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.574" endtime="20201117 14:46:54.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.636" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:46:54.633" endtime="20201117 14:46:54.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.640" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:46:54.638" endtime="20201117 14:46:54.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.627" endtime="20201117 14:46:54.643"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:54.442" endtime="20201117 14:46:54.645" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:51.065" endtime="20201117 14:46:54.652"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.794" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:54.810" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:56.758" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:54.790" endtime="20201117 14:46:56.760"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:56.765" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:56.762" endtime="20201117 14:46:56.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.786" endtime="20201117 14:46:56.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:56.772" endtime="20201117 14:46:57.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:56.769" endtime="20201117 14:46:57.109"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.141" endtime="20201117 14:46:57.158"></status>
</kw>
<msg timestamp="20201117 14:46:57.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.138" endtime="20201117 14:46:57.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.165" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.161" endtime="20201117 14:46:57.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.172" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:57.168" endtime="20201117 14:46:57.173"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.131" endtime="20201117 14:46:57.175"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.125" endtime="20201117 14:46:57.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.122" endtime="20201117 14:46:57.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:57.185" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:57.184" endtime="20201117 14:46:57.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.179" endtime="20201117 14:46:57.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.120" endtime="20201117 14:46:57.188"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.118" endtime="20201117 14:46:57.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.190" endtime="20201117 14:46:57.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.114" endtime="20201117 14:46:57.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.197" endtime="20201117 14:46:57.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.111" endtime="20201117 14:46:57.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.782" endtime="20201117 14:46:57.203"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.218" endtime="20201117 14:46:57.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.214" endtime="20201117 14:46:57.241"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.276" endtime="20201117 14:46:57.292"></status>
</kw>
<msg timestamp="20201117 14:46:57.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.273" endtime="20201117 14:46:57.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.296" endtime="20201117 14:46:57.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.307" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:57.303" endtime="20201117 14:46:57.308"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.265" endtime="20201117 14:46:57.309"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.258" endtime="20201117 14:46:57.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.255" endtime="20201117 14:46:57.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:57.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:57.318" endtime="20201117 14:46:57.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.314" endtime="20201117 14:46:57.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.253" endtime="20201117 14:46:57.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.252" endtime="20201117 14:46:57.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.323" endtime="20201117 14:46:57.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.247" endtime="20201117 14:46:57.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.243" endtime="20201117 14:46:57.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.211" endtime="20201117 14:46:57.331"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.422" endtime="20201117 14:46:57.440"></status>
</kw>
<msg timestamp="20201117 14:46:57.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.419" endtime="20201117 14:46:57.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.444" endtime="20201117 14:46:57.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.450" endtime="20201117 14:46:57.454"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.411" endtime="20201117 14:46:57.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.345" endtime="20201117 14:46:57.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.475" endtime="20201117 14:46:57.827"></status>
</kw>
<msg timestamp="20201117 14:46:57.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.196152194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.196191361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.471" endtime="20201117 14:46:57.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.196152194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.196191361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:57.837" endtime="20201117 14:46:57.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.856" endtime="20201117 14:46:57.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.464" endtime="20201117 14:46:57.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.458" endtime="20201117 14:46:57.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:57.874" level="INFO">${RESULT} = [{'time': 0.196191361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916700000000661e-05, 'source_diff': 3.916700000000661e-05}, {'time': 0.196263528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:57.865" endtime="20201117 14:46:57.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:57.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:57.877" endtime="20201117 14:46:57.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.918" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:46:57.915" endtime="20201117 14:46:57.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.923" level="INFO">VALUE: [3.916700000000661e-05, 3.949999999999787e-05, 3.883299999998813e-05, 3.888799999998693e-05, 3.8666999999992235e-05, 4.024999999999168e-05, 3.952800000001089e-05, 3.890300000000679e-05, 3.951300000001878e-05, 3.920800000001279e-05, 3.879199999998195e-05, 3.9180999999999244e-05, 3.870799999999841e-05, 3.931999999998159e-05, 4.00549999999833e-05, 3.945799999999222e-05, 3.915300000001398e-05, 3.9138999999993596e-05, 3.90549999999823e-05, 3.861100000002171e-05, 3.8652999999999604e-05, 3.958299999998194e-05, 3.956899999998931e-05, 3.917999999999977e-05, 3.868100000001262e-05, 3.888899999998641e-05, 3.9556000000023905e-05, 3.8818999999995496e-05, 3.952800000001089e-05, 3.904099999998967e-05, 3.8874999999993776e-05, 3.881900000002325e-05, 3.875000000000406e-05, 3.9375000000008153e-05, 3.879200000000971e-05, 3.8597000000001325e-05, 3.949999999999787e-05, 3.868000000001315e-05, 3.894399999998521e-05, 3.954200000000352e-05, 3.869400000000578e-05, 3.897199999999823e-05, 3.8708000000026166e-05, 3.93749999999804e-05, 4.043100000000743e-05, 3.894500000001244e-05, 3.8680999999984866e-05, 3.9152999999986227e-05, 3.877799999998932e-05, 3.94020000000217e-05]</msg>
<status status="PASS" starttime="20201117 14:46:57.920" endtime="20201117 14:46:57.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.908" endtime="20201117 14:46:57.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.932" endtime="20201117 14:46:57.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.941" endtime="20201117 14:46:57.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.937" endtime="20201117 14:46:57.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.927" endtime="20201117 14:46:57.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.341" endtime="20201117 14:46:57.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.336" endtime="20201117 14:46:57.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.335" endtime="20201117 14:46:57.968"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.995" endtime="20201117 14:46:58.012"></status>
</kw>
<msg timestamp="20201117 14:46:58.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.992" endtime="20201117 14:46:58.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.016" endtime="20201117 14:46:58.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.022" endtime="20201117 14:46:58.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.984" endtime="20201117 14:46:58.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.979" endtime="20201117 14:46:58.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.046" endtime="20201117 14:46:58.386"></status>
</kw>
<msg timestamp="20201117 14:46:58.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045617903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045656819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.042" endtime="20201117 14:46:58.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045617903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045656819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.395" endtime="20201117 14:46:58.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.414" endtime="20201117 14:46:58.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.035" endtime="20201117 14:46:58.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.030" endtime="20201117 14:46:58.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.433" level="INFO">${RESULT} = [{'time': 0.045656819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.891599999999995e-05, 'source_diff': 3.891599999999995e-05}, {'time': 0.045727986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:58.424" endtime="20201117 14:46:58.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:58.463" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:58.435" endtime="20201117 14:46:58.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.474" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:46:58.472" endtime="20201117 14:46:58.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.480" level="INFO">VALUE: [3.891599999999995e-05, 3.8832999999995066e-05, 3.89450000000055e-05, 3.947200000000567e-05, 3.944399999999959e-05, 3.929200000000327e-05, 3.9445000000006e-05, 3.877799999999626e-05, 3.9125000000000965e-05, 3.941600000000045e-05, 3.9290999999996856e-05, 3.9416999999999924e-05, 3.988799999999487e-05, 3.8652999999999604e-05, 3.88059999999954e-05, 3.9360999999994706e-05, 4.0403000000001354e-05, 3.875000000000406e-05, 3.9318999999995996e-05, 3.9125000000000965e-05, 3.990200000000138e-05, 3.945799999999916e-05, 3.9111000000001395e-05, 3.902799999999651e-05, 3.9444999999999064e-05, 3.9082999999995316e-05, 3.875000000000406e-05, 3.9444999999999064e-05, 3.895900000000507e-05, 3.917999999999977e-05, 4.022199999999948e-05, 3.858399999999429e-05, 3.9166999999999674e-05, 3.8916999999999424e-05, 3.8652999999999604e-05, 3.943000000000002e-05, 3.882000000000191e-05, 3.899999999999737e-05, 3.9194999999998814e-05, 3.94859999999983e-05, 3.9403000000000354e-05, 3.905600000000259e-05, 3.9125000000000965e-05, 3.9055000000003115e-05, 3.94859999999983e-05, 3.8666999999999174e-05, 3.9027000000003975e-05, 3.94859999999983e-05, 3.8902999999999854e-05, 3.8666999999999174e-05]</msg>
<status status="PASS" starttime="20201117 14:46:58.477" endtime="20201117 14:46:58.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.465" endtime="20201117 14:46:58.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.489" endtime="20201117 14:46:58.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:58.497" endtime="20201117 14:46:58.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.493" endtime="20201117 14:46:58.520"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.484" endtime="20201117 14:46:58.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.974" endtime="20201117 14:46:58.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.970" endtime="20201117 14:46:58.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.969" endtime="20201117 14:46:58.524"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.550" endtime="20201117 14:46:58.567"></status>
</kw>
<msg timestamp="20201117 14:46:58.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.547" endtime="20201117 14:46:58.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:58.570" endtime="20201117 14:46:58.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.576" endtime="20201117 14:46:58.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.540" endtime="20201117 14:46:58.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.534" endtime="20201117 14:46:58.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.601" endtime="20201117 14:46:58.935"></status>
</kw>
<msg timestamp="20201117 14:46:58.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044745764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044786181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.596" endtime="20201117 14:46:58.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:58.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044745764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044786181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:58.945" endtime="20201117 14:46:58.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:58.963" endtime="20201117 14:46:58.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.589" endtime="20201117 14:46:58.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.585" endtime="20201117 14:46:58.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:58.981" level="INFO">${RESULT} = [{'time': 0.044786181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0417000000000924e-05, 'source_diff': 4.0417000000000924e-05}, {'time': 0.044857333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:46:58.972" endtime="20201117 14:46:58.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.011" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:58.983" endtime="20201117 14:46:59.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.022" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.020" endtime="20201117 14:46:59.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.027" level="INFO">VALUE: [4.0417000000000924e-05, 3.9069000000002685e-05, 3.8819000000002435e-05, 3.9430999999999494e-05, 3.869399999999884e-05, 3.944399999999959e-05, 3.877799999999626e-05, 3.9526999999997536e-05, 3.8652999999999604e-05, 3.919500000000575e-05, 4.0416999999993986e-05, 3.873599999999755e-05, 3.891599999999995e-05, 3.8625000000000465e-05, 3.9153000000000104e-05, 3.955599999999615e-05, 3.929199999999633e-05, 3.9083000000002255e-05, 3.8916999999999424e-05, 4.0069000000003685e-05, 3.877799999999626e-05, 3.9375000000001215e-05, 3.9304999999996426e-05, 3.879200000000277e-05, 3.9054999999996176e-05, 4.0403000000001354e-05, 3.898600000000474e-05, 3.8666999999999174e-05, 3.926400000000413e-05, 3.872199999999798e-05, 3.9347000000002075e-05, 3.8708999999997884e-05, 3.991600000000095e-05, 3.926400000000413e-05, 3.954200000000352e-05, 3.8805000000002865e-05, 3.877799999999626e-05, 3.9096999999994886e-05, 3.8639000000000034e-05, 3.8680999999998744e-05, 3.879200000000277e-05, 3.951399999999744e-05, 3.8625000000000465e-05, 3.973599999999855e-05, 3.9347000000002075e-05, 3.929200000000327e-05, 3.869400000000578e-05, 3.9083000000002255e-05, 3.922199999999848e-05, 3.8833000000002005e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.024" endtime="20201117 14:46:59.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.013" endtime="20201117 14:46:59.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.036" endtime="20201117 14:46:59.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.044" endtime="20201117 14:46:59.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.040" endtime="20201117 14:46:59.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.031" endtime="20201117 14:46:59.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.530" endtime="20201117 14:46:59.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.526" endtime="20201117 14:46:59.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:58.524" endtime="20201117 14:46:59.071"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.097" endtime="20201117 14:46:59.114"></status>
</kw>
<msg timestamp="20201117 14:46:59.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.094" endtime="20201117 14:46:59.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.118" endtime="20201117 14:46:59.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.124" endtime="20201117 14:46:59.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.087" endtime="20201117 14:46:59.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.081" endtime="20201117 14:46:59.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.148" endtime="20201117 14:46:59.484"></status>
</kw>
<msg timestamp="20201117 14:46:59.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044882625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.144" endtime="20201117 14:46:59.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044882625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044922097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.493" endtime="20201117 14:46:59.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.512" endtime="20201117 14:46:59.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.137" endtime="20201117 14:46:59.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.133" endtime="20201117 14:46:59.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:46:59.529" level="INFO">${RESULT} = [{'time': 0.044922097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.947199999999873e-05, 'source_diff': 3.947199999999873e-05}, {'time': 0.044993264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:46:59.520" endtime="20201117 14:46:59.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:46:59.561" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:46:59.531" endtime="20201117 14:46:59.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.572" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:46:59.570" endtime="20201117 14:46:59.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.578" level="INFO">VALUE: [3.947199999999873e-05, 4.022199999999948e-05, 3.90980000000013e-05, 3.927799999999676e-05, 3.8666999999999174e-05, 3.9389000000000784e-05, 3.8583000000001755e-05, 3.9389000000000784e-05, 3.917999999999977e-05, 3.9180999999999244e-05, 3.923599999999805e-05, 3.8930999999998994e-05, 3.907000000000216e-05, 3.872199999999798e-05, 3.883400000000148e-05, 3.9083000000002255e-05, 3.8694999999998314e-05, 3.865200000000013e-05, 3.9083000000002255e-05, 4.0375000000002215e-05, 3.943000000000002e-05, 3.8597000000001325e-05, 3.9277000000004225e-05, 3.8694999999998314e-05, 3.8639000000000034e-05, 3.955599999999615e-05, 3.895799999999866e-05, 3.944399999999959e-05, 3.8902999999999854e-05, 3.944399999999959e-05, 3.8583000000001755e-05, 3.9389000000000784e-05, 3.9416999999999924e-05, 3.9568999999996246e-05, 3.9416999999999924e-05, 4.041600000000145e-05, 3.901399999999694e-05, 3.872300000000439e-05, 3.940200000000088e-05, 3.88059999999954e-05, 3.9083000000002255e-05, 3.88059999999954e-05, 3.92780000000037e-05, 3.8582999999994816e-05, 3.972199999999898e-05, 3.9166999999999674e-05, 3.8652999999999604e-05, 3.9375000000001215e-05, 3.9875000000001715e-05, 3.922199999999848e-05]</msg>
<status status="PASS" starttime="20201117 14:46:59.574" endtime="20201117 14:46:59.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.563" endtime="20201117 14:46:59.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.586" endtime="20201117 14:46:59.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:59.595" endtime="20201117 14:46:59.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.590" endtime="20201117 14:46:59.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.582" endtime="20201117 14:46:59.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.077" endtime="20201117 14:46:59.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.073" endtime="20201117 14:46:59.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.072" endtime="20201117 14:46:59.621"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.626" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.655" endtime="20201117 14:46:59.672"></status>
</kw>
<msg timestamp="20201117 14:46:59.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.652" endtime="20201117 14:46:59.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:59.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:59.675" endtime="20201117 14:46:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.682" endtime="20201117 14:46:59.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.637" endtime="20201117 14:46:59.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.632" endtime="20201117 14:46:59.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:59.705" endtime="20201117 14:47:00.039"></status>
</kw>
<msg timestamp="20201117 14:47:00.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052394083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:46:59.702" endtime="20201117 14:47:00.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052394083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052433417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.048" endtime="20201117 14:47:00.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.066" endtime="20201117 14:47:00.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.694" endtime="20201117 14:47:00.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.690" endtime="20201117 14:47:00.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.085" level="INFO">${RESULT} = [{'time': 0.052433417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.933400000000198e-05, 'source_diff': 3.933400000000198e-05}, {'time': 0.052501569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.076" endtime="20201117 14:47:00.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:00.087" endtime="20201117 14:47:00.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.126" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.124" endtime="20201117 14:47:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.132" level="INFO">VALUE: [3.933400000000198e-05, 3.8861000000001145e-05, 3.8847000000001575e-05, 3.926399999999719e-05, 3.974999999999812e-05, 3.951399999999744e-05, 3.948600000000524e-05, 3.94580000000061e-05, 3.957000000000266e-05, 3.943000000000002e-05, 3.904200000000302e-05, 3.952799999999701e-05, 3.91660000000002e-05, 3.8639000000000034e-05, 3.9166999999999674e-05, 3.9374999999994276e-05, 3.8625000000000465e-05, 3.867999999999927e-05, 3.9110999999994456e-05, 3.907000000000216e-05, 3.9416999999999924e-05, 4.0083000000003255e-05, 3.9111000000001395e-05, 3.9361000000001645e-05, 3.893000000000646e-05, 3.9180999999999244e-05, 3.9346999999995136e-05, 3.9458999999998634e-05, 3.86659999999997e-05, 3.9333000000002505e-05, 3.920799999999891e-05, 3.9026999999997036e-05, 3.922200000000542e-05, 3.895799999999866e-05, 3.951399999999744e-05, 3.901399999999694e-05, 3.9166999999999674e-05, 3.8666999999999174e-05, 3.8583000000001755e-05, 3.9125000000000965e-05, 3.954199999999658e-05, 4.0375000000002215e-05, 3.873599999999755e-05, 3.899999999999737e-05, 3.9472999999998204e-05, 3.8818999999995496e-05, 3.9375000000001215e-05, 3.9125000000000965e-05, 3.919500000000575e-05, 3.8694999999998314e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.129" endtime="20201117 14:47:00.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.117" endtime="20201117 14:47:00.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.140" endtime="20201117 14:47:00.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.149" endtime="20201117 14:47:00.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.144" endtime="20201117 14:47:00.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.136" endtime="20201117 14:47:00.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.628" endtime="20201117 14:47:00.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.624" endtime="20201117 14:47:00.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:59.622" endtime="20201117 14:47:00.176"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.203" endtime="20201117 14:47:00.220"></status>
</kw>
<msg timestamp="20201117 14:47:00.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.200" endtime="20201117 14:47:00.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.223" endtime="20201117 14:47:00.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.229" endtime="20201117 14:47:00.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.192" endtime="20201117 14:47:00.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.187" endtime="20201117 14:47:00.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.254" endtime="20201117 14:47:00.587"></status>
</kw>
<msg timestamp="20201117 14:47:00.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.251" endtime="20201117 14:47:00.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045506875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045546333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.597" endtime="20201117 14:47:00.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.615" endtime="20201117 14:47:00.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.243" endtime="20201117 14:47:00.621"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.238" endtime="20201117 14:47:00.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:00.633" level="INFO">${RESULT} = [{'time': 0.045546333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945799999999916e-05, 'source_diff': 3.945799999999916e-05}, {'time': 0.045613472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:00.624" endtime="20201117 14:47:00.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:00.663" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:00.635" endtime="20201117 14:47:00.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.674" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:00.672" endtime="20201117 14:47:00.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.679" level="INFO">VALUE: [3.945799999999916e-05, 3.8791000000003295e-05, 3.970799999999941e-05, 3.879200000000277e-05, 3.8805000000002865e-05, 3.858400000000123e-05, 3.8597000000001325e-05, 3.9319000000002935e-05, 3.8625000000000465e-05, 3.944399999999959e-05, 3.9403000000000354e-05, 4.0222999999998954e-05, 3.9540999999997106e-05, 4.004199999999708e-05, 3.898600000000474e-05, 3.9708999999998884e-05, 3.8861000000001145e-05, 3.952799999999701e-05, 3.8805000000002865e-05, 3.872200000000492e-05, 3.877799999999626e-05, 3.9027000000003975e-05, 3.8611000000000895e-05, 3.8666999999999174e-05, 3.9180999999999244e-05, 3.8818999999995496e-05, 3.877799999999626e-05, 3.9472999999998204e-05, 3.954199999999658e-05, 3.9346999999995136e-05, 3.87780000000032e-05, 3.870799999999841e-05, 3.876400000000363e-05, 4.0389000000001785e-05, 3.9903000000000854e-05, 3.9097000000001825e-05, 3.902800000000345e-05, 3.85980000000008e-05, 3.901400000000388e-05, 3.879199999999583e-05, 3.87780000000032e-05, 3.9360999999994706e-05, 3.9568999999996246e-05, 3.9333000000002505e-05, 3.9361000000001645e-05, 3.888800000000081e-05, 3.9125000000000965e-05, 3.8652999999999604e-05, 3.904200000000302e-05, 3.9125000000000965e-05]</msg>
<status status="PASS" starttime="20201117 14:47:00.676" endtime="20201117 14:47:00.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.665" endtime="20201117 14:47:00.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.689" endtime="20201117 14:47:00.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:00.697" endtime="20201117 14:47:00.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.693" endtime="20201117 14:47:00.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.684" endtime="20201117 14:47:00.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.183" endtime="20201117 14:47:00.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.179" endtime="20201117 14:47:00.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.177" endtime="20201117 14:47:00.723"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.750" endtime="20201117 14:47:00.767"></status>
</kw>
<msg timestamp="20201117 14:47:00.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.747" endtime="20201117 14:47:00.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.770" endtime="20201117 14:47:00.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.776" endtime="20201117 14:47:00.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.740" endtime="20201117 14:47:00.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.734" endtime="20201117 14:47:00.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.800" endtime="20201117 14:47:01.131"></status>
</kw>
<msg timestamp="20201117 14:47:01.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044734833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044774736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:00.796" endtime="20201117 14:47:01.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044734833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044774736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.140" endtime="20201117 14:47:01.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.159" endtime="20201117 14:47:01.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.789" endtime="20201117 14:47:01.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.784" endtime="20201117 14:47:01.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.178" level="INFO">${RESULT} = [{'time': 0.044774736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9903000000000854e-05, 'source_diff': 3.9903000000000854e-05}, {'time': 0.044847917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.169" endtime="20201117 14:47:01.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.211" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:01.180" endtime="20201117 14:47:01.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.223" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.220" endtime="20201117 14:47:01.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.231" level="INFO">VALUE: [3.9903000000000854e-05, 3.8944999999998564e-05, 3.8861000000001145e-05, 3.8652999999999604e-05, 3.8930999999998994e-05, 3.9361000000001645e-05, 3.8889000000000284e-05, 3.8944999999998564e-05, 4.0083000000003255e-05, 3.8804999999995926e-05, 3.8596999999994386e-05, 3.9444999999999064e-05, 3.9290999999996856e-05, 3.9139000000000534e-05, 3.9389000000000784e-05, 3.9861000000002145e-05, 3.8930999999998994e-05, 3.8804999999995926e-05, 3.8625000000000465e-05, 3.901399999999694e-05, 3.9166999999999674e-05, 3.870799999999841e-05, 3.8680999999998744e-05, 3.90980000000013e-05, 3.877799999999626e-05, 3.934800000000155e-05, 3.947300000000514e-05, 3.94859999999983e-05, 3.900000000000431e-05, 3.866700000000611e-05, 3.949999999999787e-05, 3.920799999999891e-05, 3.8652999999999604e-05, 3.9375000000001215e-05, 3.8639000000000034e-05, 3.901400000000388e-05, 3.924999999999762e-05, 3.9040999999996606e-05, 3.894399999999909e-05, 3.89859999999978e-05, 3.9333000000002505e-05, 4.008399999999579e-05, 3.9347000000002075e-05, 3.929199999999633e-05, 3.884800000000105e-05, 3.94859999999983e-05, 3.933400000000198e-05, 3.9347000000002075e-05, 3.909799999999436e-05, 3.9555000000003615e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.226" endtime="20201117 14:47:01.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.213" endtime="20201117 14:47:01.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.241" endtime="20201117 14:47:01.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.252" endtime="20201117 14:47:01.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.247" endtime="20201117 14:47:01.276"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.236" endtime="20201117 14:47:01.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.730" endtime="20201117 14:47:01.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.726" endtime="20201117 14:47:01.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.724" endtime="20201117 14:47:01.281"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.313" endtime="20201117 14:47:01.330"></status>
</kw>
<msg timestamp="20201117 14:47:01.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.309" endtime="20201117 14:47:01.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.334" endtime="20201117 14:47:01.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.340" endtime="20201117 14:47:01.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.301" endtime="20201117 14:47:01.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.294" endtime="20201117 14:47:01.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.363" endtime="20201117 14:47:01.698"></status>
</kw>
<msg timestamp="20201117 14:47:01.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052892736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052931333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.360" endtime="20201117 14:47:01.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052892736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052931333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.707" endtime="20201117 14:47:01.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.726" endtime="20201117 14:47:01.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.353" endtime="20201117 14:47:01.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.348" endtime="20201117 14:47:01.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:01.743" level="INFO">${RESULT} = [{'time': 0.052931333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8596999999994386e-05, 'source_diff': 3.8596999999994386e-05}, {'time': 0.053000486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:01.734" endtime="20201117 14:47:01.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:01.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:01.745" endtime="20201117 14:47:01.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.787" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:01.785" endtime="20201117 14:47:01.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.792" level="INFO">VALUE: [3.8596999999994386e-05, 3.9153000000000104e-05, 3.9445000000006e-05, 3.898600000000474e-05, 3.924999999999762e-05, 3.9153000000000104e-05, 3.924999999999762e-05, 3.8569000000002185e-05, 3.92780000000037e-05, 3.89859999999978e-05, 3.943000000000002e-05, 3.8833000000002005e-05, 3.955600000000309e-05, 3.90980000000013e-05, 4.038799999999537e-05, 3.892999999999952e-05, 3.877799999999626e-05, 3.9403000000000354e-05, 3.907000000000216e-05, 3.86659999999997e-05, 3.8818999999995496e-05, 3.86659999999997e-05, 3.9332999999995566e-05, 3.892999999999952e-05, 3.874999999999712e-05, 3.900000000000431e-05, 3.865200000000013e-05, 3.948600000000524e-05, 3.9305000000003365e-05, 4.0389000000001785e-05, 3.9527000000004475e-05, 3.8790999999996356e-05, 3.882000000000191e-05, 3.9472999999998204e-05, 3.870799999999841e-05, 3.876399999999669e-05, 3.973600000000549e-05, 3.9708999999998884e-05, 3.947200000000567e-05, 3.951400000000438e-05, 4.0208999999999384e-05, 3.872199999999798e-05, 3.895799999999866e-05, 3.911200000000087e-05, 3.9304999999996426e-05, 3.931999999999547e-05, 3.904200000000302e-05, 3.9374999999994276e-05, 4.020799999999991e-05, 3.9403000000000354e-05]</msg>
<status status="PASS" starttime="20201117 14:47:01.789" endtime="20201117 14:47:01.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.778" endtime="20201117 14:47:01.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.801" endtime="20201117 14:47:01.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:01.809" endtime="20201117 14:47:01.831"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.805" endtime="20201117 14:47:01.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.796" endtime="20201117 14:47:01.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.289" endtime="20201117 14:47:01.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.284" endtime="20201117 14:47:01.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.282" endtime="20201117 14:47:01.836"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.841" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.863" endtime="20201117 14:47:01.879"></status>
</kw>
<msg timestamp="20201117 14:47:01.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.859" endtime="20201117 14:47:01.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:01.882" endtime="20201117 14:47:01.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.889" endtime="20201117 14:47:01.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.852" endtime="20201117 14:47:01.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.846" endtime="20201117 14:47:01.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:01.912" endtime="20201117 14:47:02.244"></status>
</kw>
<msg timestamp="20201117 14:47:02.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044832431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:01.908" endtime="20201117 14:47:02.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044832431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.253" endtime="20201117 14:47:02.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.273" endtime="20201117 14:47:02.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.901" endtime="20201117 14:47:02.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.897" endtime="20201117 14:47:02.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.292" level="INFO">${RESULT} = [{'time': 0.044832431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8875000000000715e-05, 'source_diff': 3.8875000000000715e-05}, {'time': 0.044898667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:02.283" endtime="20201117 14:47:02.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:02.294" endtime="20201117 14:47:02.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.333" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.331" endtime="20201117 14:47:02.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.339" level="INFO">VALUE: [3.8875000000000715e-05, 3.868100000000568e-05, 3.9068999999995746e-05, 3.8972999999997704e-05, 3.879200000000277e-05, 3.8930999999998994e-05, 3.8861000000001145e-05, 3.89859999999978e-05, 3.951399999999744e-05, 3.902800000000345e-05, 3.879200000000277e-05, 3.9333000000002505e-05, 3.929199999999633e-05, 3.957000000000266e-05, 3.876400000000363e-05, 3.8625000000000465e-05, 3.857000000000166e-05, 3.8569000000002185e-05, 3.955599999999615e-05, 3.9389000000000784e-05, 4.0069000000003685e-05, 3.8611000000000895e-05, 3.973700000000496e-05, 3.8569000000002185e-05, 3.9166999999999674e-05, 3.9069000000002685e-05, 3.899999999999737e-05, 3.8597000000001325e-05, 3.931999999999547e-05, 3.902799999999651e-05, 3.8597000000001325e-05, 4.023599999999905e-05, 3.9026999999997036e-05, 3.9082999999995316e-05, 3.930600000000284e-05, 3.873599999999755e-05, 3.899999999999737e-05, 3.873599999999755e-05, 3.894399999999909e-05, 3.9041000000003545e-05, 3.9180999999999244e-05, 3.944400000000653e-05, 3.8916999999999424e-05, 3.9153000000000104e-05, 3.873599999999755e-05, 3.952800000000395e-05, 3.8694999999998314e-05, 3.9375000000001215e-05, 3.922199999999848e-05, 3.86659999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.336" endtime="20201117 14:47:02.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.324" endtime="20201117 14:47:02.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.348" endtime="20201117 14:47:02.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.356" endtime="20201117 14:47:02.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.352" endtime="20201117 14:47:02.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.343" endtime="20201117 14:47:02.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.842" endtime="20201117 14:47:02.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.838" endtime="20201117 14:47:02.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.837" endtime="20201117 14:47:02.382"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.388" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.409" endtime="20201117 14:47:02.426"></status>
</kw>
<msg timestamp="20201117 14:47:02.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.406" endtime="20201117 14:47:02.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.429" endtime="20201117 14:47:02.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.436" endtime="20201117 14:47:02.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.399" endtime="20201117 14:47:02.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.393" endtime="20201117 14:47:02.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.460" endtime="20201117 14:47:02.792"></status>
</kw>
<msg timestamp="20201117 14:47:02.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044994347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045033556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.456" endtime="20201117 14:47:02.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044994347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045033556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:02.801" endtime="20201117 14:47:02.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.820" endtime="20201117 14:47:02.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.448" endtime="20201117 14:47:02.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.444" endtime="20201117 14:47:02.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:02.837" level="INFO">${RESULT} = [{'time': 0.045033556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.920900000000532e-05, 'source_diff': 3.920900000000532e-05}, {'time': 0.045100736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:02.828" endtime="20201117 14:47:02.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:02.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:02.839" endtime="20201117 14:47:02.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.878" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:02.876" endtime="20201117 14:47:02.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.884" level="INFO">VALUE: [3.920900000000532e-05, 3.870800000000535e-05, 3.8930999999998994e-05, 3.933400000000198e-05, 3.972200000000592e-05, 3.8875000000000715e-05, 4.0097000000002825e-05, 3.856999999999472e-05, 3.920799999999891e-05, 3.900000000000431e-05, 3.9069000000002685e-05, 3.902800000000345e-05, 3.9903000000000854e-05, 3.880600000000234e-05, 3.923600000000499e-05, 3.8694999999998314e-05, 3.869399999999884e-05, 3.919399999999934e-05, 3.905599999999565e-05, 3.9430999999999494e-05, 3.979200000000377e-05, 3.972199999999898e-05, 3.9152999999993165e-05, 3.919399999999934e-05, 3.856999999999472e-05, 3.944399999999959e-05, 3.8708999999997884e-05, 3.9041000000003545e-05, 4.0360999999995706e-05, 3.924999999999762e-05, 3.8916999999999424e-05, 3.955599999999615e-05, 3.8930999999998994e-05, 3.9194999999998814e-05, 4.0083000000003255e-05, 3.947199999999873e-05, 3.8666999999999174e-05, 3.933400000000198e-05, 3.866600000000664e-05, 3.92780000000037e-05, 3.91660000000002e-05, 3.9153000000000104e-05, 3.8652999999999604e-05, 3.8652999999999604e-05, 3.91660000000002e-05, 3.895900000000507e-05, 3.9180999999999244e-05, 4.0403000000001354e-05, 3.920799999999891e-05, 3.8944999999998564e-05]</msg>
<status status="PASS" starttime="20201117 14:47:02.881" endtime="20201117 14:47:02.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.869" endtime="20201117 14:47:02.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.892" endtime="20201117 14:47:02.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.901" endtime="20201117 14:47:02.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.896" endtime="20201117 14:47:02.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.888" endtime="20201117 14:47:02.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.389" endtime="20201117 14:47:02.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.385" endtime="20201117 14:47:02.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.383" endtime="20201117 14:47:02.927"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.932" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.954" endtime="20201117 14:47:02.971"></status>
</kw>
<msg timestamp="20201117 14:47:02.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.951" endtime="20201117 14:47:02.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.974" endtime="20201117 14:47:02.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.981" endtime="20201117 14:47:02.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.944" endtime="20201117 14:47:02.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.938" endtime="20201117 14:47:02.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.004" endtime="20201117 14:47:03.338"></status>
</kw>
<msg timestamp="20201117 14:47:03.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044859069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.001" endtime="20201117 14:47:03.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044859069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:03.347" endtime="20201117 14:47:03.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.366" endtime="20201117 14:47:03.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.994" endtime="20201117 14:47:03.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.989" endtime="20201117 14:47:03.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.385" level="INFO">${RESULT} = [{'time': 0.044859069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0512999999998967e-05, 'source_diff': 4.0512999999998967e-05}, {'time': 0.044932222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:03.376" endtime="20201117 14:47:03.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.415" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:03.387" endtime="20201117 14:47:03.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.426" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.424" endtime="20201117 14:47:03.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.432" level="INFO">VALUE: [4.0512999999998967e-05, 3.993000000000052e-05, 4.047199999999973e-05, 4.1389000000002785e-05, 3.9639000000001035e-05, 4.026399999999819e-05, 4.1402999999995416e-05, 3.993000000000052e-05, 3.974999999999812e-05, 3.9777000000004725e-05, 4.051399999999844e-05, 3.990199999999444e-05, 3.9680999999999744e-05, 4.04859999999993e-05, 4.033399999999604e-05, 4.069400000000084e-05, 3.9666999999993235e-05, 3.9653000000000604e-05, 4.0181000000000244e-05, 4.0318999999996996e-05, 4.1374999999996276e-05, 3.9667000000000174e-05, 4.0417000000000924e-05, 4.047199999999973e-05, 4.051399999999844e-05, 4.104200000000502e-05, 3.9903000000000854e-05, 3.984800000000205e-05, 3.994399999999315e-05, 3.9847000000002575e-05, 4.0181000000000244e-05, 4.0097000000002825e-05, 4.0375000000002215e-05, 4.052799999999801e-05, 4.0582999999996816e-05, 4.0138999999994596e-05, 3.9639000000001035e-05, 4.0374999999995276e-05, 3.998600000000574e-05, 4.072199999999998e-05, 3.956999999999572e-05, 4.1222999999999954e-05, 4.047199999999973e-05, 4.024999999999862e-05, 4.1403000000002355e-05, 4.025000000000556e-05, 4.1403000000002355e-05, 4.072199999999998e-05, 4.024999999999862e-05, 4.04859999999993e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.429" endtime="20201117 14:47:03.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.417" endtime="20201117 14:47:03.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.440" endtime="20201117 14:47:03.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.449" endtime="20201117 14:47:03.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.444" endtime="20201117 14:47:03.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.436" endtime="20201117 14:47:03.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.934" endtime="20201117 14:47:03.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.930" endtime="20201117 14:47:03.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.928" endtime="20201117 14:47:03.475"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.503" endtime="20201117 14:47:03.520"></status>
</kw>
<msg timestamp="20201117 14:47:03.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.500" endtime="20201117 14:47:03.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:03.523" endtime="20201117 14:47:03.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.529" endtime="20201117 14:47:03.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.492" endtime="20201117 14:47:03.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.486" endtime="20201117 14:47:03.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.553" endtime="20201117 14:47:03.888"></status>
</kw>
<msg timestamp="20201117 14:47:03.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045850931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04589275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:03.549" endtime="20201117 14:47:03.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045850931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04589275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:03.897" endtime="20201117 14:47:03.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.915" endtime="20201117 14:47:03.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.542" endtime="20201117 14:47:03.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.537" endtime="20201117 14:47:03.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:03.933" level="INFO">${RESULT} = [{'time': 0.04589275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1819000000005435e-05, 'source_diff': 4.1819000000005435e-05}, {'time': 0.045965931, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:03.924" endtime="20201117 14:47:03.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:03.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:03.935" endtime="20201117 14:47:03.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.976" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:03.974" endtime="20201117 14:47:03.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:03.982" level="INFO">VALUE: [4.1819000000005435e-05, 4.1195000000000814e-05, 4.1110999999996456e-05, 4.077799999999826e-05, 4.0959000000000134e-05, 4.061200000000237e-05, 4.099999999999937e-05, 4.152799999999901e-05, 4.077799999999826e-05, 4.155599999999815e-05, 4.1374999999996276e-05, 4.101399999999894e-05, 4.0902999999994916e-05, 4.129199999999833e-05, 4.143000000000202e-05, 4.1153000000002105e-05, 4.0611000000002895e-05, 4.173600000000055e-05, 4.0959000000000134e-05, 4.0860999999996206e-05, 4.104199999999808e-05, 4.143000000000202e-05, 4.1444999999994125e-05, 4.1375000000003215e-05, 4.0596999999996386e-05, 4.0861000000003145e-05, 4.070800000000041e-05, 4.129199999999833e-05, 4.1125000000002965e-05, 4.155599999999815e-05, 4.1445000000001064e-05, 4.1083000000004255e-05, 4.0860999999996206e-05, 4.173600000000055e-05, 4.067999999999433e-05, 4.099999999999937e-05, 4.118000000000177e-05, 4.1110999999996456e-05, 4.126399999999919e-05, 4.0610999999995956e-05, 4.1431000000001494e-05, 4.1124999999996026e-05, 4.1431000000001494e-05, 4.0875000000002715e-05, 4.1125000000002965e-05, 4.1222999999999954e-05, 4.1402999999995416e-05, 4.1111000000003395e-05, 4.1554999999998676e-05, 4.056999999999672e-05]</msg>
<status status="PASS" starttime="20201117 14:47:03.979" endtime="20201117 14:47:03.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.967" endtime="20201117 14:47:03.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:03.990" endtime="20201117 14:47:03.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:03.999" endtime="20201117 14:47:04.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.994" endtime="20201117 14:47:04.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.986" endtime="20201117 14:47:04.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.482" endtime="20201117 14:47:04.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.478" endtime="20201117 14:47:04.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:03.476" endtime="20201117 14:47:04.026"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.053" endtime="20201117 14:47:04.070"></status>
</kw>
<msg timestamp="20201117 14:47:04.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.049" endtime="20201117 14:47:04.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.073" endtime="20201117 14:47:04.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.079" endtime="20201117 14:47:04.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.042" endtime="20201117 14:47:04.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.036" endtime="20201117 14:47:04.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.102" endtime="20201117 14:47:04.437"></status>
</kw>
<msg timestamp="20201117 14:47:04.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044933667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.099" endtime="20201117 14:47:04.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044933667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.446" endtime="20201117 14:47:04.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.465" endtime="20201117 14:47:04.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.092" endtime="20201117 14:47:04.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.087" endtime="20201117 14:47:04.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:04.486" level="INFO">${RESULT} = [{'time': 0.044933667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2360999999997706e-05, 'source_diff': 4.2360999999997706e-05}, {'time': 0.045003806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:04.477" endtime="20201117 14:47:04.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:04.516" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:04.488" endtime="20201117 14:47:04.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.527" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:04.525" endtime="20201117 14:47:04.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.532" level="INFO">VALUE: [4.2360999999997706e-05, 4.184799999999711e-05, 4.223600000000105e-05, 4.172200000000098e-05, 4.2195000000001814e-05, 4.247200000000173e-05, 4.233399999999804e-05, 4.2040999999999606e-05, 4.172199999999404e-05, 4.2068999999998746e-05, 4.2903000000003855e-05, 4.2125000000003965e-05, 4.2096999999997886e-05, 4.197199999999429e-05, 4.227799999999976e-05, 4.1667000000002175e-05, 4.2459000000001634e-05, 4.1597000000004325e-05, 4.305599999999965e-05, 4.1639000000003035e-05, 4.177799999999926e-05, 4.2431000000002494e-05, 4.24860000000013e-05, 4.2916999999996486e-05, 4.1624999999996526e-05, 4.243000000000302e-05, 4.294399999999615e-05, 4.1625000000003465e-05, 4.250000000000087e-05, 4.170799999999447e-05, 4.2417000000002925e-05, 4.250000000000087e-05, 4.1639000000003035e-05, 4.2888999999997346e-05, 4.250000000000087e-05, 4.2388999999996846e-05, 4.1638999999996096e-05, 4.170800000000141e-05, 4.200000000000037e-05, 4.167999999999533e-05, 4.1610999999996956e-05, 4.23059999999989e-05, 4.1695000000001314e-05, 4.169400000000184e-05, 4.308399999999879e-05, 4.2568999999999246e-05, 4.182000000000491e-05, 4.1875000000003715e-05, 4.1639000000003035e-05, 4.220800000000191e-05]</msg>
<status status="PASS" starttime="20201117 14:47:04.529" endtime="20201117 14:47:04.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.518" endtime="20201117 14:47:04.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.542" endtime="20201117 14:47:04.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:04.550" endtime="20201117 14:47:04.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.546" endtime="20201117 14:47:04.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.537" endtime="20201117 14:47:04.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.033" endtime="20201117 14:47:04.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.029" endtime="20201117 14:47:04.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.027" endtime="20201117 14:47:04.577"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.604" endtime="20201117 14:47:04.621"></status>
</kw>
<msg timestamp="20201117 14:47:04.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.600" endtime="20201117 14:47:04.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:04.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:04.624" endtime="20201117 14:47:04.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.630" endtime="20201117 14:47:04.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.593" endtime="20201117 14:47:04.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.587" endtime="20201117 14:47:04.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:04.653" endtime="20201117 14:47:04.986"></status>
</kw>
<msg timestamp="20201117 14:47:04.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045127097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.650" endtime="20201117 14:47:04.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045127097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:04.995" endtime="20201117 14:47:05.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.014" endtime="20201117 14:47:05.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.643" endtime="20201117 14:47:05.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.638" endtime="20201117 14:47:05.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.031" level="INFO">${RESULT} = [{'time': 0.045170292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3195000000002814e-05, 'source_diff': 4.3195000000002814e-05}, {'time': 0.045245472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.022" endtime="20201117 14:47:05.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.061" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:05.033" endtime="20201117 14:47:05.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.072" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.070" endtime="20201117 14:47:05.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.084" level="INFO">VALUE: [4.3195000000002814e-05, 4.26660000000037e-05, 4.306999999999922e-05, 4.375000000000212e-05, 4.3013999999994e-05, 4.326400000000119e-05, 4.325000000000162e-05, 4.2832999999999066e-05, 4.2611000000004895e-05, 4.2832999999999066e-05, 4.350000000000187e-05, 4.2846999999998636e-05, 4.3473000000002204e-05, 4.345799999999622e-05, 4.315200000000463e-05, 4.3124999999998026e-05, 4.297200000000223e-05, 4.405600000000065e-05, 4.373600000000255e-05, 4.3209000000002384e-05, 4.2846999999998636e-05, 4.3291000000000857e-05, 4.354200000000058e-05, 4.277800000000026e-05, 4.26660000000037e-05, 4.3167000000003675e-05, 4.352799999999407e-05, 4.3416999999996986e-05, 4.272199999999504e-05, 4.322199999999554e-05, 4.2709000000001884e-05, 4.422200000000348e-05, 4.266599999999676e-05, 4.267999999999633e-05, 4.373600000000255e-05, 4.3444999999996126e-05, 4.2791000000000357e-05, 4.2638999999997096e-05, 4.347200000000273e-05, 4.292999999999658e-05, 4.341599999999751e-05, 4.3167000000003675e-05, 4.320800000000291e-05, 4.2973000000001704e-05, 4.3194999999995876e-05, 4.322200000000248e-05, 4.323599999999511e-05, 4.3888999999998346e-05, 4.2638999999997096e-05, 4.291600000000395e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.075" endtime="20201117 14:47:05.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.063" endtime="20201117 14:47:05.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.093" endtime="20201117 14:47:05.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.102" endtime="20201117 14:47:05.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.097" endtime="20201117 14:47:05.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.089" endtime="20201117 14:47:05.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.583" endtime="20201117 14:47:05.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.579" endtime="20201117 14:47:05.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:04.577" endtime="20201117 14:47:05.128"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.155" endtime="20201117 14:47:05.172"></status>
</kw>
<msg timestamp="20201117 14:47:05.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.152" endtime="20201117 14:47:05.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.175" endtime="20201117 14:47:05.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.181" endtime="20201117 14:47:05.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.144" endtime="20201117 14:47:05.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.139" endtime="20201117 14:47:05.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.205" endtime="20201117 14:47:05.543"></status>
</kw>
<msg timestamp="20201117 14:47:05.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044794444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044838903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.201" endtime="20201117 14:47:05.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044794444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044838903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.553" endtime="20201117 14:47:05.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.571" endtime="20201117 14:47:05.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.194" endtime="20201117 14:47:05.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.190" endtime="20201117 14:47:05.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:05.590" level="INFO">${RESULT} = [{'time': 0.044838903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4458999999996696e-05, 'source_diff': 4.4458999999996696e-05}, {'time': 0.044912097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:05.581" endtime="20201117 14:47:05.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:05.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:05.593" endtime="20201117 14:47:05.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.631" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:05.629" endtime="20201117 14:47:05.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.637" level="INFO">VALUE: [4.4458999999996696e-05, 4.391599999999801e-05, 4.359799999999886e-05, 4.404200000000108e-05, 4.394400000000409e-05, 4.3638999999998096e-05, 4.4360999999999706e-05, 4.4222999999996015e-05, 4.4209000000003384e-05, 4.5430999999998556e-05, 4.420800000000391e-05, 4.372200000000298e-05, 4.380499999999399e-05, 4.404199999999414e-05, 4.370799999999647e-05, 4.384799999999911e-05, 4.4194999999996876e-05, 4.392999999999758e-05, 4.401400000000194e-05, 4.3638999999998096e-05, 4.3610999999998956e-05, 4.395800000000366e-05, 4.399999999999543e-05, 4.4110999999999456e-05, 4.4055000000001177e-05, 4.3874999999998776e-05, 4.445799999999722e-05, 4.40269999999951e-05, 4.3973000000002704e-05, 4.524999999999668e-05, 4.440200000000588e-05, 4.4194999999996876e-05, 4.3888999999998346e-05, 4.4458999999996696e-05, 4.383400000000648e-05, 4.450000000000287e-05, 4.542999999999908e-05, 4.452800000000201e-05, 4.427800000000176e-05, 4.491599999999901e-05, 4.4333000000000566e-05, 4.3680999999996806e-05, 4.543000000000602e-05, 4.402700000000204e-05, 4.4180999999997306e-05, 4.370799999999647e-05, 4.447200000000373e-05, 4.4374999999999276e-05, 4.4402999999998416e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201117 14:47:05.634" endtime="20201117 14:47:05.638"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.622" endtime="20201117 14:47:05.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.646" endtime="20201117 14:47:05.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.654" endtime="20201117 14:47:05.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.649" endtime="20201117 14:47:05.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.641" endtime="20201117 14:47:05.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.135" endtime="20201117 14:47:05.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.131" endtime="20201117 14:47:05.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.129" endtime="20201117 14:47:05.680"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.686" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.707" endtime="20201117 14:47:05.724"></status>
</kw>
<msg timestamp="20201117 14:47:05.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.704" endtime="20201117 14:47:05.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.728" endtime="20201117 14:47:05.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.734" endtime="20201117 14:47:05.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.697" endtime="20201117 14:47:05.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.691" endtime="20201117 14:47:05.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.757" endtime="20201117 14:47:06.091"></status>
</kw>
<msg timestamp="20201117 14:47:06.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045174944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045220083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:05.754" endtime="20201117 14:47:06.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045174944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045220083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.100" endtime="20201117 14:47:06.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.120" endtime="20201117 14:47:06.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.747" endtime="20201117 14:47:06.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.742" endtime="20201117 14:47:06.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.137" level="INFO">${RESULT} = [{'time': 0.045220083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5138999999999596e-05, 'source_diff': 4.5138999999999596e-05}, {'time': 0.04529425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:06.128" endtime="20201117 14:47:06.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.170" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:06.139" endtime="20201117 14:47:06.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.181" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.178" endtime="20201117 14:47:06.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.186" level="INFO">VALUE: [4.5138999999999596e-05, 4.623599999999811e-05, 4.522200000000448e-05, 4.624999999999768e-05, 4.554099999999617e-05, 4.477799999999532e-05, 4.51939999999984e-05, 4.5166999999998736e-05, 4.549999999999693e-05, 4.6416999999999986e-05, 4.500000000000337e-05, 4.5111000000000456e-05, 4.48060000000014e-05, 4.497200000000423e-05, 4.554199999999564e-05, 4.4667000000005175e-05, 4.5583000000001817e-05, 4.497200000000423e-05, 4.5597000000001386e-05, 4.5361000000000706e-05, 4.5097000000000886e-05, 4.4681000000004745e-05, 4.480500000000193e-05, 4.523599999999711e-05, 4.4610999999999956e-05, 4.499999999999643e-05, 4.552800000000301e-05, 4.541599999999951e-05, 4.550000000000387e-05, 4.4847000000000636e-05, 4.461199999999943e-05, 4.497199999999729e-05, 4.459799999999986e-05, 4.476400000000269e-05, 4.549999999999693e-05, 4.501400000000294e-05, 4.5375000000000276e-05, 4.4874999999999776e-05, 4.591600000000001e-05, 4.522199999999754e-05, 4.5097000000000886e-05, 4.527800000000276e-05, 4.4847000000000636e-05, 4.5333000000001566e-05, 4.55139999999965e-05, 4.520799999999797e-05, 4.488799999999987e-05, 4.4903000000005855e-05, 4.54860000000043e-05, 4.609800000000136e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.183" endtime="20201117 14:47:06.187"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.171" endtime="20201117 14:47:06.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.195" endtime="20201117 14:47:06.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.203" endtime="20201117 14:47:06.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.199" endtime="20201117 14:47:06.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.190" endtime="20201117 14:47:06.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.687" endtime="20201117 14:47:06.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.683" endtime="20201117 14:47:06.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.681" endtime="20201117 14:47:06.229"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.234" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.256" endtime="20201117 14:47:06.273"></status>
</kw>
<msg timestamp="20201117 14:47:06.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.253" endtime="20201117 14:47:06.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.277" endtime="20201117 14:47:06.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.283" endtime="20201117 14:47:06.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.246" endtime="20201117 14:47:06.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.240" endtime="20201117 14:47:06.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.307" endtime="20201117 14:47:06.649"></status>
</kw>
<msg timestamp="20201117 14:47:06.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045029847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.303" endtime="20201117 14:47:06.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045029847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.659" endtime="20201117 14:47:06.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.677" endtime="20201117 14:47:06.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.295" endtime="20201117 14:47:06.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.291" endtime="20201117 14:47:06.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:06.696" level="INFO">${RESULT} = [{'time': 0.045029847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.577799999999632e-05, 'source_diff': 4.577799999999632e-05}, {'time': 0.045106, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:06.687" endtime="20201117 14:47:06.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:06.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:06.698" endtime="20201117 14:47:06.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.738" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:06.736" endtime="20201117 14:47:06.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.744" level="INFO">VALUE: [4.577799999999632e-05, 4.5652999999999666e-05, 4.630499999999649e-05, 4.6375000000001276e-05, 4.563800000000062e-05, 4.5583000000001817e-05, 4.649999999999793e-05, 4.620799999999897e-05, 4.6361000000001706e-05, 4.602799999999657e-05, 4.599999999999743e-05, 4.604199999999614e-05, 4.743000000000108e-05, 4.5902999999999916e-05, 4.709699999999595e-05, 4.599999999999743e-05, 4.558299999999488e-05, 4.5652999999999666e-05, 4.627799999999682e-05, 4.595799999999872e-05, 4.6209000000005385e-05, 4.599999999999743e-05, 4.5666999999999236e-05, 4.6319000000003e-05, 4.5625000000000526e-05, 4.58190000000025e-05, 4.6458999999998696e-05, 4.622200000000548e-05, 4.636200000000118e-05, 4.645799999999922e-05, 4.558399999999435e-05, 4.658299999999588e-05, 4.577700000000379e-05, 4.5625000000000526e-05, 4.625000000000462e-05, 4.626399999999725e-05, 4.577800000000326e-05, 4.6180999999999306e-05, 4.690200000000144e-05, 4.598599999999786e-05, 4.652799999999707e-05, 4.6375000000001276e-05, 4.654200000000358e-05, 4.570799999999847e-05, 4.6903000000000916e-05, 4.650000000000487e-05, 4.5737000000004024e-05, 4.6347000000002136e-05, 4.597200000000523e-05, 4.654199999999664e-05]</msg>
<status status="PASS" starttime="20201117 14:47:06.741" endtime="20201117 14:47:06.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.729" endtime="20201117 14:47:06.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.753" endtime="20201117 14:47:06.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:06.762" endtime="20201117 14:47:06.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.757" endtime="20201117 14:47:06.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.749" endtime="20201117 14:47:06.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.236" endtime="20201117 14:47:06.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.232" endtime="20201117 14:47:06.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.230" endtime="20201117 14:47:06.788"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.815" endtime="20201117 14:47:06.834"></status>
</kw>
<msg timestamp="20201117 14:47:06.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.812" endtime="20201117 14:47:06.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:06.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:06.837" endtime="20201117 14:47:06.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.844" endtime="20201117 14:47:06.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.805" endtime="20201117 14:47:06.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.799" endtime="20201117 14:47:06.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:06.868" endtime="20201117 14:47:07.213"></status>
</kw>
<msg timestamp="20201117 14:47:07.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045287875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:06.864" endtime="20201117 14:47:07.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045287875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.223" endtime="20201117 14:47:07.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.241" endtime="20201117 14:47:07.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.857" endtime="20201117 14:47:07.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.853" endtime="20201117 14:47:07.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.259" level="INFO">${RESULT} = [{'time': 0.045287875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.744400000000065e-05, 'source_diff': 4.744400000000065e-05}, {'time': 0.045365056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.250" endtime="20201117 14:47:07.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:07.261" endtime="20201117 14:47:07.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.300" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.298" endtime="20201117 14:47:07.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.305" level="INFO">VALUE: [4.744400000000065e-05, 4.726399999999825e-05, 4.7125000000002026e-05, 4.712499999999509e-05, 4.774999999999918e-05, 4.663800000000162e-05, 4.7431000000000556e-05, 4.7417000000000986e-05, 4.7403000000001416e-05, 4.777799999999832e-05, 4.75139999999985e-05, 4.7139000000001596e-05, 4.7431000000000556e-05, 4.724999999999868e-05, 4.709800000000236e-05, 4.668000000000033e-05, 4.8209000000000446e-05, 4.754199999999764e-05, 4.820800000000097e-05, 4.759699999999645e-05, 4.808299999999738e-05, 4.745800000000022e-05, 4.709699999999595e-05, 4.755599999999721e-05, 4.699999999999843e-05, 4.730500000000443e-05, 4.7208999999999446e-05, 4.695799999999972e-05, 4.7179999999993893e-05, 4.7445000000000126e-05, 4.756899999999731e-05, 4.6861000000002206e-05, 4.73469999999962e-05, 4.7165999999994324e-05, 4.677699999999785e-05, 4.745800000000022e-05, 4.73339999999961e-05, 4.6875000000001776e-05, 4.708400000000279e-05, 4.698599999999886e-05, 4.726400000000519e-05, 4.670799999999947e-05, 4.6903000000000916e-05, 4.6944999999999626e-05, 4.694400000000015e-05, 4.75139999999985e-05, 4.727799999999782e-05, 4.826399999999925e-05, 4.672199999999904e-05, 4.755499999999774e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.302" endtime="20201117 14:47:07.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.291" endtime="20201117 14:47:07.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.314" endtime="20201117 14:47:07.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.322" endtime="20201117 14:47:07.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.318" endtime="20201117 14:47:07.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.310" endtime="20201117 14:47:07.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.795" endtime="20201117 14:47:07.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.791" endtime="20201117 14:47:07.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:06.789" endtime="20201117 14:47:07.349"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.376" endtime="20201117 14:47:07.395"></status>
</kw>
<msg timestamp="20201117 14:47:07.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.373" endtime="20201117 14:47:07.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.399" endtime="20201117 14:47:07.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.405" endtime="20201117 14:47:07.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.365" endtime="20201117 14:47:07.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.360" endtime="20201117 14:47:07.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.428" endtime="20201117 14:47:07.774"></status>
</kw>
<msg timestamp="20201117 14:47:07.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045813431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045861653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.425" endtime="20201117 14:47:07.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045813431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045861653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.784" endtime="20201117 14:47:07.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.802" endtime="20201117 14:47:07.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.418" endtime="20201117 14:47:07.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.413" endtime="20201117 14:47:07.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:07.821" level="INFO">${RESULT} = [{'time': 0.045861653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.822200000000054e-05, 'source_diff': 4.822200000000054e-05}, {'time': 0.045943889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:07.812" endtime="20201117 14:47:07.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:07.851" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:07.823" endtime="20201117 14:47:07.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.862" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:07.860" endtime="20201117 14:47:07.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.868" level="INFO">VALUE: [4.822200000000054e-05, 4.827799999999882e-05, 4.799999999999943e-05, 4.809700000000389e-05, 4.806899999999781e-05, 4.8443999999994714e-05, 4.813899999999566e-05, 4.799999999999943e-05, 4.808299999999738e-05, 4.8415999999995574e-05, 4.8486999999999836e-05, 4.827799999999882e-05, 4.852799999999907e-05, 4.830599999999796e-05, 4.9207999999995033e-05, 4.808299999999738e-05, 4.833299999999763e-05, 4.804199999999814e-05, 4.777799999999832e-05, 4.813899999999566e-05, 4.805499999999824e-05, 4.806999999999728e-05, 4.8195000000000876e-05, 4.876399999999975e-05, 4.876399999999975e-05, 4.807000000000422e-05, 4.848600000000036e-05, 4.912499999999709e-05, 4.805499999999824e-05, 4.815200000000269e-05, 4.840299999999548e-05, 4.7611000000002957e-05, 4.811199999999599e-05, 4.836099999999677e-05, 4.8223000000000016e-05, 4.758300000000382e-05, 4.8403000000002416e-05, 4.818099999999437e-05, 4.85139999999995e-05, 4.759799999999592e-05, 4.829199999999839e-05, 4.858300000000482e-05, 4.7972999999999766e-05, 4.8917000000002486e-05, 4.857000000000472e-05, 4.761099999999602e-05, 4.768000000000133e-05, 4.8153000000002166e-05, 4.8457999999994283e-05, 4.909700000000489e-05]</msg>
<status status="PASS" starttime="20201117 14:47:07.865" endtime="20201117 14:47:07.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.853" endtime="20201117 14:47:07.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.876" endtime="20201117 14:47:07.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:07.885" endtime="20201117 14:47:07.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.880" endtime="20201117 14:47:07.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.872" endtime="20201117 14:47:07.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.356" endtime="20201117 14:47:07.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.352" endtime="20201117 14:47:07.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.350" endtime="20201117 14:47:07.912"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.917" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.939" endtime="20201117 14:47:07.956"></status>
</kw>
<msg timestamp="20201117 14:47:07.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.935" endtime="20201117 14:47:07.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:07.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:07.959" endtime="20201117 14:47:07.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.965" endtime="20201117 14:47:07.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.928" endtime="20201117 14:47:07.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.922" endtime="20201117 14:47:07.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:07.988" endtime="20201117 14:47:08.322"></status>
</kw>
<msg timestamp="20201117 14:47:08.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045692972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:07.985" endtime="20201117 14:47:08.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045692972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.331" endtime="20201117 14:47:08.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.350" endtime="20201117 14:47:08.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.978" endtime="20201117 14:47:08.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.973" endtime="20201117 14:47:08.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.367" level="INFO">${RESULT} = [{'time': 0.045692972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.913899999999666e-05, 'source_diff': 4.913899999999666e-05}, {'time': 0.045775153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.358" endtime="20201117 14:47:08.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.400" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:08.369" endtime="20201117 14:47:08.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.411" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.409" endtime="20201117 14:47:08.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.416" level="INFO">VALUE: [4.913899999999666e-05, 5.038899999999791e-05, 4.96940000000029e-05, 4.897200000000129e-05, 4.937499999999734e-05, 4.900000000000043e-05, 4.956999999999878e-05, 4.931899999999906e-05, 4.9209000000001446e-05, 4.9443999999995714e-05, 4.948600000000136e-05, 4.862499999999659e-05, 4.876399999999975e-05, 4.936100000000471e-05, 4.886100000000421e-05, 4.912499999999709e-05, 4.952800000000007e-05, 4.961100000000496e-05, 4.906999999999828e-05, 4.955499999999974e-05, 4.959700000000539e-05, 4.9167000000002736e-05, 4.8679999999995394e-05, 4.95140000000005e-05, 4.956999999999878e-05, 4.872200000000104e-05, 4.9167000000002736e-05, 4.88469999999977e-05, 4.920899999999451e-05, 4.936099999999777e-05, 4.866600000000276e-05, 4.9167000000002736e-05, 4.947200000000179e-05, 4.9389000000003846e-05, 4.920800000000197e-05, 4.902799999999957e-05, 5.026400000000125e-05, 4.9167000000002736e-05, 4.8681000000001806e-05, 4.866600000000276e-05, 4.88469999999977e-05, 4.906999999999828e-05, 4.86669999999953e-05, 4.9389000000003846e-05, 4.9429999999996144e-05, 4.863899999999616e-05, 5.009699999999895e-05, 4.950000000000093e-05, 5.008299999999938e-05, 4.880500000000593e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.413" endtime="20201117 14:47:08.418"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.402" endtime="20201117 14:47:08.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.426" endtime="20201117 14:47:08.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.434" endtime="20201117 14:47:08.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.430" endtime="20201117 14:47:08.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.421" endtime="20201117 14:47:08.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.918" endtime="20201117 14:47:08.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.914" endtime="20201117 14:47:08.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:07.913" endtime="20201117 14:47:08.460"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.466" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.487" endtime="20201117 14:47:08.507"></status>
</kw>
<msg timestamp="20201117 14:47:08.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.484" endtime="20201117 14:47:08.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.510" endtime="20201117 14:47:08.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.517" endtime="20201117 14:47:08.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.477" endtime="20201117 14:47:08.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.471" endtime="20201117 14:47:08.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.541" endtime="20201117 14:47:08.886"></status>
</kw>
<msg timestamp="20201117 14:47:08.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045311944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045361972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.537" endtime="20201117 14:47:08.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045311944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045361972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.895" endtime="20201117 14:47:08.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.914" endtime="20201117 14:47:08.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.530" endtime="20201117 14:47:08.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.525" endtime="20201117 14:47:08.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.933" level="INFO">${RESULT} = [{'time': 0.045361972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.002800000000057e-05, 'source_diff': 5.002800000000057e-05}, {'time': 0.045440153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:08.924" endtime="20201117 14:47:08.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.963" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:08.935" endtime="20201117 14:47:08.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.973" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.971" endtime="20201117 14:47:08.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.980" level="INFO">VALUE: [5.002800000000057e-05, 5.018099999999637e-05, 4.973600000000161e-05, 5.006999999999928e-05, 4.981899999999956e-05, 5.012500000000503e-05, 5.127800000000182e-05, 4.9709000000001946e-05, 5.111099999999952e-05, 5.033299999999963e-05, 4.9625000000004527e-05, 5.012500000000503e-05, 5.018000000000383e-05, 4.9723000000001516e-05, 4.974999999999424e-05, 5.056999999999978e-05, 4.980599999999946e-05, 5.00270000000011e-05, 5.024999999999474e-05, 4.999999999999449e-05, 5.009800000000536e-05, 5.006999999999928e-05, 5.050000000000193e-05, 5.019499999999594e-05, 5.055600000000021e-05, 5.037499999999834e-05, 5.0443999999996714e-05, 5.047200000000279e-05, 4.96669999999963e-05, 5.052800000000107e-05, 4.976400000000075e-05, 5.1429999999998144e-05, 5.031900000000006e-05, 5.106900000000081e-05, 5.048600000000236e-05, 5.056999999999978e-05, 4.990299999999698e-05, 5.000000000000143e-05, 5.030599999999996e-05, 5.126399999999531e-05, 4.983299999999913e-05, 5.002800000000057e-05, 5.029100000000092e-05, 4.980599999999946e-05, 5.056900000000031e-05, 5.050000000000193e-05, 5.033299999999963e-05, 4.961199999999749e-05, 5.0457999999996284e-05, 5.008299999999938e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.976" endtime="20201117 14:47:08.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.964" endtime="20201117 14:47:08.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.988" endtime="20201117 14:47:08.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:08.997" endtime="20201117 14:47:09.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.992" endtime="20201117 14:47:09.020"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.984" endtime="20201117 14:47:09.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.467" endtime="20201117 14:47:09.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.463" endtime="20201117 14:47:09.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.461" endtime="20201117 14:47:09.023"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.029" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.050" endtime="20201117 14:47:09.069"></status>
</kw>
<msg timestamp="20201117 14:47:09.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.047" endtime="20201117 14:47:09.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.073" endtime="20201117 14:47:09.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.079" endtime="20201117 14:47:09.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.040" endtime="20201117 14:47:09.084"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.034" endtime="20201117 14:47:09.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.102" endtime="20201117 14:47:09.447"></status>
</kw>
<msg timestamp="20201117 14:47:09.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045308861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045360278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.099" endtime="20201117 14:47:09.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045308861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045360278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.457" endtime="20201117 14:47:09.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.475" endtime="20201117 14:47:09.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.092" endtime="20201117 14:47:09.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.087" endtime="20201117 14:47:09.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.493" level="INFO">${RESULT} = [{'time': 0.045360278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.141699999999805e-05, 'source_diff': 5.141699999999805e-05}, {'time': 0.045443444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:09.484" endtime="20201117 14:47:09.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:09.495" endtime="20201117 14:47:09.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.535" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.533" endtime="20201117 14:47:09.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.541" level="INFO">VALUE: [5.141699999999805e-05, 5.0679999999997394e-05, 5.10419999999942e-05, 5.158300000000088e-05, 5.0667000000004236e-05, 5.1193999999997464e-05, 5.065299999999773e-05, 5.091699999999755e-05, 5.1417000000004986e-05, 5.154200000000164e-05, 5.1167000000004736e-05, 5.072200000000304e-05, 5.061099999999902e-05, 5.061099999999902e-05, 5.138899999999891e-05, 5.211100000000052e-05, 5.155599999999427e-05, 5.137499999999934e-05, 5.13340000000001e-05, 5.088899999999841e-05, 5.104200000000114e-05, 5.10270000000021e-05, 5.175000000000318e-05, 5.1471999999996854e-05, 5.059799999999892e-05, 5.062500000000553e-05, 5.152800000000207e-05, 5.108300000000038e-05, 5.059699999999945e-05, 5.147299999999633e-05, 5.177800000000232e-05, 5.1387999999999434e-05, 5.241699999999905e-05, 5.109699999999995e-05, 5.13470000000002e-05, 5.0887999999998934e-05, 5.1235999999996173e-05, 5.2249999999996743e-05, 5.076400000000175e-05, 5.179200000000189e-05, 5.243000000000608e-05, 5.113899999999866e-05, 5.088899999999841e-05, 5.105500000000124e-05, 5.176399999999581e-05, 5.15140000000025e-05, 5.157000000000078e-05, 5.126299999999584e-05, 5.104200000000114e-05, 5.090299999999798e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.538" endtime="20201117 14:47:09.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.526" endtime="20201117 14:47:09.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.551" endtime="20201117 14:47:09.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.559" endtime="20201117 14:47:09.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.555" endtime="20201117 14:47:09.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.546" endtime="20201117 14:47:09.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.030" endtime="20201117 14:47:09.585"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.026" endtime="20201117 14:47:09.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.024" endtime="20201117 14:47:09.586"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.591" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.613" endtime="20201117 14:47:09.630"></status>
</kw>
<msg timestamp="20201117 14:47:09.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.610" endtime="20201117 14:47:09.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.634" endtime="20201117 14:47:09.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.640" endtime="20201117 14:47:09.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.602" endtime="20201117 14:47:09.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.596" endtime="20201117 14:47:09.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.663" endtime="20201117 14:47:09.995"></status>
</kw>
<msg timestamp="20201117 14:47:10.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045056167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045108111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.660" endtime="20201117 14:47:10.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045056167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045108111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.004" endtime="20201117 14:47:10.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.023" endtime="20201117 14:47:10.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.653" endtime="20201117 14:47:10.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.648" endtime="20201117 14:47:10.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.042" level="INFO">${RESULT} = [{'time': 0.045108111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1943999999998214e-05, 'source_diff': 5.1943999999998214e-05}, {'time': 0.045194278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.033" endtime="20201117 14:47:10.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:10.044" endtime="20201117 14:47:10.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.083" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.081" endtime="20201117 14:47:10.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.088" level="INFO">VALUE: [5.1943999999998214e-05, 5.233399999999416e-05, 5.345899999999876e-05, 5.187499999999984e-05, 5.312500000000109e-05, 5.1679999999998394e-05, 5.1901999999999504e-05, 5.1973000000003766e-05, 5.190299999999898e-05, 5.236100000000077e-05, 5.2193999999998464e-05, 5.2513999999996563e-05, 5.236100000000077e-05, 5.243099999999862e-05, 5.256900000000231e-05, 5.175000000000318e-05, 5.237500000000034e-05, 5.255500000000274e-05, 5.2431000000005556e-05, 5.282000000000203e-05, 5.259700000000145e-05, 5.165299999999873e-05, 5.1985999999996924e-05, 5.2445000000005126e-05, 5.325000000000468e-05, 5.3443999999999714e-05, 5.238899999999991e-05, 5.227800000000282e-05, 5.3277999999996883e-05, 5.220899999999751e-05, 5.1653000000005667e-05, 5.3443999999999714e-05, 5.202800000000257e-05, 5.169499999999744e-05, 5.208400000000085e-05, 5.209700000000095e-05, 5.261200000000049e-05, 5.262500000000059e-05, 5.163899999999916e-05, 5.25270000000036e-05, 5.204200000000214e-05, 5.1957999999997784e-05, 5.233300000000163e-05, 5.2471999999997854e-05, 5.245899999999776e-05, 5.231900000000206e-05, 5.179099999999548e-05, 5.257000000000178e-05, 5.2763999999996813e-05, 5.233300000000163e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.085" endtime="20201117 14:47:10.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.074" endtime="20201117 14:47:10.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.097" endtime="20201117 14:47:10.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.105" endtime="20201117 14:47:10.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.101" endtime="20201117 14:47:10.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.092" endtime="20201117 14:47:10.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.593" endtime="20201117 14:47:10.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.589" endtime="20201117 14:47:10.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.587" endtime="20201117 14:47:10.132"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.158" endtime="20201117 14:47:10.176"></status>
</kw>
<msg timestamp="20201117 14:47:10.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.155" endtime="20201117 14:47:10.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.179" endtime="20201117 14:47:10.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.185" endtime="20201117 14:47:10.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.148" endtime="20201117 14:47:10.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.142" endtime="20201117 14:47:10.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.216" endtime="20201117 14:47:10.551"></status>
</kw>
<msg timestamp="20201117 14:47:10.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044946292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044998931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.205" endtime="20201117 14:47:10.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044946292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044998931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.561" endtime="20201117 14:47:10.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.580" endtime="20201117 14:47:10.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.198" endtime="20201117 14:47:10.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.193" endtime="20201117 14:47:10.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.598" level="INFO">${RESULT} = [{'time': 0.044998931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.263900000000016e-05, 'source_diff': 5.263900000000016e-05}, {'time': 0.045080194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:10.589" endtime="20201117 14:47:10.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:10.600" endtime="20201117 14:47:10.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.642" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.640" endtime="20201117 14:47:10.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.647" level="INFO">VALUE: [5.263900000000016e-05, 5.362499999999465e-05, 5.3513999999997564e-05, 5.3416000000000574e-05, 5.269499999999844e-05, 5.331899999999612e-05, 5.279099999999648e-05, 5.307000000000228e-05, 5.355500000000374e-05, 5.4291999999997453e-05, 5.262500000000059e-05, 5.3457999999999284e-05, 5.3513999999997564e-05, 5.306999999999534e-05, 5.336100000000177e-05, 5.358299999999594e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.359700000000245e-05, 5.311100000000152e-05, 5.3527999999997133e-05, 5.35140000000045e-05, 5.329199999999645e-05, 5.3485999999998424e-05, 5.35140000000045e-05, 5.3013999999997063e-05, 5.357000000000278e-05, 5.2999999999997494e-05, 5.268099999999887e-05, 5.26669999999993e-05, 5.2638000000000684e-05, 5.270899999999801e-05, 5.3013999999997063e-05, 5.286100000000127e-05, 5.28470000000017e-05, 5.3221999999998604e-05, 5.312500000000109e-05, 5.312500000000109e-05, 5.284800000000117e-05, 5.305500000000324e-05, 5.263900000000016e-05, 5.336100000000177e-05, 5.386099999999533e-05, 5.2638000000000684e-05, 5.358400000000235e-05, 5.3527999999997133e-05, 5.2695000000005376e-05, 5.340300000000048e-05, 5.259700000000145e-05, 5.28749999999939e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.644" endtime="20201117 14:47:10.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.633" endtime="20201117 14:47:10.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.656" endtime="20201117 14:47:10.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.664" endtime="20201117 14:47:10.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.660" endtime="20201117 14:47:10.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.651" endtime="20201117 14:47:10.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.138" endtime="20201117 14:47:10.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.134" endtime="20201117 14:47:10.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.133" endtime="20201117 14:47:10.691"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.717" endtime="20201117 14:47:10.735"></status>
</kw>
<msg timestamp="20201117 14:47:10.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.714" endtime="20201117 14:47:10.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.738" endtime="20201117 14:47:10.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.745" endtime="20201117 14:47:10.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.707" endtime="20201117 14:47:10.751"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.701" endtime="20201117 14:47:10.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.768" endtime="20201117 14:47:11.103"></status>
</kw>
<msg timestamp="20201117 14:47:11.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044741361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044795236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.765" endtime="20201117 14:47:11.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044741361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044795236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.112" endtime="20201117 14:47:11.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.131" endtime="20201117 14:47:11.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.758" endtime="20201117 14:47:11.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.753" endtime="20201117 14:47:11.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.150" level="INFO">${RESULT} = [{'time': 0.044795236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.387500000000184e-05, 'source_diff': 5.387500000000184e-05}, {'time': 0.044879458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:11.141" endtime="20201117 14:47:11.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:11.152" endtime="20201117 14:47:11.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.191" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.188" endtime="20201117 14:47:11.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.196" level="INFO">VALUE: [5.387500000000184e-05, 5.438899999999497e-05, 5.544500000000119e-05, 5.459700000000345e-05, 5.41670000000008e-05, 5.45549999999978e-05, 5.441700000000105e-05, 5.448600000000636e-05, 5.407000000000328e-05, 5.419499999999994e-05, 5.4208000000000034e-05, 5.412500000000209e-05, 5.434699999999626e-05, 5.3666000000000824e-05, 5.425000000000568e-05, 5.41670000000008e-05, 5.402800000000457e-05, 5.4235999999999174e-05, 5.4777999999998384e-05, 5.440300000000148e-05, 5.509700000000395e-05, 5.419499999999994e-05, 5.458400000000335e-05, 5.3930000000000644e-05, 5.4208000000000034e-05, 5.418100000000037e-05, 5.41670000000008e-05, 5.380500000000399e-05, 5.5249999999999744e-05, 5.4763999999998814e-05, 5.390300000000098e-05, 5.404200000000414e-05, 5.4499999999998994e-05, 5.4221999999999604e-05, 5.4485999999999424e-05, 5.383299999999619e-05, 5.405600000000371e-05, 5.375000000000518e-05, 5.512499999999615e-05, 5.391700000000055e-05, 5.381899999999662e-05, 5.377699999999791e-05, 5.456999999999684e-05, 5.413900000000166e-05, 5.359800000000192e-05, 5.3957999999999784e-05, 5.4194000000000464e-05, 5.4221999999999604e-05, 5.5263999999999314e-05, 5.429200000000439e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.193" endtime="20201117 14:47:11.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.182" endtime="20201117 14:47:11.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.205" endtime="20201117 14:47:11.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.213" endtime="20201117 14:47:11.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.209" endtime="20201117 14:47:11.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.200" endtime="20201117 14:47:11.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.697" endtime="20201117 14:47:11.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.693" endtime="20201117 14:47:11.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.692" endtime="20201117 14:47:11.239"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.245" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.267" endtime="20201117 14:47:11.285"></status>
</kw>
<msg timestamp="20201117 14:47:11.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.264" endtime="20201117 14:47:11.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.288" endtime="20201117 14:47:11.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.294" endtime="20201117 14:47:11.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.256" endtime="20201117 14:47:11.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.250" endtime="20201117 14:47:11.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.317" endtime="20201117 14:47:11.650"></status>
</kw>
<msg timestamp="20201117 14:47:11.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045612014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045666944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.314" endtime="20201117 14:47:11.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045612014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045666944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.660" endtime="20201117 14:47:11.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.679" endtime="20201117 14:47:11.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.307" endtime="20201117 14:47:11.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.302" endtime="20201117 14:47:11.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.696" level="INFO">${RESULT} = [{'time': 0.045666944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4930000000001644e-05, 'source_diff': 5.4930000000001644e-05}, {'time': 0.04575525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:11.687" endtime="20201117 14:47:11.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:11.698" endtime="20201117 14:47:11.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.737" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.735" endtime="20201117 14:47:11.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.743" level="INFO">VALUE: [5.4930000000001644e-05, 5.538899999999597e-05, 5.495900000000026e-05, 5.5194000000001464e-05, 5.6457999999995345e-05, 5.5263999999999314e-05, 5.529200000000539e-05, 5.527800000000582e-05, 5.518100000000137e-05, 5.561100000000402e-05, 5.591700000000255e-05, 5.611099999999758e-05, 5.4958000000000784e-05, 5.481899999999762e-05, 5.56670000000023e-05, 5.486100000000327e-05, 5.488899999999547e-05, 5.5777999999999384e-05, 5.515300000000223e-05, 5.515300000000223e-05, 5.613899999999672e-05, 5.4999999999999494e-05, 5.5180000000001894e-05, 5.472299999999958e-05, 5.4735999999999674e-05, 5.530600000000496e-05, 5.5305999999998023e-05, 5.463899999999522e-05, 5.513900000000266e-05, 5.6471999999994915e-05, 5.5430000000002144e-05, 5.5777999999999384e-05, 5.508400000000385e-05, 5.481999999999709e-05, 5.643099999999568e-05, 5.543100000000162e-05, 5.502800000000557e-05, 5.491700000000155e-05, 5.509799999999648e-05, 5.612499999999715e-05, 5.515300000000223e-05, 5.519500000000094e-05, 5.6249999999993805e-05, 5.508399999999691e-05, 5.643100000000262e-05, 5.480499999999805e-05, 5.612499999999715e-05, 5.480499999999805e-05, 5.49869999999994e-05, 5.490300000000198e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.740" endtime="20201117 14:47:11.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.728" endtime="20201117 14:47:11.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.751" endtime="20201117 14:47:11.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.760" endtime="20201117 14:47:11.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.755" endtime="20201117 14:47:11.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.747" endtime="20201117 14:47:11.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.246" endtime="20201117 14:47:11.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.242" endtime="20201117 14:47:11.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.240" endtime="20201117 14:47:11.787"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.813" endtime="20201117 14:47:11.831"></status>
</kw>
<msg timestamp="20201117 14:47:11.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.810" endtime="20201117 14:47:11.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.834" endtime="20201117 14:47:11.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.841" endtime="20201117 14:47:11.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.803" endtime="20201117 14:47:11.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.797" endtime="20201117 14:47:11.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.864" endtime="20201117 14:47:12.196"></status>
</kw>
<msg timestamp="20201117 14:47:12.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045569931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.861" endtime="20201117 14:47:12.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045569931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.206" endtime="20201117 14:47:12.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.224" endtime="20201117 14:47:12.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.853" endtime="20201117 14:47:12.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.849" endtime="20201117 14:47:12.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.243" level="INFO">${RESULT} = [{'time': 0.045569931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.658399999999841e-05, 'source_diff': 5.658399999999841e-05}, {'time': 0.045654153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.234" endtime="20201117 14:47:12.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.273" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:12.245" endtime="20201117 14:47:12.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.284" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.282" endtime="20201117 14:47:12.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.289" level="INFO">VALUE: [5.658399999999841e-05, 5.640300000000348e-05, 5.6222000000001604e-05, 5.561100000000402e-05, 5.607000000000528e-05, 5.6486000000001424e-05, 5.6014000000000064e-05, 5.729099999999404e-05, 5.5929999999995705e-05, 5.5750000000000244e-05, 5.619500000000194e-05, 5.58340000000046e-05, 5.688899999999747e-05, 5.6208000000002034e-05, 5.659699999999851e-05, 5.652700000000066e-05, 5.6291999999999454e-05, 5.565299999999579e-05, 5.590299999999604e-05, 5.595900000000126e-05, 5.6014000000000064e-05, 5.6791999999999954e-05, 5.709699999999901e-05, 5.607000000000528e-05, 5.6528000000000134e-05, 5.7443999999996775e-05, 5.586099999999733e-05, 5.616699999999586e-05, 5.6486000000001424e-05, 5.7306000000000024e-05, 5.652700000000066e-05, 5.627700000000041e-05, 5.645900000000176e-05, 5.63749999999974e-05, 5.638899999999697e-05, 5.6944000000003214e-05, 5.612500000000409e-05, 5.579200000000589e-05, 5.619500000000194e-05, 5.6264000000000314e-05, 5.6500000000000994e-05, 5.5971999999994415e-05, 5.638899999999697e-05, 5.5805999999998523e-05, 5.5680000000002394e-05, 5.711099999999858e-05, 5.6277999999999884e-05, 5.63470000000052e-05, 5.5665999999995885e-05, 5.636099999999783e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.286" endtime="20201117 14:47:12.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.275" endtime="20201117 14:47:12.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.299" endtime="20201117 14:47:12.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.307" endtime="20201117 14:47:12.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.303" endtime="20201117 14:47:12.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.294" endtime="20201117 14:47:12.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.793" endtime="20201117 14:47:12.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.789" endtime="20201117 14:47:12.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.788" endtime="20201117 14:47:12.334"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.360" endtime="20201117 14:47:12.378"></status>
</kw>
<msg timestamp="20201117 14:47:12.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.357" endtime="20201117 14:47:12.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.381" endtime="20201117 14:47:12.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.388" endtime="20201117 14:47:12.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.350" endtime="20201117 14:47:12.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.344" endtime="20201117 14:47:12.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.411" endtime="20201117 14:47:12.746"></status>
</kw>
<msg timestamp="20201117 14:47:12.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.408" endtime="20201117 14:47:12.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.755" endtime="20201117 14:47:12.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.774" endtime="20201117 14:47:12.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.400" endtime="20201117 14:47:12.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.396" endtime="20201117 14:47:12.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.791" level="INFO">${RESULT} = [{'time': 0.044940139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6819999999999093e-05, 'source_diff': 5.6819999999999093e-05}, {'time': 0.045025333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:12.783" endtime="20201117 14:47:12.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.824" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:12.793" endtime="20201117 14:47:12.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.835" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.833" endtime="20201117 14:47:12.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.841" level="INFO">VALUE: [5.6819999999999093e-05, 5.7165999999997386e-05, 5.7264000000001314e-05, 5.6887999999997996e-05, 5.7292000000000454e-05, 5.684699999999876e-05, 5.7166000000004324e-05, 5.736099999999883e-05, 5.7583999999999413e-05, 5.743100000000362e-05, 5.6943999999996275e-05, 5.680500000000005e-05, 5.694500000000269e-05, 5.73749999999984e-05, 5.736099999999883e-05, 5.759699999999951e-05, 5.758299999999994e-05, 5.7471999999995915e-05, 5.7929999999997706e-05, 5.754099999999429e-05, 5.688899999999747e-05, 5.6791999999999954e-05, 5.7292000000000454e-05, 5.736099999999883e-05, 5.712499999999815e-05, 5.709799999999848e-05, 5.712500000000509e-05, 5.6957999999995845e-05, 5.6819999999999093e-05, 5.695900000000226e-05, 5.663899999999722e-05, 5.73619999999983e-05, 5.7486000000002424e-05, 5.716699999999686e-05, 5.680500000000005e-05, 5.684699999999876e-05, 5.688899999999747e-05, 5.688900000000441e-05, 5.7401999999998066e-05, 5.6722000000002104e-05, 5.6750000000001244e-05, 5.7250000000001744e-05, 5.7042000000000204e-05, 5.720900000000251e-05, 5.6736000000001674e-05, 5.666699999999636e-05, 5.662499999999765e-05, 5.686099999999833e-05, 5.6929999999996705e-05, 5.687500000000484e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.837" endtime="20201117 14:47:12.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.826" endtime="20201117 14:47:12.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.850" endtime="20201117 14:47:12.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.858" endtime="20201117 14:47:12.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.854" endtime="20201117 14:47:12.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.845" endtime="20201117 14:47:12.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.340" endtime="20201117 14:47:12.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.336" endtime="20201117 14:47:12.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.334" endtime="20201117 14:47:12.885"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.890" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.911" endtime="20201117 14:47:12.929"></status>
</kw>
<msg timestamp="20201117 14:47:12.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.908" endtime="20201117 14:47:12.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.933" endtime="20201117 14:47:12.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.939" endtime="20201117 14:47:12.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.901" endtime="20201117 14:47:12.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.895" endtime="20201117 14:47:12.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.962" endtime="20201117 14:47:13.294"></status>
</kw>
<msg timestamp="20201117 14:47:13.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044761597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044820694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.959" endtime="20201117 14:47:13.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044761597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044820694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.304" endtime="20201117 14:47:13.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.322" endtime="20201117 14:47:13.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.951" endtime="20201117 14:47:13.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.947" endtime="20201117 14:47:13.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.341" level="INFO">${RESULT} = [{'time': 0.044820694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.909700000000101e-05, 'source_diff': 5.909700000000101e-05}, {'time': 0.044907889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:13.332" endtime="20201117 14:47:13.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:13.344" endtime="20201117 14:47:13.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.383" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.381" endtime="20201117 14:47:13.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.389" level="INFO">VALUE: [5.909700000000101e-05, 5.7778000000001384e-05, 5.813899999999872e-05, 5.9098000000000483e-05, 5.841699999999811e-05, 5.7652000000005255e-05, 5.8236000000003174e-05, 5.8194000000004464e-05, 5.9263999999996375e-05, 5.870899999999707e-05, 5.763899999999822e-05, 5.8221999999996665e-05, 5.83749999999994e-05, 5.8570000000000844e-05, 5.784699999999976e-05, 5.822300000000308e-05, 5.836099999999983e-05, 5.7665999999997886e-05, 5.8499999999996055e-05, 5.781900000000062e-05, 5.8500000000002994e-05, 5.768100000000387e-05, 5.831900000000112e-05, 5.851299999999615e-05, 5.76949999999965e-05, 5.7915999999998136e-05, 5.7721999999996165e-05, 5.927699999999647e-05, 5.8528000000002134e-05, 5.7943999999997275e-05, 5.784699999999976e-05, 5.8207999999997095e-05, 5.831900000000112e-05, 5.83749999999994e-05, 5.7791999999994015e-05, 5.783300000000019e-05, 5.9222000000004604e-05, 5.8277999999994945e-05, 5.8555999999994335e-05, 5.786099999999933e-05, 5.8194000000004464e-05, 5.8028000000001634e-05, 5.815299999999829e-05, 5.7735999999995735e-05, 5.794499999999675e-05, 5.7915999999998136e-05, 5.7694000000003964e-05, 5.909699999999407e-05, 5.858300000000094e-05, 5.815299999999829e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.385" endtime="20201117 14:47:13.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.374" endtime="20201117 14:47:13.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.397" endtime="20201117 14:47:13.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.405" endtime="20201117 14:47:13.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.401" endtime="20201117 14:47:13.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.393" endtime="20201117 14:47:13.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.891" endtime="20201117 14:47:13.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.887" endtime="20201117 14:47:13.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.886" endtime="20201117 14:47:13.432"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.437" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.459" endtime="20201117 14:47:13.478"></status>
</kw>
<msg timestamp="20201117 14:47:13.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.455" endtime="20201117 14:47:13.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.481" endtime="20201117 14:47:13.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.487" endtime="20201117 14:47:13.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.448" endtime="20201117 14:47:13.493"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.442" endtime="20201117 14:47:13.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.511" endtime="20201117 14:47:13.844"></status>
</kw>
<msg timestamp="20201117 14:47:13.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044885792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.507" endtime="20201117 14:47:13.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044885792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.853" endtime="20201117 14:47:13.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.873" endtime="20201117 14:47:13.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.500" endtime="20201117 14:47:13.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.495" endtime="20201117 14:47:13.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.890" level="INFO">${RESULT} = [{'time': 0.044944972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9179999999998956e-05, 'source_diff': 5.9179999999998956e-05}, {'time': 0.045032208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:13.881" endtime="20201117 14:47:13.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:13.892" endtime="20201117 14:47:13.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.931" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.929" endtime="20201117 14:47:13.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.937" level="INFO">VALUE: [5.9179999999998956e-05, 5.8901999999999566e-05, 5.959700000000151e-05, 5.9584000000001414e-05, 5.865299999999879e-05, 5.9056000000001774e-05, 5.8707999999997595e-05, 6.027699999999747e-05, 5.8985999999996985e-05, 5.8777999999995445e-05, 5.884700000000076e-05, 5.9514000000003564e-05, 5.8735999999996735e-05, 5.8943999999998276e-05, 5.915299999999929e-05, 5.9443999999998776e-05, 5.8637999999999746e-05, 5.913899999999972e-05, 5.863899999999922e-05, 5.8665999999998886e-05, 5.9249999999996805e-05, 5.869500000000444e-05, 5.9277999999995945e-05, 5.8736000000003674e-05, 5.89870000000034e-05, 5.941699999999911e-05, 6.0457999999999346e-05, 5.9250000000003744e-05, 5.979099999999654e-05, 5.9151999999999816e-05, 5.8929999999998706e-05, 5.904100000000273e-05, 5.9429999999999206e-05, 5.9388000000000496e-05, 5.941699999999911e-05, 5.8707999999997595e-05, 5.940299999999954e-05, 5.952699999999672e-05, 5.909700000000101e-05, 5.954099999999629e-05, 5.9264000000003314e-05, 5.931900000000212e-05, 5.9263999999996375e-05, 5.9457999999998346e-05, 5.938899999999997e-05, 5.9556000000002274e-05, 5.913899999999972e-05, 6.029099999999704e-05, 5.9165999999999386e-05, 5.9348000000000734e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.934" endtime="20201117 14:47:13.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.922" endtime="20201117 14:47:13.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.945" endtime="20201117 14:47:13.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.954" endtime="20201117 14:47:13.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.949" endtime="20201117 14:47:13.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.941" endtime="20201117 14:47:13.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.438" endtime="20201117 14:47:13.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.434" endtime="20201117 14:47:13.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.433" endtime="20201117 14:47:13.980"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.985" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.007" endtime="20201117 14:47:14.025"></status>
</kw>
<msg timestamp="20201117 14:47:14.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.004" endtime="20201117 14:47:14.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.028" endtime="20201117 14:47:14.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.034" endtime="20201117 14:47:14.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.996" endtime="20201117 14:47:14.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.991" endtime="20201117 14:47:14.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.058" endtime="20201117 14:47:14.392"></status>
</kw>
<msg timestamp="20201117 14:47:14.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045168917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.054" endtime="20201117 14:47:14.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045168917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045228889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.401" endtime="20201117 14:47:14.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.420" endtime="20201117 14:47:14.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.047" endtime="20201117 14:47:14.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.042" endtime="20201117 14:47:14.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.439" level="INFO">${RESULT} = [{'time': 0.045228889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9971999999998415e-05, 'source_diff': 5.9971999999998415e-05}, {'time': 0.045319111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.430" endtime="20201117 14:47:14.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.468" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:14.441" endtime="20201117 14:47:14.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.479" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.477" endtime="20201117 14:47:14.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.485" level="INFO">VALUE: [5.9971999999998415e-05, 6.033300000000269e-05, 5.9763999999996875e-05, 6.006900000000287e-05, 6.0193999999999526e-05, 6.056900000000337e-05, 6.0777999999997445e-05, 6.034700000000226e-05, 6.115300000000129e-05, 6.0402000000001066e-05, 5.988900000000047e-05, 5.9721999999998165e-05, 5.9805999999995585e-05, 6.140300000000154e-05, 6.0486000000005424e-05, 6.059700000000251e-05, 6.0056000000002774e-05, 6.012500000000115e-05, 5.961100000000108e-05, 6.044499999999925e-05, 5.988900000000047e-05, 6.129200000000445e-05, 6.130499999999761e-05, 6.0471999999998916e-05, 6.129199999999752e-05, 5.9763999999996875e-05, 6.056900000000337e-05, 5.9778000000003384e-05, 5.970899999999807e-05, 5.963900000000022e-05, 6.144400000000078e-05, 6.147199999999992e-05, 6.0236000000005174e-05, 6.0249999999997805e-05, 5.9848000000001234e-05, 6.045899999999882e-05, 6.0541999999996765e-05, 6.0805999999996585e-05, 6.0471999999998916e-05, 6.112500000000215e-05, 6.0264000000004314e-05, 6.00550000000033e-05, 6.0235999999998235e-05, 5.980500000000305e-05, 6.0263999999997375e-05, 6.043099999999968e-05, 5.98750000000009e-05, 6.0014000000004064e-05, 6.0513999999997625e-05, 6.063799999999481e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.482" endtime="20201117 14:47:14.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.470" endtime="20201117 14:47:14.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.494" endtime="20201117 14:47:14.496"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.502" endtime="20201117 14:47:14.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.498" endtime="20201117 14:47:14.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.489" endtime="20201117 14:47:14.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.987" endtime="20201117 14:47:14.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.983" endtime="20201117 14:47:14.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.981" endtime="20201117 14:47:14.528"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.555" endtime="20201117 14:47:14.573"></status>
</kw>
<msg timestamp="20201117 14:47:14.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.552" endtime="20201117 14:47:14.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.576" endtime="20201117 14:47:14.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.583" endtime="20201117 14:47:14.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.545" endtime="20201117 14:47:14.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.539" endtime="20201117 14:47:14.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.607" endtime="20201117 14:47:14.942"></status>
</kw>
<msg timestamp="20201117 14:47:14.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044912833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.603" endtime="20201117 14:47:14.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044912833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.952" endtime="20201117 14:47:14.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.970" endtime="20201117 14:47:14.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.596" endtime="20201117 14:47:14.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.591" endtime="20201117 14:47:14.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.988" level="INFO">${RESULT} = [{'time': 0.044973778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.094499999999975e-05, 'source_diff': 6.094499999999975e-05}, {'time': 0.045067, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:14.979" endtime="20201117 14:47:14.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:14.990" endtime="20201117 14:47:15.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.031" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.029" endtime="20201117 14:47:15.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.037" level="INFO">VALUE: [6.094499999999975e-05, 6.081900000000362e-05, 6.127799999999795e-05, 6.0999999999998555e-05, 6.143099999999374e-05, 6.0763999999997875e-05, 6.088900000000147e-05, 6.180499999999811e-05, 6.152699999999872e-05, 6.134700000000326e-05, 6.0930000000000706e-05, 6.245900000000082e-05, 6.154199999999777e-05, 6.130599999999709e-05, 6.15420000000047e-05, 6.138899999999503e-05, 6.116600000000139e-05, 6.229099999999904e-05, 6.105499999999736e-05, 6.10829999999965e-05, 6.155599999999734e-05, 6.090300000000104e-05, 6.147199999999992e-05, 6.161100000000308e-05, 6.138900000000197e-05, 6.0902000000001566e-05, 6.156899999999743e-05, 6.088900000000147e-05, 6.113900000000172e-05, 6.230600000000502e-05, 6.112499999999521e-05, 6.158300000000394e-05, 6.151399999999863e-05, 6.15279999999982e-05, 6.157000000000384e-05, 6.134700000000326e-05, 6.122199999999967e-05, 6.0806000000003524e-05, 6.13200000000036e-05, 6.068099999999993e-05, 6.176399999999888e-05, 6.141600000000164e-05, 6.162500000000265e-05, 6.063900000000122e-05, 6.1027999999997695e-05, 6.088799999999506e-05, 6.181899999999768e-05, 6.0806000000003524e-05, 6.138799999999556e-05, 6.0735999999998735e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.033" endtime="20201117 14:47:15.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.022" endtime="20201117 14:47:15.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.045" endtime="20201117 14:47:15.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.054" endtime="20201117 14:47:15.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.050" endtime="20201117 14:47:15.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.041" endtime="20201117 14:47:15.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.535" endtime="20201117 14:47:15.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.531" endtime="20201117 14:47:15.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.529" endtime="20201117 14:47:15.081"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.109" endtime="20201117 14:47:15.127"></status>
</kw>
<msg timestamp="20201117 14:47:15.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.105" endtime="20201117 14:47:15.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.130" endtime="20201117 14:47:15.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.136" endtime="20201117 14:47:15.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.098" endtime="20201117 14:47:15.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.092" endtime="20201117 14:47:15.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.160" endtime="20201117 14:47:15.493"></status>
</kw>
<msg timestamp="20201117 14:47:15.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046016014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046078042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.157" endtime="20201117 14:47:15.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046016014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046078042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.503" endtime="20201117 14:47:15.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.521" endtime="20201117 14:47:15.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.150" endtime="20201117 14:47:15.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.145" endtime="20201117 14:47:15.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.540" level="INFO">${RESULT} = [{'time': 0.046078042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.20279999999987e-05, 'source_diff': 6.20279999999987e-05}, {'time': 0.04616925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:15.531" endtime="20201117 14:47:15.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:15.542" endtime="20201117 14:47:15.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.581" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.579" endtime="20201117 14:47:15.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.586" level="INFO">VALUE: [6.20279999999987e-05, 6.259700000000451e-05, 6.195800000000085e-05, 6.226399999999938e-05, 6.206899999999793e-05, 6.250000000000006e-05, 6.294500000000175e-05, 6.204199999999827e-05, 6.261099999999714e-05, 6.193100000000118e-05, 6.259700000000451e-05, 6.245800000000135e-05, 6.197200000000042e-05, 6.222200000000067e-05, 6.240300000000254e-05, 6.227799999999895e-05, 6.183300000000419e-05, 6.211100000000358e-05, 6.24029999999956e-05, 6.261099999999714e-05, 6.222200000000067e-05, 6.244400000000178e-05, 6.162499999999571e-05, 6.238900000000297e-05, 6.245800000000135e-05, 6.168000000000146e-05, 6.277699999999997e-05, 6.183400000000366e-05, 6.234700000000426e-05, 6.233300000000469e-05, 6.211099999999664e-05, 6.191600000000214e-05, 6.238900000000297e-05, 6.22499999999998e-05, 6.173599999999974e-05, 6.201399999999913e-05, 6.208300000000444e-05, 6.165300000000179e-05, 6.186100000000333e-05, 6.313899999999678e-05, 6.295800000000185e-05, 6.213899999999578e-05, 6.197299999999989e-05, 6.251400000000656e-05, 6.252800000000613e-05, 6.25699999999979e-05, 6.345800000000235e-05, 6.241699999999517e-05, 6.204099999999879e-05, 6.256899999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.583" endtime="20201117 14:47:15.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.572" endtime="20201117 14:47:15.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.595" endtime="20201117 14:47:15.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.603" endtime="20201117 14:47:15.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.599" endtime="20201117 14:47:15.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.590" endtime="20201117 14:47:15.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.088" endtime="20201117 14:47:15.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.084" endtime="20201117 14:47:15.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.082" endtime="20201117 14:47:15.635"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.640" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.662" endtime="20201117 14:47:15.680"></status>
</kw>
<msg timestamp="20201117 14:47:15.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.658" endtime="20201117 14:47:15.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.683" endtime="20201117 14:47:15.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.689" endtime="20201117 14:47:15.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.651" endtime="20201117 14:47:15.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.645" endtime="20201117 14:47:15.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.713" endtime="20201117 14:47:16.049"></status>
</kw>
<msg timestamp="20201117 14:47:16.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044950597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045013556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.709" endtime="20201117 14:47:16.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044950597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045013556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.058" endtime="20201117 14:47:16.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.077" endtime="20201117 14:47:16.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.702" endtime="20201117 14:47:16.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.697" endtime="20201117 14:47:16.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.094" level="INFO">${RESULT} = [{'time': 0.045013556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.295900000000132e-05, 'source_diff': 6.295900000000132e-05}, {'time': 0.045104778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.085" endtime="20201117 14:47:16.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:16.096" endtime="20201117 14:47:16.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.135" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.133" endtime="20201117 14:47:16.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.141" level="INFO">VALUE: [6.295900000000132e-05, 6.350000000000106e-05, 6.312500000000415e-05, 6.298600000000099e-05, 6.283299999999825e-05, 6.348600000000149e-05, 6.361099999999814e-05, 6.338899999999703e-05, 6.311200000000405e-05, 6.351400000000063e-05, 6.359699999999857e-05, 6.313899999999678e-05, 6.341600000000364e-05, 6.337499999999746e-05, 6.333399999999823e-05, 6.341700000000311e-05, 6.305499999999936e-05, 6.317999999999602e-05, 6.300000000000056e-05, 6.323600000000124e-05, 6.262500000000365e-05, 6.361099999999814e-05, 6.426399999999444e-05, 6.288900000000347e-05, 6.359699999999857e-05, 6.323600000000124e-05, 6.32500000000008e-05, 6.290300000000304e-05, 6.270900000000107e-05, 6.409699999999907e-05, 6.358300000000594e-05, 6.313900000000372e-05, 6.343100000000268e-05, 6.324999999999387e-05, 6.304199999999927e-05, 6.27500000000003e-05, 6.333299999999875e-05, 6.357000000000584e-05, 6.288900000000347e-05, 6.319399999999559e-05, 6.291600000000314e-05, 6.261099999999714e-05, 6.266600000000289e-05, 6.338900000000397e-05, 6.427800000000095e-05, 6.277699999999997e-05, 6.297299999999395e-05, 6.350000000000106e-05, 6.430600000000009e-05, 6.355499999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.138" endtime="20201117 14:47:16.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.126" endtime="20201117 14:47:16.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.150" endtime="20201117 14:47:16.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.158" endtime="20201117 14:47:16.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.154" endtime="20201117 14:47:16.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.146" endtime="20201117 14:47:16.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.642" endtime="20201117 14:47:16.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.638" endtime="20201117 14:47:16.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.636" endtime="20201117 14:47:16.185"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.190" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.212" endtime="20201117 14:47:16.230"></status>
</kw>
<msg timestamp="20201117 14:47:16.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.208" endtime="20201117 14:47:16.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.233" endtime="20201117 14:47:16.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.239" endtime="20201117 14:47:16.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.201" endtime="20201117 14:47:16.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.195" endtime="20201117 14:47:16.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.262" endtime="20201117 14:47:16.594"></status>
</kw>
<msg timestamp="20201117 14:47:16.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044776403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.259" endtime="20201117 14:47:16.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044776403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044840903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.603" endtime="20201117 14:47:16.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.622" endtime="20201117 14:47:16.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.252" endtime="20201117 14:47:16.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.247" endtime="20201117 14:47:16.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.641" level="INFO">${RESULT} = [{'time': 0.044840903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.450000000000206e-05, 'source_diff': 6.450000000000206e-05}, {'time': 0.044937153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:16.632" endtime="20201117 14:47:16.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.671" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:16.643" endtime="20201117 14:47:16.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.682" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.679" endtime="20201117 14:47:16.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.688" level="INFO">VALUE: [6.450000000000206e-05, 6.372200000000217e-05, 6.416699999999692e-05, 6.431999999999966e-05, 6.42500000000018e-05, 6.373700000000121e-05, 6.388899999999753e-05, 6.39029999999971e-05, 6.431900000000018e-05, 6.40829999999995e-05, 6.388899999999753e-05, 6.416699999999692e-05, 6.373600000000174e-05, 6.45280000000012e-05, 6.44029999999976e-05, 6.452799999999426e-05, 6.423600000000224e-05, 6.545799999999741e-05, 6.356900000000637e-05, 6.456900000000043e-05, 6.458399999999948e-05, 6.415299999999735e-05, 6.438899999999803e-05, 6.363900000000422e-05, 6.376400000000088e-05, 6.455500000000086e-05, 6.369399999999609e-05, 6.424999999999487e-05, 6.545799999999741e-05, 6.40829999999995e-05, 6.529100000000204e-05, 6.481900000000068e-05, 6.404100000000079e-05, 6.394500000000275e-05, 6.45699999999999e-05, 6.384699999999882e-05, 6.367999999999652e-05, 6.381999999999916e-05, 6.361099999999814e-05, 6.419399999999659e-05, 6.420799999999616e-05, 6.45280000000012e-05, 6.443100000000368e-05, 6.40829999999995e-05, 6.441600000000464e-05, 6.40699999999994e-05, 6.406899999999993e-05, 6.454099999999435e-05, 6.530499999999467e-05, 6.37080000000026e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.684" endtime="20201117 14:47:16.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.673" endtime="20201117 14:47:16.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.697" endtime="20201117 14:47:16.699"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.705" endtime="20201117 14:47:16.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.701" endtime="20201117 14:47:16.728"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.692" endtime="20201117 14:47:16.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.191" endtime="20201117 14:47:16.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.187" endtime="20201117 14:47:16.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.186" endtime="20201117 14:47:16.731"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.736" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.758" endtime="20201117 14:47:16.777"></status>
</kw>
<msg timestamp="20201117 14:47:16.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.755" endtime="20201117 14:47:16.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.780" endtime="20201117 14:47:16.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.787" endtime="20201117 14:47:16.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.748" endtime="20201117 14:47:16.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.742" endtime="20201117 14:47:16.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.811" endtime="20201117 14:47:17.147"></status>
</kw>
<msg timestamp="20201117 14:47:17.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045425917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.807" endtime="20201117 14:47:17.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045425917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045491486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.156" endtime="20201117 14:47:17.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.175" endtime="20201117 14:47:17.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.800" endtime="20201117 14:47:17.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.795" endtime="20201117 14:47:17.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.192" level="INFO">${RESULT} = [{'time': 0.045491486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.556899999999449e-05, 'source_diff': 6.556899999999449e-05}, {'time': 0.04558675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:17.183" endtime="20201117 14:47:17.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.225" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:17.195" endtime="20201117 14:47:17.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.236" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.234" endtime="20201117 14:47:17.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.242" level="INFO">VALUE: [6.556899999999449e-05, 6.50280000000017e-05, 6.466700000000436e-05, 6.50559999999939e-05, 6.55280000000022e-05, 6.470899999999613e-05, 6.477800000000145e-05, 6.519499999999706e-05, 6.527699999999553e-05, 6.548600000000349e-05, 6.517999999999802e-05, 6.52080000000041e-05, 6.479100000000154e-05, 6.518099999999749e-05, 6.511099999999964e-05, 6.541699999999817e-05, 6.486099999999939e-05, 6.613899999999978e-05, 6.565299999999885e-05, 6.509799999999955e-05, 6.498599999999605e-05, 6.49159999999982e-05, 6.54159999999987e-05, 6.561100000000014e-05, 6.509700000000007e-05, 6.491600000000514e-05, 6.49029999999981e-05, 6.47779999999945e-05, 6.47359999999958e-05, 6.46950000000035e-05, 6.53479999999998e-05, 6.512499999999921e-05, 6.648600000000449e-05, 6.633300000000175e-05, 6.644399999999884e-05, 6.554200000000177e-05, 6.520900000000357e-05, 6.483399999999973e-05, 6.487499999999896e-05, 6.491699999999767e-05, 6.5583000000001e-05, 6.542999999999827e-05, 6.484699999999982e-05, 6.468000000000446e-05, 6.644499999999831e-05, 6.501400000000213e-05, 6.488899999999853e-05, 6.491699999999767e-05, 6.529200000000152e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.239" endtime="20201117 14:47:17.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.227" endtime="20201117 14:47:17.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.250" endtime="20201117 14:47:17.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.259" endtime="20201117 14:47:17.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.254" endtime="20201117 14:47:17.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.246" endtime="20201117 14:47:17.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.738" endtime="20201117 14:47:17.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.734" endtime="20201117 14:47:17.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.732" endtime="20201117 14:47:17.285"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.290" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.312" endtime="20201117 14:47:17.330"></status>
</kw>
<msg timestamp="20201117 14:47:17.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.309" endtime="20201117 14:47:17.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.333" endtime="20201117 14:47:17.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.340" endtime="20201117 14:47:17.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.301" endtime="20201117 14:47:17.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.296" endtime="20201117 14:47:17.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.363" endtime="20201117 14:47:17.696"></status>
</kw>
<msg timestamp="20201117 14:47:17.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044862028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044927931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.360" endtime="20201117 14:47:17.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044862028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044927931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.706" endtime="20201117 14:47:17.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.725" endtime="20201117 14:47:17.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.352" endtime="20201117 14:47:17.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.348" endtime="20201117 14:47:17.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.744" level="INFO">${RESULT} = [{'time': 0.044927931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.59029999999991e-05, 'source_diff': 6.59029999999991e-05}, {'time': 0.045022153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:17.735" endtime="20201117 14:47:17.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:17.746" endtime="20201117 14:47:17.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.785" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.783" endtime="20201117 14:47:17.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.790" level="INFO">VALUE: [6.59029999999991e-05, 6.566700000000536e-05, 6.637500000000046e-05, 6.612500000000021e-05, 6.569399999999809e-05, 6.649999999999712e-05, 6.745799999999941e-05, 6.595799999999791e-05, 6.581900000000168e-05, 6.6583000000002e-05, 6.663900000000028e-05, 6.654200000000277e-05, 6.623700000000371e-05, 6.715200000000088e-05, 6.608400000000098e-05, 6.649999999999712e-05, 6.604200000000227e-05, 6.608400000000098e-05, 6.650000000000406e-05, 6.60830000000015e-05, 6.619399999999859e-05, 6.655600000000234e-05, 6.62359999999973e-05, 6.647299999999745e-05, 6.587499999999996e-05, 6.651399999999669e-05, 6.615299999999935e-05, 6.647200000000492e-05, 6.636099999999395e-05, 6.617999999999902e-05, 6.562499999999971e-05, 6.573600000000374e-05, 6.588899999999953e-05, 6.609699999999413e-05, 6.587499999999996e-05, 6.727799999999701e-05, 6.647199999999798e-05, 6.698599999999805e-05, 6.615299999999935e-05, 6.574999999999637e-05, 6.636100000000089e-05, 6.619399999999859e-05, 6.638800000000056e-05, 6.588800000000006e-05, 6.715300000000035e-05, 6.604200000000227e-05, 6.60700000000014e-05, 6.57080000000046e-05, 6.57359999999968e-05, 6.605600000000184e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.787" endtime="20201117 14:47:17.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.776" endtime="20201117 14:47:17.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.800" endtime="20201117 14:47:17.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.808" endtime="20201117 14:47:17.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.804" endtime="20201117 14:47:17.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.795" endtime="20201117 14:47:17.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.292" endtime="20201117 14:47:17.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.288" endtime="20201117 14:47:17.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.286" endtime="20201117 14:47:17.835"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.841" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.862" endtime="20201117 14:47:17.880"></status>
</kw>
<msg timestamp="20201117 14:47:17.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.859" endtime="20201117 14:47:17.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.884" endtime="20201117 14:47:17.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.890" endtime="20201117 14:47:17.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.852" endtime="20201117 14:47:17.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.846" endtime="20201117 14:47:17.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.914" endtime="20201117 14:47:18.247"></status>
</kw>
<msg timestamp="20201117 14:47:18.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045306222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045373667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.910" endtime="20201117 14:47:18.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045306222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045373667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.256" endtime="20201117 14:47:18.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.275" endtime="20201117 14:47:18.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.903" endtime="20201117 14:47:18.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.898" endtime="20201117 14:47:18.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.292" level="INFO">${RESULT} = [{'time': 0.045373667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.744499999999931e-05, 'source_diff': 6.744499999999931e-05}, {'time': 0.045470903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.283" endtime="20201117 14:47:18.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:18.294" endtime="20201117 14:47:18.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.333" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.331" endtime="20201117 14:47:18.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.339" level="INFO">VALUE: [6.744499999999931e-05, 6.711100000000164e-05, 6.667999999999952e-05, 6.709699999999513e-05, 6.666599999999995e-05, 6.749999999999812e-05, 6.763900000000128e-05, 6.72500000000048e-05, 6.669399999999909e-05, 6.718099999999949e-05, 6.67359999999978e-05, 6.676399999999694e-05, 6.722199999999873e-05, 6.744499999999931e-05, 6.709800000000155e-05, 6.734700000000232e-05, 6.708399999999504e-05, 6.761200000000162e-05, 6.688800000000106e-05, 6.67359999999978e-05, 6.82500000000058e-05, 6.743099999999974e-05, 6.844500000000031e-05, 6.749999999999812e-05, 6.73480000000018e-05, 6.666699999999942e-05, 6.74030000000006e-05, 6.74030000000006e-05, 6.711100000000164e-05, 6.749999999999812e-05, 6.676400000000388e-05, 6.733300000000275e-05, 6.7583000000003e-05, 6.670899999999813e-05, 6.697199999999848e-05, 6.727799999999701e-05, 6.763899999999434e-05, 6.673600000000474e-05, 6.743000000000027e-05, 6.743000000000027e-05, 6.690200000000063e-05, 6.752799999999726e-05, 6.713900000000078e-05, 6.668099999999899e-05, 6.718099999999949e-05, 6.759699999999563e-05, 6.681899999999574e-05, 6.706999999999547e-05, 6.684699999999488e-05, 6.716699999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.335" endtime="20201117 14:47:18.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.324" endtime="20201117 14:47:18.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.347" endtime="20201117 14:47:18.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.356" endtime="20201117 14:47:18.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.351" endtime="20201117 14:47:18.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.343" endtime="20201117 14:47:18.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.842" endtime="20201117 14:47:18.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.838" endtime="20201117 14:47:18.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.836" endtime="20201117 14:47:18.382"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.387" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.409" endtime="20201117 14:47:18.427"></status>
</kw>
<msg timestamp="20201117 14:47:18.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.405" endtime="20201117 14:47:18.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.430" endtime="20201117 14:47:18.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.437" endtime="20201117 14:47:18.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.398" endtime="20201117 14:47:18.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.392" endtime="20201117 14:47:18.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.461" endtime="20201117 14:47:18.796"></status>
</kw>
<msg timestamp="20201117 14:47:18.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04476675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044834944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:18.457" endtime="20201117 14:47:18.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04476675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044834944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:18.806" endtime="20201117 14:47:18.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.824" endtime="20201117 14:47:18.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.450" endtime="20201117 14:47:18.832"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.445" endtime="20201117 14:47:18.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.844" level="INFO">${RESULT} = [{'time': 0.044834944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.819400000000059e-05, 'source_diff': 6.819400000000059e-05}, {'time': 0.044934153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:18.835" endtime="20201117 14:47:18.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.875" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:18.846" endtime="20201117 14:47:18.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.886" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.884" endtime="20201117 14:47:18.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.891" level="INFO">VALUE: [6.819400000000059e-05, 6.859699999999663e-05, 6.766700000000042e-05, 6.780599999999665e-05, 6.84030000000016e-05, 6.822199999999973e-05, 6.815300000000135e-05, 6.858399999999654e-05, 6.772199999999923e-05, 6.944500000000131e-05, 6.806899999999699e-05, 6.877799999999851e-05, 6.859700000000357e-05, 6.813899999999484e-05, 6.826299999999896e-05, 6.765300000000085e-05, 6.811200000000212e-05, 6.947300000000045e-05, 6.781899999999674e-05, 6.777699999999803e-05, 6.819400000000059e-05, 6.852799999999826e-05, 6.851399999999869e-05, 6.948600000000055e-05, 6.837500000000246e-05, 6.851399999999869e-05, 6.843100000000074e-05, 6.816700000000092e-05, 6.845899999999988e-05, 6.801399999999819e-05, 6.827799999999801e-05, 6.913799999999637e-05, 6.784799999999536e-05, 6.768099999999999e-05, 6.833399999999629e-05, 6.836100000000289e-05, 6.790200000000163e-05, 6.82909999999981e-05, 6.768000000000052e-05, 6.861200000000262e-05, 6.865300000000185e-05, 6.79030000000011e-05, 6.862500000000271e-05, 6.809699999999613e-05, 6.827799999999801e-05, 6.918000000000202e-05, 6.77229999999987e-05, 6.854099999999835e-05, 6.834699999999638e-05, 6.799999999999862e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.888" endtime="20201117 14:47:18.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.877" endtime="20201117 14:47:18.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.900" endtime="20201117 14:47:18.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.909" endtime="20201117 14:47:18.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.904" endtime="20201117 14:47:18.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.896" endtime="20201117 14:47:18.933"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.389" endtime="20201117 14:47:18.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.385" endtime="20201117 14:47:18.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.383" endtime="20201117 14:47:18.935"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.940" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.963" endtime="20201117 14:47:18.981"></status>
</kw>
<msg timestamp="20201117 14:47:18.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.959" endtime="20201117 14:47:18.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.984" endtime="20201117 14:47:18.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.991" endtime="20201117 14:47:18.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.951" endtime="20201117 14:47:18.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.945" endtime="20201117 14:47:18.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.014" endtime="20201117 14:47:19.348"></status>
</kw>
<msg timestamp="20201117 14:47:19.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045688333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045757083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.011" endtime="20201117 14:47:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045688333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045757083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.357" endtime="20201117 14:47:19.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.376" endtime="20201117 14:47:19.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.003" endtime="20201117 14:47:19.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.999" endtime="20201117 14:47:19.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.393" level="INFO">${RESULT} = [{'time': 0.045757083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.874999999999937e-05, 'source_diff': 6.874999999999937e-05}, {'time': 0.045857333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.384" endtime="20201117 14:47:19.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.425" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:19.395" endtime="20201117 14:47:19.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.437" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.434" endtime="20201117 14:47:19.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.442" level="INFO">VALUE: [6.874999999999937e-05, 6.886100000000339e-05, 6.888900000000253e-05, 6.905600000000484e-05, 6.959800000000405e-05, 6.950000000000012e-05, 6.87359999999998e-05, 6.869499999999362e-05, 6.869500000000056e-05, 6.944500000000131e-05, 6.894500000000081e-05, 6.91109999999967e-05, 6.92360000000003e-05, 6.898599999999311e-05, 6.91109999999967e-05, 6.92360000000003e-05, 6.954199999999883e-05, 6.962499999999677e-05, 6.902799999999876e-05, 6.881900000000468e-05, 6.870800000000066e-05, 6.941700000000217e-05, 6.951300000000021e-05, 6.872200000000023e-05, 6.923599999999336e-05, 6.880599999999765e-05, 7.015299999999641e-05, 7.045900000000188e-05, 6.869500000000056e-05, 6.886100000000339e-05, 6.888900000000253e-05, 6.997200000000148e-05, 6.936200000000337e-05, 6.942999999999533e-05, 7.013899999999684e-05, 6.938900000000303e-05, 6.998600000000105e-05, 6.912500000000321e-05, 6.924999999999987e-05, 6.956900000000543e-05, 6.902799999999876e-05, 6.918000000000202e-05, 6.961100000000414e-05, 6.884700000000382e-05, 6.913900000000278e-05, 6.888899999999559e-05, 7.013899999999684e-05, 6.934699999999738e-05, 6.959699999999763e-05, 6.919400000000159e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.439" endtime="20201117 14:47:19.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.427" endtime="20201117 14:47:19.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.451" endtime="20201117 14:47:19.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.459" endtime="20201117 14:47:19.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.455" endtime="20201117 14:47:19.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.446" endtime="20201117 14:47:19.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.942" endtime="20201117 14:47:19.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.938" endtime="20201117 14:47:19.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.936" endtime="20201117 14:47:19.486"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.513" endtime="20201117 14:47:19.531"></status>
</kw>
<msg timestamp="20201117 14:47:19.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.510" endtime="20201117 14:47:19.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.535" endtime="20201117 14:47:19.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.541" endtime="20201117 14:47:19.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.502" endtime="20201117 14:47:19.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.497" endtime="20201117 14:47:19.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.564" endtime="20201117 14:47:19.895"></status>
</kw>
<msg timestamp="20201117 14:47:19.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045529111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045599375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.561" endtime="20201117 14:47:19.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045529111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045599375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.905" endtime="20201117 14:47:19.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.923" endtime="20201117 14:47:19.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.554" endtime="20201117 14:47:19.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.549" endtime="20201117 14:47:19.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.942" level="INFO">${RESULT} = [{'time': 0.045599375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026400000000044e-05, 'source_diff': 7.026400000000044e-05}, {'time': 0.045702611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.934" endtime="20201117 14:47:19.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.972" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:19.944" endtime="20201117 14:47:19.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.983" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.981" endtime="20201117 14:47:19.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.989" level="INFO">VALUE: [7.026400000000044e-05, 7.002799999999976e-05, 7.058299999999906e-05, 7.113799999999837e-05, 6.980599999999865e-05, 7.05689999999995e-05, 6.983299999999831e-05, 6.997300000000095e-05, 7.038899999999709e-05, 7.015299999999641e-05, 6.986100000000439e-05, 7.05559999999994e-05, 6.965300000000285e-05, 6.972200000000123e-05, 7.11109999999987e-05, 6.976399999999994e-05, 7.05559999999994e-05, 7.055499999999992e-05, 6.981899999999874e-05, 7.05559999999994e-05, 7.126400000000144e-05, 7.043000000000327e-05, 7.002700000000028e-05, 7.038899999999709e-05, 7.054100000000035e-05, 7.02360000000013e-05, 7.001400000000019e-05, 7.030599999999915e-05, 7.129200000000058e-05, 7.019400000000259e-05, 7.002799999999976e-05, 7.040199999999719e-05, 6.986100000000439e-05, 7.012500000000421e-05, 7.149999999999518e-05, 6.972200000000123e-05, 6.997200000000148e-05, 6.973700000000027e-05, 7.116599999999751e-05, 7.016699999999598e-05, 7.025000000000087e-05, 7.031999999999872e-05, 7.040299999999666e-05, 7.023599999999436e-05, 6.984700000000482e-05, 7.040299999999666e-05, 7.148600000000255e-05, 7.044400000000284e-05, 7.130600000000015e-05, 7.022200000000173e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.985" endtime="20201117 14:47:19.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.974" endtime="20201117 14:47:19.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.998" endtime="20201117 14:47:20.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.006" endtime="20201117 14:47:20.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.002" endtime="20201117 14:47:20.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.993" endtime="20201117 14:47:20.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.493" endtime="20201117 14:47:20.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.489" endtime="20201117 14:47:20.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.487" endtime="20201117 14:47:20.033"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.038" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.060" endtime="20201117 14:47:20.078"></status>
</kw>
<msg timestamp="20201117 14:47:20.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.056" endtime="20201117 14:47:20.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.081" endtime="20201117 14:47:20.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.088" endtime="20201117 14:47:20.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.049" endtime="20201117 14:47:20.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.043" endtime="20201117 14:47:20.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.111" endtime="20201117 14:47:20.445"></status>
</kw>
<msg timestamp="20201117 14:47:20.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044936792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.108" endtime="20201117 14:47:20.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044865458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044936792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.455" endtime="20201117 14:47:20.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.474" endtime="20201117 14:47:20.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.101" endtime="20201117 14:47:20.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.096" endtime="20201117 14:47:20.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.491" level="INFO">${RESULT} = [{'time': 0.044936792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.133400000000623e-05, 'source_diff': 7.133400000000623e-05}, {'time': 0.045041083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.482" endtime="20201117 14:47:20.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:20.493" endtime="20201117 14:47:20.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.532" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.530" endtime="20201117 14:47:20.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.538" level="INFO">VALUE: [7.133400000000623e-05, 7.120800000000316e-05, 7.07910000000006e-05, 7.14030000000046e-05, 7.137499999999852e-05, 7.120800000000316e-05, 7.07360000000018e-05, 7.149999999999518e-05, 7.117999999999708e-05, 7.138899999999809e-05, 7.14030000000046e-05, 7.10559999999999e-05, 7.151400000000169e-05, 7.083299999999931e-05, 7.154200000000083e-05, 7.138900000000503e-05, 7.148600000000255e-05, 7.158300000000006e-05, 7.15560000000004e-05, 7.075000000000137e-05, 7.095799999999597e-05, 7.097199999999554e-05, 7.120799999999622e-05, 7.140299999999766e-05, 7.14439999999969e-05, 7.108399999999904e-05, 7.109699999999913e-05, 7.138800000000556e-05, 7.083299999999931e-05, 7.069400000000309e-05, 7.087500000000496e-05, 7.248599999999661e-05, 7.190199999999869e-05, 7.081899999999974e-05, 7.063899999999734e-05, 7.120799999999622e-05, 7.162499999999877e-05, 7.212499999999927e-05, 7.147199999999604e-05, 7.162499999999877e-05, 7.183399999999979e-05, 7.116700000000392e-05, 7.087499999999802e-05, 7.162499999999877e-05, 7.116699999999698e-05, 7.091699999999673e-05, 7.097300000000195e-05, 7.118099999999655e-05, 7.162499999999877e-05, 7.161199999999868e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.534" endtime="20201117 14:47:20.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.523" endtime="20201117 14:47:20.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.547" endtime="20201117 14:47:20.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.555" endtime="20201117 14:47:20.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.551" endtime="20201117 14:47:20.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.542" endtime="20201117 14:47:20.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.040" endtime="20201117 14:47:20.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.035" endtime="20201117 14:47:20.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.034" endtime="20201117 14:47:20.582"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.608" endtime="20201117 14:47:20.627"></status>
</kw>
<msg timestamp="20201117 14:47:20.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.605" endtime="20201117 14:47:20.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.630" endtime="20201117 14:47:20.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.636" endtime="20201117 14:47:20.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.598" endtime="20201117 14:47:20.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.592" endtime="20201117 14:47:20.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.660" endtime="20201117 14:47:20.993"></status>
</kw>
<msg timestamp="20201117 14:47:21.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044949639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.656" endtime="20201117 14:47:21.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044949639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045021708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.002" endtime="20201117 14:47:21.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.021" endtime="20201117 14:47:21.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.649" endtime="20201117 14:47:21.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.644" endtime="20201117 14:47:21.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.040" level="INFO">${RESULT} = [{'time': 0.045021708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2069000000001e-05, 'source_diff': 7.2069000000001e-05}, {'time': 0.045122042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201117 14:47:21.031" endtime="20201117 14:47:21.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.076" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:21.048" endtime="20201117 14:47:21.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.087" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.085" endtime="20201117 14:47:21.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.093" level="INFO">VALUE: [7.2069000000001e-05, 7.220900000000363e-05, 7.205500000000142e-05, 7.22360000000033e-05, 7.187500000000596e-05, 7.190299999999816e-05, 7.283300000000131e-05, 7.241699999999823e-05, 7.198599999999611e-05, 7.212499999999927e-05, 7.237499999999952e-05, 7.248599999999661e-05, 7.17360000000028e-05, 7.263899999999934e-05, 7.330500000000267e-05, 7.212499999999927e-05, 7.250000000000312e-05, 7.265299999999891e-05, 7.262499999999977e-05, 7.247300000000345e-05, 7.215199999999894e-05, 7.212499999999927e-05, 7.241699999999823e-05, 7.195900000000338e-05, 7.354199999999589e-05, 7.182000000000022e-05, 7.191699999999773e-05, 7.229200000000158e-05, 7.19030000000051e-05, 7.230499999999473e-05, 7.350000000000412e-05, 7.26110000000002e-05, 7.256899999999455e-05, 7.172200000000323e-05, 7.223599999999636e-05, 7.207000000000047e-05, 7.21109999999997e-05, 7.265299999999891e-05, 7.332000000000172e-05, 7.169400000000409e-05, 7.219399999999765e-05, 7.242999999999833e-05, 7.265299999999891e-05, 7.212499999999927e-05, 7.249999999999618e-05, 7.175000000000237e-05, 7.236099999999995e-05, 7.177800000000151e-05, 7.170899999999619e-05, 7.234799999999986e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.090" endtime="20201117 14:47:21.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.078" endtime="20201117 14:47:21.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.101" endtime="20201117 14:47:21.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.110" endtime="20201117 14:47:21.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.105" endtime="20201117 14:47:21.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.097" endtime="20201117 14:47:21.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.588" endtime="20201117 14:47:21.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.584" endtime="20201117 14:47:21.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.582" endtime="20201117 14:47:21.136"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.141" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.163" endtime="20201117 14:47:21.182"></status>
</kw>
<msg timestamp="20201117 14:47:21.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.160" endtime="20201117 14:47:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.185" endtime="20201117 14:47:21.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.191" endtime="20201117 14:47:21.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.153" endtime="20201117 14:47:21.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.147" endtime="20201117 14:47:21.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.214" endtime="20201117 14:47:21.550"></status>
</kw>
<msg timestamp="20201117 14:47:21.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045053319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.211" endtime="20201117 14:47:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045053319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.560" endtime="20201117 14:47:21.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.579" endtime="20201117 14:47:21.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.204" endtime="20201117 14:47:21.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.199" endtime="20201117 14:47:21.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.596" level="INFO">${RESULT} = [{'time': 0.045126347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.302799999999582e-05, 'source_diff': 7.302799999999582e-05}, {'time': 0.045228625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.587" endtime="20201117 14:47:21.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.629" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:21.599" endtime="20201117 14:47:21.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.640" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.638" endtime="20201117 14:47:21.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.645" level="INFO">VALUE: [7.302799999999582e-05, 7.301400000000319e-05, 7.351400000000369e-05, 7.283400000000079e-05, 7.280599999999471e-05, 7.363800000000087e-05, 7.270799999999772e-05, 7.337500000000052e-05, 7.311099999999376e-05, 7.331999999999478e-05, 7.331999999999478e-05, 7.352799999999632e-05, 7.348599999999761e-05, 7.283299999999437e-05, 7.433299999999587e-05, 7.363900000000034e-05, 7.298599999999711e-05, 7.273699999999633e-05, 7.329199999999564e-05, 7.284699999999394e-05, 7.351399999999675e-05, 7.316699999999898e-05, 7.36110000000012e-05, 7.306999999999453e-05, 7.268099999999805e-05, 7.333299999999487e-05, 7.383300000000231e-05, 7.338900000000009e-05, 7.416699999999998e-05, 7.416699999999998e-05, 7.320799999999822e-05, 7.295899999999744e-05, 7.295799999999797e-05, 7.33189999999953e-05, 7.322199999999779e-05, 7.313899999999984e-05, 7.362500000000077e-05, 7.434700000000238e-05, 7.274999999999643e-05, 7.358299999999512e-05, 7.340299999999966e-05, 7.315299999999941e-05, 7.265299999999891e-05, 7.270800000000466e-05, 7.338900000000009e-05, 7.290299999999916e-05, 7.35969999999947e-05, 7.300000000000362e-05, 7.29309999999983e-05, 7.262499999999977e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.642" endtime="20201117 14:47:21.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.631" endtime="20201117 14:47:21.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.654" endtime="20201117 14:47:21.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.663" endtime="20201117 14:47:21.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.658" endtime="20201117 14:47:21.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.650" endtime="20201117 14:47:21.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.143" endtime="20201117 14:47:21.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.139" endtime="20201117 14:47:21.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.137" endtime="20201117 14:47:21.689"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.715" endtime="20201117 14:47:21.734"></status>
</kw>
<msg timestamp="20201117 14:47:21.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.712" endtime="20201117 14:47:21.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.738" endtime="20201117 14:47:21.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.744" endtime="20201117 14:47:21.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.705" endtime="20201117 14:47:21.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.699" endtime="20201117 14:47:21.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.768" endtime="20201117 14:47:22.102"></status>
</kw>
<msg timestamp="20201117 14:47:22.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044796069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.764" endtime="20201117 14:47:22.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044721917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044796069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.111" endtime="20201117 14:47:22.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.130" endtime="20201117 14:47:22.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.756" endtime="20201117 14:47:22.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.752" endtime="20201117 14:47:22.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.149" level="INFO">${RESULT} = [{'time': 0.044796069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.415200000000094e-05, 'source_diff': 7.415200000000094e-05}, {'time': 0.044898347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.140" endtime="20201117 14:47:22.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:22.151" endtime="20201117 14:47:22.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.190" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.187" endtime="20201117 14:47:22.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.195" level="INFO">VALUE: [7.415200000000094e-05, 7.372199999999829e-05, 7.429200000000358e-05, 7.499999999999868e-05, 7.399999999999768e-05, 7.441700000000023e-05, 7.548599999999961e-05, 7.462499999999483e-05, 7.423599999999836e-05, 7.420799999999922e-05, 7.462500000000177e-05, 7.419500000000606e-05, 7.406999999999553e-05, 7.469400000000015e-05, 7.408300000000256e-05, 7.380599999999571e-05, 7.422199999999879e-05, 7.384699999999494e-05, 7.532000000000372e-05, 7.438900000000109e-05, 7.369499999999862e-05, 7.53189999999973e-05, 7.436100000000195e-05, 7.451399999999775e-05, 7.391699999999973e-05, 7.443000000000033e-05, 7.437500000000152e-05, 7.416699999999998e-05, 7.454099999999741e-05, 7.370899999999819e-05, 7.395899999999844e-05, 7.44309999999998e-05, 7.37910000000036e-05, 7.402799999999682e-05, 7.404199999999639e-05, 7.404199999999639e-05, 7.388900000000059e-05, 7.445899999999894e-05, 7.416600000000051e-05, 7.423599999999836e-05, 7.454200000000383e-05, 7.380599999999571e-05, 7.454200000000383e-05, 7.366699999999948e-05, 7.462500000000177e-05, 7.384699999999494e-05, 7.41110000000017e-05, 7.454199999999689e-05, 7.550000000000612e-05, 7.43189999999963e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.192" endtime="20201117 14:47:22.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.180" endtime="20201117 14:47:22.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.204" endtime="20201117 14:47:22.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.212" endtime="20201117 14:47:22.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.208" endtime="20201117 14:47:22.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.199" endtime="20201117 14:47:22.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.695" endtime="20201117 14:47:22.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.692" endtime="20201117 14:47:22.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.690" endtime="20201117 14:47:22.238"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.244" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.265" endtime="20201117 14:47:22.284"></status>
</kw>
<msg timestamp="20201117 14:47:22.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.262" endtime="20201117 14:47:22.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.287" endtime="20201117 14:47:22.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.294" endtime="20201117 14:47:22.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.255" endtime="20201117 14:47:22.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.249" endtime="20201117 14:47:22.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.318" endtime="20201117 14:47:22.651"></status>
</kw>
<msg timestamp="20201117 14:47:22.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045033681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.314" endtime="20201117 14:47:22.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044958486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045033681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.660" endtime="20201117 14:47:22.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.679" endtime="20201117 14:47:22.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.307" endtime="20201117 14:47:22.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.302" endtime="20201117 14:47:22.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.696" level="INFO">${RESULT} = [{'time': 0.045033681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.519500000000012e-05, 'source_diff': 7.519500000000012e-05}, {'time': 0.045138042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.687" endtime="20201117 14:47:22.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:22.698" endtime="20201117 14:47:22.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.737" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.735" endtime="20201117 14:47:22.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.743" level="INFO">VALUE: [7.519500000000012e-05, 7.484800000000236e-05, 7.54310000000008e-05, 7.473599999999886e-05, 7.470799999999972e-05, 7.491600000000126e-05, 7.523599999999936e-05, 7.502800000000476e-05, 7.529099999999816e-05, 7.54310000000008e-05, 7.531999999999678e-05, 7.537499999999558e-05, 7.51110000000027e-05, 7.497199999999954e-05, 7.53890000000021e-05, 7.62769999999996e-05, 7.501400000000519e-05, 7.527799999999807e-05, 7.580599999999771e-05, 7.601399999999925e-05, 7.555500000000492e-05, 7.536100000000295e-05, 7.504199999999739e-05, 7.474999999999843e-05, 7.49310000000003e-05, 7.523599999999936e-05, 7.55560000000044e-05, 7.648600000000061e-05, 7.490300000000116e-05, 7.549999999999918e-05, 7.540300000000166e-05, 7.475000000000537e-05, 7.50969999999962e-05, 7.473599999999886e-05, 7.490300000000116e-05, 7.52639999999985e-05, 7.556899999999755e-05, 7.502699999999835e-05, 7.501299999999878e-05, 7.595799999999403e-05, 7.524999999999893e-05, 7.556899999999755e-05, 7.527799999999807e-05, 7.561099999999626e-05, 7.545800000000047e-05, 7.537499999999558e-05, 7.533399999999635e-05, 7.50560000000039e-05, 7.554099999999841e-05, 7.534700000000338e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.740" endtime="20201117 14:47:22.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.728" endtime="20201117 14:47:22.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.751" endtime="20201117 14:47:22.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.760" endtime="20201117 14:47:22.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.755" endtime="20201117 14:47:22.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.747" endtime="20201117 14:47:22.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.245" endtime="20201117 14:47:22.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.241" endtime="20201117 14:47:22.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.239" endtime="20201117 14:47:22.786"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.791" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.814" endtime="20201117 14:47:22.832"></status>
</kw>
<msg timestamp="20201117 14:47:22.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.810" endtime="20201117 14:47:22.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.835" endtime="20201117 14:47:22.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.842" endtime="20201117 14:47:22.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.802" endtime="20201117 14:47:22.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.797" endtime="20201117 14:47:22.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.865" endtime="20201117 14:47:23.198"></status>
</kw>
<msg timestamp="20201117 14:47:23.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045575139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045651097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.862" endtime="20201117 14:47:23.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045575139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045651097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.207" endtime="20201117 14:47:23.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.226" endtime="20201117 14:47:23.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.855" endtime="20201117 14:47:23.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.850" endtime="20201117 14:47:23.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.245" level="INFO">${RESULT} = [{'time': 0.045651097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.595800000000097e-05, 'source_diff': 7.595800000000097e-05}, {'time': 0.045758347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.236" endtime="20201117 14:47:23.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.275" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:23.247" endtime="20201117 14:47:23.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.286" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.284" endtime="20201117 14:47:23.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.291" level="INFO">VALUE: [7.595800000000097e-05, 7.638899999999615e-05, 7.5763999999999e-05, 7.598600000000011e-05, 7.6151999999996e-05, 7.733300000000581e-05, 7.718000000000308e-05, 7.734699999999844e-05, 7.663900000000334e-05, 7.748600000000161e-05, 7.720899999999475e-05, 7.640299999999572e-05, 7.733299999999887e-05, 7.647200000000104e-05, 7.615200000000294e-05, 7.656899999999855e-05, 7.572200000000029e-05, 7.608299999999762e-05, 7.57769999999991e-05, 7.58890000000026e-05, 7.568000000000158e-05, 7.651399999999975e-05, 7.665299999999597e-05, 7.624999999999993e-05, 7.658299999999812e-05, 7.6069000000005e-05, 7.595800000000097e-05, 7.62910000000061e-05, 7.612499999999633e-05, 7.591600000000226e-05, 7.662500000000377e-05, 7.715299999999647e-05, 7.64169999999953e-05, 7.644500000000137e-05, 7.580599999999771e-05, 7.663900000000334e-05, 7.574999999999943e-05, 7.611199999999624e-05, 7.576299999999953e-05, 7.715200000000394e-05, 7.570900000000019e-05, 7.627700000000653e-05, 7.638899999999615e-05, 7.599999999999968e-05, 7.747200000000204e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.575000000000637e-05, 7.604199999999839e-05, 7.613800000000337e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.288" endtime="20201117 14:47:23.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.277" endtime="20201117 14:47:23.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.300" endtime="20201117 14:47:23.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.308" endtime="20201117 14:47:23.330"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.304" endtime="20201117 14:47:23.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.295" endtime="20201117 14:47:23.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.793" endtime="20201117 14:47:23.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.789" endtime="20201117 14:47:23.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.787" endtime="20201117 14:47:23.335"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.362" endtime="20201117 14:47:23.381"></status>
</kw>
<msg timestamp="20201117 14:47:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.359" endtime="20201117 14:47:23.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.384" endtime="20201117 14:47:23.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.391" endtime="20201117 14:47:23.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.352" endtime="20201117 14:47:23.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.346" endtime="20201117 14:47:23.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.414" endtime="20201117 14:47:23.749"></status>
</kw>
<msg timestamp="20201117 14:47:23.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045591333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045668569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.410" endtime="20201117 14:47:23.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045591333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045668569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.758" endtime="20201117 14:47:23.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.777" endtime="20201117 14:47:23.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.403" endtime="20201117 14:47:23.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.399" endtime="20201117 14:47:23.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.794" level="INFO">${RESULT} = [{'time': 0.045668569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.045778861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.785" endtime="20201117 14:47:23.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.827" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:23.796" endtime="20201117 14:47:23.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.838" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.835" endtime="20201117 14:47:23.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.843" level="INFO">VALUE: [7.723600000000136e-05, 7.737499999999758e-05, 7.743000000000333e-05, 7.722200000000179e-05, 7.679199999999914e-05, 7.741700000000323e-05, 7.688899999999665e-05, 7.680499999999923e-05, 7.78189999999998e-05, 7.708299999999862e-05, 7.687500000000402e-05, 7.722300000000126e-05, 7.752800000000032e-05, 7.709799999999767e-05, 7.798599999999517e-05, 7.72640000000005e-05, 7.738899999999715e-05, 7.78890000000046e-05, 7.813900000000484e-05, 7.74719999999951e-05, 7.706899999999905e-05, 7.758299999999912e-05, 7.677799999999957e-05, 7.798599999999517e-05, 7.723599999999442e-05, 7.758400000000554e-05, 7.730499999999974e-05, 7.747300000000151e-05, 7.750000000000118e-05, 7.827799999999413e-05, 7.716700000000298e-05, 7.695800000000197e-05, 7.829200000000064e-05, 7.748700000000108e-05, 7.761199999999774e-05, 7.737499999999758e-05, 7.673600000000086e-05, 7.719500000000212e-05, 7.745799999999553e-05, 7.712499999999733e-05, 7.729199999999964e-05, 7.690300000000316e-05, 7.770800000000272e-05, 7.722200000000179e-05, 7.690299999999622e-05, 7.694500000000187e-05, 7.762500000000477e-05, 7.745900000000194e-05, 7.690199999999675e-05, 7.684699999999794e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.840" endtime="20201117 14:47:23.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.829" endtime="20201117 14:47:23.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.853" endtime="20201117 14:47:23.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.861" endtime="20201117 14:47:23.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.856" endtime="20201117 14:47:23.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.848" endtime="20201117 14:47:23.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.342" endtime="20201117 14:47:23.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.338" endtime="20201117 14:47:23.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.336" endtime="20201117 14:47:23.887"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.914" endtime="20201117 14:47:23.933"></status>
</kw>
<msg timestamp="20201117 14:47:23.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.911" endtime="20201117 14:47:23.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.936" endtime="20201117 14:47:23.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.942" endtime="20201117 14:47:23.946"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.904" endtime="20201117 14:47:23.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.898" endtime="20201117 14:47:23.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.966" endtime="20201117 14:47:24.299"></status>
</kw>
<msg timestamp="20201117 14:47:24.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044898403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.962" endtime="20201117 14:47:24.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044898403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044977403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.308" endtime="20201117 14:47:24.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.327" endtime="20201117 14:47:24.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.955" endtime="20201117 14:47:24.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.951" endtime="20201117 14:47:24.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.346" level="INFO">${RESULT} = [{'time': 0.044977403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.899999999999574e-05, 'source_diff': 7.899999999999574e-05}, {'time': 0.045087681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.337" endtime="20201117 14:47:24.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.376" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:24.348" endtime="20201117 14:47:24.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.387" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.385" endtime="20201117 14:47:24.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.393" level="INFO">VALUE: [7.899999999999574e-05, 7.85839999999996e-05, 7.840299999999772e-05, 7.86389999999984e-05, 7.827800000000107e-05, 7.936100000000001e-05, 7.788899999999765e-05, 7.862500000000577e-05, 7.830500000000074e-05, 7.794399999999646e-05, 7.8151999999998e-05, 7.816600000000451e-05, 7.830500000000074e-05, 7.84440000000039e-05, 7.827800000000107e-05, 7.790300000000416e-05, 7.859799999999917e-05, 7.82770000000016e-05, 7.830500000000074e-05, 7.91389999999989e-05, 7.81389999999979e-05, 7.786099999999851e-05, 7.783299999999937e-05, 7.879200000000114e-05, 7.767999999999664e-05, 7.930600000000121e-05, 7.802799999999388e-05, 7.916699999999804e-05, 7.844399999999696e-05, 7.780500000000024e-05, 7.783299999999937e-05, 7.837500000000552e-05, 7.809799999999867e-05, 7.852800000000132e-05, 7.781999999999928e-05, 7.92640000000025e-05, 7.816599999999757e-05, 7.806900000000006e-05, 7.84169999999973e-05, 7.816599999999757e-05, 7.866600000000501e-05, 7.775000000000143e-05, 7.84440000000039e-05, 7.779100000000067e-05, 7.865299999999797e-05, 7.770800000000272e-05, 7.784699999999894e-05, 7.861099999999926e-05, 7.862499999999883e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.389" endtime="20201117 14:47:24.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.378" endtime="20201117 14:47:24.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.402" endtime="20201117 14:47:24.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.410" endtime="20201117 14:47:24.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.406" endtime="20201117 14:47:24.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.397" endtime="20201117 14:47:24.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.894" endtime="20201117 14:47:24.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.890" endtime="20201117 14:47:24.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.888" endtime="20201117 14:47:24.437"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.464" endtime="20201117 14:47:24.482"></status>
</kw>
<msg timestamp="20201117 14:47:24.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.460" endtime="20201117 14:47:24.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.486" endtime="20201117 14:47:24.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.492" endtime="20201117 14:47:24.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.453" endtime="20201117 14:47:24.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.447" endtime="20201117 14:47:24.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.516" endtime="20201117 14:47:24.870"></status>
</kw>
<msg timestamp="20201117 14:47:24.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044948361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045027236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.512" endtime="20201117 14:47:24.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044948361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045027236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.880" endtime="20201117 14:47:24.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.899" endtime="20201117 14:47:24.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.505" endtime="20201117 14:47:24.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.500" endtime="20201117 14:47:24.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.917" level="INFO">${RESULT} = [{'time': 0.045027236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.887499999999908e-05, 'source_diff': 7.887499999999908e-05}, {'time': 0.045139486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.908" endtime="20201117 14:47:24.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:24.920" endtime="20201117 14:47:24.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.960" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.958" endtime="20201117 14:47:24.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.966" level="INFO">VALUE: [7.887499999999908e-05, 7.877800000000157e-05, 7.995799999999803e-05, 7.983299999999444e-05, 7.961100000000026e-05, 7.890300000000516e-05, 7.94310000000048e-05, 7.877800000000157e-05, 7.872299999999582e-05, 7.904200000000139e-05, 7.927800000000207e-05, 7.955500000000199e-05, 7.936100000000001e-05, 7.90970000000002e-05, 7.930500000000174e-05, 7.880500000000124e-05, 7.944399999999796e-05, 7.886100000000645e-05, 7.923599999999642e-05, 7.902800000000182e-05, 7.90970000000002e-05, 7.895799999999703e-05, 7.862499999999883e-05, 7.948599999999667e-05, 7.870800000000372e-05, 7.944500000000437e-05, 7.884699999999994e-05, 7.983400000000085e-05, 7.883300000000037e-05, 7.879100000000167e-05, 7.887499999999908e-05, 7.982000000000128e-05, 7.93049999999948e-05, 7.934799999999992e-05, 7.99719999999976e-05, 7.944499999999743e-05, 8.033300000000188e-05, 7.947200000000404e-05, 7.86389999999984e-05, 7.918099999999761e-05, 7.869400000000415e-05, 7.96389999999994e-05, 7.995799999999803e-05, 7.94440000000049e-05, 7.92770000000026e-05, 7.869400000000415e-05, 8.048599999999767e-05, 7.905500000000149e-05, 7.930599999999427e-05, 7.965300000000591e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.962" endtime="20201117 14:47:24.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.951" endtime="20201117 14:47:24.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.975" endtime="20201117 14:47:24.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.983" endtime="20201117 14:47:25.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.979" endtime="20201117 14:47:25.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.970" endtime="20201117 14:47:25.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.443" endtime="20201117 14:47:25.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.439" endtime="20201117 14:47:25.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.438" endtime="20201117 14:47:25.010"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.039" endtime="20201117 14:47:25.060"></status>
</kw>
<msg timestamp="20201117 14:47:25.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.036" endtime="20201117 14:47:25.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.063" endtime="20201117 14:47:25.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.070" endtime="20201117 14:47:25.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.028" endtime="20201117 14:47:25.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.021" endtime="20201117 14:47:25.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.093" endtime="20201117 14:47:25.437"></status>
</kw>
<msg timestamp="20201117 14:47:25.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047847625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.090" endtime="20201117 14:47:25.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047847625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047928431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.447" endtime="20201117 14:47:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.466" endtime="20201117 14:47:25.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.083" endtime="20201117 14:47:25.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.078" endtime="20201117 14:47:25.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.485" level="INFO">${RESULT} = [{'time': 0.047928431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.080600000000271e-05, 'source_diff': 8.080600000000271e-05}, {'time': 0.048042667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.476" endtime="20201117 14:47:25.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.515" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:25.487" endtime="20201117 14:47:25.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.525" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.523" endtime="20201117 14:47:25.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.531" level="INFO">VALUE: [8.080600000000271e-05, 8.055599999999552e-05, 7.97919999999952e-05, 8.055599999999552e-05, 8.00840000000011e-05, 8.037500000000058e-05, 7.969399999999821e-05, 7.968000000000558e-05, 8.031899999999537e-05, 8.012500000000033e-05, 8.019399999999871e-05, 7.987500000000008e-05, 8.033300000000188e-05, 7.974999999999649e-05, 8.148600000000561e-05, 8.133300000000288e-05, 7.990299999999922e-05, 8.138800000000168e-05, 8.140300000000072e-05, 8.018000000000608e-05, 8.020799999999828e-05, 7.99719999999976e-05, 8.019499999999818e-05, 8.000000000000368e-05, 7.995900000000444e-05, 8.018099999999861e-05, 8.00840000000011e-05, 8.018099999999861e-05, 7.984700000000094e-05, 7.998599999999717e-05, 7.966700000000548e-05, 7.994399999999846e-05, 8.038900000000015e-05, 8.006999999999459e-05, 8.009800000000067e-05, 8.034700000000145e-05, 8.020900000000469e-05, 8.079200000000314e-05, 8.001399999999631e-05, 8.036100000000101e-05, 8.054199999999595e-05, 7.976399999999606e-05, 8.019499999999818e-05, 8.037500000000058e-05, 8.034700000000145e-05, 8.034700000000145e-05, 8.045799999999853e-05, 8.036099999999408e-05, 7.979200000000214e-05, 7.979200000000214e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.528" endtime="20201117 14:47:25.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.516" endtime="20201117 14:47:25.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.540" endtime="20201117 14:47:25.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.548" endtime="20201117 14:47:25.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.544" endtime="20201117 14:47:25.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.535" endtime="20201117 14:47:25.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.017" endtime="20201117 14:47:25.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.013" endtime="20201117 14:47:25.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.011" endtime="20201117 14:47:25.575"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.602" endtime="20201117 14:47:25.622"></status>
</kw>
<msg timestamp="20201117 14:47:25.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.599" endtime="20201117 14:47:25.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.626" endtime="20201117 14:47:25.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.632" endtime="20201117 14:47:25.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.591" endtime="20201117 14:47:25.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.585" endtime="20201117 14:47:25.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.656" endtime="20201117 14:47:26.003"></status>
</kw>
<msg timestamp="20201117 14:47:26.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045210319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045291944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.652" endtime="20201117 14:47:26.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045210319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045291944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.013" endtime="20201117 14:47:26.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.031" endtime="20201117 14:47:26.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.645" endtime="20201117 14:47:26.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.640" endtime="20201117 14:47:26.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.049" level="INFO">${RESULT} = [{'time': 0.045291944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.162500000000183e-05, 'source_diff': 8.162500000000183e-05}, {'time': 0.045407264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.040" endtime="20201117 14:47:26.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.082" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:26.051" endtime="20201117 14:47:26.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.093" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.091" endtime="20201117 14:47:26.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.099" level="INFO">VALUE: [8.162500000000183e-05, 8.143099999999986e-05, 8.170899999999925e-05, 8.074999999999749e-05, 8.112500000000133e-05, 8.105599999999602e-05, 8.088900000000065e-05, 8.0764000000004e-05, 8.102799999999688e-05, 8.119499999999918e-05, 8.145799999999953e-05, 8.138900000000115e-05, 8.126399999999756e-05, 8.112500000000133e-05, 8.156900000000356e-05, 8.162500000000183e-05, 8.112500000000133e-05, 8.143099999999986e-05, 8.097300000000501e-05, 8.108299999999569e-05, 8.129200000000364e-05, 8.087500000000108e-05, 8.111100000000177e-05, 8.15840000000026e-05, 8.152800000000432e-05, 8.120799999999928e-05, 8.104199999999645e-05, 8.249999999999924e-05, 8.158300000000313e-05, 8.145799999999953e-05, 8.148699999999814e-05, 8.069500000000562e-05, 8.145799999999953e-05, 8.165300000000097e-05, 8.129200000000364e-05, 8.149999999999824e-05, 8.120799999999928e-05, 8.122299999999832e-05, 8.087499999999415e-05, 8.155500000000399e-05, 8.093099999999936e-05, 8.111100000000177e-05, 8.145799999999953e-05, 8.165300000000097e-05, 8.10840000000021e-05, 8.133299999999594e-05, 8.157000000000303e-05, 8.124999999999799e-05, 8.112500000000133e-05, 8.091700000000673e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.096" endtime="20201117 14:47:26.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.084" endtime="20201117 14:47:26.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.108" endtime="20201117 14:47:26.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.116" endtime="20201117 14:47:26.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.112" endtime="20201117 14:47:26.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.103" endtime="20201117 14:47:26.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.582" endtime="20201117 14:47:26.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.578" endtime="20201117 14:47:26.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.576" endtime="20201117 14:47:26.143"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.170" endtime="20201117 14:47:26.189"></status>
</kw>
<msg timestamp="20201117 14:47:26.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.166" endtime="20201117 14:47:26.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.192" endtime="20201117 14:47:26.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.205" endtime="20201117 14:47:26.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.159" endtime="20201117 14:47:26.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.153" endtime="20201117 14:47:26.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.229" endtime="20201117 14:47:26.562"></status>
</kw>
<msg timestamp="20201117 14:47:26.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045275486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045357375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.225" endtime="20201117 14:47:26.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045275486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045357375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.572" endtime="20201117 14:47:26.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.590" endtime="20201117 14:47:26.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.218" endtime="20201117 14:47:26.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.213" endtime="20201117 14:47:26.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.610" level="INFO">${RESULT} = [{'time': 0.045357375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.188900000000165e-05, 'source_diff': 8.188900000000165e-05}, {'time': 0.045468639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:26.601" endtime="20201117 14:47:26.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.640" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:26.612" endtime="20201117 14:47:26.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.651" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.648" endtime="20201117 14:47:26.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.656" level="INFO">VALUE: [8.188900000000165e-05, 8.2846999999997e-05, 8.218100000000061e-05, 8.249999999999924e-05, 8.226399999999856e-05, 8.204099999999798e-05, 8.265299999999504e-05, 8.24720000000001e-05, 8.177799999999763e-05, 8.166600000000107e-05, 8.169400000000021e-05, 8.205599999999702e-05, 8.351399999999981e-05, 8.212500000000234e-05, 8.195800000000003e-05, 8.166600000000107e-05, 8.209699999999626e-05, 8.258299999999719e-05, 8.169400000000021e-05, 8.18049999999973e-05, 8.241699999999436e-05, 8.19719999999996e-05, 8.269500000000068e-05, 8.204200000000439e-05, 8.19589999999995e-05, 8.194499999999993e-05, 8.211100000000277e-05, 8.16669999999936e-05, 8.231899999999737e-05, 8.199999999999874e-05, 8.222199999999985e-05, 8.299999999999974e-05, 8.168000000000064e-05, 8.21119999999953e-05, 8.238900000000215e-05, 8.240300000000172e-05, 8.281899999999787e-05, 8.352799999999938e-05, 8.224999999999899e-05, 8.265199999999556e-05, 8.190300000000122e-05, 8.25840000000036e-05, 8.186100000000252e-05, 8.254199999999795e-05, 8.19170000000008e-05, 8.212500000000234e-05, 8.322300000000032e-05, 8.233299999999694e-05, 8.265300000000197e-05, 8.31249999999964e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.653" endtime="20201117 14:47:26.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.641" endtime="20201117 14:47:26.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.665" endtime="20201117 14:47:26.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.673" endtime="20201117 14:47:26.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.669" endtime="20201117 14:47:26.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.660" endtime="20201117 14:47:26.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.149" endtime="20201117 14:47:26.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.145" endtime="20201117 14:47:26.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.144" endtime="20201117 14:47:26.699"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.705" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.727" endtime="20201117 14:47:26.746"></status>
</kw>
<msg timestamp="20201117 14:47:26.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.724" endtime="20201117 14:47:26.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.749" endtime="20201117 14:47:26.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.756" endtime="20201117 14:47:26.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.716" endtime="20201117 14:47:26.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.710" endtime="20201117 14:47:26.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.779" endtime="20201117 14:47:27.112"></status>
</kw>
<msg timestamp="20201117 14:47:27.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045745444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.776" endtime="20201117 14:47:27.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045745444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.122" endtime="20201117 14:47:27.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.141" endtime="20201117 14:47:27.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.768" endtime="20201117 14:47:27.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.764" endtime="20201117 14:47:27.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.159" level="INFO">${RESULT} = [{'time': 0.045745444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.286100000000352e-05, 'source_diff': 8.286100000000352e-05}, {'time': 0.045860694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.150" endtime="20201117 14:47:27.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:27.161" endtime="20201117 14:47:27.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.200" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.198" endtime="20201117 14:47:27.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.205" level="INFO">VALUE: [8.286100000000352e-05, 8.356899999999862e-05, 8.324999999999999e-05, 8.268100000000111e-05, 8.340299999999579e-05, 8.327799999999913e-05, 8.354099999999948e-05, 8.299999999999974e-05, 8.363799999999699e-05, 8.338900000000316e-05, 8.309699999999726e-05, 8.305600000000496e-05, 8.36669999999956e-05, 8.318000000000214e-05, 8.273599999999992e-05, 8.286100000000352e-05, 8.33049999999988e-05, 8.327799999999913e-05, 8.370800000000178e-05, 8.272200000000035e-05, 8.41390000000039e-05, 8.404099999999998e-05, 8.352699999999991e-05, 8.298600000000017e-05, 8.337500000000359e-05, 8.306999999999759e-05, 8.436100000000502e-05, 8.29170000000018e-05, 8.338900000000316e-05, 8.336199999999655e-05, 8.362500000000384e-05, 8.306899999999812e-05, 8.286100000000352e-05, 8.34170000000023e-05, 8.343100000000186e-05, 8.326399999999956e-05, 8.316700000000204e-05, 8.302799999999888e-05, 8.358399999999766e-05, 8.327799999999913e-05, 8.380599999999877e-05, 8.276399999999906e-05, 8.302799999999888e-05, 8.336100000000402e-05, 8.312500000000334e-05, 8.332000000000478e-05, 8.381899999999887e-05, 8.30970000000042e-05, 8.269400000000121e-05, 8.276399999999906e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.202" endtime="20201117 14:47:27.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.191" endtime="20201117 14:47:27.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.214" endtime="20201117 14:47:27.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.223" endtime="20201117 14:47:27.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.218" endtime="20201117 14:47:27.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.210" endtime="20201117 14:47:27.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.706" endtime="20201117 14:47:27.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.702" endtime="20201117 14:47:27.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.700" endtime="20201117 14:47:27.250"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.255" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.277" endtime="20201117 14:47:27.296"></status>
</kw>
<msg timestamp="20201117 14:47:27.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.273" endtime="20201117 14:47:27.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.299" endtime="20201117 14:47:27.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.305" endtime="20201117 14:47:27.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.266" endtime="20201117 14:47:27.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.260" endtime="20201117 14:47:27.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.329" endtime="20201117 14:47:27.662"></status>
</kw>
<msg timestamp="20201117 14:47:27.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045884181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.325" endtime="20201117 14:47:27.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045884181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.672" endtime="20201117 14:47:27.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.690" endtime="20201117 14:47:27.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.318" endtime="20201117 14:47:27.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.313" endtime="20201117 14:47:27.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.709" level="INFO">${RESULT} = [{'time': 0.045884181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.42370000000009e-05, 'source_diff': 8.42370000000009e-05}, {'time': 0.046000542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:27.700" endtime="20201117 14:47:27.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.739" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:27.711" endtime="20201117 14:47:27.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.750" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.747" endtime="20201117 14:47:27.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.755" level="INFO">VALUE: [8.42370000000009e-05, 8.413899999999697e-05, 8.51669999999971e-05, 8.419400000000271e-05, 8.379099999999973e-05, 8.547199999999616e-05, 8.426400000000056e-05, 8.420800000000228e-05, 8.444400000000296e-05, 8.441699999999636e-05, 8.38190000000058e-05, 8.391599999999638e-05, 8.377799999999963e-05, 8.380599999999877e-05, 8.380599999999877e-05, 8.40970000000052e-05, 8.373600000000092e-05, 8.418000000000314e-05, 8.369399999999527e-05, 8.43469999999985e-05, 8.552800000000138e-05, 8.44720000000021e-05, 8.408300000000563e-05, 8.383399999999791e-05, 8.393099999999543e-05, 8.466600000000407e-05, 8.483299999999944e-05, 8.369500000000168e-05, 8.370900000000125e-05, 8.433299999999894e-05, 8.440299999999679e-05, 8.46249999999979e-05, 8.376400000000006e-05, 8.455500000000005e-05, 8.465299999999704e-05, 8.411100000000477e-05, 8.387500000000409e-05, 8.376400000000006e-05, 8.458299999999919e-05, 8.548600000000267e-05, 8.486099999999858e-05, 8.376400000000006e-05, 8.440299999999679e-05, 8.393099999999543e-05, 8.465299999999704e-05, 8.41669999999961e-05, 8.402799999999988e-05, 8.41390000000039e-05, 8.465299999999704e-05, 8.434700000000545e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.752" endtime="20201117 14:47:27.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.741" endtime="20201117 14:47:27.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.765" endtime="20201117 14:47:27.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.773" endtime="20201117 14:47:27.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.768" endtime="20201117 14:47:27.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.760" endtime="20201117 14:47:27.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.256" endtime="20201117 14:47:27.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.252" endtime="20201117 14:47:27.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.251" endtime="20201117 14:47:27.799"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.804" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.826" endtime="20201117 14:47:27.845"></status>
</kw>
<msg timestamp="20201117 14:47:27.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.823" endtime="20201117 14:47:27.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.848" endtime="20201117 14:47:27.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.854" endtime="20201117 14:47:27.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.815" endtime="20201117 14:47:27.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.810" endtime="20201117 14:47:27.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.878" endtime="20201117 14:47:28.213"></status>
</kw>
<msg timestamp="20201117 14:47:28.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044734083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044819569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.875" endtime="20201117 14:47:28.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044734083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044819569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.223" endtime="20201117 14:47:28.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.241" endtime="20201117 14:47:28.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.867" endtime="20201117 14:47:28.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.863" endtime="20201117 14:47:28.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.258" level="INFO">${RESULT} = [{'time': 0.044819569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.548599999999573e-05, 'source_diff': 8.548599999999573e-05}, {'time': 0.044935903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.250" endtime="20201117 14:47:28.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:28.261" endtime="20201117 14:47:28.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.302" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.300" endtime="20201117 14:47:28.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.308" level="INFO">VALUE: [8.548599999999573e-05, 8.49720000000026e-05, 8.508299999999969e-05, 8.494500000000293e-05, 8.536099999999908e-05, 8.619499999999725e-05, 8.53050000000008e-05, 8.523599999999548e-05, 8.538799999999874e-05, 8.527799999999419e-05, 8.506900000000012e-05, 8.638899999999922e-05, 8.556899999999368e-05, 8.504200000000045e-05, 8.561099999999933e-05, 8.487499999999815e-05, 8.637499999999965e-05, 8.56249999999989e-05, 8.511099999999883e-05, 8.56799999999977e-05, 8.527800000000113e-05, 8.558399999999966e-05, 8.540300000000473e-05, 8.486099999999858e-05, 8.473600000000192e-05, 8.477800000000063e-05, 8.637499999999965e-05, 8.4846999999999e-05, 8.568100000000411e-05, 8.520799999999634e-05, 8.543099999999693e-05, 8.490299999999729e-05, 8.488899999999772e-05, 8.650000000000324e-05, 8.498600000000217e-05, 8.540200000000525e-05, 8.533299999999994e-05, 8.506900000000012e-05, 8.494399999999652e-05, 8.554199999999401e-05, 8.498600000000217e-05, 8.527700000000166e-05, 8.472200000000235e-05, 8.541699999999736e-05, 8.505600000000002e-05, 8.544500000000343e-05, 8.559699999999976e-05, 8.479100000000073e-05, 8.4846999999999e-05, 8.547299999999564e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.304" endtime="20201117 14:47:28.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.293" endtime="20201117 14:47:28.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.317" endtime="20201117 14:47:28.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.325" endtime="20201117 14:47:28.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.321" endtime="20201117 14:47:28.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.313" endtime="20201117 14:47:28.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.806" endtime="20201117 14:47:28.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.802" endtime="20201117 14:47:28.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.800" endtime="20201117 14:47:28.352"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.357" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.378" endtime="20201117 14:47:28.398"></status>
</kw>
<msg timestamp="20201117 14:47:28.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.375" endtime="20201117 14:47:28.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.401" endtime="20201117 14:47:28.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.407" endtime="20201117 14:47:28.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.368" endtime="20201117 14:47:28.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.362" endtime="20201117 14:47:28.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.430" endtime="20201117 14:47:28.763"></status>
</kw>
<msg timestamp="20201117 14:47:28.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044889625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044975764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.427" endtime="20201117 14:47:28.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044889625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044975764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.773" endtime="20201117 14:47:28.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.791" endtime="20201117 14:47:28.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.420" endtime="20201117 14:47:28.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.415" endtime="20201117 14:47:28.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.810" level="INFO">${RESULT} = [{'time': 0.044975764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.613899999999897e-05, 'source_diff': 8.613899999999897e-05}, {'time': 0.045096042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.801" endtime="20201117 14:47:28.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:28.813" endtime="20201117 14:47:28.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.852" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.850" endtime="20201117 14:47:28.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.857" level="INFO">VALUE: [8.613899999999897e-05, 8.630600000000127e-05, 8.587499999999915e-05, 8.618099999999768e-05, 8.652800000000238e-05, 8.593000000000489e-05, 8.626400000000256e-05, 8.611099999999983e-05, 8.630600000000127e-05, 8.625000000000299e-05, 8.624999999999605e-05, 8.577800000000163e-05, 8.575000000000249e-05, 8.593100000000437e-05, 8.592999999999795e-05, 8.5944999999997e-05, 8.583300000000044e-05, 8.663899999999947e-05, 8.669399999999827e-05, 8.618099999999768e-05, 8.623599999999648e-05, 8.672200000000435e-05, 8.591600000000532e-05, 8.611099999999983e-05, 8.656900000000162e-05, 8.609700000000026e-05, 8.652699999999597e-05, 8.570900000000325e-05, 8.597199999999666e-05, 8.659699999999382e-05, 8.624999999999605e-05, 8.609700000000026e-05, 8.579199999999426e-05, 8.575000000000249e-05, 8.576400000000206e-05, 8.64869999999962e-05, 8.627800000000213e-05, 8.57920000000012e-05, 8.668099999999818e-05, 8.641599999999888e-05, 8.655599999999458e-05, 8.609700000000026e-05, 8.701400000000331e-05, 8.575000000000249e-05, 8.654200000000195e-05, 8.609799999999973e-05, 8.634799999999998e-05, 8.566600000000507e-05, 8.752799999999644e-05, 8.666599999999913e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.854" endtime="20201117 14:47:28.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.843" endtime="20201117 14:47:28.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.866" endtime="20201117 14:47:28.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.874" endtime="20201117 14:47:28.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.870" endtime="20201117 14:47:28.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.861" endtime="20201117 14:47:28.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.358" endtime="20201117 14:47:28.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.354" endtime="20201117 14:47:28.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.353" endtime="20201117 14:47:28.901"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.906" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.927" endtime="20201117 14:47:28.947"></status>
</kw>
<msg timestamp="20201117 14:47:28.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.924" endtime="20201117 14:47:28.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.950" endtime="20201117 14:47:28.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.956" endtime="20201117 14:47:28.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.917" endtime="20201117 14:47:28.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.911" endtime="20201117 14:47:28.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.980" endtime="20201117 14:47:29.313"></status>
</kw>
<msg timestamp="20201117 14:47:29.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045088444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.976" endtime="20201117 14:47:29.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045088444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045175444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.322" endtime="20201117 14:47:29.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.342" endtime="20201117 14:47:29.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.969" endtime="20201117 14:47:29.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.964" endtime="20201117 14:47:29.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.359" level="INFO">${RESULT} = [{'time': 0.045175444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.700000000000374e-05, 'source_diff': 8.700000000000374e-05}, {'time': 0.045294736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.350" endtime="20201117 14:47:29.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.389" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:29.361" endtime="20201117 14:47:29.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.400" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.398" endtime="20201117 14:47:29.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.405" level="INFO">VALUE: [8.700000000000374e-05, 8.675000000000349e-05, 8.71669999999991e-05, 8.801399999999737e-05, 8.674999999999655e-05, 8.681900000000187e-05, 8.726399999999662e-05, 8.757000000000209e-05, 8.705599999999508e-05, 8.681900000000187e-05, 8.726399999999662e-05, 8.763900000000047e-05, 8.673599999999698e-05, 8.719499999999825e-05, 8.731900000000237e-05, 8.706899999999518e-05, 8.755599999999558e-05, 8.676400000000306e-05, 8.701400000000331e-05, 8.71250000000004e-05, 8.818099999999968e-05, 8.747199999999816e-05, 8.781900000000287e-05, 8.701400000000331e-05, 8.834700000000251e-05, 8.673599999999698e-05, 8.752799999999644e-05, 8.802799999999694e-05, 8.802799999999694e-05, 8.737500000000065e-05, 8.727699999999672e-05, 8.759799999999429e-05, 8.79999999999978e-05, 8.731899999999543e-05, 8.74449999999985e-05, 8.701399999999637e-05, 8.676299999999665e-05, 8.738900000000022e-05, 8.759700000000176e-05, 8.677800000000263e-05, 8.694400000000546e-05, 8.755500000000305e-05, 8.761100000000133e-05, 8.674999999999655e-05, 8.74449999999985e-05, 8.731900000000237e-05, 8.694500000000494e-05, 8.74999999999973e-05, 8.730600000000227e-05, 8.733400000000141e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.402" endtime="20201117 14:47:29.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.391" endtime="20201117 14:47:29.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.414" endtime="20201117 14:47:29.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.422" endtime="20201117 14:47:29.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.418" endtime="20201117 14:47:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.410" endtime="20201117 14:47:29.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.907" endtime="20201117 14:47:29.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.903" endtime="20201117 14:47:29.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.901" endtime="20201117 14:47:29.449"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.454" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.476" endtime="20201117 14:47:29.495"></status>
</kw>
<msg timestamp="20201117 14:47:29.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.472" endtime="20201117 14:47:29.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.498" endtime="20201117 14:47:29.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.505" endtime="20201117 14:47:29.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.465" endtime="20201117 14:47:29.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.459" endtime="20201117 14:47:29.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.529" endtime="20201117 14:47:29.862"></status>
</kw>
<msg timestamp="20201117 14:47:29.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045024472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045112722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.524" endtime="20201117 14:47:29.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045024472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045112722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.871" endtime="20201117 14:47:29.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.890" endtime="20201117 14:47:29.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.517" endtime="20201117 14:47:29.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.513" endtime="20201117 14:47:29.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.909" level="INFO">${RESULT} = [{'time': 0.045112722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.824999999999805e-05, 'source_diff': 8.824999999999805e-05}, {'time': 0.045230986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.900" endtime="20201117 14:47:29.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:29.911" endtime="20201117 14:47:29.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.949" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.947" endtime="20201117 14:47:29.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.955" level="INFO">VALUE: [8.824999999999805e-05, 8.865300000000104e-05, 8.850000000000524e-05, 8.859799999999529e-05, 8.807000000000259e-05, 8.818099999999968e-05, 8.769499999999875e-05, 8.929199999999776e-05, 8.841700000000036e-05, 8.809800000000173e-05, 8.776399999999712e-05, 8.84999999999983e-05, 8.784700000000201e-05, 8.822199999999891e-05, 8.858300000000319e-05, 8.795799999999909e-05, 8.83199999999959e-05, 8.824999999999805e-05, 8.86250000000019e-05, 8.845899999999907e-05, 8.861100000000233e-05, 8.777800000000363e-05, 8.790300000000029e-05, 8.823599999999848e-05, 8.791600000000038e-05, 8.895800000000009e-05, 8.861100000000233e-05, 8.7944999999999e-05, 8.827799999999719e-05, 8.800000000000474e-05, 8.836099999999514e-05, 8.780499999999636e-05, 8.816600000000063e-05, 8.823600000000542e-05, 8.851400000000481e-05, 8.843099999999993e-05, 8.791699999999986e-05, 8.808300000000269e-05, 8.859700000000276e-05, 8.844400000000002e-05, 8.824999999999805e-05, 8.833400000000241e-05, 8.761099999999439e-05, 8.823599999999848e-05, 8.934700000000351e-05, 8.770899999999832e-05, 8.770899999999832e-05, 8.820900000000576e-05, 8.797300000000507e-05, 8.827699999999772e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.952" endtime="20201117 14:47:29.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.940" endtime="20201117 14:47:29.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.964" endtime="20201117 14:47:29.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.972" endtime="20201117 14:47:29.994"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.968" endtime="20201117 14:47:29.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.959" endtime="20201117 14:47:29.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.455" endtime="20201117 14:47:29.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.451" endtime="20201117 14:47:29.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.450" endtime="20201117 14:47:29.998"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.004" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.025" endtime="20201117 14:47:30.045"></status>
</kw>
<msg timestamp="20201117 14:47:30.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.022" endtime="20201117 14:47:30.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.048" endtime="20201117 14:47:30.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.055" endtime="20201117 14:47:30.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.015" endtime="20201117 14:47:30.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.009" endtime="20201117 14:47:30.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.078" endtime="20201117 14:47:30.412"></status>
</kw>
<msg timestamp="20201117 14:47:30.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0450185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045107681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:30.075" endtime="20201117 14:47:30.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0450185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045107681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:30.422" endtime="20201117 14:47:30.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.440" endtime="20201117 14:47:30.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.068" endtime="20201117 14:47:30.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.063" endtime="20201117 14:47:30.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.458" level="INFO">${RESULT} = [{'time': 0.045107681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.918099999999374e-05, 'source_diff': 8.918099999999374e-05}, {'time': 0.045226056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.449" endtime="20201117 14:47:30.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.490" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:30.460" endtime="20201117 14:47:30.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.501" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.499" endtime="20201117 14:47:30.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.506" level="INFO">VALUE: [8.918099999999374e-05, 8.94999999999993e-05, 8.951399999999887e-05, 8.922199999999991e-05, 8.926299999999915e-05, 8.955599999999758e-05, 8.908300000000369e-05, 8.958400000000366e-05, 8.877799999999769e-05, 8.904099999999804e-05, 8.96670000000016e-05, 8.88329999999965e-05, 8.940299999999485e-05, 8.906899999999718e-05, 8.905599999999708e-05, 8.93199999999969e-05, 8.956899999999768e-05, 8.962499999999596e-05, 8.902799999999794e-05, 8.963900000000247e-05, 8.908299999999675e-05, 8.940300000000179e-05, 8.937499999999571e-05, 8.929099999999829e-05, 8.94999999999993e-05, 8.93050000000048e-05, 8.91250000000024e-05, 8.948599999999973e-05, 8.958399999999672e-05, 8.96800000000017e-05, 9.018099999999474e-05, 8.954100000000548e-05, 9.061099999999739e-05, 8.901399999999837e-05, 8.96670000000016e-05, 8.8945e-05, 9.01800000000022e-05, 8.929199999999776e-05, 8.891600000000138e-05, 8.887499999999521e-05, 8.965200000000256e-05, 8.96670000000016e-05, 9.049999999999336e-05, 8.933300000000394e-05, 8.924999999999905e-05, 8.88329999999965e-05, 8.883400000000291e-05, 8.963899999999553e-05, 8.876399999999812e-05, 8.915199999999512e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.503" endtime="20201117 14:47:30.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.492" endtime="20201117 14:47:30.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.515" endtime="20201117 14:47:30.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.524" endtime="20201117 14:47:30.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.519" endtime="20201117 14:47:30.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.511" endtime="20201117 14:47:30.548"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.005" endtime="20201117 14:47:30.549"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.001" endtime="20201117 14:47:30.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.999" endtime="20201117 14:47:30.550"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.555" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.577" endtime="20201117 14:47:30.597"></status>
</kw>
<msg timestamp="20201117 14:47:30.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.574" endtime="20201117 14:47:30.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.600" endtime="20201117 14:47:30.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.606" endtime="20201117 14:47:30.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.566" endtime="20201117 14:47:30.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.560" endtime="20201117 14:47:30.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.630" endtime="20201117 14:47:30.963"></status>
</kw>
<msg timestamp="20201117 14:47:30.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045552319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.626" endtime="20201117 14:47:30.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045552319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.972" endtime="20201117 14:47:30.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.991" endtime="20201117 14:47:30.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.619" endtime="20201117 14:47:30.998"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.614" endtime="20201117 14:47:30.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.010" level="INFO">${RESULT} = [{'time': 0.045642153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.983399999999697e-05, 'source_diff': 8.983399999999697e-05}, {'time': 0.045760472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.001" endtime="20201117 14:47:31.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.040" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:31.012" endtime="20201117 14:47:31.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.051" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.048" endtime="20201117 14:47:31.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.056" level="INFO">VALUE: [8.983399999999697e-05, 9.000000000000674e-05, 8.988899999999578e-05, 9.037499999999671e-05, 9.072200000000141e-05, 9.030499999999886e-05, 8.99999999999998e-05, 9.012499999999646e-05, 9.022300000000039e-05, 9.02920000000057e-05, 9.059699999999782e-05, 9.029099999999929e-05, 9.084800000000448e-05, 8.99999999999998e-05, 9.015200000000306e-05, 9.101400000000037e-05, 9.056999999999815e-05, 9.0332999999998e-05, 9.048600000000073e-05, 9.062499999999696e-05, 9.019500000000125e-05, 9.002799999999894e-05, 9.018100000000168e-05, 9.054099999999954e-05, 9.034699999999757e-05, 8.995900000000057e-05, 9.152800000000044e-05, 9.02920000000057e-05, 8.980499999999836e-05, 8.983399999999697e-05, 9.05000000000003e-05, 9.047200000000116e-05, 9.06659999999962e-05, 8.976399999999912e-05, 9.023600000000048e-05, 9.069400000000227e-05, 9.026399999999962e-05, 8.986099999999664e-05, 9.009699999999732e-05, 9.041700000000236e-05, 9.036100000000408e-05, 9.012499999999646e-05, 9.134699999999857e-05, 9.026399999999962e-05, 8.9945000000001e-05, 8.974999999999955e-05, 9.052799999999944e-05, 8.990300000000229e-05, 9.002799999999894e-05, 9.156899999999968e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.053" endtime="20201117 14:47:31.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.041" endtime="20201117 14:47:31.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.065" endtime="20201117 14:47:31.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.073" endtime="20201117 14:47:31.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.069" endtime="20201117 14:47:31.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.060" endtime="20201117 14:47:31.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.556" endtime="20201117 14:47:31.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.553" endtime="20201117 14:47:31.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.551" endtime="20201117 14:47:31.100"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.127" endtime="20201117 14:47:31.148"></status>
</kw>
<msg timestamp="20201117 14:47:31.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.124" endtime="20201117 14:47:31.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.151" endtime="20201117 14:47:31.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.157" endtime="20201117 14:47:31.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.116" endtime="20201117 14:47:31.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.111" endtime="20201117 14:47:31.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.181" endtime="20201117 14:47:31.527"></status>
</kw>
<msg timestamp="20201117 14:47:31.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045540139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045631014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.177" endtime="20201117 14:47:31.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045540139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045631014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.536" endtime="20201117 14:47:31.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.555" endtime="20201117 14:47:31.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.170" endtime="20201117 14:47:31.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.166" endtime="20201117 14:47:31.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.573" level="INFO">${RESULT} = [{'time': 0.045631014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.087499999999721e-05, 'source_diff': 9.087499999999721e-05}, {'time': 0.045750306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.564" endtime="20201117 14:47:31.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.603" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:31.575" endtime="20201117 14:47:31.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.613" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.611" endtime="20201117 14:47:31.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.619" level="INFO">VALUE: [9.087499999999721e-05, 9.08199999999984e-05, 9.090300000000329e-05, 9.119499999999531e-05, 9.131900000000637e-05, 9.098600000000123e-05, 9.254200000000101e-05, 9.111099999999789e-05, 9.098600000000123e-05, 9.144499999999556e-05, 9.075000000000055e-05, 9.069400000000227e-05, 9.126399999999368e-05, 9.072200000000141e-05, 9.137499999999771e-05, 9.105599999999908e-05, 9.095800000000209e-05, 9.081899999999893e-05, 9.136099999999814e-05, 9.137500000000465e-05, 9.11250000000044e-05, 9.236099999999914e-05, 9.097199999999472e-05, 9.080499999999936e-05, 9.119500000000225e-05, 9.254100000000154e-05, 9.130599999999933e-05, 9.123600000000148e-05, 9.120800000000234e-05, 9.08879999999973e-05, 9.119500000000225e-05, 9.123600000000148e-05, 9.077799999999969e-05, 9.159700000000576e-05, 9.168100000000318e-05, 9.079199999999926e-05, 9.133300000000594e-05, 9.127800000000019e-05, 9.116699999999617e-05, 9.155500000000011e-05, 9.122200000000191e-05, 9.113799999999755e-05, 9.094399999999558e-05, 9.140299999999685e-05, 9.094400000000252e-05, 9.21529999999976e-05, 9.120900000000182e-05, 9.134699999999857e-05, 9.142999999999651e-05, 9.156999999999915e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.616" endtime="20201117 14:47:31.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.604" endtime="20201117 14:47:31.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.628" endtime="20201117 14:47:31.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.637" endtime="20201117 14:47:31.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.632" endtime="20201117 14:47:31.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.624" endtime="20201117 14:47:31.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.107" endtime="20201117 14:47:31.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.103" endtime="20201117 14:47:31.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.101" endtime="20201117 14:47:31.663"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.690" endtime="20201117 14:47:31.711"></status>
</kw>
<msg timestamp="20201117 14:47:31.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.687" endtime="20201117 14:47:31.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.714" endtime="20201117 14:47:31.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.721" endtime="20201117 14:47:31.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.680" endtime="20201117 14:47:31.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.674" endtime="20201117 14:47:31.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.744" endtime="20201117 14:47:32.090"></status>
</kw>
<msg timestamp="20201117 14:47:32.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045154028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04524575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:31.741" endtime="20201117 14:47:32.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045154028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04524575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:32.099" endtime="20201117 14:47:32.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.118" endtime="20201117 14:47:32.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.734" endtime="20201117 14:47:32.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.729" endtime="20201117 14:47:32.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.137" level="INFO">${RESULT} = [{'time': 0.04524575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.172200000000241e-05, 'source_diff': 9.172200000000241e-05}, {'time': 0.045367069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:32.128" endtime="20201117 14:47:32.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.167" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:32.139" endtime="20201117 14:47:32.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.178" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.175" endtime="20201117 14:47:32.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.184" level="INFO">VALUE: [9.172200000000241e-05, 9.337499999999971e-05, 9.230600000000033e-05, 9.230600000000033e-05, 9.227800000000119e-05, 9.257000000000015e-05, 9.25000000000023e-05, 9.187499999999821e-05, 9.236099999999914e-05, 9.209799999999879e-05, 9.322200000000391e-05, 9.247200000000316e-05, 9.223600000000248e-05, 9.248600000000273e-05, 9.259799999999929e-05, 9.26659999999982e-05, 9.177800000000069e-05, 9.208299999999975e-05, 9.226300000000215e-05, 9.340299999999885e-05, 9.240299999999785e-05, 9.205600000000008e-05, 9.26800000000047e-05, 9.181899999999993e-05, 9.248600000000273e-05, 9.21529999999976e-05, 9.343099999999799e-05, 9.230500000000086e-05, 9.237499999999871e-05, 9.224999999999511e-05, 9.226400000000162e-05, 9.305500000000161e-05, 9.244399999999708e-05, 9.219399999999683e-05, 9.198600000000223e-05, 9.216699999999717e-05, 9.255500000000111e-05, 9.258300000000025e-05, 9.304100000000204e-05, 9.344399999999808e-05, 9.268100000000418e-05, 9.231900000000043e-05, 9.208299999999975e-05, 9.25000000000023e-05, 9.25000000000023e-05, 9.263899999999853e-05, 9.219399999999683e-05, 9.266699999999767e-05, 9.225000000000205e-05, 9.220800000000334e-05]</msg>
<status status="PASS" starttime="20201117 14:47:32.180" endtime="20201117 14:47:32.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.169" endtime="20201117 14:47:32.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.192" endtime="20201117 14:47:32.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.201" endtime="20201117 14:47:32.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.196" endtime="20201117 14:47:32.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.188" endtime="20201117 14:47:32.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.670" endtime="20201117 14:47:32.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.666" endtime="20201117 14:47:32.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.664" endtime="20201117 14:47:32.227"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.254" endtime="20201117 14:47:32.275"></status>
</kw>
<msg timestamp="20201117 14:47:32.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.251" endtime="20201117 14:47:32.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.279" endtime="20201117 14:47:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.286" endtime="20201117 14:47:32.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.244" endtime="20201117 14:47:32.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.238" endtime="20201117 14:47:32.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.310" endtime="20201117 14:47:32.656"></status>
</kw>
<msg timestamp="20201117 14:47:32.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044953458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045047083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.307" endtime="20201117 14:47:32.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044953458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045047083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.666" endtime="20201117 14:47:32.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.684" endtime="20201117 14:47:32.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.299" endtime="20201117 14:47:32.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.294" endtime="20201117 14:47:32.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.701" level="INFO">${RESULT} = [{'time': 0.045047083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.362499999999996e-05, 'source_diff': 9.362499999999996e-05}, {'time': 0.045169403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.693" endtime="20201117 14:47:32.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:32.704" endtime="20201117 14:47:32.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.746" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.743" endtime="20201117 14:47:32.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.751" level="INFO">VALUE: [9.362499999999996e-05, 9.36529999999991e-05, 9.3333000000001e-05, 9.326300000000315e-05, 9.388899999999978e-05, 9.331900000000143e-05, 9.345800000000459e-05, 9.326400000000262e-05, 9.358400000000072e-05, 9.441699999999942e-05, 9.456900000000268e-05, 9.334700000000057e-05, 9.348600000000373e-05, 9.41659999999997e-05, 9.362499999999996e-05, 9.373600000000398e-05, 9.327800000000219e-05, 9.370900000000432e-05, 9.287499999999921e-05, 9.366699999999867e-05, 9.294399999999758e-05, 9.305500000000161e-05, 9.361100000000039e-05, 9.280500000000136e-05, 9.367999999999876e-05, 9.35409999999956e-05, 9.452800000000344e-05, 9.347199999999722e-05, 9.391700000000586e-05, 9.305600000000108e-05, 9.294499999999706e-05, 9.363899999999953e-05, 9.295799999999715e-05, 9.369499999999781e-05, 9.297300000000314e-05, 9.376400000000312e-05, 9.359800000000029e-05, 9.345799999999765e-05, 9.331900000000143e-05, 9.423700000000396e-05, 9.308400000000022e-05, 9.35279999999955e-05, 9.32079999999974e-05, 9.375000000000355e-05, 9.440200000000037e-05, 9.312499999999946e-05, 9.376400000000312e-05, 9.35279999999955e-05, 9.305599999999414e-05, 9.329200000000176e-05]</msg>
<status status="PASS" starttime="20201117 14:47:32.748" endtime="20201117 14:47:32.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.737" endtime="20201117 14:47:32.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.760" endtime="20201117 14:47:32.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.768" endtime="20201117 14:47:32.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.764" endtime="20201117 14:47:32.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.755" endtime="20201117 14:47:32.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.234" endtime="20201117 14:47:32.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.230" endtime="20201117 14:47:32.794"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.228" endtime="20201117 14:47:32.795"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.822" endtime="20201117 14:47:32.843"></status>
</kw>
<msg timestamp="20201117 14:47:32.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.819" endtime="20201117 14:47:32.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.846" endtime="20201117 14:47:32.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.853" endtime="20201117 14:47:32.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.811" endtime="20201117 14:47:32.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.805" endtime="20201117 14:47:32.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.876" endtime="20201117 14:47:33.222"></status>
</kw>
<msg timestamp="20201117 14:47:33.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045362069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045455819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.873" endtime="20201117 14:47:33.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045362069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045455819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.231" endtime="20201117 14:47:33.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.250" endtime="20201117 14:47:33.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.866" endtime="20201117 14:47:33.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.861" endtime="20201117 14:47:33.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.269" level="INFO">${RESULT} = [{'time': 0.045455819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.375000000000355e-05, 'source_diff': 9.375000000000355e-05}, {'time': 0.045581125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.260" endtime="20201117 14:47:33.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:33.271" endtime="20201117 14:47:33.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.311" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.308" endtime="20201117 14:47:33.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.317" level="INFO">VALUE: [9.375000000000355e-05, 9.411100000000089e-05, 9.41800000000062e-05, 9.519499999999931e-05, 9.399999999999686e-05, 9.474999999999761e-05, 9.386100000000064e-05, 9.374999999999661e-05, 9.377800000000269e-05, 9.406899999999524e-05, 9.420800000000534e-05, 9.374999999999661e-05, 9.469399999999933e-05, 9.52079999999994e-05, 9.443099999999899e-05, 9.462500000000096e-05, 9.369399999999833e-05, 9.408400000000122e-05, 9.426399999999668e-05, 9.431999999999496e-05, 9.537500000000171e-05, 9.466699999999967e-05, 9.395799999999815e-05, 9.454100000000354e-05, 9.44859999999978e-05, 9.463899999999359e-05, 9.41529999999996e-05, 9.544499999999956e-05, 9.55409999999976e-05, 9.373599999999704e-05, 9.438900000000028e-05, 9.407000000000165e-05, 9.395800000000509e-05, 9.52079999999994e-05, 9.384800000000054e-05, 9.466699999999967e-05, 9.41529999999996e-05, 9.377799999999575e-05, 9.434700000000157e-05, 9.445799999999865e-05, 9.387500000000021e-05, 9.431900000000243e-05, 9.459700000000182e-05, 9.426399999999668e-05, 9.46530000000001e-05, 9.419399999999883e-05, 9.391699999999892e-05, 9.411099999999395e-05, 9.40000000000038e-05, 9.416699999999917e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.313" endtime="20201117 14:47:33.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.301" endtime="20201117 14:47:33.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.326" endtime="20201117 14:47:33.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.335" endtime="20201117 14:47:33.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.330" endtime="20201117 14:47:33.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.321" endtime="20201117 14:47:33.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.801" endtime="20201117 14:47:33.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.797" endtime="20201117 14:47:33.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.796" endtime="20201117 14:47:33.362"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.389" endtime="20201117 14:47:33.410"></status>
</kw>
<msg timestamp="20201117 14:47:33.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.385" endtime="20201117 14:47:33.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.413" endtime="20201117 14:47:33.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.420" endtime="20201117 14:47:33.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.378" endtime="20201117 14:47:33.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.372" endtime="20201117 14:47:33.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.444" endtime="20201117 14:47:33.782"></status>
</kw>
<msg timestamp="20201117 14:47:33.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.440" endtime="20201117 14:47:33.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.792" endtime="20201117 14:47:33.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.810" endtime="20201117 14:47:33.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.432" endtime="20201117 14:47:33.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.428" endtime="20201117 14:47:33.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.828" level="INFO">${RESULT} = [{'time': 0.045579681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.481999999999546e-05, 'source_diff': 9.481999999999546e-05}, {'time': 0.045703944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.819" endtime="20201117 14:47:33.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.858" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:33.830" endtime="20201117 14:47:33.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.869" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.867" endtime="20201117 14:47:33.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.875" level="INFO">VALUE: [9.481999999999546e-05, 9.543000000000051e-05, 9.65279999999985e-05, 9.524999999999811e-05, 9.541699999999348e-05, 9.529199999999682e-05, 9.524999999999811e-05, 9.559699999999588e-05, 9.506899999999624e-05, 9.519499999999931e-05, 9.554199999999707e-05, 9.527800000000419e-05, 9.473600000000498e-05, 9.531900000000343e-05, 9.538900000000128e-05, 9.508399999999528e-05, 9.597199999999972e-05, 9.538900000000128e-05, 9.506899999999624e-05, 9.654199999999807e-05, 9.48200000000024e-05, 9.470899999999838e-05, 9.469499999999881e-05, 9.504199999999657e-05, 9.5333000000003e-05, 9.480600000000283e-05, 9.473599999999804e-05, 9.525000000000505e-05, 9.501399999999743e-05, 9.527699999999778e-05, 9.495899999999863e-05, 9.474999999999761e-05, 9.490300000000035e-05, 9.493000000000001e-05, 9.519499999999931e-05, 9.495899999999863e-05, 9.548600000000573e-05, 9.55279999999975e-05, 9.497199999999872e-05, 9.493000000000001e-05, 9.479099999999685e-05, 9.569400000000033e-05, 9.475000000000455e-05, 9.480600000000283e-05, 9.547199999999922e-05, 9.477700000000422e-05, 9.63609999999962e-05, 9.543000000000051e-05, 9.65409999999986e-05, 9.49159999999935e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.872" endtime="20201117 14:47:33.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.860" endtime="20201117 14:47:33.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.884" endtime="20201117 14:47:33.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.893" endtime="20201117 14:47:33.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.888" endtime="20201117 14:47:33.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.879" endtime="20201117 14:47:33.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.368" endtime="20201117 14:47:33.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.364" endtime="20201117 14:47:33.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.363" endtime="20201117 14:47:33.920"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.947" endtime="20201117 14:47:33.967"></status>
</kw>
<msg timestamp="20201117 14:47:33.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.944" endtime="20201117 14:47:33.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.970" endtime="20201117 14:47:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.977" endtime="20201117 14:47:33.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.936" endtime="20201117 14:47:33.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.931" endtime="20201117 14:47:33.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.001" endtime="20201117 14:47:34.334"></status>
</kw>
<msg timestamp="20201117 14:47:34.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045444208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.997" endtime="20201117 14:47:34.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045444208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.344" endtime="20201117 14:47:34.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.363" endtime="20201117 14:47:34.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.990" endtime="20201117 14:47:34.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.985" endtime="20201117 14:47:34.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.382" level="INFO">${RESULT} = [{'time': 0.045539958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.574999999999861e-05, 'source_diff': 9.574999999999861e-05}, {'time': 0.045670278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.373" endtime="20201117 14:47:34.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.412" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:34.384" endtime="20201117 14:47:34.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.423" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.421" endtime="20201117 14:47:34.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.429" level="INFO">VALUE: [9.574999999999861e-05, 9.658400000000372e-05, 9.67080000000009e-05, 9.752700000000003e-05, 9.598600000000623e-05, 9.579199999999732e-05, 9.651399999999893e-05, 9.656899999999774e-05, 9.572299999999895e-05, 9.577800000000469e-05, 9.672200000000047e-05, 9.705599999999814e-05, 9.598600000000623e-05, 9.704199999999857e-05, 9.72080000000014e-05, 9.666700000000167e-05, 9.572299999999895e-05, 9.655499999999817e-05, 9.58059999999969e-05, 9.590199999999494e-05, 9.655600000000458e-05, 9.573599999999904e-05, 9.672200000000047e-05, 9.579099999999785e-05, 9.616699999999423e-05, 9.572199999999947e-05, 9.594500000000006e-05, 9.613900000000203e-05, 9.579199999999732e-05, 9.577800000000469e-05, 9.608299999999681e-05, 9.597199999999972e-05, 9.627699999999878e-05, 9.602800000000494e-05, 9.663900000000253e-05, 9.661099999999645e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.629099999999835e-05, 9.670900000000038e-05, 9.590200000000187e-05, 9.741600000000294e-05, 9.633400000000347e-05, 9.577799999999775e-05, 9.68609999999967e-05, 9.593100000000049e-05, 9.587499999999527e-05, 9.643099999999405e-05, 9.6333000000004e-05, 9.588900000000178e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.426" endtime="20201117 14:47:34.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.414" endtime="20201117 14:47:34.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.438" endtime="20201117 14:47:34.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.446" endtime="20201117 14:47:34.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.442" endtime="20201117 14:47:34.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.433" endtime="20201117 14:47:34.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.926" endtime="20201117 14:47:34.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.923" endtime="20201117 14:47:34.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.921" endtime="20201117 14:47:34.473"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.479" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.501" endtime="20201117 14:47:34.524"></status>
</kw>
<msg timestamp="20201117 14:47:34.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.498" endtime="20201117 14:47:34.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.528" endtime="20201117 14:47:34.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.534" endtime="20201117 14:47:34.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.490" endtime="20201117 14:47:34.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.484" endtime="20201117 14:47:34.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.557" endtime="20201117 14:47:34.905"></status>
</kw>
<msg timestamp="20201117 14:47:34.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047701444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.554" endtime="20201117 14:47:34.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047701444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047798444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.914" endtime="20201117 14:47:34.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.934" endtime="20201117 14:47:34.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.547" endtime="20201117 14:47:34.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.542" endtime="20201117 14:47:34.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.952" level="INFO">${RESULT} = [{'time': 0.047798444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.699999999999986e-05, 'source_diff': 9.699999999999986e-05}, {'time': 0.04792875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:34.943" endtime="20201117 14:47:34.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:34.954" endtime="20201117 14:47:34.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.996" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.994" endtime="20201117 14:47:34.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.002" level="INFO">VALUE: [9.699999999999986e-05, 9.706899999999824e-05, 9.837499999999777e-05, 9.73609999999972e-05, 9.673600000000004e-05, 9.713899999999609e-05, 9.683299999999756e-05, 9.68609999999967e-05, 9.773600000000104e-05, 9.709700000000432e-05, 9.708299999999781e-05, 9.677699999999928e-05, 9.704199999999857e-05, 9.777799999999975e-05, 9.83609999999982e-05, 9.705599999999814e-05, 9.690300000000235e-05, 9.806899999999924e-05, 9.76530000000031e-05, 9.690300000000235e-05, 9.745800000000165e-05, 9.744400000000208e-05, 9.712500000000346e-05, 9.755599999999864e-05, 9.681900000000493e-05, 9.676399999999918e-05, 9.731899999999849e-05, 9.68059999999979e-05, 9.747200000000122e-05, 9.704199999999857e-05, 9.768000000000276e-05, 9.684699999999713e-05, 9.790299999999641e-05, 9.766700000000267e-05, 9.756999999999821e-05, 9.718000000000226e-05, 9.855599999999964e-05, 9.708300000000475e-05, 9.670900000000038e-05, 9.699999999999986e-05, 9.77080000000019e-05, 9.762500000000396e-05, 9.758299999999831e-05, 9.731899999999849e-05, 9.74730000000007e-05, 9.690300000000235e-05, 9.709699999999738e-05, 9.837500000000471e-05, 9.711099999999695e-05, 9.69730000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.998" endtime="20201117 14:47:35.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.987" endtime="20201117 14:47:35.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.010" endtime="20201117 14:47:35.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.019" endtime="20201117 14:47:35.041"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.014" endtime="20201117 14:47:35.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.006" endtime="20201117 14:47:35.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.480" endtime="20201117 14:47:35.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.476" endtime="20201117 14:47:35.046"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.474" endtime="20201117 14:47:35.046"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.051" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.073" endtime="20201117 14:47:35.093"></status>
</kw>
<msg timestamp="20201117 14:47:35.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.070" endtime="20201117 14:47:35.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.097" endtime="20201117 14:47:35.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.103" endtime="20201117 14:47:35.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.063" endtime="20201117 14:47:35.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.057" endtime="20201117 14:47:35.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.126" endtime="20201117 14:47:35.461"></status>
</kw>
<msg timestamp="20201117 14:47:35.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046139417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046237806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.123" endtime="20201117 14:47:35.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046139417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046237806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.470" endtime="20201117 14:47:35.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.489" endtime="20201117 14:47:35.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.116" endtime="20201117 14:47:35.496"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.111" endtime="20201117 14:47:35.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.508" level="INFO">${RESULT} = [{'time': 0.046237806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.838899999999734e-05, 'source_diff': 9.838899999999734e-05}, {'time': 0.046368167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.499" endtime="20201117 14:47:35.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.537" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:35.510" endtime="20201117 14:47:35.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.548" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.546" endtime="20201117 14:47:35.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.554" level="INFO">VALUE: [9.838899999999734e-05, 9.827800000000025e-05, 9.85280000000005e-05, 9.866699999999673e-05, 9.795800000000215e-05, 9.866700000000367e-05, 9.842999999999658e-05, 9.834699999999863e-05, 9.844400000000308e-05, 9.812500000000446e-05, 9.823600000000154e-05, 9.872199999999554e-05, 9.79860000000013e-05, 9.890199999999794e-05, 9.813900000000403e-05, 9.844400000000308e-05, 9.795800000000215e-05, 9.844400000000308e-05, 9.829100000000035e-05, 9.865299999999716e-05, 9.773600000000104e-05, 9.865299999999716e-05, 9.779099999999985e-05, 9.87080000000029e-05, 9.908299999999981e-05, 9.800000000000086e-05, 9.786100000000464e-05, 9.84860000000018e-05, 9.78609999999977e-05, 9.781899999999899e-05, 9.811099999999795e-05, 9.869500000000281e-05, 9.78059999999989e-05, 9.8028e-05, 9.852700000000103e-05, 9.807000000000565e-05, 9.791699999999598e-05, 9.769400000000233e-05, 9.8415999999997e-05, 9.81809999999958e-05, 9.769400000000233e-05, 9.837500000000471e-05, 9.869500000000281e-05, 9.92359999999956e-05, 9.840300000000385e-05, 9.78059999999989e-05, 9.79860000000013e-05, 9.961099999999945e-05, 9.772200000000147e-05, 9.838899999999734e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.551" endtime="20201117 14:47:35.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.539" endtime="20201117 14:47:35.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.563" endtime="20201117 14:47:35.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.571" endtime="20201117 14:47:35.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.567" endtime="20201117 14:47:35.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.559" endtime="20201117 14:47:35.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.053" endtime="20201117 14:47:35.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.049" endtime="20201117 14:47:35.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.047" endtime="20201117 14:47:35.598"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.625" endtime="20201117 14:47:35.645"></status>
</kw>
<msg timestamp="20201117 14:47:35.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.622" endtime="20201117 14:47:35.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.648" endtime="20201117 14:47:35.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.654" endtime="20201117 14:47:35.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.614" endtime="20201117 14:47:35.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.609" endtime="20201117 14:47:35.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.678" endtime="20201117 14:47:36.012"></status>
</kw>
<msg timestamp="20201117 14:47:36.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045197861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.674" endtime="20201117 14:47:36.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045197861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.021" endtime="20201117 14:47:36.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.040" endtime="20201117 14:47:36.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.667" endtime="20201117 14:47:36.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.662" endtime="20201117 14:47:36.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.057" level="INFO">${RESULT} = [{'time': 0.045197861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.95280000000015e-05, 'source_diff': 9.95280000000015e-05}, {'time': 0.045328125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:36.048" endtime="20201117 14:47:36.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:36.059" endtime="20201117 14:47:36.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.098" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.096" endtime="20201117 14:47:36.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.104" level="INFO">VALUE: [9.95280000000015e-05, 9.952799999999457e-05, 0.0001002080000000044, 9.92359999999956e-05, 9.93609999999992e-05, 9.9513999999995e-05, 9.900000000000186e-05, 9.955499999999423e-05, 9.949999999999543e-05, 9.901299999999502e-05, 9.915299999999766e-05, 0.0001005280000000025, 9.87359999999951e-05, 9.922199999999604e-05, 9.913899999999809e-05, 9.904200000000057e-05, 9.900000000000186e-05, 0.00010034700000000063, 9.877800000000075e-05, 9.879200000000032e-05, 9.873600000000204e-05, 9.963899999999859e-05, 9.95280000000015e-05, 9.95689999999938e-05, 9.940300000000485e-05, 9.899999999999493e-05, 9.916599999999776e-05, 9.944400000000408e-05, 9.879200000000032e-05, 0.00010038899999999934, 9.881999999999946e-05, 9.877700000000128e-05, 9.915299999999766e-05, 9.927700000000178e-05, 0.00010052799999999557, 9.927800000000125e-05, 9.906900000000024e-05, 9.952700000000203e-05, 9.9415999999998e-05, 9.966599999999826e-05, 9.916599999999776e-05, 9.931900000000049e-05, 0.00010054199999999514, 9.883299999999956e-05, 9.916700000000417e-05, 0.0001003610000000002, 9.89159999999975e-05, 0.00010004199999999464, 9.912499999999852e-05, 0.00010055500000000217]</msg>
<status status="PASS" starttime="20201117 14:47:36.100" endtime="20201117 14:47:36.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.089" endtime="20201117 14:47:36.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.113" endtime="20201117 14:47:36.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.121" endtime="20201117 14:47:36.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.117" endtime="20201117 14:47:36.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.108" endtime="20201117 14:47:36.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.605" endtime="20201117 14:47:36.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.601" endtime="20201117 14:47:36.147"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.599" endtime="20201117 14:47:36.148"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.153" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.175" endtime="20201117 14:47:36.195"></status>
</kw>
<msg timestamp="20201117 14:47:36.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.172" endtime="20201117 14:47:36.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.198" endtime="20201117 14:47:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.205" endtime="20201117 14:47:36.209"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.164" endtime="20201117 14:47:36.210"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.158" endtime="20201117 14:47:36.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.228" endtime="20201117 14:47:36.560"></status>
</kw>
<msg timestamp="20201117 14:47:36.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045409222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045509097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.225" endtime="20201117 14:47:36.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045409222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045509097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.569" endtime="20201117 14:47:36.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.587" endtime="20201117 14:47:36.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.218" endtime="20201117 14:47:36.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.213" endtime="20201117 14:47:36.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.606" level="INFO">${RESULT} = [{'time': 0.045509097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.987499999999927e-05, 'source_diff': 9.987499999999927e-05}, {'time': 0.045640444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.597" endtime="20201117 14:47:36.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.641" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:36.613" endtime="20201117 14:47:36.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.652" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.649" endtime="20201117 14:47:36.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.657" level="INFO">VALUE: [9.987499999999927e-05, 0.00010155500000000317, 0.0001001809999999978, 9.97359999999961e-05, 0.00010126399999999675, 0.00010058400000000078, 9.998599999999636e-05, 0.00010061100000000045, 0.00010048599999999686, 0.00010067999999999883, 0.00010016699999999823, 0.00010106999999999478, 0.00010011099999999995, 0.00010029100000000235, 0.0001000410000000021, 0.00010016699999999823, 0.00010066699999999873, 0.00010047199999999729, 0.00010017999999999833, 9.99159999999985e-05, 0.00010029099999999541, 0.00010000000000000286, 0.00010052799999999557, 0.00010024999999999618, 0.00010140200000000044, 0.00010044500000000456, 9.99860000000033e-05, 9.980500000000142e-05, 0.00010025000000000311, 0.00010027799999999532, 9.992999999999808e-05, 0.00010000000000000286, 0.00010062500000000002, 0.00010069400000000533, 0.0001003610000000002, 0.00010008300000000081, 0.00010065299999999916, 9.995899999999669e-05, 0.00010044500000000456, 0.00010037499999999977, 0.00010061100000000045, 9.98060000000009e-05, 0.00010104200000000257, 9.995899999999669e-05, 0.00010006900000000124, 0.00010045800000000465, 0.00010004199999999464, 0.00010073600000000404, 9.987499999999927e-05, 0.00010004099999999516]</msg>
<status status="PASS" starttime="20201117 14:47:36.654" endtime="20201117 14:47:36.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.643" endtime="20201117 14:47:36.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.666" endtime="20201117 14:47:36.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.675" endtime="20201117 14:47:36.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.670" endtime="20201117 14:47:36.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.661" endtime="20201117 14:47:36.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.154" endtime="20201117 14:47:36.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.150" endtime="20201117 14:47:36.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.149" endtime="20201117 14:47:36.701"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.728" endtime="20201117 14:47:36.748"></status>
</kw>
<msg timestamp="20201117 14:47:36.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.725" endtime="20201117 14:47:36.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.751" endtime="20201117 14:47:36.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.758" endtime="20201117 14:47:36.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.718" endtime="20201117 14:47:36.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.712" endtime="20201117 14:47:36.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.781" endtime="20201117 14:47:37.116"></status>
</kw>
<msg timestamp="20201117 14:47:37.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045159708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045260611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.778" endtime="20201117 14:47:37.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045159708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045260611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.126" endtime="20201117 14:47:37.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.144" endtime="20201117 14:47:37.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.770" endtime="20201117 14:47:37.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.766" endtime="20201117 14:47:37.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.161" level="INFO">${RESULT} = [{'time': 0.045260611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010090299999999941, 'source_diff': 0.00010090299999999941}, {'time': 0.045394931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:37.153" endtime="20201117 14:47:37.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.194" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:37.163" endtime="20201117 14:47:37.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.204" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.202" endtime="20201117 14:47:37.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.210" level="INFO">VALUE: [0.00010090299999999941, 0.00010145899999999819, 0.00010202799999999707, 0.00010069499999999787, 0.00010113900000000009, 0.0001008339999999941, 0.00010084700000000113, 0.000101028000000003, 0.00010109700000000138, 0.00010107000000000171, 0.0001016939999999994, 0.00010234799999999517, 0.00010101400000000343, 0.00010216600000000076, 0.00010115299999999966, 0.00010091600000000644, 0.00010109800000000085, 0.0001014860000000048, 0.00010152700000000403, 0.00010084699999999419, 0.00010094499999999812, 0.00010163900000000059, 0.00010066699999999873, 0.00010143099999999905, 0.00010163900000000059, 0.00010126399999999675, 0.00010116699999999923, 0.0001020689999999963, 0.00010187499999999433, 0.00010081900000000199, 0.00010095899999999769, 0.00010193100000000649, 0.00010094400000000558, 0.00010072199999999754, 0.00010077799999999582, 0.0001017080000000059, 0.00010145899999999819, 0.00010133400000000153, 0.0001017080000000059, 0.00010162499999999408, 0.00010116699999999923, 0.00010115299999999966, 0.00010141699999999948, 0.00010080500000000242, 0.00010131999999999503, 0.00010147200000000522, 0.00010122199999999804, 0.00010145799999999872, 0.00010087500000000027, 0.00010127699999999684]</msg>
<status status="PASS" starttime="20201117 14:47:37.207" endtime="20201117 14:47:37.211"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.195" endtime="20201117 14:47:37.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.218" endtime="20201117 14:47:37.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.227" endtime="20201117 14:47:37.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.222" endtime="20201117 14:47:37.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.214" endtime="20201117 14:47:37.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.708" endtime="20201117 14:47:37.252"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.704" endtime="20201117 14:47:37.253"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.702" endtime="20201117 14:47:37.253"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.258" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.280" endtime="20201117 14:47:37.300"></status>
</kw>
<msg timestamp="20201117 14:47:37.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.277" endtime="20201117 14:47:37.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.303" endtime="20201117 14:47:37.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.310" endtime="20201117 14:47:37.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.270" endtime="20201117 14:47:37.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.264" endtime="20201117 14:47:37.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.334" endtime="20201117 14:47:37.668"></status>
</kw>
<msg timestamp="20201117 14:47:37.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.330" endtime="20201117 14:47:37.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045011736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.677" endtime="20201117 14:47:37.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.695" endtime="20201117 14:47:37.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.322" endtime="20201117 14:47:37.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.318" endtime="20201117 14:47:37.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.714" level="INFO">${RESULT} = [{'time': 0.045011736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010254199999999714, 'source_diff': 0.00010254199999999714}, {'time': 0.045144056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:37.706" endtime="20201117 14:47:37.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:37.716" endtime="20201117 14:47:37.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.760" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.758" endtime="20201117 14:47:37.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.765" level="INFO">VALUE: [0.00010254199999999714, 0.00010273699999999858, 0.00010182000000000246, 0.00010247199999999929, 0.00010261100000000245, 0.00010176399999999725, 0.00010216600000000076, 0.00010237500000000177, 0.00010206900000000324, 0.00010270799999999997, 0.00010354199999999814, 0.0001031940000000009, 0.0001030689999999973, 0.0001026940000000004, 0.00010213900000000109, 0.00010262500000000202, 0.00010241700000000048, 0.00010174999999999768, 0.00010273600000000604, 0.00010258399999999585, 0.00010179099999999691, 0.00010207000000000271, 0.000102513999999998, 0.00010179100000000385, 0.00010190200000000094, 0.00010211199999999448, 0.00010208300000000281, 0.0001023610000000022, 0.00010213900000000109, 0.0001018610000000017, 0.00010234699999999569, 0.00010337500000000277, 0.00010209700000000238, 0.0001020139999999975, 0.00010176399999999725, 0.00010338900000000234, 0.00010249999999999843, 0.0001026940000000004, 0.00010212500000000152, 0.00010255499999999723, 0.00010225000000000511, 0.00010233400000000253, 0.00010340299999999497, 0.00010183300000000256, 0.00010186099999999476, 0.00010209699999999544, 0.00010220799999999947, 0.0001019860000000053, 0.000102513999999998, 0.00010219500000000631]</msg>
<status status="PASS" starttime="20201117 14:47:37.762" endtime="20201117 14:47:37.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.750" endtime="20201117 14:47:37.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.774" endtime="20201117 14:47:37.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.782" endtime="20201117 14:47:37.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.778" endtime="20201117 14:47:37.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.769" endtime="20201117 14:47:37.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.260" endtime="20201117 14:47:37.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.256" endtime="20201117 14:47:37.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.254" endtime="20201117 14:47:37.809"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.814" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.835" endtime="20201117 14:47:37.855"></status>
</kw>
<msg timestamp="20201117 14:47:37.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.832" endtime="20201117 14:47:37.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.859" endtime="20201117 14:47:37.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.866" endtime="20201117 14:47:37.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.825" endtime="20201117 14:47:37.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.819" endtime="20201117 14:47:37.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.889" endtime="20201117 14:47:38.224"></status>
</kw>
<msg timestamp="20201117 14:47:38.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045082486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045185875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.886" endtime="20201117 14:47:38.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045082486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045185875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.234" endtime="20201117 14:47:38.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.252" endtime="20201117 14:47:38.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.879" endtime="20201117 14:47:38.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.874" endtime="20201117 14:47:38.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.269" level="INFO">${RESULT} = [{'time': 0.045185875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010338900000000234, 'source_diff': 0.00010338900000000234}, {'time': 0.045323264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:38.260" endtime="20201117 14:47:38.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:38.271" endtime="20201117 14:47:38.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.310" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.307" endtime="20201117 14:47:38.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.315" level="INFO">VALUE: [0.00010338900000000234, 0.00010329200000000482, 0.00010277799999999782, 0.00010295800000000022, 0.0001034019999999955, 0.00010354199999999814, 0.00010340300000000191, 0.00010272199999999954, 0.00010299999999999893, 0.00010290300000000141, 0.00010297199999999979, 0.00010361200000000292, 0.0001030139999999985, 0.00010308299999999687, 0.00010322200000000004, 0.0001030139999999985, 0.00010352699999999909, 0.00010359699999999694, 0.00010340300000000191, 0.00010347200000000029, 0.00010288900000000184, 0.00010344500000000062, 0.00010349999999999943, 0.00010283300000000356, 0.00010279200000000432, 0.00010315300000000166, 0.00010299999999999893, 0.00010322200000000004, 0.00010322200000000004, 0.00010284700000000313, 0.0001032359999999996, 0.00010369399999999446, 0.00010299999999999893, 0.00010438900000000334, 0.00010315299999999472, 0.0001029860000000063, 0.00010313800000000262, 0.00010320800000000047, 0.00010459699999999794, 0.0001036810000000013, 0.00010276399999999825, 0.00010366700000000173, 0.00010354199999999814, 0.00010336099999999626, 0.00010320800000000047, 0.00010284700000000313, 0.0001027359999999991, 0.00010331899999999755, 0.00010343100000000105, 0.00010352699999999909]</msg>
<status status="PASS" starttime="20201117 14:47:38.312" endtime="20201117 14:47:38.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.300" endtime="20201117 14:47:38.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.324" endtime="20201117 14:47:38.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.332" endtime="20201117 14:47:38.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.328" endtime="20201117 14:47:38.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.319" endtime="20201117 14:47:38.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.815" endtime="20201117 14:47:38.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.811" endtime="20201117 14:47:38.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.810" endtime="20201117 14:47:38.358"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.386" endtime="20201117 14:47:38.406"></status>
</kw>
<msg timestamp="20201117 14:47:38.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.383" endtime="20201117 14:47:38.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.409" endtime="20201117 14:47:38.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.416" endtime="20201117 14:47:38.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.375" endtime="20201117 14:47:38.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.369" endtime="20201117 14:47:38.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.439" endtime="20201117 14:47:38.773"></status>
</kw>
<msg timestamp="20201117 14:47:38.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045735792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045839708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.436" endtime="20201117 14:47:38.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045735792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045839708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.782" endtime="20201117 14:47:38.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.800" endtime="20201117 14:47:38.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.428" endtime="20201117 14:47:38.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.424" endtime="20201117 14:47:38.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.819" level="INFO">${RESULT} = [{'time': 0.045839708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001039160000000025, 'source_diff': 0.0001039160000000025}, {'time': 0.045973014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.811" endtime="20201117 14:47:38.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:38.821" endtime="20201117 14:47:38.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.860" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.857" endtime="20201117 14:47:38.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.865" level="INFO">VALUE: [0.0001039160000000025, 0.00010393100000000155, 0.00010540300000000391, 0.0001050559999999992, 0.00010401400000000643, 0.00010426399999999975, 0.0001040689999999983, 0.00010447199999999435, 0.0001045559999999987, 0.00010395800000000122, 0.00010468099999999536, 0.00010463899999999665, 0.00010469499999999493, 0.00010461099999999751, 0.00010433299999999812, 0.00010437500000000377, 0.0001041940000000019, 0.00010434700000000463, 0.00010416600000000276, 0.00010376400000000618, 0.00010437500000000377, 0.00010376399999999925, 0.00010392999999999514, 0.00010433299999999812, 0.00010381899999999805, 0.00010555500000000023, 0.00010393100000000155, 0.00010387499999999633, 0.00010397300000000026, 0.00010445800000000172, 0.0001038610000000037, 0.00010463899999999665, 0.00010409699999999744, 0.00010388799999999643, 0.00010426399999999975, 0.00010377699999999934, 0.00010449999999999349, 0.00010427699999999984, 0.00010459799999999742, 0.0001038610000000037, 0.00010454199999999914, 0.00010406900000000524, 0.00010456999999999828, 0.00010372200000000054, 0.00010376399999999925, 0.00010381899999999805, 0.00010444499999999468, 0.00010470799999999503, 0.00010463899999999665, 0.00010418099999999486]</msg>
<status status="PASS" starttime="20201117 14:47:38.862" endtime="20201117 14:47:38.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.851" endtime="20201117 14:47:38.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.874" endtime="20201117 14:47:38.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.883" endtime="20201117 14:47:38.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.878" endtime="20201117 14:47:38.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.869" endtime="20201117 14:47:38.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.365" endtime="20201117 14:47:38.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.361" endtime="20201117 14:47:38.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.359" endtime="20201117 14:47:38.909"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.936" endtime="20201117 14:47:38.956"></status>
</kw>
<msg timestamp="20201117 14:47:38.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.933" endtime="20201117 14:47:38.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.960" endtime="20201117 14:47:38.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.966" endtime="20201117 14:47:38.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.925" endtime="20201117 14:47:38.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.920" endtime="20201117 14:47:38.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.989" endtime="20201117 14:47:39.324"></status>
</kw>
<msg timestamp="20201117 14:47:39.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04493775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045042806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:38.986" endtime="20201117 14:47:39.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04493775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045042806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:39.333" endtime="20201117 14:47:39.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.352" endtime="20201117 14:47:39.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.979" endtime="20201117 14:47:39.357"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.974" endtime="20201117 14:47:39.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.369" level="INFO">${RESULT} = [{'time': 0.045042806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001050559999999992, 'source_diff': 0.0001050559999999992}, {'time': 0.045177125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.360" endtime="20201117 14:47:39.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.401" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:39.371" endtime="20201117 14:47:39.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.412" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.410" endtime="20201117 14:47:39.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.417" level="INFO">VALUE: [0.0001050559999999992, 0.00010513899999999715, 0.0001060690000000003, 0.00010513899999999715, 0.0001050140000000005, 0.00010505499999999973, 0.00010659699999999994, 0.00010531999999999903, 0.00010509700000000538, 0.00010563899999999765, 0.00010529199999999989, 0.0001064019999999985, 0.00010604100000000116, 0.00010530499999999998, 0.0001050140000000005, 0.00010515300000000366, 0.00010497200000000179, 0.00010484699999999819, 0.00010515300000000366, 0.00010509699999999844, 0.0001063889999999984, 0.00010536099999999826, 0.00010566699999999679, 0.00010541599999999707, 0.00010554100000000066, 0.00010637499999999883, 0.00010658399999999985, 0.00010477799999999982, 0.00010641599999999807, 0.00010477799999999982, 0.0001053339999999986, 0.00010504199999999964, 0.00010559699999999894, 0.00010502700000000059, 0.00010506999999999878, 0.00010590299999999747, 0.00010587500000000527, 0.00010637499999999883, 0.00010534699999999869, 0.00010475000000000068, 0.0001059160000000045, 0.00010545800000000272, 0.00010530599999999946, 0.00010475000000000068, 0.0001057089999999955, 0.00010655500000000123, 0.00010534699999999869, 0.00010513899999999715, 0.00010477700000000034, 0.00010541700000000348]</msg>
<status status="PASS" starttime="20201117 14:47:39.414" endtime="20201117 14:47:39.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.403" endtime="20201117 14:47:39.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.427" endtime="20201117 14:47:39.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.435" endtime="20201117 14:47:39.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.431" endtime="20201117 14:47:39.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.422" endtime="20201117 14:47:39.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.916" endtime="20201117 14:47:39.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.912" endtime="20201117 14:47:39.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.910" endtime="20201117 14:47:39.461"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.466" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.488" endtime="20201117 14:47:39.509"></status>
</kw>
<msg timestamp="20201117 14:47:39.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.485" endtime="20201117 14:47:39.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.512" endtime="20201117 14:47:39.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.519" endtime="20201117 14:47:39.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.478" endtime="20201117 14:47:39.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.472" endtime="20201117 14:47:39.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.543" endtime="20201117 14:47:39.876"></status>
</kw>
<msg timestamp="20201117 14:47:39.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045030778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045137125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.540" endtime="20201117 14:47:39.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045030778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045137125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.885" endtime="20201117 14:47:39.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.904" endtime="20201117 14:47:39.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.532" endtime="20201117 14:47:39.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.527" endtime="20201117 14:47:39.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.922" level="INFO">${RESULT} = [{'time': 0.045137125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010634699999999969, 'source_diff': 0.00010634699999999969}, {'time': 0.045274472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:39.914" endtime="20201117 14:47:39.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.952" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:39.924" endtime="20201117 14:47:39.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.963" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.960" endtime="20201117 14:47:39.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.969" level="INFO">VALUE: [0.00010634699999999969, 0.00010658300000000037, 0.0001070419999999947, 0.00010609699999999944, 0.00010597200000000279, 0.00010719499999999743, 0.00010652799999999463, 0.00010572200000000254, 0.00010575000000000168, 0.00010658300000000037, 0.00010640200000000544, 0.00010586099999999876, 0.00010580599999999996, 0.0001064019999999985, 0.00010643099999999711, 0.00010590299999999747, 0.00010595800000000322, 0.0001068889999999989, 0.00010633300000000012, 0.00010754100000000266, 0.0001074019999999995, 0.00010647199999999635, 0.00010591699999999704, 0.00010588900000000484, 0.00010719499999999743, 0.00010661099999999951, 0.0001063889999999984, 0.00010658399999999985, 0.00010647199999999635, 0.00010659699999999994, 0.000106901999999999, 0.00010605500000000073, 0.00010584700000000613, 0.0001070690000000013, 0.00010616700000000423, 0.00010654200000000114, 0.00010584699999999919, 0.0001066810000000043, 0.00010655499999999429, 0.00010637499999999883, 0.00010617999999999739, 0.00010615299999999772, 0.00010604200000000064, 0.00010638900000000534, 0.00010612499999999858, 0.00010605500000000073, 0.00010579100000000091, 0.00010675000000000268, 0.00010627799999999438, 0.00010640299999999797]</msg>
<status status="PASS" starttime="20201117 14:47:39.965" endtime="20201117 14:47:39.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.954" endtime="20201117 14:47:39.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.978" endtime="20201117 14:47:39.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.986" endtime="20201117 14:47:40.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.982" endtime="20201117 14:47:40.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.973" endtime="20201117 14:47:40.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.468" endtime="20201117 14:47:40.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.464" endtime="20201117 14:47:40.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.462" endtime="20201117 14:47:40.012"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.039" endtime="20201117 14:47:40.059"></status>
</kw>
<msg timestamp="20201117 14:47:40.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.036" endtime="20201117 14:47:40.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.063" endtime="20201117 14:47:40.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.069" endtime="20201117 14:47:40.073"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.029" endtime="20201117 14:47:40.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.023" endtime="20201117 14:47:40.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.093" endtime="20201117 14:47:40.426"></status>
</kw>
<msg timestamp="20201117 14:47:40.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045009194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.089" endtime="20201117 14:47:40.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045009194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.436" endtime="20201117 14:47:40.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.454" endtime="20201117 14:47:40.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.082" endtime="20201117 14:47:40.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.077" endtime="20201117 14:47:40.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.471" level="INFO">${RESULT} = [{'time': 0.045115944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010674999999999574, 'source_diff': 0.00010674999999999574}, {'time': 0.045255292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:40.463" endtime="20201117 14:47:40.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.501" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:40.474" endtime="20201117 14:47:40.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.512" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.510" endtime="20201117 14:47:40.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.518" level="INFO">VALUE: [0.00010674999999999574, 0.00010744500000000462, 0.00010856999999999534, 0.00010677799999999488, 0.0001072219999999971, 0.0001072219999999971, 0.00010683300000000062, 0.00010713899999999915, 0.00010730600000000146, 0.00010683300000000062, 0.00010698600000000336, 0.0001078889999999999, 0.00010716699999999829, 0.00010722200000000404, 0.00010761100000000051, 0.00010687499999999933, 0.00010719499999999743, 0.00010697199999999685, 0.0001068340000000001, 0.00010768099999999836, 0.00010687499999999933, 0.00010715300000000566, 0.00010672299999999607, 0.00010847199999999835, 0.00010720800000000447, 0.00010754200000000214, 0.00010700000000000293, 0.00010677800000000182, 0.00010861100000000151, 0.0001077219999999976, 0.00010724999999999624, 0.00010731899999999461, 0.00010684700000000019, 0.000106901999999999, 0.00010762500000000008, 0.00010763899999999965, 0.00010707000000000078, 0.00010801399999999656, 0.00010690300000000541, 0.00010727800000000232, 0.00010781900000000205, 0.0001075560000000017, 0.00010763899999999965, 0.0001070140000000025, 0.00010812500000000058, 0.00010731900000000155, 0.00010752799999999563, 0.00010741699999999854, 0.00010729200000000189, 0.00010844499999999868]</msg>
<status status="PASS" starttime="20201117 14:47:40.515" endtime="20201117 14:47:40.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.503" endtime="20201117 14:47:40.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.526" endtime="20201117 14:47:40.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.535" endtime="20201117 14:47:40.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.530" endtime="20201117 14:47:40.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.522" endtime="20201117 14:47:40.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.019" endtime="20201117 14:47:40.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.015" endtime="20201117 14:47:40.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.013" endtime="20201117 14:47:40.562"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.568" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.590" endtime="20201117 14:47:40.610"></status>
</kw>
<msg timestamp="20201117 14:47:40.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.586" endtime="20201117 14:47:40.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.613" endtime="20201117 14:47:40.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.619" endtime="20201117 14:47:40.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.579" endtime="20201117 14:47:40.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.573" endtime="20201117 14:47:40.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.643" endtime="20201117 14:47:40.975"></status>
</kw>
<msg timestamp="20201117 14:47:40.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046304583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046412361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.639" endtime="20201117 14:47:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046304583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046412361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.984" endtime="20201117 14:47:41.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.003" endtime="20201117 14:47:41.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.632" endtime="20201117 14:47:41.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.627" endtime="20201117 14:47:41.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.022" level="INFO">${RESULT} = [{'time': 0.046412361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010777799999999588, 'source_diff': 0.00010777799999999588}, {'time': 0.046549708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.013" endtime="20201117 14:47:41.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:41.024" endtime="20201117 14:47:41.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.062" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.060" endtime="20201117 14:47:41.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.068" level="INFO">VALUE: [0.00010777799999999588, 0.00010786100000000076, 0.00010855599999999577, 0.00010799999999999699, 0.00010782000000000153, 0.00010802799999999613, 0.00010780500000000248, 0.00010799999999999699, 0.000108514000000004, 0.00010851399999999706, 0.000108596999999995, 0.00010815299999999972, 0.00010794400000000565, 0.00010829099999999647, 0.0001087360000000051, 0.0001087089999999985, 0.0001087089999999985, 0.00010843099999999911, 0.00010820799999999853, 0.00010906899999999636, 0.00010797200000000479, 0.00010832000000000203, 0.00010791699999999904, 0.00010873599999999817, 0.00010951399999999806, 0.00010811100000000101, 0.00010797200000000479, 0.00010784699999999425, 0.0001085549999999963, 0.00010832000000000203, 0.00010890300000000047, 0.00010816599999999982, 0.0001077769999999964, 0.0001083890000000004, 0.00010812500000000058, 0.00010792999999999914, 0.0001093619999999948, 0.00010809800000000092, 0.00010812500000000058, 0.00010837500000000083, 0.00010834700000000169, 0.00010807000000000178, 0.00010781900000000205, 0.0001087219999999986, 0.00010812500000000058, 0.00010861100000000151, 0.000108596999999995, 0.00010847199999999835, 0.0001094020000000015, 0.0001078889999999999]</msg>
<status status="PASS" starttime="20201117 14:47:41.065" endtime="20201117 14:47:41.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.053" endtime="20201117 14:47:41.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.076" endtime="20201117 14:47:41.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.085" endtime="20201117 14:47:41.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.080" endtime="20201117 14:47:41.108"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.072" endtime="20201117 14:47:41.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.569" endtime="20201117 14:47:41.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.565" endtime="20201117 14:47:41.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.563" endtime="20201117 14:47:41.111"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.116" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.138" endtime="20201117 14:47:41.159"></status>
</kw>
<msg timestamp="20201117 14:47:41.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.135" endtime="20201117 14:47:41.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.162" endtime="20201117 14:47:41.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.168" endtime="20201117 14:47:41.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.127" endtime="20201117 14:47:41.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.122" endtime="20201117 14:47:41.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.192" endtime="20201117 14:47:41.528"></status>
</kw>
<msg timestamp="20201117 14:47:41.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045254986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045364444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.188" endtime="20201117 14:47:41.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045254986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045364444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.537" endtime="20201117 14:47:41.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.556" endtime="20201117 14:47:41.559"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.181" endtime="20201117 14:47:41.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.176" endtime="20201117 14:47:41.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.573" level="INFO">${RESULT} = [{'time': 0.045364444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010945799999999978, 'source_diff': 0.00010945799999999978}, {'time': 0.045506847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:41.564" endtime="20201117 14:47:41.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.606" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:41.575" endtime="20201117 14:47:41.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.617" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.615" endtime="20201117 14:47:41.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.622" level="INFO">VALUE: [0.00010945799999999978, 0.00011026400000000575, 0.00010958299999999643, 0.00010949999999999849, 0.00010991700000000104, 0.00010933299999999618, 0.00010908300000000287, 0.00010884700000000219, 0.00010963900000000165, 0.00010930599999999652, 0.00010974999999999874, 0.00010949999999999849, 0.00010913900000000115, 0.00010924999999999824, 0.00011033399999999666, 0.00010965200000000175, 0.00010916700000000029, 0.000108902000000001, 0.00010881899999999611, 0.00010906899999999636, 0.00011061100000000351, 0.00010944499999999968, 0.00010969399999999352, 0.00010884699999999525, 0.00010974999999999874, 0.00010936100000000226, 0.0001100969999999965, 0.00010904099999999722, 0.00010965200000000175, 0.00010974999999999874, 0.00010943100000000011, 0.00010952799999999763, 0.00010968100000000036, 0.0001095690000000038, 0.00010922200000000604, 0.00010886100000000176, 0.00010898599999999842, 0.00010925000000000518, 0.00010949999999999849, 0.00010959700000000294, 0.00010947199999999935, 0.00010927799999999738, 0.00010897299999999832, 0.00010944400000000021, 0.00010936099999999532, 0.00010879200000000339, 0.00010973599999999917, 0.00010898599999999842, 0.00010937500000000183, 0.00010898599999999842]</msg>
<status status="PASS" starttime="20201117 14:47:41.619" endtime="20201117 14:47:41.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.608" endtime="20201117 14:47:41.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.631" endtime="20201117 14:47:41.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.639" endtime="20201117 14:47:41.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.635" endtime="20201117 14:47:41.663"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.626" endtime="20201117 14:47:41.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.118" endtime="20201117 14:47:41.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.114" endtime="20201117 14:47:41.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.112" endtime="20201117 14:47:41.666"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.693" endtime="20201117 14:47:41.713"></status>
</kw>
<msg timestamp="20201117 14:47:41.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.690" endtime="20201117 14:47:41.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.716" endtime="20201117 14:47:41.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.728" endtime="20201117 14:47:41.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.682" endtime="20201117 14:47:41.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.676" endtime="20201117 14:47:41.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.751" endtime="20201117 14:47:42.084"></status>
</kw>
<msg timestamp="20201117 14:47:42.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045018847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.748" endtime="20201117 14:47:42.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045018847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.093" endtime="20201117 14:47:42.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.111" endtime="20201117 14:47:42.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.741" endtime="20201117 14:47:42.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.736" endtime="20201117 14:47:42.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.130" level="INFO">${RESULT} = [{'time': 0.045018847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010976399999999831, 'source_diff': 0.00010976399999999831}, {'time': 0.045160236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.122" endtime="20201117 14:47:42.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:42.132" endtime="20201117 14:47:42.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.171" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.168" endtime="20201117 14:47:42.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.176" level="INFO">VALUE: [0.00010976399999999831, 0.00011073600000000017, 0.00011072300000000007, 0.00011015299999999478, 0.00011063900000000265, 0.00011056999999999734, 0.00010987499999999539, 0.00011065299999999528, 0.0001105549999999983, 0.00011040300000000197, 0.00011016699999999435, 0.00011006899999999736, 0.00011016600000000182, 0.00011040300000000197, 0.00011065300000000222, 0.00010997199999999985, 0.00010979200000000439, 0.00011036099999999632, 0.00010981900000000405, 0.00011058300000000437, 0.00010994400000000071, 0.00010979099999999797, 0.00011068100000000136, 0.00010984699999999625, 0.00011034700000000369, 0.00011019400000000096, 0.00011055500000000523, 0.00011047200000000035, 0.00011029199999999795, 0.00011070800000000103, 0.00010981900000000405, 0.00011140199999999656, 0.00011070800000000103, 0.0001103890000000024, 0.00011047200000000035, 0.00010995899999999975, 0.00011144500000000168, 0.00011005599999999727, 0.00010986099999999582, 0.00010981899999999711, 0.00010987500000000233, 0.00011062500000000308, 0.00010974999999999874, 0.00011066599999999538, 0.00010976399999999831, 0.0001102220000000001, 0.0001105549999999983, 0.00010974999999999874, 0.0001100560000000042, 0.00011002800000000507]</msg>
<status status="PASS" starttime="20201117 14:47:42.173" endtime="20201117 14:47:42.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.161" endtime="20201117 14:47:42.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.185" endtime="20201117 14:47:42.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.193" endtime="20201117 14:47:42.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.189" endtime="20201117 14:47:42.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.180" endtime="20201117 14:47:42.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.673" endtime="20201117 14:47:42.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.669" endtime="20201117 14:47:42.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.667" endtime="20201117 14:47:42.220"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.247" endtime="20201117 14:47:42.268"></status>
</kw>
<msg timestamp="20201117 14:47:42.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.244" endtime="20201117 14:47:42.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.271" endtime="20201117 14:47:42.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.277" endtime="20201117 14:47:42.281"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.237" endtime="20201117 14:47:42.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.230" endtime="20201117 14:47:42.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.300" endtime="20201117 14:47:42.632"></status>
</kw>
<msg timestamp="20201117 14:47:42.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045596403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.297" endtime="20201117 14:47:42.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045596403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.642" endtime="20201117 14:47:42.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.660" endtime="20201117 14:47:42.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.290" endtime="20201117 14:47:42.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.285" endtime="20201117 14:47:42.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.677" level="INFO">${RESULT} = [{'time': 0.045707153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011074999999999974, 'source_diff': 0.00011074999999999974}, {'time': 0.045850514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:42.669" endtime="20201117 14:47:42.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.707" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:42.679" endtime="20201117 14:47:42.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.718" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.716" endtime="20201117 14:47:42.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.723" level="INFO">VALUE: [0.00011074999999999974, 0.00011079200000000539, 0.00011193100000000261, 0.00011152799999999963, 0.00011225000000000124, 0.00011094500000000118, 0.00011102799999999913, 0.00011145799999999484, 0.000111596999999998, 0.00011129199999999895, 0.00011134699999999775, 0.00011209700000000544, 0.00011081999999999759, 0.00011137500000000383, 0.00011134799999999723, 0.00011222299999999463, 0.00011126399999999981, 0.00011148600000000092, 0.00011151300000000058, 0.0001117220000000016, 0.00011144500000000168, 0.00011150000000000049, 0.00011226400000000081, 0.00011152800000000657, 0.0001110140000000065, 0.00011079199999999845, 0.00011087500000000333, 0.00011154099999999972, 0.00011145800000000178, 0.00011109799999999698, 0.000111596999999998, 0.00011074999999999974, 0.00011166700000000279, 0.00011134799999999723, 0.00011155599999999877, 0.0001110969999999975, 0.00011081999999999759, 0.00011117999999999545, 0.00011134800000000417, 0.00011111099999999707, 0.00011131899999999861, 0.00011163800000000418, 0.00011129200000000589, 0.0001112220000000011, 0.00011161100000000451, 0.00011087500000000333, 0.0001114169999999956, 0.00011131999999999809, 0.00011108300000000487, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201117 14:47:42.720" endtime="20201117 14:47:42.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.709" endtime="20201117 14:47:42.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.732" endtime="20201117 14:47:42.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.741" endtime="20201117 14:47:42.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.736" endtime="20201117 14:47:42.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.727" endtime="20201117 14:47:42.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.226" endtime="20201117 14:47:42.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.222" endtime="20201117 14:47:42.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.220" endtime="20201117 14:47:42.768"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.794" endtime="20201117 14:47:42.815"></status>
</kw>
<msg timestamp="20201117 14:47:42.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.791" endtime="20201117 14:47:42.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.818" endtime="20201117 14:47:42.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.825" endtime="20201117 14:47:42.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.784" endtime="20201117 14:47:42.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.778" endtime="20201117 14:47:42.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.848" endtime="20201117 14:47:43.179"></status>
</kw>
<msg timestamp="20201117 14:47:43.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045146639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045258597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.845" endtime="20201117 14:47:43.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045146639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045258597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.189" endtime="20201117 14:47:43.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.207" endtime="20201117 14:47:43.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.837" endtime="20201117 14:47:43.214"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.833" endtime="20201117 14:47:43.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.226" level="INFO">${RESULT} = [{'time': 0.045258597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011195799999999534, 'source_diff': 0.00011195799999999534}, {'time': 0.045401917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.217" endtime="20201117 14:47:43.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.255" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:43.228" endtime="20201117 14:47:43.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.266" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.264" endtime="20201117 14:47:43.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.271" level="INFO">VALUE: [0.00011195799999999534, 0.00011229199999999995, 0.00011233299999999918, 0.00011208300000000587, 0.00011176400000000031, 0.0001123749999999979, 0.00011179099999999997, 0.00011184699999999825, 0.00011263899999999771, 0.00011263899999999771, 0.00011263899999999771, 0.00011238899999999746, 0.00011198700000000089, 0.00011273599999999523, 0.00011247200000000235, 0.00011252800000000063, 0.00011252800000000063, 0.00011194400000000271, 0.00011220800000000253, 0.00011190300000000347, 0.00011248700000000139, 0.00011244400000000321, 0.0001123890000000044, 0.0001122770000000009, 0.00011213799999999774, 0.00011201400000000056, 0.00011277799999999394, 0.00011231899999999961, 0.00011255599999999977, 0.00011243100000000311, 0.00011244499999999574, 0.00011195799999999534, 0.00011313899999999821, 0.00011245800000000278, 0.0001134169999999976, 0.0001120419999999997, 0.00011341599999999813, 0.00011248599999999498, 0.00011263899999999771, 0.00011261099999999857, 0.00011256999999999934, 0.00011244399999999627, 0.0001120549999999998, 0.00011216600000000382, 0.000113597, 0.00011272199999999566, 0.00011219400000000296, 0.0001123749999999979, 0.00011245800000000278, 0.00011236099999999832]</msg>
<status status="PASS" starttime="20201117 14:47:43.268" endtime="20201117 14:47:43.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.257" endtime="20201117 14:47:43.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.281" endtime="20201117 14:47:43.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.289" endtime="20201117 14:47:43.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.285" endtime="20201117 14:47:43.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.276" endtime="20201117 14:47:43.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.774" endtime="20201117 14:47:43.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.770" endtime="20201117 14:47:43.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.768" endtime="20201117 14:47:43.316"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.321" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.342" endtime="20201117 14:47:43.363"></status>
</kw>
<msg timestamp="20201117 14:47:43.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.339" endtime="20201117 14:47:43.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.366" endtime="20201117 14:47:43.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.373" endtime="20201117 14:47:43.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.332" endtime="20201117 14:47:43.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.326" endtime="20201117 14:47:43.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.396" endtime="20201117 14:47:43.729"></status>
</kw>
<msg timestamp="20201117 14:47:43.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044910236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045023514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.393" endtime="20201117 14:47:43.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044910236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045023514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.738" endtime="20201117 14:47:43.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.757" endtime="20201117 14:47:43.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.385" endtime="20201117 14:47:43.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.381" endtime="20201117 14:47:43.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.774" level="INFO">${RESULT} = [{'time': 0.045023514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011327800000000138, 'source_diff': 0.00011327800000000138}, {'time': 0.045169889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:43.765" endtime="20201117 14:47:43.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.806" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:43.776" endtime="20201117 14:47:43.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.817" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.815" endtime="20201117 14:47:43.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.823" level="INFO">VALUE: [0.00011327800000000138, 0.00011281999999999959, 0.00011344399999999727, 0.00011361099999999957, 0.0001130969999999995, 0.00011333300000000018, 0.00011458300000000143, 0.000114597000000001, 0.00011454100000000272, 0.00011373599999999623, 0.00011452700000000315, 0.00011373599999999623, 0.00011305600000000027, 0.00011313899999999821, 0.00011370899999999656, 0.00011362499999999914, 0.0001133619999999988, 0.0001133619999999988, 0.00011363899999999871, 0.00011319499999999649, 0.00011327800000000138, 0.00011313900000000515, 0.00011313899999999821, 0.00011366700000000479, 0.00011280500000000054, 0.00011275000000000174, 0.00011358399999999991, 0.000113209000000003, 0.00011345900000000325, 0.00011323599999999573, 0.0001138749999999994, 0.00011322199999999616, 0.00011357000000000034, 0.00011276400000000131, 0.00011372199999999666, 0.00011286099999999882, 0.0001138749999999994, 0.00011294500000000318, 0.00011341600000000507, 0.00011326399999999487, 0.00011330600000000052, 0.00011298600000000242, 0.00011283299999999968, 0.00011277800000000088, 0.00011357000000000034, 0.00011440299999999903, 0.00011458400000000091, 0.00011311099999999907, 0.00011343100000000411, 0.00011369499999999699]</msg>
<status status="PASS" starttime="20201117 14:47:43.819" endtime="20201117 14:47:43.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.808" endtime="20201117 14:47:43.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.832" endtime="20201117 14:47:43.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.840" endtime="20201117 14:47:43.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.836" endtime="20201117 14:47:43.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.827" endtime="20201117 14:47:43.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.322" endtime="20201117 14:47:43.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.318" endtime="20201117 14:47:43.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.316" endtime="20201117 14:47:43.866"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.893" endtime="20201117 14:47:43.914"></status>
</kw>
<msg timestamp="20201117 14:47:43.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.890" endtime="20201117 14:47:43.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.917" endtime="20201117 14:47:43.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.923" endtime="20201117 14:47:43.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.883" endtime="20201117 14:47:43.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.877" endtime="20201117 14:47:43.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.947" endtime="20201117 14:47:44.278"></status>
</kw>
<msg timestamp="20201117 14:47:44.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044915444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045030083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.943" endtime="20201117 14:47:44.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044915444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045030083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.288" endtime="20201117 14:47:44.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.306" endtime="20201117 14:47:44.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.936" endtime="20201117 14:47:44.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.932" endtime="20201117 14:47:44.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.325" level="INFO">${RESULT} = [{'time': 0.045030083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011463899999999971, 'source_diff': 0.00011463899999999971}, {'time': 0.045177444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.316" endtime="20201117 14:47:44.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:44.327" endtime="20201117 14:47:44.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.366" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.364" endtime="20201117 14:47:44.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.371" level="INFO">VALUE: [0.00011463899999999971, 0.00011420799999999759, 0.00011444500000000468, 0.00011447199999999741, 0.00011400000000000299, 0.00011416699999999835, 0.00011420899999999706, 0.00011434700000000075, 0.00011390300000000547, 0.00011462500000000014, 0.0001154169999999996, 0.00011408300000000093, 0.00011407000000000084, 0.0001138749999999994, 0.0001152499999999973, 0.00011472199999999766, 0.00011466699999999885, 0.00011401300000000308, 0.00011394500000000418, 0.00011390299999999853, 0.00011438899999999946, 0.00011418099999999792, 0.00011433400000000066, 0.0001139169999999981, 0.00011512500000000064, 0.0001140970000000005, 0.00011466699999999885, 0.00011454199999999526, 0.00011470899999999756, 0.00011441599999999913, 0.00011398600000000342, 0.00011422199999999716, 0.00011431900000000161, 0.00011443099999999817, 0.00011431999999999415, 0.00011408400000000041, 0.00011440199999999956, 0.00011398600000000342, 0.00011376399999999537, 0.00011373600000000317, 0.00011411100000000007, 0.00011452800000000263, 0.00011391599999999863, 0.00011386099999999982, 0.00011407000000000084, 0.00011417999999999845, 0.00011418099999999792, 0.00011382000000000059, 0.00011416699999999835, 0.000114597000000001]</msg>
<status status="PASS" starttime="20201117 14:47:44.368" endtime="20201117 14:47:44.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.357" endtime="20201117 14:47:44.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.380" endtime="20201117 14:47:44.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.388" endtime="20201117 14:47:44.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.384" endtime="20201117 14:47:44.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.375" endtime="20201117 14:47:44.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.873" endtime="20201117 14:47:44.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.869" endtime="20201117 14:47:44.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.867" endtime="20201117 14:47:44.415"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.441" endtime="20201117 14:47:44.462"></status>
</kw>
<msg timestamp="20201117 14:47:44.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.438" endtime="20201117 14:47:44.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.465" endtime="20201117 14:47:44.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.472" endtime="20201117 14:47:44.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.431" endtime="20201117 14:47:44.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.425" endtime="20201117 14:47:44.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.495" endtime="20201117 14:47:44.828"></status>
</kw>
<msg timestamp="20201117 14:47:44.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044971653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045086458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.492" endtime="20201117 14:47:44.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044971653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045086458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.837" endtime="20201117 14:47:44.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.856" endtime="20201117 14:47:44.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.484" endtime="20201117 14:47:44.862"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.480" endtime="20201117 14:47:44.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.873" level="INFO">${RESULT} = [{'time': 0.045086458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011480500000000254, 'source_diff': 0.00011480500000000254}, {'time': 0.045232833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:44.865" endtime="20201117 14:47:44.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:44.875" endtime="20201117 14:47:44.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.914" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.912" endtime="20201117 14:47:44.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.919" level="INFO">VALUE: [0.00011480500000000254, 0.0001148750000000004, 0.0001165699999999964, 0.00011570899999999856, 0.0001165829999999965, 0.00011512500000000064, 0.00011508300000000193, 0.00011505600000000227, 0.00011488899999999996, 0.00011593099999999967, 0.00011490299999999953, 0.00011644400000000027, 0.00011476400000000331, 0.00011558300000000243, 0.00011483400000000116, 0.00011487499999999345, 0.00011554199999999626, 0.0001148750000000004, 0.00011511100000000107, 0.0001153750000000009, 0.00011661100000000257, 0.00011498599999999748, 0.00011640300000000103, 0.00011531900000000261, 0.00011638800000000199, 0.0001150970000000015, 0.0001150420000000027, 0.00011563900000000071, 0.00011515200000000031, 0.00011547199999999841, 0.0001150970000000015, 0.00011552699999999722, 0.00011550000000000449, 0.00011549999999999755, 0.00011501399999999662, 0.00011548599999999798, 0.00011476400000000331, 0.00011562500000000114, 0.0001163049999999971, 0.00011504099999999629, 0.00011562500000000114, 0.00011565300000000028, 0.00011640300000000103, 0.00011544500000000568, 0.0001162629999999984, 0.00011556899999999592, 0.00011533300000000218, 0.00011508400000000141, 0.00011659699999999606, 0.00011484700000000125]</msg>
<status status="PASS" starttime="20201117 14:47:44.916" endtime="20201117 14:47:44.920"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.905" endtime="20201117 14:47:44.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.928" endtime="20201117 14:47:44.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.936" endtime="20201117 14:47:44.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.932" endtime="20201117 14:47:44.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.923" endtime="20201117 14:47:44.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.421" endtime="20201117 14:47:44.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.417" endtime="20201117 14:47:44.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.415" endtime="20201117 14:47:44.963"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.968" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.990" endtime="20201117 14:47:45.011"></status>
</kw>
<msg timestamp="20201117 14:47:45.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.986" endtime="20201117 14:47:45.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.014" endtime="20201117 14:47:45.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.020" endtime="20201117 14:47:45.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.979" endtime="20201117 14:47:45.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.973" endtime="20201117 14:47:45.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.044" endtime="20201117 14:47:45.378"></status>
</kw>
<msg timestamp="20201117 14:47:45.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045005569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045121431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.040" endtime="20201117 14:47:45.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045005569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045121431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.387" endtime="20201117 14:47:45.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.405" endtime="20201117 14:47:45.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.033" endtime="20201117 14:47:45.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.028" endtime="20201117 14:47:45.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.424" level="INFO">${RESULT} = [{'time': 0.045121431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011586199999999436, 'source_diff': 0.00011586199999999436}, {'time': 0.045266792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.415" endtime="20201117 14:47:45.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.453" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:45.426" endtime="20201117 14:47:45.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.464" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.462" endtime="20201117 14:47:45.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.470" level="INFO">VALUE: [0.00011586199999999436, 0.00011638900000000146, 0.00011677799999999794, 0.00011584699999999531, 0.00011669499999999999, 0.00011584700000000225, 0.00011583299999999574, 0.00011611100000000207, 0.00011615200000000131, 0.00011637499999999495, 0.00011583299999999574, 0.00011655599999999683, 0.00011632000000000309, 0.00011722200000000016, 0.00011670800000000009, 0.00011656900000000386, 0.00011629200000000395, 0.00011618099999999992, 0.00011618099999999992, 0.00011645799999999984, 0.0001163750000000019, 0.0001166249999999952, 0.00011633400000000266, 0.00011670899999999956, 0.00011579199999999651, 0.00011631999999999615, 0.00011599999999999805, 0.00011668000000000095, 0.0001167499999999988, 0.00011651399999999812, 0.00011606899999999643, 0.00011629199999999701, 0.00011625000000000524, 0.00011601400000000456, 0.00011616700000000035, 0.00011591600000000063, 0.0001163750000000019, 0.00011577800000000388, 0.00011651399999999812, 0.00011615300000000078, 0.00011709699999999656, 0.00011623599999999873, 0.00011584700000000225, 0.00011627800000000438, 0.00011607000000000284, 0.00011625000000000524, 0.00011580600000000302, 0.0001165699999999964, 0.00011663899999999477, 0.00011665299999999434]</msg>
<status status="PASS" starttime="20201117 14:47:45.467" endtime="20201117 14:47:45.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.455" endtime="20201117 14:47:45.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.479" endtime="20201117 14:47:45.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.487" endtime="20201117 14:47:45.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.483" endtime="20201117 14:47:45.510"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.474" endtime="20201117 14:47:45.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.969" endtime="20201117 14:47:45.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.965" endtime="20201117 14:47:45.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.964" endtime="20201117 14:47:45.513"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.540" endtime="20201117 14:47:45.561"></status>
</kw>
<msg timestamp="20201117 14:47:45.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.537" endtime="20201117 14:47:45.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.564" endtime="20201117 14:47:45.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.571" endtime="20201117 14:47:45.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.530" endtime="20201117 14:47:45.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.524" endtime="20201117 14:47:45.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.595" endtime="20201117 14:47:45.930"></status>
</kw>
<msg timestamp="20201117 14:47:45.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044845931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044963458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.591" endtime="20201117 14:47:45.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044845931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044963458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.940" endtime="20201117 14:47:45.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.958" endtime="20201117 14:47:45.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.584" endtime="20201117 14:47:45.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.579" endtime="20201117 14:47:45.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.975" level="INFO">${RESULT} = [{'time': 0.044963458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011752699999999922, 'source_diff': 0.00011752699999999922}, {'time': 0.045109833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:45.966" endtime="20201117 14:47:45.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.007" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:45.977" endtime="20201117 14:47:46.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.018" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.016" endtime="20201117 14:47:46.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.023" level="INFO">VALUE: [0.00011752699999999922, 0.0001182500000000003, 0.00011688899999999502, 0.0001174029999999951, 0.00011713899999999527, 0.00011754199999999826, 0.0001173750000000029, 0.0001171249999999957, 0.00011845800000000184, 0.00011733300000000418, 0.00011712500000000264, 0.00011690300000000153, 0.00011848700000000045, 0.00011850000000000055, 0.00011755499999999836, 0.00011773599999999329, 0.0001180699999999979, 0.0001177369999999997, 0.00011773600000000023, 0.0001177369999999997, 0.00011711100000000307, 0.00011745900000000031, 0.00011808400000000441, 0.00011716700000000135, 0.00011861099999999763, 0.00011718100000000092, 0.00011690200000000206, 0.00011736099999999638, 0.00011715300000000178, 0.00011744400000000127, 0.00011808300000000493, 0.00011684699999999631, 0.00011755600000000477, 0.00011765199999999587, 0.00011736099999999638, 0.00011749999999999955, 0.00011676400000000531, 0.00011748599999999998, 0.00011683399999999622, 0.00011763900000000271, 0.0001182500000000003, 0.00011695800000000034, 0.00011844400000000227, 0.00011694400000000077, 0.00011695800000000034, 0.0001171249999999957, 0.00011780500000000554, 0.00011844500000000174, 0.00011759699999999706, 0.00011761100000000357]</msg>
<status status="PASS" starttime="20201117 14:47:46.020" endtime="20201117 14:47:46.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.009" endtime="20201117 14:47:46.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.032" endtime="20201117 14:47:46.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.040" endtime="20201117 14:47:46.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.036" endtime="20201117 14:47:46.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.027" endtime="20201117 14:47:46.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.520" endtime="20201117 14:47:46.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.516" endtime="20201117 14:47:46.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.514" endtime="20201117 14:47:46.067"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.094" endtime="20201117 14:47:46.115"></status>
</kw>
<msg timestamp="20201117 14:47:46.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.091" endtime="20201117 14:47:46.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.118" endtime="20201117 14:47:46.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.125" endtime="20201117 14:47:46.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.084" endtime="20201117 14:47:46.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.077" endtime="20201117 14:47:46.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.148" endtime="20201117 14:47:46.480"></status>
</kw>
<msg timestamp="20201117 14:47:46.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045620347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.144" endtime="20201117 14:47:46.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045620347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045738681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.489" endtime="20201117 14:47:46.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.508" endtime="20201117 14:47:46.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.137" endtime="20201117 14:47:46.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.133" endtime="20201117 14:47:46.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.526" level="INFO">${RESULT} = [{'time': 0.045738681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011833400000000466, 'source_diff': 0.00011833400000000466}, {'time': 0.045887069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.518" endtime="20201117 14:47:46.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.556" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:46.528" endtime="20201117 14:47:46.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.567" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.565" endtime="20201117 14:47:46.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.572" level="INFO">VALUE: [0.00011833400000000466, 0.00011840200000000356, 0.0001180970000000045, 0.00011850000000000055, 0.00011877799999999994, 0.00011923600000000173, 0.00011931899999999968, 0.00011943100000000317, 0.00011877799999999994, 0.00011823600000000073, 0.00011783400000000416, 0.00011815299999999584, 0.00011943100000000317, 0.00011850000000000055, 0.00011801399999999962, 0.00011873600000000123, 0.00011894500000000224, 0.00011840200000000356, 0.00011852799999999969, 0.00011786199999999636, 0.00011813899999999627, 0.00011867999999999601, 0.0001186249999999972, 0.00011838900000000346, 0.00011913900000000421, 0.00011833299999999825, 0.00011779100000000597, 0.00011820800000000159, 0.0001178750000000034, 0.00011829200000000595, 0.0001184029999999961, 0.00011826399999999987, 0.00011863899999999677, 0.0001187500000000008, 0.00011795800000000134, 0.00011786100000000382, 0.0001184170000000026, 0.00011863899999999677, 0.00011850000000000055, 0.00011798600000000048, 0.00011798600000000048, 0.00011924999999999436, 0.0001194029999999971, 0.00011851400000000012, 0.00011786099999999688, 0.000118597000000005, 0.00011861099999999763, 0.0001196249999999982, 0.00011829199999999901, 0.00011872200000000166]</msg>
<status status="PASS" starttime="20201117 14:47:46.569" endtime="20201117 14:47:46.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.558" endtime="20201117 14:47:46.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.581" endtime="20201117 14:47:46.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.590" endtime="20201117 14:47:46.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.585" endtime="20201117 14:47:46.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.576" endtime="20201117 14:47:46.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.073" endtime="20201117 14:47:46.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.069" endtime="20201117 14:47:46.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.068" endtime="20201117 14:47:46.616"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.643" endtime="20201117 14:47:46.664"></status>
</kw>
<msg timestamp="20201117 14:47:46.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.640" endtime="20201117 14:47:46.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.667" endtime="20201117 14:47:46.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.673" endtime="20201117 14:47:46.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.633" endtime="20201117 14:47:46.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.627" endtime="20201117 14:47:46.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.696" endtime="20201117 14:47:47.030"></status>
</kw>
<msg timestamp="20201117 14:47:47.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044783944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.693" endtime="20201117 14:47:47.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044783944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044902833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.039" endtime="20201117 14:47:47.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.058" endtime="20201117 14:47:47.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.686" endtime="20201117 14:47:47.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.681" endtime="20201117 14:47:47.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.075" level="INFO">${RESULT} = [{'time': 0.044902833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011888900000000396, 'source_diff': 0.00011888900000000396}, {'time': 0.045053181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:47.066" endtime="20201117 14:47:47.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:47.077" endtime="20201117 14:47:47.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.115" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.113" endtime="20201117 14:47:47.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.121" level="INFO">VALUE: [0.00011888900000000396, 0.00011966699999999691, 0.00011902800000000019, 0.00011882000000000559, 0.00011977800000000094, 0.00011933399999999872, 0.00011933399999999872, 0.00011887499999999745, 0.00012011099999999914, 0.00011886099999999789, 0.00011886100000000482, 0.00011900000000000105, 0.00011976400000000137, 0.00011918100000000292, 0.00011908399999999847, 0.00011877799999999994, 0.00011911099999999814, 0.00011900000000000105, 0.00011876400000000037, 0.00011916700000000335, 0.0001188750000000044, 0.00012044500000000374, 0.00011931899999999968, 0.00011965300000000428, 0.00011954099999999385, 0.00011934799999999829, 0.00011977800000000094, 0.00011944400000000327, 0.00011897199999999497, 0.00011965199999999787, 0.00012044399999999733, 0.0001193750000000049, 0.0001200699999999999, 0.00011954200000000026, 0.0001202500000000023, 0.00011940200000000456, 0.00011931899999999968, 0.0001193050000000001, 0.00011959699999999907, 0.00012038899999999852, 0.00011902800000000019, 0.00011877799999999994, 0.00012041699999999766, 0.00011905599999999933, 0.00011936099999999839, 0.00011994500000000324, 0.00011927800000000044, 0.00011938900000000446, 0.00011888900000000396, 0.00012047199999999647]</msg>
<status status="PASS" starttime="20201117 14:47:47.118" endtime="20201117 14:47:47.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.106" endtime="20201117 14:47:47.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.130" endtime="20201117 14:47:47.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.138" endtime="20201117 14:47:47.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.134" endtime="20201117 14:47:47.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.125" endtime="20201117 14:47:47.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.623" endtime="20201117 14:47:47.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.619" endtime="20201117 14:47:47.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.617" endtime="20201117 14:47:47.165"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.192" endtime="20201117 14:47:47.213"></status>
</kw>
<msg timestamp="20201117 14:47:47.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.188" endtime="20201117 14:47:47.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.216" endtime="20201117 14:47:47.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.222" endtime="20201117 14:47:47.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.181" endtime="20201117 14:47:47.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.175" endtime="20201117 14:47:47.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.246" endtime="20201117 14:47:47.579"></status>
</kw>
<msg timestamp="20201117 14:47:47.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045038708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.242" endtime="20201117 14:47:47.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045038708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.588" endtime="20201117 14:47:47.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.606" endtime="20201117 14:47:47.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.235" endtime="20201117 14:47:47.613"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.230" endtime="20201117 14:47:47.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.625" level="INFO">${RESULT} = [{'time': 0.045159125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001204170000000046, 'source_diff': 0.0001204170000000046}, {'time': 0.045309542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.616" endtime="20201117 14:47:47.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.654" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:47.627" endtime="20201117 14:47:47.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.665" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.663" endtime="20201117 14:47:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.671" level="INFO">VALUE: [0.0001204170000000046, 0.00012009799999999904, 0.00012069399999999758, 0.00012033300000000025, 0.00011994399999999683, 0.00012043099999999723, 0.00012098600000000348, 0.0001199579999999964, 0.00011991699999999716, 0.00012126399999999593, 0.00012019499999999655, 0.00012077800000000194, 0.00012069399999999758, 0.00012070800000000409, 0.00012058299999999356, 0.00012038899999999852, 0.00012052800000000169, 0.0001207370000000027, 0.00012055600000000083, 0.0001205700000000004, 0.0001203050000000011, 0.00012006900000000043, 0.00012076400000000237, 0.00012001299999999521, 0.00012019399999999708, 0.00012043100000000417, 0.00012023600000000273, 0.00012013899999999827, 0.00012094500000000424, 0.00012009699999999957, 0.00011990300000000453, 0.00012038899999999852, 0.0001205830000000005, 0.00012004100000000129, 0.00012077699999999553, 0.00012063899999999877, 0.00012056900000000093, 0.00012051300000000265, 0.00011983300000000668, 0.00012019399999999708, 0.00012070900000000356, 0.00011983399999999922, 0.00012036199999999886, 0.00012019400000000402, 0.00012052700000000222, 0.00012161100000000064, 0.00012073599999999629, 0.00012070799999999715, 0.0001199449999999963, 0.00011979200000000051]</msg>
<status status="PASS" starttime="20201117 14:47:47.667" endtime="20201117 14:47:47.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.656" endtime="20201117 14:47:47.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.680" endtime="20201117 14:47:47.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.688" endtime="20201117 14:47:47.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.684" endtime="20201117 14:47:47.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.675" endtime="20201117 14:47:47.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.171" endtime="20201117 14:47:47.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.168" endtime="20201117 14:47:47.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.166" endtime="20201117 14:47:47.715"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.742" endtime="20201117 14:47:47.763"></status>
</kw>
<msg timestamp="20201117 14:47:47.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.738" endtime="20201117 14:47:47.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.766" endtime="20201117 14:47:47.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.773" endtime="20201117 14:47:47.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.731" endtime="20201117 14:47:47.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.725" endtime="20201117 14:47:47.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.797" endtime="20201117 14:47:48.132"></status>
</kw>
<msg timestamp="20201117 14:47:48.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04515875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:47.794" endtime="20201117 14:47:48.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045037083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04515875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:48.142" endtime="20201117 14:47:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.160" endtime="20201117 14:47:48.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.786" endtime="20201117 14:47:48.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.781" endtime="20201117 14:47:48.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.177" level="INFO">${RESULT} = [{'time': 0.04515875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012166699999999891, 'source_diff': 0.00012166699999999891}, {'time': 0.045311097, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:48.168" endtime="20201117 14:47:48.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:48.180" endtime="20201117 14:47:48.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.221" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.219" endtime="20201117 14:47:48.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.226" level="INFO">VALUE: [0.00012166699999999891, 0.00012095800000000434, 0.00012087499999999946, 0.0001214300000000057, 0.00012113899999999928, 0.00012115300000000578, 0.00012177699999999653, 0.00012087499999999946, 0.00012093099999999773, 0.00012091599999999869, 0.00012130600000000158, 0.00012111100000000014, 0.00012140300000000603, 0.00012159700000000107, 0.00012152799999999575, 0.00012172199999999772, 0.00012155500000000236, 0.00012242999999999976, 0.00012084700000000032, 0.00012169399999999858, 0.00012141599999999919, 0.00012124999999999636, 0.00012119399999999808, 0.00012083300000000075, 0.00012149999999999661, 0.0001213050000000021, 0.00012106900000000143, 0.000122083000000002, 0.00012098600000000348, 0.00012115300000000578, 0.00012076400000000237, 0.00012134700000000082, 0.00012116699999999841, 0.00012129200000000201, 0.00012152800000000269, 0.00012087499999999946, 0.0001212779999999955, 0.00012134700000000082, 0.00012129200000000201, 0.00012165299999999934, 0.0001225700000000024, 0.00012126399999999593, 0.00012082000000000065, 0.00012163899999999978, 0.0001214029999999991, 0.0001217500000000038, 0.000121083000000001, 0.0001216250000000002, 0.00012193100000000567, 0.00012076400000000237]</msg>
<status status="PASS" starttime="20201117 14:47:48.223" endtime="20201117 14:47:48.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.212" endtime="20201117 14:47:48.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.235" endtime="20201117 14:47:48.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.243" endtime="20201117 14:47:48.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.239" endtime="20201117 14:47:48.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.230" endtime="20201117 14:47:48.268"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.721" endtime="20201117 14:47:48.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.717" endtime="20201117 14:47:48.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.716" endtime="20201117 14:47:48.270"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.296" endtime="20201117 14:47:48.317"></status>
</kw>
<msg timestamp="20201117 14:47:48.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.293" endtime="20201117 14:47:48.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.321" endtime="20201117 14:47:48.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.327" endtime="20201117 14:47:48.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.286" endtime="20201117 14:47:48.332"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.280" endtime="20201117 14:47:48.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.350" endtime="20201117 14:47:48.683"></status>
</kw>
<msg timestamp="20201117 14:47:48.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044881861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045004222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.347" endtime="20201117 14:47:48.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044881861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045004222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.692" endtime="20201117 14:47:48.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.711" endtime="20201117 14:47:48.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.340" endtime="20201117 14:47:48.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.335" endtime="20201117 14:47:48.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.730" level="INFO">${RESULT} = [{'time': 0.045004222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012236100000000139, 'source_diff': 0.00012236100000000139}, {'time': 0.045159625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:48.721" endtime="20201117 14:47:48.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.759" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:48.732" endtime="20201117 14:47:48.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.770" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.768" endtime="20201117 14:47:48.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.775" level="INFO">VALUE: [0.00012236100000000139, 0.00012213900000000028, 0.0001229449999999993, 0.0001225280000000037, 0.00012191699999999916, 0.00012213900000000028, 0.0001219029999999996, 0.00012206900000000243, 0.00012186099999999395, 0.00012201400000000362, 0.00012202800000000319, 0.00012236200000000086, 0.0001221250000000007, 0.00012205500000000286, 0.000122568999999996, 0.0001224160000000002, 0.00012193099999999873, 0.00012248600000000498, 0.00012263900000000078, 0.00012236099999999445, 0.00012180599999999514, 0.00012205600000000233, 0.00012247299999999794, 0.00012202800000000319, 0.00012261199999999417, 0.00012356999999999646, 0.0001221250000000007, 0.00012243099999999923, 0.0001232909999999976, 0.00012215299999999985, 0.00012233300000000225, 0.0001221250000000007, 0.00012268, 0.0001224999999999976, 0.0001221799999999995, 0.00012204099999999635, 0.0001224030000000001, 0.00012266699999999991, 0.000122695000000006, 0.00012222300000000463, 0.00012216699999999941, 0.00012272199999999872, 0.00012181900000000218, 0.00012245800000000584, 0.00012186100000000089, 0.0001222909999999966, 0.0001223480000000013, 0.00012265300000000035, 0.00012233399999999478, 0.00012234700000000182]</msg>
<status status="PASS" starttime="20201117 14:47:48.772" endtime="20201117 14:47:48.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.761" endtime="20201117 14:47:48.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.784" endtime="20201117 14:47:48.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.792" endtime="20201117 14:47:48.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.788" endtime="20201117 14:47:48.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.779" endtime="20201117 14:47:48.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.276" endtime="20201117 14:47:48.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.272" endtime="20201117 14:47:48.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.270" endtime="20201117 14:47:48.829"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.856" endtime="20201117 14:47:48.877"></status>
</kw>
<msg timestamp="20201117 14:47:48.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.853" endtime="20201117 14:47:48.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.880" endtime="20201117 14:47:48.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.886" endtime="20201117 14:47:48.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.845" endtime="20201117 14:47:48.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.840" endtime="20201117 14:47:48.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.911" endtime="20201117 14:47:49.243"></status>
</kw>
<msg timestamp="20201117 14:47:49.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.906" endtime="20201117 14:47:49.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055524292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.253" endtime="20201117 14:47:49.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.271" endtime="20201117 14:47:49.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.899" endtime="20201117 14:47:49.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.895" endtime="20201117 14:47:49.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.288" level="INFO">${RESULT} = [{'time': 0.055647639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012334699999999588, 'source_diff': 0.00012334699999999588}, {'time': 0.055801042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.280" endtime="20201117 14:47:49.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:49.290" endtime="20201117 14:47:49.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.329" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.327" endtime="20201117 14:47:49.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.334" level="INFO">VALUE: [0.00012334699999999588, 0.00012318099999999998, 0.00012343000000000076, 0.00012370800000000015, 0.00012369500000000005, 0.00012363799999999536, 0.00012370800000000015, 0.0001232359999999988, 0.00012336100000000239, 0.00012368100000000048, 0.0001228480000000018, 0.00012319400000000008, 0.00012355600000000383, 0.0001230559999999964, 0.00012355500000000436, 0.00012288900000000103, 0.000123292000000004, 0.00012283399999999528, 0.000123777999999998, 0.00012323600000000573, 0.00012334799999999535, 0.000123292000000004, 0.0001228050000000036, 0.00012374999999999886, 0.00012355500000000436, 0.00012324999999999836, 0.00012301399999999768, 0.0001244580000000009, 0.0001234579999999999, 0.00012366600000000144, 0.00012366600000000144, 0.00012304099999999735, 0.00012329100000000454, 0.00012344400000000033, 0.00012334700000000282, 0.0001229030000000006, 0.00012445899999999344, 0.00012338800000000205, 0.00012343000000000076, 0.000123568999999997, 0.00012347199999999947, 0.00012322200000000616, 0.00012386199999999542, 0.00012386100000000289, 0.00012337500000000196, 0.00012338800000000205, 0.00012376399999999843, 0.0001228750000000084, 0.00012361100000000957, 0.00012329199999999707]</msg>
<status status="PASS" starttime="20201117 14:47:49.331" endtime="20201117 14:47:49.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.320" endtime="20201117 14:47:49.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.343" endtime="20201117 14:47:49.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.351" endtime="20201117 14:47:49.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.347" endtime="20201117 14:47:49.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.338" endtime="20201117 14:47:49.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.836" endtime="20201117 14:47:49.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.831" endtime="20201117 14:47:49.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.830" endtime="20201117 14:47:49.378"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.383" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.405" endtime="20201117 14:47:49.425"></status>
</kw>
<msg timestamp="20201117 14:47:49.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.401" endtime="20201117 14:47:49.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.429" endtime="20201117 14:47:49.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.436" endtime="20201117 14:47:49.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.394" endtime="20201117 14:47:49.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.388" endtime="20201117 14:47:49.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.460" endtime="20201117 14:47:49.792"></status>
</kw>
<msg timestamp="20201117 14:47:49.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044809764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044934153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.456" endtime="20201117 14:47:49.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044809764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044934153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:49.801" endtime="20201117 14:47:49.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.820" endtime="20201117 14:47:49.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.449" endtime="20201117 14:47:49.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.444" endtime="20201117 14:47:49.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:49.838" level="INFO">${RESULT} = [{'time': 0.044934153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012438899999999559, 'source_diff': 0.00012438899999999559}, {'time': 0.045090542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:49.830" endtime="20201117 14:47:49.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:49.869" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:49.841" endtime="20201117 14:47:49.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.880" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:49.877" endtime="20201117 14:47:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.885" level="INFO">VALUE: [0.00012438899999999559, 0.00012416699999999448, 0.00012448699999999951, 0.00012381899999999724, 0.00012472200000000072, 0.0001239030000000016, 0.00012563899999999684, 0.00012569399999999564, 0.00012413899999999534, 0.00012401399999999868, 0.00012473599999999335, 0.00012393000000000126, 0.00012401399999999868, 0.00012495799999999446, 0.00012404199999999782, 0.00012461100000000364, 0.00012454199999999832, 0.00012474999999999986, 0.0001245559999999979, 0.00012455499999999842, 0.00012397199999999997, 0.00012409699999999663, 0.0001238050000000046, 0.00012451399999999918, 0.00012386099999999595, 0.0001241109999999962, 0.00012420800000000065, 0.0001244999999999996, 0.00012436099999999645, 0.0001238050000000046, 0.00012494400000000183, 0.00012434699999999688, 0.00012434700000000382, 0.00012386100000000289, 0.00012383400000000322, 0.00012458299999999756, 0.00012420800000000065, 0.00012386099999999595, 0.00012438899999999559, 0.0001246109999999967, 0.00012441700000000167, 0.00012452700000000622, 0.00012563899999999684, 0.00012466600000000244, 0.0001239580000000004, 0.00012391699999999423, 0.00012472200000000072, 0.00012441699999999473, 0.00012463900000000278, 0.0001246250000000032]</msg>
<status status="PASS" starttime="20201117 14:47:49.882" endtime="20201117 14:47:49.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.871" endtime="20201117 14:47:49.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.894" endtime="20201117 14:47:49.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:49.902" endtime="20201117 14:47:49.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.898" endtime="20201117 14:47:49.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.889" endtime="20201117 14:47:49.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.384" endtime="20201117 14:47:49.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.380" endtime="20201117 14:47:49.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.379" endtime="20201117 14:47:49.929"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.956" endtime="20201117 14:47:49.977"></status>
</kw>
<msg timestamp="20201117 14:47:49.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.953" endtime="20201117 14:47:49.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:49.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:49.981" endtime="20201117 14:47:49.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:49.987" endtime="20201117 14:47:49.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.946" endtime="20201117 14:47:49.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.939" endtime="20201117 14:47:49.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.011" endtime="20201117 14:47:50.345"></status>
</kw>
<msg timestamp="20201117 14:47:50.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045786875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045912361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.007" endtime="20201117 14:47:50.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045786875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045912361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.355" endtime="20201117 14:47:50.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.373" endtime="20201117 14:47:50.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.000" endtime="20201117 14:47:50.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.995" endtime="20201117 14:47:50.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.390" level="INFO">${RESULT} = [{'time': 0.045912361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012548600000000104, 'source_diff': 0.00012548600000000104}, {'time': 0.046064764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.381" endtime="20201117 14:47:50.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:50.392" endtime="20201117 14:47:50.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.433" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.431" endtime="20201117 14:47:50.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.438" level="INFO">VALUE: [0.00012548600000000104, 0.00012484700000000432, 0.00012498600000000054, 0.00012487500000000346, 0.00012570800000000215, 0.00012547200000000147, 0.00012579199999999957, 0.00012573599999999435, 0.0001266250000000052, 0.0001253329999999983, 0.00012526399999999993, 0.0001250130000000002, 0.00012669400000000358, 0.00012552799999999975, 0.0001248050000000056, 0.00012484700000000432, 0.0001257079999999952, 0.0001252779999999995, 0.00012488900000000303, 0.00012536099999999745, 0.00012563900000000378, 0.0001257230000000012, 0.00012547200000000147, 0.00012536199999999692, 0.00012545799999999496, 0.00012565200000000387, 0.0001256529999999964, 0.0001257079999999952, 0.0001251250000000037, 0.0001255000000000006, 0.0001252360000000008, 0.00012534699999999788, 0.00012572200000000172, 0.0001255979999999976, 0.0001250689999999985, 0.00012572200000000172, 0.0001253199999999982, 0.00012522200000000122, 0.0001252779999999995, 0.00012570900000000162, 0.0001253329999999983, 0.00012522200000000122, 0.0001253329999999983, 0.00012498700000000001, 0.000125568999999999, 0.00012569399999999564, 0.0001255559999999989, 0.00012508399999999753, 0.0001248879999999966, 0.00012536099999999745]</msg>
<status status="PASS" starttime="20201117 14:47:50.435" endtime="20201117 14:47:50.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.424" endtime="20201117 14:47:50.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.447" endtime="20201117 14:47:50.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:50.456" endtime="20201117 14:47:50.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.451" endtime="20201117 14:47:50.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.442" endtime="20201117 14:47:50.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.935" endtime="20201117 14:47:50.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.931" endtime="20201117 14:47:50.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:49.930" endtime="20201117 14:47:50.482"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.488" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.509" endtime="20201117 14:47:50.531"></status>
</kw>
<msg timestamp="20201117 14:47:50.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.506" endtime="20201117 14:47:50.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:50.534" endtime="20201117 14:47:50.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.540" endtime="20201117 14:47:50.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.499" endtime="20201117 14:47:50.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.493" endtime="20201117 14:47:50.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.563" endtime="20201117 14:47:50.897"></status>
</kw>
<msg timestamp="20201117 14:47:50.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045158097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045284069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.560" endtime="20201117 14:47:50.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045158097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045284069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:50.906" endtime="20201117 14:47:50.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.925" endtime="20201117 14:47:50.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.553" endtime="20201117 14:47:50.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.548" endtime="20201117 14:47:50.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:50.943" level="INFO">${RESULT} = [{'time': 0.045284069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012597200000000197, 'source_diff': 0.00012597200000000197}, {'time': 0.045442472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:50.935" endtime="20201117 14:47:50.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:50.973" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:50.945" endtime="20201117 14:47:50.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.984" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:50.981" endtime="20201117 14:47:50.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:50.989" level="INFO">VALUE: [0.00012597200000000197, 0.0001258889999999971, 0.00012609800000000504, 0.00012680500000000067, 0.0001260559999999994, 0.00012663900000000478, 0.0001260700000000059, 0.00012652700000000128, 0.00012748600000000304, 0.0001269580000000034, 0.00012651400000000118, 0.00012626400000000093, 0.00012672200000000272, 0.00012654100000000085, 0.00012672199999999578, 0.000126778000000001, 0.0001267079999999962, 0.00012637499999999802, 0.0001267230000000022, 0.00012611100000000514, 0.00012674999999999492, 0.00012587499999999752, 0.00012595799999999546, 0.00012601399999999374, 0.00012608299999999906, 0.00012627700000000103, 0.000126569, 0.00012658399999999903, 0.000126569, 0.00012669499999999612, 0.00012602800000000025, 0.00012619400000000308, 0.00012619500000000256, 0.00012626300000000146, 0.00012634700000000582, 0.00012638900000000453, 0.00012601400000000068, 0.00012640200000000462, 0.00012644499999999587, 0.00012637499999999802, 0.00012659699999999913, 0.0001264580000000029, 0.0001265000000000016, 0.000126569, 0.00012641700000000367, 0.00012669400000000358, 0.00012629200000000007, 0.00012594400000000283, 0.00012654200000000032, 0.0001267360000000023]</msg>
<status status="PASS" starttime="20201117 14:47:50.986" endtime="20201117 14:47:50.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.975" endtime="20201117 14:47:50.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:50.998" endtime="20201117 14:47:51.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.007" endtime="20201117 14:47:51.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.002" endtime="20201117 14:47:51.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.994" endtime="20201117 14:47:51.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.489" endtime="20201117 14:47:51.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.485" endtime="20201117 14:47:51.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:50.483" endtime="20201117 14:47:51.033"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.038" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.060" endtime="20201117 14:47:51.081"></status>
</kw>
<msg timestamp="20201117 14:47:51.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.057" endtime="20201117 14:47:51.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.084" endtime="20201117 14:47:51.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.091" endtime="20201117 14:47:51.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.049" endtime="20201117 14:47:51.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.044" endtime="20201117 14:47:51.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.114" endtime="20201117 14:47:51.447"></status>
</kw>
<msg timestamp="20201117 14:47:51.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045016708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.111" endtime="20201117 14:47:51.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045016708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.456" endtime="20201117 14:47:51.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.475" endtime="20201117 14:47:51.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.103" endtime="20201117 14:47:51.480"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.099" endtime="20201117 14:47:51.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.492" level="INFO">${RESULT} = [{'time': 0.045016708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001273330000000003, 'source_diff': 0.0001273330000000003}, {'time': 0.045177069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:51.483" endtime="20201117 14:47:51.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:51.494" endtime="20201117 14:47:51.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.532" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.530" endtime="20201117 14:47:51.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.538" level="INFO">VALUE: [0.0001273330000000003, 0.0001270000000000021, 0.0001274030000000051, 0.00012770899999999669, 0.00012748600000000304, 0.00012862500000000027, 0.00012683399999999928, 0.0001284580000000049, 0.0001279309999999978, 0.00012747300000000295, 0.00012720900000000313, 0.0001273200000000002, 0.00012730600000000064, 0.00012765300000000535, 0.00012730600000000064, 0.00012690299999999766, 0.00012747200000000347, 0.00012677799999999406, 0.0001273200000000002, 0.00012751399999999524, 0.00012755500000000142, 0.000127680000000005, 0.00012701399999999474, 0.0001271800000000045, 0.0001277079999999972, 0.00012704200000000082, 0.00012737499999999902, 0.00012772199999999678, 0.00012794499999999737, 0.00012747200000000347, 0.00012815300000000585, 0.000127778000000002, 0.00012769399999999764, 0.00012726400000000193, 0.00012709699999999963, 0.00012701400000000168, 0.00012829199999999513, 0.0001275409999999949, 0.0001282780000000025, 0.0001270560000000004, 0.0001282079999999977, 0.00012768099999999755, 0.00012775000000000286, 0.0001274450000000038, 0.00012684699999999938, 0.00012805499999999498, 0.0001271529999999979, 0.0001271109999999992, 0.00012779199999999463, 0.00012866699999999898]</msg>
<status status="PASS" starttime="20201117 14:47:51.535" endtime="20201117 14:47:51.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.523" endtime="20201117 14:47:51.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.547" endtime="20201117 14:47:51.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.556" endtime="20201117 14:47:51.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.551" endtime="20201117 14:47:51.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.543" endtime="20201117 14:47:51.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.040" endtime="20201117 14:47:51.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.036" endtime="20201117 14:47:51.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.034" endtime="20201117 14:47:51.582"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.587" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.609" endtime="20201117 14:47:51.630"></status>
</kw>
<msg timestamp="20201117 14:47:51.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.605" endtime="20201117 14:47:51.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.633" endtime="20201117 14:47:51.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.640" endtime="20201117 14:47:51.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.598" endtime="20201117 14:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.592" endtime="20201117 14:47:51.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.663" endtime="20201117 14:47:51.996"></status>
</kw>
<msg timestamp="20201117 14:47:52.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045035958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045164417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.660" endtime="20201117 14:47:52.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045035958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045164417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.005" endtime="20201117 14:47:52.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.023" endtime="20201117 14:47:52.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.652" endtime="20201117 14:47:52.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.648" endtime="20201117 14:47:52.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.042" level="INFO">${RESULT} = [{'time': 0.045164417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012845899999999744, 'source_diff': 0.00012845899999999744}, {'time': 0.045325819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:52.034" endtime="20201117 14:47:52.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:52.045" endtime="20201117 14:47:52.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.083" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.081" endtime="20201117 14:47:52.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.089" level="INFO">VALUE: [0.00012845899999999744, 0.0001287360000000043, 0.0001282769999999961, 0.00012795799999999746, 0.0001281529999999989, 0.00012808300000000106, 0.0001283889999999996, 0.00012877799999999606, 0.0001287079999999982, 0.0001295969999999952, 0.0001283189999999948, 0.00012869500000000506, 0.0001290980000000011, 0.00012840299999999916, 0.00012876400000000343, 0.0001286529999999994, 0.00012824999999999642, 0.00012879099999999616, 0.00012862500000000027, 0.00012869500000000506, 0.00012795899999999694, 0.00012892999999999932, 0.0001284859999999971, 0.00012799999999999617, 0.00012808400000000053, 0.0001281110000000002, 0.0001296110000000017, 0.00012791699999999823, 0.00012801400000000268, 0.00012875000000000386, 0.00012847200000000447, 0.00012879200000000257, 0.0001282769999999961, 0.00012891599999999975, 0.0001283189999999948, 0.00012840299999999916, 0.0001283330000000013, 0.0001286529999999994, 0.00012802800000000225, 0.0001278879999999996, 0.0001285560000000019, 0.00012916700000000642, 0.00012819500000000456, 0.00012822199999999728, 0.00012798700000000302, 0.00012870899999999769, 0.00012963800000000136, 0.00012825000000000336, 0.00012802800000000225, 0.00012783400000000028]</msg>
<status status="PASS" starttime="20201117 14:47:52.085" endtime="20201117 14:47:52.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.074" endtime="20201117 14:47:52.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.098" endtime="20201117 14:47:52.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.107" endtime="20201117 14:47:52.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.102" endtime="20201117 14:47:52.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.093" endtime="20201117 14:47:52.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.589" endtime="20201117 14:47:52.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.585" endtime="20201117 14:47:52.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.583" endtime="20201117 14:47:52.133"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.138" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.160" endtime="20201117 14:47:52.181"></status>
</kw>
<msg timestamp="20201117 14:47:52.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.157" endtime="20201117 14:47:52.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.185" endtime="20201117 14:47:52.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.191" endtime="20201117 14:47:52.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.149" endtime="20201117 14:47:52.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.144" endtime="20201117 14:47:52.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.214" endtime="20201117 14:47:52.550"></status>
</kw>
<msg timestamp="20201117 14:47:52.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045068583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.211" endtime="20201117 14:47:52.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045068583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.559" endtime="20201117 14:47:52.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.582" endtime="20201117 14:47:52.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.204" endtime="20201117 14:47:52.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.199" endtime="20201117 14:47:52.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.599" level="INFO">${RESULT} = [{'time': 0.045199056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000130472999999999, 'source_diff': 0.000130472999999999}, {'time': 0.045362444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:52.591" endtime="20201117 14:47:52.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:52.601" endtime="20201117 14:47:52.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.642" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.640" endtime="20201117 14:47:52.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.647" level="INFO">VALUE: [0.000130472999999999, 0.00012931900000000274, 0.0001294439999999994, 0.00012930600000000264, 0.00012974999999999792, 0.00012916699999999948, 0.00012969399999999964, 0.0001290000000000041, 0.0001291529999999999, 0.00012880499999999573, 0.0001295130000000047, 0.00012887500000000052, 0.00012906899999999555, 0.00012974999999999792, 0.00012974999999999792, 0.00012959700000000213, 0.00012969399999999964, 0.0001296110000000017, 0.00012913900000000034, 0.00012924999999999742, 0.0001294309999999993, 0.00012902699999999684, 0.00012970800000000615, 0.00012934699999999494, 0.0001306530000000014, 0.00012892999999999932, 0.00013043000000000082, 0.0001291529999999999, 0.00012944499999999887, 0.00012973699999999783, 0.0001292079999999987, 0.00012958300000000256, 0.00012929200000000307, 0.00012969499999999912, 0.0001294859999999981, 0.00013063900000000184, 0.00012947199999999853, 0.00012958400000000203, 0.0001296530000000004, 0.0001288890000000001, 0.00012923599999999785, 0.0001298890000000011, 0.00012949999999999767, 0.00012974999999999792, 0.00012997200000000597, 0.00012886100000000095, 0.00012981900000000324, 0.0001294309999999993, 0.00012887500000000052, 0.00013033299999999637]</msg>
<status status="PASS" starttime="20201117 14:47:52.644" endtime="20201117 14:47:52.648"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.633" endtime="20201117 14:47:52.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.656" endtime="20201117 14:47:52.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.665" endtime="20201117 14:47:52.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.660" endtime="20201117 14:47:52.688"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.652" endtime="20201117 14:47:52.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.140" endtime="20201117 14:47:52.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.136" endtime="20201117 14:47:52.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.134" endtime="20201117 14:47:52.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.333" endtime="20201117 14:47:52.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.702" endtime="20201117 14:47:52.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.698" endtime="20201117 14:47:52.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.695" endtime="20201117 14:47:52.726"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:57.204" endtime="20201117 14:47:52.727" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.745" endtime="20201117 14:47:52.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.741" endtime="20201117 14:47:52.768"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.801" endtime="20201117 14:47:52.818"></status>
</kw>
<msg timestamp="20201117 14:47:52.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.798" endtime="20201117 14:47:52.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.826" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.822" endtime="20201117 14:47:52.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.833" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:52.828" endtime="20201117 14:47:52.833"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:52.791" endtime="20201117 14:47:52.835"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:52.784" endtime="20201117 14:47:52.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.782" endtime="20201117 14:47:52.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:52.845" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:52.844" endtime="20201117 14:47:52.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.839" endtime="20201117 14:47:52.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.780" endtime="20201117 14:47:52.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.778" endtime="20201117 14:47:52.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.849" endtime="20201117 14:47:52.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.774" endtime="20201117 14:47:52.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.770" endtime="20201117 14:47:52.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.738" endtime="20201117 14:47:52.856"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.885" endtime="20201117 14:47:52.903"></status>
</kw>
<msg timestamp="20201117 14:47:52.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.882" endtime="20201117 14:47:52.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.906" endtime="20201117 14:47:52.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.913" endtime="20201117 14:47:52.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.875" endtime="20201117 14:47:52.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.869" endtime="20201117 14:47:52.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.936" endtime="20201117 14:47:53.280"></status>
</kw>
<msg timestamp="20201117 14:47:53.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132359319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132429556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.933" endtime="20201117 14:47:53.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132359319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132429556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.289" endtime="20201117 14:47:53.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.308" endtime="20201117 14:47:53.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.925" endtime="20201117 14:47:53.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.921" endtime="20201117 14:47:53.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.326" level="INFO">${RESULT} = [{'time': 0.132429556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.023700000000077e-05, 'source_diff': 7.023700000000077e-05}, {'time': 0.132512486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.316" endtime="20201117 14:47:53.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:53.328" endtime="20201117 14:47:53.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.368" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.366" endtime="20201117 14:47:53.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.373" level="INFO">VALUE: [7.023700000000077e-05, 7.455500000000392e-05, 7.036100000001877e-05, 7.024999999999393e-05, 7.418100000000649e-05, 7.526399999999156e-05, 7.493000000000083e-05, 7.438900000000803e-05, 7.49310000000003e-05, 7.101400000000813e-05, 7.55560000000044e-05, 7.088900000001841e-05, 7.090300000001104e-05, 7.57369999999924e-05, 7.401400000001113e-05, 7.424999999999793e-05, 7.072299999999476e-05, 7.558300000001794e-05, 7.490299999998729e-05, 7.448599999998473e-05, 7.036099999999101e-05, 7.576400000000594e-05, 7.443100000001368e-05, 7.076400000000094e-05, 7.473600000001968e-05, 7.074999999998055e-05, 7.556999999999703e-05, 7.491700000000767e-05, 7.083300000002013e-05, 7.544400000000784e-05, 7.018000000000302e-05, 7.052799999998638e-05, 7.040299999999666e-05, 7.443000000001421e-05, 7.424999999999793e-05, 7.108299999999956e-05, 7.038900000000403e-05, 7.072199999999529e-05, 7.024999999999393e-05, 7.10700000000064e-05, 7.106899999997918e-05, 7.458300000001694e-05, 7.440200000000119e-05, 7.056899999999255e-05, 7.105499999998655e-05, 7.073600000001568e-05, 7.037499999998365e-05, 7.42360000000053e-05, 7.50969999999962e-05, 7.033300000000575e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.370" endtime="20201117 14:47:53.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.359" endtime="20201117 14:47:53.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.382" endtime="20201117 14:47:53.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.391" endtime="20201117 14:47:53.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.386" endtime="20201117 14:47:53.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.378" endtime="20201117 14:47:53.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.865" endtime="20201117 14:47:53.416"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.861" endtime="20201117 14:47:53.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.859" endtime="20201117 14:47:53.417"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.422" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.444" endtime="20201117 14:47:53.461"></status>
</kw>
<msg timestamp="20201117 14:47:53.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.441" endtime="20201117 14:47:53.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.465" endtime="20201117 14:47:53.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.471" endtime="20201117 14:47:53.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.433" endtime="20201117 14:47:53.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.428" endtime="20201117 14:47:53.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.494" endtime="20201117 14:47:53.827"></status>
</kw>
<msg timestamp="20201117 14:47:53.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044975069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045045806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.491" endtime="20201117 14:47:53.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044975069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045045806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.837" endtime="20201117 14:47:53.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.856" endtime="20201117 14:47:53.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.484" endtime="20201117 14:47:53.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.479" endtime="20201117 14:47:53.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.873" level="INFO">${RESULT} = [{'time': 0.045045806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.073700000000127e-05, 'source_diff': 7.073700000000127e-05}, {'time': 0.045124042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:53.864" endtime="20201117 14:47:53.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:53.875" endtime="20201117 14:47:53.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.916" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.914" endtime="20201117 14:47:53.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.921" level="INFO">VALUE: [7.073700000000127e-05, 7.037500000000446e-05, 7.104200000000033e-05, 7.509800000000261e-05, 7.438900000000109e-05, 7.070799999999572e-05, 7.05689999999995e-05, 7.423599999999836e-05, 7.422199999999879e-05, 7.055499999999992e-05, 7.523699999999883e-05, 7.07360000000018e-05, 7.055499999999992e-05, 7.52639999999985e-05, 7.506899999999705e-05, 7.42360000000053e-05, 7.020900000000163e-05, 7.102800000000076e-05, 7.036100000000489e-05, 7.474999999999843e-05, 7.058399999999854e-05, 7.409700000000213e-05, 7.455500000000392e-05, 7.472199999999929e-05, 7.102700000000128e-05, 7.561099999999626e-05, 7.475000000000537e-05, 7.473699999999833e-05, 7.069400000000309e-05, 7.55839999999966e-05, 7.073599999999486e-05, 7.408400000000204e-05, 7.425000000000487e-05, 7.424999999999793e-05, 7.091699999999673e-05, 7.462500000000177e-05, 7.538899999999515e-05, 7.45839999999956e-05, 7.401400000000419e-05, 7.458299999999612e-05, 7.058399999999854e-05, 7.491600000000126e-05, 7.534699999999644e-05, 7.470799999999972e-05, 7.465300000000091e-05, 7.104200000000033e-05, 7.1069e-05, 7.090200000000463e-05, 7.104199999999339e-05, 7.423699999999783e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.918" endtime="20201117 14:47:53.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.907" endtime="20201117 14:47:53.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.930" endtime="20201117 14:47:53.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.938" endtime="20201117 14:47:53.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.934" endtime="20201117 14:47:53.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.925" endtime="20201117 14:47:53.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.424" endtime="20201117 14:47:53.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.420" endtime="20201117 14:47:53.964"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.418" endtime="20201117 14:47:53.965"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.993" endtime="20201117 14:47:54.011"></status>
</kw>
<msg timestamp="20201117 14:47:54.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.990" endtime="20201117 14:47:54.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.014" endtime="20201117 14:47:54.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.021" endtime="20201117 14:47:54.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.982" endtime="20201117 14:47:54.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.976" endtime="20201117 14:47:54.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.045" endtime="20201117 14:47:54.377"></status>
</kw>
<msg timestamp="20201117 14:47:54.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.042" endtime="20201117 14:47:54.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.386" endtime="20201117 14:47:54.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.405" endtime="20201117 14:47:54.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.034" endtime="20201117 14:47:54.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.029" endtime="20201117 14:47:54.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.422" level="INFO">${RESULT} = [{'time': 0.046873708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.087499999999802e-05, 'source_diff': 7.087499999999802e-05}, {'time': 0.046955653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.413" endtime="20201117 14:47:54.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:54.424" endtime="20201117 14:47:54.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.465" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.463" endtime="20201117 14:47:54.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.470" level="INFO">VALUE: [7.087499999999802e-05, 7.523599999999936e-05, 7.086099999999845e-05, 7.438899999999415e-05, 7.040299999999666e-05, 7.488900000000159e-05, 7.054199999999983e-05, 7.090299999999716e-05, 7.052700000000078e-05, 7.022299999999426e-05, 7.072200000000223e-05, 7.491600000000126e-05, 7.422199999999879e-05, 7.105500000000042e-05, 7.018000000000302e-05, 7.441599999999382e-05, 7.066700000000342e-05, 7.537500000000252e-05, 7.07360000000018e-05, 7.422199999999879e-05, 7.423599999999836e-05, 7.10559999999999e-05, 7.470799999999972e-05, 7.058399999999854e-05, 7.034699999999838e-05, 7.088899999999759e-05, 7.020800000000216e-05, 7.457000000000297e-05, 7.549999999999918e-05, 7.019499999999512e-05, 7.075000000000137e-05, 7.086099999999845e-05, 7.037500000000446e-05, 7.019400000000259e-05, 7.573699999999933e-05, 7.101400000000119e-05, 7.025000000000087e-05, 7.054199999999983e-05, 7.037499999999752e-05, 7.488900000000159e-05, 7.102800000000076e-05, 7.488899999999465e-05, 7.054199999999983e-05, 7.07360000000018e-05, 7.491700000000073e-05, 7.022200000000173e-05, 7.02360000000013e-05, 7.476299999999853e-05, 7.105500000000042e-05, 7.405500000000342e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.467" endtime="20201117 14:47:54.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.456" endtime="20201117 14:47:54.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.479" endtime="20201117 14:47:54.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.488" endtime="20201117 14:47:54.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.483" endtime="20201117 14:47:54.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.475" endtime="20201117 14:47:54.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.972" endtime="20201117 14:47:54.513"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.968" endtime="20201117 14:47:54.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.966" endtime="20201117 14:47:54.514"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.519" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.541" endtime="20201117 14:47:54.558"></status>
</kw>
<msg timestamp="20201117 14:47:54.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.538" endtime="20201117 14:47:54.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.562" endtime="20201117 14:47:54.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.569" endtime="20201117 14:47:54.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.530" endtime="20201117 14:47:54.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.524" endtime="20201117 14:47:54.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.594" endtime="20201117 14:47:54.928"></status>
</kw>
<msg timestamp="20201117 14:47:54.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045162278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045236514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.590" endtime="20201117 14:47:54.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045162278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045236514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.937" endtime="20201117 14:47:54.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.956" endtime="20201117 14:47:54.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.582" endtime="20201117 14:47:54.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.577" endtime="20201117 14:47:54.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.973" level="INFO">${RESULT} = [{'time': 0.045236514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.423599999999836e-05, 'source_diff': 7.423599999999836e-05}, {'time': 0.045316722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:54.964" endtime="20201117 14:47:54.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:54.975" endtime="20201117 14:47:55.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.020" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.017" endtime="20201117 14:47:55.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.025" level="INFO">VALUE: [7.423599999999836e-05, 7.456899999999655e-05, 7.10559999999999e-05, 7.423599999999836e-05, 7.459700000000263e-05, 7.440300000000066e-05, 7.023599999999436e-05, 7.083299999999931e-05, 7.526299999999903e-05, 7.069499999999562e-05, 7.420899999999869e-05, 7.475000000000537e-05, 7.088899999999759e-05, 7.483300000000331e-05, 7.02360000000013e-05, 7.076400000000094e-05, 7.557000000000397e-05, 7.072200000000223e-05, 7.424999999999793e-05, 7.037499999999752e-05, 7.062499999999777e-05, 7.105500000000042e-05, 7.10979999999986e-05, 7.04030000000036e-05, 7.505499999999748e-05, 7.424999999999793e-05, 7.40839999999951e-05, 7.075000000000137e-05, 7.573699999999933e-05, 7.04030000000036e-05, 7.473599999999886e-05, 7.541600000000176e-05, 7.072200000000223e-05, 7.558299999999712e-05, 7.422200000000573e-05, 7.423699999999783e-05, 7.013899999999684e-05, 7.490200000000169e-05, 7.087500000000496e-05, 7.081899999999974e-05, 7.056999999999897e-05, 7.02360000000013e-05, 7.441700000000023e-05, 7.095900000000238e-05, 7.087500000000496e-05, 7.491700000000073e-05, 7.429199999999664e-05, 7.533399999999635e-05, 7.020800000000216e-05, 7.033299999999881e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.022" endtime="20201117 14:47:55.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.010" endtime="20201117 14:47:55.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.035" endtime="20201117 14:47:55.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.043" endtime="20201117 14:47:55.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.039" endtime="20201117 14:47:55.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.030" endtime="20201117 14:47:55.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.521" endtime="20201117 14:47:55.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.517" endtime="20201117 14:47:55.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.515" endtime="20201117 14:47:55.070"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.098" endtime="20201117 14:47:55.115"></status>
</kw>
<msg timestamp="20201117 14:47:55.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.094" endtime="20201117 14:47:55.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.118" endtime="20201117 14:47:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.125" endtime="20201117 14:47:55.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.087" endtime="20201117 14:47:55.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.081" endtime="20201117 14:47:55.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.148" endtime="20201117 14:47:55.481"></status>
</kw>
<msg timestamp="20201117 14:47:55.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046399306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.145" endtime="20201117 14:47:55.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046399306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.490" endtime="20201117 14:47:55.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.509" endtime="20201117 14:47:55.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.138" endtime="20201117 14:47:55.514"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.133" endtime="20201117 14:47:55.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.526" level="INFO">${RESULT} = [{'time': 0.046469556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.025000000000087e-05, 'source_diff': 7.025000000000087e-05}, {'time': 0.046549583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.517" endtime="20201117 14:47:55.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:55.528" endtime="20201117 14:47:55.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.569" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.566" endtime="20201117 14:47:55.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.574" level="INFO">VALUE: [7.025000000000087e-05, 7.424999999999793e-05, 7.473599999999886e-05, 7.474999999999843e-05, 7.445800000000641e-05, 7.474999999999843e-05, 7.573599999999986e-05, 7.426400000000444e-05, 7.055499999999992e-05, 7.040299999999666e-05, 7.105500000000042e-05, 7.038900000000403e-05, 7.056999999999897e-05, 7.409700000000213e-05, 7.025000000000087e-05, 7.438900000000109e-05, 7.034699999999838e-05, 7.054199999999983e-05, 7.475000000000537e-05, 7.019500000000206e-05, 7.423599999999836e-05, 7.020800000000216e-05, 7.086200000000487e-05, 7.019400000000259e-05, 7.054199999999983e-05, 7.505599999999696e-05, 7.491700000000073e-05, 7.408300000000256e-05, 7.523599999999936e-05, 7.404100000000385e-05, 7.088900000000453e-05, 7.04030000000036e-05, 7.052700000000078e-05, 7.10559999999999e-05, 7.423599999999836e-05, 7.072200000000223e-05, 7.572200000000029e-05, 7.506899999999705e-05, 7.5763999999999e-05, 7.052800000000026e-05, 7.490300000000116e-05, 7.102800000000076e-05, 7.440300000000066e-05, 7.038900000000403e-05, 7.4069000000003e-05, 7.455599999999646e-05, 7.052800000000026e-05, 7.491700000000073e-05, 7.494499999999987e-05, 7.473599999999886e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.571" endtime="20201117 14:47:55.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.559" endtime="20201117 14:47:55.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.583" endtime="20201117 14:47:55.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.592" endtime="20201117 14:47:55.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.588" endtime="20201117 14:47:55.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.578" endtime="20201117 14:47:55.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.077" endtime="20201117 14:47:55.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.072" endtime="20201117 14:47:55.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.071" endtime="20201117 14:47:55.619"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.645" endtime="20201117 14:47:55.663"></status>
</kw>
<msg timestamp="20201117 14:47:55.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.642" endtime="20201117 14:47:55.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.666" endtime="20201117 14:47:55.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.673" endtime="20201117 14:47:55.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.635" endtime="20201117 14:47:55.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.629" endtime="20201117 14:47:55.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.696" endtime="20201117 14:47:56.042"></status>
</kw>
<msg timestamp="20201117 14:47:56.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04491725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044991486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:55.693" endtime="20201117 14:47:56.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04491725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044991486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:56.052" endtime="20201117 14:47:56.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.071" endtime="20201117 14:47:56.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.685" endtime="20201117 14:47:56.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.681" endtime="20201117 14:47:56.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.089" level="INFO">${RESULT} = [{'time': 0.044991486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.423599999999836e-05, 'source_diff': 7.423599999999836e-05}, {'time': 0.045068917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.080" endtime="20201117 14:47:56.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.120" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:56.091" endtime="20201117 14:47:56.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.132" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.128" endtime="20201117 14:47:56.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.137" level="INFO">VALUE: [7.423599999999836e-05, 7.104200000000033e-05, 7.1069e-05, 7.037500000000446e-05, 7.05689999999995e-05, 7.4763999999998e-05, 7.041599999999676e-05, 7.041699999999623e-05, 7.022200000000173e-05, 7.491600000000126e-05, 7.398599999999811e-05, 7.404099999999691e-05, 7.506899999999705e-05, 7.056999999999897e-05, 7.472299999999876e-05, 7.488900000000159e-05, 7.022200000000173e-05, 7.440300000000066e-05, 7.088899999999759e-05, 7.108299999999956e-05, 7.506899999999705e-05, 7.441700000000023e-05, 7.038899999999709e-05, 7.1069e-05, 7.072200000000223e-05, 7.090299999999716e-05, 7.019400000000259e-05, 7.457000000000297e-05, 7.459700000000263e-05, 7.523599999999936e-05, 7.087499999999802e-05, 7.51110000000027e-05, 7.474999999999843e-05, 7.101400000000119e-05, 7.072200000000223e-05, 7.025000000000087e-05, 7.455500000000392e-05, 7.405599999999596e-05, 7.036099999999795e-05, 7.440300000000066e-05, 7.102800000000076e-05, 7.440300000000066e-05, 7.49310000000003e-05, 7.524999999999893e-05, 7.493000000000083e-05, 7.404199999999639e-05, 7.408300000000256e-05, 7.399999999999768e-05, 7.508300000000356e-05, 7.505499999999748e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.134" endtime="20201117 14:47:56.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.121" endtime="20201117 14:47:56.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.147" endtime="20201117 14:47:56.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.155" endtime="20201117 14:47:56.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.150" endtime="20201117 14:47:56.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.142" endtime="20201117 14:47:56.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.625" endtime="20201117 14:47:56.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.621" endtime="20201117 14:47:56.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.619" endtime="20201117 14:47:56.181"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.208" endtime="20201117 14:47:56.227"></status>
</kw>
<msg timestamp="20201117 14:47:56.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.205" endtime="20201117 14:47:56.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.230" endtime="20201117 14:47:56.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.237" endtime="20201117 14:47:56.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.198" endtime="20201117 14:47:56.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.192" endtime="20201117 14:47:56.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.260" endtime="20201117 14:47:56.607"></status>
</kw>
<msg timestamp="20201117 14:47:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045107681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045178542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.257" endtime="20201117 14:47:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045107681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045178542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.616" endtime="20201117 14:47:56.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.635" endtime="20201117 14:47:56.639"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.249" endtime="20201117 14:47:56.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.245" endtime="20201117 14:47:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.652" level="INFO">${RESULT} = [{'time': 0.045178542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.086100000000539e-05, 'source_diff': 7.086100000000539e-05}, {'time': 0.045261542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:56.643" endtime="20201117 14:47:56.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:56.654" endtime="20201117 14:47:56.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.693" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.691" endtime="20201117 14:47:56.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.701" level="INFO">VALUE: [7.086100000000539e-05, 7.441700000000023e-05, 7.409700000000213e-05, 7.023599999999436e-05, 7.069499999999562e-05, 7.455499999999698e-05, 7.422299999999826e-05, 7.523599999999936e-05, 7.472199999999929e-05, 7.068100000000299e-05, 7.022200000000173e-05, 7.036099999999795e-05, 7.098599999999511e-05, 7.487500000000202e-05, 7.406899999999605e-05, 7.408400000000204e-05, 7.52639999999985e-05, 7.088900000000453e-05, 7.09160000000042e-05, 7.09030000000041e-05, 7.086100000000539e-05, 7.504199999999739e-05, 7.472199999999929e-05, 7.070900000000213e-05, 7.423699999999783e-05, 7.490299999999422e-05, 7.02360000000013e-05, 7.474999999999843e-05, 7.425000000000487e-05, 7.10979999999986e-05, 7.472199999999929e-05, 7.441700000000023e-05, 7.022200000000173e-05, 7.423599999999836e-05, 7.45690000000035e-05, 7.491600000000126e-05, 7.487499999999508e-05, 7.095900000000238e-05, 7.020800000000216e-05, 7.091700000000367e-05, 7.424999999999793e-05, 7.1069e-05, 7.07360000000018e-05, 7.050000000000112e-05, 7.077800000000051e-05, 7.423599999999836e-05, 7.508300000000356e-05, 7.054100000000035e-05, 7.052800000000026e-05, 7.424999999999793e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.696" endtime="20201117 14:47:56.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.684" endtime="20201117 14:47:56.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.710" endtime="20201117 14:47:56.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.718" endtime="20201117 14:47:56.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.713" endtime="20201117 14:47:56.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.705" endtime="20201117 14:47:56.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.188" endtime="20201117 14:47:56.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.184" endtime="20201117 14:47:56.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.182" endtime="20201117 14:47:56.744"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.771" endtime="20201117 14:47:56.790"></status>
</kw>
<msg timestamp="20201117 14:47:56.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.768" endtime="20201117 14:47:56.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.793" endtime="20201117 14:47:56.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.800" endtime="20201117 14:47:56.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.761" endtime="20201117 14:47:56.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.755" endtime="20201117 14:47:56.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.823" endtime="20201117 14:47:57.169"></status>
</kw>
<msg timestamp="20201117 14:47:57.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045169278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045239681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.820" endtime="20201117 14:47:57.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045169278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045239681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.179" endtime="20201117 14:47:57.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.197" endtime="20201117 14:47:57.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.812" endtime="20201117 14:47:57.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.808" endtime="20201117 14:47:57.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.214" level="INFO">${RESULT} = [{'time': 0.045239681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.040299999999666e-05, 'source_diff': 7.040299999999666e-05}, {'time': 0.045319958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.205" endtime="20201117 14:47:57.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.248" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:57.217" endtime="20201117 14:47:57.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.259" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.256" endtime="20201117 14:47:57.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.264" level="INFO">VALUE: [7.040299999999666e-05, 7.1069e-05, 7.407000000000247e-05, 7.491700000000073e-05, 7.10559999999999e-05, 7.577799999999857e-05, 7.490300000000116e-05, 7.458300000000306e-05, 7.5763999999999e-05, 7.436200000000143e-05, 7.054100000000035e-05, 7.491600000000126e-05, 7.525000000000587e-05, 7.088900000000453e-05, 7.037499999999752e-05, 7.458299999999612e-05, 7.45839999999956e-05, 7.426400000000444e-05, 7.041599999999676e-05, 7.408300000000256e-05, 7.109699999999913e-05, 7.065300000000385e-05, 7.04030000000036e-05, 7.475000000000537e-05, 7.408300000000256e-05, 7.036099999999795e-05, 7.054100000000035e-05, 7.42639999999975e-05, 7.09160000000042e-05, 7.023700000000077e-05, 7.405599999999596e-05, 7.036099999999795e-05, 7.030499999999967e-05, 7.472199999999929e-05, 7.438900000000109e-05, 7.055600000000634e-05, 7.474999999999843e-05, 7.062500000000471e-05, 7.438900000000109e-05, 7.070900000000213e-05, 7.438900000000109e-05, 7.054199999999983e-05, 7.068099999999605e-05, 7.086100000000539e-05, 7.437500000000152e-05, 7.037499999999752e-05, 7.454199999999689e-05, 7.034699999999838e-05, 7.022200000000173e-05, 7.438900000000109e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.261" endtime="20201117 14:47:57.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.249" endtime="20201117 14:47:57.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.274" endtime="20201117 14:47:57.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.283" endtime="20201117 14:47:57.304"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.278" endtime="20201117 14:47:57.306"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.270" endtime="20201117 14:47:57.307"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.751" endtime="20201117 14:47:57.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.747" endtime="20201117 14:47:57.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.745" endtime="20201117 14:47:57.309"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.336" endtime="20201117 14:47:57.353"></status>
</kw>
<msg timestamp="20201117 14:47:57.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.332" endtime="20201117 14:47:57.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.356" endtime="20201117 14:47:57.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.363" endtime="20201117 14:47:57.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.325" endtime="20201117 14:47:57.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.319" endtime="20201117 14:47:57.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.386" endtime="20201117 14:47:57.720"></status>
</kw>
<msg timestamp="20201117 14:47:57.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045037514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045111597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.383" endtime="20201117 14:47:57.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045037514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045111597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.729" endtime="20201117 14:47:57.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.752" endtime="20201117 14:47:57.756"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.375" endtime="20201117 14:47:57.758"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.371" endtime="20201117 14:47:57.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.770" level="INFO">${RESULT} = [{'time': 0.045111597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.408300000000256e-05, 'source_diff': 7.408300000000256e-05}, {'time': 0.045186972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.761" endtime="20201117 14:47:57.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.800" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:57.772" endtime="20201117 14:47:57.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.811" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.809" endtime="20201117 14:47:57.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.816" level="INFO">VALUE: [7.408300000000256e-05, 7.036099999999795e-05, 7.087500000000496e-05, 7.490300000000116e-05, 7.104100000000085e-05, 7.456899999999655e-05, 7.070800000000266e-05, 7.058399999999854e-05, 7.423699999999783e-05, 7.423599999999836e-05, 7.054199999999983e-05, 7.07360000000018e-05, 7.019399999999565e-05, 7.038899999999709e-05, 7.441600000000076e-05, 7.088899999999759e-05, 7.108399999999904e-05, 7.440300000000066e-05, 7.072299999999476e-05, 7.067999999999658e-05, 7.06109999999982e-05, 7.441700000000023e-05, 7.088899999999759e-05, 7.490300000000116e-05, 7.490299999999422e-05, 7.02230000000012e-05, 7.425000000000487e-05, 7.515300000000141e-05, 7.038899999999709e-05, 7.488900000000159e-05, 7.058400000000548e-05, 7.440300000000066e-05, 7.05689999999995e-05, 7.02910000000001e-05, 7.487500000000202e-05, 7.108399999999904e-05, 7.043000000000327e-05, 7.104200000000033e-05, 7.458299999999612e-05, 7.02360000000013e-05, 7.02360000000013e-05, 7.070800000000266e-05, 7.018099999999555e-05, 7.10559999999999e-05, 7.036099999999795e-05, 7.423599999999836e-05, 7.438899999999415e-05, 7.473599999999886e-05, 7.049999999999418e-05, 7.026400000000044e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.813" endtime="20201117 14:47:57.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.802" endtime="20201117 14:47:57.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.827" endtime="20201117 14:47:57.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.835" endtime="20201117 14:47:57.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.831" endtime="20201117 14:47:57.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.822" endtime="20201117 14:47:57.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.315" endtime="20201117 14:47:57.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.312" endtime="20201117 14:47:57.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.310" endtime="20201117 14:47:57.861"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.867" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.888" endtime="20201117 14:47:57.906"></status>
</kw>
<msg timestamp="20201117 14:47:57.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.885" endtime="20201117 14:47:57.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.909" endtime="20201117 14:47:57.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.915" endtime="20201117 14:47:57.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.878" endtime="20201117 14:47:57.921"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.872" endtime="20201117 14:47:57.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.939" endtime="20201117 14:47:58.278"></status>
</kw>
<msg timestamp="20201117 14:47:58.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.935" endtime="20201117 14:47:58.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.287" endtime="20201117 14:47:58.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.305" endtime="20201117 14:47:58.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.928" endtime="20201117 14:47:58.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.923" endtime="20201117 14:47:58.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.323" level="INFO">${RESULT} = [{'time': 0.045204222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.443000000000033e-05, 'source_diff': 7.443000000000033e-05}, {'time': 0.045282653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.314" endtime="20201117 14:47:58.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:58.325" endtime="20201117 14:47:58.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.364" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.362" endtime="20201117 14:47:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.370" level="INFO">VALUE: [7.443000000000033e-05, 7.037499999999752e-05, 7.022199999999479e-05, 7.022200000000173e-05, 7.070799999999572e-05, 7.07360000000018e-05, 7.476400000000494e-05, 7.522199999999979e-05, 7.424999999999793e-05, 7.038900000000403e-05, 7.09439999999964e-05, 7.408300000000256e-05, 7.488900000000159e-05, 7.562500000000277e-05, 7.524999999999893e-05, 7.1069e-05, 7.080500000000017e-05, 7.493099999999336e-05, 7.408299999999562e-05, 7.4763999999998e-05, 7.55969999999967e-05, 7.105500000000042e-05, 7.458299999999612e-05, 7.426300000000496e-05, 7.508300000000356e-05, 7.041699999999623e-05, 7.45560000000034e-05, 7.426400000000444e-05, 7.108299999999956e-05, 7.405499999999648e-05, 7.108399999999904e-05, 7.484699999999594e-05, 7.42639999999975e-05, 7.491600000000126e-05, 7.044400000000284e-05, 7.406899999999605e-05, 7.077800000000051e-05, 7.025000000000087e-05, 7.441700000000023e-05, 7.087500000000496e-05, 7.091700000000367e-05, 7.440200000000119e-05, 7.43189999999963e-05, 7.061100000000514e-05, 7.408300000000256e-05, 7.10559999999999e-05, 7.070800000000266e-05, 7.07230000000017e-05, 7.473599999999886e-05, 7.054199999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.367" endtime="20201117 14:47:58.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.355" endtime="20201117 14:47:58.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.380" endtime="20201117 14:47:58.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.388" endtime="20201117 14:47:58.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.384" endtime="20201117 14:47:58.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.375" endtime="20201117 14:47:58.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.868" endtime="20201117 14:47:58.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.864" endtime="20201117 14:47:58.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.862" endtime="20201117 14:47:58.415"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.442" endtime="20201117 14:47:58.461"></status>
</kw>
<msg timestamp="20201117 14:47:58.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.438" endtime="20201117 14:47:58.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.464" endtime="20201117 14:47:58.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.471" endtime="20201117 14:47:58.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.431" endtime="20201117 14:47:58.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.425" endtime="20201117 14:47:58.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.494" endtime="20201117 14:47:58.840"></status>
</kw>
<msg timestamp="20201117 14:47:58.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045370403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045445986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.491" endtime="20201117 14:47:58.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045370403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045445986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.850" endtime="20201117 14:47:58.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.868" endtime="20201117 14:47:58.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.484" endtime="20201117 14:47:58.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.479" endtime="20201117 14:47:58.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.885" level="INFO">${RESULT} = [{'time': 0.045445986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.558300000000406e-05, 'source_diff': 7.558300000000406e-05}, {'time': 0.045525306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:58.876" endtime="20201117 14:47:58.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.916" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:58.887" endtime="20201117 14:47:58.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.927" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.924" endtime="20201117 14:47:58.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.933" level="INFO">VALUE: [7.558300000000406e-05, 7.408400000000204e-05, 7.556999999999703e-05, 7.42639999999975e-05, 7.407000000000247e-05, 7.524999999999893e-05, 7.45969999999957e-05, 7.409800000000161e-05, 7.440200000000119e-05, 7.488900000000159e-05, 7.477800000000451e-05, 7.391699999999973e-05, 7.573599999999986e-05, 7.491600000000126e-05, 7.459799999999517e-05, 7.540300000000166e-05, 7.443000000000033e-05, 7.441700000000023e-05, 7.474999999999843e-05, 7.423599999999836e-05, 7.450000000000512e-05, 7.475000000000537e-05, 7.406899999999605e-05, 7.424999999999793e-05, 7.422199999999879e-05, 7.458300000000306e-05, 7.457000000000297e-05, 7.470799999999972e-05, 7.423599999999836e-05, 7.472199999999929e-05, 7.436099999999501e-05, 7.472199999999929e-05, 7.440200000000119e-05, 7.473599999999886e-05, 7.474999999999843e-05, 7.470799999999972e-05, 7.491700000000073e-05, 7.472299999999876e-05, 7.490300000000116e-05, 7.420899999999869e-05, 7.390300000000016e-05, 7.490200000000169e-05, 7.456899999999655e-05, 7.424999999999793e-05, 7.508400000000304e-05, 7.451399999999775e-05, 7.541599999999482e-05, 7.473599999999886e-05, 7.524999999999893e-05, 7.406899999999605e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.929" endtime="20201117 14:47:58.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.918" endtime="20201117 14:47:58.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.942" endtime="20201117 14:47:58.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.950" endtime="20201117 14:47:58.972"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.946" endtime="20201117 14:47:58.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.938" endtime="20201117 14:47:58.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.421" endtime="20201117 14:47:58.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.417" endtime="20201117 14:47:58.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.416" endtime="20201117 14:47:58.977"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.005" endtime="20201117 14:47:59.024"></status>
</kw>
<msg timestamp="20201117 14:47:59.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.002" endtime="20201117 14:47:59.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.028" endtime="20201117 14:47:59.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.034" endtime="20201117 14:47:59.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.993" endtime="20201117 14:47:59.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.988" endtime="20201117 14:47:59.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.057" endtime="20201117 14:47:59.402"></status>
</kw>
<msg timestamp="20201117 14:47:59.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046387042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.054" endtime="20201117 14:47:59.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046387042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.411" endtime="20201117 14:47:59.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.430" endtime="20201117 14:47:59.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.047" endtime="20201117 14:47:59.435"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.042" endtime="20201117 14:47:59.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.447" level="INFO">${RESULT} = [{'time': 0.046387042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.557000000000397e-05, 'source_diff': 7.557000000000397e-05}, {'time': 0.046469278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.438" endtime="20201117 14:47:59.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:47:59.449" endtime="20201117 14:47:59.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.491" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.489" endtime="20201117 14:47:59.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.498" level="INFO">VALUE: [7.557000000000397e-05, 7.407000000000247e-05, 7.419399999999965e-05, 7.408400000000204e-05, 7.458299999999612e-05, 7.406899999999605e-05, 7.49310000000003e-05, 7.459800000000211e-05, 7.45690000000035e-05, 7.5763999999999e-05, 7.409700000000213e-05, 7.422199999999879e-05, 7.45839999999956e-05, 7.49440000000004e-05, 7.440300000000066e-05, 7.424999999999793e-05, 7.423599999999836e-05, 7.45560000000034e-05, 7.440300000000066e-05, 7.42639999999975e-05, 7.473599999999886e-05, 7.577800000000551e-05, 7.427799999999707e-05, 7.45560000000034e-05, 7.423599999999836e-05, 7.523599999999936e-05, 7.55560000000044e-05, 7.406899999999605e-05, 7.473599999999886e-05, 7.574999999999943e-05, 7.4069000000003e-05, 7.523599999999936e-05, 7.440300000000066e-05, 7.408400000000204e-05, 7.429200000000358e-05, 7.440300000000066e-05, 7.540299999999472e-05, 7.473599999999886e-05, 7.490300000000116e-05, 7.495899999999944e-05, 7.423599999999836e-05, 7.472199999999929e-05, 7.455499999999698e-05, 7.448599999999861e-05, 7.469400000000015e-05, 7.405599999999596e-05, 7.465300000000091e-05, 7.490300000000116e-05, 7.388900000000059e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.494" endtime="20201117 14:47:59.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.482" endtime="20201117 14:47:59.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.507" endtime="20201117 14:47:59.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.515" endtime="20201117 14:47:59.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.511" endtime="20201117 14:47:59.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.502" endtime="20201117 14:47:59.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.984" endtime="20201117 14:47:59.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.980" endtime="20201117 14:47:59.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.978" endtime="20201117 14:47:59.542"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.548" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.569" endtime="20201117 14:47:59.588"></status>
</kw>
<msg timestamp="20201117 14:47:59.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.566" endtime="20201117 14:47:59.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.592" endtime="20201117 14:47:59.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.598" endtime="20201117 14:47:59.602"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.559" endtime="20201117 14:47:59.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.553" endtime="20201117 14:47:59.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.621" endtime="20201117 14:47:59.968"></status>
</kw>
<msg timestamp="20201117 14:47:59.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046007722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046082097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.618" endtime="20201117 14:47:59.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046007722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046082097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.977" endtime="20201117 14:47:59.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.996" endtime="20201117 14:47:59.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.611" endtime="20201117 14:48:00.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.606" endtime="20201117 14:48:00.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.013" level="INFO">${RESULT} = [{'time': 0.046082097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.437500000000152e-05, 'source_diff': 7.437500000000152e-05}, {'time': 0.046167333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.004" endtime="20201117 14:48:00.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.043" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:00.015" endtime="20201117 14:48:00.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.054" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.052" endtime="20201117 14:48:00.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.060" level="INFO">VALUE: [7.437500000000152e-05, 7.423599999999836e-05, 7.424999999999793e-05, 7.440300000000066e-05, 7.454200000000383e-05, 7.412500000000127e-05, 7.422299999999826e-05, 7.495799999999997e-05, 7.474999999999843e-05, 7.422299999999826e-05, 7.423599999999836e-05, 7.495799999999997e-05, 7.488899999999465e-05, 7.452799999999732e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.445799999999947e-05, 7.418099999999955e-05, 7.437500000000152e-05, 7.413900000000084e-05, 7.495799999999997e-05, 7.387500000000102e-05, 7.437500000000152e-05, 7.486100000000245e-05, 7.437499999999458e-05, 7.422199999999879e-05, 7.449999999999818e-05, 7.443000000000033e-05, 7.437499999999458e-05, 7.388900000000059e-05, 7.41389999999939e-05, 7.42230000000052e-05, 7.438900000000109e-05, 7.488800000000212e-05, 7.405500000000342e-05, 7.554099999999841e-05, 7.487500000000202e-05, 7.440300000000066e-05, 7.45690000000035e-05, 7.441700000000023e-05, 7.423599999999836e-05, 7.434700000000238e-05, 7.455499999999698e-05, 7.422199999999879e-05, 7.488900000000159e-05, 7.406999999999553e-05, 7.42360000000053e-05, 7.438900000000109e-05, 7.390300000000016e-05, 7.472199999999929e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.057" endtime="20201117 14:48:00.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.045" endtime="20201117 14:48:00.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.071" endtime="20201117 14:48:00.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.079" endtime="20201117 14:48:00.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.074" endtime="20201117 14:48:00.102"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.066" endtime="20201117 14:48:00.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.549" endtime="20201117 14:48:00.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.545" endtime="20201117 14:48:00.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.543" endtime="20201117 14:48:00.105"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.111" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.132" endtime="20201117 14:48:00.152"></status>
</kw>
<msg timestamp="20201117 14:48:00.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.129" endtime="20201117 14:48:00.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.155" endtime="20201117 14:48:00.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.161" endtime="20201117 14:48:00.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.122" endtime="20201117 14:48:00.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.116" endtime="20201117 14:48:00.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.186" endtime="20201117 14:48:00.532"></status>
</kw>
<msg timestamp="20201117 14:48:00.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045281583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.183" endtime="20201117 14:48:00.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045281583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.541" endtime="20201117 14:48:00.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.560" endtime="20201117 14:48:00.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.175" endtime="20201117 14:48:00.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.170" endtime="20201117 14:48:00.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.577" level="INFO">${RESULT} = [{'time': 0.045363736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.215300000000147e-05, 'source_diff': 8.215300000000147e-05}, {'time': 0.045453042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.568" endtime="20201117 14:48:00.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.607" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:00.579" endtime="20201117 14:48:00.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.618" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.616" endtime="20201117 14:48:00.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.625" level="INFO">VALUE: [8.215300000000147e-05, 8.134800000000192e-05, 8.119399999999971e-05, 8.155600000000346e-05, 8.136199999999455e-05, 8.187500000000208e-05, 8.158300000000313e-05, 8.177800000000457e-05, 8.136100000000202e-05, 8.143000000000039e-05, 8.112500000000133e-05, 8.188899999999472e-05, 8.188900000000165e-05, 8.133300000000288e-05, 8.183400000000285e-05, 8.183300000000338e-05, 8.211100000000277e-05, 8.134700000000245e-05, 8.165300000000097e-05, 8.136200000000149e-05, 8.154199999999695e-05, 8.216700000000104e-05, 8.14719999999991e-05, 8.09719999999986e-05, 8.170899999999925e-05, 8.12919999999967e-05, 8.094399999999946e-05, 8.149999999999824e-05, 8.17919999999972e-05, 8.165300000000097e-05, 8.19170000000008e-05, 8.161100000000227e-05, 8.156899999999662e-05, 8.180599999999677e-05, 8.19589999999995e-05, 8.216700000000104e-05, 8.148699999999814e-05, 8.124999999999799e-05, 8.168100000000011e-05, 8.18049999999973e-05, 8.183399999999591e-05, 8.148599999999867e-05, 8.132000000000278e-05, 8.169400000000021e-05, 8.144399999999996e-05, 8.120799999999928e-05, 8.10840000000021e-05, 8.120899999999875e-05, 8.215300000000147e-05, 8.154199999999695e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.621" endtime="20201117 14:48:00.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.609" endtime="20201117 14:48:00.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.635" endtime="20201117 14:48:00.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.643" endtime="20201117 14:48:00.665"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.639" endtime="20201117 14:48:00.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.630" endtime="20201117 14:48:00.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.112" endtime="20201117 14:48:00.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.108" endtime="20201117 14:48:00.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.106" endtime="20201117 14:48:00.670"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.697" endtime="20201117 14:48:00.716"></status>
</kw>
<msg timestamp="20201117 14:48:00.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.693" endtime="20201117 14:48:00.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.720" endtime="20201117 14:48:00.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.726" endtime="20201117 14:48:00.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.686" endtime="20201117 14:48:00.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.680" endtime="20201117 14:48:00.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.749" endtime="20201117 14:48:01.086"></status>
</kw>
<msg timestamp="20201117 14:48:01.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045479903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.746" endtime="20201117 14:48:01.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045479903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.095" endtime="20201117 14:48:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.114" endtime="20201117 14:48:01.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.739" endtime="20201117 14:48:01.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.734" endtime="20201117 14:48:01.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.131" level="INFO">${RESULT} = [{'time': 0.045563861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.395799999999509e-05, 'source_diff': 8.395799999999509e-05}, {'time': 0.045653028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.122" endtime="20201117 14:48:01.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.162" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:01.134" endtime="20201117 14:48:01.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.173" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.171" endtime="20201117 14:48:01.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.180" level="INFO">VALUE: [8.395799999999509e-05, 8.415299999999654e-05, 8.301399999999931e-05, 8.391600000000332e-05, 8.350000000000024e-05, 8.387499999999715e-05, 8.476400000000106e-05, 8.400000000000074e-05, 8.323600000000042e-05, 8.459699999999876e-05, 8.356999999999809e-05, 8.340299999999579e-05, 8.354099999999948e-05, 8.372300000000082e-05, 8.370799999999484e-05, 8.393100000000236e-05, 8.301399999999931e-05, 8.476400000000106e-05, 8.39170000000028e-05, 8.319499999999425e-05, 8.390200000000375e-05, 8.426400000000056e-05, 8.379099999999973e-05, 8.327699999999966e-05, 8.31669999999951e-05, 8.372200000000135e-05, 8.390300000000323e-05, 8.319399999999477e-05, 8.376400000000006e-05, 8.380599999999877e-05, 8.450000000000124e-05, 8.46249999999979e-05, 8.31249999999964e-05, 8.361099999999733e-05, 8.302799999999888e-05, 8.355599999999852e-05, 8.38049999999993e-05, 8.441600000000382e-05, 8.315300000000247e-05, 8.344400000000196e-05, 8.356899999999862e-05, 8.324999999999999e-05, 8.3944999999995e-05, 8.395800000000203e-05, 8.361099999999733e-05, 8.252799999999838e-05, 8.423600000000142e-05, 8.322199999999391e-05, 8.36669999999956e-05, 8.337500000000359e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.176" endtime="20201117 14:48:01.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.164" endtime="20201117 14:48:01.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.189" endtime="20201117 14:48:01.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.197" endtime="20201117 14:48:01.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.193" endtime="20201117 14:48:01.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.185" endtime="20201117 14:48:01.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.676" endtime="20201117 14:48:01.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.672" endtime="20201117 14:48:01.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.671" endtime="20201117 14:48:01.224"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.230" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.252" endtime="20201117 14:48:01.270"></status>
</kw>
<msg timestamp="20201117 14:48:01.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.249" endtime="20201117 14:48:01.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.274" endtime="20201117 14:48:01.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.280" endtime="20201117 14:48:01.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.242" endtime="20201117 14:48:01.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.236" endtime="20201117 14:48:01.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.303" endtime="20201117 14:48:01.649"></status>
</kw>
<msg timestamp="20201117 14:48:01.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046807681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.300" endtime="20201117 14:48:01.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046722319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046807681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.659" endtime="20201117 14:48:01.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.678" endtime="20201117 14:48:01.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.293" endtime="20201117 14:48:01.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.288" endtime="20201117 14:48:01.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.695" level="INFO">${RESULT} = [{'time': 0.046807681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.536199999999855e-05, 'source_diff': 8.536199999999855e-05}, {'time': 0.046902778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.686" endtime="20201117 14:48:01.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.728" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:01.697" endtime="20201117 14:48:01.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.739" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.736" endtime="20201117 14:48:01.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.745" level="INFO">VALUE: [8.536199999999855e-05, 8.537499999999865e-05, 8.418100000000261e-05, 8.438899999999722e-05, 8.481899999999987e-05, 8.492999999999695e-05, 8.447300000000157e-05, 8.429100000000023e-05, 8.4846999999999e-05, 8.465199999999756e-05, 8.39590000000015e-05, 8.440299999999679e-05, 8.451399999999387e-05, 8.41799999999962e-05, 8.459699999999876e-05, 8.536199999999855e-05, 8.486099999999858e-05, 8.469399999999627e-05, 8.41390000000039e-05, 8.573599999999598e-05, 8.425000000000099e-05, 8.405499999999955e-05, 8.468099999999618e-05, 8.402799999999988e-05, 8.488900000000466e-05, 8.426300000000109e-05, 8.422200000000185e-05, 8.418100000000261e-05, 8.395799999999509e-05, 8.4846999999999e-05, 8.423599999999448e-05, 8.445800000000253e-05, 8.405599999999902e-05, 8.577800000000163e-05, 8.511100000000577e-05, 8.395800000000203e-05, 8.483299999999944e-05, 8.476300000000159e-05, 8.443099999999593e-05, 8.420799999999534e-05, 8.445800000000253e-05, 8.458300000000613e-05, 8.461099999999833e-05, 8.395800000000203e-05, 8.42919999999997e-05, 8.4152000000004e-05, 8.487499999999815e-05, 8.413899999999697e-05, 8.456899999999962e-05, 8.440300000000373e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.741" endtime="20201117 14:48:01.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.730" endtime="20201117 14:48:01.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.754" endtime="20201117 14:48:01.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.762" endtime="20201117 14:48:01.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.758" endtime="20201117 14:48:01.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.750" endtime="20201117 14:48:01.787"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.232" endtime="20201117 14:48:01.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.227" endtime="20201117 14:48:01.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.225" endtime="20201117 14:48:01.789"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.794" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.815" endtime="20201117 14:48:01.834"></status>
</kw>
<msg timestamp="20201117 14:48:01.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.812" endtime="20201117 14:48:01.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.837" endtime="20201117 14:48:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.843" endtime="20201117 14:48:01.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.805" endtime="20201117 14:48:01.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.799" endtime="20201117 14:48:01.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.867" endtime="20201117 14:48:02.201"></status>
</kw>
<msg timestamp="20201117 14:48:02.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044897778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044983611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.863" endtime="20201117 14:48:02.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044897778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044983611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.211" endtime="20201117 14:48:02.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.230" endtime="20201117 14:48:02.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.856" endtime="20201117 14:48:02.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.851" endtime="20201117 14:48:02.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.248" level="INFO">${RESULT} = [{'time': 0.044983611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583300000000044e-05, 'source_diff': 8.583300000000044e-05}, {'time': 0.045076792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.239" endtime="20201117 14:48:02.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.279" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:02.250" endtime="20201117 14:48:02.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.290" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.288" endtime="20201117 14:48:02.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.296" level="INFO">VALUE: [8.583300000000044e-05, 8.577799999999469e-05, 8.590299999999829e-05, 8.538899999999822e-05, 8.53469999999995e-05, 8.683300000000144e-05, 8.648599999999673e-05, 8.590300000000523e-05, 8.505600000000002e-05, 8.656900000000162e-05, 8.580499999999436e-05, 8.651399999999587e-05, 8.513899999999797e-05, 8.54449999999965e-05, 8.623600000000342e-05, 8.618000000000514e-05, 8.520899999999582e-05, 8.558300000000019e-05, 8.520800000000328e-05, 8.594399999999752e-05, 8.511100000000577e-05, 8.544399999999702e-05, 8.558300000000019e-05, 8.601399999999537e-05, 8.529100000000123e-05, 8.657000000000109e-05, 8.540300000000473e-05, 8.523599999999548e-05, 8.555599999999358e-05, 8.559699999999976e-05, 8.516599999999763e-05, 8.559799999999923e-05, 8.540299999999779e-05, 8.504200000000045e-05, 8.5944999999997e-05, 8.557000000000009e-05, 8.526400000000156e-05, 8.586100000000652e-05, 8.58050000000013e-05, 8.540299999999779e-05, 8.531999999999984e-05, 8.583399999999991e-05, 8.555600000000052e-05, 8.513899999999797e-05, 8.697300000000407e-05, 8.551399999999487e-05, 8.558300000000019e-05, 8.536099999999908e-05, 8.559699999999976e-05, 8.5847e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.292" endtime="20201117 14:48:02.297"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.281" endtime="20201117 14:48:02.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.305" endtime="20201117 14:48:02.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.314" endtime="20201117 14:48:02.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.309" endtime="20201117 14:48:02.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.301" endtime="20201117 14:48:02.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.795" endtime="20201117 14:48:02.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.791" endtime="20201117 14:48:02.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.790" endtime="20201117 14:48:02.340"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.367" endtime="20201117 14:48:02.385"></status>
</kw>
<msg timestamp="20201117 14:48:02.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.364" endtime="20201117 14:48:02.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.388" endtime="20201117 14:48:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.395" endtime="20201117 14:48:02.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.356" endtime="20201117 14:48:02.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.351" endtime="20201117 14:48:02.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.419" endtime="20201117 14:48:02.751"></status>
</kw>
<msg timestamp="20201117 14:48:02.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045155083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045241319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.415" endtime="20201117 14:48:02.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045155083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045241319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.761" endtime="20201117 14:48:02.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.779" endtime="20201117 14:48:02.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.408" endtime="20201117 14:48:02.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.404" endtime="20201117 14:48:02.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.796" level="INFO">${RESULT} = [{'time': 0.045241319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.623600000000342e-05, 'source_diff': 8.623600000000342e-05}, {'time': 0.045335583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:02.788" endtime="20201117 14:48:02.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.827" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:02.799" endtime="20201117 14:48:02.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.838" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.835" endtime="20201117 14:48:02.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.844" level="INFO">VALUE: [8.623600000000342e-05, 8.694399999999852e-05, 8.740299999999979e-05, 8.611099999999983e-05, 8.643099999999793e-05, 8.62920000000017e-05, 8.61249999999994e-05, 8.672200000000435e-05, 8.637499999999965e-05, 8.663899999999947e-05, 8.765300000000004e-05, 8.625000000000299e-05, 8.788900000000072e-05, 8.613799999999949e-05, 8.659700000000076e-05, 8.638899999999922e-05, 8.647299999999664e-05, 8.661100000000033e-05, 8.679199999999526e-05, 8.665299999999904e-05, 8.613799999999949e-05, 8.622200000000385e-05, 8.645899999999707e-05, 8.645799999999759e-05, 8.626400000000256e-05, 8.638799999999974e-05, 8.615300000000548e-05, 8.627799999999519e-05, 8.642999999999845e-05, 8.619400000000471e-05, 8.648600000000367e-05, 8.686100000000058e-05, 8.694400000000546e-05, 8.670799999999784e-05, 8.701400000000331e-05, 8.681900000000187e-05, 8.705599999999508e-05, 8.665299999999904e-05, 8.609700000000026e-05, 8.657000000000109e-05, 8.740200000000031e-05, 8.640199999999931e-05, 8.633300000000094e-05, 8.704199999999551e-05, 8.64999999999963e-05, 8.61249999999994e-05, 8.651400000000281e-05, 8.627699999999572e-05, 8.698600000000417e-05, 8.611099999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.840" endtime="20201117 14:48:02.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.829" endtime="20201117 14:48:02.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.853" endtime="20201117 14:48:02.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.862" endtime="20201117 14:48:02.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.857" endtime="20201117 14:48:02.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.849" endtime="20201117 14:48:02.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.347" endtime="20201117 14:48:02.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.343" endtime="20201117 14:48:02.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.341" endtime="20201117 14:48:02.888"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.923" endtime="20201117 14:48:02.941"></status>
</kw>
<msg timestamp="20201117 14:48:02.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.919" endtime="20201117 14:48:02.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.944" endtime="20201117 14:48:02.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.951" endtime="20201117 14:48:02.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.904" endtime="20201117 14:48:02.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.899" endtime="20201117 14:48:02.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.974" endtime="20201117 14:48:03.307"></status>
</kw>
<msg timestamp="20201117 14:48:03.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053018194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.971" endtime="20201117 14:48:03.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052930611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053018194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.316" endtime="20201117 14:48:03.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.335" endtime="20201117 14:48:03.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.963" endtime="20201117 14:48:03.340"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.959" endtime="20201117 14:48:03.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.352" level="INFO">${RESULT} = [{'time': 0.053018194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.758299999999525e-05, 'source_diff': 8.758299999999525e-05}, {'time': 0.053116458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.343" endtime="20201117 14:48:03.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:03.354" endtime="20201117 14:48:03.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.393" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.391" endtime="20201117 14:48:03.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.400" level="INFO">VALUE: [8.758299999999525e-05, 8.780499999999636e-05, 8.741599999999988e-05, 8.732000000000184e-05, 8.781900000000287e-05, 8.795800000000603e-05, 8.706900000000212e-05, 8.851399999999787e-05, 8.790300000000029e-05, 8.71669999999991e-05, 8.720799999999834e-05, 8.793099999999943e-05, 8.708300000000169e-05, 8.78050000000033e-05, 8.881900000000387e-05, 8.776399999999712e-05, 8.784700000000201e-05, 8.783300000000244e-05, 8.768099999999918e-05, 8.748599999999773e-05, 8.751399999999687e-05, 8.734800000000098e-05, 8.784700000000201e-05, 8.733400000000141e-05, 8.713899999999997e-05, 8.719400000000571e-05, 8.777800000000363e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.759800000000123e-05, 8.751400000000381e-05, 8.748600000000467e-05, 8.757000000000209e-05, 8.723699999999696e-05, 8.865300000000104e-05, 8.724999999999705e-05, 8.719499999999825e-05, 8.784700000000201e-05, 8.779199999999626e-05, 8.78329999999955e-05, 8.76250000000009e-05, 8.798700000000464e-05, 8.794399999999952e-05, 8.765300000000004e-05, 8.776399999999712e-05, 8.69720000000046e-05, 8.715299999999954e-05, 8.73470000000015e-05, 8.71799999999992e-05, 8.795799999999909e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.396" endtime="20201117 14:48:03.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.384" endtime="20201117 14:48:03.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.409" endtime="20201117 14:48:03.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.417" endtime="20201117 14:48:03.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.413" endtime="20201117 14:48:03.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.404" endtime="20201117 14:48:03.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.895" endtime="20201117 14:48:03.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.891" endtime="20201117 14:48:03.444"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.889" endtime="20201117 14:48:03.444"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.450" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.471" endtime="20201117 14:48:03.490"></status>
</kw>
<msg timestamp="20201117 14:48:03.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.468" endtime="20201117 14:48:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.493" endtime="20201117 14:48:03.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.499" endtime="20201117 14:48:03.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.461" endtime="20201117 14:48:03.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.455" endtime="20201117 14:48:03.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.522" endtime="20201117 14:48:03.856"></status>
</kw>
<msg timestamp="20201117 14:48:03.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046077625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:03.519" endtime="20201117 14:48:03.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0459885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046077625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:03.866" endtime="20201117 14:48:03.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.884" endtime="20201117 14:48:03.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.512" endtime="20201117 14:48:03.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.507" endtime="20201117 14:48:03.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.902" level="INFO">${RESULT} = [{'time': 0.046077625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.912499999999546e-05, 'source_diff': 8.912499999999546e-05}, {'time': 0.046171889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.893" endtime="20201117 14:48:03.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.935" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:03.904" endtime="20201117 14:48:03.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.946" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.943" endtime="20201117 14:48:03.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.952" level="INFO">VALUE: [8.912499999999546e-05, 8.951399999999887e-05, 8.984799999999654e-05, 8.96659999999952e-05, 8.979099999999879e-05, 8.934700000000351e-05, 8.945900000000007e-05, 8.980499999999836e-05, 8.972200000000041e-05, 8.929199999999776e-05, 8.929099999999829e-05, 8.905500000000455e-05, 8.986100000000358e-05, 8.929199999999776e-05, 8.908299999999675e-05, 8.998600000000023e-05, 8.927799999999819e-05, 8.987499999999621e-05, 8.924999999999905e-05, 8.958300000000419e-05, 8.98199999999974e-05, 8.941700000000136e-05, 8.96800000000017e-05, 8.905599999999708e-05, 8.970900000000032e-05, 8.904199999999751e-05, 9.015300000000254e-05, 8.956899999999768e-05, 8.993100000000143e-05, 8.958300000000419e-05, 8.9945000000001e-05, 8.970800000000084e-05, 8.895800000000009e-05, 8.973599999999998e-05, 8.991700000000186e-05, 8.956999999999715e-05, 8.955499999999811e-05, 8.977799999999869e-05, 8.895800000000009e-05, 8.913900000000197e-05, 8.916699999999417e-05, 8.976399999999912e-05, 8.920800000000034e-05, 8.918100000000068e-05, 8.965300000000204e-05, 8.934700000000351e-05, 9.051399999999987e-05, 8.974999999999955e-05, 8.970800000000084e-05, 8.957000000000409e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.948" endtime="20201117 14:48:03.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.936" endtime="20201117 14:48:03.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.962" endtime="20201117 14:48:03.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.970" endtime="20201117 14:48:03.992"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.966" endtime="20201117 14:48:03.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.957" endtime="20201117 14:48:03.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.451" endtime="20201117 14:48:03.995"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.447" endtime="20201117 14:48:03.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.445" endtime="20201117 14:48:03.996"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.024" endtime="20201117 14:48:04.042"></status>
</kw>
<msg timestamp="20201117 14:48:04.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.020" endtime="20201117 14:48:04.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.045" endtime="20201117 14:48:04.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.052" endtime="20201117 14:48:04.055"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.013" endtime="20201117 14:48:04.057"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.007" endtime="20201117 14:48:04.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.075" endtime="20201117 14:48:04.410"></status>
</kw>
<msg timestamp="20201117 14:48:04.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045486722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045578583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.072" endtime="20201117 14:48:04.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045486722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045578583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.419" endtime="20201117 14:48:04.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.438" endtime="20201117 14:48:04.442"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.064" endtime="20201117 14:48:04.443"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.060" endtime="20201117 14:48:04.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.455" level="INFO">${RESULT} = [{'time': 0.045578583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.186099999999864e-05, 'source_diff': 9.186099999999864e-05}, {'time': 0.045677861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.446" endtime="20201117 14:48:04.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.485" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:04.457" endtime="20201117 14:48:04.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.496" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.494" endtime="20201117 14:48:04.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.504" level="INFO">VALUE: [9.186099999999864e-05, 9.008299999999775e-05, 9.081899999999893e-05, 9.080599999999883e-05, 9.069500000000175e-05, 9.052799999999944e-05, 9.038899999999628e-05, 9.091700000000286e-05, 9.104199999999951e-05, 9.098699999999377e-05, 9.043000000000245e-05, 9.03050000000058e-05, 9.062499999999696e-05, 9.181899999999993e-05, 9.054199999999901e-05, 9.009699999999732e-05, 9.122200000000191e-05, 9.122200000000191e-05, 9.045800000000159e-05, 9.02920000000057e-05, 9.093100000000243e-05, 9.05000000000003e-05, 9.026399999999962e-05, 9.044499999999456e-05, 9.191699999999692e-05, 9.095799999999515e-05, 9.026399999999962e-05, 9.068099999999524e-05, 9.009700000000426e-05, 9.108299999999875e-05, 9.102799999999994e-05, 9.01800000000022e-05, 9.122200000000191e-05, 9.072200000000141e-05, 9.086100000000458e-05, 9.030599999999833e-05, 9.059700000000476e-05, 9.069500000000175e-05, 9.011099999999689e-05, 9.004199999999851e-05, 9.061099999999739e-05, 9.022200000000091e-05, 9.061099999999739e-05, 9.093100000000243e-05, 9.056900000000562e-05, 9.047200000000116e-05, 9.038899999999628e-05, 9.01529999999956e-05, 9.10000000000008e-05, 9.026399999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.499" endtime="20201117 14:48:04.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.487" endtime="20201117 14:48:04.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.513" endtime="20201117 14:48:04.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.521" endtime="20201117 14:48:04.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.516" endtime="20201117 14:48:04.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.508" endtime="20201117 14:48:04.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.003" endtime="20201117 14:48:04.546"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.999" endtime="20201117 14:48:04.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.997" endtime="20201117 14:48:04.547"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.574" endtime="20201117 14:48:04.592"></status>
</kw>
<msg timestamp="20201117 14:48:04.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.571" endtime="20201117 14:48:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.596" endtime="20201117 14:48:04.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.602" endtime="20201117 14:48:04.606"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.563" endtime="20201117 14:48:04.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.558" endtime="20201117 14:48:04.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.625" endtime="20201117 14:48:04.959"></status>
</kw>
<msg timestamp="20201117 14:48:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044969639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045061486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.622" endtime="20201117 14:48:04.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044969639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045061486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.969" endtime="20201117 14:48:04.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.987" endtime="20201117 14:48:04.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.615" endtime="20201117 14:48:04.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.610" endtime="20201117 14:48:04.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.005" level="INFO">${RESULT} = [{'time': 0.045061486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.184699999999907e-05, 'source_diff': 9.184699999999907e-05}, {'time': 0.045159736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:04.995" endtime="20201117 14:48:05.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:05.007" endtime="20201117 14:48:05.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.047" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.044" endtime="20201117 14:48:05.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.053" level="INFO">VALUE: [9.184699999999907e-05, 9.187499999999821e-05, 9.280500000000136e-05, 9.113899999999703e-05, 9.129199999999976e-05, 9.167999999999676e-05, 9.172199999999547e-05, 9.188899999999778e-05, 9.179200000000026e-05, 9.166699999999667e-05, 9.111199999999736e-05, 9.186099999999864e-05, 9.266700000000461e-05, 9.152800000000044e-05, 9.10000000000008e-05, 9.126400000000062e-05, 9.283399999999997e-05, 9.119500000000225e-05, 9.158299999999925e-05, 9.113899999999703e-05, 9.137499999999771e-05, 9.13199999999989e-05, 9.137499999999771e-05, 9.106999999999865e-05, 9.105599999999908e-05, 9.155599999999958e-05, 9.141699999999642e-05, 9.155500000000011e-05, 9.181899999999993e-05, 9.105499999999961e-05, 9.141599999999694e-05, 9.18329999999995e-05, 9.122199999999497e-05, 9.127800000000019e-05, 9.231899999999349e-05, 9.143100000000293e-05, 9.137499999999771e-05, 9.120900000000182e-05, 9.188900000000472e-05, 9.190299999999735e-05, 9.15000000000013e-05, 9.148600000000173e-05, 9.188899999999778e-05, 9.161099999999839e-05, 9.154200000000001e-05, 9.11250000000044e-05, 9.159700000000576e-05, 9.108399999999822e-05, 9.209699999999932e-05, 9.16250000000049e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.049" endtime="20201117 14:48:05.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.037" endtime="20201117 14:48:05.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.062" endtime="20201117 14:48:05.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.071" endtime="20201117 14:48:05.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.066" endtime="20201117 14:48:05.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.058" endtime="20201117 14:48:05.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.554" endtime="20201117 14:48:05.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.550" endtime="20201117 14:48:05.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.548" endtime="20201117 14:48:05.097"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.124" endtime="20201117 14:48:05.142"></status>
</kw>
<msg timestamp="20201117 14:48:05.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.120" endtime="20201117 14:48:05.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.145" endtime="20201117 14:48:05.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.152" endtime="20201117 14:48:05.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.113" endtime="20201117 14:48:05.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.108" endtime="20201117 14:48:05.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.175" endtime="20201117 14:48:05.509"></status>
</kw>
<msg timestamp="20201117 14:48:05.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044884292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044976694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.172" endtime="20201117 14:48:05.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044884292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044976694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.519" endtime="20201117 14:48:05.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.538" endtime="20201117 14:48:05.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.164" endtime="20201117 14:48:05.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.160" endtime="20201117 14:48:05.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.555" level="INFO">${RESULT} = [{'time': 0.044976694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.240199999999837e-05, 'source_diff': 9.240199999999837e-05}, {'time': 0.045074931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.546" endtime="20201117 14:48:05.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.586" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:05.557" endtime="20201117 14:48:05.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.597" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.594" endtime="20201117 14:48:05.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.603" level="INFO">VALUE: [9.240199999999837e-05, 9.295899999999663e-05, 9.273599999999604e-05, 9.256899999999374e-05, 9.304199999999457e-05, 9.263899999999853e-05, 9.301399999999543e-05, 9.256900000000068e-05, 9.233399999999947e-05, 9.211099999999889e-05, 9.262499999999896e-05, 9.291600000000538e-05, 9.249999999999536e-05, 9.254199999999407e-05, 9.255600000000058e-05, 9.243099999999699e-05, 9.21670000000041e-05, 9.265300000000504e-05, 9.251400000000187e-05, 9.286199999999911e-05, 9.336199999999961e-05, 9.277800000000169e-05, 9.287499999999921e-05, 9.263899999999853e-05, 9.244399999999708e-05, 9.341700000000536e-05, 9.234799999999904e-05, 9.229199999999382e-05, 9.226400000000162e-05, 9.301399999999543e-05, 9.208299999999975e-05, 9.209799999999879e-05, 9.244400000000402e-05, 9.266699999999767e-05, 9.211099999999889e-05, 9.298600000000323e-05, 9.26529999999981e-05, 9.25000000000023e-05, 9.24859999999958e-05, 9.229200000000076e-05, 9.26250000000059e-05, 9.355600000000158e-05, 9.247200000000316e-05, 9.287499999999921e-05, 9.252800000000144e-05, 9.277699999999528e-05, 9.273600000000298e-05, 9.21529999999976e-05, 9.375000000000355e-05, 9.29729999999962e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.599" endtime="20201117 14:48:05.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.588" endtime="20201117 14:48:05.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.612" endtime="20201117 14:48:05.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.621" endtime="20201117 14:48:05.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.616" endtime="20201117 14:48:05.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.608" endtime="20201117 14:48:05.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.104" endtime="20201117 14:48:05.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.100" endtime="20201117 14:48:05.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.098" endtime="20201117 14:48:05.647"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.674" endtime="20201117 14:48:05.692"></status>
</kw>
<msg timestamp="20201117 14:48:05.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.670" endtime="20201117 14:48:05.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.696" endtime="20201117 14:48:05.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.702" endtime="20201117 14:48:05.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.663" endtime="20201117 14:48:05.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.657" endtime="20201117 14:48:05.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.726" endtime="20201117 14:48:06.061"></status>
</kw>
<msg timestamp="20201117 14:48:06.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045154306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.722" endtime="20201117 14:48:06.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045154306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.070" endtime="20201117 14:48:06.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.089" endtime="20201117 14:48:06.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.715" endtime="20201117 14:48:06.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.710" endtime="20201117 14:48:06.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.106" level="INFO">${RESULT} = [{'time': 0.045154306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.386200000000011e-05, 'source_diff': 9.386200000000011e-05}, {'time': 0.045252569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.098" endtime="20201117 14:48:06.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.139" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:06.109" endtime="20201117 14:48:06.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.150" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.148" endtime="20201117 14:48:06.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.157" level="INFO">VALUE: [9.386200000000011e-05, 9.302700000000247e-05, 9.306899999999424e-05, 9.42079999999984e-05, 9.402800000000294e-05, 9.386100000000064e-05, 9.319399999999783e-05, 9.343100000000493e-05, 9.319400000000477e-05, 9.358300000000125e-05, 9.319399999999783e-05, 9.35279999999955e-05, 9.398600000000423e-05, 9.340299999999885e-05, 9.474999999999761e-05, 9.31659999999987e-05, 9.366699999999867e-05, 9.301400000000237e-05, 9.307000000000065e-05, 9.447199999999822e-05, 9.313899999999903e-05, 9.399999999999686e-05, 9.356900000000168e-05, 9.377800000000269e-05, 9.399999999999686e-05, 9.352800000000244e-05, 9.369499999999781e-05, 9.376400000000312e-05, 9.326300000000315e-05, 9.344399999999808e-05, 9.341600000000588e-05, 9.343099999999799e-05, 9.330500000000186e-05, 9.345799999999765e-05, 9.323600000000348e-05, 9.311099999999989e-05, 9.355499999999517e-05, 9.387500000000021e-05, 9.344499999999756e-05, 9.426399999999668e-05, 9.379200000000226e-05, 9.381899999999499e-05, 9.356900000000168e-05, 9.358300000000125e-05, 9.322199999999697e-05, 9.39859999999973e-05, 9.358300000000125e-05, 9.36529999999991e-05, 9.322199999999697e-05, 9.369499999999781e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.152" endtime="20201117 14:48:06.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.141" endtime="20201117 14:48:06.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.166" endtime="20201117 14:48:06.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.174" endtime="20201117 14:48:06.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.169" endtime="20201117 14:48:06.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.161" endtime="20201117 14:48:06.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.653" endtime="20201117 14:48:06.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.650" endtime="20201117 14:48:06.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.648" endtime="20201117 14:48:06.200"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.205" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.227" endtime="20201117 14:48:06.245"></status>
</kw>
<msg timestamp="20201117 14:48:06.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.224" endtime="20201117 14:48:06.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.249" endtime="20201117 14:48:06.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.256" endtime="20201117 14:48:06.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.216" endtime="20201117 14:48:06.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.211" endtime="20201117 14:48:06.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.279" endtime="20201117 14:48:06.614"></status>
</kw>
<msg timestamp="20201117 14:48:06.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.276" endtime="20201117 14:48:06.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044941361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.623" endtime="20201117 14:48:06.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.642" endtime="20201117 14:48:06.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.269" endtime="20201117 14:48:06.647"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.264" endtime="20201117 14:48:06.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.659" level="INFO">${RESULT} = [{'time': 0.045036153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.479200000000326e-05, 'source_diff': 9.479200000000326e-05}, {'time': 0.045141472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.650" endtime="20201117 14:48:06.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.690" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:06.661" endtime="20201117 14:48:06.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.701" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.698" endtime="20201117 14:48:06.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.707" level="INFO">VALUE: [9.479200000000326e-05, 9.4333000000002e-05, 9.459800000000129e-05, 9.45000000000043e-05, 9.555600000000358e-05, 9.486100000000164e-05, 9.545899999999913e-05, 9.483400000000197e-05, 9.459800000000129e-05, 9.559700000000282e-05, 9.486100000000164e-05, 9.402800000000294e-05, 9.447199999999822e-05, 9.41529999999996e-05, 9.445799999999865e-05, 9.444499999999856e-05, 9.495899999999863e-05, 9.422199999999797e-05, 9.466700000000661e-05, 9.433399999999453e-05, 9.468099999999924e-05, 9.429199999999582e-05, 9.420899999999788e-05, 9.444399999999908e-05, 9.445799999999865e-05, 9.477800000000369e-05, 9.456900000000268e-05, 9.452700000000397e-05, 9.445900000000507e-05, 9.454200000000301e-05, 9.444499999999856e-05, 9.487499999999427e-05, 9.433400000000147e-05, 9.415200000000012e-05, 9.493000000000001e-05, 9.545799999999965e-05, 9.4333000000002e-05, 9.405500000000261e-05, 9.408300000000175e-05, 9.480500000000336e-05, 9.420800000000534e-05, 9.473599999999804e-05, 9.483299999999556e-05, 9.426399999999668e-05, 9.406899999999524e-05, 9.530500000000386e-05, 9.408299999999481e-05, 9.39859999999973e-05, 9.454100000000354e-05, 9.562500000000196e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.703" endtime="20201117 14:48:06.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.691" endtime="20201117 14:48:06.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.716" endtime="20201117 14:48:06.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.724" endtime="20201117 14:48:06.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.720" endtime="20201117 14:48:06.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.711" endtime="20201117 14:48:06.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.207" endtime="20201117 14:48:06.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.203" endtime="20201117 14:48:06.750"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.201" endtime="20201117 14:48:06.751"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.756" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.778" endtime="20201117 14:48:06.797"></status>
</kw>
<msg timestamp="20201117 14:48:06.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.775" endtime="20201117 14:48:06.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.800" endtime="20201117 14:48:06.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.806" endtime="20201117 14:48:06.810"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.767" endtime="20201117 14:48:06.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.761" endtime="20201117 14:48:06.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.830" endtime="20201117 14:48:07.162"></status>
</kw>
<msg timestamp="20201117 14:48:07.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045896472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.826" endtime="20201117 14:48:07.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045896472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.171" endtime="20201117 14:48:07.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.190" endtime="20201117 14:48:07.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.819" endtime="20201117 14:48:07.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.814" endtime="20201117 14:48:07.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.207" level="INFO">${RESULT} = [{'time': 0.045991903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.543099999999999e-05, 'source_diff': 9.543099999999999e-05}, {'time': 0.046098208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.198" endtime="20201117 14:48:07.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.238" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:07.209" endtime="20201117 14:48:07.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.249" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.247" endtime="20201117 14:48:07.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.256" level="INFO">VALUE: [9.543099999999999e-05, 9.573599999999904e-05, 9.569400000000033e-05, 9.584699999999613e-05, 9.599999999999886e-05, 9.576399999999818e-05, 9.576299999999871e-05, 9.551400000000487e-05, 9.559699999999588e-05, 9.591700000000092e-05, 9.511100000000189e-05, 9.595800000000015e-05, 9.557000000000315e-05, 9.537500000000171e-05, 9.686100000000364e-05, 9.581999999999646e-05, 9.680499999999842e-05, 9.52079999999994e-05, 9.56660000000012e-05, 9.506899999999624e-05, 9.518000000000026e-05, 9.544499999999956e-05, 9.593100000000049e-05, 9.587499999999527e-05, 9.613900000000203e-05, 9.56530000000011e-05, 9.595800000000015e-05, 9.572199999999947e-05, 9.549999999999836e-05, 9.65409999999986e-05, 9.622199999999997e-05, 9.513900000000103e-05, 9.573699999999852e-05, 9.572299999999895e-05, 9.569499999999981e-05, 9.537500000000171e-05, 9.53200000000029e-05, 9.536100000000214e-05, 9.559700000000282e-05, 9.569499999999981e-05, 9.559699999999588e-05, 9.580499999999742e-05, 9.594500000000006e-05, 9.51530000000006e-05, 9.545899999999913e-05, 9.6027999999998e-05, 9.604100000000504e-05, 9.559699999999588e-05, 9.523599999999854e-05, 9.669400000000133e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.251" endtime="20201117 14:48:07.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.240" endtime="20201117 14:48:07.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.265" endtime="20201117 14:48:07.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.273" endtime="20201117 14:48:07.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.269" endtime="20201117 14:48:07.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.260" endtime="20201117 14:48:07.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.757" endtime="20201117 14:48:07.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.753" endtime="20201117 14:48:07.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.751" endtime="20201117 14:48:07.300"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.327" endtime="20201117 14:48:07.345"></status>
</kw>
<msg timestamp="20201117 14:48:07.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.323" endtime="20201117 14:48:07.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.349" endtime="20201117 14:48:07.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.355" endtime="20201117 14:48:07.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.316" endtime="20201117 14:48:07.360"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.310" endtime="20201117 14:48:07.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.378" endtime="20201117 14:48:07.712"></status>
</kw>
<msg timestamp="20201117 14:48:07.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045748653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045844944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.375" endtime="20201117 14:48:07.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045748653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045844944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.722" endtime="20201117 14:48:07.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.740" endtime="20201117 14:48:07.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.368" endtime="20201117 14:48:07.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.363" endtime="20201117 14:48:07.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.758" level="INFO">${RESULT} = [{'time': 0.045844944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.629099999999835e-05, 'source_diff': 9.629099999999835e-05}, {'time': 0.045951222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.749" endtime="20201117 14:48:07.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:07.760" endtime="20201117 14:48:07.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.799" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.797" endtime="20201117 14:48:07.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.806" level="INFO">VALUE: [9.629099999999835e-05, 9.740300000000285e-05, 9.638899999999534e-05, 9.637499999999577e-05, 9.68609999999967e-05, 9.68609999999967e-05, 9.61660000000017e-05, 9.609699999999638e-05, 9.672299999999995e-05, 9.65279999999985e-05, 9.72080000000014e-05, 9.709800000000379e-05, 9.688799999999637e-05, 9.704200000000551e-05, 9.68059999999979e-05, 9.617999999999433e-05, 9.638900000000228e-05, 9.699999999999986e-05, 9.741699999999548e-05, 9.684699999999713e-05, 9.672200000000047e-05, 9.674999999999961e-05, 9.626299999999921e-05, 9.658299999999731e-05, 9.649999999999936e-05, 9.636200000000261e-05, 9.629099999999835e-05, 9.624999999999911e-05, 9.681899999999799e-05, 9.701399999999943e-05, 9.619500000000031e-05, 9.701399999999943e-05, 9.672200000000047e-05, 9.674999999999961e-05, 9.619500000000031e-05, 9.643000000000151e-05, 9.699999999999986e-05, 9.64729999999997e-05, 9.694399999999465e-05, 9.673600000000004e-05, 9.631899999999749e-05, 9.704199999999857e-05, 9.79860000000013e-05, 9.78330000000055e-05, 9.655499999999817e-05, 9.654199999999807e-05, 9.616599999999476e-05, 9.680499999999842e-05, 9.616700000000117e-05, 9.657000000000415e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.801" endtime="20201117 14:48:07.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.790" endtime="20201117 14:48:07.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.815" endtime="20201117 14:48:07.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.824" endtime="20201117 14:48:07.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.819" endtime="20201117 14:48:07.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.811" endtime="20201117 14:48:07.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.306" endtime="20201117 14:48:07.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.303" endtime="20201117 14:48:07.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.301" endtime="20201117 14:48:07.850"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.877" endtime="20201117 14:48:07.895"></status>
</kw>
<msg timestamp="20201117 14:48:07.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.873" endtime="20201117 14:48:07.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.899" endtime="20201117 14:48:07.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.905" endtime="20201117 14:48:07.909"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.866" endtime="20201117 14:48:07.910"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.860" endtime="20201117 14:48:07.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.928" endtime="20201117 14:48:08.262"></status>
</kw>
<msg timestamp="20201117 14:48:08.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045258528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.925" endtime="20201117 14:48:08.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045161139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045258528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.271" endtime="20201117 14:48:08.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.290" endtime="20201117 14:48:08.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.918" endtime="20201117 14:48:08.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.913" endtime="20201117 14:48:08.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.307" level="INFO">${RESULT} = [{'time': 0.045258528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.738899999999634e-05, 'source_diff': 9.738899999999634e-05}, {'time': 0.045363639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.298" endtime="20201117 14:48:08.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.340" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:08.309" endtime="20201117 14:48:08.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.351" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.349" endtime="20201117 14:48:08.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.358" level="INFO">VALUE: [9.738899999999634e-05, 9.695799999999422e-05, 9.718000000000226e-05, 9.711100000000389e-05, 9.790299999999641e-05, 9.722200000000097e-05, 9.727800000000619e-05, 9.745800000000165e-05, 9.755599999999864e-05, 9.780499999999942e-05, 9.750000000000036e-05, 9.76660000000032e-05, 9.750000000000036e-05, 9.712499999999652e-05, 9.797200000000172e-05, 9.779199999999932e-05, 9.718000000000226e-05, 9.754200000000601e-05, 9.772200000000147e-05, 9.795800000000215e-05, 9.798599999999436e-05, 9.769500000000181e-05, 9.781899999999899e-05, 9.71530000000026e-05, 9.78059999999989e-05, 9.744500000000156e-05, 9.738799999999687e-05, 9.71809999999948e-05, 9.749999999999343e-05, 9.750000000000036e-05, 9.71530000000026e-05, 9.809700000000532e-05, 9.806999999999871e-05, 9.750000000000036e-05, 9.88059999999999e-05, 9.84860000000018e-05, 9.795900000000163e-05, 9.788900000000378e-05, 9.744500000000156e-05, 9.754199999999907e-05, 9.776400000000018e-05, 9.744400000000208e-05, 9.811100000000489e-05, 9.79860000000013e-05, 9.861099999999845e-05, 9.718100000000174e-05, 9.809699999999838e-05, 9.738899999999634e-05, 9.847200000000222e-05, 9.727800000000619e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.353" endtime="20201117 14:48:08.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.342" endtime="20201117 14:48:08.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.367" endtime="20201117 14:48:08.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.375" endtime="20201117 14:48:08.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.371" endtime="20201117 14:48:08.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.363" endtime="20201117 14:48:08.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.856" endtime="20201117 14:48:08.401"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.853" endtime="20201117 14:48:08.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.851" endtime="20201117 14:48:08.402"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.429" endtime="20201117 14:48:08.448"></status>
</kw>
<msg timestamp="20201117 14:48:08.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.425" endtime="20201117 14:48:08.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.451" endtime="20201117 14:48:08.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.458" endtime="20201117 14:48:08.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.418" endtime="20201117 14:48:08.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.412" endtime="20201117 14:48:08.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.482" endtime="20201117 14:48:08.816"></status>
</kw>
<msg timestamp="20201117 14:48:08.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045127625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045226319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.479" endtime="20201117 14:48:08.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045127625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045226319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.825" endtime="20201117 14:48:08.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.844" endtime="20201117 14:48:08.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.471" endtime="20201117 14:48:08.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.466" endtime="20201117 14:48:08.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.862" level="INFO">${RESULT} = [{'time': 0.045226319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.869400000000333e-05, 'source_diff': 9.869400000000333e-05}, {'time': 0.045330653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.853" endtime="20201117 14:48:08.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.892" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:08.864" endtime="20201117 14:48:08.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.903" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.901" endtime="20201117 14:48:08.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.910" level="INFO">VALUE: [9.869400000000333e-05, 9.876400000000118e-05, 9.86530000000041e-05, 9.859699999999888e-05, 9.801400000000043e-05, 9.822200000000197e-05, 9.81660000000037e-05, 9.847200000000222e-05, 9.808299999999881e-05, 9.854200000000007e-05, 9.944499999999662e-05, 9.961100000000639e-05, 9.872199999999554e-05, 9.806999999999871e-05, 9.905499999999373e-05, 9.891699999999698e-05, 9.838899999999734e-05, 9.85280000000005e-05, 9.85280000000005e-05, 9.981999999999353e-05, 9.901400000000143e-05, 9.817999999999633e-05, 9.849999999999443e-05, 9.837500000000471e-05, 9.861099999999845e-05, 9.872200000000247e-05, 9.87080000000029e-05, 9.876400000000118e-05, 9.805499999999967e-05, 9.863900000000453e-05, 9.870799999999597e-05, 9.845800000000265e-05, 9.818100000000274e-05, 9.829100000000035e-05, 9.868000000000376e-05, 9.983300000000056e-05, 9.906999999999971e-05, 9.83609999999982e-05, 9.877800000000075e-05, 9.843099999999605e-05, 9.900000000000186e-05, 9.818100000000274e-05, 9.79860000000013e-05, 9.808299999999881e-05, 9.976400000000218e-05, 9.877800000000075e-05, 9.834699999999863e-05, 9.819500000000231e-05, 9.887500000000521e-05, 9.916699999999723e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.906" endtime="20201117 14:48:08.911"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.894" endtime="20201117 14:48:08.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.919" endtime="20201117 14:48:08.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.927" endtime="20201117 14:48:08.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.923" endtime="20201117 14:48:08.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.914" endtime="20201117 14:48:08.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.408" endtime="20201117 14:48:08.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.404" endtime="20201117 14:48:08.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.403" endtime="20201117 14:48:08.954"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.980" endtime="20201117 14:48:08.999"></status>
</kw>
<msg timestamp="20201117 14:48:09.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.977" endtime="20201117 14:48:09.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.003" endtime="20201117 14:48:09.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.009" endtime="20201117 14:48:09.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.970" endtime="20201117 14:48:09.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.964" endtime="20201117 14:48:09.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.032" endtime="20201117 14:48:09.365"></status>
</kw>
<msg timestamp="20201117 14:48:09.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045115694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045215472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.029" endtime="20201117 14:48:09.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045115694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045215472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.375" endtime="20201117 14:48:09.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.394" endtime="20201117 14:48:09.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.022" endtime="20201117 14:48:09.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.017" endtime="20201117 14:48:09.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.411" level="INFO">${RESULT} = [{'time': 0.045215472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.977800000000175e-05, 'source_diff': 9.977800000000175e-05}, {'time': 0.045323736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:09.402" endtime="20201117 14:48:09.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.442" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:09.413" endtime="20201117 14:48:09.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.453" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.450" endtime="20201117 14:48:09.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.459" level="INFO">VALUE: [9.977800000000175e-05, 9.918000000000426e-05, 9.900000000000186e-05, 9.905499999999373e-05, 9.9028000000001e-05, 9.912499999999852e-05, 9.947200000000322e-05, 9.977800000000175e-05, 9.908299999999981e-05, 9.943100000000399e-05, 9.990299999999841e-05, 9.922300000000245e-05, 9.951400000000193e-05, 9.979199999999439e-05, 9.905600000000014e-05, 9.9028000000001e-05, 9.929200000000082e-05, 9.950000000000236e-05, 9.945799999999672e-05, 0.00010083300000000156, 9.938900000000528e-05, 9.947199999999629e-05, 9.945800000000365e-05, 9.938899999999834e-05, 9.957000000000021e-05, 9.957000000000021e-05, 9.944400000000408e-05, 9.962499999999902e-05, 9.931999999999996e-05, 9.98060000000009e-05, 9.962499999999902e-05, 9.922200000000297e-05, 9.894399999999665e-05, 9.96530000000051e-05, 9.983400000000003e-05, 9.944399999999715e-05, 9.955500000000117e-05, 9.9415999999998e-05, 9.990299999999841e-05, 9.976399999999525e-05, 9.9028000000001e-05, 9.93060000000004e-05, 9.947299999999576e-05, 9.959799999999935e-05, 9.90410000000011e-05, 9.96939999999974e-05, 9.920899999999594e-05, 9.926400000000168e-05, 9.958300000000031e-05, 9.994500000000406e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.455" endtime="20201117 14:48:09.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.444" endtime="20201117 14:48:09.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.468" endtime="20201117 14:48:09.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.477" endtime="20201117 14:48:09.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.473" endtime="20201117 14:48:09.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.464" endtime="20201117 14:48:09.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.960" endtime="20201117 14:48:09.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.956" endtime="20201117 14:48:09.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.954" endtime="20201117 14:48:09.504"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.510" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.531" endtime="20201117 14:48:09.550"></status>
</kw>
<msg timestamp="20201117 14:48:09.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.528" endtime="20201117 14:48:09.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.554" endtime="20201117 14:48:09.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.560" endtime="20201117 14:48:09.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.521" endtime="20201117 14:48:09.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.515" endtime="20201117 14:48:09.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.584" endtime="20201117 14:48:09.917"></status>
</kw>
<msg timestamp="20201117 14:48:09.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045704431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045804806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.580" endtime="20201117 14:48:09.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045704431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045804806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.926" endtime="20201117 14:48:09.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.944" endtime="20201117 14:48:09.948"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.573" endtime="20201117 14:48:09.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.568" endtime="20201117 14:48:09.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.962" level="INFO">${RESULT} = [{'time': 0.045804806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010037500000000671, 'source_diff': 0.00010037500000000671}, {'time': 0.045915111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.953" endtime="20201117 14:48:09.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:09.964" endtime="20201117 14:48:09.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.002" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.000" endtime="20201117 14:48:10.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.009" level="INFO">VALUE: [0.00010037500000000671, 0.0001015280000000035, 0.00010040300000000585, 0.00010045799999999772, 0.00010009799999999985, 0.00010026300000000321, 0.00010061100000000045, 0.00010065299999999916, 0.00010184700000000213, 0.0001003610000000002, 0.00010097200000000472, 0.00010012500000000646, 0.00010084699999999419, 0.00010038899999999934, 0.00010044399999999815, 0.00010017999999999833, 0.00010007000000000071, 0.00010040299999999891, 0.00010037499999999977, 0.00010063899999999959, 0.00010062500000000002, 0.00010004200000000157, 0.00010065299999999916, 0.0001003060000000014, 0.00010031899999999455, 0.00010058400000000078, 0.0001014860000000048, 0.000100513999999996, 0.00010027799999999532, 0.00010118000000000626, 0.00010027800000000225, 0.00010063800000000012, 0.00010165200000000069, 0.00010026400000000268, 0.0001006939999999984, 0.00010056900000000174, 0.00010043100000000499, 0.00010072300000000395, 0.00010092999999999908, 0.00010012499999999952, 0.00010009700000000038, 0.00010079199999999539, 0.00010079200000000232, 0.00010047199999999729, 0.00010030500000000192, 0.00010074999999999668, 0.00010098599999999736, 0.00010090299999999941, 0.00010101400000000343, 0.00010029200000000182]</msg>
<status status="PASS" starttime="20201117 14:48:10.005" endtime="20201117 14:48:10.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.993" endtime="20201117 14:48:10.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.018" endtime="20201117 14:48:10.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.026" endtime="20201117 14:48:10.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.022" endtime="20201117 14:48:10.049"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.013" endtime="20201117 14:48:10.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.511" endtime="20201117 14:48:10.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.507" endtime="20201117 14:48:10.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.505" endtime="20201117 14:48:10.052"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.079" endtime="20201117 14:48:10.100"></status>
</kw>
<msg timestamp="20201117 14:48:10.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.076" endtime="20201117 14:48:10.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.103" endtime="20201117 14:48:10.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.110" endtime="20201117 14:48:10.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.069" endtime="20201117 14:48:10.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.063" endtime="20201117 14:48:10.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.133" endtime="20201117 14:48:10.479"></status>
</kw>
<msg timestamp="20201117 14:48:10.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045069472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.130" endtime="20201117 14:48:10.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045069472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.488" endtime="20201117 14:48:10.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.506" endtime="20201117 14:48:10.511"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.123" endtime="20201117 14:48:10.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.118" endtime="20201117 14:48:10.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.524" level="INFO">${RESULT} = [{'time': 0.045170847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010137500000000077, 'source_diff': 0.00010137500000000077}, {'time': 0.045279097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.515" endtime="20201117 14:48:10.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:10.526" endtime="20201117 14:48:10.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.568" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.566" endtime="20201117 14:48:10.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.575" level="INFO">VALUE: [0.00010137500000000077, 0.00010166600000000026, 0.00010113900000000009, 0.00010184700000000213, 0.00010155500000000317, 0.00010141699999999948, 0.00010182000000000246, 0.00010149999999999743, 0.00010187500000000127, 0.00010131999999999503, 0.00010195799999999922, 0.00010147299999999776, 0.00010161100000000145, 0.00010140200000000044, 0.00010108300000000181, 0.00010287500000000227, 0.00010142999999999958, 0.00010184700000000213, 0.00010112500000000052, 0.00010197199999999879, 0.000101416, 0.00010126399999999675, 0.00010125000000000411, 0.00010177799999999682, 0.00010127799999999632, 0.0001013610000000012, 0.00010293000000000108, 0.00010111100000000095, 0.00010186099999999476, 0.00010116699999999923, 0.00010141699999999948, 0.00010149999999999743, 0.0001011939999999989, 0.00010159700000000188, 0.00010142999999999958, 0.00010177800000000375, 0.00010163900000000059, 0.00010151400000000393, 0.00010190300000000041, 0.00010266600000000126, 0.00010174999999999768, 0.00010166699999999973, 0.00010201400000000443, 0.00010159700000000188, 0.00010184700000000213, 0.00010194499999999912, 0.0001019860000000053, 0.00010167999999999983, 0.00010106900000000224, 0.00010151400000000393]</msg>
<status status="PASS" starttime="20201117 14:48:10.570" endtime="20201117 14:48:10.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.559" endtime="20201117 14:48:10.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.584" endtime="20201117 14:48:10.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.592" endtime="20201117 14:48:10.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.588" endtime="20201117 14:48:10.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.579" endtime="20201117 14:48:10.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.059" endtime="20201117 14:48:10.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.055" endtime="20201117 14:48:10.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.053" endtime="20201117 14:48:10.619"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.646" endtime="20201117 14:48:10.665"></status>
</kw>
<msg timestamp="20201117 14:48:10.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.643" endtime="20201117 14:48:10.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.669" endtime="20201117 14:48:10.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.675" endtime="20201117 14:48:10.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.636" endtime="20201117 14:48:10.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.629" endtime="20201117 14:48:10.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.698" endtime="20201117 14:48:11.033"></status>
</kw>
<msg timestamp="20201117 14:48:11.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046080917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046183569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.695" endtime="20201117 14:48:11.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046080917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046183569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.042" endtime="20201117 14:48:11.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.060" endtime="20201117 14:48:11.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.687" endtime="20201117 14:48:11.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.683" endtime="20201117 14:48:11.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.077" level="INFO">${RESULT} = [{'time': 0.046183569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010265200000000169, 'source_diff': 0.00010265200000000169}, {'time': 0.046290819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.068" endtime="20201117 14:48:11.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.107" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:11.079" endtime="20201117 14:48:11.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.118" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.116" endtime="20201117 14:48:11.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.124" level="INFO">VALUE: [0.00010265200000000169, 0.00010274999999999868, 0.00010266700000000073, 0.00010323700000000602, 0.00010230499999999698, 0.00010237500000000177, 0.00010252799999999757, 0.00010320800000000047, 0.00010259699999999594, 0.00010273700000000552, 0.00010295899999999969, 0.00010277800000000475, 0.00010270899999999944, 0.00010249999999999843, 0.00010224999999999818, 0.0001023889999999944, 0.00010272199999999954, 0.00010280599999999696, 0.00010270799999999997, 0.00010276399999999825, 0.00010212500000000152, 0.00010240300000000091, 0.0001021809999999998, 0.00010293000000000108, 0.00010212500000000152, 0.00010283299999999662, 0.00010262500000000202, 0.00010237500000000177, 0.00010249999999999843, 0.00010261100000000245, 0.00010288900000000184, 0.00010383299999999762, 0.00010245799999999972, 0.0001026810000000003, 0.0001024860000000058, 0.00010240300000000091, 0.00010237499999999483, 0.00010294500000000012, 0.00010326399999999875, 0.000103513999999999, 0.0001021809999999998, 0.00010229099999999741, 0.00010259800000000235, 0.00010283299999999662, 0.000102513999999998, 0.00010229199999999689, 0.00010257000000000321, 0.00010249999999999843, 0.00010243100000000005, 0.00010279199999999739]</msg>
<status status="PASS" starttime="20201117 14:48:11.120" endtime="20201117 14:48:11.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.109" endtime="20201117 14:48:11.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.133" endtime="20201117 14:48:11.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.141" endtime="20201117 14:48:11.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.137" endtime="20201117 14:48:11.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.129" endtime="20201117 14:48:11.167"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.625" endtime="20201117 14:48:11.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.621" endtime="20201117 14:48:11.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.619" endtime="20201117 14:48:11.169"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.195" endtime="20201117 14:48:11.214"></status>
</kw>
<msg timestamp="20201117 14:48:11.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.192" endtime="20201117 14:48:11.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.218" endtime="20201117 14:48:11.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.224" endtime="20201117 14:48:11.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.185" endtime="20201117 14:48:11.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.179" endtime="20201117 14:48:11.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.247" endtime="20201117 14:48:11.581"></status>
</kw>
<msg timestamp="20201117 14:48:11.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045094694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.244" endtime="20201117 14:48:11.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045094694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.590" endtime="20201117 14:48:11.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.608" endtime="20201117 14:48:11.612"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.237" endtime="20201117 14:48:11.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.232" endtime="20201117 14:48:11.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.625" level="INFO">${RESULT} = [{'time': 0.045198278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010358400000000378, 'source_diff': 0.00010358400000000378}, {'time': 0.045307528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:11.617" endtime="20201117 14:48:11.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.655" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:11.627" endtime="20201117 14:48:11.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.666" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.664" endtime="20201117 14:48:11.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.673" level="INFO">VALUE: [0.00010358400000000378, 0.00010322200000000004, 0.0001039160000000025, 0.00010394400000000165, 0.00010362500000000302, 0.00010390299999999547, 0.00010359800000000335, 0.00010361100000000345, 0.00010391700000000198, 0.00010425000000000018, 0.00010383400000000403, 0.0001036940000000014, 0.00010340300000000191, 0.0001038889999999959, 0.00010370900000000044, 0.00010377800000000575, 0.00010487500000000427, 0.00010348599999999986, 0.00010361099999999651, 0.00010359699999999694, 0.00010406999999999778, 0.000103513999999999, 0.00010379099999999891, 0.00010490299999999647, 0.00010329099999999841, 0.00010312500000000252, 0.00010336099999999626, 0.0001038889999999959, 0.00010383300000000456, 0.00010329099999999841, 0.00010390299999999547, 0.00010313900000000209, 0.000104514, 0.00010320800000000047, 0.00010380599999999796, 0.00010363900000000259, 0.0001033610000000032, 0.00010304199999999764, 0.0001035280000000055, 0.00010397200000000079, 0.00010384699999999719, 0.00010327799999999832, 0.00010419399999999496, 0.00010345799999999378, 0.00010395800000000122, 0.00010350000000000636, 0.00010388900000000284, 0.00010341699999999454, 0.00010326399999999875, 0.00010387499999999633]</msg>
<status status="PASS" starttime="20201117 14:48:11.669" endtime="20201117 14:48:11.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.657" endtime="20201117 14:48:11.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.683" endtime="20201117 14:48:11.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.691" endtime="20201117 14:48:11.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.686" endtime="20201117 14:48:11.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.678" endtime="20201117 14:48:11.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.175" endtime="20201117 14:48:11.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.171" endtime="20201117 14:48:11.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.169" endtime="20201117 14:48:11.717"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.744" endtime="20201117 14:48:11.763"></status>
</kw>
<msg timestamp="20201117 14:48:11.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.741" endtime="20201117 14:48:11.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.766" endtime="20201117 14:48:11.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.773" endtime="20201117 14:48:11.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.733" endtime="20201117 14:48:11.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.728" endtime="20201117 14:48:11.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.796" endtime="20201117 14:48:12.129"></status>
</kw>
<msg timestamp="20201117 14:48:12.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045031611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.793" endtime="20201117 14:48:12.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044927389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045031611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.138" endtime="20201117 14:48:12.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.156" endtime="20201117 14:48:12.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.785" endtime="20201117 14:48:12.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.781" endtime="20201117 14:48:12.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.173" level="INFO">${RESULT} = [{'time': 0.045031611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010422200000000104, 'source_diff': 0.00010422200000000104}, {'time': 0.045141917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.165" endtime="20201117 14:48:12.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.203" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:12.175" endtime="20201117 14:48:12.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.214" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.212" endtime="20201117 14:48:12.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.221" level="INFO">VALUE: [0.00010422200000000104, 0.00010486099999999776, 0.00010467999999999589, 0.00010576400000000125, 0.00010465200000000369, 0.00010494399999999571, 0.00010515300000000366, 0.0001041810000000018, 0.0001045689999999988, 0.00010500000000000093, 0.00010463899999999665, 0.00010480599999999896, 0.00010486099999999776, 0.00010411100000000395, 0.0001040139999999995, 0.00010426399999999975, 0.00010463900000000359, 0.00010434699999999769, 0.00010486099999999776, 0.00010500000000000093, 0.00010493100000000255, 0.00010467999999999589, 0.00010483299999999862, 0.00010411099999999701, 0.00010466700000000273, 0.00010458399999999785, 0.00010425000000000018, 0.0001043339999999976, 0.0001048480000000046, 0.00010476400000000025, 0.00010554200000000014, 0.00010575000000000168, 0.00010519399999999596, 0.0001048889999999969, 0.0001045280000000065, 0.00010493000000000308, 0.0001048889999999969, 0.00010444399999999521, 0.00010415299999999572, 0.00010450000000000043, 0.00010422300000000051, 0.00010433299999999812, 0.00010556999999999928, 0.00010429200000000582, 0.00010468000000000283, 0.0001050559999999992, 0.00010419399999999496, 0.00010484699999999819, 0.00010461100000000445, 0.00010575000000000168]</msg>
<status status="PASS" starttime="20201117 14:48:12.216" endtime="20201117 14:48:12.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.205" endtime="20201117 14:48:12.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.230" endtime="20201117 14:48:12.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.239" endtime="20201117 14:48:12.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.234" endtime="20201117 14:48:12.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.226" endtime="20201117 14:48:12.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.724" endtime="20201117 14:48:12.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.720" endtime="20201117 14:48:12.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.718" endtime="20201117 14:48:12.265"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.292" endtime="20201117 14:48:12.311"></status>
</kw>
<msg timestamp="20201117 14:48:12.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.289" endtime="20201117 14:48:12.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.314" endtime="20201117 14:48:12.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.321" endtime="20201117 14:48:12.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.281" endtime="20201117 14:48:12.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.276" endtime="20201117 14:48:12.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.344" endtime="20201117 14:48:12.679"></status>
</kw>
<msg timestamp="20201117 14:48:12.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045045917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.341" endtime="20201117 14:48:12.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045045917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.688" endtime="20201117 14:48:12.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.706" endtime="20201117 14:48:12.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.334" endtime="20201117 14:48:12.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.329" endtime="20201117 14:48:12.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.723" level="INFO">${RESULT} = [{'time': 0.045151569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010565200000000469, 'source_diff': 0.00010565200000000469}, {'time': 0.045268931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:12.714" endtime="20201117 14:48:12.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:12.726" endtime="20201117 14:48:12.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.767" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.764" endtime="20201117 14:48:12.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.773" level="INFO">VALUE: [0.00010565200000000469, 0.00010699999999999599, 0.00010534699999999869, 0.00010579200000000039, 0.00010609699999999944, 0.00010576300000000177, 0.00010536199999999774, 0.00010543099999999611, 0.00010513900000000409, 0.00010590299999999747, 0.00010549999999999449, 0.00010526400000000075, 0.00010561099999999851, 0.00010659699999999994, 0.00010525000000000118, 0.00010520900000000194, 0.00010673699999999564, 0.00010587500000000527, 0.00010550000000000143, 0.00010538799999999793, 0.00010536099999999826, 0.0001053889999999974, 0.00010598599999999542, 0.00010626400000000175, 0.00010550000000000143, 0.0001065560000000007, 0.00010547200000000229, 0.00010525000000000118, 0.0001055689999999998, 0.00010548600000000186, 0.00010536199999999774, 0.00010570800000000297, 0.00010548600000000186, 0.00010550000000000143, 0.0001051940000000029, 0.00010544400000000315, 0.00010518000000000333, 0.00010562499999999808, 0.00010591599999999757, 0.00010512500000000452, 0.00010658399999999985, 0.00010584799999999867, 0.00010586099999999876, 0.00010644399999999721, 0.00010518099999999586, 0.00010515300000000366, 0.00010598600000000236, 0.0001055559999999997, 0.00010617999999999739, 0.00010520800000000247]</msg>
<status status="PASS" starttime="20201117 14:48:12.769" endtime="20201117 14:48:12.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.758" endtime="20201117 14:48:12.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.782" endtime="20201117 14:48:12.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.790" endtime="20201117 14:48:12.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.786" endtime="20201117 14:48:12.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.777" endtime="20201117 14:48:12.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.272" endtime="20201117 14:48:12.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.268" endtime="20201117 14:48:12.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.266" endtime="20201117 14:48:12.817"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.822" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.843" endtime="20201117 14:48:12.863"></status>
</kw>
<msg timestamp="20201117 14:48:12.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.840" endtime="20201117 14:48:12.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.866" endtime="20201117 14:48:12.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.872" endtime="20201117 14:48:12.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.833" endtime="20201117 14:48:12.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.827" endtime="20201117 14:48:12.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.895" endtime="20201117 14:48:13.230"></status>
</kw>
<msg timestamp="20201117 14:48:13.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044982556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045089361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.892" endtime="20201117 14:48:13.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044982556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045089361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.239" endtime="20201117 14:48:13.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.258" endtime="20201117 14:48:13.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.885" endtime="20201117 14:48:13.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.880" endtime="20201117 14:48:13.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.275" level="INFO">${RESULT} = [{'time': 0.045089361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010680500000000148, 'source_diff': 0.00010680500000000148}, {'time': 0.045202653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:13.267" endtime="20201117 14:48:13.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.305" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:13.277" endtime="20201117 14:48:13.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.316" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.314" endtime="20201117 14:48:13.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.322" level="INFO">VALUE: [0.00010680500000000148, 0.00010711100000000001, 0.00010632000000000003, 0.00010641700000000448, 0.00010651399999999506, 0.00010669399999999746, 0.00010620800000000347, 0.00010782000000000153, 0.00010659699999999994, 0.00010602799999999413, 0.00010612500000000552, 0.00010632000000000003, 0.00010618000000000433, 0.0001061810000000038, 0.00010669500000000387, 0.00010616599999999782, 0.00010712499999999958, 0.00010632000000000003, 0.00010616599999999782, 0.00010716699999999829, 0.00010676400000000225, 0.00010649999999999549, 0.00010708400000000035, 0.00010655500000000123, 0.00010686199999999924, 0.00010686099999999976, 0.00010636099999999926, 0.00010687500000000627, 0.00010630500000000098, 0.000106514000000002, 0.00010707000000000078, 0.00010701399999999556, 0.00010659699999999994, 0.00010707000000000078, 0.00010759700000000094, 0.00010684700000000019, 0.00010650000000000243, 0.0001069160000000055, 0.00010629100000000141, 0.00010683300000000062, 0.0001063339999999996, 0.00010708300000000087, 0.00010645899999999625, 0.0001063889999999984, 0.00010667999999999789, 0.0001068889999999989, 0.00010643000000000458, 0.00010666700000000473, 0.00010622200000000304, 0.00010612499999999858]</msg>
<status status="PASS" starttime="20201117 14:48:13.318" endtime="20201117 14:48:13.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.307" endtime="20201117 14:48:13.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.331" endtime="20201117 14:48:13.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.339" endtime="20201117 14:48:13.361"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.335" endtime="20201117 14:48:13.363"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.327" endtime="20201117 14:48:13.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.823" endtime="20201117 14:48:13.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.819" endtime="20201117 14:48:13.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.818" endtime="20201117 14:48:13.366"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.371" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.393" endtime="20201117 14:48:13.412"></status>
</kw>
<msg timestamp="20201117 14:48:13.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.389" endtime="20201117 14:48:13.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.415" endtime="20201117 14:48:13.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.421" endtime="20201117 14:48:13.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.382" endtime="20201117 14:48:13.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.376" endtime="20201117 14:48:13.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.450" endtime="20201117 14:48:13.784"></status>
</kw>
<msg timestamp="20201117 14:48:13.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045153139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:13.441" endtime="20201117 14:48:13.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045153139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:13.793" endtime="20201117 14:48:13.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.812" endtime="20201117 14:48:13.815"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.434" endtime="20201117 14:48:13.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.430" endtime="20201117 14:48:13.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.829" level="INFO">${RESULT} = [{'time': 0.0452605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010736100000000026, 'source_diff': 0.00010736100000000026}, {'time': 0.045372958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.820" endtime="20201117 14:48:13.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.858" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:13.831" endtime="20201117 14:48:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.869" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.867" endtime="20201117 14:48:13.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.876" level="INFO">VALUE: [0.00010736100000000026, 0.00010791599999999957, 0.00010737499999999983, 0.00010808300000000187, 0.00010791599999999957, 0.00010729200000000189, 0.00010863900000000065, 0.00010757000000000128, 0.00010774999999999674, 0.0001072219999999971, 0.00010773599999999717, 0.00010727800000000232, 0.0001080140000000035, 0.00010793099999999861, 0.00010844399999999921, 0.00010727799999999538, 0.00010798600000000436, 0.00010786099999999382, 0.00010751299999999658, 0.00010797200000000479, 0.00010749999999999649, 0.0001073889999999994, 0.0001073889999999994, 0.00010745799999999778, 0.0001078340000000011, 0.000107902, 0.00010783300000000162, 0.00010741699999999854, 0.00010716599999999882, 0.00010743000000000558, 0.00010862500000000108, 0.00010780600000000196, 0.00010754200000000214, 0.00010874999999999774, 0.00010745900000000419, 0.00010808299999999493, 0.00010711100000000001, 0.00010763899999999965, 0.00010748600000000386, 0.00010750000000000343, 0.00010798699999999689, 0.00010722200000000404, 0.00010877799999999688, 0.00010813900000000015, 0.0001074019999999995, 0.0001072219999999971, 0.00010793099999999861, 0.00010779099999999597, 0.00010876400000000425, 0.00010777799999999588]</msg>
<status status="PASS" starttime="20201117 14:48:13.872" endtime="20201117 14:48:13.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.860" endtime="20201117 14:48:13.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.885" endtime="20201117 14:48:13.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.893" endtime="20201117 14:48:13.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.889" endtime="20201117 14:48:13.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.880" endtime="20201117 14:48:13.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.373" endtime="20201117 14:48:13.918"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.369" endtime="20201117 14:48:13.919"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.367" endtime="20201117 14:48:13.919"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.946" endtime="20201117 14:48:13.965"></status>
</kw>
<msg timestamp="20201117 14:48:13.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.943" endtime="20201117 14:48:13.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.969" endtime="20201117 14:48:13.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.976" endtime="20201117 14:48:13.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.936" endtime="20201117 14:48:13.981"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.930" endtime="20201117 14:48:13.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.999" endtime="20201117 14:48:14.334"></status>
</kw>
<msg timestamp="20201117 14:48:14.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045099417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045207431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.996" endtime="20201117 14:48:14.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045099417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045207431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.343" endtime="20201117 14:48:14.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.361" endtime="20201117 14:48:14.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.989" endtime="20201117 14:48:14.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.984" endtime="20201117 14:48:14.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.378" level="INFO">${RESULT} = [{'time': 0.045207431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010801399999999656, 'source_diff': 0.00010801399999999656}, {'time': 0.045325764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:14.370" endtime="20201117 14:48:14.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:14.380" endtime="20201117 14:48:14.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.419" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.417" endtime="20201117 14:48:14.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.426" level="INFO">VALUE: [0.00010801399999999656, 0.00010818099999999886, 0.00010829100000000341, 0.00010932000000000303, 0.00010873599999999817, 0.0001087089999999985, 0.00010812499999999364, 0.00010866699999999979, 0.00010817999999999939, 0.0001085560000000027, 0.00010849999999999749, 0.00010801399999999656, 0.00010901399999999756, 0.00010841699999999954, 0.00010809700000000144, 0.00010798600000000436, 0.00010863900000000065, 0.00010820799999999853, 0.00010895899999999875, 0.00010837500000000083, 0.0001087219999999986, 0.00010858300000000237, 0.00010847199999999835, 0.00010816699999999929, 0.00010918000000000039, 0.00010883300000000262, 0.00010831900000000255, 0.00010820799999999853, 0.0001097219999999996, 0.00010897199999999885, 0.00010897299999999832, 0.00010868099999999936, 0.00010898699999999789, 0.00010851399999999706, 0.00010909800000000192, 0.0001081940000000059, 0.00010890300000000047, 0.00010959800000000242, 0.00010867999999999989, 0.00010890300000000047, 0.00010894499999999918, 0.00010883300000000262, 0.00010912500000000158, 0.00010847199999999835, 0.00010845899999999825, 0.00010831900000000255, 0.00010811100000000101, 0.00010816599999999982, 0.00010869399999999946, 0.0001090549999999968]</msg>
<status status="PASS" starttime="20201117 14:48:14.422" endtime="20201117 14:48:14.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.410" endtime="20201117 14:48:14.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.435" endtime="20201117 14:48:14.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.443" endtime="20201117 14:48:14.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.439" endtime="20201117 14:48:14.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.430" endtime="20201117 14:48:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.926" endtime="20201117 14:48:14.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.922" endtime="20201117 14:48:14.469"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.920" endtime="20201117 14:48:14.470"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.497" endtime="20201117 14:48:14.516"></status>
</kw>
<msg timestamp="20201117 14:48:14.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.494" endtime="20201117 14:48:14.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.520" endtime="20201117 14:48:14.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.526" endtime="20201117 14:48:14.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.487" endtime="20201117 14:48:14.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.480" endtime="20201117 14:48:14.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.550" endtime="20201117 14:48:14.885"></status>
</kw>
<msg timestamp="20201117 14:48:14.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045906361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046015556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.546" endtime="20201117 14:48:14.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045906361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046015556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.894" endtime="20201117 14:48:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.912" endtime="20201117 14:48:14.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.539" endtime="20201117 14:48:14.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.534" endtime="20201117 14:48:14.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.929" level="INFO">${RESULT} = [{'time': 0.046015556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010919499999999943, 'source_diff': 0.00010919499999999943}, {'time': 0.046135986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:14.920" endtime="20201117 14:48:14.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.962" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:14.931" endtime="20201117 14:48:14.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.973" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.970" endtime="20201117 14:48:14.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.979" level="INFO">VALUE: [0.00010919499999999943, 0.00010997199999999985, 0.00011084699999999725, 0.00010941700000000054, 0.00010937500000000183, 0.0001093890000000014, 0.00011047200000000035, 0.00011006999999999684, 0.0001098890000000019, 0.00010967999999999395, 0.00010941700000000054, 0.00010918099999999986, 0.00010974999999999874, 0.00010926399999999781, 0.00010938899999999446, 0.00010911200000000149, 0.00010909800000000192, 0.00010968000000000089, 0.00010984699999999625, 0.00010991599999999463, 0.00010926399999999781, 0.00010994500000000018, 0.00010974999999999874, 0.00011026399999999881, 0.00010973699999999864, 0.00010902800000000407, 0.00010994500000000018, 0.00010966700000000079, 0.00010968100000000036, 0.00010927799999999738, 0.00010991599999999463, 0.00010930500000000398, 0.00010970800000000003, 0.00010994500000000018, 0.00010931999999999609, 0.00010983399999999616, 0.0001102769999999989, 0.0001092219999999991, 0.00010951399999999806, 0.00010944499999999968, 0.00010955500000000423, 0.00010943000000000064, 0.00010912499999999464, 0.00010949999999999849, 0.00011045800000000078, 0.00010986099999999582, 0.00010941599999999413, 0.00010973599999999917, 0.00011065299999999528, 0.00010949999999999849]</msg>
<status status="PASS" starttime="20201117 14:48:14.975" endtime="20201117 14:48:14.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.963" endtime="20201117 14:48:14.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.988" endtime="20201117 14:48:14.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.997" endtime="20201117 14:48:15.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.992" endtime="20201117 14:48:15.021"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.983" endtime="20201117 14:48:15.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.476" endtime="20201117 14:48:15.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.472" endtime="20201117 14:48:15.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.471" endtime="20201117 14:48:15.024"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.029" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.051" endtime="20201117 14:48:15.070"></status>
</kw>
<msg timestamp="20201117 14:48:15.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.047" endtime="20201117 14:48:15.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.074" endtime="20201117 14:48:15.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.080" endtime="20201117 14:48:15.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.040" endtime="20201117 14:48:15.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.034" endtime="20201117 14:48:15.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.103" endtime="20201117 14:48:15.437"></status>
</kw>
<msg timestamp="20201117 14:48:15.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045457514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045568278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.100" endtime="20201117 14:48:15.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045457514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045568278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.446" endtime="20201117 14:48:15.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.465" endtime="20201117 14:48:15.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.093" endtime="20201117 14:48:15.470"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.088" endtime="20201117 14:48:15.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:15.482" level="INFO">${RESULT} = [{'time': 0.045568278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011076399999999931, 'source_diff': 0.00011076399999999931}, {'time': 0.045690569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:15.473" endtime="20201117 14:48:15.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:15.484" endtime="20201117 14:48:15.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.522" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:48:15.520" endtime="20201117 14:48:15.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.529" level="INFO">VALUE: [0.00011076399999999931, 0.00011193000000000314, 0.00011058299999999743, 0.00011077799999999888, 0.00011036099999999632, 0.0001102220000000001, 0.00011040299999999503, 0.00011026399999999881, 0.00011052799999999863, 0.00011049999999999949, 0.00011112500000000358, 0.00011058299999999743, 0.0001108890000000029, 0.00011027800000000532, 0.00011019400000000096, 0.00011095900000000075, 0.00011073600000000017, 0.00011052799999999863, 0.00011179199999999945, 0.00011034699999999675, 0.00011097300000000032, 0.00011065299999999528, 0.00011062499999999614, 0.00011061100000000351, 0.00011002799999999813, 0.00011006899999999736, 0.00011150000000000049, 0.00011091700000000204, 0.00011048599999999992, 0.00011074999999999974, 0.00011049999999999949, 0.00011180599999999902, 0.00011125000000000024, 0.00011052799999999863, 0.00011087499999999639, 0.0001105549999999983, 0.00011041700000000154, 0.00011030599999999752, 0.00011065299999999528, 0.00011052799999999863, 0.00011098699999999989, 0.0001103340000000036, 0.00011104099999999922, 0.00011056899999999786, 0.0001112220000000011, 0.0001107220000000006, 0.00011079099999999897, 0.0001110549999999988, 0.00011040299999999503, 0.00011019400000000096]</msg>
<status status="PASS" starttime="20201117 14:48:15.525" endtime="20201117 14:48:15.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.513" endtime="20201117 14:48:15.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.538" endtime="20201117 14:48:15.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:15.547" endtime="20201117 14:48:15.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.542" endtime="20201117 14:48:15.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.534" endtime="20201117 14:48:15.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.030" endtime="20201117 14:48:15.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.026" endtime="20201117 14:48:15.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.025" endtime="20201117 14:48:15.573"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.600" endtime="20201117 14:48:15.620"></status>
</kw>
<msg timestamp="20201117 14:48:15.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.596" endtime="20201117 14:48:15.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.623" endtime="20201117 14:48:15.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.629" endtime="20201117 14:48:15.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.589" endtime="20201117 14:48:15.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.583" endtime="20201117 14:48:15.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.652" endtime="20201117 14:48:15.999"></status>
</kw>
<msg timestamp="20201117 14:48:16.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045083056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.649" endtime="20201117 14:48:16.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044971347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045083056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.008" endtime="20201117 14:48:16.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.026" endtime="20201117 14:48:16.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.642" endtime="20201117 14:48:16.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.637" endtime="20201117 14:48:16.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.043" level="INFO">${RESULT} = [{'time': 0.045083056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001117090000000015, 'source_diff': 0.0001117090000000015}, {'time': 0.045201278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:16.034" endtime="20201117 14:48:16.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:16.045" endtime="20201117 14:48:16.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.084" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.082" endtime="20201117 14:48:16.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.091" level="INFO">VALUE: [0.0001117090000000015, 0.00011205599999999927, 0.00011150000000000049, 0.00011212499999999764, 0.0001110549999999988, 0.000111596999999998, 0.00011163899999999671, 0.00011119500000000143, 0.0001115419999999992, 0.00011205599999999927, 0.00011176399999999337, 0.00011173600000000117, 0.00011273600000000217, 0.00011194400000000271, 0.00011175000000000074, 0.00011145900000000125, 0.0001110549999999988, 0.00011162499999999714, 0.00011147200000000135, 0.00011187499999999739, 0.00011166699999999585, 0.00011169400000000246, 0.00011165300000000322, 0.00011151400000000006, 0.00011156899999999886, 0.00011186099999999782, 0.00011197200000000185, 0.00011169499999999499, 0.00011270799999999609, 0.00011198700000000089, 0.00011200000000000099, 0.00011126300000000033, 0.00011104100000000616, 0.00011161099999999757, 0.00011123600000000067, 0.00011141600000000307, 0.00011156999999999834, 0.00011151400000000006, 0.00011230599999999952, 0.00011194400000000271, 0.00011150000000000049, 0.00011180599999999902, 0.00011200000000000099, 0.00011194500000000218, 0.00011105599999999827, 0.00011180599999999902, 0.00011162499999999714, 0.00011137499999999689, 0.00011109700000000444, 0.00011219500000000243]</msg>
<status status="PASS" starttime="20201117 14:48:16.086" endtime="20201117 14:48:16.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.075" endtime="20201117 14:48:16.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.100" endtime="20201117 14:48:16.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.108" endtime="20201117 14:48:16.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.104" endtime="20201117 14:48:16.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.096" endtime="20201117 14:48:16.133"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.580" endtime="20201117 14:48:16.134"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.576" endtime="20201117 14:48:16.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.574" endtime="20201117 14:48:16.135"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.162" endtime="20201117 14:48:16.183"></status>
</kw>
<msg timestamp="20201117 14:48:16.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.158" endtime="20201117 14:48:16.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.186" endtime="20201117 14:48:16.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.193" endtime="20201117 14:48:16.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.151" endtime="20201117 14:48:16.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.145" endtime="20201117 14:48:16.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.216" endtime="20201117 14:48:16.559"></status>
</kw>
<msg timestamp="20201117 14:48:16.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045153167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045265667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.213" endtime="20201117 14:48:16.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045153167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045265667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.568" endtime="20201117 14:48:16.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.586" endtime="20201117 14:48:16.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.205" endtime="20201117 14:48:16.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.201" endtime="20201117 14:48:16.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.603" level="INFO">${RESULT} = [{'time': 0.045265667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011250000000000149, 'source_diff': 0.00011250000000000149}, {'time': 0.045382931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:16.595" endtime="20201117 14:48:16.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:16.606" endtime="20201117 14:48:16.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.645" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.643" endtime="20201117 14:48:16.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.652" level="INFO">VALUE: [0.00011250000000000149, 0.00011281999999999959, 0.00011301299999999515, 0.00011243099999999617, 0.00011295900000000275, 0.00011294399999999677, 0.00011238899999999746, 0.00011269499999999599, 0.00011293099999999667, 0.00011334699999999975, 0.0001122499999999943, 0.00011381900000000111, 0.00011240299999999703, 0.00011206999999999884, 0.00011259800000000542, 0.00011215299999999678, 0.00011215299999999678, 0.00011247300000000182, 0.00011293099999999667, 0.00011280600000000002, 0.00011295899999999581, 0.00011372300000000307, 0.00011220800000000253, 0.00011262500000000508, 0.00011245799999999584, 0.00011212499999999764, 0.00011213799999999774, 0.0001120549999999998, 0.00011198600000000142, 0.00011230599999999952, 0.00011225000000000124, 0.00011306900000000036, 0.00011299999999999505, 0.00011261099999999857, 0.00011209799999999798, 0.0001128749999999984, 0.00011262499999999814, 0.00011333399999999966, 0.00011240300000000397, 0.00011286099999999882, 0.00011240299999999703, 0.00011266599999999738, 0.00011281999999999959, 0.00011400000000000299, 0.00011294400000000371, 0.00011286100000000576, 0.00011252799999999369, 0.00011294399999999677, 0.00011365299999999828, 0.00011209800000000492]</msg>
<status status="PASS" starttime="20201117 14:48:16.648" endtime="20201117 14:48:16.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.636" endtime="20201117 14:48:16.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.661" endtime="20201117 14:48:16.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.669" endtime="20201117 14:48:16.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.665" endtime="20201117 14:48:16.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.656" endtime="20201117 14:48:16.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.142" endtime="20201117 14:48:16.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.138" endtime="20201117 14:48:16.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.136" endtime="20201117 14:48:16.696"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.701" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.724" endtime="20201117 14:48:16.744"></status>
</kw>
<msg timestamp="20201117 14:48:16.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.721" endtime="20201117 14:48:16.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.747" endtime="20201117 14:48:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.754" endtime="20201117 14:48:16.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.713" endtime="20201117 14:48:16.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.707" endtime="20201117 14:48:16.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.777" endtime="20201117 14:48:17.112"></status>
</kw>
<msg timestamp="20201117 14:48:17.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046837611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046950847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.774" endtime="20201117 14:48:17.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046837611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046950847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.121" endtime="20201117 14:48:17.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.140" endtime="20201117 14:48:17.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.766" endtime="20201117 14:48:17.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.762" endtime="20201117 14:48:17.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.157" level="INFO">${RESULT} = [{'time': 0.046950847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011323599999999573, 'source_diff': 0.00011323599999999573}, {'time': 0.047071111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:17.148" endtime="20201117 14:48:17.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:17.159" endtime="20201117 14:48:17.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.201" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.198" endtime="20201117 14:48:17.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.207" level="INFO">VALUE: [0.00011323599999999573, 0.00011377800000000188, 0.00011368099999999742, 0.00011358300000000043, 0.00011326400000000181, 0.00011484700000000125, 0.00011384799999999973, 0.00011297199999999591, 0.00011365299999999828, 0.00011323600000000267, 0.00011348599999999598, 0.0001138749999999994, 0.00011367999999999795, 0.00011377799999999494, 0.00011348600000000292, 0.00011343000000000464, 0.00011344399999999727, 0.00011386099999999982, 0.00011386099999999982, 0.00011355600000000077, 0.00011447300000000382, 0.00011366700000000479, 0.000113209000000003, 0.00011418099999999792, 0.00011417999999999845, 0.00011390299999999853, 0.00011358300000000043, 0.00011434800000000023, 0.00011311099999999907, 0.0001134020000000055, 0.0001130969999999995, 0.00011341599999999813, 0.00011375000000000274, 0.00011363899999999871, 0.00011369400000000446, 0.00011375000000000274, 0.0001132499999999953, 0.000113597, 0.00011322199999999616, 0.00011351399999999512, 0.00011333399999999966, 0.00011304100000000122, 0.00011436100000000032, 0.00011333300000000018, 0.00011466600000000632, 0.00011418099999999792, 0.00011366699999999785, 0.00011334699999999975, 0.00011322199999999616, 0.00011369400000000446]</msg>
<status status="PASS" starttime="20201117 14:48:17.203" endtime="20201117 14:48:17.208"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.191" endtime="20201117 14:48:17.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.216" endtime="20201117 14:48:17.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.224" endtime="20201117 14:48:17.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.220" endtime="20201117 14:48:17.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.211" endtime="20201117 14:48:17.249"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.703" endtime="20201117 14:48:17.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.698" endtime="20201117 14:48:17.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.697" endtime="20201117 14:48:17.251"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.256" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.278" endtime="20201117 14:48:17.298"></status>
</kw>
<msg timestamp="20201117 14:48:17.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.275" endtime="20201117 14:48:17.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.301" endtime="20201117 14:48:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.307" endtime="20201117 14:48:17.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.267" endtime="20201117 14:48:17.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.261" endtime="20201117 14:48:17.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.331" endtime="20201117 14:48:17.666"></status>
</kw>
<msg timestamp="20201117 14:48:17.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045430625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.327" endtime="20201117 14:48:17.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045430625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.676" endtime="20201117 14:48:17.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.694" endtime="20201117 14:48:17.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.320" endtime="20201117 14:48:17.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.315" endtime="20201117 14:48:17.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.711" level="INFO">${RESULT} = [{'time': 0.045544819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011419399999999802, 'source_diff': 0.00011419399999999802}, {'time': 0.045669153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:17.702" endtime="20201117 14:48:17.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:17.713" endtime="20201117 14:48:17.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.752" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.750" endtime="20201117 14:48:17.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.759" level="INFO">VALUE: [0.00011419399999999802, 0.00011461099999999363, 0.0001147499999999968, 0.00011450000000000349, 0.0001140420000000017, 0.0001152220000000051, 0.00011444399999999827, 0.00011459800000000048, 0.00011552799999999669, 0.00011475000000000374, 0.00011495899999999781, 0.00011473599999999723, 0.0001140420000000017, 0.00011444400000000521, 0.0001145699999999944, 0.00011494399999999877, 0.00011405600000000127, 0.0001140970000000005, 0.00011554199999999626, 0.00011475000000000374, 0.0001145420000000022, 0.0001149299999999992, 0.00011467999999999895, 0.00011443099999999817, 0.00011476399999999637, 0.00011409800000000692, 0.00011476400000000331, 0.00011568099999999942, 0.00011479100000000297, 0.00011415299999999878, 0.00011416699999999835, 0.00011408300000000093, 0.00011441600000000607, 0.0001143049999999951, 0.00011455499999999535, 0.00011473599999999723, 0.00011462500000000014, 0.00011462500000000014, 0.00011447199999999741, 0.00011436100000000032, 0.00011462500000000014, 0.00011533399999999472, 0.0001145420000000022, 0.00011480600000000202, 0.00011477799999999594, 0.00011476399999999637, 0.00011463899999999971, 0.00011494499999999824, 0.000114597000000001, 0.00011459800000000048]</msg>
<status status="PASS" starttime="20201117 14:48:17.755" endtime="20201117 14:48:17.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.743" endtime="20201117 14:48:17.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.769" endtime="20201117 14:48:17.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.777" endtime="20201117 14:48:17.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.773" endtime="20201117 14:48:17.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.764" endtime="20201117 14:48:17.802"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.257" endtime="20201117 14:48:17.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.253" endtime="20201117 14:48:17.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.252" endtime="20201117 14:48:17.804"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.831" endtime="20201117 14:48:17.851"></status>
</kw>
<msg timestamp="20201117 14:48:17.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.828" endtime="20201117 14:48:17.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.854" endtime="20201117 14:48:17.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.861" endtime="20201117 14:48:17.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.820" endtime="20201117 14:48:17.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.815" endtime="20201117 14:48:17.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.885" endtime="20201117 14:48:18.218"></status>
</kw>
<msg timestamp="20201117 14:48:18.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045490806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.881" endtime="20201117 14:48:18.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045490806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.228" endtime="20201117 14:48:18.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.246" endtime="20201117 14:48:18.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.874" endtime="20201117 14:48:18.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.869" endtime="20201117 14:48:18.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.263" level="INFO">${RESULT} = [{'time': 0.045605889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000115082999999995, 'source_diff': 0.000115082999999995}, {'time': 0.045731181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:18.254" endtime="20201117 14:48:18.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.293" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:18.265" endtime="20201117 14:48:18.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.304" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.302" endtime="20201117 14:48:18.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.311" level="INFO">VALUE: [0.000115082999999995, 0.00011650000000000549, 0.00011572199999999866, 0.00011563900000000071, 0.00011579199999999651, 0.00011594399999999977, 0.00011529200000000295, 0.00011584700000000225, 0.00011572199999999866, 0.000115597000000002, 0.00011527799999999644, 0.00011602800000000413, 0.00011575000000000474, 0.0001159170000000001, 0.00011549999999999755, 0.00011583300000000268, 0.00011509699999999456, 0.00011533300000000218, 0.0001157220000000056, 0.00011581999999999565, 0.00011579100000000397, 0.00011529100000000347, 0.00011597299999999838, 0.00011581899999999618, 0.00011566600000000038, 0.00011569499999999899, 0.00011572299999999813, 0.00011684699999999631, 0.00011513900000000021, 0.00011562500000000114, 0.000115597000000002, 0.00011591600000000063, 0.00011508300000000193, 0.00011598699999999795, 0.00011670800000000009, 0.00011676399999999837, 0.00011594399999999977, 0.00011557000000000234, 0.00011547199999999841, 0.00011550000000000449, 0.00011605600000000327, 0.00011670799999999315, 0.0001154169999999996, 0.00011601299999999815, 0.00011583300000000268, 0.00011519399999999902, 0.00011556900000000286, 0.00011619499999999949, 0.00011584699999999531, 0.00011529100000000347]</msg>
<status status="PASS" starttime="20201117 14:48:18.306" endtime="20201117 14:48:18.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.295" endtime="20201117 14:48:18.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.320" endtime="20201117 14:48:18.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.328" endtime="20201117 14:48:18.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.324" endtime="20201117 14:48:18.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.315" endtime="20201117 14:48:18.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.811" endtime="20201117 14:48:18.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.806" endtime="20201117 14:48:18.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.805" endtime="20201117 14:48:18.355"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.360" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.382" endtime="20201117 14:48:18.402"></status>
</kw>
<msg timestamp="20201117 14:48:18.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.379" endtime="20201117 14:48:18.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.405" endtime="20201117 14:48:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.412" endtime="20201117 14:48:18.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.372" endtime="20201117 14:48:18.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.365" endtime="20201117 14:48:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.435" endtime="20201117 14:48:18.770"></status>
</kw>
<msg timestamp="20201117 14:48:18.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046038222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.432" endtime="20201117 14:48:18.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046038222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.780" endtime="20201117 14:48:18.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.799" endtime="20201117 14:48:18.803"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.425" endtime="20201117 14:48:18.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.420" endtime="20201117 14:48:18.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.816" level="INFO">${RESULT} = [{'time': 0.046038222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011666599999999444, 'source_diff': 0.00011666599999999444}, {'time': 0.046165542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:18.807" endtime="20201117 14:48:18.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.846" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:18.818" endtime="20201117 14:48:18.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.857" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.855" endtime="20201117 14:48:18.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.864" level="INFO">VALUE: [0.00011666599999999444, 0.00011644499999999974, 0.00011611100000000207, 0.00011672199999999966, 0.0001161249999999947, 0.00011665300000000128, 0.00011702799999999819, 0.00011623600000000567, 0.00011644400000000027, 0.00011759699999999706, 0.00011668000000000095, 0.00011693100000000067, 0.00011620799999999959, 0.00011661099999999563, 0.00011682000000000359, 0.00011656899999999693, 0.00011695800000000034, 0.00011651400000000506, 0.00011669400000000052, 0.00011661099999999563, 0.00011607000000000284, 0.00011608300000000293, 0.00011652799999999769, 0.00011649999999999855, 0.00011649999999999855, 0.00011615300000000078, 0.00011605599999999633, 0.00011644400000000027, 0.00011609699999999556, 0.00011699999999999905, 0.00011688899999999502, 0.0001169300000000012, 0.00011615300000000078, 0.00011661099999999563, 0.00011630500000000404, 0.00011633400000000266, 0.0001167629999999989, 0.00011669499999999999, 0.0001160970000000025, 0.00011623599999999873, 0.0001169170000000011, 0.0001162499999999983, 0.000116082999999996, 0.00011652799999999769, 0.00011604199999999676, 0.00011687499999999545, 0.00011615300000000078, 0.00011656900000000386, 0.00011609799999999504, 0.0001163750000000019]</msg>
<status status="PASS" starttime="20201117 14:48:18.860" endtime="20201117 14:48:18.865"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.848" endtime="20201117 14:48:18.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.873" endtime="20201117 14:48:18.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.882" endtime="20201117 14:48:18.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.877" endtime="20201117 14:48:18.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.868" endtime="20201117 14:48:18.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.361" endtime="20201117 14:48:18.907"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.357" endtime="20201117 14:48:18.908"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.356" endtime="20201117 14:48:18.908"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.913" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.935" endtime="20201117 14:48:18.955"></status>
</kw>
<msg timestamp="20201117 14:48:18.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.932" endtime="20201117 14:48:18.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.959" endtime="20201117 14:48:18.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.965" endtime="20201117 14:48:18.969"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.925" endtime="20201117 14:48:18.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.919" endtime="20201117 14:48:18.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.988" endtime="20201117 14:48:19.321"></status>
</kw>
<msg timestamp="20201117 14:48:19.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045183278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045300681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.985" endtime="20201117 14:48:19.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045183278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045300681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.330" endtime="20201117 14:48:19.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.348" endtime="20201117 14:48:19.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.978" endtime="20201117 14:48:19.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.973" endtime="20201117 14:48:19.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.365" level="INFO">${RESULT} = [{'time': 0.045300681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011740300000000203, 'source_diff': 0.00011740300000000203}, {'time': 0.045428958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:19.357" endtime="20201117 14:48:19.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:19.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:19.368" endtime="20201117 14:48:19.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.409" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:48:19.406" endtime="20201117 14:48:19.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.485" level="INFO">VALUE: [0.00011740300000000203, 0.00011749999999999955, 0.00011747199999999347, 0.00011719400000000102, 0.00011768000000000195, 0.00011738900000000246, 0.00011812500000000364, 0.00011718100000000092, 0.00011772200000000066, 0.00011777800000000588, 0.00011747200000000041, 0.00011732000000000409, 0.00011786100000000382, 0.00011759699999999706, 0.00011723600000000667, 0.0001175550000000053, 0.00011702799999999819, 0.00011788900000000296, 0.00011749999999999955, 0.00011776399999999937, 0.00011800000000000005, 0.00011795900000000081, 0.00011793100000000167, 0.00011738899999999552, 0.00011722299999999963, 0.00011719500000000049, 0.00011770800000000109, 0.00011740300000000203, 0.00011802800000000613, 0.00011736100000000332, 0.00011734800000000323, 0.00011768100000000142, 0.00011734699999999681, 0.00011792999999999526, 0.000117597000000004, 0.00011786099999999688, 0.00011740300000000203, 0.0001174300000000017, 0.00011723599999999973, 0.00011747200000000041, 0.00011887499999999745, 0.00011723599999999973, 0.00011870799999999515, 0.00011741699999999466, 0.00011748599999999998, 0.0001179170000000021, 0.00011884699999999832, 0.00011729199999999801, 0.0001174170000000016, 0.000117597000000004]</msg>
<status status="PASS" starttime="20201117 14:48:19.411" endtime="20201117 14:48:19.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.400" endtime="20201117 14:48:19.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.494" endtime="20201117 14:48:19.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:19.502" endtime="20201117 14:48:19.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.498" endtime="20201117 14:48:19.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.490" endtime="20201117 14:48:19.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.915" endtime="20201117 14:48:19.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.911" endtime="20201117 14:48:19.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.909" endtime="20201117 14:48:19.529"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.556" endtime="20201117 14:48:19.575"></status>
</kw>
<msg timestamp="20201117 14:48:19.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.552" endtime="20201117 14:48:19.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.579" endtime="20201117 14:48:19.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.585" endtime="20201117 14:48:19.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.545" endtime="20201117 14:48:19.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.539" endtime="20201117 14:48:19.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.609" endtime="20201117 14:48:19.942"></status>
</kw>
<msg timestamp="20201117 14:48:19.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045112264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:19.605" endtime="20201117 14:48:19.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045112264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0452315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:19.951" endtime="20201117 14:48:19.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.969" endtime="20201117 14:48:19.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.598" endtime="20201117 14:48:19.974"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.593" endtime="20201117 14:48:19.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.986" level="INFO">${RESULT} = [{'time': 0.0452315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011923600000000173, 'source_diff': 0.00011923600000000173}, {'time': 0.045358861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:19.977" endtime="20201117 14:48:19.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:19.988" endtime="20201117 14:48:20.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.027" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.025" endtime="20201117 14:48:20.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.033" level="INFO">VALUE: [0.00011923600000000173, 0.00011848600000000098, 0.00011842999999999576, 0.0001195829999999995, 0.00011898599999999454, 0.00011818100000000192, 0.00011833299999999825, 0.000118597000000005, 0.00011897200000000191, 0.00011836099999999738, 0.00011838900000000346, 0.00011861199999999711, 0.00011813900000000321, 0.00011869400000000252, 0.00011847199999999447, 0.0001189449999999953, 0.00011888800000000449, 0.00011995800000000334, 0.00011901300000000115, 0.00011895800000000234, 0.0001184170000000026, 0.00011902700000000072, 0.00011813800000000374, 0.00011865300000000328, 0.00011861200000000405, 0.00011818099999999498, 0.0001199029999999976, 0.00011905599999999933, 0.00011895800000000234, 0.00011881899999999918, 0.00011831899999999868, 0.00011843100000000217, 0.00011880599999999908, 0.00011886099999999789, 0.000119082999999999, 0.00011820799999999465, 0.0001188049999999996, 0.00011829099999999954, 0.0001183750000000039, 0.00011806900000000536, 0.00011845900000000131, 0.00011811200000000355, 0.0001189029999999966, 0.00011850000000000055, 0.00011850000000000055, 0.00011942999999999676, 0.00011873600000000123, 0.00011873599999999429, 0.0001187500000000008, 0.00011993099999999673]</msg>
<status status="PASS" starttime="20201117 14:48:20.030" endtime="20201117 14:48:20.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.018" endtime="20201117 14:48:20.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.042" endtime="20201117 14:48:20.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.050" endtime="20201117 14:48:20.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.046" endtime="20201117 14:48:20.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.037" endtime="20201117 14:48:20.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.535" endtime="20201117 14:48:20.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.532" endtime="20201117 14:48:20.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.530" endtime="20201117 14:48:20.077"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.103" endtime="20201117 14:48:20.123"></status>
</kw>
<msg timestamp="20201117 14:48:20.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.100" endtime="20201117 14:48:20.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.127" endtime="20201117 14:48:20.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.133" endtime="20201117 14:48:20.136"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.093" endtime="20201117 14:48:20.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.087" endtime="20201117 14:48:20.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.158" endtime="20201117 14:48:20.491"></status>
</kw>
<msg timestamp="20201117 14:48:20.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045049208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045168486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.153" endtime="20201117 14:48:20.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045049208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045168486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.500" endtime="20201117 14:48:20.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.518" endtime="20201117 14:48:20.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.146" endtime="20201117 14:48:20.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.141" endtime="20201117 14:48:20.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.535" level="INFO">${RESULT} = [{'time': 0.045168486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011927800000000044, 'source_diff': 0.00011927800000000044}, {'time': 0.045297806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:20.526" endtime="20201117 14:48:20.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:20.538" endtime="20201117 14:48:20.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.576" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.574" endtime="20201117 14:48:20.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.581" level="INFO">VALUE: [0.00011927800000000044, 0.0001198620000000053, 0.00011931999999999915, 0.0001194449999999958, 0.00011955599999999983, 0.00011938899999999752, 0.00011997200000000291, 0.00011929100000000054, 0.00011961199999999811, 0.0001191379999999978, 0.0001207500000000028, 0.00011911099999999814, 0.00011980600000000008, 0.00011942999999999676, 0.00012000000000000205, 0.0001196379999999983, 0.00012022300000000263, 0.00011920899999999512, 0.0001204029999999981, 0.00012004200000000076, 0.00011919499999999555, 0.00011926399999999393, 0.00011923600000000173, 0.00011922200000000216, 0.00012004100000000129, 0.00011929200000000001, 0.0001200699999999999, 0.00012073599999999629, 0.0001199029999999976, 0.00011994400000000377, 0.00011945900000000231, 0.00011915300000000378, 0.00011947200000000241, 0.00011938900000000446, 0.00011909699999999857, 0.0001195829999999995, 0.00011998599999999554, 0.00011911099999999814, 0.00011965299999999734, 0.0001199170000000041, 0.00011931899999999968, 0.00011987499999999846, 0.00011997200000000291, 0.00011915300000000378, 0.00011955500000000036, 0.00011951400000000112, 0.00011958399999999897, 0.00011994399999999683, 0.00011984699999999932, 0.00011922200000000216]</msg>
<status status="PASS" starttime="20201117 14:48:20.578" endtime="20201117 14:48:20.582"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.567" endtime="20201117 14:48:20.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.590" endtime="20201117 14:48:20.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.598" endtime="20201117 14:48:20.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.594" endtime="20201117 14:48:20.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.586" endtime="20201117 14:48:20.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.083" endtime="20201117 14:48:20.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.079" endtime="20201117 14:48:20.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.078" endtime="20201117 14:48:20.625"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.630" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.652" endtime="20201117 14:48:20.672"></status>
</kw>
<msg timestamp="20201117 14:48:20.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.649" endtime="20201117 14:48:20.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.675" endtime="20201117 14:48:20.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.681" endtime="20201117 14:48:20.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.641" endtime="20201117 14:48:20.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.635" endtime="20201117 14:48:20.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.705" endtime="20201117 14:48:21.040"></status>
</kw>
<msg timestamp="20201117 14:48:21.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045263931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045384806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.701" endtime="20201117 14:48:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045263931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045384806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.049" endtime="20201117 14:48:21.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.068" endtime="20201117 14:48:21.072"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.694" endtime="20201117 14:48:21.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.690" endtime="20201117 14:48:21.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:21.085" level="INFO">${RESULT} = [{'time': 0.045384806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012087499999999946, 'source_diff': 0.00012087499999999946}, {'time': 0.045513111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:21.077" endtime="20201117 14:48:21.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:21.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:21.087" endtime="20201117 14:48:21.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.126" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:48:21.123" endtime="20201117 14:48:21.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.131" level="INFO">VALUE: [0.00012087499999999946, 0.00012098600000000348, 0.00012098599999999654, 0.00012055500000000136, 0.00012137499999999996, 0.00012023600000000273, 0.0001206249999999992, 0.00012013899999999827, 0.00012016699999999741, 0.00012154199999999532, 0.00012079199999999457, 0.00012079100000000204, 0.00012094399999999783, 0.00012052800000000169, 0.00012002800000000119, 0.00012152800000000269, 0.00012077699999999553, 0.00012047299999999594, 0.0001207500000000028, 0.00012186099999999395, 0.00012052799999999475, 0.00012038899999999852, 0.00012034699999999982, 0.00012061099999999964, 0.00012029199999999407, 0.00012026400000000187, 0.00012037499999999896, 0.00012005600000000033, 0.00012084700000000032, 0.00012102700000000272, 0.00012120799999999765, 0.00012030600000000058, 0.00012097200000000391, 0.00012079200000000151, 0.00012099999999999611, 0.00012093099999999773, 0.00012097199999999697, 0.00012042999999999776, 0.00012098600000000348, 0.00012127800000000244, 0.00012120799999999765, 0.00012092999999999826, 0.0001212500000000033, 0.00012076399999999543, 0.0001204300000000047, 0.00012093099999999773, 0.00012068100000000442, 0.00012061099999999964, 0.00012040200000000556, 0.00012009699999999957]</msg>
<status status="PASS" starttime="20201117 14:48:21.128" endtime="20201117 14:48:21.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.116" endtime="20201117 14:48:21.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.140" endtime="20201117 14:48:21.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:21.148" endtime="20201117 14:48:21.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.144" endtime="20201117 14:48:21.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.135" endtime="20201117 14:48:21.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.631" endtime="20201117 14:48:21.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.627" endtime="20201117 14:48:21.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.626" endtime="20201117 14:48:21.174"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.180" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.201" endtime="20201117 14:48:21.222"></status>
</kw>
<msg timestamp="20201117 14:48:21.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.198" endtime="20201117 14:48:21.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.225" endtime="20201117 14:48:21.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.231" endtime="20201117 14:48:21.235"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.191" endtime="20201117 14:48:21.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.185" endtime="20201117 14:48:21.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.255" endtime="20201117 14:48:21.590"></status>
</kw>
<msg timestamp="20201117 14:48:21.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045325681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.251" endtime="20201117 14:48:21.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045325681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.600" endtime="20201117 14:48:21.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.618" endtime="20201117 14:48:21.622"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.244" endtime="20201117 14:48:21.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.240" endtime="20201117 14:48:21.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:21.635" level="INFO">${RESULT} = [{'time': 0.045325681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012116699999999841, 'source_diff': 0.00012116699999999841}, {'time': 0.045456028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:21.626" endtime="20201117 14:48:21.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:21.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:21.637" endtime="20201117 14:48:21.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.678" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:48:21.675" endtime="20201117 14:48:21.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.683" level="INFO">VALUE: [0.00012116699999999841, 0.00012188900000000003, 0.00012201399999999668, 0.00012108400000000047, 0.00012150000000000355, 0.00012115299999999884, 0.00012142999999999876, 0.0001212229999999967, 0.00012202800000000319, 0.00012118000000000545, 0.0001219579999999984, 0.0001215830000000015, 0.00012142999999999876, 0.00012174999999999686, 0.00012161100000000064, 0.00012204100000000329, 0.0001219579999999984, 0.00012151400000000312, 0.00012198599999999754, 0.00012170800000000509, 0.00012163899999999978, 0.00012101400000000262, 0.00012159700000000107, 0.00012291700000000017, 0.00012272200000000566, 0.00012181900000000218, 0.00012167999999999901, 0.00012141699999999866, 0.00012136100000000039, 0.00012272199999999872, 0.00012162499999999327, 0.00012156900000000193, 0.00012179200000000251, 0.00012180600000000208, 0.00012163899999999978, 0.0001224030000000001, 0.00012192999999999926, 0.00012204200000000276, 0.00012163899999999978, 0.00012177700000000347, 0.0001227229999999982, 0.0001217229999999972, 0.00012147199999999747, 0.00012201399999999668, 0.00012173599999999729, 0.00012222200000000516, 0.00012129100000000254, 0.0001213329999999943, 0.00012136100000000039, 0.00012201399999999668]</msg>
<status status="PASS" starttime="20201117 14:48:21.680" endtime="20201117 14:48:21.684"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.669" endtime="20201117 14:48:21.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.692" endtime="20201117 14:48:21.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:21.700" endtime="20201117 14:48:21.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.696" endtime="20201117 14:48:21.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.687" endtime="20201117 14:48:21.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.181" endtime="20201117 14:48:21.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.177" endtime="20201117 14:48:21.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.175" endtime="20201117 14:48:21.727"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.732" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.753" endtime="20201117 14:48:21.773"></status>
</kw>
<msg timestamp="20201117 14:48:21.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.750" endtime="20201117 14:48:21.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.777" endtime="20201117 14:48:21.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.784" endtime="20201117 14:48:21.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.743" endtime="20201117 14:48:21.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.737" endtime="20201117 14:48:21.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.807" endtime="20201117 14:48:22.139"></status>
</kw>
<msg timestamp="20201117 14:48:22.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045183639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.804" endtime="20201117 14:48:22.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045060958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045183639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.148" endtime="20201117 14:48:22.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.166" endtime="20201117 14:48:22.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.796" endtime="20201117 14:48:22.173"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.792" endtime="20201117 14:48:22.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.185" level="INFO">${RESULT} = [{'time': 0.045183639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012268099999999948, 'source_diff': 0.00012268099999999948}, {'time': 0.045312958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:22.176" endtime="20201117 14:48:22.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.214" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:22.187" endtime="20201117 14:48:22.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.225" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.223" endtime="20201117 14:48:22.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.230" level="INFO">VALUE: [0.00012268099999999948, 0.00012284700000000232, 0.00012230600000000258, 0.00012274999999999786, 0.0001225280000000037, 0.00012320799999999965, 0.00012277800000000394, 0.0001239030000000016, 0.0001235559999999969, 0.00012370800000000015, 0.0001228050000000036, 0.00012298599999999854, 0.00012377699999999853, 0.00012255600000000283, 0.00012251400000000412, 0.00012230499999999617, 0.00012263900000000078, 0.0001227920000000035, 0.0001225280000000037, 0.00012238900000000053, 0.00012237500000000096, 0.00012286100000000189, 0.00012241699999999966, 0.00012258299999999556, 0.0001235280000000047, 0.00012304199999999682, 0.00012265300000000035, 0.00012208399999999453, 0.00012237500000000096, 0.000122083000000002, 0.00012291700000000017, 0.00012251400000000412, 0.00012286100000000189, 0.00012279199999999657, 0.00012279199999999657, 0.0001227909999999971, 0.0001224030000000001, 0.00012265300000000035, 0.0001222909999999966, 0.00012251399999999718, 0.00012387500000000246, 0.0001225280000000037, 0.00012248600000000498, 0.00012268, 0.00012268, 0.00012344400000000033, 0.00012255600000000283, 0.00012298599999999854, 0.00012237500000000096, 0.0001230129999999982]</msg>
<status status="PASS" starttime="20201117 14:48:22.227" endtime="20201117 14:48:22.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.216" endtime="20201117 14:48:22.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.239" endtime="20201117 14:48:22.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.247" endtime="20201117 14:48:22.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.243" endtime="20201117 14:48:22.271"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.235" endtime="20201117 14:48:22.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.733" endtime="20201117 14:48:22.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.729" endtime="20201117 14:48:22.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.727" endtime="20201117 14:48:22.274"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.279" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.302" endtime="20201117 14:48:22.322"></status>
</kw>
<msg timestamp="20201117 14:48:22.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.298" endtime="20201117 14:48:22.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.325" endtime="20201117 14:48:22.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.331" endtime="20201117 14:48:22.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.291" endtime="20201117 14:48:22.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.285" endtime="20201117 14:48:22.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.354" endtime="20201117 14:48:22.688"></status>
</kw>
<msg timestamp="20201117 14:48:22.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045878167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.351" endtime="20201117 14:48:22.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045878167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046001222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.697" endtime="20201117 14:48:22.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.715" endtime="20201117 14:48:22.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.344" endtime="20201117 14:48:22.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.339" endtime="20201117 14:48:22.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.733" level="INFO">${RESULT} = [{'time': 0.046001222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012305500000000386, 'source_diff': 0.00012305500000000386}, {'time': 0.046133542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:22.724" endtime="20201117 14:48:22.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.762" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:22.735" endtime="20201117 14:48:22.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.773" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.771" endtime="20201117 14:48:22.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.778" level="INFO">VALUE: [0.00012305500000000386, 0.0001232359999999988, 0.00012379199999999757, 0.000124568999999998, 0.00012373600000000623, 0.0001237359999999993, 0.00012348599999999904, 0.00012365300000000135, 0.00012472200000000072, 0.00012488800000000355, 0.00012320799999999965, 0.00012390299999999466, 0.00012395899999999987, 0.00012359699999999613, 0.00012351399999999818, 0.0001233050000000041, 0.00012384699999999638, 0.00012351399999999818, 0.00012455600000000483, 0.0001234449999999998, 0.00012398599999999954, 0.0001234030000000011, 0.00012376400000000537, 0.00012380499999999767, 0.00012340299999999416, 0.000123777999999998, 0.00012463900000000278, 0.00012343100000000023, 0.00012372300000000613, 0.00012318099999999998, 0.00012391700000000117, 0.00012368100000000048, 0.00012386100000000289, 0.00012398599999999954, 0.00012361100000000264, 0.0001238050000000046, 0.00012330600000000358, 0.00012324999999999836, 0.00012469400000000158, 0.00012365200000000187, 0.00012458299999999756, 0.00012420800000000065, 0.0001236109999999957, 0.0001231250000000017, 0.0001234449999999998, 0.000123292000000004, 0.00012372199999999972, 0.00012358299999999656, 0.00012422200000000022, 0.00012397299999999944]</msg>
<status status="PASS" starttime="20201117 14:48:22.775" endtime="20201117 14:48:22.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.764" endtime="20201117 14:48:22.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.787" endtime="20201117 14:48:22.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.796" endtime="20201117 14:48:22.818"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.791" endtime="20201117 14:48:22.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.783" endtime="20201117 14:48:22.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.281" endtime="20201117 14:48:22.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.276" endtime="20201117 14:48:22.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.275" endtime="20201117 14:48:22.823"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.849" endtime="20201117 14:48:22.870"></status>
</kw>
<msg timestamp="20201117 14:48:22.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.846" endtime="20201117 14:48:22.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.873" endtime="20201117 14:48:22.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.879" endtime="20201117 14:48:22.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.839" endtime="20201117 14:48:22.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.833" endtime="20201117 14:48:22.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.903" endtime="20201117 14:48:23.236"></status>
</kw>
<msg timestamp="20201117 14:48:23.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045087306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.899" endtime="20201117 14:48:23.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045087306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045212917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.245" endtime="20201117 14:48:23.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.263" endtime="20201117 14:48:23.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.892" endtime="20201117 14:48:23.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.887" endtime="20201117 14:48:23.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.282" level="INFO">${RESULT} = [{'time': 0.045212917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001256109999999977, 'source_diff': 0.0001256109999999977}, {'time': 0.045348194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:23.273" endtime="20201117 14:48:23.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:23.284" endtime="20201117 14:48:23.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.322" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.320" endtime="20201117 14:48:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.327" level="INFO">VALUE: [0.0001256109999999977, 0.00012476299999999996, 0.0001246380000000033, 0.00012445900000000037, 0.00012497199999999403, 0.0001250000000000001, 0.0001250000000000001, 0.00012486199999999642, 0.00012491700000000217, 0.00012474999999999986, 0.000124777999999999, 0.0001243329999999973, 0.00012416700000000142, 0.00012405500000000486, 0.00012424999999999936, 0.0001250559999999984, 0.00012406900000000443, 0.0001248199999999977, 0.00012495799999999446, 0.00012495799999999446, 0.00012438900000000253, 0.0001242779999999985, 0.000124292000000005, 0.000124568999999998, 0.00012427700000000597, 0.00012451399999999918, 0.00012497200000000097, 0.00012441700000000167, 0.0001245700000000044, 0.00012466700000000192, 0.00012445900000000037, 0.00012434699999999688, 0.0001244450000000008, 0.00012505499999999892, 0.00012495900000000087, 0.00012405499999999792, 0.0001242359999999998, 0.0001244030000000021, 0.00012458400000000397, 0.0001249580000000014, 0.00012430600000000458, 0.00012498600000000054, 0.00012501399999999968, 0.00012408399999999653, 0.00012408299999999706, 0.00012468100000000149, 0.0001249450000000013, 0.00012416600000000194, 0.00012525000000000036, 0.00012481899999999824]</msg>
<status status="PASS" starttime="20201117 14:48:23.324" endtime="20201117 14:48:23.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.313" endtime="20201117 14:48:23.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.337" endtime="20201117 14:48:23.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.345" endtime="20201117 14:48:23.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.341" endtime="20201117 14:48:23.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.332" endtime="20201117 14:48:23.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.829" endtime="20201117 14:48:23.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.825" endtime="20201117 14:48:23.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.824" endtime="20201117 14:48:23.372"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.377" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.399" endtime="20201117 14:48:23.419"></status>
</kw>
<msg timestamp="20201117 14:48:23.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.395" endtime="20201117 14:48:23.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.422" endtime="20201117 14:48:23.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.428" endtime="20201117 14:48:23.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.388" endtime="20201117 14:48:23.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.382" endtime="20201117 14:48:23.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.451" endtime="20201117 14:48:23.786"></status>
</kw>
<msg timestamp="20201117 14:48:23.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045215403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.448" endtime="20201117 14:48:23.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045215403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.795" endtime="20201117 14:48:23.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.813" endtime="20201117 14:48:23.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.441" endtime="20201117 14:48:23.819"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.436" endtime="20201117 14:48:23.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.830" level="INFO">${RESULT} = [{'time': 0.045340778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012537499999999702, 'source_diff': 0.00012537499999999702}, {'time': 0.045477167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:23.822" endtime="20201117 14:48:23.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:23.832" endtime="20201117 14:48:23.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.873" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.871" endtime="20201117 14:48:23.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.883" level="INFO">VALUE: [0.00012537499999999702, 0.00012541699999999573, 0.0001259580000000024, 0.0001260689999999995, 0.00012586100000000489, 0.00012513900000000328, 0.0001262360000000018, 0.00012575000000000086, 0.0001253199999999982, 0.000125778, 0.000125778, 0.0001261109999999982, 0.00012547300000000094, 0.0001256250000000042, 0.0001258199999999987, 0.0001260559999999994, 0.00012538900000000353, 0.00012544499999999487, 0.00012583399999999828, 0.0001252779999999995, 0.00012593000000000326, 0.0001254580000000019, 0.00012658299999999956, 0.00012555499999999942, 0.00012525000000000036, 0.00012695799999999646, 0.00012655500000000042, 0.00012598600000000154, 0.00012608299999999906, 0.00012545900000000137, 0.00012594499999999537, 0.00012519400000000208, 0.0001258329999999988, 0.00012518099999999505, 0.00012576400000000043, 0.000125292000000006, 0.00012601400000000068, 0.0001260559999999994, 0.00012575000000000086, 0.00012601400000000068, 0.0001259450000000023, 0.0001264580000000029, 0.0001256109999999977, 0.00012583300000000575, 0.00012555499999999942, 0.00012558400000000497, 0.0001258199999999987, 0.00012544400000000233, 0.00012552799999999975, 0.00012691699999999723]</msg>
<status status="PASS" starttime="20201117 14:48:23.875" endtime="20201117 14:48:23.884"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.864" endtime="20201117 14:48:23.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.892" endtime="20201117 14:48:23.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.901" endtime="20201117 14:48:23.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.896" endtime="20201117 14:48:23.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.888" endtime="20201117 14:48:23.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.378" endtime="20201117 14:48:23.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.374" endtime="20201117 14:48:23.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.373" endtime="20201117 14:48:23.927"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.932" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.955" endtime="20201117 14:48:23.976"></status>
</kw>
<msg timestamp="20201117 14:48:23.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.952" endtime="20201117 14:48:23.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.979" endtime="20201117 14:48:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.985" endtime="20201117 14:48:23.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.944" endtime="20201117 14:48:23.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.938" endtime="20201117 14:48:23.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.009" endtime="20201117 14:48:24.341"></status>
</kw>
<msg timestamp="20201117 14:48:24.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046455833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046582764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.006" endtime="20201117 14:48:24.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046455833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046582764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.350" endtime="20201117 14:48:24.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.368" endtime="20201117 14:48:24.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.998" endtime="20201117 14:48:24.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.994" endtime="20201117 14:48:24.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.387" level="INFO">${RESULT} = [{'time': 0.046582764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001269309999999968, 'source_diff': 0.0001269309999999968}, {'time': 0.046719111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:24.378" endtime="20201117 14:48:24.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:24.389" endtime="20201117 14:48:24.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.428" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.425" endtime="20201117 14:48:24.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.433" level="INFO">VALUE: [0.0001269309999999968, 0.00012725000000000236, 0.00012615300000000385, 0.00012709699999999963, 0.00012673700000000176, 0.00012679200000000057, 0.00012636099999999845, 0.00012622199999999528, 0.000126778000000001, 0.00012626400000000093, 0.0001266529999999974, 0.00012705500000000092, 0.00012672200000000272, 0.0001264580000000029, 0.00012704100000000135, 0.00012691699999999723, 0.000126165999999997, 0.000126165999999997, 0.00012669399999999664, 0.00012663899999999784, 0.00012687499999999852, 0.0001271529999999979, 0.00012742999999999782, 0.00012662499999999827, 0.00012668099999999655, 0.00012663899999999784, 0.00012645799999999596, 0.00012640299999999716, 0.00012630500000000017, 0.0001265559999999999, 0.00012675000000000186, 0.00012640299999999716, 0.00012724999999999542, 0.00012651400000000118, 0.00012719500000000356, 0.00012776400000000243, 0.00012631899999999974, 0.0001263329999999993, 0.0001273889999999986, 0.00012676400000000143, 0.00012675000000000186, 0.00012704200000000082, 0.00012602800000000025, 0.0001270560000000004, 0.00012695799999999646, 0.0001270000000000021, 0.0001269309999999968, 0.0001268889999999981, 0.00012612499999999777, 0.0001266109999999987]</msg>
<status status="PASS" starttime="20201117 14:48:24.430" endtime="20201117 14:48:24.434"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.419" endtime="20201117 14:48:24.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.442" endtime="20201117 14:48:24.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:24.450" endtime="20201117 14:48:24.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.446" endtime="20201117 14:48:24.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.437" endtime="20201117 14:48:24.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.934" endtime="20201117 14:48:24.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.930" endtime="20201117 14:48:24.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.928" endtime="20201117 14:48:24.477"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.482" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.503" endtime="20201117 14:48:24.524"></status>
</kw>
<msg timestamp="20201117 14:48:24.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.500" endtime="20201117 14:48:24.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.527" endtime="20201117 14:48:24.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.533" endtime="20201117 14:48:24.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.493" endtime="20201117 14:48:24.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.487" endtime="20201117 14:48:24.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.556" endtime="20201117 14:48:24.890"></status>
</kw>
<msg timestamp="20201117 14:48:24.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045076625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.553" endtime="20201117 14:48:24.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045076625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.899" endtime="20201117 14:48:24.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.918" endtime="20201117 14:48:24.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.546" endtime="20201117 14:48:24.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.541" endtime="20201117 14:48:24.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.935" level="INFO">${RESULT} = [{'time': 0.045204167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012754200000000132, 'source_diff': 0.00012754200000000132}, {'time': 0.045336514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:24.926" endtime="20201117 14:48:24.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:24.937" endtime="20201117 14:48:24.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.976" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.973" endtime="20201117 14:48:24.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.982" level="INFO">VALUE: [0.00012754200000000132, 0.00012754200000000132, 0.00012726400000000193, 0.00012856899999999505, 0.00012792999999999832, 0.00012798600000000354, 0.0001274439999999974, 0.00012741599999999825, 0.00012767999999999807, 0.0001276109999999997, 0.00012713799999999886, 0.00012744499999999687, 0.000127569000000001, 0.00012736099999999945, 0.00012734699999999988, 0.0001284030000000061, 0.00012766699999999798, 0.0001280690000000015, 0.00012799999999999617, 0.0001280560000000014, 0.00012804200000000182, 0.0001279309999999978, 0.00012742999999999782, 0.00012744499999999687, 0.00012713899999999834, 0.00012781900000000124, 0.00012709699999999963, 0.00012727700000000203, 0.00012874999999999692, 0.0001280279999999953, 0.0001276659999999985, 0.00012773599999999635, 0.00012727799999999456, 0.00012792999999999832, 0.0001276109999999997, 0.00012758400000000003, 0.0001280279999999953, 0.0001274439999999974, 0.00012713899999999834, 0.0001271109999999992, 0.00012804200000000182, 0.00012708300000000006, 0.00012719500000000356, 0.00012801399999999574, 0.0001284309999999983, 0.0001275560000000009, 0.0001272230000000027, 0.00012718099999999705, 0.00012757000000000046, 0.0001271800000000045]</msg>
<status status="PASS" starttime="20201117 14:48:24.978" endtime="20201117 14:48:24.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.966" endtime="20201117 14:48:24.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.991" endtime="20201117 14:48:24.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.000" endtime="20201117 14:48:25.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.995" endtime="20201117 14:48:25.024"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.986" endtime="20201117 14:48:25.025"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.483" endtime="20201117 14:48:25.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.479" endtime="20201117 14:48:25.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.478" endtime="20201117 14:48:25.027"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.032" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.054" endtime="20201117 14:48:25.074"></status>
</kw>
<msg timestamp="20201117 14:48:25.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.050" endtime="20201117 14:48:25.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.077" endtime="20201117 14:48:25.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.084" endtime="20201117 14:48:25.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.043" endtime="20201117 14:48:25.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.037" endtime="20201117 14:48:25.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.108" endtime="20201117 14:48:25.439"></status>
</kw>
<msg timestamp="20201117 14:48:25.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045493403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045621667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.104" endtime="20201117 14:48:25.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045493403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045621667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.448" endtime="20201117 14:48:25.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.466" endtime="20201117 14:48:25.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.096" endtime="20201117 14:48:25.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.092" endtime="20201117 14:48:25.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:25.485" level="INFO">${RESULT} = [{'time': 0.045621667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000128263999999996, 'source_diff': 0.000128263999999996}, {'time': 0.045757014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:25.476" endtime="20201117 14:48:25.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:25.514" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:25.487" endtime="20201117 14:48:25.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.525" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:48:25.523" endtime="20201117 14:48:25.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.531" level="INFO">VALUE: [0.000128263999999996, 0.00012905599999999545, 0.00012862500000000027, 0.00012808400000000053, 0.00012830500000000217, 0.00012841599999999925, 0.00012881999999999477, 0.0001287360000000043, 0.00012876299999999702, 0.0001285409999999959, 0.00012847199999999753, 0.00012924999999999742, 0.0001295279999999968, 0.00012816699999999848, 0.00012862500000000027, 0.00012858300000000156, 0.00012833399999999384, 0.00012855500000000242, 0.00012891699999999923, 0.00012822200000000422, 0.00012869399999999864, 0.00012849999999999667, 0.0001288890000000001, 0.0001288200000000017, 0.00012895799999999846, 0.00012880500000000267, 0.00012855500000000242, 0.00012818100000000499, 0.00012904100000000335, 0.00012848600000000404, 0.00012923699999999733, 0.0001299439999999999, 0.00012859700000000113, 0.00012905500000000292, 0.00012830500000000217, 0.00012836100000000045, 0.0001282780000000025, 0.00012851399999999624, 0.0001284859999999971, 0.00012879099999999616, 0.00012854100000000285, 0.00012844499999999787, 0.00012845799999999796, 0.0001285409999999959, 0.00012845900000000438, 0.0001289859999999976, 0.00012895799999999846, 0.0001285279999999958, 0.00012975000000000486, 0.00012902800000000325]</msg>
<status status="PASS" starttime="20201117 14:48:25.528" endtime="20201117 14:48:25.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.516" endtime="20201117 14:48:25.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.539" endtime="20201117 14:48:25.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.548" endtime="20201117 14:48:25.569"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.543" endtime="20201117 14:48:25.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.535" endtime="20201117 14:48:25.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.033" endtime="20201117 14:48:25.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.029" endtime="20201117 14:48:25.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.028" endtime="20201117 14:48:25.574"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.579" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.601" endtime="20201117 14:48:25.621"></status>
</kw>
<msg timestamp="20201117 14:48:25.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.598" endtime="20201117 14:48:25.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.625" endtime="20201117 14:48:25.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.632" endtime="20201117 14:48:25.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.591" endtime="20201117 14:48:25.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.585" endtime="20201117 14:48:25.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.655" endtime="20201117 14:48:25.990"></status>
</kw>
<msg timestamp="20201117 14:48:25.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045079125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045209583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.652" endtime="20201117 14:48:25.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045079125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045209583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.999" endtime="20201117 14:48:26.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.018" endtime="20201117 14:48:26.022"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.645" endtime="20201117 14:48:26.023"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.640" endtime="20201117 14:48:26.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.036" level="INFO">${RESULT} = [{'time': 0.045209583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013045799999999996, 'source_diff': 0.00013045799999999996}, {'time': 0.045348972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:26.027" endtime="20201117 14:48:26.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:26.038" endtime="20201117 14:48:26.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.079" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.077" endtime="20201117 14:48:26.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.084" level="INFO">VALUE: [0.00013045799999999996, 0.00013022199999999928, 0.00012919499999999862, 0.0001296530000000004, 0.00012947199999999853, 0.00012944499999999887, 0.00013083299999999687, 0.00013058300000000356, 0.0001297360000000053, 0.0001309310000000008, 0.00012987500000000152, 0.00012986200000000142, 0.0001296530000000004, 0.0001297639999999975, 0.00012976300000000496, 0.00012995799999999946, 0.00012945799999999896, 0.0001295560000000029, 0.00012963900000000084, 0.0001297910000000041, 0.00012993000000000032, 0.00012984700000000238, 0.00012909700000000163, 0.00012933299999999537, 0.00013062500000000227, 0.0001296389999999939, 0.00012991700000000023, 0.00012981999999999577, 0.00012934800000000135, 0.0001296530000000004, 0.00013024999999999842, 0.00012937500000000102, 0.00012936100000000145, 0.0001295980000000016, 0.00012999999999999817, 0.00012912500000000077, 0.0001296530000000004, 0.00012972199999999878, 0.0001298200000000027, 0.00013009700000000263, 0.00012991700000000023, 0.0001299859999999986, 0.00012948600000000504, 0.00012941600000000025, 0.00012959700000000213, 0.00012945799999999896, 0.00012931999999999527, 0.00013008300000000306, 0.00012997200000000597, 0.00012956899999999605]</msg>
<status status="PASS" starttime="20201117 14:48:26.081" endtime="20201117 14:48:26.085"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.070" endtime="20201117 14:48:26.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.093" endtime="20201117 14:48:26.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.101" endtime="20201117 14:48:26.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.097" endtime="20201117 14:48:26.125"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.089" endtime="20201117 14:48:26.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.581" endtime="20201117 14:48:26.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.577" endtime="20201117 14:48:26.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.575" endtime="20201117 14:48:26.128"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.133" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.155" endtime="20201117 14:48:26.176"></status>
</kw>
<msg timestamp="20201117 14:48:26.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.152" endtime="20201117 14:48:26.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.179" endtime="20201117 14:48:26.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.185" endtime="20201117 14:48:26.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.145" endtime="20201117 14:48:26.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.138" endtime="20201117 14:48:26.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.209" endtime="20201117 14:48:26.541"></status>
</kw>
<msg timestamp="20201117 14:48:26.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045936125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.205" endtime="20201117 14:48:26.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045805486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045936125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.550" endtime="20201117 14:48:26.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.568" endtime="20201117 14:48:26.574"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.198" endtime="20201117 14:48:26.575"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.193" endtime="20201117 14:48:26.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.587" level="INFO">${RESULT} = [{'time': 0.045936125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013063900000000184, 'source_diff': 0.00013063900000000184}, {'time': 0.046072458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:26.578" endtime="20201117 14:48:26.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.616" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:26.589" endtime="20201117 14:48:26.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.627" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.625" endtime="20201117 14:48:26.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.633" level="INFO">VALUE: [0.00013063900000000184, 0.00013047199999999953, 0.00013045799999999996, 0.0001303200000000032, 0.00013022299999999876, 0.00013043000000000082, 0.00013030600000000364, 0.00013068100000000055, 0.00013087500000000252, 0.00013061099999999576, 0.0001307080000000002, 0.00013073599999999935, 0.00013061099999999576, 0.00013058299999999662, 0.0001305969999999962, 0.00013040200000000168, 0.00013193000000000232, 0.00013065299999999447, 0.00013174999999999992, 0.0001306530000000014, 0.00013027799999999756, 0.00013061200000000217, 0.0001309310000000008, 0.0001315839999999971, 0.0001305560000000039, 0.00013062499999999533, 0.00013027799999999756, 0.00013051399999999824, 0.00013069500000000012, 0.00013108300000000406, 0.00013188899999999615, 0.0001306530000000014, 0.00013155599999999795, 0.0001305409999999979, 0.00013030499999999723, 0.00013007000000000296, 0.0001300560000000034, 0.00013063900000000184, 0.0001305839999999961, 0.00013093000000000132, 0.00013083299999999687, 0.00013099999999999917, 0.0001302079999999997, 0.00013095800000000046, 0.00013045899999999944, 0.00013112499999999583, 0.00013034800000000235, 0.0001303059999999967, 0.00013156899999999805, 0.00013054200000000432]</msg>
<status status="PASS" starttime="20201117 14:48:26.630" endtime="20201117 14:48:26.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.618" endtime="20201117 14:48:26.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.641" endtime="20201117 14:48:26.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.650" endtime="20201117 14:48:26.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.645" endtime="20201117 14:48:26.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.637" endtime="20201117 14:48:26.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.134" endtime="20201117 14:48:26.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.131" endtime="20201117 14:48:26.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.129" endtime="20201117 14:48:26.677"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.682" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.704" endtime="20201117 14:48:26.724"></status>
</kw>
<msg timestamp="20201117 14:48:26.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.700" endtime="20201117 14:48:26.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.727" endtime="20201117 14:48:26.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.734" endtime="20201117 14:48:26.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.693" endtime="20201117 14:48:26.739"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.687" endtime="20201117 14:48:26.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.757" endtime="20201117 14:48:27.091"></status>
</kw>
<msg timestamp="20201117 14:48:27.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045174292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.754" endtime="20201117 14:48:27.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045174292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.101" endtime="20201117 14:48:27.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.119" endtime="20201117 14:48:27.123"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.747" endtime="20201117 14:48:27.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.742" endtime="20201117 14:48:27.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.136" level="INFO">${RESULT} = [{'time': 0.045174292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013133399999999684, 'source_diff': 0.00013133399999999684}, {'time': 0.045310625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:27.127" endtime="20201117 14:48:27.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:27.138" endtime="20201117 14:48:27.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.176" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.174" endtime="20201117 14:48:27.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.182" level="INFO">VALUE: [0.00013133399999999684, 0.00013161099999999676, 0.00013193000000000232, 0.00013201300000000027, 0.00013154199999999838, 0.00013123599999999985, 0.00013115299999999497, 0.00013155599999999795, 0.0001315560000000049, 0.00013173600000000035, 0.00013291599999999681, 0.0001313330000000043, 0.0001314440000000014, 0.00013116700000000148, 0.00013174999999999992, 0.0001318890000000031, 0.00013179199999999863, 0.00013123599999999985, 0.00013158300000000456, 0.000131473, 0.00013179199999999863, 0.00013145800000000096, 0.0001313059999999977, 0.0001312090000000002, 0.00013136100000000345, 0.0001312780000000055, 0.00013124999999999942, 0.00013291700000000323, 0.000132264, 0.00013144500000000087, 0.00013237499999999708, 0.00013155599999999795, 0.00013241700000000273, 0.00013187500000000352, 0.00013145900000000044, 0.0001311110000000032, 0.0001319860000000006, 0.0001320969999999977, 0.00013200000000000017, 0.0001318330000000048, 0.00013122299999999976, 0.00013166699999999504, 0.00013209700000000463, 0.0001313479999999964, 0.00013137500000000302, 0.00013213800000000386, 0.0001317639999999995, 0.00013147200000000053, 0.00013244399999999545, 0.00013147200000000053]</msg>
<status status="PASS" starttime="20201117 14:48:27.179" endtime="20201117 14:48:27.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.167" endtime="20201117 14:48:27.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.191" endtime="20201117 14:48:27.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.200" endtime="20201117 14:48:27.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.195" endtime="20201117 14:48:27.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.187" endtime="20201117 14:48:27.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.684" endtime="20201117 14:48:27.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.680" endtime="20201117 14:48:27.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.678" endtime="20201117 14:48:27.226"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.253" endtime="20201117 14:48:27.273"></status>
</kw>
<msg timestamp="20201117 14:48:27.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.250" endtime="20201117 14:48:27.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.277" endtime="20201117 14:48:27.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.283" endtime="20201117 14:48:27.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.242" endtime="20201117 14:48:27.288"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.237" endtime="20201117 14:48:27.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.306" endtime="20201117 14:48:27.639"></status>
</kw>
<msg timestamp="20201117 14:48:27.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045007111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045139375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.303" endtime="20201117 14:48:27.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045007111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045139375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.648" endtime="20201117 14:48:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.666" endtime="20201117 14:48:27.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.296" endtime="20201117 14:48:27.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.291" endtime="20201117 14:48:27.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.685" level="INFO">${RESULT} = [{'time': 0.045139375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000132264, 'source_diff': 0.000132264}, {'time': 0.045277667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000132860999999...</msg>
<status status="PASS" starttime="20201117 14:48:27.676" endtime="20201117 14:48:27.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.714" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:27.687" endtime="20201117 14:48:27.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.725" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.723" endtime="20201117 14:48:27.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.731" level="INFO">VALUE: [0.000132264, 0.000132860999999998, 0.00013290299999999672, 0.00013227799999999956, 0.00013236100000000445, 0.0001323200000000052, 0.00013295799999999552, 0.00013229099999999966, 0.0001320969999999977, 0.00013323600000000185, 0.00013222200000000128, 0.00013295900000000194, 0.00013294500000000237, 0.0001325279999999998, 0.00013306899999999955, 0.00013229199999999913, 0.0001330280000000003, 0.00013227799999999956, 0.00013254199999999938, 0.0001330839999999986, 0.0001329860000000016, 0.00013262500000000427, 0.00013266700000000298, 0.0001324860000000011, 0.00013245800000000196, 0.00013273600000000135, 0.00013297200000000203, 0.00013295900000000194, 0.00013300000000000117, 0.00013218000000000257, 0.0001334440000000034, 0.00013275000000000092, 0.000132264, 0.0001324440000000024, 0.0001320839999999976, 0.00013265299999999647, 0.00013265299999999647, 0.00013254200000000632, 0.00013237499999999708, 0.0001328189999999993, 0.00013284699999999844, 0.00013230499999999923, 0.00013300000000000117, 0.00013240299999999622, 0.0001321809999999951, 0.00013295799999999552, 0.00013219500000000162, 0.00013218000000000257, 0.0001325279999999998, 0.00013240300000000316]</msg>
<status status="PASS" starttime="20201117 14:48:27.727" endtime="20201117 14:48:27.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.716" endtime="20201117 14:48:27.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.740" endtime="20201117 14:48:27.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.748" endtime="20201117 14:48:27.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.743" endtime="20201117 14:48:27.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.735" endtime="20201117 14:48:27.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.233" endtime="20201117 14:48:27.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.229" endtime="20201117 14:48:27.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.227" endtime="20201117 14:48:27.774"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.801" endtime="20201117 14:48:27.822"></status>
</kw>
<msg timestamp="20201117 14:48:27.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.798" endtime="20201117 14:48:27.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.825" endtime="20201117 14:48:27.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.831" endtime="20201117 14:48:27.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.791" endtime="20201117 14:48:27.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.785" endtime="20201117 14:48:27.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.855" endtime="20201117 14:48:28.191"></status>
</kw>
<msg timestamp="20201117 14:48:28.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045062722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.851" endtime="20201117 14:48:28.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045062722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045195972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.200" endtime="20201117 14:48:28.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.218" endtime="20201117 14:48:28.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.844" endtime="20201117 14:48:28.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.839" endtime="20201117 14:48:28.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.235" level="INFO">${RESULT} = [{'time': 0.045195972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013325000000000142, 'source_diff': 0.00013325000000000142}, {'time': 0.045337278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:28.226" endtime="20201117 14:48:28.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.268" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:28.238" endtime="20201117 14:48:28.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.279" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.277" endtime="20201117 14:48:28.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.284" level="INFO">VALUE: [0.00013325000000000142, 0.00013441700000000473, 0.00013380500000000073, 0.00013312500000000477, 0.00013475000000000292, 0.00013443099999999736, 0.00013373600000000235, 0.00013309700000000563, 0.00013372200000000278, 0.00013362499999999833, 0.00013379200000000063, 0.00013320799999999577, 0.00013365299999999747, 0.00013442999999999788, 0.00013408300000000012, 0.0001333189999999998, 0.00013369499999999618, 0.0001331809999999961, 0.0001334719999999956, 0.00013347200000000253, 0.00013376300000000202, 0.00013317999999999663, 0.00013386199999999848, 0.00013355599999999995, 0.00013426399999999505, 0.00013395799999999652, 0.000133264000000001, 0.00013495900000000394, 0.00013349999999999473, 0.0001336939999999967, 0.00013356900000000005, 0.00013316599999999706, 0.00013336100000000545, 0.00013444399999999745, 0.00013340199999999774, 0.0001335280000000008, 0.00013343099999999636, 0.00013323700000000133, 0.00013351400000000124, 0.00013405600000000045, 0.0001335280000000008, 0.00013409799999999916, 0.0001335839999999991, 0.00013427800000000156, 0.00013334800000000535, 0.00013311099999999826, 0.0001340280000000013, 0.00013361099999999876, 0.00013354200000000038, 0.00013344500000000287]</msg>
<status status="PASS" starttime="20201117 14:48:28.281" endtime="20201117 14:48:28.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.270" endtime="20201117 14:48:28.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.293" endtime="20201117 14:48:28.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.301" endtime="20201117 14:48:28.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.297" endtime="20201117 14:48:28.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.288" endtime="20201117 14:48:28.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.781" endtime="20201117 14:48:28.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.777" endtime="20201117 14:48:28.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.775" endtime="20201117 14:48:28.328"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.354" endtime="20201117 14:48:28.375"></status>
</kw>
<msg timestamp="20201117 14:48:28.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.351" endtime="20201117 14:48:28.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.378" endtime="20201117 14:48:28.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.385" endtime="20201117 14:48:28.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.344" endtime="20201117 14:48:28.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.338" endtime="20201117 14:48:28.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.408" endtime="20201117 14:48:28.740"></status>
</kw>
<msg timestamp="20201117 14:48:28.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045149667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.405" endtime="20201117 14:48:28.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045149667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.749" endtime="20201117 14:48:28.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.768" endtime="20201117 14:48:28.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.397" endtime="20201117 14:48:28.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.393" endtime="20201117 14:48:28.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.787" level="INFO">${RESULT} = [{'time': 0.045149667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001347919999999947, 'source_diff': 0.0001347919999999947}, {'time': 0.045292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:48:28.778" endtime="20201117 14:48:28.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:28.789" endtime="20201117 14:48:28.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.827" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.825" endtime="20201117 14:48:28.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.832" level="INFO">VALUE: [0.0001347919999999947, 0.0001350139999999958, 0.00013481899999999436, 0.0001348060000000012, 0.00013497200000000403, 0.00013451400000000224, 0.00013454199999999444, 0.0001345280000000018, 0.00013407000000000002, 0.00013451400000000224, 0.00013408300000000012, 0.000134861, 0.00013438799999999917, 0.00013479200000000163, 0.00013434699999999994, 0.00013500000000000317, 0.0001350280000000023, 0.0001349719999999971, 0.00013469400000000464, 0.0001350280000000023, 0.00013466599999999856, 0.00013572199999999784, 0.00013505600000000145, 0.0001347919999999947, 0.00013497200000000403, 0.00013466699999999804, 0.00013465299999999847, 0.0001348890000000061, 0.00013416599999999806, 0.00013472199999999684, 0.00013411099999999926, 0.00013512499999999983, 0.00013476399999999555, 0.00013423599999999591, 0.00013575000000000392, 0.00013487499999999958, 0.00013494399999999795, 0.00013476399999999555, 0.0001346809999999976, 0.00013445799999999702, 0.0001348890000000061, 0.000134861, 0.00013450000000000267, 0.00013488899999999915, 0.0001345970000000002, 0.00013472200000000378, 0.00013504200000000188, 0.0001344719999999966, 0.000134861, 0.0001351389999999994]</msg>
<status status="PASS" starttime="20201117 14:48:28.829" endtime="20201117 14:48:28.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.818" endtime="20201117 14:48:28.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.841" endtime="20201117 14:48:28.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.849" endtime="20201117 14:48:28.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.845" endtime="20201117 14:48:28.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.836" endtime="20201117 14:48:28.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.334" endtime="20201117 14:48:28.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.330" endtime="20201117 14:48:28.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.329" endtime="20201117 14:48:28.876"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.881" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.903" endtime="20201117 14:48:28.923"></status>
</kw>
<msg timestamp="20201117 14:48:28.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.899" endtime="20201117 14:48:28.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.927" endtime="20201117 14:48:28.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.933" endtime="20201117 14:48:28.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.892" endtime="20201117 14:48:28.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.886" endtime="20201117 14:48:28.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.961" endtime="20201117 14:48:29.295"></status>
</kw>
<msg timestamp="20201117 14:48:29.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045265139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.953" endtime="20201117 14:48:29.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045265139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.304" endtime="20201117 14:48:29.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.322" endtime="20201117 14:48:29.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.946" endtime="20201117 14:48:29.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.941" endtime="20201117 14:48:29.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.339" level="INFO">${RESULT} = [{'time': 0.045265139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013597200000000503, 'source_diff': 0.00013597200000000503}, {'time': 0.045411486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:29.331" endtime="20201117 14:48:29.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.369" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:29.341" endtime="20201117 14:48:29.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.380" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.377" endtime="20201117 14:48:29.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.385" level="INFO">VALUE: [0.00013597200000000503, 0.00013566699999999904, 0.00013690200000000124, 0.00013640300000000022, 0.00013579099999999622, 0.0001362919999999962, 0.00013573600000000435, 0.0001351389999999994, 0.00013558399999999415, 0.00013587500000000058, 0.000136264000000004, 0.0001354310000000053, 0.00013534700000000094, 0.00013605599999999551, 0.00013642999999999988, 0.00013536199999999998, 0.00013583300000000187, 0.00013601400000000374, 0.00013513799999999992, 0.00013587500000000058, 0.00013604199999999594, 0.0001353190000000018, 0.000135958999999998, 0.00013506900000000155, 0.0001356389999999999, 0.00013544500000000487, 0.00013573599999999741, 0.00013512499999999983, 0.00013529099999999572, 0.00013554200000000238, 0.00013572199999999784, 0.00013599999999999723, 0.00013520799999999777, 0.0001351809999999981, 0.00013573599999999741, 0.00013695799999999952, 0.00013598599999999766, 0.0001366390000000009, 0.00013562500000000033, 0.0001359730000000045, 0.00013574999999999698, 0.00013554200000000238, 0.00013568000000000607, 0.0001359719999999981, 0.00013527800000000256, 0.00013583400000000134, 0.00013698700000000508, 0.00013593000000000632, 0.0001365139999999973, 0.0001358190000000023]</msg>
<status status="PASS" starttime="20201117 14:48:29.382" endtime="20201117 14:48:29.386"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.371" endtime="20201117 14:48:29.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.394" endtime="20201117 14:48:29.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.402" endtime="20201117 14:48:29.423"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.398" endtime="20201117 14:48:29.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.389" endtime="20201117 14:48:29.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.883" endtime="20201117 14:48:29.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.879" endtime="20201117 14:48:29.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.877" endtime="20201117 14:48:29.428"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.455" endtime="20201117 14:48:29.476"></status>
</kw>
<msg timestamp="20201117 14:48:29.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.452" endtime="20201117 14:48:29.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.479" endtime="20201117 14:48:29.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.486" endtime="20201117 14:48:29.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.445" endtime="20201117 14:48:29.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.439" endtime="20201117 14:48:29.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.510" endtime="20201117 14:48:29.843"></status>
</kw>
<msg timestamp="20201117 14:48:29.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045106139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045242486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.507" endtime="20201117 14:48:29.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045106139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045242486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.852" endtime="20201117 14:48:29.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.870" endtime="20201117 14:48:29.876"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.499" endtime="20201117 14:48:29.877"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.494" endtime="20201117 14:48:29.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.889" level="INFO">${RESULT} = [{'time': 0.045242486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000136346999999995, 'source_diff': 0.000136346999999995}, {'time': 0.045387889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:29.880" endtime="20201117 14:48:29.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:29.891" endtime="20201117 14:48:29.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.929" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.927" endtime="20201117 14:48:29.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.935" level="INFO">VALUE: [0.000136346999999995, 0.00013661100000000176, 0.00013645799999999902, 0.00013702799999999737, 0.00013698599999999866, 0.00013702799999999737, 0.00013662500000000133, 0.0001367640000000045, 0.0001369860000000056, 0.00013662500000000133, 0.00013665300000000047, 0.00013662500000000133, 0.00013637500000000108, 0.00013682000000000277, 0.00013619499999999868, 0.00013615299999999997, 0.00013666700000000004, 0.00013759800000000266, 0.00013686099999999507, 0.0001367919999999967, 0.00013640300000000022, 0.00013716700000000054, 0.00013640300000000022, 0.00013643099999999936, 0.0001370139999999978, 0.0001366809999999996, 0.00013674999999999798, 0.00013650000000000467, 0.0001366939999999997, 0.00013743100000000036, 0.00013637500000000108, 0.00013641600000000031, 0.00013708299999999618, 0.00013677800000000406, 0.00013651400000000424, 0.00013648599999999816, 0.00013612500000000083, 0.00013688900000000115, 0.00013647299999999807, 0.0001364169999999998, 0.00013665300000000047, 0.00013620799999999877, 0.00013794399999999402, 0.00013781899999999736, 0.00013668000000000013, 0.00013704199999999694, 0.00013766700000000104, 0.000136346999999995, 0.00013700000000000517, 0.0001371520000000015]</msg>
<status status="PASS" starttime="20201117 14:48:29.932" endtime="20201117 14:48:29.936"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.920" endtime="20201117 14:48:29.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.943" endtime="20201117 14:48:29.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.952" endtime="20201117 14:48:29.973"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.947" endtime="20201117 14:48:29.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.939" endtime="20201117 14:48:29.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.435" endtime="20201117 14:48:29.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.431" endtime="20201117 14:48:29.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.429" endtime="20201117 14:48:29.978"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.006" endtime="20201117 14:48:30.027"></status>
</kw>
<msg timestamp="20201117 14:48:30.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.002" endtime="20201117 14:48:30.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.030" endtime="20201117 14:48:30.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.036" endtime="20201117 14:48:30.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.995" endtime="20201117 14:48:30.042"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.989" endtime="20201117 14:48:30.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.060" endtime="20201117 14:48:30.395"></status>
</kw>
<msg timestamp="20201117 14:48:30.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046197139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046335194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.057" endtime="20201117 14:48:30.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046197139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046335194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.404" endtime="20201117 14:48:30.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.422" endtime="20201117 14:48:30.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.049" endtime="20201117 14:48:30.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.045" endtime="20201117 14:48:30.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.439" level="INFO">${RESULT} = [{'time': 0.046335194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013805500000000498, 'source_diff': 0.00013805500000000498}, {'time': 0.046482569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:30.431" endtime="20201117 14:48:30.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:30.441" endtime="20201117 14:48:30.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.482" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.480" endtime="20201117 14:48:30.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.488" level="INFO">VALUE: [0.00013805500000000498, 0.00013808300000000412, 0.00013752799999999787, 0.000137264000000005, 0.00013744499999999993, 0.00013740300000000122, 0.00013744499999999993, 0.00013804200000000488, 0.00013724999999999848, 0.0001374170000000008, 0.00013794500000000043, 0.00013744499999999993, 0.00013755599999999701, 0.0001373610000000025, 0.00013804199999999794, 0.00013779200000000463, 0.00013744400000000045, 0.0001373610000000025, 0.00013724999999999848, 0.00013790200000000225, 0.00013733300000000337, 0.00013811099999999632, 0.00013733299999999643, 0.00013712500000000183, 0.00013765300000000147, 0.00013731999999999633, 0.00013788900000000215, 0.00013737500000000208, 0.00013844400000000145, 0.00013844500000000093, 0.00013779200000000463, 0.0001375280000000048, 0.0001372919999999972, 0.00013758300000000362, 0.00013841599999999538, 0.0001373190000000038, 0.00013795800000000052, 0.00013750000000000567, 0.00013784700000000344, 0.0001373889999999947, 0.00013794500000000043, 0.00013755600000000395, 0.0001381249999999959, 0.0001376940000000007, 0.00013761100000000276, 0.00013793100000000086, 0.00013755600000000395, 0.00013829200000000513, 0.00013856999999999758, 0.00013729099999999772]</msg>
<status status="PASS" starttime="20201117 14:48:30.485" endtime="20201117 14:48:30.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.473" endtime="20201117 14:48:30.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.496" endtime="20201117 14:48:30.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.505" endtime="20201117 14:48:30.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.500" endtime="20201117 14:48:30.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.492" endtime="20201117 14:48:30.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.985" endtime="20201117 14:48:30.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.981" endtime="20201117 14:48:30.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.979" endtime="20201117 14:48:30.532"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.537" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.558" endtime="20201117 14:48:30.579"></status>
</kw>
<msg timestamp="20201117 14:48:30.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.555" endtime="20201117 14:48:30.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.583" endtime="20201117 14:48:30.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.589" endtime="20201117 14:48:30.593"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.548" endtime="20201117 14:48:30.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.542" endtime="20201117 14:48:30.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.612" endtime="20201117 14:48:30.944"></status>
</kw>
<msg timestamp="20201117 14:48:30.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045084708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045223181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.609" endtime="20201117 14:48:30.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045084708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045223181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.954" endtime="20201117 14:48:30.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.972" endtime="20201117 14:48:30.978"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.602" endtime="20201117 14:48:30.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.597" endtime="20201117 14:48:30.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.991" level="INFO">${RESULT} = [{'time': 0.045223181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013847300000000007, 'source_diff': 0.00013847300000000007}, {'time': 0.045372486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:30.982" endtime="20201117 14:48:30.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:31.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:30.993" endtime="20201117 14:48:31.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.031" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:31.029" endtime="20201117 14:48:31.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.037" level="INFO">VALUE: [0.00013847300000000007, 0.00013897199999999416, 0.00013855500000000548, 0.00013833299999999743, 0.00013995800000000252, 0.00013837500000000308, 0.00013827800000000556, 0.0001381249999999959, 0.00013809699999999675, 0.000138652000000003, 0.00013826399999999905, 0.00013873600000000041, 0.00013862500000000333, 0.00013904099999999947, 0.00013855499999999854, 0.00013822299999999982, 0.00013819500000000068, 0.00013895800000000152, 0.00013874999999999998, 0.00013845800000000102, 0.00013808399999999665, 0.0001389170000000023, 0.00013831999999999733, 0.00013845800000000102, 0.00013815299999999503, 0.0001387919999999987, 0.00013856900000000505, 0.00013826299999999958, 0.00013961100000000476, 0.00013837500000000308, 0.00013838900000000265, 0.00013866599999999563, 0.0001382919999999982, 0.0001381119999999958, 0.00013874999999999998, 0.00013931899999999886, 0.0001383889999999957, 0.00013900000000000023, 0.00013873600000000041, 0.0001385139999999993, 0.0001381940000000012, 0.000138861000000004, 0.0001384590000000005, 0.0001388190000000053, 0.000138861000000004, 0.00013902799999999937, 0.0001387919999999987, 0.00013819399999999427, 0.00013894399999999502, 0.00013849999999999973]</msg>
<status status="PASS" starttime="20201117 14:48:31.034" endtime="20201117 14:48:31.038"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.022" endtime="20201117 14:48:31.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.046" endtime="20201117 14:48:31.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:31.055" endtime="20201117 14:48:31.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.050" endtime="20201117 14:48:31.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.042" endtime="20201117 14:48:31.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.538" endtime="20201117 14:48:31.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.534" endtime="20201117 14:48:31.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.533" endtime="20201117 14:48:31.081"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.108" endtime="20201117 14:48:31.129"></status>
</kw>
<msg timestamp="20201117 14:48:31.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.105" endtime="20201117 14:48:31.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.132" endtime="20201117 14:48:31.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.139" endtime="20201117 14:48:31.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.097" endtime="20201117 14:48:31.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.092" endtime="20201117 14:48:31.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.162" endtime="20201117 14:48:31.495"></status>
</kw>
<msg timestamp="20201117 14:48:31.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045228069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045367778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.159" endtime="20201117 14:48:31.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045228069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045367778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.505" endtime="20201117 14:48:31.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.523" endtime="20201117 14:48:31.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.151" endtime="20201117 14:48:31.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.147" endtime="20201117 14:48:31.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:31.540" level="INFO">${RESULT} = [{'time': 0.045367778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001397089999999948, 'source_diff': 0.0001397089999999948}, {'time': 0.045518153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:31.531" endtime="20201117 14:48:31.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:31.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:31.542" endtime="20201117 14:48:31.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.581" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:31.578" endtime="20201117 14:48:31.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.586" level="INFO">VALUE: [0.0001397089999999948, 0.00013940299999999628, 0.0001407920000000007, 0.00013987500000000458, 0.0001396810000000026, 0.00013942999999999595, 0.0001399720000000021, 0.0001399170000000033, 0.00013954099999999997, 0.0001395140000000003, 0.00013955499999999954, 0.0001391940000000022, 0.00013954099999999997, 0.00013936099999999757, 0.00013995800000000252, 0.00013973600000000141, 0.00013947199999999466, 0.0001399170000000033, 0.0001391940000000022, 0.00013927700000000015, 0.00013940299999999628, 0.00013965299999999653, 0.00013991699999999635, 0.00014024999999999455, 0.00014008299999999918, 0.00014011099999999832, 0.0001393060000000057, 0.00013927799999999962, 0.0001393049999999993, 0.0001395140000000003, 0.0001406669999999971, 0.00013919500000000168, 0.0001400140000000008, 0.00014009799999999822, 0.00013987500000000458, 0.00013954199999999944, 0.00013913899999999646, 0.00013950000000000073, 0.00013990299999999678, 0.00014012500000000483, 0.00013940299999999628, 0.00014043000000000389, 0.00013912500000000383, 0.00013923600000000091, 0.00014056999999999958, 0.0001391810000000021, 0.00013984700000000544, 0.00013965300000000347, 0.00014002800000000037, 0.00014093099999999692]</msg>
<status status="PASS" starttime="20201117 14:48:31.583" endtime="20201117 14:48:31.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.571" endtime="20201117 14:48:31.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.595" endtime="20201117 14:48:31.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:31.604" endtime="20201117 14:48:31.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.599" endtime="20201117 14:48:31.627"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.591" endtime="20201117 14:48:31.628"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.088" endtime="20201117 14:48:31.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.084" endtime="20201117 14:48:31.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.082" endtime="20201117 14:48:31.630"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.635" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.657" endtime="20201117 14:48:31.678"></status>
</kw>
<msg timestamp="20201117 14:48:31.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.653" endtime="20201117 14:48:31.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:31.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:31.681" endtime="20201117 14:48:31.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.687" endtime="20201117 14:48:31.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.646" endtime="20201117 14:48:31.693"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.640" endtime="20201117 14:48:31.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:31.711" endtime="20201117 14:48:32.043"></status>
</kw>
<msg timestamp="20201117 14:48:32.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045118681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045260389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:31.707" endtime="20201117 14:48:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045118681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045260389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:32.053" endtime="20201117 14:48:32.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.071" endtime="20201117 14:48:32.076"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.700" endtime="20201117 14:48:32.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.695" endtime="20201117 14:48:32.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:32.090" level="INFO">${RESULT} = [{'time': 0.045260389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014170799999999734, 'source_diff': 0.00014170799999999734}, {'time': 0.045408847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:32.081" endtime="20201117 14:48:32.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:32.120" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:32.092" endtime="20201117 14:48:32.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.131" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:32.128" endtime="20201117 14:48:32.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.136" level="INFO">VALUE: [0.00014170799999999734, 0.00014154100000000197, 0.0001403889999999977, 0.00014113899999999846, 0.00014083299999999993, 0.00014043100000000336, 0.00014043100000000336, 0.0001411249999999989, 0.00014065299999999753, 0.00014073600000000241, 0.00014036099999999857, 0.00014045799999999609, 0.00014058299999999968, 0.00014059699999999925, 0.000140444999999996, 0.00014029100000000072, 0.00014181900000000136, 0.0001411249999999989, 0.00014098599999999573, 0.00014058399999999915, 0.000140346999999999, 0.0001402370000000014, 0.00014058399999999915, 0.0001409720000000031, 0.00014040300000000422, 0.0001411799999999977, 0.00014066599999999763, 0.00014023600000000191, 0.0001406799999999972, 0.00014036099999999857, 0.00014086099999999907, 0.0001401799999999967, 0.0001413339999999999, 0.00014090299999999778, 0.0001416669999999981, 0.0001411940000000042, 0.00014031899999999986, 0.0001418470000000005, 0.00014055600000000001, 0.00014076400000000155, 0.00014040299999999728, 0.00014145799999999709, 0.00014118099999999717, 0.00014045800000000302, 0.0001408469999999995, 0.00014073600000000241, 0.00014013799999999799, 0.00014019399999999627, 0.00014043100000000336, 0.00014063899999999796]</msg>
<status status="PASS" starttime="20201117 14:48:32.133" endtime="20201117 14:48:32.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.122" endtime="20201117 14:48:32.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.145" endtime="20201117 14:48:32.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:32.153" endtime="20201117 14:48:32.174"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.149" endtime="20201117 14:48:32.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.140" endtime="20201117 14:48:32.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.636" endtime="20201117 14:48:32.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.633" endtime="20201117 14:48:32.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:31.631" endtime="20201117 14:48:32.179"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.207" endtime="20201117 14:48:32.228"></status>
</kw>
<msg timestamp="20201117 14:48:32.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.203" endtime="20201117 14:48:32.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.232" endtime="20201117 14:48:32.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.238" endtime="20201117 14:48:32.242"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.196" endtime="20201117 14:48:32.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.190" endtime="20201117 14:48:32.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.262" endtime="20201117 14:48:32.597"></status>
</kw>
<msg timestamp="20201117 14:48:32.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046008306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046150153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:32.259" endtime="20201117 14:48:32.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046008306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046150153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:32.606" endtime="20201117 14:48:32.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.625" endtime="20201117 14:48:32.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.251" endtime="20201117 14:48:32.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.247" endtime="20201117 14:48:32.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:32.642" level="INFO">${RESULT} = [{'time': 0.046150153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001418470000000005, 'source_diff': 0.0001418470000000005}, {'time': 0.046302528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:32.633" endtime="20201117 14:48:32.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:32.674" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:32.644" endtime="20201117 14:48:32.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.685" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:32.683" endtime="20201117 14:48:32.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.690" level="INFO">VALUE: [0.0001418470000000005, 0.00014140300000000522, 0.00014140300000000522, 0.00014162500000000633, 0.00014201399999999587, 0.0001414720000000036, 0.00014202699999999596, 0.0001417219999999969, 0.00014213899999999946, 0.00014279199999999576, 0.0001416249999999994, 0.0001420969999999938, 0.0001421249999999999, 0.0001419170000000053, 0.00014123600000000291, 0.0001421249999999999, 0.00014213899999999946, 0.00014191599999999888, 0.00014165300000000547, 0.00014125000000000248, 0.00014198600000000366, 0.00014163899999999896, 0.0001418889999999992, 0.0001418889999999992, 0.00014175000000000298, 0.0001416940000000047, 0.00014127800000000162, 0.00014143000000000489, 0.00014179100000000222, 0.00014177800000000212, 0.0001412089999999963, 0.0001412920000000012, 0.00014143099999999742, 0.0001418340000000004, 0.00014180600000000126, 0.00014191599999999888, 0.00014172200000000384, 0.0001411810000000041, 0.00014154200000000144, 0.00014162500000000633, 0.0001418889999999992, 0.00014168000000000514, 0.00014150000000000273, 0.00014187499999999964, 0.00014208299999999424, 0.00014191599999999888, 0.000142832999999995, 0.00014179100000000222, 0.00014193100000000486, 0.00014281900000000236]</msg>
<status status="PASS" starttime="20201117 14:48:32.687" endtime="20201117 14:48:32.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.676" endtime="20201117 14:48:32.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.699" endtime="20201117 14:48:32.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:32.707" endtime="20201117 14:48:32.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.703" endtime="20201117 14:48:32.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.695" endtime="20201117 14:48:32.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.186" endtime="20201117 14:48:32.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.182" endtime="20201117 14:48:32.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.180" endtime="20201117 14:48:32.734"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.739" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.761" endtime="20201117 14:48:32.782"></status>
</kw>
<msg timestamp="20201117 14:48:32.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.757" endtime="20201117 14:48:32.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:32.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:32.785" endtime="20201117 14:48:32.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.791" endtime="20201117 14:48:32.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.750" endtime="20201117 14:48:32.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.744" endtime="20201117 14:48:32.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:32.815" endtime="20201117 14:48:33.148"></status>
</kw>
<msg timestamp="20201117 14:48:33.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:32.811" endtime="20201117 14:48:33.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045129333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:33.157" endtime="20201117 14:48:33.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.176" endtime="20201117 14:48:33.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.804" endtime="20201117 14:48:33.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.799" endtime="20201117 14:48:33.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:33.194" level="INFO">${RESULT} = [{'time': 0.045271708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014237500000000014, 'source_diff': 0.00014237500000000014}, {'time': 0.045422028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:33.186" endtime="20201117 14:48:33.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:33.224" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:33.196" endtime="20201117 14:48:33.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.235" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:33.232" endtime="20201117 14:48:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.240" level="INFO">VALUE: [0.00014237500000000014, 0.0001424720000000046, 0.00014258400000000115, 0.0001428050000000028, 0.00014279100000000322, 0.00014343099999999942, 0.00014276300000000408, 0.00014308299999999524, 0.00014258300000000168, 0.00014220799999999784, 0.0001423889999999997, 0.00014274999999999705, 0.00014252799999999594, 0.00014236100000000057, 0.00014219399999999827, 0.00014255599999999508, 0.00014266599999999963, 0.00014301399999999687, 0.00014241599999999938, 0.00014273600000000441, 0.00014348599999999823, 0.00014243099999999842, 0.0001421669999999986, 0.00014366600000000063, 0.0001428890000000002, 0.00014222200000000434, 0.00014255600000000201, 0.000142347000000001, 0.00014276399999999662, 0.00014287500000000064, 0.00014220900000000425, 0.0001428890000000002, 0.00014304100000000347, 0.00014284800000000097, 0.00014270900000000475, 0.00014241599999999938, 0.00014384699999999556, 0.00014245800000000503, 0.00014220900000000425, 0.0001422219999999974, 0.0001428890000000002, 0.0001427219999999979, 0.0001431250000000009, 0.00014261100000000082, 0.00014265299999999953, 0.00014291699999999935, 0.00014270800000000528, 0.00014302800000000337, 0.00014254099999999603, 0.00014258300000000168]</msg>
<status status="PASS" starttime="20201117 14:48:33.237" endtime="20201117 14:48:33.241"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.226" endtime="20201117 14:48:33.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.249" endtime="20201117 14:48:33.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:33.258" endtime="20201117 14:48:33.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.254" endtime="20201117 14:48:33.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.245" endtime="20201117 14:48:33.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.741" endtime="20201117 14:48:33.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.736" endtime="20201117 14:48:33.285"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:32.735" endtime="20201117 14:48:33.285"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.290" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.312" endtime="20201117 14:48:33.333"></status>
</kw>
<msg timestamp="20201117 14:48:33.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.309" endtime="20201117 14:48:33.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.336" endtime="20201117 14:48:33.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.343" endtime="20201117 14:48:33.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.301" endtime="20201117 14:48:33.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.295" endtime="20201117 14:48:33.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.367" endtime="20201117 14:48:33.700"></status>
</kw>
<msg timestamp="20201117 14:48:33.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045444861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045588597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:33.363" endtime="20201117 14:48:33.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045444861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045588597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:33.710" endtime="20201117 14:48:33.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.728" endtime="20201117 14:48:33.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.356" endtime="20201117 14:48:33.733"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.351" endtime="20201117 14:48:33.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:33.746" level="INFO">${RESULT} = [{'time': 0.045588597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014373599999999848, 'source_diff': 0.00014373599999999848}, {'time': 0.045739958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:33.737" endtime="20201117 14:48:33.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:33.775" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:33.748" endtime="20201117 14:48:33.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.786" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:33.784" endtime="20201117 14:48:33.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.792" level="INFO">VALUE: [0.00014373599999999848, 0.00014361099999999488, 0.0001438749999999947, 0.0001446670000000011, 0.00014494400000000102, 0.0001437089999999988, 0.00014413900000000146, 0.00014324999999999755, 0.00014383300000000293, 0.00014344399999999952, 0.00014374999999999805, 0.00014369499999999924, 0.00014356899999999617, 0.00014369499999999924, 0.00014322299999999788, 0.00014325000000000448, 0.00014412499999999495, 0.00014351399999999737, 0.00014388800000000174, 0.0001437219999999989, 0.00014340300000000028, 0.00014356899999999617, 0.00014358300000000268, 0.0001438470000000025, 0.00014352799999999694, 0.00014379100000000422, 0.00014408400000000265, 0.00014401399999999787, 0.00014345899999999856, 0.00014333300000000243, 0.00014326400000000405, 0.00014354099999999703, 0.00014373599999999848, 0.0001444999999999988, 0.00014448599999999923, 0.00014323599999999798, 0.000143444999999999, 0.00014412499999999495, 0.00014402799999999744, 0.00014497299999999963, 0.00014345799999999909, 0.00014402800000000437, 0.0001435270000000044, 0.00014470800000000034, 0.0001435549999999966, 0.00014497200000000016, 0.0001441250000000019, 0.0001440969999999958, 0.00014340300000000028, 0.0001438340000000024]</msg>
<status status="PASS" starttime="20201117 14:48:33.789" endtime="20201117 14:48:33.792"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.777" endtime="20201117 14:48:33.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.802" endtime="20201117 14:48:33.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:33.811" endtime="20201117 14:48:33.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.807" endtime="20201117 14:48:33.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.797" endtime="20201117 14:48:33.836"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.292" endtime="20201117 14:48:33.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.288" endtime="20201117 14:48:33.837"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.286" endtime="20201117 14:48:33.838"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.843" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.865" endtime="20201117 14:48:33.887"></status>
</kw>
<msg timestamp="20201117 14:48:33.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.862" endtime="20201117 14:48:33.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:33.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:33.890" endtime="20201117 14:48:33.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.896" endtime="20201117 14:48:33.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.855" endtime="20201117 14:48:33.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.848" endtime="20201117 14:48:33.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:33.920" endtime="20201117 14:48:34.255"></status>
</kw>
<msg timestamp="20201117 14:48:34.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04620175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046346556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:33.916" endtime="20201117 14:48:34.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04620175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046346556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:34.265" endtime="20201117 14:48:34.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.283" endtime="20201117 14:48:34.289"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.909" endtime="20201117 14:48:34.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.904" endtime="20201117 14:48:34.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:34.303" level="INFO">${RESULT} = [{'time': 0.046346556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014480599999999733, 'source_diff': 0.00014480599999999733}, {'time': 0.046496861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:34.294" endtime="20201117 14:48:34.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:34.333" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:34.305" endtime="20201117 14:48:34.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.344" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:34.341" endtime="20201117 14:48:34.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.349" level="INFO">VALUE: [0.00014480599999999733, 0.00014498599999999973, 0.00014461100000000282, 0.00014508399999999672, 0.00014563899999999602, 0.0001446670000000011, 0.00014593100000000192, 0.00014559799999999679, 0.0001444999999999988, 0.00014508300000000418, 0.00014481899999999742, 0.00014497200000000016, 0.0001444999999999988, 0.0001448749999999957, 0.00014470800000000034, 0.00014461100000000282, 0.00014430600000000376, 0.0001446250000000024, 0.00014447299999999913, 0.00014469399999999383, 0.00014481900000000436, 0.00014481899999999742, 0.00014452799999999794, 0.0001447219999999999, 0.00014545900000000056, 0.0001449450000000005, 0.0001446670000000011, 0.00014469500000000024, 0.00014494400000000102, 0.00014411099999999538, 0.00014437500000000214, 0.00014452799999999794, 0.00014423599999999898, 0.00014481900000000436, 0.0001441670000000006, 0.00014469400000000077, 0.00014483300000000393, 0.00014483300000000393, 0.0001450690000000046, 0.00014484699999999656, 0.00014458300000000368, 0.0001456250000000034, 0.00014594399999999508, 0.000145041999999998, 0.00014506999999999715, 0.00014563899999999602, 0.000144832999999997, 0.00014515300000000203, 0.00014452800000000487, 0.00014561099999999688]</msg>
<status status="PASS" starttime="20201117 14:48:34.346" endtime="20201117 14:48:34.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.334" endtime="20201117 14:48:34.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.358" endtime="20201117 14:48:34.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:34.367" endtime="20201117 14:48:34.389"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.362" endtime="20201117 14:48:34.390"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.353" endtime="20201117 14:48:34.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.844" endtime="20201117 14:48:34.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.840" endtime="20201117 14:48:34.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:33.839" endtime="20201117 14:48:34.393"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.399" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.420" endtime="20201117 14:48:34.443"></status>
</kw>
<msg timestamp="20201117 14:48:34.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.417" endtime="20201117 14:48:34.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.446" endtime="20201117 14:48:34.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.453" endtime="20201117 14:48:34.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.410" endtime="20201117 14:48:34.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.404" endtime="20201117 14:48:34.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.476" endtime="20201117 14:48:34.827"></status>
</kw>
<msg timestamp="20201117 14:48:34.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045210736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:34.473" endtime="20201117 14:48:34.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045210736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:34.838" endtime="20201117 14:48:34.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.857" endtime="20201117 14:48:34.861"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.466" endtime="20201117 14:48:34.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.461" endtime="20201117 14:48:34.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:34.875" level="INFO">${RESULT} = [{'time': 0.045210736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014586100000000407, 'source_diff': 0.00014586100000000407}, {'time': 0.045363139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:34.866" endtime="20201117 14:48:34.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:34.907" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:34.877" endtime="20201117 14:48:34.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.918" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:34.916" endtime="20201117 14:48:34.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.923" level="INFO">VALUE: [0.00014586100000000407, 0.0001463199999999984, 0.0001454999999999998, 0.00014606899999999867, 0.0001466380000000045, 0.00014579099999999928, 0.00014531899999999792, 0.00014526299999999964, 0.00014580599999999833, 0.00014519399999999433, 0.00014595900000000106, 0.00014565300000000253, 0.00014530499999999835, 0.00014518100000000117, 0.00014606999999999815, 0.00014554099999999903, 0.00014576399999999962, 0.00014573600000000048, 0.00014544400000000152, 0.00014543000000000195, 0.00014586099999999713, 0.0001455969999999973, 0.00014611100000000432, 0.0001460549999999991, 0.0001457220000000009, 0.00014554099999999903, 0.00014536100000000357, 0.0001460000000000003, 0.0001454020000000028, 0.0001459450000000015, 0.0001453749999999962, 0.0001452769999999992, 0.00014587500000000364, 0.0001453749999999962, 0.00014615200000000356, 0.00014530499999999835, 0.00014545900000000056, 0.0001455549999999986, 0.0001462220000000014, 0.0001460000000000003, 0.0001455419999999985, 0.0001454020000000028, 0.00014613900000000346, 0.00014519500000000074, 0.00014543000000000195, 0.00014679100000000028, 0.00014579199999999876, 0.00014523599999999998, 0.00014568100000000167, 0.00014556899999999817]</msg>
<status status="PASS" starttime="20201117 14:48:34.920" endtime="20201117 14:48:34.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.909" endtime="20201117 14:48:34.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.933" endtime="20201117 14:48:34.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:34.941" endtime="20201117 14:48:34.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.937" endtime="20201117 14:48:34.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.928" endtime="20201117 14:48:34.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.400" endtime="20201117 14:48:34.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.396" endtime="20201117 14:48:34.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.394" endtime="20201117 14:48:34.968"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:34.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:34.995" endtime="20201117 14:48:35.018"></status>
</kw>
<msg timestamp="20201117 14:48:35.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:34.991" endtime="20201117 14:48:35.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.021" endtime="20201117 14:48:35.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.029" endtime="20201117 14:48:35.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.984" endtime="20201117 14:48:35.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.978" endtime="20201117 14:48:35.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.056" endtime="20201117 14:48:35.403"></status>
</kw>
<msg timestamp="20201117 14:48:35.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045198597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045345583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.052" endtime="20201117 14:48:35.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045198597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045345583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:35.412" endtime="20201117 14:48:35.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.431" endtime="20201117 14:48:35.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.044" endtime="20201117 14:48:35.438"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.039" endtime="20201117 14:48:35.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:35.449" level="INFO">${RESULT} = [{'time': 0.045345583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014698600000000173, 'source_diff': 0.00014698600000000173}, {'time': 0.045499986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:35.441" endtime="20201117 14:48:35.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:35.479" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:35.451" endtime="20201117 14:48:35.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.490" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:35.488" endtime="20201117 14:48:35.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.496" level="INFO">VALUE: [0.00014698600000000173, 0.00014644400000000252, 0.00014730599999999983, 0.00014695799999999565, 0.0001470969999999988, 0.00014688899999999727, 0.0001464580000000021, 0.00014620899999999437, 0.0001469580000000026, 0.0001475000000000018, 0.0001463749999999972, 0.00014676400000000062, 0.00014705599999999958, 0.00014747200000000266, 0.00014697200000000216, 0.00014641599999999644, 0.00014677800000000019, 0.00014690299999999684, 0.0001465419999999995, 0.00014640199999999687, 0.00014716699999999666, 0.00014672199999999497, 0.00014608399999999772, 0.00014669399999999583, 0.00014765199999999812, 0.00014675000000000105, 0.00014655600000000601, 0.00014648600000000123, 0.0001466250000000044, 0.00014702700000000096, 0.00014697200000000216, 0.0001463749999999972, 0.00014645900000000156, 0.00014701400000000087, 0.00014619400000000227, 0.00014702800000000044, 0.000146445000000002, 0.00014706899999999967, 0.00014713899999999752, 0.00014659800000000472, 0.00014715200000000456, 0.00014620899999999437, 0.00014711100000000532, 0.00014694499999999555, 0.00014636200000000404, 0.00014686099999999813, 0.00014695799999999565, 0.0001463890000000037, 0.00014690300000000378, 0.00014690299999999684]</msg>
<status status="PASS" starttime="20201117 14:48:35.493" endtime="20201117 14:48:35.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.481" endtime="20201117 14:48:35.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.505" endtime="20201117 14:48:35.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:35.514" endtime="20201117 14:48:35.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.509" endtime="20201117 14:48:35.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.501" endtime="20201117 14:48:35.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.975" endtime="20201117 14:48:35.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.971" endtime="20201117 14:48:35.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:34.969" endtime="20201117 14:48:35.540"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.567" endtime="20201117 14:48:35.590"></status>
</kw>
<msg timestamp="20201117 14:48:35.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.564" endtime="20201117 14:48:35.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:35.594" endtime="20201117 14:48:35.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.600" endtime="20201117 14:48:35.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.557" endtime="20201117 14:48:35.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.551" endtime="20201117 14:48:35.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.623" endtime="20201117 14:48:35.960"></status>
</kw>
<msg timestamp="20201117 14:48:35.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0454535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045601014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:35.620" endtime="20201117 14:48:35.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:35.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0454535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045601014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:35.969" endtime="20201117 14:48:35.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:35.988" endtime="20201117 14:48:35.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.613" endtime="20201117 14:48:35.993"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.608" endtime="20201117 14:48:35.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:36.005" level="INFO">${RESULT} = [{'time': 0.045601014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014751400000000137, 'source_diff': 0.00014751400000000137}, {'time': 0.045754403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:35.996" endtime="20201117 14:48:36.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:36.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:36.008" endtime="20201117 14:48:36.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.046" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:36.044" endtime="20201117 14:48:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.051" level="INFO">VALUE: [0.00014751400000000137, 0.00014763899999999802, 0.00014831900000000092, 0.00014801399999999493, 0.00014799999999999536, 0.00014769399999999683, 0.00014786099999999913, 0.0001480000000000023, 0.0001473329999999995, 0.00014762499999999845, 0.0001474169999999969, 0.0001476670000000041, 0.0001474870000000017, 0.00014734800000000547, 0.0001473879999999983, 0.00014773600000000248, 0.00014779200000000076, 0.00014808300000000024, 0.0001479859999999958, 0.00014779200000000076, 0.00014799999999999536, 0.0001473749999999982, 0.00014773600000000248, 0.0001480969999999998, 0.00014763900000000496, 0.0001475420000000005, 0.00014790300000000478, 0.0001473199999999994, 0.00014780500000000085, 0.0001479580000000036, 0.00014884700000000056, 0.00014806900000000067, 0.00014720899999999537, 0.0001480409999999946, 0.00014729200000000026, 0.00014840299999999834, 0.00014761099999999888, 0.00014804100000000153, 0.00014744399999999658, 0.0001478879999999988, 0.00014733300000000643, 0.00014725000000000155, 0.00014730599999999983, 0.0001476659999999977, 0.0001475969999999993, 0.00014870899999999687, 0.00014761100000000582, 0.00014833399999999997, 0.00014723600000000198, 0.00014762499999999845]</msg>
<status status="PASS" starttime="20201117 14:48:36.048" endtime="20201117 14:48:36.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.037" endtime="20201117 14:48:36.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.060" endtime="20201117 14:48:36.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:36.069" endtime="20201117 14:48:36.090"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.064" endtime="20201117 14:48:36.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.056" endtime="20201117 14:48:36.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.547" endtime="20201117 14:48:36.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.543" endtime="20201117 14:48:36.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:35.541" endtime="20201117 14:48:36.095"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.100" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.122" endtime="20201117 14:48:36.143"></status>
</kw>
<msg timestamp="20201117 14:48:36.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.119" endtime="20201117 14:48:36.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.147" endtime="20201117 14:48:36.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.153" endtime="20201117 14:48:36.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.112" endtime="20201117 14:48:36.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.106" endtime="20201117 14:48:36.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.176" endtime="20201117 14:48:36.510"></status>
</kw>
<msg timestamp="20201117 14:48:36.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045178847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045327972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.173" endtime="20201117 14:48:36.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045178847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045327972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.520" endtime="20201117 14:48:36.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.538" endtime="20201117 14:48:36.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.166" endtime="20201117 14:48:36.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.161" endtime="20201117 14:48:36.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:36.557" level="INFO">${RESULT} = [{'time': 0.045327972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014912499999999995, 'source_diff': 0.00014912499999999995}, {'time': 0.045488417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:36.548" endtime="20201117 14:48:36.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:36.586" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:36.559" endtime="20201117 14:48:36.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.597" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:36.595" endtime="20201117 14:48:36.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.603" level="INFO">VALUE: [0.00014912499999999995, 0.00014968100000000567, 0.00014845799999999715, 0.00014873600000000348, 0.00014997199999999822, 0.00014862499999999945, 0.00014852800000000194, 0.00014876399999999568, 0.00014886100000000013, 0.00014894399999999808, 0.00014876400000000262, 0.00014865199999999912, 0.00014888899999999927, 0.00014894399999999808, 0.00014840299999999834, 0.0001482629999999957, 0.00014841599999999844, 0.00014836099999999963, 0.00014836099999999963, 0.0001487220000000039, 0.00014820800000000384, 0.00014908399999999378, 0.00014847200000000366, 0.00014862499999999945, 0.00014872199999999697, 0.00014843099999999748, 0.00014906899999999473, 0.0001485420000000015, 0.00014912499999999995, 0.0001487079999999974, 0.00014908400000000072, 0.00014907000000000115, 0.00014868100000000467, 0.00014826400000000212, 0.0001490699999999942, 0.00014886100000000013, 0.00014858300000000074, 0.00014916699999999866, 0.00014877800000000219, 0.00014966600000000663, 0.00014984700000000156, 0.0001491659999999992, 0.00014851400000000237, 0.0001485000000000028, 0.00014902800000000244, 0.00014904100000000253, 0.00014907000000000115, 0.00014872199999999697, 0.00014854199999999457, 0.00014851400000000237]</msg>
<status status="PASS" starttime="20201117 14:48:36.600" endtime="20201117 14:48:36.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.588" endtime="20201117 14:48:36.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.612" endtime="20201117 14:48:36.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:36.620" endtime="20201117 14:48:36.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.615" endtime="20201117 14:48:36.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.607" endtime="20201117 14:48:36.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.102" endtime="20201117 14:48:36.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.098" endtime="20201117 14:48:36.646"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.096" endtime="20201117 14:48:36.646"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.652" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.674" endtime="20201117 14:48:36.695"></status>
</kw>
<msg timestamp="20201117 14:48:36.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.671" endtime="20201117 14:48:36.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:36.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:36.699" endtime="20201117 14:48:36.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.705" endtime="20201117 14:48:36.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.663" endtime="20201117 14:48:36.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.657" endtime="20201117 14:48:36.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:36.729" endtime="20201117 14:48:37.064"></status>
</kw>
<msg timestamp="20201117 14:48:37.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045814458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045964056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:36.725" endtime="20201117 14:48:37.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045814458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045964056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.074" endtime="20201117 14:48:37.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.092" endtime="20201117 14:48:37.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.718" endtime="20201117 14:48:37.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.713" endtime="20201117 14:48:37.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:37.109" level="INFO">${RESULT} = [{'time': 0.045964056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014959800000000079, 'source_diff': 0.00014959800000000079}, {'time': 0.046124486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:37.100" endtime="20201117 14:48:37.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:37.141" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:37.111" endtime="20201117 14:48:37.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.152" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:37.150" endtime="20201117 14:48:37.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.157" level="INFO">VALUE: [0.00014959800000000079, 0.0001495550000000026, 0.00014923599999999704, 0.00015036100000000163, 0.00014980500000000285, 0.00014945799999999815, 0.00015004199999999607, 0.00015006899999999573, 0.00014966699999999916, 0.00014990200000000037, 0.00014995899999999812, 0.0001495420000000025, 0.00014955599999999514, 0.00014956899999999523, 0.00014968099999999873, 0.00014949999999999686, 0.0001496529999999996, 0.00014936100000000063, 0.00014990299999999984, 0.0001492079999999979, 0.00015008300000000224, 0.00015030600000000283, 0.00014943099999999848, 0.00014986199999999367, 0.00014955499999999566, 0.00014983400000000147, 0.00014976400000000362, 0.00015001399999999693, 0.0001497499999999971, 0.0001496659999999997, 0.00014925000000000355, 0.000149445000000005, 0.0001501670000000066, 0.00014988900000000027, 0.0001496529999999996, 0.00014986100000000113, 0.00015027800000000369, 0.00014966699999999916, 0.00014949999999999686, 0.00014965200000000012, 0.00014962500000000045, 0.00014927800000000269, 0.00014997199999999822, 0.000149429999999999, 0.00014943100000000542, 0.0001498750000000007, 0.00014979099999999634, 0.0001497079999999984, 0.00014954199999999557, 0.00015034700000000206]</msg>
<status status="PASS" starttime="20201117 14:48:37.154" endtime="20201117 14:48:37.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.143" endtime="20201117 14:48:37.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.166" endtime="20201117 14:48:37.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:37.174" endtime="20201117 14:48:37.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.170" endtime="20201117 14:48:37.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.162" endtime="20201117 14:48:37.199"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.653" endtime="20201117 14:48:37.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.649" endtime="20201117 14:48:37.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:36.647" endtime="20201117 14:48:37.201"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.206" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.228" endtime="20201117 14:48:37.249"></status>
</kw>
<msg timestamp="20201117 14:48:37.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.224" endtime="20201117 14:48:37.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.252" endtime="20201117 14:48:37.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.259" endtime="20201117 14:48:37.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.217" endtime="20201117 14:48:37.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.211" endtime="20201117 14:48:37.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.283" endtime="20201117 14:48:37.626"></status>
</kw>
<msg timestamp="20201117 14:48:37.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045398556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.280" endtime="20201117 14:48:37.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045398556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.635" endtime="20201117 14:48:37.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.654" endtime="20201117 14:48:37.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.272" endtime="20201117 14:48:37.661"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.268" endtime="20201117 14:48:37.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:37.673" level="INFO">${RESULT} = [{'time': 0.045398556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015040300000000034, 'source_diff': 0.00015040300000000034}, {'time': 0.045555986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:37.664" endtime="20201117 14:48:37.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:37.702" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:37.675" endtime="20201117 14:48:37.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.713" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:37.711" endtime="20201117 14:48:37.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.718" level="INFO">VALUE: [0.00015040300000000034, 0.00015031900000000292, 0.0001514859999999993, 0.00015105600000000358, 0.00015108300000000324, 0.00015026400000000412, 0.00015072199999999897, 0.0001504169999999999, 0.00015112500000000195, 0.00015034700000000206, 0.00015111100000000238, 0.00015037499999999426, 0.00015047199999999872, 0.00015057000000000265, 0.00015058400000000222, 0.00015088900000000127, 0.00015113900000000152, 0.00015044399999999958, 0.00015062500000000145, 0.00015194399999999414, 0.0001515000000000058, 0.00015045799999999915, 0.00015107000000000315, 0.00015030500000000335, 0.00015095899999999912, 0.0001506530000000006, 0.00015151399999999843, 0.00015031899999999598, 0.00015111100000000238, 0.00015076400000000462, 0.00015106899999999673, 0.00015105599999999664, 0.0001505829999999958, 0.00015113900000000152, 0.00015101400000000487, 0.00015186199999999567, 0.00015061200000000136, 0.00015184800000000304, 0.00015199999999999936, 0.0001504169999999999, 0.0001507090000000058, 0.00015061100000000188, 0.00015069399999999983, 0.00015038900000000077, 0.00015043, 0.0001508750000000017, 0.00015057000000000265, 0.00015043, 0.0001513059999999969, 0.00015118000000000076]</msg>
<status status="PASS" starttime="20201117 14:48:37.715" endtime="20201117 14:48:37.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.704" endtime="20201117 14:48:37.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.727" endtime="20201117 14:48:37.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:37.735" endtime="20201117 14:48:37.757"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.731" endtime="20201117 14:48:37.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.722" endtime="20201117 14:48:37.761"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.207" endtime="20201117 14:48:37.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.203" endtime="20201117 14:48:37.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.202" endtime="20201117 14:48:37.762"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.768" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.790" endtime="20201117 14:48:37.812"></status>
</kw>
<msg timestamp="20201117 14:48:37.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.787" endtime="20201117 14:48:37.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:37.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:37.816" endtime="20201117 14:48:37.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.822" endtime="20201117 14:48:37.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.780" endtime="20201117 14:48:37.828"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.773" endtime="20201117 14:48:37.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:37.845" endtime="20201117 14:48:38.192"></status>
</kw>
<msg timestamp="20201117 14:48:38.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047261014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047412833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:37.842" endtime="20201117 14:48:38.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047261014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047412833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.202" endtime="20201117 14:48:38.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.220" endtime="20201117 14:48:38.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.835" endtime="20201117 14:48:38.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.830" endtime="20201117 14:48:38.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:38.237" level="INFO">${RESULT} = [{'time': 0.047412833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015181900000000442, 'source_diff': 0.00015181900000000442}, {'time': 0.047573264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:38.228" endtime="20201117 14:48:38.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:38.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:38.239" endtime="20201117 14:48:38.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.278" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:38.275" endtime="20201117 14:48:38.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.283" level="INFO">VALUE: [0.00015181900000000442, 0.0001519449999999936, 0.00015209799999999635, 0.00015155599999999714, 0.00015220799999999396, 0.00015213900000000252, 0.00015152699999999852, 0.0001513750000000022, 0.00015208300000000424, 0.00015199999999999936, 0.0001512770000000052, 0.00015151399999999843, 0.00015151399999999843, 0.00015284699999999762, 0.00015179199999999782, 0.00015145800000000015, 0.00015122299999999894, 0.0001511530000000011, 0.00015134700000000306, 0.00015154199999999757, 0.0001515829999999968, 0.00015177799999999825, 0.00015208399999999678, 0.0001516530000000016, 0.00015211099999999644, 0.00015169400000000083, 0.0001519170000000014, 0.00015181899999999748, 0.0001513609999999957, 0.00015180499999999791, 0.0001519029999999949, 0.0001512499999999986, 0.00015215299999999515, 0.00015233299999999755, 0.0001519859999999998, 0.00015213900000000252, 0.00015247200000000072, 0.00015166700000000116, 0.0001518059999999974, 0.0001515970000000033, 0.00015161100000000288, 0.000151430000000001, 0.00015215199999999568, 0.00015306899999999873, 0.00015163800000000255, 0.00015170899999999987, 0.0001515829999999968, 0.00015162500000000245, 0.00015201399999999893, 0.00015205499999999816]</msg>
<status status="PASS" starttime="20201117 14:48:38.280" endtime="20201117 14:48:38.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.269" endtime="20201117 14:48:38.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.292" endtime="20201117 14:48:38.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:38.301" endtime="20201117 14:48:38.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.296" endtime="20201117 14:48:38.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.287" endtime="20201117 14:48:38.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.769" endtime="20201117 14:48:38.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.765" endtime="20201117 14:48:38.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:37.763" endtime="20201117 14:48:38.327"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.354" endtime="20201117 14:48:38.378"></status>
</kw>
<msg timestamp="20201117 14:48:38.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.351" endtime="20201117 14:48:38.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.381" endtime="20201117 14:48:38.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.387" endtime="20201117 14:48:38.391"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.344" endtime="20201117 14:48:38.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.338" endtime="20201117 14:48:38.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.411" endtime="20201117 14:48:38.756"></status>
</kw>
<msg timestamp="20201117 14:48:38.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045412917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045565639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.407" endtime="20201117 14:48:38.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045412917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045565639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.766" endtime="20201117 14:48:38.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.784" endtime="20201117 14:48:38.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.400" endtime="20201117 14:48:38.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.395" endtime="20201117 14:48:38.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:38.802" level="INFO">${RESULT} = [{'time': 0.045565639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015272200000000097, 'source_diff': 0.00015272200000000097}, {'time': 0.045723958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:38.794" endtime="20201117 14:48:38.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:38.832" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:38.804" endtime="20201117 14:48:38.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.843" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:38.841" endtime="20201117 14:48:38.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.848" level="INFO">VALUE: [0.00015272200000000097, 0.00015238900000000277, 0.00015394400000000308, 0.00015218100000000123, 0.0001522499999999996, 0.0001526530000000026, 0.00015273600000000054, 0.00015377700000000077, 0.0001527500000000001, 0.0001527080000000014, 0.0001528059999999984, 0.00015308399999999778, 0.00015363899999999708, 0.0001529860000000008, 0.00015301399999999993, 0.00015311099999999744, 0.0001523059999999979, 0.00015243100000000148, 0.00015243100000000148, 0.0001530279999999995, 0.000152833000000005, 0.00015243100000000148, 0.0001526950000000013, 0.00015252699999999952, 0.00015286100000000413, 0.0001524159999999955, 0.000153124999999997, 0.00015401400000000093, 0.00015247200000000072, 0.00015226399999999918, 0.00015288900000000327, 0.0001534860000000013, 0.00015319499999999486, 0.0001536950000000023, 0.00015249999999999986, 0.00015350000000000086, 0.0001524860000000003, 0.00015272200000000097, 0.00015238899999999583, 0.00015255599999999814, 0.00015280499999999891, 0.00015286100000000413, 0.00015295800000000165, 0.00015270900000000087, 0.00015222200000000047, 0.00015243099999999454, 0.00015273600000000054, 0.00015301399999999993, 0.00015237499999999626, 0.00015265299999999565]</msg>
<status status="PASS" starttime="20201117 14:48:38.845" endtime="20201117 14:48:38.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.834" endtime="20201117 14:48:38.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.858" endtime="20201117 14:48:38.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:38.866" endtime="20201117 14:48:38.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.862" endtime="20201117 14:48:38.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.853" endtime="20201117 14:48:38.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.334" endtime="20201117 14:48:38.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.330" endtime="20201117 14:48:38.892"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.329" endtime="20201117 14:48:38.893"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.898" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.919" endtime="20201117 14:48:38.943"></status>
</kw>
<msg timestamp="20201117 14:48:38.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.916" endtime="20201117 14:48:38.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:38.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:38.946" endtime="20201117 14:48:38.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.952" endtime="20201117 14:48:38.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.909" endtime="20201117 14:48:38.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.903" endtime="20201117 14:48:38.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:38.976" endtime="20201117 14:48:39.322"></status>
</kw>
<msg timestamp="20201117 14:48:39.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045395042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045548694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:38.972" endtime="20201117 14:48:39.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045395042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045548694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.332" endtime="20201117 14:48:39.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.350" endtime="20201117 14:48:39.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.965" endtime="20201117 14:48:39.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.960" endtime="20201117 14:48:39.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:39.367" level="INFO">${RESULT} = [{'time': 0.045548694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015365200000000412, 'source_diff': 0.00015365200000000412}, {'time': 0.045710139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:39.358" endtime="20201117 14:48:39.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:39.399" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:39.369" endtime="20201117 14:48:39.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.410" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:39.408" endtime="20201117 14:48:39.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.416" level="INFO">VALUE: [0.00015365200000000412, 0.0001539449999999956, 0.00015374999999999417, 0.00015355599999999914, 0.0001538750000000047, 0.0001535699999999987, 0.00015359699999999837, 0.00015345900000000162, 0.00015409699999999887, 0.00015366699999999622, 0.00015405599999999964, 0.00015350000000000086, 0.0001533059999999989, 0.00015413899999999758, 0.00015358300000000574, 0.0001533059999999989, 0.00015361100000000488, 0.00015359799999999785, 0.00015413899999999758, 0.0001536249999999975, 0.00015373600000000154, 0.00015361099999999794, 0.00015383399999999853, 0.00015397200000000222, 0.0001542080000000029, 0.00015499999999999542, 0.00015409699999999887, 0.0001533609999999977, 0.00015340300000000334, 0.00015350000000000086, 0.00015336199999999717, 0.0001538609999999982, 0.0001534579999999952, 0.00015405599999999964, 0.00015395900000000212, 0.000153528, 0.00015504200000000107, 0.0001540410000000006, 0.00015323600000000104, 0.00015466699999999722, 0.0001532500000000006, 0.0001532500000000006, 0.0001532500000000006, 0.00015376400000000068, 0.00015338899999999683, 0.0001544170000000039, 0.00015320900000000137, 0.00015404200000000007, 0.0001535699999999987, 0.00015394500000000255]</msg>
<status status="PASS" starttime="20201117 14:48:39.412" endtime="20201117 14:48:39.417"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.401" endtime="20201117 14:48:39.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.426" endtime="20201117 14:48:39.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:39.434" endtime="20201117 14:48:39.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.430" endtime="20201117 14:48:39.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.421" endtime="20201117 14:48:39.459"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.899" endtime="20201117 14:48:39.460"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.895" endtime="20201117 14:48:39.461"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:38.893" endtime="20201117 14:48:39.461"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.467" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.490" endtime="20201117 14:48:39.513"></status>
</kw>
<msg timestamp="20201117 14:48:39.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.486" endtime="20201117 14:48:39.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:39.517" endtime="20201117 14:48:39.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.523" endtime="20201117 14:48:39.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.479" endtime="20201117 14:48:39.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.473" endtime="20201117 14:48:39.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.546" endtime="20201117 14:48:39.882"></status>
</kw>
<msg timestamp="20201117 14:48:39.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048029514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048184361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.543" endtime="20201117 14:48:39.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048029514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048184361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:39.892" endtime="20201117 14:48:39.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.910" endtime="20201117 14:48:39.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.536" endtime="20201117 14:48:39.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.531" endtime="20201117 14:48:39.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:39.929" level="INFO">${RESULT} = [{'time': 0.048184361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015484699999999962, 'source_diff': 0.00015484699999999962}, {'time': 0.048345764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:39.920" endtime="20201117 14:48:39.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:39.959" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:39.931" endtime="20201117 14:48:39.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.970" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:39.968" endtime="20201117 14:48:39.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:39.975" level="INFO">VALUE: [0.00015484699999999962, 0.00015438899999999783, 0.00015481900000000048, 0.00015512499999999901, 0.0001555700000000007, 0.0001546530000000046, 0.00015441699999999697, 0.00015443100000000348, 0.00015468000000000426, 0.00015491699999999747, 0.00015444399999999664, 0.00015450000000000186, 0.00015512499999999901, 0.00015433399999999903, 0.00015487499999999876, 0.00015420799999999596, 0.00015458399999999928, 0.00015462500000000545, 0.00015454099999999416, 0.0001547500000000021, 0.0001546950000000033, 0.00015443099999999654, 0.0001545410000000011, 0.00015470799999999646, 0.000156013999999996, 0.0001547359999999956, 0.00015511100000000638, 0.00015422300000000194, 0.00015505600000000064, 0.00015505500000000116, 0.00015461099999999894, 0.00015509799999999935, 0.00015517999999999782, 0.00015569499999999736, 0.00015490199999999843, 0.00015477800000000125, 0.00015447199999999578, 0.00015516700000000466, 0.00015426400000000118, 0.00015491600000000494, 0.00015494399999999714, 0.00015467999999999732, 0.0001550830000000003, 0.0001549449999999966, 0.00015462499999999851, 0.00015529200000000132, 0.00015499999999999542, 0.00015488799999999886, 0.0001542500000000016, 0.00015512499999999901]</msg>
<status status="PASS" starttime="20201117 14:48:39.972" endtime="20201117 14:48:39.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.961" endtime="20201117 14:48:39.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:39.984" endtime="20201117 14:48:39.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:39.992" endtime="20201117 14:48:40.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.988" endtime="20201117 14:48:40.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.979" endtime="20201117 14:48:40.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.469" endtime="20201117 14:48:40.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.464" endtime="20201117 14:48:40.018"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:39.462" endtime="20201117 14:48:40.019"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.024" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.045" endtime="20201117 14:48:40.067"></status>
</kw>
<msg timestamp="20201117 14:48:40.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.042" endtime="20201117 14:48:40.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.071" endtime="20201117 14:48:40.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.077" endtime="20201117 14:48:40.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.035" endtime="20201117 14:48:40.082"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.029" endtime="20201117 14:48:40.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.100" endtime="20201117 14:48:40.432"></status>
</kw>
<msg timestamp="20201117 14:48:40.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045231667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.097" endtime="20201117 14:48:40.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045231667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.442" endtime="20201117 14:48:40.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.460" endtime="20201117 14:48:40.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.090" endtime="20201117 14:48:40.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.085" endtime="20201117 14:48:40.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:40.478" level="INFO">${RESULT} = [{'time': 0.045387486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015581899999999455, 'source_diff': 0.00015581899999999455}, {'time': 0.045552903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:40.469" endtime="20201117 14:48:40.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:40.508" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:40.480" endtime="20201117 14:48:40.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.519" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:40.517" endtime="20201117 14:48:40.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.524" level="INFO">VALUE: [0.00015581899999999455, 0.00015572199999999703, 0.00015567999999999832, 0.0001566809999999988, 0.0001559860000000038, 0.00015522200000000347, 0.00015593099999999804, 0.00015649999999999692, 0.00015552799999999506, 0.00015568000000000526, 0.00015547199999999678, 0.0001557359999999966, 0.00015602700000000302, 0.00015573600000000354, 0.00015522200000000347, 0.0001560700000000012, 0.00015555499999999473, 0.0001555410000000021, 0.0001555410000000021, 0.00015654199999999563, 0.00015569499999999736, 0.0001552359999999961, 0.0001564029999999994, 0.00015544400000000458, 0.0001553609999999997, 0.0001559029999999989, 0.00015684700000000162, 0.00015666699999999922, 0.00015701400000000393, 0.0001560410000000026, 0.00015600000000000336, 0.00015665299999999965, 0.00015556900000000123, 0.0001554579999999972, 0.0001567779999999963, 0.00015663900000000008, 0.00015574999999999617, 0.00015611100000000044, 0.00015522200000000347, 0.0001557500000000031, 0.00015559799999999985, 0.00015580499999999498, 0.00015576400000000268, 0.00015597200000000422, 0.00015583400000000053, 0.000155915999999999, 0.00015555500000000166, 0.00015611100000000044, 0.00015582000000000096, 0.00015573600000000354]</msg>
<status status="PASS" starttime="20201117 14:48:40.521" endtime="20201117 14:48:40.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.510" endtime="20201117 14:48:40.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.533" endtime="20201117 14:48:40.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:40.541" endtime="20201117 14:48:40.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.537" endtime="20201117 14:48:40.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.529" endtime="20201117 14:48:40.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.025" endtime="20201117 14:48:40.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.021" endtime="20201117 14:48:40.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.020" endtime="20201117 14:48:40.568"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.573" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.595" endtime="20201117 14:48:40.617"></status>
</kw>
<msg timestamp="20201117 14:48:40.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.592" endtime="20201117 14:48:40.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:40.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:40.620" endtime="20201117 14:48:40.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.626" endtime="20201117 14:48:40.630"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.584" endtime="20201117 14:48:40.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.579" endtime="20201117 14:48:40.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:40.650" endtime="20201117 14:48:40.983"></status>
</kw>
<msg timestamp="20201117 14:48:40.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045309778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045466903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.646" endtime="20201117 14:48:40.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045309778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045466903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:40.992" endtime="20201117 14:48:41.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.010" endtime="20201117 14:48:41.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.639" endtime="20201117 14:48:41.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.634" endtime="20201117 14:48:41.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:41.029" level="INFO">${RESULT} = [{'time': 0.045466903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015712500000000101, 'source_diff': 0.00015712500000000101}, {'time': 0.045631292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:41.020" endtime="20201117 14:48:41.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:41.058" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:41.031" endtime="20201117 14:48:41.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.069" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:41.067" endtime="20201117 14:48:41.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.075" level="INFO">VALUE: [0.00015712500000000101, 0.0001570979999999944, 0.0001569579999999987, 0.0001563610000000007, 0.00015645899999999768, 0.0001562359999999971, 0.00015626400000000318, 0.00015648699999999682, 0.00015634700000000112, 0.00015715300000000015, 0.00015658299999999487, 0.00015644500000000505, 0.00015623600000000404, 0.00015644399999999864, 0.00015711100000000144, 0.00015654199999999563, 0.00015681900000000248, 0.00015683400000000153, 0.00015655600000000214, 0.0001573610000000017, 0.0001570280000000035, 0.00015704199999999613, 0.0001564029999999994, 0.00015669499999999836, 0.00015667999999999932, 0.0001562779999999958, 0.0001567359999999976, 0.00015776399999999774, 0.00015716600000000025, 0.0001578339999999956, 0.00015712500000000101, 0.00015645800000000515, 0.0001571939999999994, 0.00015649999999999692, 0.00015688900000000033, 0.00015633300000000155, 0.00015673600000000454, 0.00015676399999999674, 0.00015672199999999803, 0.00015637499999999332, 0.00015620899999999743, 0.00015637500000000026, 0.00015638899999999983, 0.0001563610000000007, 0.00015637500000000026, 0.0001570410000000036, 0.00015679199999999588, 0.0001579030000000009, 0.00015667999999999932, 0.00015644399999999864]</msg>
<status status="PASS" starttime="20201117 14:48:41.072" endtime="20201117 14:48:41.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.060" endtime="20201117 14:48:41.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.083" endtime="20201117 14:48:41.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:41.092" endtime="20201117 14:48:41.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.087" endtime="20201117 14:48:41.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.079" endtime="20201117 14:48:41.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.575" endtime="20201117 14:48:41.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.571" endtime="20201117 14:48:41.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:40.569" endtime="20201117 14:48:41.118"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.123" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.145" endtime="20201117 14:48:41.166"></status>
</kw>
<msg timestamp="20201117 14:48:41.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.141" endtime="20201117 14:48:41.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.170" endtime="20201117 14:48:41.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.177" endtime="20201117 14:48:41.180"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.134" endtime="20201117 14:48:41.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.128" endtime="20201117 14:48:41.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.200" endtime="20201117 14:48:41.536"></status>
</kw>
<msg timestamp="20201117 14:48:41.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045066236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.197" endtime="20201117 14:48:41.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044908111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045066236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.546" endtime="20201117 14:48:41.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.564" endtime="20201117 14:48:41.568"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.190" endtime="20201117 14:48:41.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.185" endtime="20201117 14:48:41.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:41.581" level="INFO">${RESULT} = [{'time': 0.045066236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015812500000000201, 'source_diff': 0.00015812500000000201}, {'time': 0.045228778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:41.573" endtime="20201117 14:48:41.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:41.614" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:41.584" endtime="20201117 14:48:41.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.625" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:41.622" endtime="20201117 14:48:41.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.630" level="INFO">VALUE: [0.00015812500000000201, 0.00015741699999999997, 0.00015823600000000604, 0.00015737500000000126, 0.00015741699999999997, 0.0001574160000000005, 0.00015909699999999694, 0.00015794400000000014, 0.00015826400000000518, 0.0001577229999999985, 0.0001576939999999999, 0.00015816600000000125, 0.0001574160000000005, 0.00015720900000000537, 0.00015747199999999878, 0.00015781899999999655, 0.00015779200000000382, 0.00015743099999999954, 0.0001578889999999944, 0.00015815300000000115, 0.00015743099999999954, 0.00015736099999999476, 0.00015743099999999954, 0.00015787499999999483, 0.00015826400000000518, 0.00015812499999999508, 0.00015804199999999713, 0.00015804099999999766, 0.0001580410000000046, 0.00015813900000000158, 0.00015783400000000253, 0.00015763899999999414, 0.00015740299999999346, 0.00015797199999999928, 0.00015754199999999663, 0.00015737500000000126, 0.00015773600000000554, 0.00015730499999999648, 0.00015791700000000047, 0.00015816700000000072, 0.00015744399999999964, 0.00015804099999999766, 0.00015805499999999723, 0.00015870899999999993, 0.00015815199999999474, 0.00015759700000000237, 0.00015780499999999698, 0.00015854099999999816, 0.00015801400000000493, 0.0001579030000000009]</msg>
<status status="PASS" starttime="20201117 14:48:41.627" endtime="20201117 14:48:41.631"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.615" endtime="20201117 14:48:41.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.639" endtime="20201117 14:48:41.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:41.647" endtime="20201117 14:48:41.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.643" endtime="20201117 14:48:41.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.634" endtime="20201117 14:48:41.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.124" endtime="20201117 14:48:41.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.121" endtime="20201117 14:48:41.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.119" endtime="20201117 14:48:41.673"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.701" endtime="20201117 14:48:41.723"></status>
</kw>
<msg timestamp="20201117 14:48:41.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.698" endtime="20201117 14:48:41.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:41.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:41.726" endtime="20201117 14:48:41.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.732" endtime="20201117 14:48:41.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.690" endtime="20201117 14:48:41.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.684" endtime="20201117 14:48:41.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:41.756" endtime="20201117 14:48:42.090"></status>
</kw>
<msg timestamp="20201117 14:48:42.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045897653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:41.752" endtime="20201117 14:48:42.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045897653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.099" endtime="20201117 14:48:42.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.117" endtime="20201117 14:48:42.122"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.745" endtime="20201117 14:48:42.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.740" endtime="20201117 14:48:42.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:42.136" level="INFO">${RESULT} = [{'time': 0.045897653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015919499999999392, 'source_diff': 0.00015919499999999392}, {'time': 0.046065056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:42.127" endtime="20201117 14:48:42.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:42.165" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:42.138" endtime="20201117 14:48:42.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.176" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:42.174" endtime="20201117 14:48:42.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.182" level="INFO">VALUE: [0.00015919499999999392, 0.00015938900000000283, 0.00015895900000000018, 0.00015899999999999942, 0.00016005499999999923, 0.0001589580000000007, 0.00015858399999999634, 0.00015870800000000046, 0.00015913900000000258, 0.00015837500000000226, 0.0001598889999999964, 0.00015881899999999755, 0.00015908399999999684, 0.00015847199999999978, 0.00015886200000000267, 0.00015850000000000586, 0.0001585689999999973, 0.00015880500000000491, 0.00015863900000000208, 0.00015911100000000344, 0.0001588610000000032, 0.00015893100000000104, 0.00015879199999999788, 0.00015922200000000053, 0.0001596810000000018, 0.00015841700000000097, 0.00015841700000000097, 0.00015880499999999798, 0.0001584030000000014, 0.0001585689999999973, 0.00015824999999999867, 0.00015847199999999978, 0.00015831899999999705, 0.00015893100000000104, 0.00015845799999999327, 0.00015847199999999978, 0.00015827700000000527, 0.0001589019999999955, 0.0001587909999999984, 0.00015879100000000534, 0.00015915300000000215, 0.00015847199999999978, 0.0001585689999999973, 0.0001590559999999977, 0.00015844400000000064, 0.00015826399999999824, 0.00015902799999999856, 0.00015954199999999863, 0.00015920800000000096, 0.00015909800000000335]</msg>
<status status="PASS" starttime="20201117 14:48:42.178" endtime="20201117 14:48:42.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.167" endtime="20201117 14:48:42.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.190" endtime="20201117 14:48:42.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:42.199" endtime="20201117 14:48:42.221"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.194" endtime="20201117 14:48:42.223"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.186" endtime="20201117 14:48:42.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.680" endtime="20201117 14:48:42.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.676" endtime="20201117 14:48:42.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:41.674" endtime="20201117 14:48:42.226"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.253" endtime="20201117 14:48:42.277"></status>
</kw>
<msg timestamp="20201117 14:48:42.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.250" endtime="20201117 14:48:42.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.280" endtime="20201117 14:48:42.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.286" endtime="20201117 14:48:42.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.243" endtime="20201117 14:48:42.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.237" endtime="20201117 14:48:42.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.310" endtime="20201117 14:48:42.649"></status>
</kw>
<msg timestamp="20201117 14:48:42.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045683222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.306" endtime="20201117 14:48:42.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045683222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.659" endtime="20201117 14:48:42.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.677" endtime="20201117 14:48:42.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.299" endtime="20201117 14:48:42.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.294" endtime="20201117 14:48:42.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:42.694" level="INFO">${RESULT} = [{'time': 0.045683222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001607360000000016, 'source_diff': 0.0001607360000000016}, {'time': 0.045849722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:42.686" endtime="20201117 14:48:42.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:42.724" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:42.696" endtime="20201117 14:48:42.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.735" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:42.733" endtime="20201117 14:48:42.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.740" level="INFO">VALUE: [0.0001607360000000016, 0.00015980500000000591, 0.00015963900000000308, 0.00015959700000000437, 0.00015933300000000455, 0.00015995900000000118, 0.00016025000000000067, 0.00016109699999999894, 0.0001598889999999964, 0.00015949999999999992, 0.00015952799999999906, 0.00015983299999999812, 0.00015947199999999384, 0.00015970799999999452, 0.0001608339999999986, 0.00016026400000000024, 0.00015947200000000078, 0.00015977699999999984, 0.00016108299999999937, 0.00015931999999999752, 0.000159610999999997, 0.00015926399999999924, 0.0001597779999999993, 0.00015965200000000318, 0.0001598480000000041, 0.0001594030000000024, 0.00015983300000000505, 0.00015976399999999974, 0.00016075000000000117, 0.00015979199999999888, 0.00015958400000000428, 0.0001610979999999984, 0.00015930599999999795, 0.00016081899999999955, 0.00015959800000000385, 0.00016081999999999902, 0.0001609019999999975, 0.0001608889999999974, 0.00016020900000000143, 0.0001595559999999982, 0.0001601940000000024, 0.00015963900000000308, 0.00015933299999999762, 0.00015987499999999683, 0.0001593889999999959, 0.00015934699999999719, 0.00016018000000000282, 0.00015949999999999992, 0.0001602360000000011, 0.00015966700000000222]</msg>
<status status="PASS" starttime="20201117 14:48:42.737" endtime="20201117 14:48:42.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.726" endtime="20201117 14:48:42.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.750" endtime="20201117 14:48:42.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:42.758" endtime="20201117 14:48:42.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.754" endtime="20201117 14:48:42.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.745" endtime="20201117 14:48:42.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.233" endtime="20201117 14:48:42.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.229" endtime="20201117 14:48:42.784"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.227" endtime="20201117 14:48:42.785"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.790" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.811" endtime="20201117 14:48:42.834"></status>
</kw>
<msg timestamp="20201117 14:48:42.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.808" endtime="20201117 14:48:42.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:42.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:42.837" endtime="20201117 14:48:42.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.843" endtime="20201117 14:48:42.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.801" endtime="20201117 14:48:42.848"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.795" endtime="20201117 14:48:42.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:42.866" endtime="20201117 14:48:43.200"></status>
</kw>
<msg timestamp="20201117 14:48:43.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045401569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:42.863" endtime="20201117 14:48:43.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045401569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.209" endtime="20201117 14:48:43.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.227" endtime="20201117 14:48:43.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.856" endtime="20201117 14:48:43.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.851" endtime="20201117 14:48:43.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:43.246" level="INFO">${RESULT} = [{'time': 0.045401569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016120800000000296, 'source_diff': 0.00016120800000000296}, {'time': 0.045566986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:43.237" endtime="20201117 14:48:43.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:43.276" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:43.248" endtime="20201117 14:48:43.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.287" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:43.284" endtime="20201117 14:48:43.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.293" level="INFO">VALUE: [0.00016120800000000296, 0.00016029199999999938, 0.0001610689999999998, 0.00016023700000000057, 0.0001617780000000013, 0.0001607219999999951, 0.00016149999999999498, 0.00016075000000000117, 0.00016116699999999679, 0.00016081999999999902, 0.00016049999999999398, 0.0001610559999999997, 0.0001618889999999984, 0.00016033299999999862, 0.00016098600000000185, 0.00016097200000000228, 0.00016050000000000092, 0.00016081999999999902, 0.00016090299999999697, 0.00016041700000000297, 0.00016065299999999672, 0.00016151399999999455, 0.00016125000000000167, 0.0001607360000000016, 0.00016083299999999912, 0.00016093100000000304, 0.00016091699999999654, 0.0001603339999999981, 0.00016044500000000211, 0.00016083299999999912, 0.00016079199999999988, 0.00016026300000000077, 0.00016090299999999697, 0.00016041599999999656, 0.0001604439999999957, 0.00016048600000000135, 0.0001603889999999969, 0.0001602909999999999, 0.00016094499999999567, 0.00016037500000000426, 0.0001607910000000004, 0.0001605140000000005, 0.000160916000000004, 0.00016034699999999819, 0.0001604439999999957, 0.00016091700000000347, 0.0001608889999999974, 0.00016109699999999894, 0.00016079200000000682, 0.00016070800000000246]</msg>
<status status="PASS" starttime="20201117 14:48:43.289" endtime="20201117 14:48:43.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.277" endtime="20201117 14:48:43.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.302" endtime="20201117 14:48:43.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:43.310" endtime="20201117 14:48:43.331"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.306" endtime="20201117 14:48:43.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.297" endtime="20201117 14:48:43.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.791" endtime="20201117 14:48:43.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.787" endtime="20201117 14:48:43.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:42.786" endtime="20201117 14:48:43.337"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.342" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.363" endtime="20201117 14:48:43.385"></status>
</kw>
<msg timestamp="20201117 14:48:43.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.360" endtime="20201117 14:48:43.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.389" endtime="20201117 14:48:43.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.395" endtime="20201117 14:48:43.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.353" endtime="20201117 14:48:43.400"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.347" endtime="20201117 14:48:43.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.418" endtime="20201117 14:48:43.762"></status>
</kw>
<msg timestamp="20201117 14:48:43.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045162931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045324708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.415" endtime="20201117 14:48:43.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045162931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045324708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.771" endtime="20201117 14:48:43.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.789" endtime="20201117 14:48:43.793"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.408" endtime="20201117 14:48:43.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.403" endtime="20201117 14:48:43.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:43.806" level="INFO">${RESULT} = [{'time': 0.045324708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001617769999999949, 'source_diff': 0.0001617769999999949}, {'time': 0.045494125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:43.798" endtime="20201117 14:48:43.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:43.839" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:43.809" endtime="20201117 14:48:43.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.850" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:43.848" endtime="20201117 14:48:43.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.856" level="INFO">VALUE: [0.0001617769999999949, 0.00016304200000000213, 0.00016163799999999867, 0.00016147200000000278, 0.0001619859999999959, 0.00016204200000000113, 0.00016219499999999692, 0.00016193100000000404, 0.00016207000000000027, 0.00016147299999999531, 0.00016141700000000397, 0.0001620560000000007, 0.00016163899999999815, 0.00016186099999999926, 0.00016133299999999962, 0.00016165300000000465, 0.00016166700000000422, 0.00016162499999999858, 0.00016169499999999642, 0.00016130500000000048, 0.0001620560000000007, 0.00016141599999999756, 0.00016216699999999779, 0.00016113899999999765, 0.00016181900000000055, 0.0001614859999999954, 0.00016208299999999343, 0.00016174999999999523, 0.0001617360000000026, 0.0001613889999999979, 0.00016213899999999865, 0.00016230500000000148, 0.00016148600000000235, 0.00016170900000000293, 0.00016140200000000493, 0.00016187499999999883, 0.00016187499999999883, 0.00016170799999999652, 0.00016286100000000026, 0.000161610999999999, 0.00016216700000000472, 0.00016133299999999962, 0.00016201399999999505, 0.00016143000000000407, 0.00016136099999999876, 0.00016215300000000515, 0.00016130500000000048, 0.0001613610000000057, 0.00016166699999999729, 0.0001617780000000013]</msg>
<status status="PASS" starttime="20201117 14:48:43.853" endtime="20201117 14:48:43.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.841" endtime="20201117 14:48:43.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.865" endtime="20201117 14:48:43.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:43.873" endtime="20201117 14:48:43.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.868" endtime="20201117 14:48:43.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.860" endtime="20201117 14:48:43.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.343" endtime="20201117 14:48:43.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.339" endtime="20201117 14:48:43.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.337" endtime="20201117 14:48:43.899"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.926" endtime="20201117 14:48:43.950"></status>
</kw>
<msg timestamp="20201117 14:48:43.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.923" endtime="20201117 14:48:43.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:43.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:43.953" endtime="20201117 14:48:43.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.960" endtime="20201117 14:48:43.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.916" endtime="20201117 14:48:43.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.910" endtime="20201117 14:48:43.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:43.983" endtime="20201117 14:48:44.331"></status>
</kw>
<msg timestamp="20201117 14:48:44.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045290125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045452403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:43.979" endtime="20201117 14:48:44.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045290125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045452403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.340" endtime="20201117 14:48:44.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.359" endtime="20201117 14:48:44.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.972" endtime="20201117 14:48:44.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.968" endtime="20201117 14:48:44.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:44.377" level="INFO">${RESULT} = [{'time': 0.045452403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001622780000000018, 'source_diff': 0.0001622780000000018}, {'time': 0.045622917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:44.369" endtime="20201117 14:48:44.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:44.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:44.379" endtime="20201117 14:48:44.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.418" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:44.416" endtime="20201117 14:48:44.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.423" level="INFO">VALUE: [0.0001622780000000018, 0.0001629859999999969, 0.0001625560000000012, 0.00016290299999999897, 0.00016284800000000016, 0.00016279200000000188, 0.00016309700000000094, 0.00016284700000000069, 0.00016316600000000625, 0.00016270799999999752, 0.0001625690000000013, 0.00016255500000000173, 0.00016316699999999879, 0.00016295799999999777, 0.00016273599999999666, 0.0001625140000000025, 0.00016250000000000292, 0.00016294499999999768, 0.00016294500000000461, 0.00016237499999999933, 0.0001625969999999935, 0.00016231900000000105, 0.00016297199999999734, 0.00016233300000000062, 0.00016325000000000367, 0.00016229200000000138, 0.00016243000000000507, 0.000163014000000003, 0.00016251399999999555, 0.00016295899999999724, 0.00016319499999999793, 0.00016283300000000112, 0.00016304200000000213, 0.00016409700000000194, 0.0001625549999999948, 0.0001632089999999975, 0.0001628889999999994, 0.0001631659999999993, 0.00016408299999999543, 0.00016247299999999631, 0.0001623889999999989, 0.00016233300000000062, 0.00016316699999999879, 0.00016309700000000094, 0.00016282000000000102, 0.00016308300000000137, 0.00016320900000000443, 0.00016232000000000052, 0.0001627219999999971, 0.0001631110000000005]</msg>
<status status="PASS" starttime="20201117 14:48:44.420" endtime="20201117 14:48:44.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.409" endtime="20201117 14:48:44.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.432" endtime="20201117 14:48:44.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:44.441" endtime="20201117 14:48:44.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.436" endtime="20201117 14:48:44.464"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.428" endtime="20201117 14:48:44.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.906" endtime="20201117 14:48:44.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.902" endtime="20201117 14:48:44.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:43.900" endtime="20201117 14:48:44.467"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.473" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.495" endtime="20201117 14:48:44.518"></status>
</kw>
<msg timestamp="20201117 14:48:44.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.491" endtime="20201117 14:48:44.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:44.522" endtime="20201117 14:48:44.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.528" endtime="20201117 14:48:44.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.484" endtime="20201117 14:48:44.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.478" endtime="20201117 14:48:44.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.558" endtime="20201117 14:48:44.905"></status>
</kw>
<msg timestamp="20201117 14:48:44.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045827875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.548" endtime="20201117 14:48:44.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045827875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045991417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:44.915" endtime="20201117 14:48:44.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:44.933" endtime="20201117 14:48:44.937"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.541" endtime="20201117 14:48:44.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.536" endtime="20201117 14:48:44.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:44.950" level="INFO">${RESULT} = [{'time': 0.045991417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016354200000000263, 'source_diff': 0.00016354200000000263}, {'time': 0.046162903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:44.942" endtime="20201117 14:48:44.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:44.980" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:44.952" endtime="20201117 14:48:44.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.991" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:44.989" endtime="20201117 14:48:44.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:44.996" level="INFO">VALUE: [0.00016354200000000263, 0.0001635419999999957, 0.00016375000000000417, 0.000164096999999995, 0.00016384700000000169, 0.0001645549999999968, 0.00016473599999999866, 0.00016404099999999672, 0.0001634859999999974, 0.00016377700000000384, 0.00016333300000000162, 0.00016386100000000126, 0.00016343100000000554, 0.00016340299999999947, 0.00016420799999999902, 0.00016383399999999465, 0.00016456999999999583, 0.00016395799999999877, 0.00016354200000000263, 0.00016334800000000066, 0.0001642639999999973, 0.00016359700000000144, 0.0001637910000000034, 0.00016380500000000298, 0.00016347199999999784, 0.00016362500000000058, 0.0001634309999999986, 0.0001641110000000015, 0.0001634439999999987, 0.00016399999999999748, 0.0001637219999999981, 0.00016420800000000596, 0.00016399999999999748, 0.00016331999999999458, 0.00016345899999999774, 0.0001640980000000014, 0.0001635140000000035, 0.00016352699999999665, 0.00016334700000000119, 0.00016400000000000442, 0.00016420799999999902, 0.00016382000000000202, 0.00016386100000000126, 0.0001639020000000005, 0.0001639859999999979, 0.0001637780000000033, 0.00016415299999999328, 0.00016322200000000453, 0.00016386100000000126, 0.0001650690000000038]</msg>
<status status="PASS" starttime="20201117 14:48:44.993" endtime="20201117 14:48:44.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.982" endtime="20201117 14:48:44.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.005" endtime="20201117 14:48:45.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:45.013" endtime="20201117 14:48:45.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.009" endtime="20201117 14:48:45.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.001" endtime="20201117 14:48:45.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.474" endtime="20201117 14:48:45.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.470" endtime="20201117 14:48:45.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:44.469" endtime="20201117 14:48:45.040"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.046" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.067" endtime="20201117 14:48:45.091"></status>
</kw>
<msg timestamp="20201117 14:48:45.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.064" endtime="20201117 14:48:45.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.094" endtime="20201117 14:48:45.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.101" endtime="20201117 14:48:45.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.057" endtime="20201117 14:48:45.107"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.051" endtime="20201117 14:48:45.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.125" endtime="20201117 14:48:45.470"></status>
</kw>
<msg timestamp="20201117 14:48:45.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045728458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.121" endtime="20201117 14:48:45.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045728458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.479" endtime="20201117 14:48:45.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.498" endtime="20201117 14:48:45.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.114" endtime="20201117 14:48:45.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.110" endtime="20201117 14:48:45.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:45.516" level="INFO">${RESULT} = [{'time': 0.045728458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016549999999999898, 'source_diff': 0.00016549999999999898}, {'time': 0.045898875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:45.508" endtime="20201117 14:48:45.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:45.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:45.518" endtime="20201117 14:48:45.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.557" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:45.555" endtime="20201117 14:48:45.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.562" level="INFO">VALUE: [0.00016549999999999898, 0.00016455599999999626, 0.00016420799999999902, 0.00016431999999999558, 0.00016468099999999986, 0.00016599999999999948, 0.00016486100000000226, 0.00016449999999999798, 0.00016440300000000047, 0.0001654859999999994, 0.00016505500000000423, 0.0001648890000000014, 0.00016449999999999798, 0.00016437500000000133, 0.00016586200000000273, 0.00016434800000000166, 0.0001660419999999982, 0.0001650839999999959, 0.00016454100000000416, 0.00016474999999999823, 0.00016520800000000002, 0.00016511099999999557, 0.00016434799999999472, 0.0001657220000000001, 0.0001647219999999991, 0.00016520800000000002, 0.00016480500000000398, 0.00016438800000000142, 0.00016518100000000036, 0.00016445900000000568, 0.00016501399999999805, 0.00016484800000000216, 0.00016463900000000115, 0.00016523599999999916, 0.00016461099999999507, 0.0001645140000000045, 0.00016445799999999927, 0.00016479199999999694, 0.00016465300000000072, 0.00016449999999999798, 0.00016509700000000294, 0.00016469499999999943, 0.0001649440000000002, 0.000165611000000003, 0.00016495799999999977, 0.00016508400000000284, 0.00016512500000000208, 0.00016422299999999806, 0.00016440300000000047, 0.0001652780000000048]</msg>
<status status="PASS" starttime="20201117 14:48:45.559" endtime="20201117 14:48:45.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.548" endtime="20201117 14:48:45.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.571" endtime="20201117 14:48:45.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:45.579" endtime="20201117 14:48:45.601"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.575" endtime="20201117 14:48:45.603"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.566" endtime="20201117 14:48:45.604"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.047" endtime="20201117 14:48:45.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.043" endtime="20201117 14:48:45.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.041" endtime="20201117 14:48:45.606"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.611" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.634" endtime="20201117 14:48:45.656"></status>
</kw>
<msg timestamp="20201117 14:48:45.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.630" endtime="20201117 14:48:45.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:45.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:45.660" endtime="20201117 14:48:45.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.666" endtime="20201117 14:48:45.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.623" endtime="20201117 14:48:45.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.616" endtime="20201117 14:48:45.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:45.691" endtime="20201117 14:48:46.026"></status>
</kw>
<msg timestamp="20201117 14:48:46.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046175861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046341458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:45.687" endtime="20201117 14:48:46.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046175861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046341458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.035" endtime="20201117 14:48:46.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.054" endtime="20201117 14:48:46.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.680" endtime="20201117 14:48:46.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.675" endtime="20201117 14:48:46.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:46.071" level="INFO">${RESULT} = [{'time': 0.046341458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016559700000000344, 'source_diff': 0.00016559700000000344}, {'time': 0.046511847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:46.062" endtime="20201117 14:48:46.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:46.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:46.073" endtime="20201117 14:48:46.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.115" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:46.112" endtime="20201117 14:48:46.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.120" level="INFO">VALUE: [0.00016559700000000344, 0.0001655690000000043, 0.000166096999999997, 0.00016609700000000394, 0.00016591599999999512, 0.00016601399999999905, 0.0001655839999999964, 0.00016604099999999872, 0.0001658890000000024, 0.00016699999999999354, 0.0001660549999999983, 0.00016669400000000195, 0.0001657220000000001, 0.0001663749999999964, 0.00016615200000000274, 0.0001655690000000043, 0.0001658059999999975, 0.00016515300000000122, 0.00016609700000000394, 0.00016584700000000369, 0.0001670139999999931, 0.00016551399999999855, 0.0001657639999999988, 0.00016616699999999485, 0.00016580600000000445, 0.0001658890000000024, 0.00016612499999999614, 0.0001655839999999964, 0.00016574999999999923, 0.0001658890000000024, 0.0001668189999999986, 0.00016612500000000308, 0.0001656519999999953, 0.00016561099999999607, 0.00016602799999999862, 0.0001660419999999982, 0.00016531999999999658, 0.0001653890000000019, 0.000165693999999994, 0.00016536099999999582, 0.00016544500000000018, 0.00016612499999999614, 0.00016666699999999535, 0.00016595900000000025, 0.00016568000000000138, 0.000165305999999997, 0.00016601399999999905, 0.00016599999999999948, 0.00016541700000000104, 0.00016566599999999487]</msg>
<status status="PASS" starttime="20201117 14:48:46.117" endtime="20201117 14:48:46.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.105" endtime="20201117 14:48:46.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.129" endtime="20201117 14:48:46.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:46.138" endtime="20201117 14:48:46.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.132" endtime="20201117 14:48:46.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.124" endtime="20201117 14:48:46.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.612" endtime="20201117 14:48:46.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.608" endtime="20201117 14:48:46.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:45.607" endtime="20201117 14:48:46.164"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.191" endtime="20201117 14:48:46.213"></status>
</kw>
<msg timestamp="20201117 14:48:46.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.187" endtime="20201117 14:48:46.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.217" endtime="20201117 14:48:46.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.223" endtime="20201117 14:48:46.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.180" endtime="20201117 14:48:46.228"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.175" endtime="20201117 14:48:46.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.247" endtime="20201117 14:48:46.580"></status>
</kw>
<msg timestamp="20201117 14:48:46.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045281222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045447819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.243" endtime="20201117 14:48:46.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045281222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045447819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.590" endtime="20201117 14:48:46.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.608" endtime="20201117 14:48:46.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.236" endtime="20201117 14:48:46.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.231" endtime="20201117 14:48:46.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:46.627" level="INFO">${RESULT} = [{'time': 0.045447819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001665969999999975, 'source_diff': 0.0001665969999999975}, {'time': 0.045620278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:46.618" endtime="20201117 14:48:46.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:46.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:46.629" endtime="20201117 14:48:46.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.668" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:46.665" endtime="20201117 14:48:46.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.673" level="INFO">VALUE: [0.0001665969999999975, 0.00016669500000000143, 0.00016697300000000082, 0.00016643099999999467, 0.00016675000000000023, 0.00016709700000000494, 0.00016695800000000177, 0.00016706899999999886, 0.00016645800000000127, 0.00016652799999999912, 0.00016704200000000613, 0.00016679200000000588, 0.00016700000000000048, 0.0001667769999999999, 0.00016665300000000272, 0.00016802800000000062, 0.0001669310000000021, 0.00016670800000000152, 0.0001664169999999951, 0.00016680600000000545, 0.00016723600000000116, 0.00016630500000000548, 0.00016697200000000134, 0.0001667220000000011, 0.0001662220000000006, 0.00016709700000000494, 0.0001664860000000004, 0.0001663340000000041, 0.00016659700000000444, 0.0001668189999999986, 0.000166693999999995, 0.00016663900000000315, 0.00016644500000000118, 0.00016793099999999617, 0.00016643000000000213, 0.00016636200000000323, 0.00016673600000000066, 0.00016729099999999997, 0.0001664860000000004, 0.00016811199999999804, 0.00016641700000000204, 0.00016675000000000023, 0.0001671389999999967, 0.00016697200000000134, 0.0001666519999999963, 0.0001673189999999991, 0.00016662499999999664, 0.00016708299999999843, 0.00016663900000000315, 0.00016633300000000462]</msg>
<status status="PASS" starttime="20201117 14:48:46.670" endtime="20201117 14:48:46.674"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.658" endtime="20201117 14:48:46.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.683" endtime="20201117 14:48:46.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:46.691" endtime="20201117 14:48:46.713"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.687" endtime="20201117 14:48:46.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.678" endtime="20201117 14:48:46.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.171" endtime="20201117 14:48:46.717"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.167" endtime="20201117 14:48:46.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.165" endtime="20201117 14:48:46.718"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.724" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.746" endtime="20201117 14:48:46.768"></status>
</kw>
<msg timestamp="20201117 14:48:46.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.742" endtime="20201117 14:48:46.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:46.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:46.771" endtime="20201117 14:48:46.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.777" endtime="20201117 14:48:46.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.735" endtime="20201117 14:48:46.783"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.729" endtime="20201117 14:48:46.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:46.801" endtime="20201117 14:48:47.135"></status>
</kw>
<msg timestamp="20201117 14:48:47.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045758875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045927139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:46.798" endtime="20201117 14:48:47.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045758875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045927139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.145" endtime="20201117 14:48:47.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.163" endtime="20201117 14:48:47.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.790" endtime="20201117 14:48:47.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.786" endtime="20201117 14:48:47.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:47.180" level="INFO">${RESULT} = [{'time': 0.045927139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001682640000000013, 'source_diff': 0.0001682640000000013}, {'time': 0.046101708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:47.171" endtime="20201117 14:48:47.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:47.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:47.182" endtime="20201117 14:48:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.220" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:47.218" endtime="20201117 14:48:47.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.226" level="INFO">VALUE: [0.0001682640000000013, 0.00016830500000000054, 0.00016805599999999976, 0.00016762499999999764, 0.00016786100000000526, 0.00016815299999999728, 0.00016787500000000483, 0.00016752800000000012, 0.0001690420000000012, 0.00016775000000000123, 0.00016783299999999918, 0.0001674860000000014, 0.00016734800000000466, 0.00016734699999999825, 0.00016765300000000372, 0.00016784699999999875, 0.00016755599999999926, 0.0001674860000000014, 0.00016804100000000072, 0.00016751400000000055, 0.00016752800000000012, 0.00016775000000000123, 0.00016794499999999574, 0.0001676389999999972, 0.0001688749999999989, 0.00016734699999999825, 0.00016804100000000072, 0.00016731999999999858, 0.00016794499999999574, 0.00016752800000000012, 0.0001679860000000019, 0.0001677499999999943, 0.0001680550000000003, 0.0001675969999999985, 0.00016783299999999918, 0.00016815299999999728, 0.00016802800000000062, 0.00016755599999999926, 0.00016784699999999875, 0.00016729199999999944, 0.00016851400000000155, 0.00016811099999999857, 0.00016800000000000148, 0.00016779199999999994, 0.00016766599999999687, 0.00016781999999999908, 0.00016786100000000526, 0.0001690550000000013, 0.00016819500000000293, 0.0001675549999999998]</msg>
<status status="PASS" starttime="20201117 14:48:47.223" endtime="20201117 14:48:47.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.211" endtime="20201117 14:48:47.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.235" endtime="20201117 14:48:47.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:47.244" endtime="20201117 14:48:47.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.239" endtime="20201117 14:48:47.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.231" endtime="20201117 14:48:47.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.725" endtime="20201117 14:48:47.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.721" endtime="20201117 14:48:47.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:46.719" endtime="20201117 14:48:47.270"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.275" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.297" endtime="20201117 14:48:47.320"></status>
</kw>
<msg timestamp="20201117 14:48:47.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.294" endtime="20201117 14:48:47.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.323" endtime="20201117 14:48:47.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.330" endtime="20201117 14:48:47.333"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.287" endtime="20201117 14:48:47.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.281" endtime="20201117 14:48:47.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.353" endtime="20201117 14:48:47.686"></status>
</kw>
<msg timestamp="20201117 14:48:47.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045640931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045809569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.350" endtime="20201117 14:48:47.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045640931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045809569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.696" endtime="20201117 14:48:47.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.715" endtime="20201117 14:48:47.720"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.342" endtime="20201117 14:48:47.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.338" endtime="20201117 14:48:47.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:47.734" level="INFO">${RESULT} = [{'time': 0.045809569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016863799999999873, 'source_diff': 0.00016863799999999873}, {'time': 0.045989042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:47.725" endtime="20201117 14:48:47.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:47.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:47.737" endtime="20201117 14:48:47.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.776" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:47.774" endtime="20201117 14:48:47.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.781" level="INFO">VALUE: [0.00016863799999999873, 0.00016852800000000112, 0.00016877699999999496, 0.00016834699999999925, 0.00016847200000000284, 0.0001688060000000005, 0.00016918000000000488, 0.00016859700000000644, 0.00016919400000000445, 0.00016927799999999493, 0.00016918099999999742, 0.000168306, 0.00016898599999999597, 0.00016877800000000137, 0.00016912499999999914, 0.00016838899999999796, 0.00016895799999999683, 0.00016855600000000026, 0.0001685550000000008, 0.00016890300000000497, 0.0001699299999999987, 0.0001690269999999952, 0.00016975000000000323, 0.0001689169999999976, 0.00016884699999999975, 0.00016850000000000198, 0.00016879100000000147, 0.00016852800000000112, 0.0001684719999999959, 0.0001690550000000013, 0.00016895800000000377, 0.00016888899999999846, 0.00016865299999999778, 0.0001692090000000035, 0.000169097, 0.00016844500000000318, 0.0001700840000000009, 0.00016850000000000198, 0.0001699299999999987, 0.00016888899999999846, 0.00016868099999999692, 0.00016919500000000393, 0.00016866599999999787, 0.00016862499999999864, 0.00016994499999999774, 0.00016851299999999514, 0.00016866699999999735, 0.0001691389999999987, 0.0001688060000000005, 0.00016893099999999717]</msg>
<status status="PASS" starttime="20201117 14:48:47.778" endtime="20201117 14:48:47.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.767" endtime="20201117 14:48:47.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.790" endtime="20201117 14:48:47.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:47.799" endtime="20201117 14:48:47.820"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.794" endtime="20201117 14:48:47.822"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.785" endtime="20201117 14:48:47.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.277" endtime="20201117 14:48:47.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.273" endtime="20201117 14:48:47.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.271" endtime="20201117 14:48:47.825"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.830" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.852" endtime="20201117 14:48:47.875"></status>
</kw>
<msg timestamp="20201117 14:48:47.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.849" endtime="20201117 14:48:47.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:47.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:47.878" endtime="20201117 14:48:47.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.884" endtime="20201117 14:48:47.888"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.841" endtime="20201117 14:48:47.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.836" endtime="20201117 14:48:47.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:47.908" endtime="20201117 14:48:48.243"></status>
</kw>
<msg timestamp="20201117 14:48:48.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045447181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045616875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:47.905" endtime="20201117 14:48:48.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045447181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045616875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:48.252" endtime="20201117 14:48:48.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.271" endtime="20201117 14:48:48.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.897" endtime="20201117 14:48:48.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.892" endtime="20201117 14:48:48.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:48.288" level="INFO">${RESULT} = [{'time': 0.045616875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000169693999999998, 'source_diff': 0.000169693999999998}, {'time': 0.045795375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:48.280" endtime="20201117 14:48:48.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:48.321" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201117 14:48:48.290" endtime="20201117 14:48:48.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.332" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:48.330" endtime="20201117 14:48:48.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:48.337" level="INFO">VALUE: [0.000169693999999998, 0.00017002800000000262, 0.00016930599999999407, 0.00016984700000000075, 0.0001700550000000023, 0.00016941700000000504, 0.00016999999999999654, 0.00016970800000000452, 0.00016932000000000058, 0.00016943099999999767, 0.00016968000000000538, 0.00016975000000000323, 0.000169791999999995, 0.000170791999999996, 0.0001702090000000045, 0.00016975000000000323, 0.00016983300000000118, 0.00016959799999999997, 0.00016944399999999776, 0.00017111100000000157, 0.00016986100000000032, 0.00016984800000000022, 0.0001707369999999972, 0.00017016599999999937, 0.00017001400000000305, 0.0001695970000000005, 0.00017018099999999842, 0.00017076399999999686, 0.00016980500000000204, 0.00016965299999999878, 0.0001694860000000034, 0.000170791999999996, 0.00016929200000000144, 0.00017023600000000416, 0.00017107000000000233, 0.00016991599999999912, 0.00016999999999999654, 0.0001694860000000034, 0.00016998599999999697, 0.00017015299999999928, 0.00016991600000000606, 0.00016945799999999733, 0.00016920799999999708, 0.00016965300000000572, 0.00016958300000000093, 0.00017002800000000262, 0.00016994499999999774, 0.00016968100000000486, 0.00016962499999999964, 0.00017005499999999535]</msg>
<status status="PASS" starttime="20201117 14:48:48.334" endtime="20201117 14:48:48.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.322" endtime="20201117 14:48:48.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:48.346" endtime="20201117 14:48:48.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:48.354" endtime="20201117 14:48:48.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.350" endtime="20201117 14:48:48.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.341" endtime="20201117 14:48:48.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.832" endtime="20201117 14:48:48.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.828" endtime="20201117 14:48:48.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:47.826" endtime="20201117 14:48:48.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.857" endtime="20201117 14:48:48.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:48.392" endtime="20201117 14:48:48.413"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.388" endtime="20201117 14:48:48.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:48.385" endtime="20201117 14:48:48.416"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:52.732" endtime="20201117 14:48:48.417" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:54.667" endtime="20201117 14:48:48.429"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:50.805" endtime="20201117 14:48:48.462"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_samr21-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
