<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 23:02:02.424" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.658" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:02:03.674" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:02:05.588" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:02:03.654" endtime="20201115 23:02:05.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.595" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:02:05.592" endtime="20201115 23:02:05.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.651" endtime="20201115 23:02:05.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.603" endtime="20201115 23:02:05.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.599" endtime="20201115 23:02:05.932"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.962" endtime="20201115 23:02:05.978"></status>
</kw>
<msg timestamp="20201115 23:02:05.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.959" endtime="20201115 23:02:05.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.981" endtime="20201115 23:02:05.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.992" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:05.988" endtime="20201115 23:02:05.993"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:05.952" endtime="20201115 23:02:05.995"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:05.947" endtime="20201115 23:02:05.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.944" endtime="20201115 23:02:05.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:06.007" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:06.005" endtime="20201115 23:02:06.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.999" endtime="20201115 23:02:06.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.942" endtime="20201115 23:02:06.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.940" endtime="20201115 23:02:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.010" endtime="20201115 23:02:06.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.937" endtime="20201115 23:02:06.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.017" endtime="20201115 23:02:06.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.934" endtime="20201115 23:02:06.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.648" endtime="20201115 23:02:06.023"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.039" endtime="20201115 23:02:06.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.035" endtime="20201115 23:02:06.062"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.096" endtime="20201115 23:02:06.111"></status>
</kw>
<msg timestamp="20201115 23:02:06.112" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.093" endtime="20201115 23:02:06.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.114" endtime="20201115 23:02:06.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.125" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:06.121" endtime="20201115 23:02:06.126"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:06.085" endtime="20201115 23:02:06.128"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:06.079" endtime="20201115 23:02:06.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.075" endtime="20201115 23:02:06.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:06.138" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:06.136" endtime="20201115 23:02:06.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.132" endtime="20201115 23:02:06.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.074" endtime="20201115 23:02:06.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.072" endtime="20201115 23:02:06.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.141" endtime="20201115 23:02:06.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.068" endtime="20201115 23:02:06.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.064" endtime="20201115 23:02:06.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.033" endtime="20201115 23:02:06.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.166" endtime="20201115 23:02:06.178"></status>
</kw>
<msg timestamp="20201115 23:02:06.179" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.163" endtime="20201115 23:02:06.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.186" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.182" endtime="20201115 23:02:06.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.188" endtime="20201115 23:02:06.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.156" endtime="20201115 23:02:06.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.151" endtime="20201115 23:02:06.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.209" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:02:06.206" endtime="20201115 23:02:06.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.213" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:02:06.211" endtime="20201115 23:02:06.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.199" endtime="20201115 23:02:06.215"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:06.024" endtime="20201115 23:02:06.218" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:02:02.688" endtime="20201115 23:02:06.227"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.361" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:02:06.376" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:02:08.305" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:02:06.357" endtime="20201115 23:02:08.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.312" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:02:08.309" endtime="20201115 23:02:08.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.354" endtime="20201115 23:02:08.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.319" endtime="20201115 23:02:08.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.316" endtime="20201115 23:02:08.648"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.678" endtime="20201115 23:02:08.695"></status>
</kw>
<msg timestamp="20201115 23:02:08.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.674" endtime="20201115 23:02:08.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.699" endtime="20201115 23:02:08.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.710" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:08.705" endtime="20201115 23:02:08.710"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.668" endtime="20201115 23:02:08.712"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.662" endtime="20201115 23:02:08.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.660" endtime="20201115 23:02:08.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:08.722" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:08.721" endtime="20201115 23:02:08.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.716" endtime="20201115 23:02:08.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.658" endtime="20201115 23:02:08.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.656" endtime="20201115 23:02:08.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.727" endtime="20201115 23:02:08.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.653" endtime="20201115 23:02:08.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.734" endtime="20201115 23:02:08.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.649" endtime="20201115 23:02:08.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.351" endtime="20201115 23:02:08.741"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.756" endtime="20201115 23:02:08.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.752" endtime="20201115 23:02:08.779"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.814" endtime="20201115 23:02:08.829"></status>
</kw>
<msg timestamp="20201115 23:02:08.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.810" endtime="20201115 23:02:08.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.833" endtime="20201115 23:02:08.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.844" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:08.839" endtime="20201115 23:02:08.844"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.803" endtime="20201115 23:02:08.846"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.796" endtime="20201115 23:02:08.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.793" endtime="20201115 23:02:08.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:08.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:08.855" endtime="20201115 23:02:08.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.850" endtime="20201115 23:02:08.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.791" endtime="20201115 23:02:08.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.789" endtime="20201115 23:02:08.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.860" endtime="20201115 23:02:08.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.785" endtime="20201115 23:02:08.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.781" endtime="20201115 23:02:08.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.749" endtime="20201115 23:02:08.867"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.875" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.957" endtime="20201115 23:02:08.971"></status>
</kw>
<msg timestamp="20201115 23:02:08.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.954" endtime="20201115 23:02:08.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.975" endtime="20201115 23:02:08.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.981" endtime="20201115 23:02:08.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.946" endtime="20201115 23:02:08.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.880" endtime="20201115 23:02:08.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.006" endtime="20201115 23:02:09.358"></status>
</kw>
<msg timestamp="20201115 23:02:09.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192768972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.192785819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.003" endtime="20201115 23:02:09.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192768972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.192785819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.367" endtime="20201115 23:02:09.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.386" endtime="20201115 23:02:09.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.994" endtime="20201115 23:02:09.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.989" endtime="20201115 23:02:09.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.404" level="INFO">${RESULT} = [{'time': 0.192785819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.684699999998651e-05, 'source_diff': 1.684699999998651e-05}, {'time': 0.192812792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.395" endtime="20201115 23:02:09.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.436" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:09.407" endtime="20201115 23:02:09.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.447" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.445" endtime="20201115 23:02:09.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.453" level="INFO">VALUE: [1.684699999998651e-05, 1.6695000000011007e-05, 1.7166000000012893e-05, 1.716699999998461e-05, 1.684699999998651e-05, 1.6513999999995255e-05, 1.6861000000006898e-05, 1.7181000000004998e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.6833999999993354e-05, 1.6500000000002624e-05, 1.6833999999993354e-05, 1.6513999999995255e-05, 1.652800000001564e-05, 1.666699999999799e-05, 1.634699999999989e-05, 1.6486000000009993e-05, 1.6347999999999363e-05, 1.684699999998651e-05, 1.6777999999995075e-05, 1.6861000000006898e-05, 1.6679999999991146e-05, 1.6500000000002624e-05, 1.6847000000014267e-05, 1.7151999999992507e-05, 1.6847000000014267e-05, 1.7000000000017e-05, 1.681900000000125e-05, 1.613899999999835e-05, 1.716699999998461e-05, 1.701300000001016e-05, 1.7014000000009633e-05, 1.666699999999799e-05, 1.7180000000005524e-05, 1.6820000000000723e-05, 1.6681000000018376e-05, 1.6985999999996615e-05, 1.7181000000004998e-05, 1.666699999999799e-05, 1.6847000000014267e-05, 1.634699999999989e-05, 1.7013999999981877e-05, 1.6457999999996975e-05, 1.6679999999991146e-05, 1.636099999999252e-05, 1.6777999999995075e-05, 1.6319999999986345e-05, 1.7207999999990786e-05, 1.673600000001718e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.449" endtime="20201115 23:02:09.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.438" endtime="20201115 23:02:09.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.462" endtime="20201115 23:02:09.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.470" endtime="20201115 23:02:09.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.466" endtime="20201115 23:02:09.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.457" endtime="20201115 23:02:09.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.876" endtime="20201115 23:02:09.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.872" endtime="20201115 23:02:09.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.870" endtime="20201115 23:02:09.497"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.502" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.524" endtime="20201115 23:02:09.538"></status>
</kw>
<msg timestamp="20201115 23:02:09.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.520" endtime="20201115 23:02:09.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.542" endtime="20201115 23:02:09.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.548" endtime="20201115 23:02:09.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.513" endtime="20201115 23:02:09.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.507" endtime="20201115 23:02:09.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.572" endtime="20201115 23:02:09.909"></status>
</kw>
<msg timestamp="20201115 23:02:09.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045434458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.568" endtime="20201115 23:02:09.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045434458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.919" endtime="20201115 23:02:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.938" endtime="20201115 23:02:09.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.561" endtime="20201115 23:02:09.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.556" endtime="20201115 23:02:09.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.958" level="INFO">${RESULT} = [{'time': 0.045451306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6847999999999863e-05, 'source_diff': 1.6847999999999863e-05}, {'time': 0.045478486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:09.948" endtime="20201115 23:02:09.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.988" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:09.960" endtime="20201115 23:02:09.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.999" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.997" endtime="20201115 23:02:10.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.005" level="INFO">VALUE: [1.6847999999999863e-05, 1.7193999999998155e-05, 1.7014000000002694e-05, 1.6707999999997225e-05, 1.668099999999756e-05, 1.661099999999971e-05, 1.6680000000005024e-05, 1.716699999999849e-05, 1.629100000000161e-05, 1.6681000000004498e-05, 1.6500000000002624e-05, 1.6693999999997655e-05, 1.7179999999998585e-05, 1.6986000000003554e-05, 1.7014000000002694e-05, 1.668099999999756e-05, 1.6721999999996795e-05, 1.6999999999996185e-05, 1.6736000000003304e-05, 1.6347999999999363e-05, 1.716699999999849e-05, 1.6847999999999863e-05, 1.631899999999381e-05, 1.6165999999998015e-05, 1.6681000000004498e-05, 1.63889999999986e-05, 1.7028000000002264e-05, 1.6653000000005358e-05, 1.631900000000075e-05, 1.634699999999989e-05, 1.652700000000229e-05, 1.687499999999953e-05, 1.634699999999989e-05, 1.6347999999999363e-05, 1.6847999999999863e-05, 1.668099999999756e-05, 1.6999999999996185e-05, 1.633300000000032e-05, 1.652700000000229e-05, 1.662499999999928e-05, 1.6665999999998515e-05, 1.6194000000004094e-05, 1.631900000000075e-05, 1.6569000000001e-05, 1.6749999999995935e-05, 1.7000000000003124e-05, 1.6207999999996725e-05, 1.680500000000168e-05, 1.7221999999997295e-05, 1.684700000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.001" endtime="20201115 23:02:10.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.990" endtime="20201115 23:02:10.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.014" endtime="20201115 23:02:10.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.022" endtime="20201115 23:02:10.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.018" endtime="20201115 23:02:10.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.009" endtime="20201115 23:02:10.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.503" endtime="20201115 23:02:10.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.499" endtime="20201115 23:02:10.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.498" endtime="20201115 23:02:10.049"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.054" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.076" endtime="20201115 23:02:10.090"></status>
</kw>
<msg timestamp="20201115 23:02:10.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.072" endtime="20201115 23:02:10.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.094" endtime="20201115 23:02:10.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.100" endtime="20201115 23:02:10.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.065" endtime="20201115 23:02:10.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.059" endtime="20201115 23:02:10.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.124" endtime="20201115 23:02:10.463"></status>
</kw>
<msg timestamp="20201115 23:02:10.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045279181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045296347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.120" endtime="20201115 23:02:10.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045279181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045296347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.473" endtime="20201115 23:02:10.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.492" endtime="20201115 23:02:10.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.113" endtime="20201115 23:02:10.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.108" endtime="20201115 23:02:10.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.510" level="INFO">${RESULT} = [{'time': 0.045296347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7165999999999015e-05, 'source_diff': 1.7165999999999015e-05}, {'time': 0.045322361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:10.500" endtime="20201115 23:02:10.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:10.512" endtime="20201115 23:02:10.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.552" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.549" endtime="20201115 23:02:10.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.557" level="INFO">VALUE: [1.7165999999999015e-05, 1.631900000000075e-05, 1.719499999999763e-05, 1.6527999999994825e-05, 1.7013999999995755e-05, 1.6666000000005454e-05, 1.7014000000002694e-05, 1.6847999999999863e-05, 1.6847999999999863e-05, 1.6292000000001083e-05, 1.665299999999842e-05, 1.7179999999998585e-05, 1.7014000000002694e-05, 1.7000000000003124e-05, 1.636099999999946e-05, 1.684700000000039e-05, 1.6499999999995685e-05, 1.633300000000032e-05, 1.716699999999849e-05, 1.636099999999946e-05, 1.7013999999995755e-05, 1.6679999999998085e-05, 1.6528000000001764e-05, 1.718099999999806e-05, 1.631900000000075e-05, 1.6681000000004498e-05, 1.6347999999999363e-05, 1.687499999999953e-05, 1.6542000000001333e-05, 1.70690000000015e-05, 1.6528000000001764e-05, 1.7027999999995325e-05, 1.7027999999995325e-05, 1.666699999999799e-05, 1.6722000000003734e-05, 1.7013999999995755e-05, 1.7195000000004568e-05, 1.6403000000005108e-05, 1.6887999999999626e-05, 1.7013999999995755e-05, 1.7000000000003124e-05, 1.6805999999994214e-05, 1.686099999999996e-05, 1.7028000000002264e-05, 1.6693999999997655e-05, 1.6570000000000473e-05, 1.693099999999781e-05, 1.6471999999996545e-05, 1.6499999999995685e-05, 1.6973000000003458e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.554" endtime="20201115 23:02:10.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.542" endtime="20201115 23:02:10.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.566" endtime="20201115 23:02:10.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.574" endtime="20201115 23:02:10.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.570" endtime="20201115 23:02:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.561" endtime="20201115 23:02:10.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.055" endtime="20201115 23:02:10.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.051" endtime="20201115 23:02:10.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.049" endtime="20201115 23:02:10.601"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.606" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.628" endtime="20201115 23:02:10.643"></status>
</kw>
<msg timestamp="20201115 23:02:10.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.625" endtime="20201115 23:02:10.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.646" endtime="20201115 23:02:10.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.653" endtime="20201115 23:02:10.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.618" endtime="20201115 23:02:10.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.612" endtime="20201115 23:02:10.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.677" endtime="20201115 23:02:11.018"></status>
</kw>
<msg timestamp="20201115 23:02:11.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045298833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.674" endtime="20201115 23:02:11.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045298833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.028" endtime="20201115 23:02:11.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.047" endtime="20201115 23:02:11.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.666" endtime="20201115 23:02:11.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.661" endtime="20201115 23:02:11.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.064" level="INFO">${RESULT} = [{'time': 0.045315167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6334000000006732e-05, 'source_diff': 1.6334000000006732e-05}, {'time': 0.045340361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.055" endtime="20201115 23:02:11.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.097" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:11.066" endtime="20201115 23:02:11.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.108" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.105" endtime="20201115 23:02:11.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.113" level="INFO">VALUE: [1.6334000000006732e-05, 1.6680000000005024e-05, 1.634699999999989e-05, 1.6513999999995255e-05, 1.701299999999628e-05, 1.668099999999756e-05, 1.684700000000039e-05, 1.666699999999799e-05, 1.634699999999989e-05, 1.644499999999688e-05, 1.633300000000032e-05, 1.7193999999998155e-05, 1.6347999999999363e-05, 1.686099999999996e-05, 1.7179999999998585e-05, 1.634699999999989e-05, 1.7000000000003124e-05, 1.684700000000039e-05, 1.636099999999946e-05, 1.6778000000002014e-05, 1.665299999999842e-05, 1.684699999999345e-05, 1.6500000000002624e-05, 1.7028000000002264e-05, 1.6861999999999433e-05, 1.683300000000082e-05, 1.633300000000032e-05, 1.6667000000004928e-05, 1.7179999999998585e-05, 1.668099999999756e-05, 1.684699999999345e-05, 1.6693999999997655e-05, 1.6514000000002194e-05, 1.686099999999996e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.633300000000032e-05, 1.7000000000003124e-05, 1.6694000000004594e-05, 1.7013999999995755e-05, 1.634699999999989e-05, 1.7013999999995755e-05, 1.6514000000002194e-05, 1.6834000000000293e-05, 1.6985999999996615e-05, 1.6500000000002624e-05, 1.684700000000039e-05, 1.6667000000004928e-05, 1.718099999999806e-05, 1.6681000000004498e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.110" endtime="20201115 23:02:11.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.099" endtime="20201115 23:02:11.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.122" endtime="20201115 23:02:11.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.130" endtime="20201115 23:02:11.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.126" endtime="20201115 23:02:11.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.117" endtime="20201115 23:02:11.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.608" endtime="20201115 23:02:11.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.604" endtime="20201115 23:02:11.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.602" endtime="20201115 23:02:11.157"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.162" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.185" endtime="20201115 23:02:11.199"></status>
</kw>
<msg timestamp="20201115 23:02:11.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.181" endtime="20201115 23:02:11.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.203" endtime="20201115 23:02:11.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.209" endtime="20201115 23:02:11.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.174" endtime="20201115 23:02:11.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.168" endtime="20201115 23:02:11.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.233" endtime="20201115 23:02:11.572"></status>
</kw>
<msg timestamp="20201115 23:02:11.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046116208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.230" endtime="20201115 23:02:11.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046116208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.582" endtime="20201115 23:02:11.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.601" endtime="20201115 23:02:11.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.222" endtime="20201115 23:02:11.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.217" endtime="20201115 23:02:11.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.620" level="INFO">${RESULT} = [{'time': 0.046132903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6695000000004068e-05, 'source_diff': 1.6695000000004068e-05}, {'time': 0.046155917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.611" endtime="20201115 23:02:11.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.651" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:11.622" endtime="20201115 23:02:11.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.662" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.659" endtime="20201115 23:02:11.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.667" level="INFO">VALUE: [1.6695000000004068e-05, 1.618099999999706e-05, 1.7207999999997725e-05, 1.6514000000002194e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.683299999999388e-05, 1.668099999999756e-05, 1.684700000000039e-05, 1.6665999999998515e-05, 1.7179999999998585e-05, 1.681900000000125e-05, 1.6361000000006398e-05, 1.691699999999824e-05, 1.6528000000001764e-05, 1.6709000000003638e-05, 1.6834000000000293e-05, 1.6999999999996185e-05, 1.634699999999989e-05, 1.6347999999999363e-05, 1.6681000000004498e-05, 1.6348000000006302e-05, 1.6347999999999363e-05, 1.6679999999998085e-05, 1.7193999999998155e-05, 1.636099999999946e-05, 1.663899999999885e-05, 1.6681000000004498e-05, 1.687499999999953e-05, 1.6694000000004594e-05, 1.636099999999946e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.6387999999999125e-05, 1.6666000000005454e-05, 1.6403000000005108e-05, 1.6375000000005968e-05, 1.7000000000003124e-05, 1.683300000000082e-05, 1.633300000000032e-05, 1.684700000000039e-05, 1.6679999999998085e-05, 1.7014000000002694e-05, 1.6180000000004524e-05, 1.6847999999999863e-05, 1.7014000000002694e-05, 1.6639000000005788e-05, 1.631899999999381e-05, 1.6527999999994825e-05, 1.701300000000322e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.664" endtime="20201115 23:02:11.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.652" endtime="20201115 23:02:11.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.676" endtime="20201115 23:02:11.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.684" endtime="20201115 23:02:11.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.680" endtime="20201115 23:02:11.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.671" endtime="20201115 23:02:11.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.164" endtime="20201115 23:02:11.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.160" endtime="20201115 23:02:11.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.158" endtime="20201115 23:02:11.712"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.717" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.739" endtime="20201115 23:02:11.753"></status>
</kw>
<msg timestamp="20201115 23:02:11.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.735" endtime="20201115 23:02:11.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.757" endtime="20201115 23:02:11.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.763" endtime="20201115 23:02:11.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.728" endtime="20201115 23:02:11.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.722" endtime="20201115 23:02:11.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.787" endtime="20201115 23:02:12.126"></status>
</kw>
<msg timestamp="20201115 23:02:12.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045224083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045240764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.783" endtime="20201115 23:02:12.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045224083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045240764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.135" endtime="20201115 23:02:12.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.154" endtime="20201115 23:02:12.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.776" endtime="20201115 23:02:12.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.771" endtime="20201115 23:02:12.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.172" level="INFO">${RESULT} = [{'time': 0.045240764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6681000000004498e-05, 'source_diff': 1.6681000000004498e-05}, {'time': 0.045263778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:12.163" endtime="20201115 23:02:12.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.202" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:12.174" endtime="20201115 23:02:12.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.214" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.211" endtime="20201115 23:02:12.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.219" level="INFO">VALUE: [1.6681000000004498e-05, 1.6999999999996185e-05, 1.7055999999994464e-05, 1.7014000000002694e-05, 1.709700000000064e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6500000000002624e-05, 1.6971999999997045e-05, 1.668099999999756e-05, 1.6681000000004498e-05, 1.634699999999989e-05, 1.684700000000039e-05, 1.634699999999989e-05, 1.633300000000032e-05, 1.7014000000002694e-05, 1.7179999999998585e-05, 1.683300000000082e-05, 1.7013999999995755e-05, 1.7014000000002694e-05, 1.7000000000003124e-05, 1.616699999999749e-05, 1.684700000000039e-05, 1.684699999999345e-05, 1.6499999999995685e-05, 1.7028000000002264e-05, 1.709700000000064e-05, 1.668099999999756e-05, 1.683299999999388e-05, 1.6681000000004498e-05, 1.7028000000002264e-05, 1.7000000000003124e-05, 1.702699999999585e-05, 1.6707999999997225e-05, 1.7179999999998585e-05, 1.634699999999989e-05, 1.634699999999989e-05, 1.6820000000000723e-05, 1.6181000000003998e-05, 1.7014000000002694e-05, 1.7207999999997725e-05, 1.668099999999756e-05, 1.6680000000005024e-05, 1.668099999999756e-05, 1.6679999999998085e-05, 1.7027999999995325e-05, 1.636099999999946e-05, 1.6986000000003554e-05, 1.613899999999835e-05, 1.636099999999946e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.216" endtime="20201115 23:02:12.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.204" endtime="20201115 23:02:12.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.229" endtime="20201115 23:02:12.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.237" endtime="20201115 23:02:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.233" endtime="20201115 23:02:12.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.224" endtime="20201115 23:02:12.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.718" endtime="20201115 23:02:12.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.714" endtime="20201115 23:02:12.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.712" endtime="20201115 23:02:12.264"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.269" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.291" endtime="20201115 23:02:12.305"></status>
</kw>
<msg timestamp="20201115 23:02:12.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.287" endtime="20201115 23:02:12.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.309" endtime="20201115 23:02:12.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.315" endtime="20201115 23:02:12.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.280" endtime="20201115 23:02:12.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.274" endtime="20201115 23:02:12.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.339" endtime="20201115 23:02:12.676"></status>
</kw>
<msg timestamp="20201115 23:02:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.335" endtime="20201115 23:02:12.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045387208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.686" endtime="20201115 23:02:12.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.705" endtime="20201115 23:02:12.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.328" endtime="20201115 23:02:12.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.323" endtime="20201115 23:02:12.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.724" level="INFO">${RESULT} = [{'time': 0.045387208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6499999999995685e-05, 'source_diff': 1.6499999999995685e-05}, {'time': 0.045415319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:12.715" endtime="20201115 23:02:12.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.754" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:12.726" endtime="20201115 23:02:12.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.765" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.763" endtime="20201115 23:02:12.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.771" level="INFO">VALUE: [1.6499999999995685e-05, 1.634699999999989e-05, 1.701300000000322e-05, 1.6985999999996615e-05, 1.7181000000004998e-05, 1.6708000000004164e-05, 1.7014000000002694e-05, 1.6361999999998933e-05, 1.618099999999706e-05, 1.7194000000005094e-05, 1.7000000000003124e-05, 1.6665999999998515e-05, 1.6514000000002194e-05, 1.6514000000002194e-05, 1.6514000000002194e-05, 1.716699999999849e-05, 1.6306000000000653e-05, 1.7013999999995755e-05, 1.686099999999996e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.7014000000002694e-05, 1.684700000000039e-05, 1.6362000000005872e-05, 1.716699999999849e-05, 1.6679999999998085e-05, 1.684700000000039e-05, 1.6680000000005024e-05, 1.6347999999999363e-05, 1.687499999999953e-05, 1.6834000000000293e-05, 1.6361000000006398e-05, 1.701299999999628e-05, 1.666699999999799e-05, 1.684700000000039e-05, 1.6181000000003998e-05, 1.6485999999996115e-05, 1.633300000000032e-05, 1.718099999999806e-05, 1.7179999999998585e-05, 1.668099999999756e-05, 1.6333999999999793e-05, 1.6681000000004498e-05, 1.659700000000014e-05, 1.715299999999892e-05, 1.6651999999998945e-05, 1.6541999999994395e-05, 1.6679999999998085e-05, 1.6348000000006302e-05, 1.6667000000004928e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.768" endtime="20201115 23:02:12.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.756" endtime="20201115 23:02:12.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.780" endtime="20201115 23:02:12.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.789" endtime="20201115 23:02:12.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.784" endtime="20201115 23:02:12.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.776" endtime="20201115 23:02:12.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.270" endtime="20201115 23:02:12.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.266" endtime="20201115 23:02:12.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.265" endtime="20201115 23:02:12.815"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.842" endtime="20201115 23:02:12.857"></status>
</kw>
<msg timestamp="20201115 23:02:12.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.839" endtime="20201115 23:02:12.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.861" endtime="20201115 23:02:12.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.867" endtime="20201115 23:02:12.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.832" endtime="20201115 23:02:12.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.826" endtime="20201115 23:02:12.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.892" endtime="20201115 23:02:13.245"></status>
</kw>
<msg timestamp="20201115 23:02:13.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045397, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:12.888" endtime="20201115 23:02:13.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045397, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:13.255" endtime="20201115 23:02:13.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.273" endtime="20201115 23:02:13.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.881" endtime="20201115 23:02:13.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.876" endtime="20201115 23:02:13.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.291" level="INFO">${RESULT} = [{'time': 0.045397, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.045428194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201115 23:02:13.282" endtime="20201115 23:02:13.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.325" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:13.294" endtime="20201115 23:02:13.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.336" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.334" endtime="20201115 23:02:13.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.341" level="INFO">VALUE: [2.35970000000002e-05, 2.3499999999995747e-05, 2.3749999999995997e-05, 2.3333999999999855e-05, 2.3499999999995747e-05, 2.331900000000081e-05, 2.365299999999848e-05, 2.379100000000217e-05, 2.365299999999848e-05, 2.3306000000000715e-05, 2.3665999999998577e-05, 2.406900000000156e-05, 2.3820000000000785e-05, 2.3485999999996177e-05, 2.365299999999848e-05, 2.3320000000000285e-05, 2.3999999999996247e-05, 2.381900000000131e-05, 2.3250000000002435e-05, 2.381900000000131e-05, 2.412499999999984e-05, 2.381900000000131e-05, 2.368100000000456e-05, 2.415299999999898e-05, 2.40970000000007e-05, 2.334699999999995e-05, 2.381900000000131e-05, 2.3819999999993846e-05, 2.3665999999998577e-05, 2.362499999999934e-05, 2.384700000000045e-05, 2.4000000000003185e-05, 2.416699999999855e-05, 2.3999999999996247e-05, 2.3847999999999925e-05, 2.415299999999898e-05, 2.4000000000003185e-05, 2.4207999999997787e-05, 2.381900000000131e-05, 2.381900000000131e-05, 2.3513999999995316e-05, 2.4000000000003185e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3665999999998577e-05, 2.363899999999891e-05, 2.329100000000167e-05, 2.363899999999891e-05, 2.3471999999996607e-05, 2.365299999999848e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.338" endtime="20201115 23:02:13.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.327" endtime="20201115 23:02:13.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.351" endtime="20201115 23:02:13.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.361" endtime="20201115 23:02:13.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.357" endtime="20201115 23:02:13.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.346" endtime="20201115 23:02:13.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.822" endtime="20201115 23:02:13.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.818" endtime="20201115 23:02:13.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.816" endtime="20201115 23:02:13.388"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.393" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.415" endtime="20201115 23:02:13.431"></status>
</kw>
<msg timestamp="20201115 23:02:13.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.412" endtime="20201115 23:02:13.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.435" endtime="20201115 23:02:13.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.441" endtime="20201115 23:02:13.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.404" endtime="20201115 23:02:13.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.398" endtime="20201115 23:02:13.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.466" endtime="20201115 23:02:13.817"></status>
</kw>
<msg timestamp="20201115 23:02:13.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045751736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045775736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.462" endtime="20201115 23:02:13.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045751736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045775736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.826" endtime="20201115 23:02:13.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.845" endtime="20201115 23:02:13.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.455" endtime="20201115 23:02:13.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.449" endtime="20201115 23:02:13.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.865" level="INFO">${RESULT} = [{'time': 0.045775736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3999999999996247e-05, 'source_diff': 2.3999999999996247e-05}, {'time': 0.045804694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.856" endtime="20201115 23:02:13.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.895" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:13.867" endtime="20201115 23:02:13.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.906" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.904" endtime="20201115 23:02:13.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.912" level="INFO">VALUE: [2.3999999999996247e-05, 2.381900000000131e-05, 2.347300000000302e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.416699999999855e-05, 2.4179999999998647e-05, 2.331900000000081e-05, 2.3637999999999437e-05, 2.33890000000056e-05, 2.415299999999898e-05, 2.3694000000004656e-05, 2.3514000000002255e-05, 2.384700000000045e-05, 2.420899999999726e-05, 2.381900000000131e-05, 2.4013999999995816e-05, 2.3834000000000355e-05, 2.3806000000001215e-05, 2.363899999999891e-05, 2.336099999999952e-05, 2.4014000000002755e-05, 2.397299999999658e-05, 2.404100000000242e-05, 2.3499999999995747e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.380500000000174e-05, 2.368099999999762e-05, 2.3291999999994206e-05, 2.3833999999993416e-05, 2.3443999999997467e-05, 2.32770000000021e-05, 2.3304999999994302e-05, 2.3651999999999007e-05, 2.415299999999898e-05, 2.331900000000081e-05, 2.3986000000003616e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.3693999999997717e-05, 2.369500000000413e-05, 2.4137999999999937e-05, 2.3318999999993872e-05, 2.416699999999855e-05, 2.380500000000174e-05, 2.381900000000131e-05, 2.365300000000542e-05, 2.348700000000259e-05, 2.395900000000395e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.909" endtime="20201115 23:02:13.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.897" endtime="20201115 23:02:13.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.922" endtime="20201115 23:02:13.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.931" endtime="20201115 23:02:13.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.926" endtime="20201115 23:02:13.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.917" endtime="20201115 23:02:13.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.394" endtime="20201115 23:02:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.390" endtime="20201115 23:02:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.389" endtime="20201115 23:02:13.958"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.985" endtime="20201115 23:02:14.002"></status>
</kw>
<msg timestamp="20201115 23:02:14.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.982" endtime="20201115 23:02:14.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.005" endtime="20201115 23:02:14.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.012" endtime="20201115 23:02:14.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.974" endtime="20201115 23:02:14.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.969" endtime="20201115 23:02:14.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.036" endtime="20201115 23:02:14.387"></status>
</kw>
<msg timestamp="20201115 23:02:14.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046069903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.032" endtime="20201115 23:02:14.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046069903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.397" endtime="20201115 23:02:14.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.416" endtime="20201115 23:02:14.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.025" endtime="20201115 23:02:14.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.020" endtime="20201115 23:02:14.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.434" level="INFO">${RESULT} = [{'time': 0.046069903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3333999999999855e-05, 'source_diff': 2.3333999999999855e-05}, {'time': 0.0461, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:14.425" endtime="20201115 23:02:14.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.464" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:14.436" endtime="20201115 23:02:14.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.475" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.473" endtime="20201115 23:02:14.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.481" level="INFO">VALUE: [2.3333999999999855e-05, 2.3986000000003616e-05, 2.415299999999898e-05, 2.363899999999891e-05, 2.4014000000002755e-05, 2.415299999999898e-05, 2.3306000000000715e-05, 2.3971999999997107e-05, 2.3471999999996607e-05, 2.413899999999941e-05, 2.3320000000000285e-05, 2.3320000000000285e-05, 2.415300000000592e-05, 2.4151999999999507e-05, 2.3526999999995413e-05, 2.4000000000003185e-05, 2.3806000000001215e-05, 2.3485999999996177e-05, 2.3387999999999187e-05, 2.3722000000003796e-05, 2.3985999999996677e-05, 2.415300000000592e-05, 2.3472000000003546e-05, 2.3513999999995316e-05, 2.381900000000131e-05, 2.366699999999805e-05, 2.3971999999997107e-05, 2.333300000000038e-05, 2.3693999999997717e-05, 2.363899999999891e-05, 2.419499999999769e-05, 2.3735999999996427e-05, 2.3944000000004906e-05, 2.365299999999848e-05, 2.331900000000081e-05, 2.3764000000002505e-05, 2.3972000000004046e-05, 2.35970000000002e-05, 2.380500000000174e-05, 2.363899999999891e-05, 2.3471999999996607e-05, 2.3486000000003115e-05, 2.3985999999996677e-05, 2.381900000000131e-05, 2.3486000000003115e-05, 2.415299999999898e-05, 2.3306000000000715e-05, 2.381900000000131e-05, 2.3430000000004836e-05, 2.3292000000001145e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.478" endtime="20201115 23:02:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.466" endtime="20201115 23:02:14.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.490" endtime="20201115 23:02:14.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.498" endtime="20201115 23:02:14.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.494" endtime="20201115 23:02:14.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.485" endtime="20201115 23:02:14.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.965" endtime="20201115 23:02:14.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.960" endtime="20201115 23:02:14.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.959" endtime="20201115 23:02:14.525"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.530" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.552" endtime="20201115 23:02:14.569"></status>
</kw>
<msg timestamp="20201115 23:02:14.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.549" endtime="20201115 23:02:14.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.572" endtime="20201115 23:02:14.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.579" endtime="20201115 23:02:14.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.541" endtime="20201115 23:02:14.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.535" endtime="20201115 23:02:14.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.603" endtime="20201115 23:02:14.954"></status>
</kw>
<msg timestamp="20201115 23:02:14.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045581708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.599" endtime="20201115 23:02:14.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045581708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.964" endtime="20201115 23:02:14.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.983" endtime="20201115 23:02:14.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.592" endtime="20201115 23:02:14.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.587" endtime="20201115 23:02:14.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.002" level="INFO">${RESULT} = [{'time': 0.045605014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3306000000000715e-05, 'source_diff': 2.3306000000000715e-05}, {'time': 0.045639153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.993" endtime="20201115 23:02:15.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.033" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:15.004" endtime="20201115 23:02:15.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.044" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.041" endtime="20201115 23:02:15.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.049" level="INFO">VALUE: [2.3306000000000715e-05, 2.3320000000000285e-05, 2.365299999999848e-05, 2.368099999999762e-05, 2.3999999999996247e-05, 2.340299999999823e-05, 2.365299999999848e-05, 2.418099999999812e-05, 2.4165999999999077e-05, 2.4000000000003185e-05, 2.388899999999916e-05, 2.3318999999993872e-05, 2.3971999999997107e-05, 2.383300000000088e-05, 2.3500000000002685e-05, 2.415299999999898e-05, 2.4013999999995816e-05, 2.4000000000003185e-05, 2.3472000000003546e-05, 2.366699999999805e-05, 2.365299999999848e-05, 2.4000000000003185e-05, 2.365299999999848e-05, 2.383300000000088e-05, 2.3806000000001215e-05, 2.3500000000002685e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.336099999999952e-05, 2.415300000000592e-05, 2.3513999999995316e-05, 2.347300000000302e-05, 2.3665999999998577e-05, 2.3806000000001215e-05, 2.3820000000000785e-05, 2.3485999999996177e-05, 2.3820000000000785e-05, 2.361099999999977e-05, 2.334699999999995e-05, 2.416699999999855e-05, 2.3820000000000785e-05, 2.341700000000474e-05, 2.380500000000174e-05, 2.3651999999999007e-05, 2.3680000000005086e-05, 2.3486000000003115e-05, 2.365299999999848e-05, 2.4014000000002755e-05, 2.3486000000003115e-05, 2.4014000000002755e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.046" endtime="20201115 23:02:15.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.035" endtime="20201115 23:02:15.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.058" endtime="20201115 23:02:15.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.066" endtime="20201115 23:02:15.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.062" endtime="20201115 23:02:15.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.054" endtime="20201115 23:02:15.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.531" endtime="20201115 23:02:15.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.528" endtime="20201115 23:02:15.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.526" endtime="20201115 23:02:15.093"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.121" endtime="20201115 23:02:15.138"></status>
</kw>
<msg timestamp="20201115 23:02:15.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.118" endtime="20201115 23:02:15.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.141" endtime="20201115 23:02:15.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.148" endtime="20201115 23:02:15.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.110" endtime="20201115 23:02:15.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.104" endtime="20201115 23:02:15.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.171" endtime="20201115 23:02:15.523"></status>
</kw>
<msg timestamp="20201115 23:02:15.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046532944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046557097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.168" endtime="20201115 23:02:15.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046532944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046557097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.533" endtime="20201115 23:02:15.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.552" endtime="20201115 23:02:15.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.161" endtime="20201115 23:02:15.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.156" endtime="20201115 23:02:15.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.569" level="INFO">${RESULT} = [{'time': 0.046557097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415299999999898e-05, 'source_diff': 2.415299999999898e-05}, {'time': 0.046590139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:15.560" endtime="20201115 23:02:15.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.602" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:15.571" endtime="20201115 23:02:15.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.614" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.611" endtime="20201115 23:02:15.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.619" level="INFO">VALUE: [2.415299999999898e-05, 2.3486000000003115e-05, 2.3485999999996177e-05, 2.3972000000004046e-05, 2.413899999999941e-05, 2.394499999999744e-05, 2.331900000000081e-05, 2.381900000000131e-05, 2.3986000000003616e-05, 2.3944000000004906e-05, 2.366699999999805e-05, 2.415300000000592e-05, 2.4151999999999507e-05, 2.3707999999997287e-05, 2.362499999999934e-05, 2.3486000000003115e-05, 2.3986000000003616e-05, 2.3972000000004046e-05, 2.338899999999866e-05, 2.4165999999999077e-05, 2.333300000000038e-05, 2.363900000000585e-05, 2.3818999999994372e-05, 2.3679999999998147e-05, 2.4013999999995816e-05, 2.415299999999898e-05, 2.391700000000524e-05, 2.365299999999848e-05, 2.3485999999996177e-05, 2.3820000000000785e-05, 2.3820000000000785e-05, 2.3320000000000285e-05, 2.416699999999855e-05, 2.4180000000005586e-05, 2.404100000000242e-05, 2.333300000000038e-05, 2.3542000000001395e-05, 2.33890000000056e-05, 2.365299999999848e-05, 2.390299999999873e-05, 2.365299999999848e-05, 2.347299999999608e-05, 2.365299999999848e-05, 2.4165999999999077e-05, 2.3513999999995316e-05, 2.3485999999996177e-05, 2.365299999999848e-05, 2.3500000000002685e-05, 2.3806000000001215e-05, 2.4068999999994622e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.616" endtime="20201115 23:02:15.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.604" endtime="20201115 23:02:15.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.628" endtime="20201115 23:02:15.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.636" endtime="20201115 23:02:15.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.632" endtime="20201115 23:02:15.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.623" endtime="20201115 23:02:15.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.100" endtime="20201115 23:02:15.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.096" endtime="20201115 23:02:15.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.094" endtime="20201115 23:02:15.664"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.691" endtime="20201115 23:02:15.707"></status>
</kw>
<msg timestamp="20201115 23:02:15.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.688" endtime="20201115 23:02:15.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.711" endtime="20201115 23:02:15.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.717" endtime="20201115 23:02:15.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.680" endtime="20201115 23:02:15.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.674" endtime="20201115 23:02:15.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.741" endtime="20201115 23:02:16.093"></status>
</kw>
<msg timestamp="20201115 23:02:16.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04561225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045635792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:15.737" endtime="20201115 23:02:16.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04561225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045635792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:16.103" endtime="20201115 23:02:16.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.121" endtime="20201115 23:02:16.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.730" endtime="20201115 23:02:16.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.725" endtime="20201115 23:02:16.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.140" level="INFO">${RESULT} = [{'time': 0.045635792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3542000000001395e-05, 'source_diff': 2.3542000000001395e-05}, {'time': 0.045665778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.131" endtime="20201115 23:02:16.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.171" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:16.143" endtime="20201115 23:02:16.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.182" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.180" endtime="20201115 23:02:16.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.188" level="INFO">VALUE: [2.3542000000001395e-05, 2.412499999999984e-05, 2.3485999999996177e-05, 2.3999999999996247e-05, 2.3486000000003115e-05, 2.381900000000131e-05, 2.3486000000003115e-05, 2.331900000000081e-05, 2.3999999999996247e-05, 2.3320000000000285e-05, 2.419499999999769e-05, 2.3471999999996607e-05, 2.3333999999999855e-05, 2.3320000000000285e-05, 2.3500000000002685e-05, 2.381900000000131e-05, 2.3804999999994803e-05, 2.3806000000001215e-05, 2.331900000000081e-05, 2.4000000000003185e-05, 2.3986000000003616e-05, 2.363899999999891e-05, 2.3818999999994372e-05, 2.4137999999999937e-05, 2.381900000000131e-05, 2.363900000000585e-05, 2.415299999999898e-05, 2.395900000000395e-05, 2.365299999999848e-05, 2.3972000000004046e-05, 2.381900000000131e-05, 2.365299999999848e-05, 2.3972000000004046e-05, 2.330500000000124e-05, 2.3806000000001215e-05, 2.361099999999977e-05, 2.380500000000174e-05, 2.3929999999998397e-05, 2.333300000000038e-05, 2.3971999999997107e-05, 2.3832999999993942e-05, 2.3471999999996607e-05, 2.4000000000003185e-05, 2.4000000000003185e-05, 2.3276999999995163e-05, 2.3806000000001215e-05, 2.3999999999996247e-05, 2.3277999999994636e-05, 2.4014000000002755e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.184" endtime="20201115 23:02:16.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.173" endtime="20201115 23:02:16.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.197" endtime="20201115 23:02:16.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.206" endtime="20201115 23:02:16.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.201" endtime="20201115 23:02:16.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.193" endtime="20201115 23:02:16.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.670" endtime="20201115 23:02:16.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.666" endtime="20201115 23:02:16.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.665" endtime="20201115 23:02:16.232"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.238" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.259" endtime="20201115 23:02:16.276"></status>
</kw>
<msg timestamp="20201115 23:02:16.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.256" endtime="20201115 23:02:16.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.279" endtime="20201115 23:02:16.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.286" endtime="20201115 23:02:16.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.249" endtime="20201115 23:02:16.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.243" endtime="20201115 23:02:16.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.309" endtime="20201115 23:02:16.660"></status>
</kw>
<msg timestamp="20201115 23:02:16.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045553694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.306" endtime="20201115 23:02:16.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045553694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.669" endtime="20201115 23:02:16.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.688" endtime="20201115 23:02:16.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.299" endtime="20201115 23:02:16.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.294" endtime="20201115 23:02:16.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.706" level="INFO">${RESULT} = [{'time': 0.045553694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4165999999999077e-05, 'source_diff': 2.4165999999999077e-05}, {'time': 0.045587694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.697" endtime="20201115 23:02:16.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.736" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:16.708" endtime="20201115 23:02:16.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.747" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.745" endtime="20201115 23:02:16.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.754" level="INFO">VALUE: [2.4165999999999077e-05, 2.3776999999995663e-05, 2.3320000000000285e-05, 2.3986000000003616e-05, 2.336099999999952e-05, 2.3500000000002685e-05, 2.348699999999565e-05, 2.4151999999999507e-05, 2.381900000000131e-05, 2.4151999999999507e-05, 2.383300000000088e-05, 2.4179999999998647e-05, 2.363899999999891e-05, 2.3820000000000785e-05, 2.3486000000003115e-05, 2.331900000000081e-05, 2.3319999999993346e-05, 2.3292000000001145e-05, 2.3986000000003616e-05, 2.3485999999996177e-05, 2.412499999999984e-05, 2.3485999999996177e-05, 2.379100000000217e-05, 2.4151999999999507e-05, 2.3985999999996677e-05, 2.331900000000081e-05, 2.381900000000131e-05, 2.3820000000000785e-05, 2.4040999999995483e-05, 2.3486000000003115e-05, 2.3915999999998827e-05, 2.3693999999997717e-05, 2.381900000000131e-05, 2.4014000000002755e-05, 2.3971999999997107e-05, 2.366699999999805e-05, 2.413899999999941e-05, 2.4000000000003185e-05, 2.366699999999805e-05, 2.413899999999941e-05, 2.383300000000088e-05, 2.3499999999995747e-05, 2.3333999999999855e-05, 2.3250000000002435e-05, 2.3514000000002255e-05, 2.3500000000002685e-05, 2.3486000000003115e-05, 2.3306000000000715e-05, 2.384700000000045e-05, 2.415300000000592e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.750" endtime="20201115 23:02:16.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.738" endtime="20201115 23:02:16.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.763" endtime="20201115 23:02:16.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.771" endtime="20201115 23:02:16.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.767" endtime="20201115 23:02:16.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.758" endtime="20201115 23:02:16.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.239" endtime="20201115 23:02:16.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.235" endtime="20201115 23:02:16.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.233" endtime="20201115 23:02:16.798"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.803" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.825" endtime="20201115 23:02:16.842"></status>
</kw>
<msg timestamp="20201115 23:02:16.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.821" endtime="20201115 23:02:16.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.845" endtime="20201115 23:02:16.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.851" endtime="20201115 23:02:16.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.814" endtime="20201115 23:02:16.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.808" endtime="20201115 23:02:16.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.875" endtime="20201115 23:02:17.227"></status>
</kw>
<msg timestamp="20201115 23:02:17.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045671653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.872" endtime="20201115 23:02:17.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045671653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.236" endtime="20201115 23:02:17.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.255" endtime="20201115 23:02:17.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.864" endtime="20201115 23:02:17.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.860" endtime="20201115 23:02:17.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.274" level="INFO">${RESULT} = [{'time': 0.045702625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097199999999717e-05, 'source_diff': 3.097199999999717e-05}, {'time': 0.045740694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.265" endtime="20201115 23:02:17.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.305" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:17.276" endtime="20201115 23:02:17.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.316" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.313" endtime="20201115 23:02:17.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.321" level="INFO">VALUE: [3.097199999999717e-05, 3.106900000000162e-05, 3.08050000000018e-05, 3.048599999999624e-05, 3.115299999999904e-05, 3.080600000000128e-05, 3.063899999999897e-05, 3.066599999999864e-05, 3.047199999999667e-05, 3.06249999999994e-05, 3.047199999999667e-05, 3.09579999999976e-05, 3.11249999999999e-05, 3.047199999999667e-05, 3.094500000000444e-05, 3.097200000000411e-05, 3.065299999999854e-05, 3.109700000000076e-05, 3.130600000000178e-05, 3.094400000000497e-05, 3.080600000000128e-05, 3.129100000000273e-05, 3.129200000000221e-05, 3.023599999999599e-05, 3.0263999999995128e-05, 3.111100000000033e-05, 3.083300000000094e-05, 3.12500000000035e-05, 3.11249999999999e-05, 3.0458000000004037e-05, 3.08050000000018e-05, 3.0458000000004037e-05, 3.115299999999904e-05, 3.063899999999897e-05, 3.1098000000000237e-05, 3.080600000000128e-05, 3.062500000000634e-05, 3.097200000000411e-05, 3.04579999999971e-05, 3.1138e-05, 3.06249999999994e-05, 3.095900000000401e-05, 3.080600000000128e-05, 3.0304999999994364e-05, 3.0458999999996572e-05, 3.097199999999717e-05, 3.077800000000214e-05, 3.069399999999778e-05, 3.06379999999995e-05, 3.097199999999717e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.318" endtime="20201115 23:02:17.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.307" endtime="20201115 23:02:17.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.330" endtime="20201115 23:02:17.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.338" endtime="20201115 23:02:17.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.334" endtime="20201115 23:02:17.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.325" endtime="20201115 23:02:17.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.804" endtime="20201115 23:02:17.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.800" endtime="20201115 23:02:17.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.799" endtime="20201115 23:02:17.365"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.392" endtime="20201115 23:02:17.408"></status>
</kw>
<msg timestamp="20201115 23:02:17.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.389" endtime="20201115 23:02:17.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.411" endtime="20201115 23:02:17.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.418" endtime="20201115 23:02:17.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.381" endtime="20201115 23:02:17.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.376" endtime="20201115 23:02:17.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.441" endtime="20201115 23:02:17.779"></status>
</kw>
<msg timestamp="20201115 23:02:17.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045552681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045584, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:17.438" endtime="20201115 23:02:17.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045552681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045584, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:17.789" endtime="20201115 23:02:17.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.808" endtime="20201115 23:02:17.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.430" endtime="20201115 23:02:17.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.426" endtime="20201115 23:02:17.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.826" level="INFO">${RESULT} = [{'time': 0.045584, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.131900000000187e-05, 'source_diff': 3.131900000000187e-05}, {'time': 0.045620069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:17.817" endtime="20201115 23:02:17.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.859" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:17.828" endtime="20201115 23:02:17.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.870" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.868" endtime="20201115 23:02:17.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.876" level="INFO">VALUE: [3.131900000000187e-05, 3.048599999999624e-05, 3.0514000000002317e-05, 3.047199999999667e-05, 3.0750000000003e-05, 3.106900000000162e-05, 3.061099999999983e-05, 3.047199999999667e-05, 3.079200000000171e-05, 3.063899999999897e-05, 3.1304999999995364e-05, 3.0291000000001733e-05, 3.116699999999861e-05, 3.130600000000178e-05, 3.082000000000085e-05, 3.094400000000497e-05, 3.073600000000343e-05, 3.130600000000178e-05, 3.077700000000266e-05, 3.06379999999995e-05, 3.0458000000004037e-05, 3.088899999999922e-05, 3.113899999999947e-05, 3.0472000000003607e-05, 3.090299999999879e-05, 3.0305000000001303e-05, 3.082000000000085e-05, 3.081900000000137e-05, 3.07779999999952e-05, 3.11249999999999e-05, 3.097299999999664e-05, 3.0305999999993838e-05, 3.0804999999994864e-05, 3.108300000000119e-05, 3.080600000000128e-05, 3.1318999999994934e-05, 3.063899999999897e-05, 3.113899999999947e-05, 3.0319000000000873e-05, 3.047199999999667e-05, 3.052800000000189e-05, 3.063900000000591e-05, 3.112500000000684e-05, 3.063899999999897e-05, 3.073600000000343e-05, 3.06249999999994e-05, 3.11249999999999e-05, 3.131900000000187e-05, 3.061099999999983e-05, 3.0500000000002747e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.872" endtime="20201115 23:02:17.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.861" endtime="20201115 23:02:17.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.885" endtime="20201115 23:02:17.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.893" endtime="20201115 23:02:17.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.888" endtime="20201115 23:02:17.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.880" endtime="20201115 23:02:17.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.372" endtime="20201115 23:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.368" endtime="20201115 23:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.366" endtime="20201115 23:02:17.919"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.946" endtime="20201115 23:02:17.962"></status>
</kw>
<msg timestamp="20201115 23:02:17.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.943" endtime="20201115 23:02:17.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.965" endtime="20201115 23:02:17.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.972" endtime="20201115 23:02:17.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.936" endtime="20201115 23:02:17.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.930" endtime="20201115 23:02:17.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.996" endtime="20201115 23:02:18.335"></status>
</kw>
<msg timestamp="20201115 23:02:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045274222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04530525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:17.992" endtime="20201115 23:02:18.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045274222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04530525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:18.345" endtime="20201115 23:02:18.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.363" endtime="20201115 23:02:18.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.985" endtime="20201115 23:02:18.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.980" endtime="20201115 23:02:18.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.383" level="INFO">${RESULT} = [{'time': 0.04530525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.102799999999545e-05, 'source_diff': 3.102799999999545e-05}, {'time': 0.045344264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:18.374" endtime="20201115 23:02:18.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.414" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:18.385" endtime="20201115 23:02:18.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.425" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.422" endtime="20201115 23:02:18.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.430" level="INFO">VALUE: [3.102799999999545e-05, 3.097200000000411e-05, 3.061099999999983e-05, 3.069499999999725e-05, 3.095800000000454e-05, 3.094399999999803e-05, 3.070899999999682e-05, 3.0458000000004037e-05, 3.065200000000601e-05, 3.0292000000001207e-05, 3.0306000000000777e-05, 3.0306000000000777e-05, 3.080600000000128e-05, 3.137500000000015e-05, 3.0305000000001303e-05, 3.047199999999667e-05, 3.082000000000085e-05, 3.098600000000368e-05, 3.0582999999993754e-05, 3.0291999999994268e-05, 3.045900000000351e-05, 3.12779999999957e-05, 3.094399999999803e-05, 3.067999999999821e-05, 3.1138e-05, 3.113899999999947e-05, 3.065200000000601e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.081900000000137e-05, 3.101400000000282e-05, 3.0818999999994434e-05, 3.111100000000033e-05, 3.097200000000411e-05, 3.06249999999994e-05, 3.04579999999971e-05, 3.11249999999999e-05, 3.06249999999994e-05, 3.113899999999947e-05, 3.0276999999995224e-05, 3.074999999999606e-05, 3.065199999999907e-05, 3.082000000000085e-05, 3.113899999999947e-05, 3.129100000000273e-05, 3.082000000000085e-05, 3.09579999999976e-05, 3.065299999999854e-05, 3.129200000000221e-05, 3.077800000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.427" endtime="20201115 23:02:18.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.416" endtime="20201115 23:02:18.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.439" endtime="20201115 23:02:18.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.447" endtime="20201115 23:02:18.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.443" endtime="20201115 23:02:18.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.435" endtime="20201115 23:02:18.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.926" endtime="20201115 23:02:18.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.922" endtime="20201115 23:02:18.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.920" endtime="20201115 23:02:18.474"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.501" endtime="20201115 23:02:18.517"></status>
</kw>
<msg timestamp="20201115 23:02:18.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.498" endtime="20201115 23:02:18.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.521" endtime="20201115 23:02:18.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.528" endtime="20201115 23:02:18.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.491" endtime="20201115 23:02:18.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.485" endtime="20201115 23:02:18.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.551" endtime="20201115 23:02:18.901"></status>
</kw>
<msg timestamp="20201115 23:02:18.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045910444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045941417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.548" endtime="20201115 23:02:18.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045910444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045941417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.911" endtime="20201115 23:02:18.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.931" endtime="20201115 23:02:18.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.541" endtime="20201115 23:02:18.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.536" endtime="20201115 23:02:18.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.949" level="INFO">${RESULT} = [{'time': 0.045941417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097299999999664e-05, 'source_diff': 3.097299999999664e-05}, {'time': 0.045979611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.939" endtime="20201115 23:02:18.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.980" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:18.951" endtime="20201115 23:02:18.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.991" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.989" endtime="20201115 23:02:18.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.997" level="INFO">VALUE: [3.097299999999664e-05, 3.065299999999854e-05, 3.0306000000000777e-05, 3.0486000000003177e-05, 3.09449999999975e-05, 3.080600000000128e-05, 3.082000000000085e-05, 3.069399999999778e-05, 3.065299999999854e-05, 3.115299999999904e-05, 3.065299999999854e-05, 3.04579999999971e-05, 3.08050000000018e-05, 3.044500000000394e-05, 3.0333000000000443e-05, 3.101400000000282e-05, 3.06379999999995e-05, 3.080600000000128e-05, 3.04579999999971e-05, 3.077700000000266e-05, 3.0320000000000347e-05, 3.081999999999391e-05, 3.136100000000058e-05, 3.082000000000085e-05, 3.109700000000076e-05, 3.05700000000006e-05, 3.04579999999971e-05, 3.0277000000002163e-05, 3.0458000000004037e-05, 3.077700000000266e-05, 3.079200000000171e-05, 3.111100000000033e-05, 3.044399999999753e-05, 3.059700000000026e-05, 3.115299999999904e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.113899999999947e-05, 3.0458000000004037e-05, 3.130600000000178e-05, 3.047199999999667e-05, 3.098600000000368e-05, 3.0292000000001207e-05, 3.113899999999947e-05, 3.0306000000000777e-05, 3.079100000000223e-05, 3.069499999999725e-05, 3.06249999999994e-05, 3.095899999999707e-05, 3.079200000000171e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.993" endtime="20201115 23:02:18.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.981" endtime="20201115 23:02:18.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.006" endtime="20201115 23:02:19.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.015" endtime="20201115 23:02:19.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.010" endtime="20201115 23:02:19.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.001" endtime="20201115 23:02:19.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.481" endtime="20201115 23:02:19.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.477" endtime="20201115 23:02:19.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.475" endtime="20201115 23:02:19.042"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.070" endtime="20201115 23:02:19.090"></status>
</kw>
<msg timestamp="20201115 23:02:19.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.067" endtime="20201115 23:02:19.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.094" endtime="20201115 23:02:19.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.100" endtime="20201115 23:02:19.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.058" endtime="20201115 23:02:19.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.052" endtime="20201115 23:02:19.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.125" endtime="20201115 23:02:19.460"></status>
</kw>
<msg timestamp="20201115 23:02:19.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046918264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.122" endtime="20201115 23:02:19.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046918264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.469" endtime="20201115 23:02:19.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.488" endtime="20201115 23:02:19.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.114" endtime="20201115 23:02:19.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.109" endtime="20201115 23:02:19.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.508" level="INFO">${RESULT} = [{'time': 0.046918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.066699999999811e-05, 'source_diff': 3.066699999999811e-05}, {'time': 0.046960444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.499" endtime="20201115 23:02:19.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.539" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:19.510" endtime="20201115 23:02:19.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.549" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.547" endtime="20201115 23:02:19.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.555" level="INFO">VALUE: [3.066699999999811e-05, 3.065199999999907e-05, 3.0320000000000347e-05, 3.0277000000002163e-05, 3.047199999999667e-05, 3.080600000000128e-05, 3.0472000000003607e-05, 3.0305999999993838e-05, 3.0305000000001303e-05, 3.079200000000171e-05, 3.08050000000018e-05, 3.0458000000004037e-05, 3.08050000000018e-05, 3.066599999999864e-05, 3.06249999999994e-05, 3.134700000000101e-05, 3.069400000000472e-05, 3.0319000000000873e-05, 3.116699999999861e-05, 3.04579999999971e-05, 3.038900000000566e-05, 3.0374999999999153e-05, 3.047199999999667e-05, 3.113899999999947e-05, 3.099999999999631e-05, 3.0292000000001207e-05, 3.079200000000171e-05, 3.0319000000000873e-05, 3.0292000000001207e-05, 3.045900000000351e-05, 3.061099999999983e-05, 3.094400000000497e-05, 3.048700000000265e-05, 3.065199999999907e-05, 3.06249999999994e-05, 3.082000000000085e-05, 3.08050000000018e-05, 3.045900000000351e-05, 3.088899999999922e-05, 3.098600000000368e-05, 3.063900000000591e-05, 3.08050000000018e-05, 3.138900000000666e-05, 3.11249999999999e-05, 3.079100000000223e-05, 3.094399999999803e-05, 3.101400000000282e-05, 3.047199999999667e-05, 3.056900000000112e-05, 3.04579999999971e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.552" endtime="20201115 23:02:19.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.540" endtime="20201115 23:02:19.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.564" endtime="20201115 23:02:19.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.572" endtime="20201115 23:02:19.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.568" endtime="20201115 23:02:19.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.559" endtime="20201115 23:02:19.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.049" endtime="20201115 23:02:19.603"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.044" endtime="20201115 23:02:19.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.043" endtime="20201115 23:02:19.604"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.609" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.631" endtime="20201115 23:02:19.647"></status>
</kw>
<msg timestamp="20201115 23:02:19.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.628" endtime="20201115 23:02:19.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.650" endtime="20201115 23:02:19.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.656" endtime="20201115 23:02:19.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.621" endtime="20201115 23:02:19.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.615" endtime="20201115 23:02:19.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.680" endtime="20201115 23:02:20.017"></status>
</kw>
<msg timestamp="20201115 23:02:20.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050855417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.676" endtime="20201115 23:02:20.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050825139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050855417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.027" endtime="20201115 23:02:20.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.046" endtime="20201115 23:02:20.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.669" endtime="20201115 23:02:20.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.664" endtime="20201115 23:02:20.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.063" level="INFO">${RESULT} = [{'time': 0.050855417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0278000000001637e-05, 'source_diff': 3.0278000000001637e-05}, {'time': 0.050895569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:20.054" endtime="20201115 23:02:20.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.096" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:20.065" endtime="20201115 23:02:20.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.107" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.105" endtime="20201115 23:02:20.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.113" level="INFO">VALUE: [3.0278000000001637e-05, 3.08050000000018e-05, 3.11249999999999e-05, 3.0222000000003357e-05, 3.063899999999897e-05, 3.0291999999994268e-05, 3.094399999999803e-05, 3.04579999999971e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.079199999999477e-05, 3.097199999999717e-05, 3.095800000000454e-05, 3.061099999999983e-05, 3.115299999999904e-05, 3.0347000000000013e-05, 3.08050000000018e-05, 3.081900000000137e-05, 3.0472000000003607e-05, 3.0790999999995294e-05, 3.079199999999477e-05, 3.0458000000004037e-05, 3.097200000000411e-05, 3.059700000000026e-05, 3.097200000000411e-05, 3.095800000000454e-05, 3.04579999999971e-05, 3.111100000000033e-05, 3.0444999999997002e-05, 3.061099999999983e-05, 3.081900000000137e-05, 3.042999999999796e-05, 3.08050000000018e-05, 3.06249999999994e-05, 3.044500000000394e-05, 3.0305000000001303e-05, 3.06249999999994e-05, 3.0486000000003177e-05, 3.09449999999975e-05, 3.097200000000411e-05, 3.113899999999947e-05, 3.047300000000308e-05, 3.077800000000214e-05, 3.081900000000137e-05, 3.063899999999897e-05, 3.079200000000171e-05, 3.0472999999996142e-05, 3.080600000000128e-05, 3.045900000000351e-05, 3.113899999999947e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.110" endtime="20201115 23:02:20.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.098" endtime="20201115 23:02:20.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.123" endtime="20201115 23:02:20.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.132" endtime="20201115 23:02:20.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.128" endtime="20201115 23:02:20.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.119" endtime="20201115 23:02:20.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.611" endtime="20201115 23:02:20.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.607" endtime="20201115 23:02:20.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.605" endtime="20201115 23:02:20.159"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.187" endtime="20201115 23:02:20.203"></status>
</kw>
<msg timestamp="20201115 23:02:20.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.183" endtime="20201115 23:02:20.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.207" endtime="20201115 23:02:20.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.213" endtime="20201115 23:02:20.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.176" endtime="20201115 23:02:20.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.170" endtime="20201115 23:02:20.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.237" endtime="20201115 23:02:20.582"></status>
</kw>
<msg timestamp="20201115 23:02:20.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045714208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.233" endtime="20201115 23:02:20.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045683917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045714208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.592" endtime="20201115 23:02:20.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.610" endtime="20201115 23:02:20.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.226" endtime="20201115 23:02:20.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.221" endtime="20201115 23:02:20.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.630" level="INFO">${RESULT} = [{'time': 0.045714208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0291000000001733e-05, 'source_diff': 3.0291000000001733e-05}, {'time': 0.045750264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:20.620" endtime="20201115 23:02:20.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.660" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:20.632" endtime="20201115 23:02:20.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.670" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.668" endtime="20201115 23:02:20.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.677" level="INFO">VALUE: [3.0291000000001733e-05, 3.04579999999971e-05, 3.097199999999717e-05, 3.0291000000001733e-05, 3.115199999999957e-05, 3.044399999999753e-05, 3.0444999999997002e-05, 3.094400000000497e-05, 3.0305000000001303e-05, 3.061099999999983e-05, 3.099999999999631e-05, 3.0388999999998723e-05, 3.0458999999996572e-05, 3.116700000000555e-05, 3.090299999999879e-05, 3.095800000000454e-05, 3.092999999999846e-05, 3.0292000000001207e-05, 3.063899999999897e-05, 3.11249999999999e-05, 3.0472000000003607e-05, 3.0306000000000777e-05, 3.0790999999995294e-05, 3.0444999999997002e-05, 3.080599999999434e-05, 3.06249999999994e-05, 3.080600000000128e-05, 3.081900000000137e-05, 3.079100000000223e-05, 3.0804999999994864e-05, 3.11249999999999e-05, 3.080600000000128e-05, 3.0458999999996572e-05, 3.04579999999971e-05, 3.061099999999983e-05, 3.079100000000223e-05, 3.111100000000033e-05, 3.0306000000000777e-05, 3.063899999999897e-05, 3.047199999999667e-05, 3.11249999999999e-05, 3.0278000000001637e-05, 3.063899999999897e-05, 3.11249999999999e-05, 3.079100000000223e-05, 3.081900000000137e-05, 3.06249999999994e-05, 3.098600000000368e-05, 3.080600000000128e-05, 3.0291000000001733e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.673" endtime="20201115 23:02:20.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.661" endtime="20201115 23:02:20.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.686" endtime="20201115 23:02:20.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.694" endtime="20201115 23:02:20.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.689" endtime="20201115 23:02:20.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.681" endtime="20201115 23:02:20.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.166" endtime="20201115 23:02:20.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.162" endtime="20201115 23:02:20.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.160" endtime="20201115 23:02:20.720"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.726" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.748" endtime="20201115 23:02:20.765"></status>
</kw>
<msg timestamp="20201115 23:02:20.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.744" endtime="20201115 23:02:20.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.768" endtime="20201115 23:02:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.774" endtime="20201115 23:02:20.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.737" endtime="20201115 23:02:20.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.731" endtime="20201115 23:02:20.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.798" endtime="20201115 23:02:21.143"></status>
</kw>
<msg timestamp="20201115 23:02:21.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045652681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045690097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.794" endtime="20201115 23:02:21.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045652681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045690097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.152" endtime="20201115 23:02:21.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.171" endtime="20201115 23:02:21.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.787" endtime="20201115 23:02:21.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.783" endtime="20201115 23:02:21.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.190" level="INFO">${RESULT} = [{'time': 0.045690097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.741599999999845e-05, 'source_diff': 3.741599999999845e-05}, {'time': 0.045738222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.181" endtime="20201115 23:02:21.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.221" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:21.192" endtime="20201115 23:02:21.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.232" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.230" endtime="20201115 23:02:21.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.237" level="INFO">VALUE: [3.741599999999845e-05, 3.7902999999998854e-05, 3.725000000000256e-05, 3.794399999999809e-05, 3.793100000000493e-05, 3.7624999999999464e-05, 3.7916999999998424e-05, 3.8111000000000395e-05, 3.774999999999612e-05, 3.77780000000022e-05, 3.7430999999997494e-05, 3.8082999999994316e-05, 3.776400000000263e-05, 3.793100000000493e-05, 3.7540999999995106e-05, 3.745900000000357e-05, 3.77780000000022e-05, 3.7790999999995356e-05, 3.7624999999999464e-05, 3.8096999999993886e-05, 3.827799999999576e-05, 3.7262999999995716e-05, 3.8138999999999534e-05, 3.7708999999996884e-05, 3.8097000000000825e-05, 3.7930999999997994e-05, 3.791700000000536e-05, 3.8276999999996286e-05, 3.794399999999809e-05, 3.774999999999612e-05, 3.801399999999594e-05, 3.7597000000000325e-05, 3.773600000000349e-05, 3.741599999999845e-05, 3.7610999999999895e-05, 3.8276999999996286e-05, 3.742999999999802e-05, 3.7597000000000325e-05, 3.8083000000001255e-05, 3.793100000000493e-05, 3.7819000000001435e-05, 3.741599999999845e-05, 3.726400000000213e-05, 3.744399999999759e-05, 3.7930999999997994e-05, 3.7916999999998424e-05, 3.7790999999995356e-05, 3.7624999999999464e-05, 3.7290999999994856e-05, 3.82780000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.234" endtime="20201115 23:02:21.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.223" endtime="20201115 23:02:21.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.246" endtime="20201115 23:02:21.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.255" endtime="20201115 23:02:21.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.250" endtime="20201115 23:02:21.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.242" endtime="20201115 23:02:21.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.727" endtime="20201115 23:02:21.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.723" endtime="20201115 23:02:21.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.721" endtime="20201115 23:02:21.281"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.308" endtime="20201115 23:02:21.324"></status>
</kw>
<msg timestamp="20201115 23:02:21.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.305" endtime="20201115 23:02:21.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.327" endtime="20201115 23:02:21.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.333" endtime="20201115 23:02:21.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.298" endtime="20201115 23:02:21.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.292" endtime="20201115 23:02:21.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.357" endtime="20201115 23:02:21.691"></status>
</kw>
<msg timestamp="20201115 23:02:21.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044920403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044958014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.353" endtime="20201115 23:02:21.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044920403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044958014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.700" endtime="20201115 23:02:21.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.719" endtime="20201115 23:02:21.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.346" endtime="20201115 23:02:21.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.341" endtime="20201115 23:02:21.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.739" level="INFO">${RESULT} = [{'time': 0.044958014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7610999999999895e-05, 'source_diff': 3.7610999999999895e-05}, {'time': 0.045007194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.729" endtime="20201115 23:02:21.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.769" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:21.741" endtime="20201115 23:02:21.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.780" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.777" endtime="20201115 23:02:21.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.785" level="INFO">VALUE: [3.7610999999999895e-05, 3.7624999999999464e-05, 3.776400000000263e-05, 3.8096999999993886e-05, 3.7402999999998354e-05, 3.777799999999526e-05, 3.829200000000227e-05, 3.8111000000000395e-05, 3.8319000000001935e-05, 3.7597000000000325e-05, 3.745799999999716e-05, 3.777799999999526e-05, 3.7597000000000325e-05, 3.779199999999483e-05, 3.7847000000000575e-05, 3.7944999999997564e-05, 3.776400000000263e-05, 3.776400000000263e-05, 3.779199999999483e-05, 3.804200000000202e-05, 3.791599999999895e-05, 3.792999999999852e-05, 3.8083000000001255e-05, 3.779199999999483e-05, 3.742999999999802e-05, 3.77780000000022e-05, 3.7610999999999895e-05, 3.7583000000000755e-05, 3.7569000000001185e-05, 3.7416999999997924e-05, 3.7916999999998424e-05, 3.77780000000022e-05, 3.827799999999576e-05, 3.7930999999997994e-05, 3.747200000000367e-05, 3.726400000000213e-05, 3.7930999999997994e-05, 3.7776999999995786e-05, 3.7944999999997564e-05, 3.777799999999526e-05, 3.747199999999673e-05, 3.8083000000001255e-05, 3.765200000000607e-05, 3.779200000000177e-05, 3.783400000000048e-05, 3.743100000000443e-05, 3.8124999999999964e-05, 3.793000000000546e-05, 3.791599999999895e-05, 3.7638999999999034e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.782" endtime="20201115 23:02:21.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.771" endtime="20201115 23:02:21.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.794" endtime="20201115 23:02:21.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.802" endtime="20201115 23:02:21.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.798" endtime="20201115 23:02:21.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.790" endtime="20201115 23:02:21.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.288" endtime="20201115 23:02:21.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.284" endtime="20201115 23:02:21.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.282" endtime="20201115 23:02:21.829"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.856" endtime="20201115 23:02:21.871"></status>
</kw>
<msg timestamp="20201115 23:02:21.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.852" endtime="20201115 23:02:21.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.875" endtime="20201115 23:02:21.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.881" endtime="20201115 23:02:21.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.845" endtime="20201115 23:02:21.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.839" endtime="20201115 23:02:21.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.905" endtime="20201115 23:02:22.245"></status>
</kw>
<msg timestamp="20201115 23:02:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044922708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044960347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.901" endtime="20201115 23:02:22.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044922708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044960347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.255" endtime="20201115 23:02:22.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.273" endtime="20201115 23:02:22.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.894" endtime="20201115 23:02:22.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.889" endtime="20201115 23:02:22.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.291" level="INFO">${RESULT} = [{'time': 0.044960347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7638999999999034e-05, 'source_diff': 3.7638999999999034e-05}, {'time': 0.045003375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:22.282" endtime="20201115 23:02:22.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.324" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:22.293" endtime="20201115 23:02:22.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.335" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.332" endtime="20201115 23:02:22.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.340" level="INFO">VALUE: [3.7638999999999034e-05, 3.777799999999526e-05, 3.792999999999852e-05, 3.7597000000000325e-05, 3.8110999999993456e-05, 3.748600000000324e-05, 3.8111000000000395e-05, 3.738900000000572e-05, 3.7944999999997564e-05, 3.745799999999716e-05, 3.794400000000503e-05, 3.783400000000048e-05, 3.776400000000263e-05, 3.7445000000004e-05, 3.758400000000023e-05, 3.776400000000263e-05, 3.720900000000332e-05, 3.826400000000313e-05, 3.794399999999809e-05, 3.72780000000017e-05, 3.7888999999999284e-05, 3.7790999999995356e-05, 3.763900000000597e-05, 3.774999999999612e-05, 3.779200000000177e-05, 3.8276999999996286e-05, 3.794400000000503e-05, 3.826399999999619e-05, 3.793100000000493e-05, 3.8097000000000825e-05, 3.7776999999995786e-05, 3.8055000000002115e-05, 3.8291000000002795e-05, 3.8111000000000395e-05, 3.8138999999999534e-05, 3.741700000000486e-05, 3.7416999999997924e-05, 3.745799999999716e-05, 3.82780000000027e-05, 3.820900000000432e-05, 3.792999999999852e-05, 3.7791000000002295e-05, 3.8096999999993886e-05, 3.7916999999998424e-05, 3.7958999999997134e-05, 3.77780000000022e-05, 3.7958999999997134e-05, 3.768100000000468e-05, 3.8055000000002115e-05, 3.8138999999999534e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.337" endtime="20201115 23:02:22.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.326" endtime="20201115 23:02:22.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.349" endtime="20201115 23:02:22.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.357" endtime="20201115 23:02:22.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.353" endtime="20201115 23:02:22.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.344" endtime="20201115 23:02:22.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.836" endtime="20201115 23:02:22.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.832" endtime="20201115 23:02:22.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.830" endtime="20201115 23:02:22.383"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.410" endtime="20201115 23:02:22.426"></status>
</kw>
<msg timestamp="20201115 23:02:22.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.407" endtime="20201115 23:02:22.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.429" endtime="20201115 23:02:22.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.436" endtime="20201115 23:02:22.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.400" endtime="20201115 23:02:22.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.394" endtime="20201115 23:02:22.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.460" endtime="20201115 23:02:22.795"></status>
</kw>
<msg timestamp="20201115 23:02:22.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045086194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.456" endtime="20201115 23:02:22.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045086194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.804" endtime="20201115 23:02:22.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.823" endtime="20201115 23:02:22.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.449" endtime="20201115 23:02:22.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.445" endtime="20201115 23:02:22.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.841" level="INFO">${RESULT} = [{'time': 0.045086194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.816600000000614e-05, 'source_diff': 3.816600000000614e-05}, {'time': 0.045131403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.833" endtime="20201115 23:02:22.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.872" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:22.844" endtime="20201115 23:02:22.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.882" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.880" endtime="20201115 23:02:22.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.888" level="INFO">VALUE: [3.816600000000614e-05, 3.779200000000177e-05, 3.7610999999999895e-05, 3.794400000000503e-05, 3.745799999999716e-05, 3.7804999999994926e-05, 3.779200000000177e-05, 3.799999999999637e-05, 3.7388999999998784e-05, 3.726400000000213e-05, 3.7638999999999034e-05, 3.741599999999845e-05, 3.7583000000000755e-05, 3.77780000000022e-05, 3.7638999999999034e-05, 3.744399999999759e-05, 3.7291000000001795e-05, 3.747300000000314e-05, 3.8111000000000395e-05, 3.776400000000263e-05, 3.726400000000213e-05, 3.761200000000631e-05, 3.779200000000177e-05, 3.825000000000356e-05, 3.745799999999716e-05, 3.745799999999716e-05, 3.740300000000529e-05, 3.8124999999999964e-05, 3.7583000000000755e-05, 3.8111000000000395e-05, 3.80980000000003e-05, 3.745799999999716e-05, 3.7624999999999464e-05, 3.7610999999999895e-05, 3.7776999999995786e-05, 3.80980000000003e-05, 3.744399999999759e-05, 3.7944999999997564e-05, 3.744399999999759e-05, 3.8027000000002975e-05, 3.8138999999999534e-05, 3.8124999999999964e-05, 3.794399999999809e-05, 3.744399999999759e-05, 3.7930999999997994e-05, 3.732000000000041e-05, 3.7444999999997064e-05, 3.7610999999999895e-05, 3.740300000000529e-05, 3.777799999999526e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.885" endtime="20201115 23:02:22.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.874" endtime="20201115 23:02:22.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.897" endtime="20201115 23:02:22.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.905" endtime="20201115 23:02:22.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.901" endtime="20201115 23:02:22.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.892" endtime="20201115 23:02:22.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.390" endtime="20201115 23:02:22.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.386" endtime="20201115 23:02:22.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.384" endtime="20201115 23:02:22.931"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.959" endtime="20201115 23:02:22.974"></status>
</kw>
<msg timestamp="20201115 23:02:22.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.956" endtime="20201115 23:02:22.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.978" endtime="20201115 23:02:22.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.984" endtime="20201115 23:02:22.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.948" endtime="20201115 23:02:22.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.942" endtime="20201115 23:02:22.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.008" endtime="20201115 23:02:23.343"></status>
</kw>
<msg timestamp="20201115 23:02:23.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045582861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045620292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.005" endtime="20201115 23:02:23.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045582861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045620292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.352" endtime="20201115 23:02:23.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.371" endtime="20201115 23:02:23.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.997" endtime="20201115 23:02:23.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.992" endtime="20201115 23:02:23.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.389" level="INFO">${RESULT} = [{'time': 0.045620292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7430999999997494e-05, 'source_diff': 3.7430999999997494e-05}, {'time': 0.045668389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.379" endtime="20201115 23:02:23.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.419" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:23.391" endtime="20201115 23:02:23.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.430" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.428" endtime="20201115 23:02:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.435" level="INFO">VALUE: [3.7430999999997494e-05, 3.7596999999993386e-05, 3.7318999999993996e-05, 3.743000000000496e-05, 3.7736999999996024e-05, 3.743000000000496e-05, 3.742999999999802e-05, 3.7624999999999464e-05, 3.744400000000453e-05, 3.77780000000022e-05, 3.826399999999619e-05, 3.724999999999562e-05, 3.7305000000001365e-05, 3.80980000000003e-05, 3.7930999999997994e-05, 3.8097000000000825e-05, 3.8097000000000825e-05, 3.8055000000002115e-05, 3.7277000000002225e-05, 3.7388999999998784e-05, 3.7416999999997924e-05, 3.8111000000000395e-05, 3.7402999999998354e-05, 3.7944999999997564e-05, 3.8111000000000395e-05, 3.7430999999997494e-05, 3.7610999999999895e-05, 3.794399999999809e-05, 3.744399999999759e-05, 3.776400000000263e-05, 3.7569000000001185e-05, 3.8097000000000825e-05, 3.7263000000002655e-05, 3.8097000000000825e-05, 3.776400000000263e-05, 3.76250000000064e-05, 3.729200000000127e-05, 3.825000000000356e-05, 3.726400000000213e-05, 3.741599999999845e-05, 3.741599999999845e-05, 3.7416999999997924e-05, 3.7416999999997924e-05, 3.742999999999802e-05, 3.7610999999999895e-05, 3.80980000000003e-05, 3.744399999999759e-05, 3.8124999999999964e-05, 3.8277000000003225e-05, 3.8097000000000825e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.432" endtime="20201115 23:02:23.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.421" endtime="20201115 23:02:23.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.444" endtime="20201115 23:02:23.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.452" endtime="20201115 23:02:23.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.448" endtime="20201115 23:02:23.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.440" endtime="20201115 23:02:23.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.938" endtime="20201115 23:02:23.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.934" endtime="20201115 23:02:23.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.932" endtime="20201115 23:02:23.479"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.506" endtime="20201115 23:02:23.523"></status>
</kw>
<msg timestamp="20201115 23:02:23.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.503" endtime="20201115 23:02:23.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.527" endtime="20201115 23:02:23.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.533" endtime="20201115 23:02:23.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.496" endtime="20201115 23:02:23.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.490" endtime="20201115 23:02:23.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.556" endtime="20201115 23:02:23.905"></status>
</kw>
<msg timestamp="20201115 23:02:23.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045015278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045052875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.553" endtime="20201115 23:02:23.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045015278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045052875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.914" endtime="20201115 23:02:23.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.932" endtime="20201115 23:02:23.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.546" endtime="20201115 23:02:23.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.541" endtime="20201115 23:02:23.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.951" level="INFO">${RESULT} = [{'time': 0.045052875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7597000000000325e-05, 'source_diff': 3.7597000000000325e-05}, {'time': 0.045096042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.942" endtime="20201115 23:02:23.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:23.953" endtime="20201115 23:02:23.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.992" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.990" endtime="20201115 23:02:23.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.998" level="INFO">VALUE: [3.7597000000000325e-05, 3.77780000000022e-05, 3.745900000000357e-05, 3.797200000000417e-05, 3.729200000000127e-05, 3.7805000000001865e-05, 3.7291000000001795e-05, 3.7680999999997744e-05, 3.827799999999576e-05, 3.795799999999766e-05, 3.744399999999759e-05, 3.8347000000001075e-05, 3.8111000000000395e-05, 3.7638999999999034e-05, 3.7847000000000575e-05, 3.7944999999997564e-05, 3.7624999999999464e-05, 3.794399999999809e-05, 3.8096999999993886e-05, 3.82780000000027e-05, 3.82780000000027e-05, 3.800000000000331e-05, 3.744399999999759e-05, 3.7430999999997494e-05, 3.779200000000177e-05, 3.779200000000177e-05, 3.8124999999999964e-05, 3.7444999999997064e-05, 3.779200000000177e-05, 3.7638999999999034e-05, 3.7819000000001435e-05, 3.761199999999937e-05, 3.779200000000177e-05, 3.755600000000109e-05, 3.754200000000152e-05, 3.8110999999993456e-05, 3.742999999999802e-05, 3.8124999999999964e-05, 3.744400000000453e-05, 3.744399999999759e-05, 3.795799999999766e-05, 3.8347000000001075e-05, 3.779200000000177e-05, 3.7972999999996704e-05, 3.8152999999999104e-05, 3.7360999999999644e-05, 3.7610999999999895e-05, 3.7610999999999895e-05, 3.7944999999997564e-05, 3.77780000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.995" endtime="20201115 23:02:24.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.983" endtime="20201115 23:02:24.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.008" endtime="20201115 23:02:24.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.016" endtime="20201115 23:02:24.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.012" endtime="20201115 23:02:24.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.003" endtime="20201115 23:02:24.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.486" endtime="20201115 23:02:24.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.482" endtime="20201115 23:02:24.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.480" endtime="20201115 23:02:24.043"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.048" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.069" endtime="20201115 23:02:24.086"></status>
</kw>
<msg timestamp="20201115 23:02:24.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.066" endtime="20201115 23:02:24.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.090" endtime="20201115 23:02:24.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.096" endtime="20201115 23:02:24.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.059" endtime="20201115 23:02:24.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.053" endtime="20201115 23:02:24.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.119" endtime="20201115 23:02:24.468"></status>
</kw>
<msg timestamp="20201115 23:02:24.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044944319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044982611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.116" endtime="20201115 23:02:24.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044944319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044982611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.478" endtime="20201115 23:02:24.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.496" endtime="20201115 23:02:24.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.109" endtime="20201115 23:02:24.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.104" endtime="20201115 23:02:24.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.514" level="INFO">${RESULT} = [{'time': 0.044982611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.829199999999533e-05, 'source_diff': 3.829199999999533e-05}, {'time': 0.045025569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.505" endtime="20201115 23:02:24.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.547" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:24.516" endtime="20201115 23:02:24.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.557" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.555" endtime="20201115 23:02:24.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.564" level="INFO">VALUE: [3.829199999999533e-05, 3.7263000000002655e-05, 3.761199999999937e-05, 3.8124999999999964e-05, 3.741600000000539e-05, 3.8124999999999964e-05, 3.74580000000041e-05, 3.7624999999999464e-05, 3.7805000000001865e-05, 3.77780000000022e-05, 3.8124999999999964e-05, 3.8111000000000395e-05, 3.8111000000000395e-05, 3.7610999999999895e-05, 3.782000000000091e-05, 3.775000000000306e-05, 3.794399999999809e-05, 3.7624999999999464e-05, 3.826400000000313e-05, 3.77780000000022e-05, 3.8111000000000395e-05, 3.8138999999999534e-05, 3.759800000000674e-05, 3.7444999999997064e-05, 3.744399999999759e-05, 3.726400000000213e-05, 3.76250000000064e-05, 3.823600000000399e-05, 3.815199999999963e-05, 3.8111000000000395e-05, 3.7930999999997994e-05, 3.75979999999998e-05, 3.76380000000065e-05, 3.744400000000453e-05, 3.8097000000000825e-05, 3.8096999999993886e-05, 3.8124999999999964e-05, 3.826399999999619e-05, 3.7624999999999464e-05, 3.7874999999999714e-05, 3.8124999999999964e-05, 3.744400000000453e-05, 3.726400000000213e-05, 3.7624999999999464e-05, 3.8138999999999534e-05, 3.779200000000177e-05, 3.797199999999723e-05, 3.815300000000604e-05, 3.829200000000227e-05, 3.8138999999999534e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.560" endtime="20201115 23:02:24.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.548" endtime="20201115 23:02:24.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.572" endtime="20201115 23:02:24.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.580" endtime="20201115 23:02:24.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.576" endtime="20201115 23:02:24.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.568" endtime="20201115 23:02:24.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.049" endtime="20201115 23:02:24.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.045" endtime="20201115 23:02:24.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.044" endtime="20201115 23:02:24.607"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.612" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.634" endtime="20201115 23:02:24.651"></status>
</kw>
<msg timestamp="20201115 23:02:24.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.631" endtime="20201115 23:02:24.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.655" endtime="20201115 23:02:24.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.661" endtime="20201115 23:02:24.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.623" endtime="20201115 23:02:24.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.618" endtime="20201115 23:02:24.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.684" endtime="20201115 23:02:25.029"></status>
</kw>
<msg timestamp="20201115 23:02:25.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045277736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045323, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:24.681" endtime="20201115 23:02:25.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045277736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045323, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:25.038" endtime="20201115 23:02:25.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.057" endtime="20201115 23:02:25.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.674" endtime="20201115 23:02:25.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.669" endtime="20201115 23:02:25.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.077" level="INFO">${RESULT} = [{'time': 0.045323, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.526400000000319e-05, 'source_diff': 4.526400000000319e-05}, {'time': 0.045375153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:25.068" endtime="20201115 23:02:25.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:25.080" endtime="20201115 23:02:25.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.119" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.117" endtime="20201115 23:02:25.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.125" level="INFO">VALUE: [4.526400000000319e-05, 4.5111000000000456e-05, 4.4417000000004925e-05, 4.440199999999894e-05, 4.476400000000269e-05, 4.494400000000509e-05, 4.4610999999999956e-05, 4.4624999999999526e-05, 4.475000000000312e-05, 4.491599999999901e-05, 4.4916999999998486e-05, 4.455600000000115e-05, 4.473599999999661e-05, 4.4917000000005425e-05, 4.526399999999625e-05, 4.4374999999999276e-05, 4.472199999999704e-05, 4.4902999999998916e-05, 4.4737000000003024e-05, 4.5097000000000886e-05, 4.476399999999575e-05, 4.505599999999471e-05, 4.458400000000029e-05, 4.4916999999998486e-05, 4.505600000000165e-05, 4.5111000000000456e-05, 4.526400000000319e-05, 4.4569000000001247e-05, 4.477800000000226e-05, 4.526399999999625e-05, 4.507000000000122e-05, 4.457000000000072e-05, 4.457000000000072e-05, 4.4583000000000816e-05, 4.529199999999539e-05, 4.5083000000001316e-05, 4.459699999999345e-05, 4.4431000000004495e-05, 4.4917000000005425e-05, 4.526400000000319e-05, 4.4347000000000136e-05, 4.426399999999525e-05, 4.4583000000000816e-05, 4.4916999999998486e-05, 4.526400000000319e-05, 4.527799999999582e-05, 4.4930999999998056e-05, 4.4445000000004065e-05, 4.4874999999999776e-05, 4.4569000000001247e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.121" endtime="20201115 23:02:25.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.110" endtime="20201115 23:02:25.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.134" endtime="20201115 23:02:25.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.142" endtime="20201115 23:02:25.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.138" endtime="20201115 23:02:25.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.129" endtime="20201115 23:02:25.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.614" endtime="20201115 23:02:25.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.610" endtime="20201115 23:02:25.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.608" endtime="20201115 23:02:25.169"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.174" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.196" endtime="20201115 23:02:25.214"></status>
</kw>
<msg timestamp="20201115 23:02:25.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.193" endtime="20201115 23:02:25.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.217" endtime="20201115 23:02:25.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.223" endtime="20201115 23:02:25.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.185" endtime="20201115 23:02:25.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.180" endtime="20201115 23:02:25.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.247" endtime="20201115 23:02:25.586"></status>
</kw>
<msg timestamp="20201115 23:02:25.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045469458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:25.244" endtime="20201115 23:02:25.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045469458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04551775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:25.595" endtime="20201115 23:02:25.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.615" endtime="20201115 23:02:25.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.236" endtime="20201115 23:02:25.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.231" endtime="20201115 23:02:25.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.632" level="INFO">${RESULT} = [{'time': 0.04551775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.829200000000533e-05, 'source_diff': 4.829200000000533e-05}, {'time': 0.045593903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:25.623" endtime="20201115 23:02:25.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.663" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:25.634" endtime="20201115 23:02:25.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.674" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.672" endtime="20201115 23:02:25.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.680" level="INFO">VALUE: [4.829200000000533e-05, 4.838899999999591e-05, 4.8403000000002416e-05, 4.834700000000414e-05, 4.8459000000000696e-05, 4.884700000000464e-05, 4.8459000000000696e-05, 4.8125000000003026e-05, 4.880599999999846e-05, 4.859800000000386e-05, 4.870800000000147e-05, 4.823600000000011e-05, 4.848600000000036e-05, 4.861099999999702e-05, 4.895800000000172e-05, 4.822200000000054e-05, 4.8417000000001986e-05, 4.8915999999996074e-05, 4.8431000000001556e-05, 4.845800000000122e-05, 4.908299999999838e-05, 4.8417000000001986e-05, 4.908299999999838e-05, 4.849999999999993e-05, 4.88060000000054e-05, 4.824999999999968e-05, 4.820800000000097e-05, 4.905600000000565e-05, 4.8667000000002236e-05, 4.898600000000086e-05, 4.868000000000233e-05, 4.8709000000000946e-05, 4.824999999999968e-05, 4.81669999999948e-05, 4.8181000000001306e-05, 4.848600000000036e-05, 4.813899999999566e-05, 4.837499999999634e-05, 4.8889000000003346e-05, 4.8193999999994463e-05, 4.8959000000001196e-05, 4.906900000000575e-05, 4.894499999999469e-05, 4.81940000000014e-05, 4.902799999999957e-05, 4.8375000000003276e-05, 4.888899999999641e-05, 4.905499999999924e-05, 4.9014e-05, 4.820800000000097e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.677" endtime="20201115 23:02:25.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.665" endtime="20201115 23:02:25.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.688" endtime="20201115 23:02:25.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.697" endtime="20201115 23:02:25.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.692" endtime="20201115 23:02:25.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.684" endtime="20201115 23:02:25.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.176" endtime="20201115 23:02:25.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.171" endtime="20201115 23:02:25.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.170" endtime="20201115 23:02:25.723"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.750" endtime="20201115 23:02:25.768"></status>
</kw>
<msg timestamp="20201115 23:02:25.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.747" endtime="20201115 23:02:25.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.771" endtime="20201115 23:02:25.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.778" endtime="20201115 23:02:25.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.740" endtime="20201115 23:02:25.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.734" endtime="20201115 23:02:25.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.802" endtime="20201115 23:02:26.138"></status>
</kw>
<msg timestamp="20201115 23:02:26.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045466625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.798" endtime="20201115 23:02:26.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045417514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045466625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.148" endtime="20201115 23:02:26.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.167" endtime="20201115 23:02:26.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.791" endtime="20201115 23:02:26.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.786" endtime="20201115 23:02:26.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.186" level="INFO">${RESULT} = [{'time': 0.045466625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.911099999999752e-05, 'source_diff': 4.911099999999752e-05}, {'time': 0.045544833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.177" endtime="20201115 23:02:26.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.217" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:26.188" endtime="20201115 23:02:26.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.228" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.225" endtime="20201115 23:02:26.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.233" level="INFO">VALUE: [4.911099999999752e-05, 4.913899999999666e-05, 4.956899999999931e-05, 4.987499999999784e-05, 5.005599999999971e-05, 4.938899999999691e-05, 4.956999999999878e-05, 5.009699999999895e-05, 4.981899999999956e-05, 4.9221999999994603e-05, 4.973600000000161e-05, 4.958299999999888e-05, 4.952800000000007e-05, 4.923600000000111e-05, 4.926400000000025e-05, 4.937499999999734e-05, 4.987499999999784e-05, 4.993099999999612e-05, 4.945800000000222e-05, 4.922299999999408e-05, 4.976400000000075e-05, 5.005500000000024e-05, 5.005599999999971e-05, 4.923599999999417e-05, 4.909699999999795e-05, 4.950000000000093e-05, 4.931999999999853e-05, 4.959699999999845e-05, 4.9457999999995284e-05, 4.948600000000136e-05, 4.918000000000283e-05, 4.920899999999451e-05, 4.998600000000186e-05, 4.9193999999995464e-05, 4.963899999999716e-05, 4.919499999999494e-05, 4.927799999999982e-05, 4.961199999999749e-05, 4.913899999999666e-05, 4.987499999999784e-05, 5.005500000000024e-05, 4.981899999999956e-05, 5.009699999999895e-05, 4.959699999999845e-05, 5.002800000000057e-05, 4.929099999999992e-05, 4.954199999999964e-05, 4.976400000000075e-05, 4.927799999999982e-05, 4.9445000000002126e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.230" endtime="20201115 23:02:26.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.218" endtime="20201115 23:02:26.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.242" endtime="20201115 23:02:26.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.250" endtime="20201115 23:02:26.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.246" endtime="20201115 23:02:26.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.237" endtime="20201115 23:02:26.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.730" endtime="20201115 23:02:26.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.726" endtime="20201115 23:02:26.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.724" endtime="20201115 23:02:26.277"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.304" endtime="20201115 23:02:26.322"></status>
</kw>
<msg timestamp="20201115 23:02:26.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.301" endtime="20201115 23:02:26.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.325" endtime="20201115 23:02:26.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.333" endtime="20201115 23:02:26.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.293" endtime="20201115 23:02:26.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.287" endtime="20201115 23:02:26.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.358" endtime="20201115 23:02:26.696"></status>
</kw>
<msg timestamp="20201115 23:02:26.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045418917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045469417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.354" endtime="20201115 23:02:26.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045418917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045469417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.706" endtime="20201115 23:02:26.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.724" endtime="20201115 23:02:26.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.347" endtime="20201115 23:02:26.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.342" endtime="20201115 23:02:26.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.742" level="INFO">${RESULT} = [{'time': 0.045469417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.049999999999499e-05, 'source_diff': 5.049999999999499e-05}, {'time': 0.045551639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.733" endtime="20201115 23:02:26.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:26.744" endtime="20201115 23:02:26.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.786" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.784" endtime="20201115 23:02:26.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.792" level="INFO">VALUE: [5.049999999999499e-05, 5.063899999999816e-05, 5.105600000000071e-05, 5.073600000000261e-05, 5.025000000000168e-05, 5.055600000000021e-05, 5.0721999999996104e-05, 5.050000000000193e-05, 5.031999999999953e-05, 5.0209000000002446e-05, 5.076400000000175e-05, 5.024999999999474e-05, 5.036099999999877e-05, 5.105500000000124e-05, 5.029200000000039e-05, 5.013899999999766e-05, 5.0929999999997644e-05, 5.018000000000383e-05, 5.084799999999917e-05, 5.086099999999927e-05, 5.033299999999963e-05, 5.0681000000003806e-05, 5.030599999999996e-05, 5.038899999999791e-05, 5.025000000000168e-05, 5.0665999999997824e-05, 5.041699999999705e-05, 5.063899999999816e-05, 5.0915999999998074e-05, 5.10419999999942e-05, 5.104200000000114e-05, 5.049999999999499e-05, 5.0417000000003986e-05, 5.030500000000049e-05, 5.0429999999997144e-05, 5.013899999999766e-05, 5.102800000000157e-05, 5.065299999999773e-05, 5.109699999999995e-05, 5.037499999999834e-05, 5.06940000000039e-05, 5.031999999999953e-05, 5.0401999999998004e-05, 5.05140000000015e-05, 5.087499999999884e-05, 5.0723000000002516e-05, 5.047200000000279e-05, 5.058299999999988e-05, 5.0151999999997754e-05, 5.052800000000107e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.788" endtime="20201115 23:02:26.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.777" endtime="20201115 23:02:26.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.800" endtime="20201115 23:02:26.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.809" endtime="20201115 23:02:26.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.804" endtime="20201115 23:02:26.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.796" endtime="20201115 23:02:26.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.284" endtime="20201115 23:02:26.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.279" endtime="20201115 23:02:26.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.278" endtime="20201115 23:02:26.835"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.841" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.863" endtime="20201115 23:02:26.881"></status>
</kw>
<msg timestamp="20201115 23:02:26.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.860" endtime="20201115 23:02:26.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.884" endtime="20201115 23:02:26.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.890" endtime="20201115 23:02:26.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.852" endtime="20201115 23:02:26.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.846" endtime="20201115 23:02:26.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.914" endtime="20201115 23:02:27.252"></status>
</kw>
<msg timestamp="20201115 23:02:27.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046031486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046083417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.911" endtime="20201115 23:02:27.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046031486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046083417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.262" endtime="20201115 23:02:27.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.280" endtime="20201115 23:02:27.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.903" endtime="20201115 23:02:27.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.899" endtime="20201115 23:02:27.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.300" level="INFO">${RESULT} = [{'time': 0.046083417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.193099999999812e-05, 'source_diff': 5.193099999999812e-05}, {'time': 0.046162611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.291" endtime="20201115 23:02:27.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.330" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:27.302" endtime="20201115 23:02:27.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.341" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.339" endtime="20201115 23:02:27.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.347" level="INFO">VALUE: [5.193099999999812e-05, 5.138899999999891e-05, 5.179099999999548e-05, 5.206899999999487e-05, 5.18470000000007e-05, 5.129199999999445e-05, 5.1721999999997104e-05, 5.179199999999495e-05, 5.144499999999719e-05, 5.168099999999787e-05, 5.138900000000585e-05, 5.132000000000053e-05, 5.176400000000275e-05, 5.20270000000031e-05, 5.115299999999823e-05, 5.112499999999909e-05, 5.156999999999384e-05, 5.18340000000006e-05, 5.1165999999998324e-05, 5.134799999999967e-05, 5.1985999999996924e-05, 5.1221999999996604e-05, 5.148600000000336e-05, 5.1167000000004736e-05, 5.131900000000106e-05, 5.140299999999848e-05, 5.1499999999995993e-05, 5.161100000000002e-05, 5.1195000000003876e-05, 5.209800000000042e-05, 5.190299999999898e-05, 5.161100000000002e-05, 5.205600000000171e-05, 5.1973000000003766e-05, 5.155500000000174e-05, 5.1887999999999934e-05, 5.187499999999984e-05, 5.1459000000003696e-05, 5.161100000000002e-05, 5.1915999999999074e-05, 5.16669999999983e-05, 5.194499999999769e-05, 5.16940000000049e-05, 5.134799999999967e-05, 5.133300000000063e-05, 5.129100000000192e-05, 5.1207999999997034e-05, 5.11669999999978e-05, 5.1929999999998644e-05, 5.129200000000139e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.344" endtime="20201115 23:02:27.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.332" endtime="20201115 23:02:27.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.356" endtime="20201115 23:02:27.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.365" endtime="20201115 23:02:27.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.360" endtime="20201115 23:02:27.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.351" endtime="20201115 23:02:27.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.842" endtime="20201115 23:02:27.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.838" endtime="20201115 23:02:27.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.836" endtime="20201115 23:02:27.393"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.420" endtime="20201115 23:02:27.438"></status>
</kw>
<msg timestamp="20201115 23:02:27.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.417" endtime="20201115 23:02:27.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.441" endtime="20201115 23:02:27.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.448" endtime="20201115 23:02:27.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.409" endtime="20201115 23:02:27.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.404" endtime="20201115 23:02:27.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.471" endtime="20201115 23:02:27.809"></status>
</kw>
<msg timestamp="20201115 23:02:27.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046909389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046961722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.468" endtime="20201115 23:02:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046909389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046961722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.819" endtime="20201115 23:02:27.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.838" endtime="20201115 23:02:27.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.461" endtime="20201115 23:02:27.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.456" endtime="20201115 23:02:27.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.855" level="INFO">${RESULT} = [{'time': 0.046961722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.233299999999469e-05, 'source_diff': 5.233299999999469e-05}, {'time': 0.047040903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.846" endtime="20201115 23:02:27.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.886" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:27.858" endtime="20201115 23:02:27.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.897" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.895" endtime="20201115 23:02:27.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.902" level="INFO">VALUE: [5.233299999999469e-05, 5.237500000000034e-05, 5.291699999999955e-05, 5.286099999999433e-05, 5.262500000000059e-05, 5.229200000000239e-05, 5.2457999999998284e-05, 5.21669999999988e-05, 5.283299999999519e-05, 5.23470000000012e-05, 5.23470000000012e-05, 5.2999999999997494e-05, 5.2249999999996743e-05, 5.227800000000282e-05, 5.311200000000099e-05, 5.223600000000411e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.286100000000127e-05, 5.3014000000004e-05, 5.2471999999997854e-05, 5.2443999999998714e-05, 5.211100000000052e-05, 5.269499999999844e-05, 5.2402000000000004e-05, 5.212499999999315e-05, 5.309700000000195e-05, 5.2707999999998534e-05, 5.252699999999666e-05, 5.286100000000127e-05, 5.229199999999545e-05, 5.283300000000213e-05, 5.2235999999997174e-05, 5.308400000000185e-05, 5.283300000000213e-05, 5.244499999999819e-05, 5.220800000000497e-05, 5.238899999999991e-05, 5.279199999999595e-05, 5.2999999999997494e-05, 5.2723000000004516e-05, 5.2513999999996563e-05, 5.2402000000000004e-05, 5.2167000000005737e-05, 5.300000000000443e-05, 5.2485999999997424e-05, 5.290299999999998e-05, 5.230600000000196e-05, 5.306899999999587e-05, 5.243000000000608e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.899" endtime="20201115 23:02:27.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.888" endtime="20201115 23:02:27.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.912" endtime="20201115 23:02:27.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.920" endtime="20201115 23:02:27.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.916" endtime="20201115 23:02:27.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.908" endtime="20201115 23:02:27.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.399" endtime="20201115 23:02:27.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.395" endtime="20201115 23:02:27.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.394" endtime="20201115 23:02:27.947"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.952" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.974" endtime="20201115 23:02:27.992"></status>
</kw>
<msg timestamp="20201115 23:02:27.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.971" endtime="20201115 23:02:27.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.996" endtime="20201115 23:02:28.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.002" endtime="20201115 23:02:28.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.964" endtime="20201115 23:02:28.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.958" endtime="20201115 23:02:28.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.026" endtime="20201115 23:02:28.362"></status>
</kw>
<msg timestamp="20201115 23:02:28.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045725667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045778931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.022" endtime="20201115 23:02:28.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045725667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045778931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.372" endtime="20201115 23:02:28.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.390" endtime="20201115 23:02:28.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.015" endtime="20201115 23:02:28.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.010" endtime="20201115 23:02:28.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.411" level="INFO">${RESULT} = [{'time': 0.045778931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.326400000000425e-05, 'source_diff': 5.326400000000425e-05}, {'time': 0.045864097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.401" endtime="20201115 23:02:28.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.442" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:28.413" endtime="20201115 23:02:28.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.453" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.451" endtime="20201115 23:02:28.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.459" level="INFO">VALUE: [5.326400000000425e-05, 5.35549999999968e-05, 5.387500000000184e-05, 5.398600000000586e-05, 5.394499999999969e-05, 5.355500000000374e-05, 5.3665999999993885e-05, 5.36670000000003e-05, 5.312500000000109e-05, 5.391700000000055e-05, 5.372200000000604e-05, 5.405500000000424e-05, 5.3499999999997994e-05, 5.338900000000091e-05, 5.319499999999894e-05, 5.3263999999997313e-05, 5.406900000000381e-05, 5.318099999999937e-05, 5.3487000000004836e-05, 5.336100000000177e-05, 5.337500000000134e-05, 5.387500000000184e-05, 5.3166000000000324e-05, 5.3457999999999284e-05, 5.354200000000364e-05, 5.329099999999698e-05, 5.3487000000004836e-05, 5.409699999999601e-05, 5.3235999999998174e-05, 5.3971999999999354e-05, 5.4014000000005e-05, 5.365300000000073e-05, 5.393100000000012e-05, 5.381900000000356e-05, 5.337500000000134e-05, 5.35270000000046e-05, 5.35419999999967e-05, 5.363900000000116e-05, 5.3471999999998854e-05, 5.3944000000000214e-05, 5.405599999999677e-05, 5.330600000000296e-05, 5.3263999999997313e-05, 5.388900000000141e-05, 5.313900000000066e-05, 5.386099999999533e-05, 5.386099999999533e-05, 5.33340000000021e-05, 5.408299999999644e-05, 5.355600000000321e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.455" endtime="20201115 23:02:28.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.444" endtime="20201115 23:02:28.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.468" endtime="20201115 23:02:28.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.477" endtime="20201115 23:02:28.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.472" endtime="20201115 23:02:28.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.464" endtime="20201115 23:02:28.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.954" endtime="20201115 23:02:28.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.950" endtime="20201115 23:02:28.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.948" endtime="20201115 23:02:28.503"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.509" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.530" endtime="20201115 23:02:28.548"></status>
</kw>
<msg timestamp="20201115 23:02:28.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.527" endtime="20201115 23:02:28.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.552" endtime="20201115 23:02:28.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.558" endtime="20201115 23:02:28.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.520" endtime="20201115 23:02:28.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.514" endtime="20201115 23:02:28.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.582" endtime="20201115 23:02:28.921"></status>
</kw>
<msg timestamp="20201115 23:02:28.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045691028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045745181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.578" endtime="20201115 23:02:28.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045691028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045745181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.930" endtime="20201115 23:02:28.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.949" endtime="20201115 23:02:28.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.571" endtime="20201115 23:02:28.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.566" endtime="20201115 23:02:28.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.967" level="INFO">${RESULT} = [{'time': 0.045745181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415300000000123e-05, 'source_diff': 5.415300000000123e-05}, {'time': 0.045829431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.958" endtime="20201115 23:02:28.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.001" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:28.969" endtime="20201115 23:02:29.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.012" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.010" endtime="20201115 23:02:29.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.018" level="INFO">VALUE: [5.415300000000123e-05, 5.4791999999997953e-05, 5.441700000000105e-05, 5.487500000000284e-05, 5.4291999999997453e-05, 5.4513999999998564e-05, 5.4513999999998564e-05, 5.4929999999994705e-05, 5.508299999999744e-05, 5.4277999999997883e-05, 5.488900000000241e-05, 5.504099999999873e-05, 5.445899999999976e-05, 5.4985999999999924e-05, 5.480499999999805e-05, 5.413900000000166e-05, 5.4708000000000534e-05, 5.491700000000155e-05, 5.441700000000105e-05, 5.486099999999633e-05, 5.476400000000575e-05, 5.4735999999999674e-05, 5.429100000000492e-05, 5.444500000000019e-05, 5.4777999999998384e-05, 5.4708000000000534e-05, 5.459800000000292e-05, 5.4499999999998994e-05, 5.444500000000019e-05, 5.438899999999497e-05, 5.509699999999701e-05, 5.488900000000241e-05, 5.429200000000439e-05, 5.508400000000385e-05, 5.4277999999997883e-05, 5.430499999999755e-05, 5.4972000000000354e-05, 5.462500000000259e-05, 5.458299999999694e-05, 5.468100000000087e-05, 5.436100000000277e-05, 5.4221999999999604e-05, 5.46670000000013e-05, 5.450000000000593e-05, 5.4235999999999174e-05, 5.4763999999998814e-05, 5.462499999999565e-05, 5.4638000000002684e-05, 5.413900000000166e-05, 5.50549999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.015" endtime="20201115 23:02:29.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.003" endtime="20201115 23:02:29.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.027" endtime="20201115 23:02:29.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.035" endtime="20201115 23:02:29.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.031" endtime="20201115 23:02:29.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.022" endtime="20201115 23:02:29.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.510" endtime="20201115 23:02:29.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.506" endtime="20201115 23:02:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.504" endtime="20201115 23:02:29.062"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.067" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.089" endtime="20201115 23:02:29.107"></status>
</kw>
<msg timestamp="20201115 23:02:29.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.086" endtime="20201115 23:02:29.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.110" endtime="20201115 23:02:29.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.117" endtime="20201115 23:02:29.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.078" endtime="20201115 23:02:29.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.072" endtime="20201115 23:02:29.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.140" endtime="20201115 23:02:29.478"></status>
</kw>
<msg timestamp="20201115 23:02:29.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045336708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045392708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.137" endtime="20201115 23:02:29.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045336708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045392708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.488" endtime="20201115 23:02:29.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.508" endtime="20201115 23:02:29.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.129" endtime="20201115 23:02:29.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.125" endtime="20201115 23:02:29.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.527" level="INFO">${RESULT} = [{'time': 0.045392708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5999999999993555e-05, 'source_diff': 5.5999999999993555e-05}, {'time': 0.045475903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:29.518" endtime="20201115 23:02:29.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.558" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:29.529" endtime="20201115 23:02:29.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.569" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.566" endtime="20201115 23:02:29.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.574" level="INFO">VALUE: [5.5999999999993555e-05, 5.540299999999554e-05, 5.5249999999999744e-05, 5.5902000000003504e-05, 5.5444000000001714e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.583399999999766e-05, 5.568099999999493e-05, 5.533399999999716e-05, 5.540300000000248e-05, 5.53749999999964e-05, 5.6055999999998773e-05, 5.5902000000003504e-05, 5.593100000000212e-05, 5.530499999999855e-05, 5.587500000000384e-05, 5.586099999999733e-05, 5.5222000000000604e-05, 5.5791999999998954e-05, 5.5957999999994845e-05, 5.537500000000334e-05, 5.594500000000169e-05, 5.5277999999998884e-05, 5.577699999999991e-05, 5.5249999999999744e-05, 5.6027999999999634e-05, 5.5180000000001894e-05, 5.6055999999998773e-05, 5.608300000000538e-05, 5.543100000000162e-05, 5.5499999999999994e-05, 5.569500000000144e-05, 5.581999999999809e-05, 5.561100000000402e-05, 5.612499999999715e-05, 5.536100000000377e-05, 5.583399999999766e-05, 5.5999999999993555e-05, 5.5694000000001964e-05, 5.512500000000309e-05, 5.6014000000000064e-05, 5.515300000000223e-05, 5.566699999999536e-05, 5.583299999999819e-05, 5.584800000000417e-05, 5.581899999999862e-05, 5.5472000000000854e-05, 5.5430000000002144e-05, 5.588900000000341e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.571" endtime="20201115 23:02:29.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.559" endtime="20201115 23:02:29.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.583" endtime="20201115 23:02:29.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.591" endtime="20201115 23:02:29.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.587" endtime="20201115 23:02:29.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.579" endtime="20201115 23:02:29.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.069" endtime="20201115 23:02:29.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.065" endtime="20201115 23:02:29.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.063" endtime="20201115 23:02:29.618"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.624" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.646" endtime="20201115 23:02:29.663"></status>
</kw>
<msg timestamp="20201115 23:02:29.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.642" endtime="20201115 23:02:29.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.667" endtime="20201115 23:02:29.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.673" endtime="20201115 23:02:29.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.635" endtime="20201115 23:02:29.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.629" endtime="20201115 23:02:29.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.697" endtime="20201115 23:02:30.034"></status>
</kw>
<msg timestamp="20201115 23:02:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04577775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045834639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:29.693" endtime="20201115 23:02:30.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04577775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045834639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.044" endtime="20201115 23:02:30.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.063" endtime="20201115 23:02:30.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.686" endtime="20201115 23:02:30.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.681" endtime="20201115 23:02:30.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.080" level="INFO">${RESULT} = [{'time': 0.045834639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.688900000000441e-05, 'source_diff': 5.688900000000441e-05}, {'time': 0.045920944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.071" endtime="20201115 23:02:30.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.111" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:30.082" endtime="20201115 23:02:30.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.122" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.120" endtime="20201115 23:02:30.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.128" level="INFO">VALUE: [5.688900000000441e-05, 5.6985999999994985e-05, 5.638899999999697e-05, 5.6819999999999093e-05, 5.6486000000001424e-05, 5.6291999999999454e-05, 5.633299999999869e-05, 5.7042000000000204e-05, 5.659799999999798e-05, 5.686099999999833e-05, 5.658299999999894e-05, 5.6458000000002284e-05, 5.7069999999999343e-05, 5.636099999999783e-05, 5.681899999999962e-05, 5.6151999999996816e-05, 5.6915999999997136e-05, 5.63749999999974e-05, 5.66670000000033e-05, 5.659699999999851e-05, 5.7000000000001494e-05, 5.61670000000028e-05, 5.630499999999955e-05, 5.622300000000108e-05, 5.711099999999858e-05, 5.6486000000001424e-05, 5.706899999999987e-05, 5.708299999999944e-05, 5.697299999999489e-05, 5.6236000000001174e-05, 5.6500000000000994e-05, 5.706899999999987e-05, 5.6291999999999454e-05, 5.6486000000001424e-05, 5.681900000000656e-05, 5.709699999999901e-05, 5.644499999999525e-05, 5.6500000000000994e-05, 5.6180000000002894e-05, 5.627700000000041e-05, 5.666699999999636e-05, 5.6264000000000314e-05, 5.693099999999618e-05, 5.640300000000348e-05, 5.6957999999995845e-05, 5.6444000000002714e-05, 5.657000000000578e-05, 5.681899999999962e-05, 5.662500000000459e-05, 5.7028000000000634e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.124" endtime="20201115 23:02:30.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.113" endtime="20201115 23:02:30.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.136" endtime="20201115 23:02:30.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.145" endtime="20201115 23:02:30.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.140" endtime="20201115 23:02:30.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.132" endtime="20201115 23:02:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.625" endtime="20201115 23:02:30.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.621" endtime="20201115 23:02:30.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.619" endtime="20201115 23:02:30.171"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.198" endtime="20201115 23:02:30.216"></status>
</kw>
<msg timestamp="20201115 23:02:30.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.195" endtime="20201115 23:02:30.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.220" endtime="20201115 23:02:30.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.297" endtime="20201115 23:02:30.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.188" endtime="20201115 23:02:30.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.182" endtime="20201115 23:02:30.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.321" endtime="20201115 23:02:30.660"></status>
</kw>
<msg timestamp="20201115 23:02:30.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04537825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045435792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.318" endtime="20201115 23:02:30.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04537825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045435792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.669" endtime="20201115 23:02:30.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.688" endtime="20201115 23:02:30.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.310" endtime="20201115 23:02:30.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.306" endtime="20201115 23:02:30.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.707" level="INFO">${RESULT} = [{'time': 0.045435792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7542000000000704e-05, 'source_diff': 5.7542000000000704e-05}, {'time': 0.045522986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:30.698" endtime="20201115 23:02:30.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.738" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:30.709" endtime="20201115 23:02:30.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.749" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.747" endtime="20201115 23:02:30.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.755" level="INFO">VALUE: [5.7542000000000704e-05, 5.740300000000448e-05, 5.7471999999995915e-05, 5.7458000000003284e-05, 5.716699999999686e-05, 5.8027999999994695e-05, 5.7985999999995985e-05, 5.7499999999995055e-05, 5.759800000000592e-05, 5.7333999999999163e-05, 5.786099999999933e-05, 5.758299999999994e-05, 5.744500000000319e-05, 5.7999999999995555e-05, 5.7151999999997816e-05, 5.7542000000000704e-05, 5.788900000000541e-05, 5.73619999999983e-05, 5.762499999999865e-05, 5.759700000000645e-05, 5.8028000000001634e-05, 5.7236000000002174e-05, 5.736099999999883e-05, 5.730500000000055e-05, 5.7166000000004324e-05, 5.733299999999969e-05, 5.718100000000337e-05, 5.7902000000005505e-05, 5.729100000000098e-05, 5.7915999999998136e-05, 5.8097999999999483e-05, 5.8014000000002064e-05, 5.762499999999865e-05, 5.7457999999996345e-05, 5.8179999999997956e-05, 5.812499999999915e-05, 5.7708000000003534e-05, 5.8070000000000344e-05, 5.75550000000008e-05, 5.7443999999996775e-05, 5.7443999999996775e-05, 5.7764000000001814e-05, 5.740300000000448e-05, 5.7820000000000094e-05, 5.713899999999772e-05, 5.7986000000002924e-05, 5.7500000000001994e-05, 5.7319999999999593e-05, 5.811099999999958e-05, 5.777700000000191e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.751" endtime="20201115 23:02:30.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.740" endtime="20201115 23:02:30.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.764" endtime="20201115 23:02:30.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.772" endtime="20201115 23:02:30.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.767" endtime="20201115 23:02:30.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.759" endtime="20201115 23:02:30.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.178" endtime="20201115 23:02:30.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.174" endtime="20201115 23:02:30.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.172" endtime="20201115 23:02:30.798"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.804" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.826" endtime="20201115 23:02:30.844"></status>
</kw>
<msg timestamp="20201115 23:02:30.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.823" endtime="20201115 23:02:30.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.848" endtime="20201115 23:02:30.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.854" endtime="20201115 23:02:30.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.816" endtime="20201115 23:02:30.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.809" endtime="20201115 23:02:30.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.878" endtime="20201115 23:02:31.218"></status>
</kw>
<msg timestamp="20201115 23:02:31.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046332611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.874" endtime="20201115 23:02:31.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046332611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.227" endtime="20201115 23:02:31.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.246" endtime="20201115 23:02:31.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.867" endtime="20201115 23:02:31.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.862" endtime="20201115 23:02:31.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.264" level="INFO">${RESULT} = [{'time': 0.046332611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9042000000002204e-05, 'source_diff': 5.9042000000002204e-05}, {'time': 0.046421847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.255" endtime="20201115 23:02:31.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.297" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:31.266" endtime="20201115 23:02:31.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.308" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.306" endtime="20201115 23:02:31.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.314" level="INFO">VALUE: [5.9042000000002204e-05, 5.8665999999998886e-05, 5.8749999999996305e-05, 5.8971999999997415e-05, 5.841699999999811e-05, 5.823700000000265e-05, 5.8597999999999983e-05, 5.840299999999854e-05, 5.841699999999811e-05, 5.815300000000523e-05, 5.86949999999975e-05, 5.886100000000033e-05, 5.9070000000001344e-05, 5.8764000000002814e-05, 5.8943999999998276e-05, 5.902699999999622e-05, 5.8429999999998206e-05, 5.843099999999768e-05, 5.877700000000291e-05, 5.8707999999997595e-05, 5.8499999999996055e-05, 5.8264000000002314e-05, 5.8292000000001454e-05, 5.861100000000008e-05, 5.9056000000001774e-05, 5.865299999999879e-05, 5.891699999999861e-05, 5.8292000000001454e-05, 5.856900000000137e-05, 5.8693999999998026e-05, 5.8764000000002814e-05, 5.8778000000002384e-05, 5.8221999999996665e-05, 5.8222000000003604e-05, 5.8972000000004354e-05, 5.8235999999996235e-05, 5.886100000000033e-05, 5.8958000000004784e-05, 5.902699999999622e-05, 5.83749999999994e-05, 5.890300000000598e-05, 5.9056000000001774e-05, 5.836099999999983e-05, 5.861100000000008e-05, 5.8957999999997845e-05, 5.8694000000004964e-05, 5.9013999999996125e-05, 5.819500000000394e-05, 5.8401999999999066e-05, 5.904100000000273e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.310" endtime="20201115 23:02:31.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.299" endtime="20201115 23:02:31.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.323" endtime="20201115 23:02:31.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.331" endtime="20201115 23:02:31.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.327" endtime="20201115 23:02:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.318" endtime="20201115 23:02:31.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.805" endtime="20201115 23:02:31.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.801" endtime="20201115 23:02:31.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.799" endtime="20201115 23:02:31.358"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.363" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.385" endtime="20201115 23:02:31.403"></status>
</kw>
<msg timestamp="20201115 23:02:31.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.382" endtime="20201115 23:02:31.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.407" endtime="20201115 23:02:31.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.413" endtime="20201115 23:02:31.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.375" endtime="20201115 23:02:31.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.369" endtime="20201115 23:02:31.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.437" endtime="20201115 23:02:31.775"></status>
</kw>
<msg timestamp="20201115 23:02:31.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045462278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.433" endtime="20201115 23:02:31.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045402444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045462278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.784" endtime="20201115 23:02:31.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.803" endtime="20201115 23:02:31.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.426" endtime="20201115 23:02:31.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.421" endtime="20201115 23:02:31.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.822" level="INFO">${RESULT} = [{'time': 0.045462278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9834000000001664e-05, 'source_diff': 5.9834000000001664e-05}, {'time': 0.045554528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.813" endtime="20201115 23:02:31.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.853" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:31.825" endtime="20201115 23:02:31.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.864" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.862" endtime="20201115 23:02:31.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.870" level="INFO">VALUE: [5.9834000000001664e-05, 5.986099999999439e-05, 5.936100000000083e-05, 6.0013999999997125e-05, 5.963900000000022e-05, 5.943100000000562e-05, 5.965299999999979e-05, 5.9777999999996445e-05, 5.9264000000003314e-05, 6.009700000000201e-05, 5.965299999999979e-05, 5.9292000000002454e-05, 5.9542000000002704e-05, 5.9584000000001414e-05, 6.0027999999996695e-05, 5.963900000000022e-05, 5.936100000000083e-05, 5.944500000000519e-05, 5.9735999999997735e-05, 5.941699999999911e-05, 6.012500000000115e-05, 5.9250000000003744e-05, 5.983300000000219e-05, 6.012500000000115e-05, 5.929100000000298e-05, 6.0070000000002344e-05, 5.990300000000004e-05, 6.013900000000072e-05, 6.011100000000158e-05, 6.002699999999722e-05, 5.9888000000000996e-05, 6.0207999999999096e-05, 5.970899999999807e-05, 6.0013999999997125e-05, 5.9249999999996805e-05, 5.9514000000003564e-05, 5.983299999999525e-05, 5.9500000000003994e-05, 5.986099999999439e-05, 5.9943999999999276e-05, 6.009699999999507e-05, 5.9278000000002884e-05, 5.9264000000003314e-05, 6.0070000000002344e-05, 5.9749999999997305e-05, 5.9235999999997235e-05, 5.934700000000126e-05, 5.920899999999757e-05, 5.9249999999996805e-05, 5.9999999999997555e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.866" endtime="20201115 23:02:31.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.855" endtime="20201115 23:02:31.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.879" endtime="20201115 23:02:31.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.887" endtime="20201115 23:02:31.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.883" endtime="20201115 23:02:31.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.875" endtime="20201115 23:02:31.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.365" endtime="20201115 23:02:31.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.361" endtime="20201115 23:02:31.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.359" endtime="20201115 23:02:31.914"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.941" endtime="20201115 23:02:31.959"></status>
</kw>
<msg timestamp="20201115 23:02:31.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.938" endtime="20201115 23:02:31.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.963" endtime="20201115 23:02:31.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.969" endtime="20201115 23:02:31.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.930" endtime="20201115 23:02:31.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.925" endtime="20201115 23:02:31.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.993" endtime="20201115 23:02:32.331"></status>
</kw>
<msg timestamp="20201115 23:02:32.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045429889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045490361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.989" endtime="20201115 23:02:32.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045429889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045490361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.341" endtime="20201115 23:02:32.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.360" endtime="20201115 23:02:32.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.982" endtime="20201115 23:02:32.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.977" endtime="20201115 23:02:32.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.377" level="INFO">${RESULT} = [{'time': 0.045490361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0471999999998916e-05, 'source_diff': 6.0471999999998916e-05}, {'time': 0.045583597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.368" endtime="20201115 23:02:32.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.408" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:32.379" endtime="20201115 23:02:32.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.419" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.417" endtime="20201115 23:02:32.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.425" level="INFO">VALUE: [6.0471999999998916e-05, 6.0999999999998555e-05, 6.066700000000036e-05, 6.031900000000312e-05, 6.0179999999999956e-05, 6.1014000000005064e-05, 6.059700000000251e-05, 6.0250000000004744e-05, 6.105499999999736e-05, 6.0249999999997805e-05, 6.0193999999999526e-05, 6.086100000000233e-05, 6.033300000000269e-05, 6.063900000000122e-05, 6.034700000000226e-05, 6.0277999999996945e-05, 6.0263999999997375e-05, 6.043099999999968e-05, 6.0264000000004314e-05, 6.062499999999471e-05, 6.0749999999998305e-05, 6.087499999999496e-05, 6.113800000000225e-05, 6.115300000000129e-05, 6.0235999999998235e-05, 6.084699999999582e-05, 6.0916000000001136e-05, 6.112499999999521e-05, 6.0666000000000886e-05, 6.056900000000337e-05, 6.0680000000000456e-05, 6.0278000000003884e-05, 6.083299999999625e-05, 6.06949999999995e-05, 6.0584000000002414e-05, 6.108399999999597e-05, 6.0306000000003024e-05, 6.105599999999684e-05, 6.0277999999996945e-05, 6.041700000000011e-05, 6.063900000000122e-05, 6.1028000000004634e-05, 6.068099999999993e-05, 6.0500000000004994e-05, 6.10420000000042e-05, 6.0707999999999596e-05, 6.0707999999999596e-05, 6.1014000000005064e-05, 6.0499999999998055e-05, 6.0430000000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.421" endtime="20201115 23:02:32.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.410" endtime="20201115 23:02:32.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.434" endtime="20201115 23:02:32.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.443" endtime="20201115 23:02:32.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.438" endtime="20201115 23:02:32.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.430" endtime="20201115 23:02:32.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.921" endtime="20201115 23:02:32.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.917" endtime="20201115 23:02:32.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.915" endtime="20201115 23:02:32.469"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.475" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.496" endtime="20201115 23:02:32.515"></status>
</kw>
<msg timestamp="20201115 23:02:32.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.493" endtime="20201115 23:02:32.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.518" endtime="20201115 23:02:32.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.524" endtime="20201115 23:02:32.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.486" endtime="20201115 23:02:32.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.480" endtime="20201115 23:02:32.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.549" endtime="20201115 23:02:32.885"></status>
</kw>
<msg timestamp="20201115 23:02:32.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.546" endtime="20201115 23:02:32.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045396028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.895" endtime="20201115 23:02:32.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.914" endtime="20201115 23:02:32.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.538" endtime="20201115 23:02:32.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.533" endtime="20201115 23:02:32.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.933" level="INFO">${RESULT} = [{'time': 0.045396028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.118100000000043e-05, 'source_diff': 6.118100000000043e-05}, {'time': 0.045485236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.924" endtime="20201115 23:02:32.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.964" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:32.935" endtime="20201115 23:02:32.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.975" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.973" endtime="20201115 23:02:32.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.980" level="INFO">VALUE: [6.118100000000043e-05, 6.183299999999725e-05, 6.177799999999845e-05, 6.199999999999956e-05, 6.161100000000308e-05, 6.165199999999538e-05, 6.162500000000265e-05, 6.209799999999654e-05, 6.173599999999974e-05, 6.188900000000247e-05, 6.109700000000301e-05, 6.120899999999957e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.211100000000358e-05, 6.183299999999725e-05, 6.213900000000272e-05, 6.147199999999992e-05, 6.130599999999709e-05, 6.133299999999675e-05, 6.187499999999596e-05, 6.186099999999639e-05, 6.213900000000272e-05, 6.180499999999811e-05, 6.118100000000043e-05, 6.149999999999906e-05, 6.161100000000308e-05, 6.213900000000272e-05, 6.166700000000136e-05, 6.118000000000096e-05, 6.12080000000001e-05, 6.140200000000207e-05, 6.130599999999709e-05, 6.143100000000068e-05, 6.204199999999827e-05, 6.184700000000376e-05, 6.181899999999768e-05, 6.141699999999417e-05, 6.212500000000315e-05, 6.148600000000642e-05, 6.199999999999956e-05, 6.116600000000139e-05, 6.141700000000111e-05, 6.194400000000128e-05, 6.13200000000036e-05, 6.147199999999992e-05, 6.119400000000053e-05, 6.155499999999786e-05, 6.152699999999872e-05, 6.115299999999435e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.977" endtime="20201115 23:02:32.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.966" endtime="20201115 23:02:32.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.989" endtime="20201115 23:02:32.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.998" endtime="20201115 23:02:33.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.993" endtime="20201115 23:02:33.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.985" endtime="20201115 23:02:33.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.476" endtime="20201115 23:02:33.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.472" endtime="20201115 23:02:33.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.470" endtime="20201115 23:02:33.024"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.051" endtime="20201115 23:02:33.070"></status>
</kw>
<msg timestamp="20201115 23:02:33.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.048" endtime="20201115 23:02:33.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.073" endtime="20201115 23:02:33.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.080" endtime="20201115 23:02:33.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.041" endtime="20201115 23:02:33.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.035" endtime="20201115 23:02:33.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.103" endtime="20201115 23:02:33.445"></status>
</kw>
<msg timestamp="20201115 23:02:33.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045656917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.100" endtime="20201115 23:02:33.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045656917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.454" endtime="20201115 23:02:33.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.474" endtime="20201115 23:02:33.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.092" endtime="20201115 23:02:33.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.088" endtime="20201115 23:02:33.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.491" level="INFO">${RESULT} = [{'time': 0.045719375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.245800000000135e-05, 'source_diff': 6.245800000000135e-05}, {'time': 0.045810625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.482" endtime="20201115 23:02:33.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.525" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:33.494" endtime="20201115 23:02:33.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.537" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.534" endtime="20201115 23:02:33.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.542" level="INFO">VALUE: [6.245800000000135e-05, 6.280599999999859e-05, 6.238899999999603e-05, 6.265299999999585e-05, 6.263900000000322e-05, 6.248600000000049e-05, 6.248600000000049e-05, 6.216700000000186e-05, 6.290300000000304e-05, 6.311099999999764e-05, 6.30829999999985e-05, 6.234699999999732e-05, 6.236099999999689e-05, 6.255600000000527e-05, 6.216699999999492e-05, 6.23750000000034e-05, 6.279199999999902e-05, 6.251399999999963e-05, 6.305599999999884e-05, 6.267999999999552e-05, 6.222199999999373e-05, 6.294400000000228e-05, 6.247200000000092e-05, 6.288799999999706e-05, 6.24029999999956e-05, 6.309699999999807e-05, 6.25699999999979e-05, 6.216700000000186e-05, 6.29159999999962e-05, 6.286099999999739e-05, 6.294500000000175e-05, 6.283299999999825e-05, 6.276399999999988e-05, 6.311199999999711e-05, 6.305599999999884e-05, 6.290300000000304e-05, 6.245800000000135e-05, 6.308400000000491e-05, 6.255599999999834e-05, 6.22080000000011e-05, 6.226399999999938e-05, 6.293099999999524e-05, 6.254199999999877e-05, 6.24300000000022e-05, 6.219400000000153e-05, 6.262499999999671e-05, 6.236100000000383e-05, 6.283299999999825e-05, 6.272200000000117e-05, 6.231999999999766e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.539" endtime="20201115 23:02:33.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.527" endtime="20201115 23:02:33.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.551" endtime="20201115 23:02:33.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.559" endtime="20201115 23:02:33.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.555" endtime="20201115 23:02:33.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.546" endtime="20201115 23:02:33.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.031" endtime="20201115 23:02:33.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.027" endtime="20201115 23:02:33.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.025" endtime="20201115 23:02:33.586"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.592" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.615" endtime="20201115 23:02:33.633"></status>
</kw>
<msg timestamp="20201115 23:02:33.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.611" endtime="20201115 23:02:33.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.637" endtime="20201115 23:02:33.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.643" endtime="20201115 23:02:33.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.604" endtime="20201115 23:02:33.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.598" endtime="20201115 23:02:33.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.668" endtime="20201115 23:02:34.007"></status>
</kw>
<msg timestamp="20201115 23:02:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047493014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.664" endtime="20201115 23:02:34.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047493014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.017" endtime="20201115 23:02:34.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.036" endtime="20201115 23:02:34.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.656" endtime="20201115 23:02:34.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.651" endtime="20201115 23:02:34.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.055" level="INFO">${RESULT} = [{'time': 0.047493014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.355599999999934e-05, 'source_diff': 6.355599999999934e-05}, {'time': 0.047584236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.046" endtime="20201115 23:02:34.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:34.057" endtime="20201115 23:02:34.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.096" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.094" endtime="20201115 23:02:34.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.102" level="INFO">VALUE: [6.355599999999934e-05, 6.347200000000192e-05, 6.40829999999995e-05, 6.376399999999394e-05, 6.379200000000002e-05, 6.318100000000243e-05, 6.326400000000038e-05, 6.34159999999967e-05, 6.394400000000328e-05, 6.404100000000079e-05, 6.348699999999402e-05, 6.393099999999624e-05, 6.3888000000005e-05, 6.350000000000106e-05, 6.397300000000189e-05, 6.35699999999989e-05, 6.393100000000318e-05, 6.367999999999652e-05, 6.405500000000036e-05, 6.322200000000167e-05, 6.365299999999685e-05, 6.412499999999821e-05, 6.320799999999516e-05, 6.34159999999967e-05, 6.370799999999566e-05, 6.329199999999952e-05, 6.315299999999635e-05, 6.400000000000156e-05, 6.333299999999875e-05, 6.351400000000063e-05, 6.37500000000013e-05, 6.416600000000439e-05, 6.355599999999934e-05, 6.383399999999873e-05, 6.379200000000002e-05, 6.388900000000447e-05, 6.369499999999556e-05, 6.323700000000071e-05, 6.391700000000361e-05, 6.398600000000199e-05, 6.33620000000043e-05, 6.361099999999814e-05, 6.32359999999943e-05, 6.341600000000364e-05, 6.341699999999617e-05, 6.358399999999848e-05, 6.377800000000045e-05, 6.334699999999832e-05, 6.32500000000008e-05, 6.416700000000386e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.099" endtime="20201115 23:02:34.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.087" endtime="20201115 23:02:34.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.111" endtime="20201115 23:02:34.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.119" endtime="20201115 23:02:34.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.115" endtime="20201115 23:02:34.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.106" endtime="20201115 23:02:34.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.594" endtime="20201115 23:02:34.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.589" endtime="20201115 23:02:34.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.587" endtime="20201115 23:02:34.146"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.173" endtime="20201115 23:02:34.191"></status>
</kw>
<msg timestamp="20201115 23:02:34.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.170" endtime="20201115 23:02:34.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.195" endtime="20201115 23:02:34.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.202" endtime="20201115 23:02:34.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.162" endtime="20201115 23:02:34.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.157" endtime="20201115 23:02:34.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.226" endtime="20201115 23:02:34.563"></status>
</kw>
<msg timestamp="20201115 23:02:34.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045572875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04563775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.222" endtime="20201115 23:02:34.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045572875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04563775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.573" endtime="20201115 23:02:34.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.591" endtime="20201115 23:02:34.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.215" endtime="20201115 23:02:34.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.210" endtime="20201115 23:02:34.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.609" level="INFO">${RESULT} = [{'time': 0.04563775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.487499999999896e-05, 'source_diff': 6.487499999999896e-05}, {'time': 0.045731028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:34.600" endtime="20201115 23:02:34.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:34.612" endtime="20201115 23:02:34.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.652" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.650" endtime="20201115 23:02:34.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.657" level="INFO">VALUE: [6.487499999999896e-05, 6.451400000000163e-05, 6.420799999999616e-05, 6.454200000000077e-05, 6.44159999999977e-05, 6.459699999999957e-05, 6.494500000000375e-05, 6.476400000000188e-05, 6.501399999999519e-05, 6.418100000000343e-05, 6.501400000000213e-05, 6.511099999999964e-05, 6.488899999999853e-05, 6.477700000000197e-05, 6.420900000000257e-05, 6.513899999999878e-05, 6.477700000000197e-05, 6.509700000000007e-05, 6.46950000000035e-05, 6.469400000000403e-05, 6.429100000000104e-05, 6.513799999999931e-05, 6.473699999999527e-05, 6.459799999999905e-05, 6.47779999999945e-05, 6.511099999999964e-05, 6.44029999999976e-05, 6.429200000000052e-05, 6.474999999999537e-05, 6.429100000000104e-05, 6.512500000000615e-05, 6.43750000000054e-05, 6.492999999999777e-05, 6.45699999999999e-05, 6.470899999999613e-05, 6.495799999999691e-05, 6.426400000000138e-05, 6.476400000000188e-05, 6.477700000000197e-05, 6.473600000000274e-05, 6.50700000000004e-05, 6.443100000000368e-05, 6.516699999999792e-05, 6.437499999999846e-05, 6.430500000000061e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.484699999999982e-05, 6.433299999999975e-05, 6.509700000000007e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.654" endtime="20201115 23:02:34.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.643" endtime="20201115 23:02:34.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.667" endtime="20201115 23:02:34.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.675" endtime="20201115 23:02:34.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.670" endtime="20201115 23:02:34.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.662" endtime="20201115 23:02:34.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.153" endtime="20201115 23:02:34.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.149" endtime="20201115 23:02:34.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.147" endtime="20201115 23:02:34.701"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.707" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.730" endtime="20201115 23:02:34.748"></status>
</kw>
<msg timestamp="20201115 23:02:34.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.726" endtime="20201115 23:02:34.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.751" endtime="20201115 23:02:34.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.758" endtime="20201115 23:02:34.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.718" endtime="20201115 23:02:34.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.712" endtime="20201115 23:02:34.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.782" endtime="20201115 23:02:35.119"></status>
</kw>
<msg timestamp="20201115 23:02:35.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046310861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046376931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.778" endtime="20201115 23:02:35.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046310861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046376931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.129" endtime="20201115 23:02:35.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.147" endtime="20201115 23:02:35.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.771" endtime="20201115 23:02:35.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.766" endtime="20201115 23:02:35.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.167" level="INFO">${RESULT} = [{'time': 0.046376931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.60700000000014e-05, 'source_diff': 6.60700000000014e-05}, {'time': 0.046472181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:35.158" endtime="20201115 23:02:35.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.197" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:35.169" endtime="20201115 23:02:35.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.208" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.206" endtime="20201115 23:02:35.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.214" level="INFO">VALUE: [6.60700000000014e-05, 6.5195000000004e-05, 6.554199999999483e-05, 6.576400000000288e-05, 6.593099999999824e-05, 6.60830000000015e-05, 6.594399999999834e-05, 6.509700000000007e-05, 6.551399999999569e-05, 6.540300000000554e-05, 6.604200000000227e-05, 6.529200000000152e-05, 6.611100000000064e-05, 6.529200000000152e-05, 6.590199999999963e-05, 6.532000000000066e-05, 6.559700000000057e-05, 6.583299999999431e-05, 6.556900000000143e-05, 6.569399999999809e-05, 6.555500000000186e-05, 6.538899999999903e-05, 6.542999999999827e-05, 6.608400000000098e-05, 6.536099999999989e-05, 6.587499999999996e-05, 6.57909999999956e-05, 6.616599999999945e-05, 6.600000000000356e-05, 6.576399999999594e-05, 6.540300000000554e-05, 6.587499999999996e-05, 6.531900000000118e-05, 6.52500000000028e-05, 6.558400000000048e-05, 6.554200000000177e-05, 6.559700000000057e-05, 6.588899999999953e-05, 6.548600000000349e-05, 6.595800000000485e-05, 6.559700000000057e-05, 6.601400000000313e-05, 6.518100000000443e-05, 6.580500000000211e-05, 6.530500000000161e-05, 6.611100000000064e-05, 6.604200000000227e-05, 6.555600000000134e-05, 6.581900000000168e-05, 6.597199999999748e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.210" endtime="20201115 23:02:35.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.199" endtime="20201115 23:02:35.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.222" endtime="20201115 23:02:35.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.231" endtime="20201115 23:02:35.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.226" endtime="20201115 23:02:35.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.218" endtime="20201115 23:02:36.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.708" endtime="20201115 23:02:36.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.704" endtime="20201115 23:02:36.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.702" endtime="20201115 23:02:36.154"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.160" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.182" endtime="20201115 23:02:36.200"></status>
</kw>
<msg timestamp="20201115 23:02:36.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.178" endtime="20201115 23:02:36.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.204" endtime="20201115 23:02:36.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.210" endtime="20201115 23:02:36.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.171" endtime="20201115 23:02:36.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.165" endtime="20201115 23:02:36.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.234" endtime="20201115 23:02:36.572"></status>
</kw>
<msg timestamp="20201115 23:02:36.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.942627278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.942694417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.230" endtime="20201115 23:02:36.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.942627278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.942694417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.582" endtime="20201115 23:02:36.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.601" endtime="20201115 23:02:36.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.223" endtime="20201115 23:02:36.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.218" endtime="20201115 23:02:36.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.618" level="INFO">${RESULT} = [{'time': 0.942694417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.713899999999384e-05, 'source_diff': 6.713899999999384e-05}, {'time': 0.942792736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.609" endtime="20201115 23:02:36.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.652" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:36.621" endtime="20201115 23:02:36.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.663" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.660" endtime="20201115 23:02:36.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.669" level="INFO">VALUE: [6.713899999999384e-05, 6.62359999999973e-05, 6.715200000007027e-05, 6.709699999996044e-05, 6.670899999994262e-05, 6.623600000010832e-05, 6.676400000005245e-05, 6.655500000007919e-05, 6.663900000003498e-05, 6.673599999995616e-05, 6.67079999999709e-05, 6.697200000005399e-05, 6.629199999996782e-05, 6.672200000001904e-05, 6.67500000000043e-05, 6.704199999996163e-05, 6.715300000004198e-05, 6.659700000000157e-05, 6.700000000003925e-05, 6.613899999996509e-05, 6.679199999992669e-05, 6.64719999999841e-05, 6.65140000000175e-05, 6.672200000001904e-05, 6.702800000002451e-05, 6.631999999995308e-05, 6.712500000005672e-05, 6.630600000001596e-05, 6.633400000000123e-05, 6.704199999996163e-05, 6.695899999997756e-05, 6.666700000002024e-05, 6.70699999999469e-05, 6.62780000000307e-05, 6.640300000004817e-05, 6.618099999999849e-05, 6.658399999992515e-05, 6.711100000000858e-05, 6.625000000004544e-05, 6.684700000003652e-05, 6.716700000009013e-05, 6.66950000000055e-05, 6.652799999995462e-05, 6.697199999994297e-05, 6.680600000008585e-05, 6.677799999998957e-05, 6.64169999999853e-05, 6.620800000001204e-05, 6.663899999992395e-05, 6.649999999996936e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.665" endtime="20201115 23:02:36.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.654" endtime="20201115 23:02:36.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.679" endtime="20201115 23:02:36.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.688" endtime="20201115 23:02:36.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.683" endtime="20201115 23:02:36.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.674" endtime="20201115 23:02:36.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.161" endtime="20201115 23:02:36.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.157" endtime="20201115 23:02:36.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.155" endtime="20201115 23:02:36.715"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.742" endtime="20201115 23:02:36.760"></status>
</kw>
<msg timestamp="20201115 23:02:36.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.739" endtime="20201115 23:02:36.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.764" endtime="20201115 23:02:36.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.770" endtime="20201115 23:02:36.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.731" endtime="20201115 23:02:36.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.725" endtime="20201115 23:02:36.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.794" endtime="20201115 23:02:37.132"></status>
</kw>
<msg timestamp="20201115 23:02:37.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.791" endtime="20201115 23:02:37.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.142" endtime="20201115 23:02:37.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.160" endtime="20201115 23:02:37.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.783" endtime="20201115 23:02:37.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.779" endtime="20201115 23:02:37.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.180" level="INFO">${RESULT} = [{'time': 0.045905375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.779199999999708e-05, 'source_diff': 6.779199999999708e-05}, {'time': 0.046003653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:37.171" endtime="20201115 23:02:37.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:37.182" endtime="20201115 23:02:37.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.221" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.219" endtime="20201115 23:02:37.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.228" level="INFO">VALUE: [6.779199999999708e-05, 6.74030000000006e-05, 6.720799999999916e-05, 6.733299999999581e-05, 6.816700000000092e-05, 6.811100000000264e-05, 6.763900000000128e-05, 6.74030000000006e-05, 6.815300000000135e-05, 6.779200000000402e-05, 6.804200000000427e-05, 6.797199999999948e-05, 6.716699999999992e-05, 6.729199999999658e-05, 6.813900000000178e-05, 6.762500000000171e-05, 6.745799999999941e-05, 6.811100000000264e-05, 6.799999999999862e-05, 6.801399999999819e-05, 6.794400000000034e-05, 6.774999999999837e-05, 6.765300000000085e-05, 6.769499999999956e-05, 6.748599999999855e-05, 6.815299999999441e-05, 6.783299999999631e-05, 6.794400000000034e-05, 6.724999999999787e-05, 6.751400000000463e-05, 6.77500000000053e-05, 6.722200000000567e-05, 6.782000000000316e-05, 6.727800000000395e-05, 6.766600000000095e-05, 6.720799999999916e-05, 6.804100000000479e-05, 6.794499999999981e-05, 6.715200000000088e-05, 6.794400000000034e-05, 6.751399999999769e-05, 6.749999999999812e-05, 6.72229999999982e-05, 6.745800000000635e-05, 6.74030000000006e-05, 6.751400000000463e-05, 6.765300000000085e-05, 6.749999999999812e-05, 6.738799999999462e-05, 6.761100000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.224" endtime="20201115 23:02:37.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.212" endtime="20201115 23:02:37.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.236" endtime="20201115 23:02:37.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.245" endtime="20201115 23:02:37.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.240" endtime="20201115 23:02:37.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.232" endtime="20201115 23:02:37.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.721" endtime="20201115 23:02:37.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.717" endtime="20201115 23:02:37.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.716" endtime="20201115 23:02:37.271"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.299" endtime="20201115 23:02:37.317"></status>
</kw>
<msg timestamp="20201115 23:02:37.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.295" endtime="20201115 23:02:37.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.320" endtime="20201115 23:02:37.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.327" endtime="20201115 23:02:37.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.288" endtime="20201115 23:02:37.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.282" endtime="20201115 23:02:37.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.350" endtime="20201115 23:02:37.688"></status>
</kw>
<msg timestamp="20201115 23:02:37.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045411847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045480514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.347" endtime="20201115 23:02:37.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045411847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045480514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.697" endtime="20201115 23:02:37.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.717" endtime="20201115 23:02:37.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.340" endtime="20201115 23:02:37.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.335" endtime="20201115 23:02:37.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.735" level="INFO">${RESULT} = [{'time': 0.045480514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.866700000000142e-05, 'source_diff': 6.866700000000142e-05}, {'time': 0.045581764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:37.726" endtime="20201115 23:02:37.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.767" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:37.738" endtime="20201115 23:02:37.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.778" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.776" endtime="20201115 23:02:37.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.783" level="INFO">VALUE: [6.866700000000142e-05, 6.86109999999962e-05, 6.881999999999722e-05, 6.869500000000056e-05, 6.852799999999826e-05, 6.869500000000056e-05, 6.820800000000016e-05, 6.859699999999663e-05, 6.847199999999998e-05, 6.893000000000177e-05, 6.818000000000102e-05, 6.833300000000375e-05, 6.915299999999541e-05, 6.89030000000021e-05, 6.912500000000321e-05, 6.85559999999974e-05, 6.826399999999844e-05, 6.862500000000271e-05, 6.908299999999756e-05, 6.880600000000459e-05, 6.890199999999569e-05, 6.87229999999997e-05, 6.843000000000127e-05, 6.827799999999801e-05, 6.851299999999921e-05, 6.82359999999993e-05, 6.85559999999974e-05, 6.868000000000152e-05, 6.866700000000142e-05, 6.858399999999654e-05, 6.868100000000099e-05, 6.861100000000314e-05, 6.912499999999627e-05, 6.915300000000235e-05, 6.877800000000545e-05, 6.829199999999758e-05, 6.90559999999979e-05, 6.838900000000203e-05, 6.848599999999955e-05, 6.898600000000005e-05, 6.851399999999869e-05, 6.844500000000031e-05, 6.87500000000063e-05, 6.832000000000366e-05, 6.906999999999747e-05, 6.845800000000041e-05, 6.829199999999758e-05, 6.894500000000081e-05, 6.90700000000044e-05, 6.838900000000203e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.780" endtime="20201115 23:02:37.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.769" endtime="20201115 23:02:37.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.792" endtime="20201115 23:02:37.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.801" endtime="20201115 23:02:37.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.796" endtime="20201115 23:02:37.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.788" endtime="20201115 23:02:37.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.278" endtime="20201115 23:02:37.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.274" endtime="20201115 23:02:37.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.272" endtime="20201115 23:02:37.827"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.854" endtime="20201115 23:02:37.873"></status>
</kw>
<msg timestamp="20201115 23:02:37.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.851" endtime="20201115 23:02:37.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.876" endtime="20201115 23:02:37.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.883" endtime="20201115 23:02:37.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.844" endtime="20201115 23:02:37.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.838" endtime="20201115 23:02:37.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.906" endtime="20201115 23:02:38.245"></status>
</kw>
<msg timestamp="20201115 23:02:38.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045605375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045674556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.903" endtime="20201115 23:02:38.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045605375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045674556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.254" endtime="20201115 23:02:38.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.274" endtime="20201115 23:02:38.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.896" endtime="20201115 23:02:38.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.891" endtime="20201115 23:02:38.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.293" level="INFO">${RESULT} = [{'time': 0.045674556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.918100000000149e-05, 'source_diff': 6.918100000000149e-05}, {'time': 0.045776833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:38.284" endtime="20201115 23:02:38.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.323" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:38.295" endtime="20201115 23:02:38.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.335" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.333" endtime="20201115 23:02:38.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.340" level="INFO">VALUE: [6.918100000000149e-05, 6.940200000000313e-05, 6.965299999999591e-05, 6.931999999999772e-05, 6.986099999999745e-05, 6.918100000000149e-05, 6.948599999999361e-05, 6.950000000000012e-05, 6.919500000000106e-05, 6.997200000000148e-05, 7.000000000000062e-05, 6.968100000000199e-05, 7.013900000000378e-05, 6.962499999999677e-05, 6.929200000000552e-05, 7.011100000000464e-05, 6.973700000000027e-05, 6.919399999999465e-05, 6.92909999999991e-05, 6.995800000000191e-05, 6.997200000000148e-05, 6.970799999999472e-05, 6.998600000000105e-05, 6.979199999999908e-05, 6.975000000000037e-05, 6.997200000000148e-05, 6.988899999999659e-05, 7.000000000000062e-05, 6.986100000000439e-05, 6.983299999999831e-05, 6.9583000000005e-05, 6.970800000000166e-05, 6.924999999999987e-05, 6.987500000000396e-05, 6.995799999999497e-05, 7.018100000000249e-05, 7.004199999999933e-05, 6.95700000000049e-05, 6.981899999999874e-05, 7.011100000000464e-05, 6.931999999999772e-05, 6.952799999999926e-05, 7.006899999999899e-05, 6.919400000000159e-05, 6.919400000000159e-05, 6.920800000000116e-05, 6.924999999999987e-05, 6.922200000000073e-05, 6.959699999999763e-05, 6.952799999999926e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.337" endtime="20201115 23:02:38.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.325" endtime="20201115 23:02:38.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.349" endtime="20201115 23:02:38.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.358" endtime="20201115 23:02:38.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.353" endtime="20201115 23:02:38.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.345" endtime="20201115 23:02:38.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.834" endtime="20201115 23:02:38.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.830" endtime="20201115 23:02:38.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.828" endtime="20201115 23:02:38.384"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.411" endtime="20201115 23:02:38.430"></status>
</kw>
<msg timestamp="20201115 23:02:38.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.408" endtime="20201115 23:02:38.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.434" endtime="20201115 23:02:38.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.440" endtime="20201115 23:02:38.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.401" endtime="20201115 23:02:38.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.395" endtime="20201115 23:02:38.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.465" endtime="20201115 23:02:38.821"></status>
</kw>
<msg timestamp="20201115 23:02:38.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045733875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.460" endtime="20201115 23:02:38.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045733875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.830" endtime="20201115 23:02:38.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.849" endtime="20201115 23:02:38.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.453" endtime="20201115 23:02:38.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.448" endtime="20201115 23:02:38.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.867" level="INFO">${RESULT} = [{'time': 0.045733875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.1069e-05, 'source_diff': 7.1069e-05}, {'time': 0.045837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.019500000000206e-...</msg>
<status status="PASS" starttime="20201115 23:02:38.858" endtime="20201115 23:02:38.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.900" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:38.869" endtime="20201115 23:02:38.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.911" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.908" endtime="20201115 23:02:38.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.916" level="INFO">VALUE: [7.1069e-05, 7.019500000000206e-05, 7.05559999999994e-05, 7.063899999999734e-05, 7.090299999999716e-05, 7.088800000000506e-05, 7.073599999999486e-05, 7.067999999999658e-05, 7.07910000000006e-05, 7.102800000000076e-05, 7.019500000000206e-05, 7.120799999999622e-05, 7.112499999999827e-05, 7.09439999999964e-05, 7.029199999999958e-05, 7.044500000000231e-05, 7.091699999999673e-05, 7.018000000000302e-05, 7.084699999999888e-05, 7.088899999999759e-05, 7.109800000000555e-05, 7.059699999999863e-05, 7.077800000000051e-05, 7.034799999999786e-05, 7.032000000000566e-05, 7.100000000000162e-05, 7.097200000000248e-05, 7.033399999999829e-05, 7.04439999999959e-05, 7.019399999999565e-05, 7.022199999999479e-05, 7.051299999999427e-05, 7.038900000000403e-05, 7.047300000000145e-05, 7.106999999999947e-05, 7.030599999999915e-05, 7.102700000000128e-05, 7.101400000000119e-05, 7.066700000000342e-05, 7.045900000000188e-05, 7.077800000000051e-05, 7.087499999999802e-05, 7.026400000000044e-05, 7.033400000000523e-05, 7.098600000000205e-05, 7.109699999999913e-05, 7.027800000000001e-05, 7.106999999999947e-05, 7.091599999999726e-05, 7.070799999999572e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.913" endtime="20201115 23:02:38.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.901" endtime="20201115 23:02:38.918"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.925" endtime="20201115 23:02:38.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.933" endtime="20201115 23:02:38.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.929" endtime="20201115 23:02:38.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.920" endtime="20201115 23:02:38.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.391" endtime="20201115 23:02:38.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.387" endtime="20201115 23:02:38.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.385" endtime="20201115 23:02:38.961"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.989" endtime="20201115 23:02:39.008"></status>
</kw>
<msg timestamp="20201115 23:02:39.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.986" endtime="20201115 23:02:39.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.011" endtime="20201115 23:02:39.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.018" endtime="20201115 23:02:39.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.979" endtime="20201115 23:02:39.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.973" endtime="20201115 23:02:39.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.042" endtime="20201115 23:02:39.378"></status>
</kw>
<msg timestamp="20201115 23:02:39.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048103153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048174681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.039" endtime="20201115 23:02:39.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048103153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048174681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.387" endtime="20201115 23:02:39.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.406" endtime="20201115 23:02:39.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.031" endtime="20201115 23:02:39.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.027" endtime="20201115 23:02:39.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.425" level="INFO">${RESULT} = [{'time': 0.048174681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.152799999999432e-05, 'source_diff': 7.152799999999432e-05}, {'time': 0.048273958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.416" endtime="20201115 23:02:39.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.455" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:39.427" endtime="20201115 23:02:39.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.466" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.464" endtime="20201115 23:02:39.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.471" level="INFO">VALUE: [7.152799999999432e-05, 7.167999999999758e-05, 7.204099999999491e-05, 7.130500000000067e-05, 7.197200000000348e-05, 7.180600000000065e-05, 7.141699999999723e-05, 7.127800000000101e-05, 7.156999999999997e-05, 7.154200000000083e-05, 7.148700000000202e-05, 7.184699999999988e-05, 7.137499999999852e-05, 7.188900000000553e-05, 7.169499999999662e-05, 7.154200000000083e-05, 7.187499999999902e-05, 7.138900000000503e-05, 7.150000000000212e-05, 7.15560000000004e-05, 7.213899999999884e-05, 7.170900000000313e-05, 7.138900000000503e-05, 7.190299999999816e-05, 7.179200000000108e-05, 7.168099999999705e-05, 7.187499999999902e-05, 7.145800000000341e-05, 7.215199999999894e-05, 7.177700000000203e-05, 7.209700000000013e-05, 7.179200000000108e-05, 7.140299999999766e-05, 7.191700000000467e-05, 7.123599999999536e-05, 7.120900000000263e-05, 7.163900000000528e-05, 7.126400000000144e-05, 7.198599999999611e-05, 7.150000000000212e-05, 7.166599999999801e-05, 7.14160000000047e-05, 7.174999999999543e-05, 7.129200000000058e-05, 7.17230000000027e-05, 7.184699999999988e-05, 7.204100000000185e-05, 7.204100000000185e-05, 7.148600000000255e-05, 7.190299999999816e-05]</msg>
<status status="PASS" starttime="20201115 23:02:39.468" endtime="20201115 23:02:39.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.457" endtime="20201115 23:02:39.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.480" endtime="20201115 23:02:39.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.488" endtime="20201115 23:02:39.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.484" endtime="20201115 23:02:39.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.476" endtime="20201115 23:02:39.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.969" endtime="20201115 23:02:39.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.964" endtime="20201115 23:02:39.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.962" endtime="20201115 23:02:39.518"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.523" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.546" endtime="20201115 23:02:39.565"></status>
</kw>
<msg timestamp="20201115 23:02:39.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.542" endtime="20201115 23:02:39.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.569" endtime="20201115 23:02:39.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.576" endtime="20201115 23:02:39.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.534" endtime="20201115 23:02:39.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.529" endtime="20201115 23:02:39.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.602" endtime="20201115 23:02:39.940"></status>
</kw>
<msg timestamp="20201115 23:02:39.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048994583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049067486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.598" endtime="20201115 23:02:39.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048994583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049067486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.950" endtime="20201115 23:02:39.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.968" endtime="20201115 23:02:39.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.591" endtime="20201115 23:02:39.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.586" endtime="20201115 23:02:39.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.986" level="INFO">${RESULT} = [{'time': 0.049067486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290299999999916e-05, 'source_diff': 7.290299999999916e-05}, {'time': 0.049170694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.977" endtime="20201115 23:02:39.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.016" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:39.988" endtime="20201115 23:02:40.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.027" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.025" endtime="20201115 23:02:40.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.033" level="INFO">VALUE: [7.290299999999916e-05, 7.233300000000081e-05, 7.308300000000156e-05, 7.254099999999541e-05, 7.315299999999941e-05, 7.301400000000319e-05, 7.240199999999919e-05, 7.276299999999652e-05, 7.250000000000312e-05, 7.222200000000373e-05, 7.290199999999969e-05, 7.283300000000131e-05, 7.248599999999661e-05, 7.299999999999668e-05, 7.259700000000063e-05, 7.262499999999977e-05, 7.309700000000113e-05, 7.312500000000027e-05, 7.247200000000398e-05, 7.254099999999541e-05, 7.297199999999754e-05, 7.280500000000217e-05, 7.229099999999516e-05, 7.280499999999523e-05, 7.218000000000502e-05, 7.288899999999959e-05, 7.307000000000147e-05, 7.268099999999805e-05, 7.230600000000115e-05, 7.316700000000592e-05, 7.243000000000527e-05, 7.295799999999797e-05, 7.270800000000466e-05, 7.222199999999679e-05, 7.317999999999908e-05, 7.308400000000104e-05, 7.309800000000061e-05, 7.287500000000002e-05, 7.240199999999919e-05, 7.304200000000233e-05, 7.272199999999729e-05, 7.251399999999575e-05, 7.290299999999916e-05, 7.318099999999855e-05, 7.300000000000362e-05, 7.318000000000602e-05, 7.265299999999891e-05, 7.291599999999926e-05, 7.254200000000183e-05, 7.268100000000499e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.030" endtime="20201115 23:02:40.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.018" endtime="20201115 23:02:40.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.041" endtime="20201115 23:02:40.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.050" endtime="20201115 23:02:40.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.046" endtime="20201115 23:02:40.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.037" endtime="20201115 23:02:40.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.525" endtime="20201115 23:02:40.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.521" endtime="20201115 23:02:40.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.519" endtime="20201115 23:02:40.077"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.082" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.104" endtime="20201115 23:02:40.122"></status>
</kw>
<msg timestamp="20201115 23:02:40.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.100" endtime="20201115 23:02:40.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.126" endtime="20201115 23:02:40.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.132" endtime="20201115 23:02:40.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.093" endtime="20201115 23:02:40.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.087" endtime="20201115 23:02:40.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.155" endtime="20201115 23:02:40.493"></status>
</kw>
<msg timestamp="20201115 23:02:40.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045616778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045690472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.152" endtime="20201115 23:02:40.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045616778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045690472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.502" endtime="20201115 23:02:40.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.521" endtime="20201115 23:02:40.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.145" endtime="20201115 23:02:40.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.140" endtime="20201115 23:02:40.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.540" level="INFO">${RESULT} = [{'time': 0.045690472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.369400000000609e-05, 'source_diff': 7.369400000000609e-05}, {'time': 0.045795736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.531" endtime="20201115 23:02:40.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.570" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:40.542" endtime="20201115 23:02:40.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.581" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.579" endtime="20201115 23:02:40.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.586" level="INFO">VALUE: [7.369400000000609e-05, 7.38189999999958e-05, 7.41110000000017e-05, 7.397299999999801e-05, 7.362500000000077e-05, 7.322199999999779e-05, 7.418099999999955e-05, 7.400000000000462e-05, 7.322199999999779e-05, 7.320900000000463e-05, 7.366600000000001e-05, 7.370799999999872e-05, 7.363900000000034e-05, 7.345799999999847e-05, 7.354199999999589e-05, 7.393100000000624e-05, 7.351299999999727e-05, 7.395800000000591e-05, 7.343100000000574e-05, 7.41110000000017e-05, 7.333299999999487e-05, 7.329199999999564e-05, 7.387500000000102e-05, 7.365299999999991e-05, 7.372199999999829e-05, 7.352800000000326e-05, 7.368000000000652e-05, 7.358400000000154e-05, 7.351399999999675e-05, 7.408300000000256e-05, 7.419399999999965e-05, 7.349999999999718e-05, 7.358300000000206e-05, 7.341599999999976e-05, 7.352799999999632e-05, 7.386100000000145e-05, 7.375000000000437e-05, 7.362500000000077e-05, 7.334700000000138e-05, 7.330599999999521e-05, 7.368099999999905e-05, 7.365200000000044e-05, 7.320799999999822e-05, 7.363900000000034e-05, 7.351399999999675e-05, 7.391699999999973e-05, 7.383299999999537e-05, 7.395799999999897e-05, 7.34439999999989e-05, 7.40560000000029e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.583" endtime="20201115 23:02:40.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.572" endtime="20201115 23:02:40.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.601" endtime="20201115 23:02:40.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.610" endtime="20201115 23:02:40.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.605" endtime="20201115 23:02:40.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.597" endtime="20201115 23:02:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.084" endtime="20201115 23:02:40.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.080" endtime="20201115 23:02:40.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.078" endtime="20201115 23:02:40.636"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.641" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.663" endtime="20201115 23:02:40.682"></status>
</kw>
<msg timestamp="20201115 23:02:40.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.660" endtime="20201115 23:02:40.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.685" endtime="20201115 23:02:40.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.691" endtime="20201115 23:02:40.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.652" endtime="20201115 23:02:40.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.647" endtime="20201115 23:02:40.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.715" endtime="20201115 23:02:41.050"></status>
</kw>
<msg timestamp="20201115 23:02:41.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044945361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045019528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.711" endtime="20201115 23:02:41.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044945361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045019528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.059" endtime="20201115 23:02:41.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.078" endtime="20201115 23:02:41.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.704" endtime="20201115 23:02:41.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.699" endtime="20201115 23:02:41.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.095" level="INFO">${RESULT} = [{'time': 0.045019528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416699999999998e-05, 'source_diff': 7.416699999999998e-05}, {'time': 0.045124806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.086" endtime="20201115 23:02:41.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.128" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:41.097" endtime="20201115 23:02:41.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.139" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.137" endtime="20201115 23:02:41.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.145" level="INFO">VALUE: [7.416699999999998e-05, 7.482000000000322e-05, 7.497199999999954e-05, 7.477799999999757e-05, 7.515300000000141e-05, 7.505500000000442e-05, 7.501400000000519e-05, 7.502800000000476e-05, 7.419399999999965e-05, 7.50560000000039e-05, 7.476299999999853e-05, 7.422199999999879e-05, 7.434700000000238e-05, 7.474999999999843e-05, 7.444499999999937e-05, 7.467999999999364e-05, 7.513800000000237e-05, 7.42910000000041e-05, 7.488900000000159e-05, 7.447199999999904e-05, 7.502799999999782e-05, 7.434700000000238e-05, 7.418099999999955e-05, 7.462499999999483e-05, 7.451400000000469e-05, 7.451299999999828e-05, 7.422199999999879e-05, 7.465300000000091e-05, 7.433300000000281e-05, 7.50969999999962e-05, 7.426400000000444e-05, 7.468000000000058e-05, 7.459700000000263e-05, 7.434800000000186e-05, 7.477799999999757e-05, 7.420799999999922e-05, 7.508300000000356e-05, 7.490300000000116e-05, 7.462500000000177e-05, 7.422299999999826e-05, 7.474999999999843e-05, 7.509700000000313e-05, 7.461200000000168e-05, 7.420899999999869e-05, 7.483299999999637e-05, 7.427800000000401e-05, 7.44309999999998e-05, 7.450000000000512e-05, 7.457000000000297e-05, 7.423699999999783e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.141" endtime="20201115 23:02:41.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.130" endtime="20201115 23:02:41.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.154" endtime="20201115 23:02:41.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.162" endtime="20201115 23:02:41.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.158" endtime="20201115 23:02:41.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.149" endtime="20201115 23:02:41.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.643" endtime="20201115 23:02:41.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.639" endtime="20201115 23:02:41.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.637" endtime="20201115 23:02:41.188"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.193" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.215" endtime="20201115 23:02:41.234"></status>
</kw>
<msg timestamp="20201115 23:02:41.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.212" endtime="20201115 23:02:41.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.237" endtime="20201115 23:02:41.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.243" endtime="20201115 23:02:41.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.204" endtime="20201115 23:02:41.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.199" endtime="20201115 23:02:41.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.266" endtime="20201115 23:02:41.600"></status>
</kw>
<msg timestamp="20201115 23:02:41.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.263" endtime="20201115 23:02:41.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044841472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044916708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.610" endtime="20201115 23:02:41.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.629" endtime="20201115 23:02:41.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.256" endtime="20201115 23:02:41.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.251" endtime="20201115 23:02:41.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.648" level="INFO">${RESULT} = [{'time': 0.044916708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.523599999999936e-05, 'source_diff': 7.523599999999936e-05}, {'time': 0.045026014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.639" endtime="20201115 23:02:41.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.678" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:41.650" endtime="20201115 23:02:41.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.689" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.687" endtime="20201115 23:02:41.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.695" level="INFO">VALUE: [7.523599999999936e-05, 7.612500000000327e-05, 7.562500000000277e-05, 7.595900000000044e-05, 7.53189999999973e-05, 7.586100000000345e-05, 7.611099999999676e-05, 7.598600000000011e-05, 7.605599999999796e-05, 7.605599999999796e-05, 7.602799999999882e-05, 7.562500000000277e-05, 7.552800000000526e-05, 7.580600000000465e-05, 7.569400000000115e-05, 7.584700000000388e-05, 7.570800000000072e-05, 7.549999999999918e-05, 7.545800000000047e-05, 7.598600000000011e-05, 7.604199999999839e-05, 7.545899999999994e-05, 7.570800000000072e-05, 7.580599999999771e-05, 7.534699999999644e-05, 7.597200000000054e-05, 7.527799999999807e-05, 7.558299999999712e-05, 7.5763999999999e-05, 7.540200000000219e-05, 7.608299999999762e-05, 7.587499999999608e-05, 7.561099999999626e-05, 7.549999999999918e-05, 7.559700000000363e-05, 7.52639999999985e-05, 7.598600000000011e-05, 7.55560000000044e-05, 7.547200000000004e-05, 7.524999999999893e-05, 7.54310000000008e-05, 7.594500000000087e-05, 7.583299999999737e-05, 7.55690000000045e-05, 7.536200000000243e-05, 7.595799999999403e-05, 7.522199999999979e-05, 7.55969999999967e-05, 7.531900000000424e-05, 7.552799999999832e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.692" endtime="20201115 23:02:41.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.680" endtime="20201115 23:02:41.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.704" endtime="20201115 23:02:41.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.712" endtime="20201115 23:02:41.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.707" endtime="20201115 23:02:41.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.699" endtime="20201115 23:02:41.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.195" endtime="20201115 23:02:41.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.191" endtime="20201115 23:02:41.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.189" endtime="20201115 23:02:41.738"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.765" endtime="20201115 23:02:41.783"></status>
</kw>
<msg timestamp="20201115 23:02:41.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.761" endtime="20201115 23:02:41.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.787" endtime="20201115 23:02:41.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.793" endtime="20201115 23:02:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.754" endtime="20201115 23:02:41.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.748" endtime="20201115 23:02:41.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.816" endtime="20201115 23:02:42.150"></status>
</kw>
<msg timestamp="20201115 23:02:42.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044665194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044742431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.813" endtime="20201115 23:02:42.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044665194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044742431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.160" endtime="20201115 23:02:42.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.179" endtime="20201115 23:02:42.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.806" endtime="20201115 23:02:42.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.801" endtime="20201115 23:02:42.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.196" level="INFO">${RESULT} = [{'time': 0.044742431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723700000000083e-05, 'source_diff': 7.723700000000083e-05}, {'time': 0.044850708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.187" endtime="20201115 23:02:42.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.226" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:42.198" endtime="20201115 23:02:42.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.237" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.235" endtime="20201115 23:02:42.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.243" level="INFO">VALUE: [7.723700000000083e-05, 7.654100000000635e-05, 7.702799999999982e-05, 7.677800000000651e-05, 7.661200000000368e-05, 7.656899999999855e-05, 7.701400000000025e-05, 7.647300000000051e-05, 7.694399999999546e-05, 7.665200000000344e-05, 7.70969999999982e-05, 7.644500000000137e-05, 7.654199999999889e-05, 7.697200000000154e-05, 7.715300000000341e-05, 7.697200000000154e-05, 7.640299999999572e-05, 7.659700000000463e-05, 7.690200000000369e-05, 7.69310000000023e-05, 7.69719999999946e-05, 7.620800000000122e-05, 7.669500000000162e-05, 7.691600000000326e-05, 7.71389999999969e-05, 7.652799999999932e-05, 7.63890000000031e-05, 7.679099999999967e-05, 7.681999999999828e-05, 7.716599999999657e-05, 7.698599999999417e-05, 7.636100000000395e-05, 7.691599999999632e-05, 7.704099999999992e-05, 7.715299999999647e-05, 7.682000000000522e-05, 7.654099999999942e-05, 7.717999999999614e-05, 7.648600000000061e-05, 7.66110000000042e-05, 7.675000000000043e-05, 7.63189999999983e-05, 7.64169999999953e-05, 7.642999999999539e-05, 7.716699999999604e-05, 7.713900000000384e-05, 7.669499999999468e-05, 7.645799999999453e-05, 7.711099999999776e-05, 7.715300000000341e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.239" endtime="20201115 23:02:42.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.228" endtime="20201115 23:02:42.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.251" endtime="20201115 23:02:42.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.260" endtime="20201115 23:02:42.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.255" endtime="20201115 23:02:42.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.247" endtime="20201115 23:02:42.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.745" endtime="20201115 23:02:42.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.741" endtime="20201115 23:02:42.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.739" endtime="20201115 23:02:42.286"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.291" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.312" endtime="20201115 23:02:42.331"></status>
</kw>
<msg timestamp="20201115 23:02:42.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.309" endtime="20201115 23:02:42.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.335" endtime="20201115 23:02:42.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.341" endtime="20201115 23:02:42.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.302" endtime="20201115 23:02:42.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.296" endtime="20201115 23:02:42.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.365" endtime="20201115 23:02:42.700"></status>
</kw>
<msg timestamp="20201115 23:02:42.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044693431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044770764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.361" endtime="20201115 23:02:42.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044693431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044770764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.710" endtime="20201115 23:02:42.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.728" endtime="20201115 23:02:42.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.354" endtime="20201115 23:02:42.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.349" endtime="20201115 23:02:42.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.747" level="INFO">${RESULT} = [{'time': 0.044770764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.733299999999887e-05, 'source_diff': 7.733299999999887e-05}, {'time': 0.044877083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.738" endtime="20201115 23:02:42.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.777" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:42.749" endtime="20201115 23:02:42.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.788" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.786" endtime="20201115 23:02:42.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.793" level="INFO">VALUE: [7.733299999999887e-05, 7.752700000000085e-05, 7.722199999999485e-05, 7.730599999999921e-05, 7.79169999999968e-05, 7.811099999999876e-05, 7.750000000000118e-05, 7.801400000000125e-05, 7.811099999999876e-05, 7.79169999999968e-05, 7.76110000000052e-05, 7.727800000000007e-05, 7.776399999999406e-05, 7.802800000000082e-05, 7.7458999999995e-05, 7.780599999999971e-05, 7.81389999999979e-05, 7.816699999999704e-05, 7.7458999999995e-05, 7.733300000000581e-05, 7.747300000000151e-05, 7.75839999999986e-05, 7.770800000000272e-05, 7.80839999999991e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.737500000000452e-05, 7.774999999999449e-05, 7.817999999999714e-05, 7.783300000000631e-05, 7.72640000000005e-05, 7.765300000000391e-05, 7.80969999999992e-05, 7.808299999999962e-05, 7.72640000000005e-05, 7.729199999999964e-05, 7.787499999999808e-05, 7.790300000000416e-05, 7.737499999999758e-05, 7.723600000000136e-05, 7.794499999999593e-05, 7.734699999999844e-05, 7.750000000000118e-05, 7.804199999999345e-05, 7.817999999999714e-05, 7.752800000000032e-05, 7.748599999999467e-05, 7.802800000000082e-05, 7.7764000000001e-05, 7.815299999999747e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.790" endtime="20201115 23:02:42.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.779" endtime="20201115 23:02:42.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.802" endtime="20201115 23:02:42.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.810" endtime="20201115 23:02:42.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.806" endtime="20201115 23:02:42.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.797" endtime="20201115 23:02:42.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.292" endtime="20201115 23:02:42.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.289" endtime="20201115 23:02:42.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.287" endtime="20201115 23:02:42.836"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.842" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.863" endtime="20201115 23:02:42.882"></status>
</kw>
<msg timestamp="20201115 23:02:42.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.860" endtime="20201115 23:02:42.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.886" endtime="20201115 23:02:42.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.893" endtime="20201115 23:02:42.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.853" endtime="20201115 23:02:42.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.847" endtime="20201115 23:02:42.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.917" endtime="20201115 23:02:43.252"></status>
</kw>
<msg timestamp="20201115 23:02:43.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044620917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044699528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.914" endtime="20201115 23:02:43.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044620917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044699528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.262" endtime="20201115 23:02:43.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.280" endtime="20201115 23:02:43.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.907" endtime="20201115 23:02:43.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.901" endtime="20201115 23:02:43.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.297" level="INFO">${RESULT} = [{'time': 0.044699528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861099999999926e-05, 'source_diff': 7.861099999999926e-05}, {'time': 0.044805819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:43.288" endtime="20201115 23:02:43.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.330" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:43.299" endtime="20201115 23:02:43.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.341" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.338" endtime="20201115 23:02:43.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.346" level="INFO">VALUE: [7.861099999999926e-05, 7.823599999999542e-05, 7.834699999999944e-05, 7.887499999999908e-05, 7.899999999999574e-05, 7.836099999999901e-05, 7.877800000000157e-05, 7.82919999999937e-05, 7.857000000000003e-05, 7.888899999999865e-05, 7.845799999999653e-05, 7.854199999999395e-05, 7.822299999999532e-05, 7.891600000000526e-05, 7.894399999999746e-05, 7.912499999999933e-05, 7.837499999999858e-05, 7.837499999999858e-05, 7.881899999999387e-05, 7.845799999999653e-05, 7.886099999999951e-05, 7.91389999999989e-05, 7.916600000000551e-05, 7.902700000000235e-05, 7.834699999999944e-05, 7.904200000000139e-05, 7.895900000000344e-05, 7.82640000000015e-05, 7.836100000000595e-05, 7.843000000000433e-05, 7.89169999999978e-05, 7.837500000000552e-05, 7.827799999999413e-05, 7.886200000000593e-05, 7.842999999999739e-05, 7.874999999999549e-05, 7.904199999999445e-05, 7.90970000000002e-05, 7.869400000000415e-05, 7.85969999999997e-05, 7.836099999999901e-05, 7.843000000000433e-05, 7.833299999999987e-05, 7.918099999999761e-05, 7.904200000000139e-05, 7.861199999999874e-05, 7.854100000000142e-05, 7.84169999999973e-05, 7.855500000000099e-05, 7.89169999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.343" endtime="20201115 23:02:43.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.332" endtime="20201115 23:02:43.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.355" endtime="20201115 23:02:43.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.363" endtime="20201115 23:02:43.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.359" endtime="20201115 23:02:43.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.350" endtime="20201115 23:02:43.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.843" endtime="20201115 23:02:43.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.839" endtime="20201115 23:02:43.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.837" endtime="20201115 23:02:43.389"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.395" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.417" endtime="20201115 23:02:43.436"></status>
</kw>
<msg timestamp="20201115 23:02:43.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.414" endtime="20201115 23:02:43.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.439" endtime="20201115 23:02:43.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.446" endtime="20201115 23:02:43.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.406" endtime="20201115 23:02:43.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.400" endtime="20201115 23:02:43.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.469" endtime="20201115 23:02:43.804"></status>
</kw>
<msg timestamp="20201115 23:02:43.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045644514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.465" endtime="20201115 23:02:43.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045644514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.813" endtime="20201115 23:02:43.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.832" endtime="20201115 23:02:43.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.458" endtime="20201115 23:02:43.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.454" endtime="20201115 23:02:43.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.851" level="INFO">${RESULT} = [{'time': 0.045724611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.00970000000012e-05, 'source_diff': 8.00970000000012e-05}, {'time': 0.045831917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:43.842" endtime="20201115 23:02:43.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.881" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:43.853" endtime="20201115 23:02:43.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.891" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.889" endtime="20201115 23:02:43.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.897" level="INFO">VALUE: [8.00970000000012e-05, 7.984800000000042e-05, 7.969499999999768e-05, 8.019400000000565e-05, 7.950000000000318e-05, 8.005600000000196e-05, 7.977799999999563e-05, 7.993099999999836e-05, 7.995800000000497e-05, 8.012500000000033e-05, 7.933300000000088e-05, 8.005499999999555e-05, 7.958299999999419e-05, 7.979099999999573e-05, 7.999999999999674e-05, 7.98890000000066e-05, 7.92919999999947e-05, 8.00970000000012e-05, 7.93190000000013e-05, 7.94719999999971e-05, 7.995799999999803e-05, 7.973599999999692e-05, 7.988899999999965e-05, 7.937499999999958e-05, 8.011100000000076e-05, 7.974999999999649e-05, 7.923600000000336e-05, 8.005500000000249e-05, 7.950000000000318e-05, 7.969499999999768e-05, 7.927800000000207e-05, 7.926300000000303e-05, 7.941599999999882e-05, 7.955500000000199e-05, 7.99719999999976e-05, 7.944499999999743e-05, 8.004200000000239e-05, 7.959800000000017e-05, 7.981899999999487e-05, 8.020799999999828e-05, 8.007000000000153e-05, 7.994500000000487e-05, 8.008300000000163e-05, 7.998599999999717e-05, 7.972299999999682e-05, 7.948599999999667e-05, 7.92770000000026e-05, 7.961099999999333e-05, 7.979200000000214e-05, 7.932000000000078e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.894" endtime="20201115 23:02:43.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.882" endtime="20201115 23:02:43.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.906" endtime="20201115 23:02:43.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.914" endtime="20201115 23:02:43.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.909" endtime="20201115 23:02:43.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.901" endtime="20201115 23:02:43.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.396" endtime="20201115 23:02:43.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.392" endtime="20201115 23:02:43.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.390" endtime="20201115 23:02:43.942"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.969" endtime="20201115 23:02:43.988"></status>
</kw>
<msg timestamp="20201115 23:02:43.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.966" endtime="20201115 23:02:43.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.992" endtime="20201115 23:02:43.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.998" endtime="20201115 23:02:44.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.959" endtime="20201115 23:02:44.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.953" endtime="20201115 23:02:44.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.022" endtime="20201115 23:02:44.357"></status>
</kw>
<msg timestamp="20201115 23:02:44.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046795236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046876319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.018" endtime="20201115 23:02:44.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046795236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046876319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.366" endtime="20201115 23:02:44.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.385" endtime="20201115 23:02:44.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.011" endtime="20201115 23:02:44.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.007" endtime="20201115 23:02:44.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.402" level="INFO">${RESULT} = [{'time': 0.046876319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.108300000000263e-05, 'source_diff': 8.108300000000263e-05}, {'time': 0.046984583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.393" endtime="20201115 23:02:44.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.432" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:44.404" endtime="20201115 23:02:44.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.443" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.441" endtime="20201115 23:02:44.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.449" level="INFO">VALUE: [8.108300000000263e-05, 8.06390000000004e-05, 8.072200000000529e-05, 8.105599999999602e-05, 8.115300000000047e-05, 8.076299999999759e-05, 8.023599999999742e-05, 8.094399999999946e-05, 8.072199999999835e-05, 8.023600000000436e-05, 8.055500000000299e-05, 8.058299999999519e-05, 8.104199999999645e-05, 8.062500000000083e-05, 8.11249999999944e-05, 8.083300000000238e-05, 8.08190000000028e-05, 8.06390000000004e-05, 8.115300000000047e-05, 8.022299999999732e-05, 8.094399999999946e-05, 8.108299999999569e-05, 8.076399999999706e-05, 8.061099999999433e-05, 8.088800000000118e-05, 8.025000000000393e-05, 8.112500000000133e-05, 8.098599999999817e-05, 8.102799999999688e-05, 8.073599999999792e-05, 8.095799999999903e-05, 8.105600000000296e-05, 8.06390000000004e-05, 8.036100000000101e-05, 8.047200000000504e-05, 8.059699999999476e-05, 8.10970000000022e-05, 8.115300000000047e-05, 8.09719999999986e-05, 8.041599999999982e-05, 8.10970000000022e-05, 8.09589999999985e-05, 8.072199999999835e-05, 8.02640000000035e-05, 8.07770000000041e-05, 8.095799999999903e-05, 8.109800000000167e-05, 8.106900000000306e-05, 8.031999999999484e-05, 8.04169999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.445" endtime="20201115 23:02:44.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.434" endtime="20201115 23:02:44.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.458" endtime="20201115 23:02:44.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:44.466" endtime="20201115 23:02:44.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.462" endtime="20201115 23:02:44.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.453" endtime="20201115 23:02:44.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.949" endtime="20201115 23:02:44.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.945" endtime="20201115 23:02:44.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.943" endtime="20201115 23:02:44.492"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.519" endtime="20201115 23:02:44.538"></status>
</kw>
<msg timestamp="20201115 23:02:44.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.516" endtime="20201115 23:02:44.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.541" endtime="20201115 23:02:44.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.548" endtime="20201115 23:02:44.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.509" endtime="20201115 23:02:44.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.503" endtime="20201115 23:02:44.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.571" endtime="20201115 23:02:44.904"></status>
</kw>
<msg timestamp="20201115 23:02:44.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044709847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.568" endtime="20201115 23:02:44.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044628444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044709847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.913" endtime="20201115 23:02:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.932" endtime="20201115 23:02:44.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.560" endtime="20201115 23:02:44.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.556" endtime="20201115 23:02:44.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.951" level="INFO">${RESULT} = [{'time': 0.044709847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.140299999999379e-05, 'source_diff': 8.140299999999379e-05}, {'time': 0.044819139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.942" endtime="20201115 23:02:44.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.981" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:44.953" endtime="20201115 23:02:44.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.992" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.990" endtime="20201115 23:02:44.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.999" level="INFO">VALUE: [8.140299999999379e-05, 8.21390000000019e-05, 8.21390000000019e-05, 8.211100000000277e-05, 8.201399999999831e-05, 8.124999999999799e-05, 8.130600000000321e-05, 8.162500000000183e-05, 8.220899999999975e-05, 8.183300000000338e-05, 8.188900000000165e-05, 8.119399999999971e-05, 8.190300000000122e-05, 8.124999999999799e-05, 8.143099999999986e-05, 8.154199999999695e-05, 8.154199999999695e-05, 8.173700000000533e-05, 8.204099999999798e-05, 8.212500000000234e-05, 8.216700000000104e-05, 8.180599999999677e-05, 8.145799999999953e-05, 8.162500000000183e-05, 8.216600000000157e-05, 8.191699999999386e-05, 8.120799999999928e-05, 8.198699999999864e-05, 8.201400000000525e-05, 8.200000000000568e-05, 8.198699999999864e-05, 8.179099999999773e-05, 8.123599999999842e-05, 8.194499999999993e-05, 8.165300000000097e-05, 8.186100000000252e-05, 8.13190000000033e-05, 8.131899999999637e-05, 8.173599999999892e-05, 8.215299999999454e-05, 8.136100000000202e-05, 8.216600000000157e-05, 8.184700000000295e-05, 8.123599999999842e-05, 8.120899999999875e-05, 8.144399999999996e-05, 8.205500000000449e-05, 8.143099999999986e-05, 8.195800000000003e-05, 8.193100000000036e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.995" endtime="20201115 23:02:45.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.983" endtime="20201115 23:02:45.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.008" endtime="20201115 23:02:45.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.016" endtime="20201115 23:02:45.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.012" endtime="20201115 23:02:45.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.003" endtime="20201115 23:02:45.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.499" endtime="20201115 23:02:45.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.495" endtime="20201115 23:02:45.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.493" endtime="20201115 23:02:45.043"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.048" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.069" endtime="20201115 23:02:45.088"></status>
</kw>
<msg timestamp="20201115 23:02:45.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.066" endtime="20201115 23:02:45.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.092" endtime="20201115 23:02:45.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.098" endtime="20201115 23:02:45.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.059" endtime="20201115 23:02:45.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.053" endtime="20201115 23:02:45.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.121" endtime="20201115 23:02:45.455"></status>
</kw>
<msg timestamp="20201115 23:02:45.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044814292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.118" endtime="20201115 23:02:45.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044814292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.465" endtime="20201115 23:02:45.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.483" endtime="20201115 23:02:45.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.111" endtime="20201115 23:02:45.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.106" endtime="20201115 23:02:45.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:45.500" level="INFO">${RESULT} = [{'time': 0.044814292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.322300000000032e-05, 'source_diff': 8.322300000000032e-05}, {'time': 0.044924625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:45.492" endtime="20201115 23:02:45.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:45.534" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:45.503" endtime="20201115 23:02:45.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.545" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:45.543" endtime="20201115 23:02:45.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.550" level="INFO">VALUE: [8.322300000000032e-05, 8.240300000000172e-05, 8.309699999999726e-05, 8.298600000000017e-05, 8.26390000000024e-05, 8.313799999999649e-05, 8.21799999999942e-05, 8.31390000000029e-05, 8.240300000000172e-05, 8.31669999999951e-05, 8.232000000000378e-05, 8.313899999999597e-05, 8.224999999999899e-05, 8.308399999999716e-05, 8.240199999999531e-05, 8.24720000000001e-05, 8.311100000000377e-05, 8.2459e-05, 8.268000000000164e-05, 8.251399999999881e-05, 8.272200000000035e-05, 8.286099999999658e-05, 8.24720000000001e-05, 8.261099999999633e-05, 8.244500000000043e-05, 8.23469999999965e-05, 8.227799999999813e-05, 8.222199999999985e-05, 8.265299999999504e-05, 8.277799999999863e-05, 8.276399999999906e-05, 8.248700000000608e-05, 8.273599999999992e-05, 8.249999999999924e-05, 8.279099999999873e-05, 8.244399999999402e-05, 8.231999999999684e-05, 8.233299999999694e-05, 8.298600000000017e-05, 8.301399999999931e-05, 8.286100000000352e-05, 8.23469999999965e-05, 8.295799999999409e-05, 8.255599999999752e-05, 8.318000000000214e-05, 8.288899999999572e-05, 8.251399999999881e-05, 8.234799999999598e-05, 8.283399999999691e-05, 8.315299999999554e-05]</msg>
<status status="PASS" starttime="20201115 23:02:45.547" endtime="20201115 23:02:45.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.536" endtime="20201115 23:02:45.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.559" endtime="20201115 23:02:45.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.567" endtime="20201115 23:02:45.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.563" endtime="20201115 23:02:45.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.555" endtime="20201115 23:02:45.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.049" endtime="20201115 23:02:45.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.045" endtime="20201115 23:02:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.044" endtime="20201115 23:02:45.594"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.621" endtime="20201115 23:02:45.640"></status>
</kw>
<msg timestamp="20201115 23:02:45.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.618" endtime="20201115 23:02:45.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.643" endtime="20201115 23:02:45.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.650" endtime="20201115 23:02:45.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.610" endtime="20201115 23:02:45.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.604" endtime="20201115 23:02:45.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.673" endtime="20201115 23:02:46.007"></status>
</kw>
<msg timestamp="20201115 23:02:46.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045267806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045351972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.669" endtime="20201115 23:02:46.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045267806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045351972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.017" endtime="20201115 23:02:46.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.040" endtime="20201115 23:02:46.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.662" endtime="20201115 23:02:46.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.658" endtime="20201115 23:02:46.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.059" level="INFO">${RESULT} = [{'time': 0.045351972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416599999999663e-05, 'source_diff': 8.416599999999663e-05}, {'time': 0.04546625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:46.050" endtime="20201115 23:02:46.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.089" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:46.061" endtime="20201115 23:02:46.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.100" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.098" endtime="20201115 23:02:46.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.106" level="INFO">VALUE: [8.416599999999663e-05, 8.395800000000203e-05, 8.388899999999672e-05, 8.394400000000246e-05, 8.369399999999527e-05, 8.344399999999502e-05, 8.365300000000297e-05, 8.348600000000067e-05, 8.354099999999948e-05, 8.369500000000168e-05, 8.395800000000203e-05, 8.352799999999938e-05, 8.350000000000024e-05, 8.402799999999988e-05, 8.333300000000488e-05, 8.350000000000024e-05, 8.350000000000024e-05, 8.388899999999672e-05, 8.411100000000477e-05, 8.41669999999961e-05, 8.411100000000477e-05, 8.350000000000024e-05, 8.375000000000049e-05, 8.337499999999665e-05, 8.324999999999999e-05, 8.34170000000023e-05, 8.401400000000031e-05, 8.412500000000434e-05, 8.333399999999741e-05, 8.366599999999613e-05, 8.420800000000228e-05, 8.37919999999992e-05, 8.386100000000452e-05, 8.391699999999586e-05, 8.373600000000092e-05, 8.34720000000011e-05, 8.402699999999347e-05, 8.362500000000384e-05, 8.415199999999706e-05, 8.418100000000261e-05, 8.369500000000168e-05, 8.411100000000477e-05, 8.338799999999674e-05, 8.406900000000606e-05, 8.345800000000153e-05, 8.39590000000015e-05, 8.361099999999733e-05, 8.398600000000117e-05, 8.383399999999791e-05, 8.393099999999543e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.103" endtime="20201115 23:02:46.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.091" endtime="20201115 23:02:46.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.115" endtime="20201115 23:02:46.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.123" endtime="20201115 23:02:46.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.118" endtime="20201115 23:02:46.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.110" endtime="20201115 23:02:46.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.600" endtime="20201115 23:02:46.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.597" endtime="20201115 23:02:46.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.595" endtime="20201115 23:02:46.149"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.176" endtime="20201115 23:02:46.195"></status>
</kw>
<msg timestamp="20201115 23:02:46.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.172" endtime="20201115 23:02:46.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.198" endtime="20201115 23:02:46.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.205" endtime="20201115 23:02:46.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.165" endtime="20201115 23:02:46.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.160" endtime="20201115 23:02:46.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.229" endtime="20201115 23:02:46.564"></status>
</kw>
<msg timestamp="20201115 23:02:46.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044829347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.225" endtime="20201115 23:02:46.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044829347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.573" endtime="20201115 23:02:46.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.592" endtime="20201115 23:02:46.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.217" endtime="20201115 23:02:46.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.213" endtime="20201115 23:02:46.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.609" level="INFO">${RESULT} = [{'time': 0.044913778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.443100000000286e-05, 'source_diff': 8.443100000000286e-05}, {'time': 0.045026125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.600" endtime="20201115 23:02:46.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.640" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:46.611" endtime="20201115 23:02:46.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.650" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.648" endtime="20201115 23:02:46.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.656" level="INFO">VALUE: [8.443100000000286e-05, 8.42919999999997e-05, 8.433299999999894e-05, 8.509799999999873e-05, 8.5152000000005e-05, 8.511099999999883e-05, 8.505500000000055e-05, 8.42919999999997e-05, 8.484799999999848e-05, 8.495800000000303e-05, 8.430599999999927e-05, 8.511099999999883e-05, 8.452800000000038e-05, 8.505500000000055e-05, 8.509699999999926e-05, 8.492999999999695e-05, 8.481899999999987e-05, 8.519499999999625e-05, 8.48050000000003e-05, 8.43049999999998e-05, 8.458299999999919e-05, 8.458399999999866e-05, 8.456899999999962e-05, 8.49170000000038e-05, 8.51799999999972e-05, 8.458300000000613e-05, 8.451400000000081e-05, 8.501400000000131e-05, 8.476400000000106e-05, 8.505500000000055e-05, 8.486100000000552e-05, 8.46249999999979e-05, 8.470800000000278e-05, 8.468099999999618e-05, 8.498600000000217e-05, 8.480599999999977e-05, 8.445799999999559e-05, 8.431999999999884e-05, 8.477700000000116e-05, 8.477800000000063e-05, 8.461099999999833e-05, 8.454199999999995e-05, 8.450000000000124e-05, 8.448600000000167e-05, 8.433399999999841e-05, 8.465299999999704e-05, 8.522300000000232e-05, 8.51669999999971e-05, 8.43049999999998e-05, 8.47920000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.653" endtime="20201115 23:02:46.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.641" endtime="20201115 23:02:46.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.665" endtime="20201115 23:02:46.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.673" endtime="20201115 23:02:46.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.669" endtime="20201115 23:02:46.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.660" endtime="20201115 23:02:46.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.156" endtime="20201115 23:02:46.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.152" endtime="20201115 23:02:46.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.150" endtime="20201115 23:02:46.699"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.705" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.726" endtime="20201115 23:02:46.745"></status>
</kw>
<msg timestamp="20201115 23:02:46.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.723" endtime="20201115 23:02:46.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.749" endtime="20201115 23:02:46.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.755" endtime="20201115 23:02:46.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.715" endtime="20201115 23:02:46.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.710" endtime="20201115 23:02:46.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.779" endtime="20201115 23:02:47.114"></status>
</kw>
<msg timestamp="20201115 23:02:47.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044780319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044866139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.776" endtime="20201115 23:02:47.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044780319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044866139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.124" endtime="20201115 23:02:47.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.142" endtime="20201115 23:02:47.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.768" endtime="20201115 23:02:47.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.764" endtime="20201115 23:02:47.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.161" level="INFO">${RESULT} = [{'time': 0.044866139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582000000000034e-05, 'source_diff': 8.582000000000034e-05}, {'time': 0.044984486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:47.152" endtime="20201115 23:02:47.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.191" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:47.163" endtime="20201115 23:02:47.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.202" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.199" endtime="20201115 23:02:47.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.207" level="INFO">VALUE: [8.582000000000034e-05, 8.542999999999745e-05, 8.557000000000009e-05, 8.544400000000396e-05, 8.577800000000163e-05, 8.555500000000105e-05, 8.536100000000602e-05, 8.545899999999607e-05, 8.552800000000138e-05, 8.558399999999966e-05, 8.544399999999702e-05, 8.586099999999958e-05, 8.579199999999426e-05, 8.577800000000163e-05, 8.601400000000231e-05, 8.54449999999965e-05, 8.556900000000062e-05, 8.537499999999865e-05, 8.573599999999598e-05, 8.572300000000282e-05, 8.544399999999702e-05, 8.552800000000138e-05, 8.561099999999933e-05, 8.56799999999977e-05, 8.598599999999623e-05, 8.545800000000353e-05, 8.570800000000378e-05, 8.597199999999666e-05, 8.561099999999933e-05, 8.561099999999933e-05, 8.595799999999709e-05, 8.583399999999991e-05, 8.609700000000026e-05, 8.583399999999991e-05, 8.556900000000062e-05, 8.543100000000386e-05, 8.53469999999995e-05, 8.533299999999994e-05, 8.622199999999691e-05, 8.540299999999779e-05, 8.580600000000077e-05, 8.525000000000199e-05, 8.613899999999897e-05, 8.557000000000009e-05, 8.56799999999977e-05, 8.57920000000012e-05, 8.573600000000292e-05, 8.534799999999898e-05, 8.608300000000069e-05, 8.56390000000054e-05]</msg>
<status status="PASS" starttime="20201115 23:02:47.204" endtime="20201115 23:02:47.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.193" endtime="20201115 23:02:47.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.216" endtime="20201115 23:02:47.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.224" endtime="20201115 23:02:47.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.220" endtime="20201115 23:02:47.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.211" endtime="20201115 23:02:47.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.706" endtime="20201115 23:02:47.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.702" endtime="20201115 23:02:47.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.700" endtime="20201115 23:02:47.251"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.256" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.278" endtime="20201115 23:02:47.297"></status>
</kw>
<msg timestamp="20201115 23:02:47.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.275" endtime="20201115 23:02:47.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.301" endtime="20201115 23:02:47.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.307" endtime="20201115 23:02:47.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.267" endtime="20201115 23:02:47.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.261" endtime="20201115 23:02:47.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.330" endtime="20201115 23:02:47.666"></status>
</kw>
<msg timestamp="20201115 23:02:47.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045618292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045705222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.327" endtime="20201115 23:02:47.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045618292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045705222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.676" endtime="20201115 23:02:47.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.695" endtime="20201115 23:02:47.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.320" endtime="20201115 23:02:47.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.315" endtime="20201115 23:02:47.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.712" level="INFO">${RESULT} = [{'time': 0.045705222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.692999999999895e-05, 'source_diff': 8.692999999999895e-05}, {'time': 0.045824514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:47.703" endtime="20201115 23:02:47.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.745" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:47.714" endtime="20201115 23:02:47.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.756" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.753" endtime="20201115 23:02:47.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.761" level="INFO">VALUE: [8.692999999999895e-05, 8.68199999999944e-05, 8.71799999999992e-05, 8.705500000000255e-05, 8.658300000000119e-05, 8.697199999999766e-05, 8.66669999999986e-05, 8.669499999999775e-05, 8.651400000000281e-05, 8.683400000000091e-05, 8.686100000000058e-05, 8.648600000000367e-05, 8.681900000000187e-05, 8.647199999999716e-05, 8.719399999999877e-05, 8.677799999999569e-05, 8.665199999999956e-05, 8.683300000000144e-05, 8.630600000000127e-05, 8.672199999999741e-05, 8.715299999999954e-05, 8.71250000000004e-05, 8.686200000000005e-05, 8.632000000000084e-05, 8.651399999999587e-05, 8.661100000000033e-05, 8.715299999999954e-05, 8.66249999999999e-05, 8.629100000000223e-05, 8.6847000000001e-05, 8.638899999999922e-05, 8.658300000000119e-05, 8.663899999999947e-05, 8.627800000000213e-05, 8.638899999999922e-05, 8.691699999999886e-05, 8.629099999999529e-05, 8.681900000000187e-05, 8.648600000000367e-05, 8.674999999999655e-05, 8.636100000000008e-05, 8.641699999999836e-05, 8.641599999999888e-05, 8.708300000000169e-05, 8.633400000000041e-05, 8.679100000000273e-05, 8.688899999999972e-05, 8.711100000000083e-05, 8.688899999999972e-05, 8.661100000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:02:47.758" endtime="20201115 23:02:47.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.747" endtime="20201115 23:02:47.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.770" endtime="20201115 23:02:47.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.778" endtime="20201115 23:02:47.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.774" endtime="20201115 23:02:47.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.765" endtime="20201115 23:02:47.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.257" endtime="20201115 23:02:47.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.253" endtime="20201115 23:02:47.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.252" endtime="20201115 23:02:47.805"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.832" endtime="20201115 23:02:47.851"></status>
</kw>
<msg timestamp="20201115 23:02:47.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.828" endtime="20201115 23:02:47.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.854" endtime="20201115 23:02:47.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.861" endtime="20201115 23:02:47.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.821" endtime="20201115 23:02:47.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.815" endtime="20201115 23:02:47.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.884" endtime="20201115 23:02:48.219"></status>
</kw>
<msg timestamp="20201115 23:02:48.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045530944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045618875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.880" endtime="20201115 23:02:48.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045530944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045618875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.228" endtime="20201115 23:02:48.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.246" endtime="20201115 23:02:48.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.873" endtime="20201115 23:02:48.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.869" endtime="20201115 23:02:48.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.265" level="INFO">${RESULT} = [{'time': 0.045618875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.793100000000637e-05, 'source_diff': 8.793100000000637e-05}, {'time': 0.045738181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:48.257" endtime="20201115 23:02:48.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.295" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:48.267" endtime="20201115 23:02:48.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.306" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.304" endtime="20201115 23:02:48.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.311" level="INFO">VALUE: [8.793100000000637e-05, 8.802800000000388e-05, 8.73050000000028e-05, 8.748599999999773e-05, 8.76799999999997e-05, 8.737500000000065e-05, 8.81250000000014e-05, 8.822299999999839e-05, 8.723599999999748e-05, 8.790200000000081e-05, 8.802799999999694e-05, 8.755600000000252e-05, 8.779100000000373e-05, 8.761100000000133e-05, 8.780599999999583e-05, 8.727800000000313e-05, 8.773699999999746e-05, 8.819499999999925e-05, 8.805500000000355e-05, 8.740299999999979e-05, 8.74999999999973e-05, 8.748599999999773e-05, 8.758299999999525e-05, 8.747199999999816e-05, 8.786100000000158e-05, 8.777799999999669e-05, 8.757000000000209e-05, 8.72920000000027e-05, 8.761100000000133e-05, 8.76250000000009e-05, 8.795899999999857e-05, 8.747199999999816e-05, 8.768099999999918e-05, 8.77920000000032e-05, 8.730600000000227e-05, 8.808400000000216e-05, 8.766600000000013e-05, 8.747199999999816e-05, 8.726299999999715e-05, 8.79999999999978e-05, 8.758400000000166e-05, 8.720799999999834e-05, 8.754100000000348e-05, 8.802799999999694e-05, 8.812499999999446e-05, 8.76799999999997e-05, 8.77920000000032e-05, 8.729100000000323e-05, 8.752799999999644e-05, 8.813800000000149e-05]</msg>
<status status="PASS" starttime="20201115 23:02:48.308" endtime="20201115 23:02:48.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.297" endtime="20201115 23:02:48.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.321" endtime="20201115 23:02:48.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.329" endtime="20201115 23:02:48.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.325" endtime="20201115 23:02:48.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.316" endtime="20201115 23:02:48.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.811" endtime="20201115 23:02:48.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.808" endtime="20201115 23:02:48.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.806" endtime="20201115 23:02:48.355"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.361" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.382" endtime="20201115 23:02:48.402"></status>
</kw>
<msg timestamp="20201115 23:02:48.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.379" endtime="20201115 23:02:48.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.405" endtime="20201115 23:02:48.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.411" endtime="20201115 23:02:48.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.372" endtime="20201115 23:02:48.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.366" endtime="20201115 23:02:48.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.435" endtime="20201115 23:02:48.768"></status>
</kw>
<msg timestamp="20201115 23:02:48.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045078486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045166819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.431" endtime="20201115 23:02:48.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045078486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045166819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.777" endtime="20201115 23:02:48.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.796" endtime="20201115 23:02:48.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.424" endtime="20201115 23:02:48.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.419" endtime="20201115 23:02:48.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.813" level="INFO">${RESULT} = [{'time': 0.045166819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8332999999996e-05, 'source_diff': 8.8332999999996e-05}, {'time': 0.045285083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:02:48.804" endtime="20201115 23:02:48.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.843" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:48.815" endtime="20201115 23:02:48.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.854" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.852" endtime="20201115 23:02:48.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.860" level="INFO">VALUE: [8.8332999999996e-05, 8.829099999999729e-05, 8.901399999999837e-05, 8.908400000000316e-05, 8.916600000000163e-05, 8.833399999999547e-05, 8.876400000000506e-05, 8.833300000000294e-05, 8.823599999999848e-05, 8.884699999999607e-05, 8.890200000000181e-05, 8.833300000000294e-05, 8.868100000000018e-05, 8.913900000000197e-05, 8.8945e-05, 8.887500000000215e-05, 8.886099999999564e-05, 8.918100000000068e-05, 8.872199999999941e-05, 8.854100000000448e-05, 8.855600000000352e-05, 8.852799999999744e-05, 8.826400000000456e-05, 8.838900000000122e-05, 8.923600000000642e-05, 8.883300000000344e-05, 8.887500000000215e-05, 8.824999999999805e-05, 8.861100000000233e-05, 8.918099999999374e-05, 8.863900000000147e-05, 8.850000000000524e-05, 8.902800000000488e-05, 8.908299999999675e-05, 8.8332999999996e-05, 8.91250000000024e-05, 8.886100000000258e-05, 8.836099999999514e-05, 8.822300000000532e-05, 8.84720000000061e-05, 8.888800000000224e-05, 8.919500000000025e-05, 8.829099999999729e-05, 8.872299999999889e-05, 8.888899999999478e-05, 8.913900000000197e-05, 8.874999999999855e-05, 8.884700000000301e-05, 8.8945e-05, 8.823600000000542e-05]</msg>
<status status="PASS" starttime="20201115 23:02:48.857" endtime="20201115 23:02:48.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.845" endtime="20201115 23:02:48.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.869" endtime="20201115 23:02:48.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.877" endtime="20201115 23:02:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.873" endtime="20201115 23:02:48.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.865" endtime="20201115 23:02:48.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.362" endtime="20201115 23:02:48.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.358" endtime="20201115 23:02:48.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.356" endtime="20201115 23:02:48.904"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.930" endtime="20201115 23:02:48.950"></status>
</kw>
<msg timestamp="20201115 23:02:48.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.927" endtime="20201115 23:02:48.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.953" endtime="20201115 23:02:48.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.959" endtime="20201115 23:02:48.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.920" endtime="20201115 23:02:48.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.914" endtime="20201115 23:02:48.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.983" endtime="20201115 23:02:49.323"></status>
</kw>
<msg timestamp="20201115 23:02:49.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044823014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044912486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.979" endtime="20201115 23:02:49.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044823014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044912486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.332" endtime="20201115 23:02:49.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.351" endtime="20201115 23:02:49.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.972" endtime="20201115 23:02:49.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.967" endtime="20201115 23:02:49.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.370" level="INFO">${RESULT} = [{'time': 0.044912486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.947200000000016e-05, 'source_diff': 8.947200000000016e-05}, {'time': 0.045030778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:49.361" endtime="20201115 23:02:49.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.401" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:49.373" endtime="20201115 23:02:49.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.412" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.410" endtime="20201115 23:02:49.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.417" level="INFO">VALUE: [8.947200000000016e-05, 8.938900000000222e-05, 8.993099999999449e-05, 8.958299999999725e-05, 9.001399999999937e-05, 8.927800000000513e-05, 8.959700000000376e-05, 8.930599999999733e-05, 8.919500000000025e-05, 8.945900000000007e-05, 8.995800000000109e-05, 8.988900000000272e-05, 8.986099999999664e-05, 9.002799999999894e-05, 8.98050000000053e-05, 8.997200000000066e-05, 8.93879999999958e-05, 8.923599999999948e-05, 8.993100000000143e-05, 8.963899999999553e-05, 8.9945000000001e-05, 8.977799999999869e-05, 8.924999999999905e-05, 9.001399999999937e-05, 9.009700000000426e-05, 9.015300000000254e-05, 8.96670000000016e-05, 8.948599999999973e-05, 8.99999999999998e-05, 9.002799999999894e-05, 8.965300000000204e-05, 8.976400000000606e-05, 8.940300000000179e-05, 8.93879999999958e-05, 8.919400000000077e-05, 8.988900000000272e-05, 8.931899999999743e-05, 8.970800000000084e-05, 9.01250000000034e-05, 9.002799999999894e-05, 8.934699999999657e-05, 8.956899999999768e-05, 8.972299999999989e-05, 8.963900000000247e-05, 8.980600000000477e-05, 9.018099999999474e-05, 8.977800000000563e-05, 8.952699999999897e-05, 8.956899999999768e-05, 8.970900000000032e-05]</msg>
<status status="PASS" starttime="20201115 23:02:49.414" endtime="20201115 23:02:49.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.403" endtime="20201115 23:02:49.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.426" endtime="20201115 23:02:49.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.434" endtime="20201115 23:02:49.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.430" endtime="20201115 23:02:49.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.421" endtime="20201115 23:02:49.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.910" endtime="20201115 23:02:49.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.906" endtime="20201115 23:02:49.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.905" endtime="20201115 23:02:49.461"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.466" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.487" endtime="20201115 23:02:49.507"></status>
</kw>
<msg timestamp="20201115 23:02:49.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.484" endtime="20201115 23:02:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.510" endtime="20201115 23:02:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.516" endtime="20201115 23:02:49.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.477" endtime="20201115 23:02:49.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.471" endtime="20201115 23:02:49.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.540" endtime="20201115 23:02:49.876"></status>
</kw>
<msg timestamp="20201115 23:02:49.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044745806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044836542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.536" endtime="20201115 23:02:49.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044745806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044836542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.885" endtime="20201115 23:02:49.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.904" endtime="20201115 23:02:49.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.529" endtime="20201115 23:02:49.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.524" endtime="20201115 23:02:49.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.922" level="INFO">${RESULT} = [{'time': 0.044836542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.073600000000098e-05, 'source_diff': 9.073600000000098e-05}, {'time': 0.044958847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:49.913" endtime="20201115 23:02:49.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.954" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:49.924" endtime="20201115 23:02:49.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.966" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.963" endtime="20201115 23:02:49.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.971" level="INFO">VALUE: [9.073600000000098e-05, 9.027800000000613e-05, 9.08329999999985e-05, 9.055599999999858e-05, 9.094400000000252e-05, 9.063899999999653e-05, 9.055499999999911e-05, 9.076400000000012e-05, 9.084700000000501e-05, 9.084699999999807e-05, 9.05130000000004e-05, 9.023600000000048e-05, 9.083400000000491e-05, 9.10000000000008e-05, 9.10000000000008e-05, 9.070900000000132e-05, 9.097199999999472e-05, 9.027799999999919e-05, 9.029199999999876e-05, 9.063899999999653e-05, 9.073600000000098e-05, 9.044399999999508e-05, 9.052799999999944e-05, 9.033400000000441e-05, 9.044399999999508e-05, 9.107000000000559e-05, 9.10000000000008e-05, 9.084699999999807e-05, 9.072300000000089e-05, 9.070899999999438e-05, 9.068100000000218e-05, 9.06670000000026e-05, 9.08329999999985e-05, 9.04859999999938e-05, 9.063900000000347e-05, 9.048600000000073e-05, 9.031899999999843e-05, 9.109699999999832e-05, 9.05000000000003e-05, 9.043000000000245e-05, 9.095799999999515e-05, 9.091700000000286e-05, 9.115200000000406e-05, 9.057000000000509e-05, 9.113900000000397e-05, 9.025000000000005e-05, 9.102799999999994e-05, 9.023600000000048e-05, 9.063800000000399e-05, 9.111100000000483e-05]</msg>
<status status="PASS" starttime="20201115 23:02:49.968" endtime="20201115 23:02:49.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.956" endtime="20201115 23:02:49.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.980" endtime="20201115 23:02:49.982"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.988" endtime="20201115 23:02:50.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.984" endtime="20201115 23:02:50.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.975" endtime="20201115 23:02:50.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.467" endtime="20201115 23:02:50.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.463" endtime="20201115 23:02:50.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.461" endtime="20201115 23:02:50.014"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.020" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.041" endtime="20201115 23:02:50.060"></status>
</kw>
<msg timestamp="20201115 23:02:50.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.038" endtime="20201115 23:02:50.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.064" endtime="20201115 23:02:50.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.070" endtime="20201115 23:02:50.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.031" endtime="20201115 23:02:50.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.025" endtime="20201115 23:02:50.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.094" endtime="20201115 23:02:50.428"></status>
</kw>
<msg timestamp="20201115 23:02:50.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044968417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045060069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.090" endtime="20201115 23:02:50.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044968417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045060069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.438" endtime="20201115 23:02:50.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.457" endtime="20201115 23:02:50.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.083" endtime="20201115 23:02:50.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.078" endtime="20201115 23:02:50.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:50.476" level="INFO">${RESULT} = [{'time': 0.045060069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.165200000000456e-05, 'source_diff': 9.165200000000456e-05}, {'time': 0.045180375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:50.467" endtime="20201115 23:02:50.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:50.506" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:50.478" endtime="20201115 23:02:50.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.517" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:50.515" endtime="20201115 23:02:50.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.522" level="INFO">VALUE: [9.165200000000456e-05, 9.151400000000087e-05, 9.156899999999968e-05, 9.131899999999943e-05, 9.134699999999857e-05, 9.152800000000044e-05, 9.186099999999864e-05, 9.21529999999976e-05, 9.190199999999787e-05, 9.145900000000207e-05, 9.130499999999986e-05, 9.2027999999994e-05, 9.179200000000026e-05, 9.147200000000216e-05, 9.191699999999692e-05, 9.133300000000594e-05, 9.220899999999588e-05, 9.151400000000087e-05, 9.145800000000259e-05, 9.143099999999599e-05, 9.159700000000576e-05, 9.191699999999692e-05, 9.219399999999683e-05, 9.151399999999393e-05, 9.179200000000026e-05, 9.184699999999907e-05, 9.176400000000112e-05, 9.209799999999879e-05, 9.194400000000352e-05, 9.16670000000036e-05, 9.21529999999976e-05, 9.125000000000105e-05, 9.184699999999907e-05, 9.172200000000241e-05, 9.165300000000404e-05, 9.219400000000377e-05, 9.219500000000325e-05, 9.152700000000097e-05, 9.184699999999907e-05, 9.1332999999999e-05, 9.205500000000061e-05, 9.209800000000573e-05, 9.218099999999674e-05, 9.166699999999667e-05, 9.17079999999959e-05, 9.188899999999778e-05, 9.193000000000395e-05, 9.170800000000284e-05, 9.143099999999599e-05, 9.20000000000018e-05]</msg>
<status status="PASS" starttime="20201115 23:02:50.519" endtime="20201115 23:02:50.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.508" endtime="20201115 23:02:50.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.531" endtime="20201115 23:02:50.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.539" endtime="20201115 23:02:50.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.535" endtime="20201115 23:02:50.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.527" endtime="20201115 23:02:50.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.021" endtime="20201115 23:02:50.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.017" endtime="20201115 23:02:50.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.015" endtime="20201115 23:02:50.566"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.592" endtime="20201115 23:02:50.612"></status>
</kw>
<msg timestamp="20201115 23:02:50.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.589" endtime="20201115 23:02:50.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.615" endtime="20201115 23:02:50.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.622" endtime="20201115 23:02:50.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.582" endtime="20201115 23:02:50.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.576" endtime="20201115 23:02:50.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.645" endtime="20201115 23:02:50.980"></status>
</kw>
<msg timestamp="20201115 23:02:50.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044677486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04477075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:50.642" endtime="20201115 23:02:50.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044677486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04477075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:50.989" endtime="20201115 23:02:51.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.008" endtime="20201115 23:02:51.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.635" endtime="20201115 23:02:51.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.630" endtime="20201115 23:02:51.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:51.026" level="INFO">${RESULT} = [{'time': 0.04477075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.326399999999568e-05, 'source_diff': 9.326399999999568e-05}, {'time': 0.044897097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:51.017" endtime="20201115 23:02:51.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:51.056" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:51.028" endtime="20201115 23:02:51.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.067" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:51.064" endtime="20201115 23:02:51.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.072" level="INFO">VALUE: [9.326399999999568e-05, 9.309700000000032e-05, 9.261099999999939e-05, 9.28330000000005e-05, 9.32079999999974e-05, 9.240299999999785e-05, 9.226400000000162e-05, 9.266699999999767e-05, 9.279200000000126e-05, 9.266699999999767e-05, 9.284700000000007e-05, 9.247199999999622e-05, 9.277800000000169e-05, 9.283399999999997e-05, 9.308400000000022e-05, 9.290299999999835e-05, 9.233399999999947e-05, 9.234699999999957e-05, 9.322200000000391e-05, 9.241700000000436e-05, 9.266600000000513e-05, 9.2333e-05, 9.230500000000086e-05, 9.256900000000068e-05, 9.26529999999981e-05, 9.30000000000028e-05, 9.275000000000255e-05, 9.30000000000028e-05, 9.311099999999989e-05, 9.262499999999896e-05, 9.29859999999963e-05, 9.254200000000101e-05, 9.280499999999442e-05, 9.313899999999903e-05, 9.281899999999399e-05, 9.286099999999964e-05, 9.290299999999835e-05, 9.305600000000108e-05, 9.237499999999871e-05, 9.251400000000187e-05, 9.255600000000058e-05, 9.255499999999417e-05, 9.229200000000076e-05, 9.325000000000305e-05, 9.301400000000237e-05, 9.258299999999331e-05, 9.251399999999493e-05, 9.316699999999817e-05, 9.31529999999986e-05, 9.24859999999958e-05]</msg>
<status status="PASS" starttime="20201115 23:02:51.069" endtime="20201115 23:02:51.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.058" endtime="20201115 23:02:51.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.081" endtime="20201115 23:02:51.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:51.089" endtime="20201115 23:02:51.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.085" endtime="20201115 23:02:51.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.076" endtime="20201115 23:02:51.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.572" endtime="20201115 23:02:51.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.568" endtime="20201115 23:02:51.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.566" endtime="20201115 23:02:51.115"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.121" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.147" endtime="20201115 23:02:51.166"></status>
</kw>
<msg timestamp="20201115 23:02:51.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.143" endtime="20201115 23:02:51.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.170" endtime="20201115 23:02:51.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.177" endtime="20201115 23:02:51.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.131" endtime="20201115 23:02:51.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.126" endtime="20201115 23:02:51.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.201" endtime="20201115 23:02:51.535"></status>
</kw>
<msg timestamp="20201115 23:02:51.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049536347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.198" endtime="20201115 23:02:51.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049536347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.544" endtime="20201115 23:02:51.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.563" endtime="20201115 23:02:51.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.190" endtime="20201115 23:02:51.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.185" endtime="20201115 23:02:51.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:51.582" level="INFO">${RESULT} = [{'time': 0.049536347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.423600000000448e-05, 'source_diff': 9.423600000000448e-05}, {'time': 0.049658667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:51.573" endtime="20201115 23:02:51.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:51.612" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:51.584" endtime="20201115 23:02:51.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.623" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:51.621" endtime="20201115 23:02:51.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.628" level="INFO">VALUE: [9.423600000000448e-05, 9.383399999999403e-05, 9.423599999999754e-05, 9.397200000000466e-05, 9.390299999999935e-05, 9.406900000000218e-05, 9.395899999999763e-05, 9.329100000000229e-05, 9.340299999999885e-05, 9.374999999999661e-05, 9.351400000000287e-05, 9.342999999999851e-05, 9.355600000000158e-05, 9.34870000000032e-05, 9.419399999999883e-05, 9.420800000000534e-05, 9.40000000000038e-05, 9.424999999999711e-05, 9.397200000000466e-05, 9.359700000000082e-05, 9.423699999999702e-05, 9.354100000000254e-05, 9.373600000000398e-05, 9.413900000000003e-05, 9.365199999999962e-05, 9.334700000000057e-05, 9.377800000000269e-05, 9.369399999999833e-05, 9.38330000000015e-05, 9.423699999999702e-05, 9.366699999999867e-05, 9.341599999999894e-05, 9.388899999999978e-05, 9.377800000000269e-05, 9.404199999999557e-05, 9.362499999999996e-05, 9.331900000000143e-05, 9.418099999999874e-05, 9.336100000000014e-05, 9.359700000000082e-05, 9.331900000000143e-05, 9.380600000000183e-05, 9.340299999999885e-05, 9.354100000000254e-05, 9.35279999999955e-05, 9.362499999999996e-05, 9.324999999999611e-05, 9.359800000000029e-05, 9.344399999999808e-05, 9.404199999999557e-05]</msg>
<status status="PASS" starttime="20201115 23:02:51.625" endtime="20201115 23:02:51.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.614" endtime="20201115 23:02:51.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.637" endtime="20201115 23:02:51.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:51.645" endtime="20201115 23:02:51.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.641" endtime="20201115 23:02:51.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.632" endtime="20201115 23:02:51.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.122" endtime="20201115 23:02:51.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.118" endtime="20201115 23:02:51.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.116" endtime="20201115 23:02:51.672"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.678" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.699" endtime="20201115 23:02:51.719"></status>
</kw>
<msg timestamp="20201115 23:02:51.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.696" endtime="20201115 23:02:51.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.722" endtime="20201115 23:02:51.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.728" endtime="20201115 23:02:51.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.689" endtime="20201115 23:02:51.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.683" endtime="20201115 23:02:51.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.752" endtime="20201115 23:02:52.088"></status>
</kw>
<msg timestamp="20201115 23:02:52.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045502819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045597889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.748" endtime="20201115 23:02:52.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045502819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045597889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.098" endtime="20201115 23:02:52.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.117" endtime="20201115 23:02:52.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.741" endtime="20201115 23:02:52.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.737" endtime="20201115 23:02:52.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:52.134" level="INFO">${RESULT} = [{'time': 0.045597889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.507000000000265e-05, 'source_diff': 9.507000000000265e-05}, {'time': 0.045721222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:52.125" endtime="20201115 23:02:52.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:52.168" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:52.136" endtime="20201115 23:02:52.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.179" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:52.176" endtime="20201115 23:02:52.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.184" level="INFO">VALUE: [9.507000000000265e-05, 9.488900000000078e-05, 9.481899999999599e-05, 9.483299999999556e-05, 9.487500000000121e-05, 9.486100000000164e-05, 9.437500000000071e-05, 9.511200000000136e-05, 9.483400000000197e-05, 9.444399999999908e-05, 9.501399999999743e-05, 9.416699999999917e-05, 9.484699999999513e-05, 9.512500000000146e-05, 9.474999999999761e-05, 9.499999999999786e-05, 9.481899999999599e-05, 9.457000000000215e-05, 9.5027999999997e-05, 9.488900000000078e-05, 9.51530000000006e-05, 9.515200000000112e-05, 9.45000000000043e-05, 9.426400000000362e-05, 9.433400000000147e-05, 9.526399999999768e-05, 9.434700000000157e-05, 9.456899999999574e-05, 9.51530000000006e-05, 9.456900000000268e-05, 9.511100000000189e-05, 9.48059999999959e-05, 9.443099999999899e-05, 9.491699999999992e-05, 9.488899999999384e-05, 9.467999999999976e-05, 9.475000000000455e-05, 9.512499999999452e-05, 9.506999999999571e-05, 9.46530000000001e-05, 9.469399999999933e-05, 9.426400000000362e-05, 9.509800000000179e-05, 9.451399999999693e-05, 9.45000000000043e-05, 9.441699999999942e-05, 9.518100000000668e-05, 9.4945000000006e-05, 9.452800000000344e-05, 9.523599999999854e-05]</msg>
<status status="PASS" starttime="20201115 23:02:52.181" endtime="20201115 23:02:52.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.169" endtime="20201115 23:02:52.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.194" endtime="20201115 23:02:52.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:52.203" endtime="20201115 23:02:52.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.198" endtime="20201115 23:02:52.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.189" endtime="20201115 23:02:52.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.679" endtime="20201115 23:02:52.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.675" endtime="20201115 23:02:52.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.673" endtime="20201115 23:02:52.230"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.257" endtime="20201115 23:02:52.277"></status>
</kw>
<msg timestamp="20201115 23:02:52.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.254" endtime="20201115 23:02:52.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.280" endtime="20201115 23:02:52.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.287" endtime="20201115 23:02:52.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.246" endtime="20201115 23:02:52.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.241" endtime="20201115 23:02:52.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.311" endtime="20201115 23:02:52.649"></status>
</kw>
<msg timestamp="20201115 23:02:52.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04603225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046128444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:52.307" endtime="20201115 23:02:52.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04603225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046128444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:52.658" endtime="20201115 23:02:52.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.677" endtime="20201115 23:02:52.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.300" endtime="20201115 23:02:52.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.295" endtime="20201115 23:02:52.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:52.697" level="INFO">${RESULT} = [{'time': 0.046128444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.619400000000083e-05, 'source_diff': 9.619400000000083e-05}, {'time': 0.046253736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:52.687" endtime="20201115 23:02:52.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:52.727" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:52.699" endtime="20201115 23:02:52.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.738" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:52.736" endtime="20201115 23:02:52.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.744" level="INFO">VALUE: [9.619400000000083e-05, 9.545799999999965e-05, 9.583400000000297e-05, 9.594400000000058e-05, 9.577700000000522e-05, 9.605600000000408e-05, 9.538799999999487e-05, 9.562499999999502e-05, 9.558299999999631e-05, 9.543099999999999e-05, 9.527800000000419e-05, 9.563800000000205e-05, 9.552800000000444e-05, 9.619500000000031e-05, 9.526399999999768e-05, 9.563899999999459e-05, 9.574999999999861e-05, 9.568100000000024e-05, 9.61660000000017e-05, 9.5333000000003e-05, 9.522299999999845e-05, 9.529200000000376e-05, 9.573599999999904e-05, 9.576400000000512e-05, 9.599999999999886e-05, 9.551399999999793e-05, 9.611200000000236e-05, 9.5333000000003e-05, 9.523599999999854e-05, 9.541700000000042e-05, 9.577800000000469e-05, 9.586100000000264e-05, 9.561100000000239e-05, 9.584800000000254e-05, 9.604199999999757e-05, 9.529199999999682e-05, 9.559700000000282e-05, 9.557000000000315e-05, 9.545799999999965e-05, 9.619500000000031e-05, 9.605599999999714e-05, 9.602800000000494e-05, 9.590300000000135e-05, 9.52079999999994e-05, 9.588899999999484e-05, 9.591700000000092e-05, 9.561099999999545e-05, 9.555600000000358e-05, 9.613900000000203e-05, 9.522199999999897e-05]</msg>
<status status="PASS" starttime="20201115 23:02:52.740" endtime="20201115 23:02:52.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.729" endtime="20201115 23:02:52.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.753" endtime="20201115 23:02:52.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:52.761" endtime="20201115 23:02:52.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.757" endtime="20201115 23:02:52.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.748" endtime="20201115 23:02:52.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.237" endtime="20201115 23:02:52.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.233" endtime="20201115 23:02:52.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.231" endtime="20201115 23:02:52.788"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.815" endtime="20201115 23:02:52.835"></status>
</kw>
<msg timestamp="20201115 23:02:52.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.812" endtime="20201115 23:02:52.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.838" endtime="20201115 23:02:52.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.845" endtime="20201115 23:02:52.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.804" endtime="20201115 23:02:52.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.798" endtime="20201115 23:02:52.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.868" endtime="20201115 23:02:53.212"></status>
</kw>
<msg timestamp="20201115 23:02:53.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045440153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045537069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.865" endtime="20201115 23:02:53.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045440153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045537069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.221" endtime="20201115 23:02:53.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.241" endtime="20201115 23:02:53.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.858" endtime="20201115 23:02:53.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.853" endtime="20201115 23:02:53.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:53.259" level="INFO">${RESULT} = [{'time': 0.045537069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.691600000000244e-05, 'source_diff': 9.691600000000244e-05}, {'time': 0.045665389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:53.249" endtime="20201115 23:02:53.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:53.290" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:53.262" endtime="20201115 23:02:53.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.302" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:53.299" endtime="20201115 23:02:53.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.307" level="INFO">VALUE: [9.691600000000244e-05, 9.719500000000131e-05, 9.631899999999749e-05, 9.655599999999764e-05, 9.713899999999609e-05, 9.695899999999369e-05, 9.658299999999731e-05, 9.698699999999977e-05, 9.713900000000303e-05, 9.661099999999645e-05, 9.680499999999842e-05, 9.676399999999918e-05, 9.691700000000192e-05, 9.69730000000002e-05, 9.637500000000271e-05, 9.655599999999764e-05, 9.697199999999379e-05, 9.673600000000004e-05, 9.654200000000501e-05, 9.633299999999706e-05, 9.676400000000612e-05, 9.691699999999498e-05, 9.64859999999998e-05, 9.716599999999576e-05, 9.691699999999498e-05, 9.634800000000304e-05, 9.672200000000047e-05, 9.659700000000382e-05, 9.627799999999825e-05, 9.655499999999817e-05, 9.701399999999943e-05, 9.701399999999943e-05, 9.656900000000468e-05, 9.680600000000483e-05, 9.631899999999749e-05, 9.63609999999962e-05, 9.679199999999832e-05, 9.684699999999713e-05, 9.663900000000253e-05, 9.705599999999814e-05, 9.644500000000056e-05, 9.630600000000433e-05, 9.644500000000056e-05, 9.687499999999627e-05, 9.683299999999756e-05, 9.701399999999943e-05, 9.722300000000045e-05, 9.624999999999911e-05, 9.697199999999379e-05, 9.72080000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:02:53.304" endtime="20201115 23:02:53.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.292" endtime="20201115 23:02:53.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.316" endtime="20201115 23:02:53.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:53.324" endtime="20201115 23:02:53.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.320" endtime="20201115 23:02:53.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.311" endtime="20201115 23:02:53.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.794" endtime="20201115 23:02:53.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.790" endtime="20201115 23:02:53.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.789" endtime="20201115 23:02:53.351"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.378" endtime="20201115 23:02:53.398"></status>
</kw>
<msg timestamp="20201115 23:02:53.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.375" endtime="20201115 23:02:53.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.402" endtime="20201115 23:02:53.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.408" endtime="20201115 23:02:53.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.368" endtime="20201115 23:02:53.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.362" endtime="20201115 23:02:53.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.431" endtime="20201115 23:02:53.770"></status>
</kw>
<msg timestamp="20201115 23:02:53.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045356417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045453986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.428" endtime="20201115 23:02:53.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045356417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045453986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.779" endtime="20201115 23:02:53.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.799" endtime="20201115 23:02:53.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.421" endtime="20201115 23:02:53.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.416" endtime="20201115 23:02:53.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:53.818" level="INFO">${RESULT} = [{'time': 0.045453986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.756899999999874e-05, 'source_diff': 9.756899999999874e-05}, {'time': 0.045580361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:53.809" endtime="20201115 23:02:53.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:53.848" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:53.820" endtime="20201115 23:02:53.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.860" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:53.857" endtime="20201115 23:02:53.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.865" level="INFO">VALUE: [9.756899999999874e-05, 9.779199999999932e-05, 9.736100000000414e-05, 9.786100000000464e-05, 9.755599999999864e-05, 9.78330000000055e-05, 9.762500000000396e-05, 9.780499999999942e-05, 9.725000000000011e-05, 9.736100000000414e-05, 9.738900000000328e-05, 9.805599999999914e-05, 9.775000000000061e-05, 9.813899999999709e-05, 9.754199999999907e-05, 9.747200000000122e-05, 9.750000000000036e-05, 9.733399999999753e-05, 9.800000000000086e-05, 9.793100000000249e-05, 9.772200000000147e-05, 9.816700000000317e-05, 9.776400000000018e-05, 9.745800000000165e-05, 9.731899999999849e-05, 9.78609999999977e-05, 9.776400000000018e-05, 9.763900000000353e-05, 9.738899999999634e-05, 9.825000000000111e-05, 9.763899999999659e-05, 9.794399999999565e-05, 9.754199999999907e-05, 9.811099999999795e-05, 9.790300000000335e-05, 9.769400000000233e-05, 9.822200000000197e-05, 9.790300000000335e-05, 9.79860000000013e-05, 9.811099999999795e-05, 9.81809999999958e-05, 9.788900000000378e-05, 9.765299999999616e-05, 9.745800000000165e-05, 9.784699999999813e-05, 9.74860000000008e-05, 9.734699999999763e-05, 9.731899999999849e-05, 9.820900000000188e-05, 9.767999999999583e-05]</msg>
<status status="PASS" starttime="20201115 23:02:53.862" endtime="20201115 23:02:53.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.850" endtime="20201115 23:02:53.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.874" endtime="20201115 23:02:53.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:53.882" endtime="20201115 23:02:53.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.878" endtime="20201115 23:02:53.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.869" endtime="20201115 23:02:53.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.358" endtime="20201115 23:02:53.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.354" endtime="20201115 23:02:53.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.352" endtime="20201115 23:02:53.909"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.914" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.936" endtime="20201115 23:02:53.956"></status>
</kw>
<msg timestamp="20201115 23:02:53.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.932" endtime="20201115 23:02:53.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.959" endtime="20201115 23:02:53.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.966" endtime="20201115 23:02:53.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.925" endtime="20201115 23:02:53.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.919" endtime="20201115 23:02:53.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.990" endtime="20201115 23:02:54.340"></status>
</kw>
<msg timestamp="20201115 23:02:54.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045436458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.986" endtime="20201115 23:02:54.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045436458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.349" endtime="20201115 23:02:54.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.368" endtime="20201115 23:02:54.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.978" endtime="20201115 23:02:54.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.974" endtime="20201115 23:02:54.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.386" level="INFO">${RESULT} = [{'time': 0.045436458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.909699999999938e-05, 'source_diff': 9.909699999999938e-05}, {'time': 0.045566792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:54.377" endtime="20201115 23:02:54.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.419" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:54.388" endtime="20201115 23:02:54.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.430" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.428" endtime="20201115 23:02:54.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.436" level="INFO">VALUE: [9.909699999999938e-05, 9.904200000000057e-05, 9.844400000000308e-05, 9.922300000000245e-05, 9.876400000000118e-05, 9.91809999999968e-05, 9.890299999999741e-05, 9.86530000000041e-05, 9.838899999999734e-05, 9.909699999999938e-05, 9.847200000000222e-05, 9.830499999999992e-05, 9.901400000000143e-05, 9.904200000000057e-05, 9.9028000000001e-05, 9.850000000000136e-05, 9.90139999999945e-05, 9.86939999999964e-05, 9.852700000000103e-05, 9.887499999999827e-05, 9.840299999999691e-05, 9.831899999999949e-05, 9.841700000000342e-05, 9.866699999999673e-05, 9.862499999999802e-05, 9.920900000000288e-05, 9.884699999999913e-05, 9.881899999999999e-05, 9.844400000000308e-05, 9.858299999999931e-05, 9.913900000000503e-05, 9.829100000000035e-05, 9.83609999999982e-05, 9.834699999999863e-05, 9.897200000000272e-05, 9.861099999999845e-05, 9.888899999999784e-05, 9.902799999999407e-05, 9.823600000000154e-05, 9.83609999999982e-05, 9.829199999999982e-05, 9.916699999999723e-05, 9.879100000000085e-05, 9.923699999999508e-05, 9.912499999999852e-05, 9.872300000000195e-05, 9.855500000000017e-05, 9.880500000000042e-05, 9.91809999999968e-05, 9.876400000000118e-05]</msg>
<status status="PASS" starttime="20201115 23:02:54.433" endtime="20201115 23:02:54.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.421" endtime="20201115 23:02:54.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.445" endtime="20201115 23:02:54.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:54.453" endtime="20201115 23:02:54.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.449" endtime="20201115 23:02:54.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.440" endtime="20201115 23:02:54.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.916" endtime="20201115 23:02:54.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.911" endtime="20201115 23:02:54.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.910" endtime="20201115 23:02:54.480"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.507" endtime="20201115 23:02:54.527"></status>
</kw>
<msg timestamp="20201115 23:02:54.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.503" endtime="20201115 23:02:54.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.530" endtime="20201115 23:02:54.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.537" endtime="20201115 23:02:54.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.496" endtime="20201115 23:02:54.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.490" endtime="20201115 23:02:54.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.561" endtime="20201115 23:02:54.897"></status>
</kw>
<msg timestamp="20201115 23:02:54.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045284208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045383917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.557" endtime="20201115 23:02:54.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045284208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045383917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.907" endtime="20201115 23:02:54.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.926" endtime="20201115 23:02:54.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.550" endtime="20201115 23:02:54.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.545" endtime="20201115 23:02:54.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.945" level="INFO">${RESULT} = [{'time': 0.045383917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.970900000000338e-05, 'source_diff': 9.970900000000338e-05}, {'time': 0.045513222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:54.936" endtime="20201115 23:02:54.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:54.947" endtime="20201115 23:02:54.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.986" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.984" endtime="20201115 23:02:54.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.992" level="INFO">VALUE: [9.970900000000338e-05, 9.944399999999715e-05, 9.95410000000016e-05, 9.99159999999985e-05, 9.941700000000442e-05, 9.934699999999963e-05, 9.96809999999973e-05, 9.948599999999586e-05, 9.931900000000049e-05, 0.00010005500000000167, 9.983300000000056e-05, 9.99159999999985e-05, 9.994499999999712e-05, 0.00010006900000000124, 9.938900000000528e-05, 9.974999999999568e-05, 9.95280000000015e-05, 0.00010015299999999866, 9.97080000000039e-05, 9.93609999999992e-05, 9.977800000000175e-05, 9.961099999999945e-05, 9.94860000000028e-05, 9.974999999999568e-05, 0.00010016599999999876, 0.0001000410000000021, 9.941700000000442e-05, 0.00010025000000000311, 0.00010005600000000114, 9.94860000000028e-05, 9.962499999999902e-05, 0.00010023600000000354, 9.951400000000193e-05, 0.00010029200000000182, 9.93479999999991e-05, 9.986199999999917e-05, 0.00010015299999999866, 9.98609999999997e-05, 9.963900000000553e-05, 9.966599999999826e-05, 9.969400000000433e-05, 9.940299999999791e-05, 9.958399999999978e-05, 9.94860000000028e-05, 9.966599999999826e-05, 0.00010004200000000157, 9.925000000000211e-05, 9.963800000000606e-05, 9.981999999999353e-05, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201115 23:02:54.989" endtime="20201115 23:02:54.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.977" endtime="20201115 23:02:54.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.001" endtime="20201115 23:02:55.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:55.009" endtime="20201115 23:02:55.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.005" endtime="20201115 23:02:55.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.996" endtime="20201115 23:02:55.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.486" endtime="20201115 23:02:55.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.482" endtime="20201115 23:02:55.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.480" endtime="20201115 23:02:55.036"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.041" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.064" endtime="20201115 23:02:55.084"></status>
</kw>
<msg timestamp="20201115 23:02:55.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.060" endtime="20201115 23:02:55.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.087" endtime="20201115 23:02:55.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.094" endtime="20201115 23:02:55.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.052" endtime="20201115 23:02:55.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.046" endtime="20201115 23:02:55.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.117" endtime="20201115 23:02:55.462"></status>
</kw>
<msg timestamp="20201115 23:02:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046373611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046474917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.114" endtime="20201115 23:02:55.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046373611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046474917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.471" endtime="20201115 23:02:55.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.490" endtime="20201115 23:02:55.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.107" endtime="20201115 23:02:55.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.102" endtime="20201115 23:02:55.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:55.507" level="INFO">${RESULT} = [{'time': 0.046474917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010130599999999546, 'source_diff': 0.00010130599999999546}, {'time': 0.046607278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:55.498" endtime="20201115 23:02:55.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:55.537" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:55.509" endtime="20201115 23:02:55.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.548" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:55.546" endtime="20201115 23:02:55.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.553" level="INFO">VALUE: [0.00010130599999999546, 0.00010065299999999916, 0.00010074999999999668, 0.00010044500000000456, 0.00010111100000000095, 0.00010073700000000352, 0.00010087500000000027, 0.00010125000000000411, 0.00010045799999999772, 0.00010111100000000095, 0.00010123600000000454, 0.00010093099999999855, 0.0001007359999999971, 0.00010116599999999976, 0.00010115299999999966, 0.00010111100000000095, 0.0001011809999999988, 0.0001003060000000014, 0.00010034700000000063, 0.000100513999999996, 0.00010124999999999718, 0.00010032000000000096, 0.00010111100000000095, 0.00010043099999999805, 0.00010086200000000017, 0.00010059699999999394, 0.00010079099999999591, 0.00010037499999999977, 0.0001003610000000002, 0.00010091699999999898, 0.00010032000000000096, 0.00010065299999999916, 0.000100513999999996, 0.00010116699999999923, 0.00010027800000000225, 0.0001010139999999965, 0.00010059800000000035, 0.00010104200000000257, 0.00010116699999999923, 0.00010095800000000515, 0.00010126300000000421, 0.00010047199999999729, 0.00010106900000000224, 0.00010113900000000009, 0.0001004860000000038, 0.00010070899999999744, 0.00010029199999999489, 0.0001011809999999988, 0.00010093100000000549, 0.00010084700000000113]</msg>
<status status="PASS" starttime="20201115 23:02:55.550" endtime="20201115 23:02:55.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.539" endtime="20201115 23:02:55.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.562" endtime="20201115 23:02:55.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:55.571" endtime="20201115 23:02:55.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.566" endtime="20201115 23:02:55.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.558" endtime="20201115 23:02:55.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.042" endtime="20201115 23:02:55.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.038" endtime="20201115 23:02:55.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.037" endtime="20201115 23:02:55.598"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.625" endtime="20201115 23:02:55.647"></status>
</kw>
<msg timestamp="20201115 23:02:55.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.622" endtime="20201115 23:02:55.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.650" endtime="20201115 23:02:55.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.657" endtime="20201115 23:02:55.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.615" endtime="20201115 23:02:55.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.609" endtime="20201115 23:02:55.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.680" endtime="20201115 23:02:56.030"></status>
</kw>
<msg timestamp="20201115 23:02:56.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046446611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.677" endtime="20201115 23:02:56.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046446611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046548444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.039" endtime="20201115 23:02:56.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.058" endtime="20201115 23:02:56.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.670" endtime="20201115 23:02:56.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.665" endtime="20201115 23:02:56.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.077" level="INFO">${RESULT} = [{'time': 0.046548444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010183300000000256, 'source_diff': 0.00010183300000000256}, {'time': 0.046680819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.068" endtime="20201115 23:02:56.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:56.079" endtime="20201115 23:02:56.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.118" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.115" endtime="20201115 23:02:56.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.123" level="INFO">VALUE: [0.00010183300000000256, 0.00010208299999999587, 0.00010211100000000195, 0.00010193000000000008, 0.00010145799999999872, 0.00010213899999999415, 0.0001015559999999957, 0.00010163900000000059, 0.00010147200000000522, 0.00010148599999999786, 0.00010138900000000034, 0.00010211099999999501, 0.0001017359999999981, 0.00010148699999999733, 0.00010220799999999947, 0.00010130500000000292, 0.00010122199999999804, 0.00010172199999999854, 0.00010194500000000606, 0.0001016809999999993, 0.00010127799999999632, 0.00010212500000000152, 0.00010208300000000281, 0.00010202700000000453, 0.00010190300000000041, 0.00010174999999999768, 0.00010137500000000077, 0.00010216600000000076, 0.0001014860000000048, 0.00010127799999999632, 0.00010127699999999684, 0.00010169499999999887, 0.00010187500000000127, 0.00010222199999999904, 0.00010215200000000119, 0.0001019160000000005, 0.00010213900000000109, 0.00010129200000000282, 0.00010134699999999469, 0.0001013610000000012, 0.00010122200000000497, 0.00010126399999999675, 0.00010180499999999648, 0.00010194399999999965, 0.00010134699999999469, 0.00010147200000000522, 0.00010198699999999783, 0.00010220899999999894, 0.00010218000000000033, 0.00010208300000000281]</msg>
<status status="PASS" starttime="20201115 23:02:56.120" endtime="20201115 23:02:56.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.109" endtime="20201115 23:02:56.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.137" endtime="20201115 23:02:56.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.146" endtime="20201115 23:02:56.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.141" endtime="20201115 23:02:56.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.133" endtime="20201115 23:02:56.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.605" endtime="20201115 23:02:56.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.601" endtime="20201115 23:02:56.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.599" endtime="20201115 23:02:56.173"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.178" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.200" endtime="20201115 23:02:56.221"></status>
</kw>
<msg timestamp="20201115 23:02:56.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.196" endtime="20201115 23:02:56.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.225" endtime="20201115 23:02:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.231" endtime="20201115 23:02:56.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.189" endtime="20201115 23:02:56.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.183" endtime="20201115 23:02:56.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.255" endtime="20201115 23:02:56.607"></status>
</kw>
<msg timestamp="20201115 23:02:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045717278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.251" endtime="20201115 23:02:56.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045717278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.617" endtime="20201115 23:02:56.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.635" endtime="20201115 23:02:56.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.244" endtime="20201115 23:02:56.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.239" endtime="20201115 23:02:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.652" level="INFO">${RESULT} = [{'time': 0.045819569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010229099999999741, 'source_diff': 0.00010229099999999741}, {'time': 0.045954986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.643" endtime="20201115 23:02:56.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.685" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:56.654" endtime="20201115 23:02:56.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.696" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.694" endtime="20201115 23:02:56.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.702" level="INFO">VALUE: [0.00010229099999999741, 0.00010275000000000561, 0.00010226399999999775, 0.00010241699999999354, 0.00010287500000000227, 0.00010319499999999343, 0.00010240300000000091, 0.00010244499999999962, 0.00010237500000000177, 0.00010252700000000503, 0.00010243100000000005, 0.000102513999999998, 0.00010287499999999533, 0.0001029860000000063, 0.00010247299999999876, 0.00010245899999999919, 0.00010320800000000047, 0.00010316600000000176, 0.00010231899999999655, 0.00010302699999999859, 0.00010305499999999773, 0.0001030139999999985, 0.00010299999999999893, 0.00010244499999999962, 0.00010263899999999465, 0.00010254099999999766, 0.00010249999999999843, 0.00010304200000000457, 0.00010229199999999689, 0.00010316700000000123, 0.0001027359999999991, 0.00010308300000000381, 0.00010243100000000005, 0.0001025689999999968, 0.00010248599999999886, 0.0001027359999999991, 0.00010277799999999782, 0.00010274999999999868, 0.00010322200000000004, 0.0001030559999999972, 0.0001031810000000008, 0.0001028610000000027, 0.0001027359999999991, 0.00010263900000000159, 0.0001023610000000022, 0.00010226400000000468, 0.00010234700000000263, 0.00010282000000000346, 0.00010227800000000425, 0.00010245900000000613]</msg>
<status status="PASS" starttime="20201115 23:02:56.698" endtime="20201115 23:02:56.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.687" endtime="20201115 23:02:56.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.711" endtime="20201115 23:02:56.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.719" endtime="20201115 23:02:56.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.715" endtime="20201115 23:02:56.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.706" endtime="20201115 23:02:56.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.179" endtime="20201115 23:02:56.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.175" endtime="20201115 23:02:56.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.174" endtime="20201115 23:02:56.746"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.773" endtime="20201115 23:02:56.793"></status>
</kw>
<msg timestamp="20201115 23:02:56.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.770" endtime="20201115 23:02:56.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.797" endtime="20201115 23:02:56.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.803" endtime="20201115 23:02:56.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.762" endtime="20201115 23:02:56.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.756" endtime="20201115 23:02:56.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.827" endtime="20201115 23:02:57.164"></status>
</kw>
<msg timestamp="20201115 23:02:57.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045470569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045574458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.823" endtime="20201115 23:02:57.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045470569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045574458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.174" endtime="20201115 23:02:57.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.192" endtime="20201115 23:02:57.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.816" endtime="20201115 23:02:57.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.811" endtime="20201115 23:02:57.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.211" level="INFO">${RESULT} = [{'time': 0.045574458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001038889999999959, 'source_diff': 0.0001038889999999959}, {'time': 0.045710806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:57.202" endtime="20201115 23:02:57.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:57.213" endtime="20201115 23:02:57.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.252" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.250" endtime="20201115 23:02:57.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.258" level="INFO">VALUE: [0.0001038889999999959, 0.00010397300000000026, 0.00010425000000000018, 0.00010326399999999875, 0.00010388900000000284, 0.00010393000000000208, 0.00010394500000000112, 0.00010409699999999744, 0.00010361099999999651, 0.00010343000000000158, 0.00010416699999999529, 0.0001039160000000025, 0.00010393000000000208, 0.0001037360000000001, 0.0001040139999999995, 0.00010363799999999618, 0.00010343000000000158, 0.00010376399999999925, 0.00010366700000000173, 0.00010372200000000054, 0.00010408299999999787, 0.00010398600000000036, 0.0001041810000000018, 0.00010370800000000097, 0.00010381899999999805, 0.00010397200000000079, 0.00010347200000000029, 0.00010340299999999497, 0.00010345800000000072, 0.00010416600000000276, 0.00010382000000000446, 0.00010406999999999778, 0.00010416699999999529, 0.00010331899999999755, 0.00010411099999999701, 0.00010383299999999762, 0.00010422200000000104, 0.0001038610000000037, 0.00010347299999999976, 0.00010354099999999866, 0.00010387499999999633, 0.00010331899999999755, 0.00010365300000000216, 0.00010365199999999575, 0.00010376400000000618, 0.00010391699999999504, 0.00010398600000000036, 0.0001035689999999978, 0.00010394499999999418, 0.00010338800000000287]</msg>
<status status="PASS" starttime="20201115 23:02:57.255" endtime="20201115 23:02:57.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.243" endtime="20201115 23:02:57.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.267" endtime="20201115 23:02:57.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.275" endtime="20201115 23:02:57.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.270" endtime="20201115 23:02:57.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.262" endtime="20201115 23:02:57.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.752" endtime="20201115 23:02:57.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.749" endtime="20201115 23:02:57.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.747" endtime="20201115 23:02:57.301"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.307" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.329" endtime="20201115 23:02:57.349"></status>
</kw>
<msg timestamp="20201115 23:02:57.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.325" endtime="20201115 23:02:57.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.352" endtime="20201115 23:02:57.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.359" endtime="20201115 23:02:57.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.318" endtime="20201115 23:02:57.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.312" endtime="20201115 23:02:57.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.383" endtime="20201115 23:02:57.721"></status>
</kw>
<msg timestamp="20201115 23:02:57.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04535575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045460875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:57.380" endtime="20201115 23:02:57.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04535575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045460875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:57.730" endtime="20201115 23:02:57.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.749" endtime="20201115 23:02:57.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.372" endtime="20201115 23:02:57.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.367" endtime="20201115 23:02:57.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.766" level="INFO">${RESULT} = [{'time': 0.045460875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010512499999999758, 'source_diff': 0.00010512499999999758}, {'time': 0.045596236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:57.758" endtime="20201115 23:02:57.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:57.769" endtime="20201115 23:02:57.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.808" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.805" endtime="20201115 23:02:57.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.813" level="INFO">VALUE: [0.00010512499999999758, 0.00010466699999999579, 0.0001044019999999965, 0.00010443000000000258, 0.00010441700000000248, 0.00010481899999999905, 0.00010495799999999528, 0.00010479099999999991, 0.00010463899999999665, 0.00010480499999999948, 0.00010465200000000369, 0.00010518099999999586, 0.00010452799999999957, 0.00010455499999999923, 0.00010469399999999546, 0.00010472200000000154, 0.00010441599999999607, 0.00010470800000000197, 0.000104901999999997, 0.00010522200000000204, 0.00010440300000000291, 0.00010479200000000632, 0.00010520900000000194, 0.00010513900000000409, 0.00010519399999999596, 0.0001050140000000005, 0.00010477700000000034, 0.00010441700000000248, 0.00010500000000000093, 0.00010527799999999338, 0.00010493100000000255, 0.00010436199999999674, 0.00010430599999999846, 0.00010441700000000248, 0.00010481999999999853, 0.00010523700000000108, 0.00010458399999999785, 0.00010448600000000086, 0.00010502800000000007, 0.00010487500000000427, 0.00010447199999999435, 0.00010448600000000086, 0.00010525000000000118, 0.00010527800000000032, 0.00010509700000000538, 0.00010444500000000162, 0.00010506999999999878, 0.00010491599999999657, 0.0001043889999999964, 0.00010466700000000273]</msg>
<status status="PASS" starttime="20201115 23:02:57.810" endtime="20201115 23:02:57.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.798" endtime="20201115 23:02:57.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.822" endtime="20201115 23:02:57.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.830" endtime="20201115 23:02:57.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.826" endtime="20201115 23:02:57.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.817" endtime="20201115 23:02:57.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.308" endtime="20201115 23:02:57.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.304" endtime="20201115 23:02:57.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.302" endtime="20201115 23:02:57.857"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.862" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.884" endtime="20201115 23:02:57.904"></status>
</kw>
<msg timestamp="20201115 23:02:57.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.881" endtime="20201115 23:02:57.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.908" endtime="20201115 23:02:57.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.914" endtime="20201115 23:02:57.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.873" endtime="20201115 23:02:57.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.867" endtime="20201115 23:02:57.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.938" endtime="20201115 23:02:58.276"></status>
</kw>
<msg timestamp="20201115 23:02:58.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045531389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.934" endtime="20201115 23:02:58.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045531389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.285" endtime="20201115 23:02:58.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.304" endtime="20201115 23:02:58.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.927" endtime="20201115 23:02:58.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.922" endtime="20201115 23:02:58.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.322" level="INFO">${RESULT} = [{'time': 0.045531389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010609699999999944, 'source_diff': 0.00010609699999999944}, {'time': 0.045665722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:58.314" endtime="20201115 23:02:58.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.353" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:58.325" endtime="20201115 23:02:58.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.364" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.362" endtime="20201115 23:02:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.369" level="INFO">VALUE: [0.00010609699999999944, 0.00010617999999999739, 0.00010548700000000133, 0.00010575000000000168, 0.00010549999999999449, 0.00010570800000000297, 0.00010563899999999765, 0.0001058889999999979, 0.00010604200000000064, 0.0001061810000000038, 0.00010559700000000588, 0.00010537499999999783, 0.00010616699999999729, 0.00010612499999999858, 0.00010558400000000578, 0.00010545900000000219, 0.00010619499999999643, 0.00010606999999999978, 0.00010591700000000398, 0.00010531999999999903, 0.00010624999999999524, 0.00010543100000000305, 0.0001061940000000039, 0.00010554100000000066, 0.00010555500000000023, 0.00010618000000000433, 0.00010575000000000168, 0.000105514000000001, 0.00010555500000000023, 0.00010543099999999611, 0.00010584699999999919, 0.00010612499999999858, 0.00010619399999999696, 0.00010584799999999867, 0.00010595800000000322, 0.00010581999999999953, 0.00010618099999999686, 0.00010565299999999722, 0.00010540300000000391, 0.0001059160000000045, 0.00010588900000000484, 0.00010612499999999858, 0.00010574999999999474, 0.00010612499999999858, 0.00010598700000000183, 0.00010608299999999987, 0.00010565200000000469, 0.00010541599999999707, 0.00010543000000000358, 0.000105514000000001]</msg>
<status status="PASS" starttime="20201115 23:02:58.366" endtime="20201115 23:02:58.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.355" endtime="20201115 23:02:58.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.378" endtime="20201115 23:02:58.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.386" endtime="20201115 23:02:58.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.382" endtime="20201115 23:02:58.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.374" endtime="20201115 23:02:58.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.864" endtime="20201115 23:02:58.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.859" endtime="20201115 23:02:58.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.858" endtime="20201115 23:02:58.414"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.419" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.442" endtime="20201115 23:02:58.463"></status>
</kw>
<msg timestamp="20201115 23:02:58.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.439" endtime="20201115 23:02:58.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.466" endtime="20201115 23:02:58.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.474" endtime="20201115 23:02:58.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.431" endtime="20201115 23:02:58.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.425" endtime="20201115 23:02:58.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.497" endtime="20201115 23:02:58.850"></status>
</kw>
<msg timestamp="20201115 23:02:58.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047935556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.494" endtime="20201115 23:02:58.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047935556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.859" endtime="20201115 23:02:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.878" endtime="20201115 23:02:58.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.487" endtime="20201115 23:02:58.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.482" endtime="20201115 23:02:58.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.896" level="INFO">${RESULT} = [{'time': 0.047935556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010694499999999718, 'source_diff': 0.00010694499999999718}, {'time': 0.048069958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:58.887" endtime="20201115 23:02:58.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.929" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:58.898" endtime="20201115 23:02:58.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.940" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.938" endtime="20201115 23:02:58.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.946" level="INFO">VALUE: [0.00010694499999999718, 0.00010708300000000087, 0.0001065560000000007, 0.0001063339999999996, 0.0001068889999999989, 0.00010627800000000132, 0.00010715299999999872, 0.00010697199999999685, 0.00010716699999999829, 0.00010712499999999958, 0.00010687499999999933, 0.00010670800000000397, 0.00010723599999999667, 0.00010716700000000523, 0.0001063339999999996, 0.00010659699999999994, 0.0001068889999999989, 0.00010644499999999668, 0.00010651399999999506, 0.00010657000000000028, 0.00010687500000000627, 0.00010727799999999538, 0.00010687499999999933, 0.00010693000000000508, 0.00010641599999999807, 0.00010701399999999556, 0.00010659699999999994, 0.00010722200000000404, 0.00010695899999999675, 0.00010629200000000089, 0.00010682000000000053, 0.00010662499999999908, 0.0001063889999999984, 0.00010644500000000362, 0.00010722299999999657, 0.0001072360000000036, 0.00010658300000000037, 0.0001071940000000049, 0.0001065560000000007, 0.00010647300000000276, 0.00010702800000000207, 0.00010666599999999832, 0.00010723599999999667, 0.00010669499999999693, 0.00010668099999999736, 0.0001068889999999989, 0.00010650000000000243, 0.00010720799999999753, 0.00010645900000000319, 0.00010636099999999926]</msg>
<status status="PASS" starttime="20201115 23:02:58.943" endtime="20201115 23:02:58.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.931" endtime="20201115 23:02:58.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.955" endtime="20201115 23:02:58.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.963" endtime="20201115 23:02:58.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.959" endtime="20201115 23:02:58.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.950" endtime="20201115 23:02:58.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.421" endtime="20201115 23:02:58.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.417" endtime="20201115 23:02:58.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.415" endtime="20201115 23:02:58.990"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.996" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.019" endtime="20201115 23:02:59.042"></status>
</kw>
<msg timestamp="20201115 23:02:59.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.016" endtime="20201115 23:02:59.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.045" endtime="20201115 23:02:59.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.052" endtime="20201115 23:02:59.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.008" endtime="20201115 23:02:59.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.001" endtime="20201115 23:02:59.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.076" endtime="20201115 23:02:59.423"></status>
</kw>
<msg timestamp="20201115 23:02:59.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047828931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047937042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.072" endtime="20201115 23:02:59.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047828931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047937042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.433" endtime="20201115 23:02:59.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.458" endtime="20201115 23:02:59.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.065" endtime="20201115 23:02:59.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.060" endtime="20201115 23:02:59.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.478" level="INFO">${RESULT} = [{'time': 0.047937042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010811100000000101, 'source_diff': 0.00010811100000000101}, {'time': 0.048074375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:59.469" endtime="20201115 23:02:59.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.508" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:02:59.480" endtime="20201115 23:02:59.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.519" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:59.516" endtime="20201115 23:02:59.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.524" level="INFO">VALUE: [0.00010811100000000101, 0.00010825000000000418, 0.00010795799999999828, 0.00010733300000000112, 0.00010752799999999563, 0.00010815299999999972, 0.00010806999999999484, 0.00010819399999999896, 0.0001075560000000017, 0.00010795900000000469, 0.00010761100000000051, 0.00010798600000000436, 0.00010816599999999982, 0.00010826399999999681, 0.00010777799999999588, 0.00010752800000000257, 0.00010779199999999545, 0.00010822200000000504, 0.00010741699999999854, 0.00010762500000000008, 0.00010786100000000076, 0.00010749999999999649, 0.0001073889999999994, 0.00010818099999999886, 0.00010786100000000076, 0.00010811100000000101, 0.00010758400000000085, 0.00010798599999999742, 0.00010763899999999965, 0.00010816699999999929, 0.000108208999999998, 0.0001080560000000022, 0.00010750000000000343, 0.00010761199999999999, 0.00010781999999999459, 0.0001077219999999976, 0.00010812500000000058, 0.000107514000000003, 0.00010824999999999724, 0.00010777800000000282, 0.0001077219999999976, 0.00010809800000000092, 0.00010816599999999982, 0.00010726399999999581, 0.00010766600000000626, 0.00010740300000000591, 0.00010743099999999811, 0.00010737499999999983, 0.00010807000000000178, 0.0001075690000000018]</msg>
<status status="PASS" starttime="20201115 23:02:59.521" endtime="20201115 23:02:59.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.509" endtime="20201115 23:02:59.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.533" endtime="20201115 23:02:59.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:59.542" endtime="20201115 23:02:59.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.537" endtime="20201115 23:02:59.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.528" endtime="20201115 23:02:59.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.997" endtime="20201115 23:02:59.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.993" endtime="20201115 23:02:59.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.991" endtime="20201115 23:02:59.568"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.595" endtime="20201115 23:02:59.617"></status>
</kw>
<msg timestamp="20201115 23:02:59.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.592" endtime="20201115 23:02:59.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.620" endtime="20201115 23:02:59.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.627" endtime="20201115 23:02:59.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.585" endtime="20201115 23:02:59.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.579" endtime="20201115 23:02:59.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.653" endtime="20201115 23:03:00.005"></status>
</kw>
<msg timestamp="20201115 23:03:00.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045165889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045274875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.649" endtime="20201115 23:03:00.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045165889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045274875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.014" endtime="20201115 23:03:00.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.032" endtime="20201115 23:03:00.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.640" endtime="20201115 23:03:00.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.635" endtime="20201115 23:03:00.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:00.049" level="INFO">${RESULT} = [{'time': 0.045274875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010898599999999842, 'source_diff': 0.00010898599999999842}, {'time': 0.045413236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:00.040" endtime="20201115 23:03:00.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:00.078" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:00.051" endtime="20201115 23:03:00.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.089" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.087" endtime="20201115 23:03:00.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.095" level="INFO">VALUE: [0.00010898599999999842, 0.000108514000000004, 0.00010879099999999697, 0.00010866699999999979, 0.00010851399999999706, 0.00010913900000000115, 0.000109208999999999, 0.00010863900000000065, 0.00010886099999999482, 0.00010865200000000075, 0.00010876399999999731, 0.00010880499999999654, 0.00010861100000000151, 0.00010908300000000287, 0.00010888799999999449, 0.00010861100000000151, 0.00010893000000000014, 0.00010874999999999774, 0.00010872200000000554, 0.00010901399999999756, 0.00010876399999999731, 0.00010923599999999867, 0.00010919399999999996, 0.00010859700000000194, 0.00010832000000000203, 0.00010918099999999986, 0.00010861100000000151, 0.00010829200000000289, 0.00010884700000000219, 0.00010843099999999911, 0.0001092219999999991, 0.0001092360000000056, 0.00010886100000000176, 0.00010836100000000126, 0.00010911100000000201, 0.00010926399999999781, 0.00010916700000000029, 0.00010925000000000518, 0.00010847199999999835, 0.0001092219999999991, 0.00010894399999999971, 0.00010862500000000108, 0.00010920799999999953, 0.00010884700000000219, 0.00010919499999999943, 0.00010872300000000501, 0.000109208999999999, 0.00010915300000000072, 0.00010868099999999936, 0.00010925000000000518]</msg>
<status status="PASS" starttime="20201115 23:03:00.092" endtime="20201115 23:03:00.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.080" endtime="20201115 23:03:00.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.104" endtime="20201115 23:03:00.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.112" endtime="20201115 23:03:00.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.108" endtime="20201115 23:03:00.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.100" endtime="20201115 23:03:00.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.575" endtime="20201115 23:03:00.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.571" endtime="20201115 23:03:00.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.569" endtime="20201115 23:03:00.139"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.166" endtime="20201115 23:03:00.188"></status>
</kw>
<msg timestamp="20201115 23:03:00.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.162" endtime="20201115 23:03:00.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.191" endtime="20201115 23:03:00.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.197" endtime="20201115 23:03:00.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.155" endtime="20201115 23:03:00.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.149" endtime="20201115 23:03:00.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.221" endtime="20201115 23:03:00.570"></status>
</kw>
<msg timestamp="20201115 23:03:00.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045038444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045147722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.218" endtime="20201115 23:03:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045038444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045147722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.579" endtime="20201115 23:03:00.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.598" endtime="20201115 23:03:00.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.211" endtime="20201115 23:03:00.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.206" endtime="20201115 23:03:00.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:00.617" level="INFO">${RESULT} = [{'time': 0.045147722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010927800000000432, 'source_diff': 0.00010927800000000432}, {'time': 0.045287111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:00.609" endtime="20201115 23:03:00.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:00.647" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:00.619" endtime="20201115 23:03:00.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.658" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.655" endtime="20201115 23:03:00.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.664" level="INFO">VALUE: [0.00010927800000000432, 0.00010997199999999985, 0.00010936100000000226, 0.00011006899999999736, 0.00010969499999999993, 0.00011019400000000096, 0.00010979199999999745, 0.00010979200000000439, 0.00010961100000000251, 0.00011009700000000344, 0.00010995800000000028, 0.00010945799999999978, 0.00010937500000000183, 0.00010948600000000586, 0.00010934800000000217, 0.00011026399999999881, 0.00010930599999999652, 0.00010947199999999935, 0.00010934700000000269, 0.00010940300000000097, 0.00011001399999999856, 0.00010991599999999463, 0.00010950000000000543, 0.00010980599999999702, 0.00010999999999999899, 0.00011026399999999881, 0.00010998599999999942, 0.00010995800000000028, 0.00010976400000000525, 0.00010990299999999453, 0.00010970800000000003, 0.00011023599999999967, 0.00010941700000000054, 0.00010986100000000276, 0.00010963900000000165, 0.00010944499999999968, 0.00010936100000000226, 0.00010931899999999661, 0.00010958299999999643, 0.0001099299999999942, 0.00010943000000000064, 0.000109596999999996, 0.00011011100000000301, 0.00011002799999999813, 0.00010936099999999532, 0.0001093619999999948, 0.00010954099999999772, 0.000109514000000005, 0.00010984699999999625, 0.00010955500000000423]</msg>
<status status="PASS" starttime="20201115 23:03:00.660" endtime="20201115 23:03:00.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.649" endtime="20201115 23:03:00.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.674" endtime="20201115 23:03:00.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.682" endtime="20201115 23:03:00.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.678" endtime="20201115 23:03:00.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.669" endtime="20201115 23:03:00.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.146" endtime="20201115 23:03:00.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.142" endtime="20201115 23:03:00.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.140" endtime="20201115 23:03:00.708"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.714" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.735" endtime="20201115 23:03:00.756"></status>
</kw>
<msg timestamp="20201115 23:03:00.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.732" endtime="20201115 23:03:00.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.759" endtime="20201115 23:03:00.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.765" endtime="20201115 23:03:00.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.724" endtime="20201115 23:03:00.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.719" endtime="20201115 23:03:00.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.789" endtime="20201115 23:03:01.130"></status>
</kw>
<msg timestamp="20201115 23:03:01.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044936528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045046972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.785" endtime="20201115 23:03:01.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044936528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045046972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.139" endtime="20201115 23:03:01.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.157" endtime="20201115 23:03:01.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.778" endtime="20201115 23:03:01.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.773" endtime="20201115 23:03:01.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.174" level="INFO">${RESULT} = [{'time': 0.045046972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011044399999999427, 'source_diff': 0.00011044399999999427}, {'time': 0.045188333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:01.166" endtime="20201115 23:03:01.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.212" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:01.181" endtime="20201115 23:03:01.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.223" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.221" endtime="20201115 23:03:01.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.228" level="INFO">VALUE: [0.00011044399999999427, 0.00011079099999999897, 0.00011077800000000582, 0.00011119400000000196, 0.00011098600000000042, 0.00011097199999999391, 0.00011063899999999571, 0.00011068000000000189, 0.00011086099999999682, 0.00011066600000000232, 0.0001110969999999975, 0.00011090300000000247, 0.00011122300000000057, 0.00011043100000000111, 0.00011043100000000111, 0.00011049999999999949, 0.00011040300000000197, 0.00011126399999999981, 0.0001107769999999994, 0.00011058299999999743, 0.00011123600000000067, 0.0001110969999999975, 0.00011104200000000564, 0.00011059700000000394, 0.00011037500000000283, 0.00011115300000000272, 0.0001109169999999951, 0.00011090299999999553, 0.00011083300000000462, 0.00011102799999999913, 0.00011061100000000351, 0.00011115300000000272, 0.00011094400000000171, 0.00011111099999999707, 0.00011044399999999427, 0.00011073600000000017, 0.00011118100000000186, 0.00011120800000000153, 0.0001110969999999975, 0.0001105549999999983, 0.0001103890000000024, 0.00011106999999999784, 0.00011068000000000189, 0.00011048599999999992, 0.00011133399999999766, 0.00011059800000000342, 0.00011097300000000032, 0.00011044500000000068, 0.00011082000000000453, 0.00011062500000000308]</msg>
<status status="PASS" starttime="20201115 23:03:01.225" endtime="20201115 23:03:01.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.214" endtime="20201115 23:03:01.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.237" endtime="20201115 23:03:01.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.245" endtime="20201115 23:03:01.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.241" endtime="20201115 23:03:01.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.232" endtime="20201115 23:03:01.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.715" endtime="20201115 23:03:01.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.711" endtime="20201115 23:03:01.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.709" endtime="20201115 23:03:01.272"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.299" endtime="20201115 23:03:01.320"></status>
</kw>
<msg timestamp="20201115 23:03:01.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.295" endtime="20201115 23:03:01.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.324" endtime="20201115 23:03:01.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.330" endtime="20201115 23:03:01.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.288" endtime="20201115 23:03:01.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.282" endtime="20201115 23:03:01.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.353" endtime="20201115 23:03:01.697"></status>
</kw>
<msg timestamp="20201115 23:03:01.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045039319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.350" endtime="20201115 23:03:01.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045039319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045151333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.706" endtime="20201115 23:03:01.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.725" endtime="20201115 23:03:01.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.343" endtime="20201115 23:03:01.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.338" endtime="20201115 23:03:01.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.744" level="INFO">${RESULT} = [{'time': 0.045151333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011201400000000056, 'source_diff': 0.00011201400000000056}, {'time': 0.045295722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:01.735" endtime="20201115 23:03:01.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.774" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:01.746" endtime="20201115 23:03:01.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.785" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.783" endtime="20201115 23:03:01.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.791" level="INFO">VALUE: [0.00011201400000000056, 0.00011195799999999534, 0.00011170800000000203, 0.00011137499999999689, 0.00011170799999999509, 0.00011191700000000304, 0.00011159700000000494, 0.00011198700000000089, 0.00011169499999999499, 0.00011173700000000064, 0.00011179099999999997, 0.00011226399999999387, 0.0001118890000000039, 0.00011190300000000347, 0.00011125000000000024, 0.00011218000000000339, 0.00011173600000000117, 0.00011216600000000382, 0.00011145900000000125, 0.00011212500000000458, 0.0001117220000000016, 0.00011197199999999491, 0.00011220799999999559, 0.00011179099999999997, 0.00011144400000000221, 0.00011141600000000307, 0.00011188899999999696, 0.00011213799999999774, 0.00011208299999999893, 0.0001119299999999962, 0.00011212499999999764, 0.0001119299999999962, 0.00011144400000000221, 0.00011143000000000264, 0.00011198600000000142, 0.00011183299999999868, 0.00011218000000000339, 0.00011150000000000049, 0.0001115419999999992, 0.00011198600000000142, 0.00011195900000000175, 0.00011151300000000058, 0.00011158400000000485, 0.0001114020000000035, 0.0001117220000000016, 0.0001120969999999985, 0.0001120969999999985, 0.0001115419999999992, 0.00011213899999999721, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201115 23:03:01.788" endtime="20201115 23:03:01.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.776" endtime="20201115 23:03:01.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.800" endtime="20201115 23:03:01.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.808" endtime="20201115 23:03:01.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.804" endtime="20201115 23:03:01.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.795" endtime="20201115 23:03:01.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.278" endtime="20201115 23:03:01.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.274" endtime="20201115 23:03:01.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.273" endtime="20201115 23:03:01.835"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.840" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.861" endtime="20201115 23:03:01.884"></status>
</kw>
<msg timestamp="20201115 23:03:01.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.858" endtime="20201115 23:03:01.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.887" endtime="20201115 23:03:01.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.893" endtime="20201115 23:03:01.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.851" endtime="20201115 23:03:01.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.845" endtime="20201115 23:03:01.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.917" endtime="20201115 23:03:02.269"></status>
</kw>
<msg timestamp="20201115 23:03:02.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045431194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.913" endtime="20201115 23:03:02.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045431194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.278" endtime="20201115 23:03:02.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.297" endtime="20201115 23:03:02.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.906" endtime="20201115 23:03:02.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.901" endtime="20201115 23:03:02.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.314" level="INFO">${RESULT} = [{'time': 0.045431194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011280500000000054, 'source_diff': 0.00011280500000000054}, {'time': 0.045573542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:02.305" endtime="20201115 23:03:02.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.344" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:02.316" endtime="20201115 23:03:02.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.355" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.353" endtime="20201115 23:03:02.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.361" level="INFO">VALUE: [0.00011280500000000054, 0.0001130420000000007, 0.00011327799999999444, 0.0001125550000000003, 0.00011247300000000182, 0.00011247300000000182, 0.00011245800000000278, 0.00011300000000000199, 0.00011316700000000429, 0.00011243099999999617, 0.00011263899999999771, 0.00011294400000000371, 0.00011329099999999453, 0.00011286100000000576, 0.00011234799999999823, 0.00011259800000000542, 0.00011301400000000156, 0.00011265299999999728, 0.00011254100000000072, 0.00011306900000000036, 0.00011311099999999907, 0.0001130969999999995, 0.00011262499999999814, 0.00011263900000000465, 0.00011329100000000147, 0.00011302800000000113, 0.0001129169999999971, 0.00011320799999999659, 0.00011326399999999487, 0.0001125550000000003, 0.00011245800000000278, 0.00011276400000000131, 0.00011305600000000027, 0.00011315299999999778, 0.0001132499999999953, 0.00011266700000000379, 0.00011318099999999692, 0.0001130969999999995, 0.00011316699999999735, 0.00011244400000000321, 0.00011322299999999563, 0.00011294499999999624, 0.00011255599999999977, 0.00011258299999999943, 0.00011312499999999864, 0.00011311099999999907, 0.000112596999999999, 0.00011269399999999652, 0.00011229100000000047, 0.00011305600000000027]</msg>
<status status="PASS" starttime="20201115 23:03:02.358" endtime="20201115 23:03:02.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.346" endtime="20201115 23:03:02.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.370" endtime="20201115 23:03:02.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.378" endtime="20201115 23:03:02.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.374" endtime="20201115 23:03:02.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.365" endtime="20201115 23:03:02.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.841" endtime="20201115 23:03:02.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.837" endtime="20201115 23:03:02.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.835" endtime="20201115 23:03:02.405"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.432" endtime="20201115 23:03:02.452"></status>
</kw>
<msg timestamp="20201115 23:03:02.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.428" endtime="20201115 23:03:02.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.456" endtime="20201115 23:03:02.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.463" endtime="20201115 23:03:02.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.421" endtime="20201115 23:03:02.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.415" endtime="20201115 23:03:02.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.487" endtime="20201115 23:03:02.825"></status>
</kw>
<msg timestamp="20201115 23:03:02.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045545375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045659181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.483" endtime="20201115 23:03:02.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045545375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045659181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.834" endtime="20201115 23:03:02.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.852" endtime="20201115 23:03:02.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.476" endtime="20201115 23:03:02.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.471" endtime="20201115 23:03:02.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.871" level="INFO">${RESULT} = [{'time': 0.045659181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011380600000000102, 'source_diff': 0.00011380600000000102}, {'time': 0.045804556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:02.862" endtime="20201115 23:03:02.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.901" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:02.873" endtime="20201115 23:03:02.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.912" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.910" endtime="20201115 23:03:02.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.917" level="INFO">VALUE: [0.00011380600000000102, 0.00011395900000000375, 0.00011332000000000009, 0.00011362499999999914, 0.00011349999999999555, 0.00011370799999999709, 0.00011334699999999975, 0.00011348600000000292, 0.00011397200000000385, 0.00011379200000000145, 0.00011355600000000077, 0.00011365299999999828, 0.0001137220000000036, 0.00011376400000000231, 0.00011391599999999863, 0.00011345799999999684, 0.00011426400000000281, 0.00011351400000000206, 0.00011333300000000018, 0.00011340299999999803, 0.00011375000000000274, 0.00011394499999999724, 0.00011361099999999957, 0.00011336099999999932, 0.00011370800000000403, 0.00011399999999999605, 0.00011398600000000342, 0.00011334699999999975, 0.00011413799999999974, 0.00011361099999999957, 0.00011373600000000317, 0.00011412499999999964, 0.00011417999999999845, 0.0001137090000000035, 0.00011363899999999871, 0.0001134020000000055, 0.00011397299999999638, 0.00011366700000000479, 0.00011423600000000367, 0.00011338899999999846, 0.00011417999999999845, 0.0001142770000000029, 0.0001133619999999988, 0.00011352800000000163, 0.00011383400000000016, 0.00011368100000000436, 0.00011355599999999383, 0.00011413899999999921, 0.00011344399999999727, 0.00011340199999999856]</msg>
<status status="PASS" starttime="20201115 23:03:02.914" endtime="20201115 23:03:02.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.903" endtime="20201115 23:03:02.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.926" endtime="20201115 23:03:02.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.935" endtime="20201115 23:03:02.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.930" endtime="20201115 23:03:02.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.922" endtime="20201115 23:03:02.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.411" endtime="20201115 23:03:02.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.407" endtime="20201115 23:03:02.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.406" endtime="20201115 23:03:02.961"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.967" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.989" endtime="20201115 23:03:03.010"></status>
</kw>
<msg timestamp="20201115 23:03:03.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.986" endtime="20201115 23:03:03.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.014" endtime="20201115 23:03:03.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.020" endtime="20201115 23:03:03.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.979" endtime="20201115 23:03:03.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.972" endtime="20201115 23:03:03.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.044" endtime="20201115 23:03:03.382"></status>
</kw>
<msg timestamp="20201115 23:03:03.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046177583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046292361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.040" endtime="20201115 23:03:03.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046177583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046292361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.391" endtime="20201115 23:03:03.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.410" endtime="20201115 23:03:03.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.033" endtime="20201115 23:03:03.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.028" endtime="20201115 23:03:03.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.427" level="INFO">${RESULT} = [{'time': 0.046292361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011477799999999594, 'source_diff': 0.00011477799999999594}, {'time': 0.046433694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:03.418" endtime="20201115 23:03:03.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.460" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:03.429" endtime="20201115 23:03:03.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.471" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.469" endtime="20201115 23:03:03.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.476" level="INFO">VALUE: [0.00011477799999999594, 0.00011470799999999809, 0.00011470800000000503, 0.00011473599999999723, 0.00011451400000000306, 0.00011515300000000672, 0.00011463899999999971, 0.00011454199999999526, 0.0001144169999999986, 0.00011506900000000236, 0.00011502699999999672, 0.00011477799999999594, 0.0001143749999999999, 0.00011530500000000304, 0.00011458300000000143, 0.00011465299999999928, 0.00011454199999999526, 0.00011515200000000031, 0.00011455599999999483, 0.00011519399999999902, 0.00011450000000000349, 0.00011443100000000511, 0.00011438899999999946, 0.00011519399999999902, 0.00011433300000000118, 0.0001143890000000064, 0.00011440299999999903, 0.00011448600000000392, 0.00011481899999999517, 0.00011533400000000166, 0.00011512500000000064, 0.00011519399999999902, 0.00011454100000000272, 0.0001144299999999987, 0.00011497299999999738, 0.00011456900000000186, 0.00011513800000000074, 0.00011501400000000356, 0.0001150970000000015, 0.00011451400000000306, 0.00011519499999999849, 0.000115082999999995, 0.00011515299999999978, 0.00011473700000000364, 0.0001143890000000064, 0.00011451399999999612, 0.00011436100000000032, 0.00011488899999999996, 0.00011477800000000288, 0.00011516699999999935]</msg>
<status status="PASS" starttime="20201115 23:03:03.473" endtime="20201115 23:03:03.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.462" endtime="20201115 23:03:03.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.485" endtime="20201115 23:03:03.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.495" endtime="20201115 23:03:03.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.489" endtime="20201115 23:03:03.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.481" endtime="20201115 23:03:03.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.968" endtime="20201115 23:03:03.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.964" endtime="20201115 23:03:03.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.962" endtime="20201115 23:03:03.521"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.526" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.548" endtime="20201115 23:03:03.569"></status>
</kw>
<msg timestamp="20201115 23:03:03.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.545" endtime="20201115 23:03:03.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.572" endtime="20201115 23:03:03.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.579" endtime="20201115 23:03:03.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.538" endtime="20201115 23:03:03.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.532" endtime="20201115 23:03:03.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.604" endtime="20201115 23:03:03.942"></status>
</kw>
<msg timestamp="20201115 23:03:03.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045430514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.601" endtime="20201115 23:03:03.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045315028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045430514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.952" endtime="20201115 23:03:03.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.970" endtime="20201115 23:03:03.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.593" endtime="20201115 23:03:03.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.588" endtime="20201115 23:03:03.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.989" level="INFO">${RESULT} = [{'time': 0.045430514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011548599999999798, 'source_diff': 0.00011548599999999798}, {'time': 0.045577861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:03.980" endtime="20201115 23:03:03.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:04.019" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:03.991" endtime="20201115 23:03:04.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.030" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:03:04.028" endtime="20201115 23:03:04.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.036" level="INFO">VALUE: [0.00011548599999999798, 0.00011556899999999592, 0.00011584700000000225, 0.00011554199999999626, 0.00011586100000000182, 0.00011538900000000046, 0.00011588900000000096, 0.00011623599999999873, 0.00011622199999999916, 0.00011579200000000345, 0.00011534700000000175, 0.00011597199999999891, 0.00011549999999999755, 0.00011616600000000088, 0.00011543100000000611, 0.0001155829999999955, 0.00011559800000000148, 0.00011627699999999797, 0.00011554199999999626, 0.00011593099999999967, 0.00011565300000000028, 0.00011572199999999866, 0.00011579200000000345, 0.0001157499999999978, 0.00011594499999999924, 0.00011598599999999848, 0.0001154169999999996, 0.00011540300000000003, 0.00011540200000000056, 0.00011547199999999841, 0.0001158750000000014, 0.00011594499999999924, 0.00011600000000000499, 0.00011608300000000293, 0.00011608399999999547, 0.00011625000000000524, 0.00011576400000000431, 0.00011615300000000078, 0.00011615199999999437, 0.00011616600000000088, 0.0001154169999999996, 0.00011616700000000035, 0.00011620799999999959, 0.00011536100000000132, 0.00011611200000000155, 0.0001154169999999996, 0.00011609699999999556, 0.00011561199999999411, 0.00011622199999999916, 0.00011544399999999927]</msg>
<status status="PASS" starttime="20201115 23:03:04.032" endtime="20201115 23:03:04.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.021" endtime="20201115 23:03:04.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.045" endtime="20201115 23:03:04.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:04.053" endtime="20201115 23:03:04.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.049" endtime="20201115 23:03:04.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.041" endtime="20201115 23:03:04.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.528" endtime="20201115 23:03:04.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.524" endtime="20201115 23:03:04.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.522" endtime="20201115 23:03:04.080"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.085" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.107" endtime="20201115 23:03:04.128"></status>
</kw>
<msg timestamp="20201115 23:03:04.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.104" endtime="20201115 23:03:04.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.132" endtime="20201115 23:03:04.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.138" endtime="20201115 23:03:04.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.097" endtime="20201115 23:03:04.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.091" endtime="20201115 23:03:04.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.162" endtime="20201115 23:03:04.500"></status>
</kw>
<msg timestamp="20201115 23:03:04.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045616181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.158" endtime="20201115 23:03:04.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045616181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.509" endtime="20201115 23:03:04.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.528" endtime="20201115 23:03:04.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.151" endtime="20201115 23:03:04.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.146" endtime="20201115 23:03:04.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:04.545" level="INFO">${RESULT} = [{'time': 0.045616181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011705599999999733, 'source_diff': 0.00011705599999999733}, {'time': 0.045765583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:04.536" endtime="20201115 23:03:04.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:04.575" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:04.547" endtime="20201115 23:03:04.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.586" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:03:04.584" endtime="20201115 23:03:04.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.592" level="INFO">VALUE: [0.00011705599999999733, 0.00011694400000000077, 0.00011726400000000581, 0.00011647199999999941, 0.00011640200000000156, 0.0001164300000000007, 0.00011662500000000214, 0.00011731999999999715, 0.00011693100000000067, 0.00011738900000000246, 0.00011704199999999776, 0.0001172499999999993, 0.00011715299999999484, 0.00011649999999999855, 0.0001170970000000035, 0.00011669499999999999, 0.0001173049999999981, 0.00011659699999999606, 0.00011716600000000188, 0.00011640300000000103, 0.00011644499999999974, 0.0001165829999999965, 0.00011684700000000325, 0.00011694500000000024, 0.00011643100000000017, 0.00011688900000000196, 0.00011719500000000049, 0.00011654099999999779, 0.00011677800000000488, 0.0001172499999999993, 0.00011698599999999948, 0.00011665299999999434, 0.00011654199999999726, 0.00011713900000000221, 0.00011693100000000067, 0.00011686100000000282, 0.0001171249999999957, 0.0001163750000000019, 0.00011716599999999494, 0.00011687499999999545, 0.00011711200000000255, 0.00011652799999999769, 0.000116597000000003, 0.0001173049999999981, 0.00011656900000000386, 0.00011691600000000163, 0.00011695899999999981, 0.00011695899999999981, 0.00011652700000000515, 0.00011645799999999984]</msg>
<status status="PASS" starttime="20201115 23:03:04.588" endtime="20201115 23:03:04.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.577" endtime="20201115 23:03:04.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.601" endtime="20201115 23:03:04.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:04.610" endtime="20201115 23:03:04.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.605" endtime="20201115 23:03:04.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.597" endtime="20201115 23:03:04.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.087" endtime="20201115 23:03:04.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.083" endtime="20201115 23:03:04.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.081" endtime="20201115 23:03:04.637"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.642" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.665" endtime="20201115 23:03:04.686"></status>
</kw>
<msg timestamp="20201115 23:03:04.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.662" endtime="20201115 23:03:04.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.690" endtime="20201115 23:03:04.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.696" endtime="20201115 23:03:04.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.654" endtime="20201115 23:03:04.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.648" endtime="20201115 23:03:04.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.720" endtime="20201115 23:03:05.055"></status>
</kw>
<msg timestamp="20201115 23:03:05.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047254236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.716" endtime="20201115 23:03:05.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047254236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047372056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.065" endtime="20201115 23:03:05.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.083" endtime="20201115 23:03:05.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.709" endtime="20201115 23:03:05.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.704" endtime="20201115 23:03:05.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.102" level="INFO">${RESULT} = [{'time': 0.047372056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011782000000000459, 'source_diff': 0.00011782000000000459}, {'time': 0.0475215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:05.093" endtime="20201115 23:03:05.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.133" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:05.105" endtime="20201115 23:03:05.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.144" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.141" endtime="20201115 23:03:05.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.149" level="INFO">VALUE: [0.00011782000000000459, 0.000117597000000004, 0.00011813900000000321, 0.00011779199999999851, 0.00011800000000000005, 0.00011795900000000081, 0.00011731900000000461, 0.00011768100000000142, 0.00011754199999999826, 0.00011734700000000375, 0.00011804099999999929, 0.00011752699999999922, 0.00011780599999999808, 0.00011805600000000527, 0.0001176379999999963, 0.00011744500000000074, 0.00011800000000000005, 0.00011754199999999826, 0.00011747299999999988, 0.0001175420000000052, 0.00011773600000000023, 0.00011781999999999765, 0.00011826399999999987, 0.00011788899999999602, 0.00011786099999999688, 0.00011788900000000296, 0.00011743099999999423, 0.00011770800000000109, 0.0001178750000000034, 0.00011754199999999826, 0.00011815199999999637, 0.000117597000000004, 0.00011805599999999833, 0.00011780599999999808, 0.00011813899999999627, 0.00011823600000000073, 0.00011801399999999962, 0.00011758399999999697, 0.00011780600000000502, 0.00011768000000000195, 0.0001174300000000017, 0.00011798599999999354, 0.00011798600000000048, 0.00011797300000000038, 0.00011758399999999697, 0.0001174300000000017, 0.00011740300000000203, 0.00011805599999999833, 0.0001178049999999986, 0.0001177369999999997]</msg>
<status status="PASS" starttime="20201115 23:03:05.146" endtime="20201115 23:03:05.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.135" endtime="20201115 23:03:05.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.158" endtime="20201115 23:03:05.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.166" endtime="20201115 23:03:05.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.162" endtime="20201115 23:03:05.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.154" endtime="20201115 23:03:05.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.644" endtime="20201115 23:03:05.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.640" endtime="20201115 23:03:05.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.638" endtime="20201115 23:03:05.193"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.198" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.220" endtime="20201115 23:03:05.243"></status>
</kw>
<msg timestamp="20201115 23:03:05.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.217" endtime="20201115 23:03:05.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.246" endtime="20201115 23:03:05.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.253" endtime="20201115 23:03:05.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.210" endtime="20201115 23:03:05.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.204" endtime="20201115 23:03:05.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.276" endtime="20201115 23:03:05.628"></status>
</kw>
<msg timestamp="20201115 23:03:05.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045836194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.273" endtime="20201115 23:03:05.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045717056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045836194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.638" endtime="20201115 23:03:05.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.657" endtime="20201115 23:03:05.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.266" endtime="20201115 23:03:05.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.261" endtime="20201115 23:03:05.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.675" level="INFO">${RESULT} = [{'time': 0.045836194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001191379999999978, 'source_diff': 0.0001191379999999978}, {'time': 0.045988653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:05.666" endtime="20201115 23:03:05.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.708" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:05.677" endtime="20201115 23:03:05.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.719" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.717" endtime="20201115 23:03:05.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.725" level="INFO">VALUE: [0.0001191379999999978, 0.00011926399999999393, 0.00011929100000000054, 0.000119082999999999, 0.00011854099999999979, 0.00011906899999999943, 0.0001185699999999984, 0.00011883399999999822, 0.000119082999999999, 0.00011861100000000457, 0.0001193050000000001, 0.00011872200000000166, 0.00011891699999999616, 0.00011850000000000055, 0.00011863900000000371, 0.0001192779999999935, 0.0001185829999999985, 0.0001184029999999961, 0.00011888899999999702, 0.00011898600000000148, 0.0001192500000000013, 0.00011877799999999994, 0.00011859699999999807, 0.0001191950000000025, 0.00011851400000000012, 0.00011881899999999918, 0.00011920900000000206, 0.00011904199999999976, 0.0001192500000000013, 0.00011847199999999447, 0.00011902800000000019, 0.00011836099999999738, 0.00011919399999999608, 0.00011848600000000098, 0.0001193050000000001, 0.00011841599999999619, 0.0001183049999999991, 0.00011834699999999782, 0.00011847200000000141, 0.00011865299999999634, 0.00011902800000000019, 0.00011868000000000295, 0.0001184029999999961, 0.00011863899999999677, 0.00011873600000000123, 0.00011876400000000037, 0.00011855499999999936, 0.00011916600000000388, 0.00011865300000000328, 0.00011918000000000345]</msg>
<status status="PASS" starttime="20201115 23:03:05.722" endtime="20201115 23:03:05.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.710" endtime="20201115 23:03:05.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.734" endtime="20201115 23:03:05.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.742" endtime="20201115 23:03:05.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.738" endtime="20201115 23:03:05.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.729" endtime="20201115 23:03:05.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.200" endtime="20201115 23:03:05.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.196" endtime="20201115 23:03:05.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.194" endtime="20201115 23:03:05.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.868" endtime="20201115 23:03:05.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.781" endtime="20201115 23:03:05.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.776" endtime="20201115 23:03:05.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.774" endtime="20201115 23:03:05.805"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:08.742" endtime="20201115 23:03:05.807" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.826" endtime="20201115 23:03:05.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.822" endtime="20201115 23:03:05.850"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.883" endtime="20201115 23:03:05.900"></status>
</kw>
<msg timestamp="20201115 23:03:05.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.880" endtime="20201115 23:03:05.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.905" endtime="20201115 23:03:05.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.915" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:03:05.911" endtime="20201115 23:03:05.916"></status>
</kw>
<status status="FAIL" starttime="20201115 23:03:05.872" endtime="20201115 23:03:05.918"></status>
</kw>
<status status="FAIL" starttime="20201115 23:03:05.866" endtime="20201115 23:03:05.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.863" endtime="20201115 23:03:05.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:03:05.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:03:05.927" endtime="20201115 23:03:05.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.922" endtime="20201115 23:03:05.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.861" endtime="20201115 23:03:05.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.860" endtime="20201115 23:03:05.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.932" endtime="20201115 23:03:05.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.856" endtime="20201115 23:03:05.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.851" endtime="20201115 23:03:05.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.820" endtime="20201115 23:03:05.939"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.947" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.969" endtime="20201115 23:03:05.984"></status>
</kw>
<msg timestamp="20201115 23:03:05.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.966" endtime="20201115 23:03:05.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.988" endtime="20201115 23:03:05.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.994" endtime="20201115 23:03:05.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.958" endtime="20201115 23:03:05.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.952" endtime="20201115 23:03:06.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.018" endtime="20201115 23:03:06.365"></status>
</kw>
<msg timestamp="20201115 23:03:06.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134845083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.014" endtime="20201115 23:03:06.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134845083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.375" endtime="20201115 23:03:06.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.394" endtime="20201115 23:03:06.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.007" endtime="20201115 23:03:06.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.002" endtime="20201115 23:03:06.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:06.453" level="INFO">${RESULT} = [{'time': 0.134845083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1375000000017907e-05, 'source_diff': 2.1375000000017907e-05}, {'time': 0.134875125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:06.402" endtime="20201115 23:03:06.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:06.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:06.456" endtime="20201115 23:03:06.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.497" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:03:06.495" endtime="20201115 23:03:06.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.502" level="INFO">VALUE: [2.1375000000017907e-05, 2.1639000000017727e-05, 2.1180000000009525e-05, 2.102700000000679e-05, 2.136099999999752e-05, 2.119500000000163e-05, 2.1820000000005724e-05, 2.1165999999989138e-05, 2.1847999999990986e-05, 2.1693999999988778e-05, 2.1597999999983797e-05, 2.1486000000014993e-05, 2.1847000000019268e-05, 2.183299999999888e-05, 2.0860999999983143e-05, 2.113900000000335e-05, 2.1319999999991346e-05, 2.1679999999996147e-05, 2.1778000000000075e-05, 2.1361999999996995e-05, 2.1167000000016367e-05, 2.183400000002611e-05, 2.1165999999989138e-05, 2.1514000000000255e-05, 2.18610000000119e-05, 2.134700000000489e-05, 2.1735999999994426e-05, 2.166700000000299e-05, 2.166700000000299e-05, 2.1500000000007624e-05, 2.1846999999991512e-05, 2.1348000000004363e-05, 2.130499999999924e-05, 2.1348000000004363e-05, 2.1208000000022542e-05, 2.1847000000019268e-05, 2.1153000000023736e-05, 2.162499999999734e-05, 2.0986000000000615e-05, 2.0986000000000615e-05, 2.083299999999788e-05, 2.1666000000003516e-05, 2.14169999999958e-05, 2.112500000001072e-05, 2.1000000000021002e-05, 2.1485999999987238e-05, 2.136099999999752e-05, 2.1348000000004363e-05, 2.1013999999985877e-05, 2.1013999999985877e-05]</msg>
<status status="PASS" starttime="20201115 23:03:06.499" endtime="20201115 23:03:06.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.488" endtime="20201115 23:03:06.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.511" endtime="20201115 23:03:06.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:06.520" endtime="20201115 23:03:06.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.515" endtime="20201115 23:03:06.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.507" endtime="20201115 23:03:06.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.948" endtime="20201115 23:03:06.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.944" endtime="20201115 23:03:06.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.943" endtime="20201115 23:03:06.546"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.551" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.573" endtime="20201115 23:03:06.588"></status>
</kw>
<msg timestamp="20201115 23:03:06.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.570" endtime="20201115 23:03:06.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.591" endtime="20201115 23:03:06.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.598" endtime="20201115 23:03:06.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.562" endtime="20201115 23:03:06.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.557" endtime="20201115 23:03:06.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.622" endtime="20201115 23:03:06.959"></status>
</kw>
<msg timestamp="20201115 23:03:06.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045435208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.618" endtime="20201115 23:03:06.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045435208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.969" endtime="20201115 23:03:06.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.988" endtime="20201115 23:03:06.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.611" endtime="20201115 23:03:06.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.606" endtime="20201115 23:03:06.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.006" level="INFO">${RESULT} = [{'time': 0.045457042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1834000000005294e-05, 'source_diff': 2.1834000000005294e-05}, {'time': 0.045486236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:06.997" endtime="20201115 23:03:07.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.038" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:07.008" endtime="20201115 23:03:07.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.050" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.047" endtime="20201115 23:03:07.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.055" level="INFO">VALUE: [2.1834000000005294e-05, 2.134699999999795e-05, 2.181899999999931e-05, 2.134699999999795e-05, 2.1180000000002586e-05, 2.1361999999996995e-05, 2.1500000000000685e-05, 2.1305999999998715e-05, 2.1013999999999755e-05, 2.1347999999997425e-05, 2.133300000000532e-05, 2.137499999999709e-05, 2.137499999999709e-05, 2.1527999999999825e-05, 2.084700000000439e-05, 2.118100000000206e-05, 2.1819999999998785e-05, 2.0986000000000615e-05, 2.1151999999996507e-05, 2.183299999999888e-05, 2.112500000000378e-05, 2.118100000000206e-05, 2.1500000000000685e-05, 2.1500000000000685e-05, 2.183299999999888e-05, 2.166700000000299e-05, 2.1500000000000685e-05, 2.166699999999605e-05, 2.140300000000317e-05, 2.1680000000003086e-05, 2.136099999999752e-05, 2.116700000000249e-05, 2.1236000000000865e-05, 2.10690000000055e-05, 2.1513999999993316e-05, 2.183300000000582e-05, 2.1334000000004794e-05, 2.134699999999795e-05, 2.0986000000000615e-05, 2.134700000000489e-05, 2.115299999999598e-05, 2.1151999999996507e-05, 2.116700000000249e-05, 2.1680000000003086e-05, 2.134699999999795e-05, 2.17090000000017e-05, 2.1000000000000185e-05, 2.1888000000004626e-05, 2.1848000000004864e-05, 2.134700000000489e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.052" endtime="20201115 23:03:07.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.040" endtime="20201115 23:03:07.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.064" endtime="20201115 23:03:07.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.072" endtime="20201115 23:03:07.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.068" endtime="20201115 23:03:07.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.059" endtime="20201115 23:03:07.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.553" endtime="20201115 23:03:07.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.549" endtime="20201115 23:03:07.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.547" endtime="20201115 23:03:07.099"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.104" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.126" endtime="20201115 23:03:07.141"></status>
</kw>
<msg timestamp="20201115 23:03:07.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.122" endtime="20201115 23:03:07.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.144" endtime="20201115 23:03:07.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.151" endtime="20201115 23:03:07.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.115" endtime="20201115 23:03:07.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.109" endtime="20201115 23:03:07.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.175" endtime="20201115 23:03:07.511"></status>
</kw>
<msg timestamp="20201115 23:03:07.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045328958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.172" endtime="20201115 23:03:07.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045328958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.521" endtime="20201115 23:03:07.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.540" endtime="20201115 23:03:07.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.164" endtime="20201115 23:03:07.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.159" endtime="20201115 23:03:07.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.558" level="INFO">${RESULT} = [{'time': 0.045350556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1597999999997675e-05, 'source_diff': 2.1597999999997675e-05}, {'time': 0.045378583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:07.548" endtime="20201115 23:03:07.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.590" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:07.560" endtime="20201115 23:03:07.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.601" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.599" endtime="20201115 23:03:07.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.607" level="INFO">VALUE: [2.1597999999997675e-05, 2.131899999999881e-05, 2.1514000000000255e-05, 2.1584000000005044e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.112499999999684e-05, 2.183300000000582e-05, 2.1292000000006084e-05, 2.116700000000249e-05, 2.1680000000003086e-05, 2.0971999999994106e-05, 2.0986000000000615e-05, 2.1819999999998785e-05, 2.093100000000181e-05, 2.1527999999999825e-05, 2.1319999999998285e-05, 2.1486000000001115e-05, 2.152700000000035e-05, 2.1165999999996077e-05, 2.116699999999555e-05, 2.169499999999519e-05, 2.079099999999917e-05, 2.133299999999838e-05, 2.122300000000077e-05, 2.181899999999931e-05, 2.1013999999999755e-05, 2.166700000000299e-05, 2.1514000000000255e-05, 2.187499999999759e-05, 2.1665999999996577e-05, 2.1679999999996147e-05, 2.1179999999995647e-05, 2.115299999999598e-05, 2.1819999999998785e-05, 2.166699999999605e-05, 2.115300000000292e-05, 2.131900000000575e-05, 2.1333999999997855e-05, 2.0986000000000615e-05, 2.1679999999996147e-05, 2.095900000000095e-05, 2.1179999999995647e-05, 2.1665999999996577e-05, 2.1000000000000185e-05, 2.183299999999888e-05, 2.1000000000000185e-05, 2.0819999999997785e-05, 2.183299999999888e-05, 2.118100000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.603" endtime="20201115 23:03:07.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.592" endtime="20201115 23:03:07.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.615" endtime="20201115 23:03:07.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.624" endtime="20201115 23:03:07.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.619" endtime="20201115 23:03:07.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.611" endtime="20201115 23:03:07.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.105" endtime="20201115 23:03:07.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.101" endtime="20201115 23:03:07.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.100" endtime="20201115 23:03:07.650"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.656" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.678" endtime="20201115 23:03:07.693"></status>
</kw>
<msg timestamp="20201115 23:03:07.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.674" endtime="20201115 23:03:07.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.697" endtime="20201115 23:03:07.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.703" endtime="20201115 23:03:07.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.667" endtime="20201115 23:03:07.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.661" endtime="20201115 23:03:07.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.728" endtime="20201115 23:03:08.065"></status>
</kw>
<msg timestamp="20201115 23:03:08.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045716431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045737569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.724" endtime="20201115 23:03:08.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045716431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045737569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.074" endtime="20201115 23:03:08.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.093" endtime="20201115 23:03:08.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.716" endtime="20201115 23:03:08.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.711" endtime="20201115 23:03:08.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.110" level="INFO">${RESULT} = [{'time': 0.045737569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1137999999996937e-05, 'source_diff': 2.1137999999996937e-05}, {'time': 0.045764569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:08.101" endtime="20201115 23:03:08.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.145" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:08.112" endtime="20201115 23:03:08.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.156" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.154" endtime="20201115 23:03:08.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.162" level="INFO">VALUE: [2.1137999999996937e-05, 2.131899999999881e-05, 2.186099999999802e-05, 2.1180000000002586e-05, 2.1500000000000685e-05, 2.133299999999838e-05, 2.1778000000000075e-05, 2.1833999999998355e-05, 2.134699999999795e-05, 2.133299999999838e-05, 2.133299999999838e-05, 2.1429999999995897e-05, 2.1736000000001365e-05, 2.1000000000000185e-05, 2.181899999999931e-05, 2.1500000000000685e-05, 2.183299999999888e-05, 2.1180000000002586e-05, 2.1333999999997855e-05, 2.115300000000292e-05, 2.1348000000004363e-05, 2.1013999999999755e-05, 2.083299999999788e-05, 2.1291999999999145e-05, 2.115299999999598e-05, 2.1013999999999755e-05, 2.0986000000000615e-05, 2.143099999999537e-05, 2.184699999999845e-05, 2.1013999999999755e-05, 2.1791999999999645e-05, 2.1180000000002586e-05, 2.1500000000000685e-05, 2.1665999999996577e-05, 2.1013999999999755e-05, 2.113899999999641e-05, 2.183299999999888e-05, 2.1055999999998465e-05, 2.1486000000001115e-05, 2.183299999999888e-05, 2.1333999999997855e-05, 2.118099999999512e-05, 2.1500000000000685e-05, 2.1527999999999825e-05, 2.168100000000256e-05, 2.1166000000003016e-05, 2.1013999999999755e-05, 2.1320000000005224e-05, 2.184699999999845e-05, 2.133299999999838e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.159" endtime="20201115 23:03:08.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.147" endtime="20201115 23:03:08.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.171" endtime="20201115 23:03:08.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.179" endtime="20201115 23:03:08.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.175" endtime="20201115 23:03:08.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.166" endtime="20201115 23:03:08.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.657" endtime="20201115 23:03:08.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.653" endtime="20201115 23:03:08.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.651" endtime="20201115 23:03:08.206"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.233" endtime="20201115 23:03:08.248"></status>
</kw>
<msg timestamp="20201115 23:03:08.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.230" endtime="20201115 23:03:08.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.252" endtime="20201115 23:03:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.258" endtime="20201115 23:03:08.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.223" endtime="20201115 23:03:08.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.217" endtime="20201115 23:03:08.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.282" endtime="20201115 23:03:08.619"></status>
</kw>
<msg timestamp="20201115 23:03:08.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046246806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046267819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.278" endtime="20201115 23:03:08.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046246806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046267819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.628" endtime="20201115 23:03:08.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.647" endtime="20201115 23:03:08.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.271" endtime="20201115 23:03:08.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.266" endtime="20201115 23:03:08.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.665" level="INFO">${RESULT} = [{'time': 0.046267819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.101300000000028e-05, 'source_diff': 2.101300000000028e-05}, {'time': 0.046294903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:08.656" endtime="20201115 23:03:08.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.696" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:08.667" endtime="20201115 23:03:08.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.708" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.706" endtime="20201115 23:03:08.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.714" level="INFO">VALUE: [2.101300000000028e-05, 2.1319999999998285e-05, 2.166700000000299e-05, 2.147299999999408e-05, 2.134699999999795e-05, 2.1500000000000685e-05, 2.1652000000003946e-05, 2.115299999999598e-05, 2.1222000000001295e-05, 2.133300000000532e-05, 2.184699999999845e-05, 2.1180000000002586e-05, 2.1514000000000255e-05, 2.118100000000206e-05, 2.098700000000009e-05, 2.133299999999838e-05, 2.112500000000378e-05, 2.1348000000004363e-05, 2.084699999999745e-05, 2.098700000000009e-05, 2.118100000000206e-05, 2.1014000000006694e-05, 2.1665999999996577e-05, 2.115299999999598e-05, 2.1250000000000435e-05, 2.112499999999684e-05, 2.1791999999999645e-05, 2.086100000000396e-05, 2.118099999999512e-05, 2.1000000000000185e-05, 2.1500000000000685e-05, 2.1333999999997855e-05, 2.134699999999795e-05, 2.0986000000000615e-05, 2.133300000000532e-05, 2.133299999999838e-05, 2.181899999999931e-05, 2.1013999999999755e-05, 2.1472000000001545e-05, 2.116700000000249e-05, 2.1000000000000185e-05, 2.165300000000342e-05, 2.1500000000000685e-05, 2.1013999999999755e-05, 2.1152000000003446e-05, 2.1486000000001115e-05, 2.116700000000249e-05, 2.0958000000001475e-05, 2.184700000000539e-05, 2.1500000000000685e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.711" endtime="20201115 23:03:08.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.698" endtime="20201115 23:03:08.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.724" endtime="20201115 23:03:08.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.732" endtime="20201115 23:03:08.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.728" endtime="20201115 23:03:08.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.718" endtime="20201115 23:03:08.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.213" endtime="20201115 23:03:08.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.208" endtime="20201115 23:03:08.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.206" endtime="20201115 23:03:08.759"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.765" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.788" endtime="20201115 23:03:08.803"></status>
</kw>
<msg timestamp="20201115 23:03:08.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.785" endtime="20201115 23:03:08.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.807" endtime="20201115 23:03:08.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.813" endtime="20201115 23:03:08.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.777" endtime="20201115 23:03:08.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.771" endtime="20201115 23:03:08.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.837" endtime="20201115 23:03:09.175"></status>
</kw>
<msg timestamp="20201115 23:03:09.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047891333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047912833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.833" endtime="20201115 23:03:09.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047891333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047912833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.184" endtime="20201115 23:03:09.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.203" endtime="20201115 23:03:09.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.826" endtime="20201115 23:03:09.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.821" endtime="20201115 23:03:09.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.220" level="INFO">${RESULT} = [{'time': 0.047912833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1500000000000685e-05, 'source_diff': 2.1500000000000685e-05}, {'time': 0.047940889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:09.211" endtime="20201115 23:03:09.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.252" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:09.223" endtime="20201115 23:03:09.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.264" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.261" endtime="20201115 23:03:09.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.270" level="INFO">VALUE: [2.1500000000000685e-05, 2.165300000000342e-05, 2.1000000000000185e-05, 2.112500000000378e-05, 2.151300000000078e-05, 2.1819999999998785e-05, 2.1013999999999755e-05, 2.1194000000002156e-05, 2.116700000000249e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 2.0848000000003863e-05, 2.1013999999999755e-05, 2.137500000000403e-05, 2.1721999999994857e-05, 2.1834000000005294e-05, 2.187500000000453e-05, 2.1528000000006764e-05, 2.1514000000000255e-05, 2.1013999999999755e-05, 2.1180000000002586e-05, 2.134700000000489e-05, 2.1000000000000185e-05, 2.083299999999788e-05, 2.166699999999605e-05, 2.184699999999845e-05, 2.1000000000000185e-05, 2.1833999999998355e-05, 2.134699999999795e-05, 2.1137999999996937e-05, 2.1527999999999825e-05, 2.113900000000335e-05, 2.1486000000001115e-05, 2.168099999999562e-05, 2.168099999999562e-05, 2.1000000000000185e-05, 2.1805999999999215e-05, 2.0806000000005154e-05, 2.1193999999995217e-05, 2.1319999999998285e-05, 2.1805999999999215e-05, 2.1527999999999825e-05, 2.168100000000256e-05, 2.1193999999995217e-05, 2.166700000000299e-05, 2.095900000000095e-05, 2.1013999999999755e-05, 2.081899999999831e-05, 2.094500000000138e-05, 2.1013999999999755e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.267" endtime="20201115 23:03:09.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.254" endtime="20201115 23:03:09.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.279" endtime="20201115 23:03:09.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.288" endtime="20201115 23:03:09.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.283" endtime="20201115 23:03:09.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.275" endtime="20201115 23:03:09.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.767" endtime="20201115 23:03:09.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.762" endtime="20201115 23:03:09.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.760" endtime="20201115 23:03:09.314"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.319" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.341" endtime="20201115 23:03:09.356"></status>
</kw>
<msg timestamp="20201115 23:03:09.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.338" endtime="20201115 23:03:09.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.360" endtime="20201115 23:03:09.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.366" endtime="20201115 23:03:09.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.331" endtime="20201115 23:03:09.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.325" endtime="20201115 23:03:09.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.390" endtime="20201115 23:03:09.725"></status>
</kw>
<msg timestamp="20201115 23:03:09.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045381694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.386" endtime="20201115 23:03:09.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045360208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045381694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.735" endtime="20201115 23:03:09.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.754" endtime="20201115 23:03:09.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.379" endtime="20201115 23:03:09.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.374" endtime="20201115 23:03:09.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.771" level="INFO">${RESULT} = [{'time': 0.045381694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1486000000001115e-05, 'source_diff': 2.1486000000001115e-05}, {'time': 0.045411778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:09.762" endtime="20201115 23:03:09.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.803" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:09.773" endtime="20201115 23:03:09.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.814" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.812" endtime="20201115 23:03:09.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.822" level="INFO">VALUE: [2.1486000000001115e-05, 2.1500000000000685e-05, 2.087499999999659e-05, 2.101300000000028e-05, 2.151300000000078e-05, 2.1680000000003086e-05, 2.115300000000292e-05, 2.119499999999469e-05, 2.1457999999995037e-05, 2.143100000000231e-05, 2.1180000000002586e-05, 2.118100000000206e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.104099999999942e-05, 2.1847999999997925e-05, 2.116700000000249e-05, 2.1500000000000685e-05, 2.184699999999845e-05, 2.1665999999996577e-05, 2.1778000000000075e-05, 2.118099999999512e-05, 2.1500000000000685e-05, 2.131899999999881e-05, 2.134699999999795e-05, 2.181899999999931e-05, 2.184699999999845e-05, 2.183299999999888e-05, 2.1151999999996507e-05, 2.166699999999605e-05, 2.0834000000004294e-05, 2.1347999999997425e-05, 2.184699999999845e-05, 2.131900000000575e-05, 2.1486000000001115e-05, 2.168100000000256e-05, 2.1819999999998785e-05, 2.169499999999519e-05, 2.1165999999996077e-05, 2.168100000000256e-05, 2.134699999999795e-05, 2.1569999999998535e-05, 2.166700000000299e-05, 2.1514000000000255e-05, 2.1500000000000685e-05, 2.133299999999838e-05, 2.1000000000000185e-05, 2.118100000000206e-05, 2.1472000000001545e-05, 2.131899999999881e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.817" endtime="20201115 23:03:09.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.805" endtime="20201115 23:03:09.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.831" endtime="20201115 23:03:09.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.840" endtime="20201115 23:03:09.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.835" endtime="20201115 23:03:09.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.827" endtime="20201115 23:03:09.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.321" endtime="20201115 23:03:09.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.317" endtime="20201115 23:03:09.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.315" endtime="20201115 23:03:09.866"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.893" endtime="20201115 23:03:09.909"></status>
</kw>
<msg timestamp="20201115 23:03:09.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.890" endtime="20201115 23:03:09.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.912" endtime="20201115 23:03:09.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.918" endtime="20201115 23:03:09.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.883" endtime="20201115 23:03:09.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.877" endtime="20201115 23:03:09.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.942" endtime="20201115 23:03:10.279"></status>
</kw>
<msg timestamp="20201115 23:03:10.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045633903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.939" endtime="20201115 23:03:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045633903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.288" endtime="20201115 23:03:10.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.307" endtime="20201115 23:03:10.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.932" endtime="20201115 23:03:10.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.927" endtime="20201115 23:03:10.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.325" level="INFO">${RESULT} = [{'time': 0.045662556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8652999999996542e-05, 'source_diff': 2.8652999999996542e-05}, {'time': 0.045699736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:10.316" endtime="20201115 23:03:10.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.359" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:10.328" endtime="20201115 23:03:10.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.370" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.367" endtime="20201115 23:03:10.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.375" level="INFO">VALUE: [2.8652999999996542e-05, 2.7986000000000677e-05, 2.8096999999997763e-05, 2.8819999999998847e-05, 2.8805999999999277e-05, 2.8818999999999373e-05, 2.8846999999998513e-05, 2.8486000000001177e-05, 2.865199999999707e-05, 2.815199999999657e-05, 2.8305999999998777e-05, 2.7958999999994072e-05, 2.819399999999528e-05, 2.8500000000000747e-05, 2.8264000000000067e-05, 2.8624999999997403e-05, 2.8486000000001177e-05, 2.8166999999995612e-05, 2.8138999999996472e-05, 2.819500000000169e-05, 2.865300000000348e-05, 2.8652999999996542e-05, 2.8304999999999303e-05, 2.8804999999999803e-05, 2.7985999999993738e-05, 2.8096999999997763e-05, 2.8347999999997486e-05, 2.8500000000000747e-05, 2.8458999999994572e-05, 2.8124999999996902e-05, 2.8152000000003508e-05, 2.813900000000341e-05, 2.816700000000255e-05, 2.8818999999999373e-05, 2.8264000000000067e-05, 2.8290999999999733e-05, 2.8819999999998847e-05, 2.8486000000001177e-05, 2.8472000000001607e-05, 2.8277999999999637e-05, 2.865300000000348e-05, 2.815199999999657e-05, 2.8624999999997403e-05, 2.8791999999999707e-05, 2.8388000000004188e-05, 2.7986000000000677e-05, 2.8791000000000233e-05, 2.7986000000000677e-05, 2.8138999999996472e-05, 2.8514000000000317e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.372" endtime="20201115 23:03:10.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.361" endtime="20201115 23:03:10.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.385" endtime="20201115 23:03:10.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.394" endtime="20201115 23:03:10.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.389" endtime="20201115 23:03:10.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.381" endtime="20201115 23:03:10.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.873" endtime="20201115 23:03:10.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.869" endtime="20201115 23:03:10.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.867" endtime="20201115 23:03:10.420"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.426" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.447" endtime="20201115 23:03:10.463"></status>
</kw>
<msg timestamp="20201115 23:03:10.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.444" endtime="20201115 23:03:10.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.466" endtime="20201115 23:03:10.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.472" endtime="20201115 23:03:10.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.437" endtime="20201115 23:03:10.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.431" endtime="20201115 23:03:10.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.496" endtime="20201115 23:03:10.833"></status>
</kw>
<msg timestamp="20201115 23:03:10.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045512875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045541514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.492" endtime="20201115 23:03:10.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045512875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045541514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.842" endtime="20201115 23:03:10.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.862" endtime="20201115 23:03:10.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.485" endtime="20201115 23:03:10.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.480" endtime="20201115 23:03:10.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.880" level="INFO">${RESULT} = [{'time': 0.045541514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8638999999996972e-05, 'source_diff': 2.8638999999996972e-05}, {'time': 0.045574694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:10.871" endtime="20201115 23:03:10.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.911" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:10.882" endtime="20201115 23:03:10.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.923" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.920" endtime="20201115 23:03:10.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.928" level="INFO">VALUE: [2.8638999999996972e-05, 2.8124999999996902e-05, 2.863900000000391e-05, 2.816700000000255e-05, 2.865300000000348e-05, 2.8819999999998847e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.8486000000001177e-05, 2.815300000000298e-05, 2.8138999999996472e-05, 2.865199999999707e-05, 2.815300000000298e-05, 2.8305999999998777e-05, 2.8486000000001177e-05, 2.863900000000391e-05, 2.7986000000000677e-05, 2.847300000000108e-05, 2.8305000000006242e-05, 2.8652999999996542e-05, 2.8486000000001177e-05, 2.847300000000108e-05, 2.844399999999553e-05, 2.7888999999996222e-05, 2.8833999999998416e-05, 2.8013999999999817e-05, 2.8291999999999207e-05, 2.8041999999998957e-05, 2.8152999999996042e-05, 2.7986000000000677e-05, 2.8152999999996042e-05, 2.863900000000391e-05, 2.815300000000298e-05, 2.815300000000298e-05, 2.7957999999994598e-05, 2.8652999999996542e-05, 2.8305999999998777e-05, 2.7986000000000677e-05, 2.863900000000391e-05, 2.7957999999994598e-05, 2.8000000000000247e-05, 2.865199999999707e-05, 2.8152999999996042e-05, 2.8027999999999387e-05, 2.8290999999999733e-05, 2.8347999999997486e-05, 2.8319000000005812e-05, 2.866700000000305e-05, 2.8124999999996902e-05, 2.815199999999657e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.925" endtime="20201115 23:03:10.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.913" endtime="20201115 23:03:10.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.938" endtime="20201115 23:03:10.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.947" endtime="20201115 23:03:10.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.942" endtime="20201115 23:03:10.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.934" endtime="20201115 23:03:10.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.427" endtime="20201115 23:03:10.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.423" endtime="20201115 23:03:10.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.421" endtime="20201115 23:03:10.973"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.000" endtime="20201115 23:03:11.016"></status>
</kw>
<msg timestamp="20201115 23:03:11.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.997" endtime="20201115 23:03:11.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.019" endtime="20201115 23:03:11.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.026" endtime="20201115 23:03:11.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.989" endtime="20201115 23:03:11.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.984" endtime="20201115 23:03:11.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.050" endtime="20201115 23:03:11.387"></status>
</kw>
<msg timestamp="20201115 23:03:11.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045895583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045924194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.046" endtime="20201115 23:03:11.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045895583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045924194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.396" endtime="20201115 23:03:11.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.415" endtime="20201115 23:03:11.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.039" endtime="20201115 23:03:11.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.034" endtime="20201115 23:03:11.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.433" level="INFO">${RESULT} = [{'time': 0.045924194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.861100000000477e-05, 'source_diff': 2.861100000000477e-05}, {'time': 0.045960236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:11.424" endtime="20201115 23:03:11.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:11.464" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:11.435" endtime="20201115 23:03:11.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.475" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:03:11.472" endtime="20201115 23:03:11.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.480" level="INFO">VALUE: [2.861100000000477e-05, 2.8000000000000247e-05, 2.811100000000427e-05, 2.8221999999994418e-05, 2.8666999999996112e-05, 2.866700000000305e-05, 2.8805999999999277e-05, 2.8069000000005562e-05, 2.815300000000298e-05, 2.797300000000058e-05, 2.8833000000005882e-05, 2.8138999999996472e-05, 2.8874999999997653e-05, 2.8472000000001607e-05, 2.813900000000341e-05, 2.866700000000305e-05, 2.8805999999999277e-05, 2.79170000000023e-05, 2.7986000000000677e-05, 2.868100000000262e-05, 2.8486000000001177e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.8332999999998443e-05, 2.7986000000000677e-05, 2.7972000000001107e-05, 2.8694000000002717e-05, 2.8124999999996902e-05, 2.8680999999995682e-05, 2.8319999999998346e-05, 2.8666999999996112e-05, 2.7902999999995792e-05, 2.8112000000003745e-05, 2.8847999999997986e-05, 2.8152999999996042e-05, 2.815300000000298e-05, 2.8291999999999207e-05, 2.819500000000169e-05, 2.848700000000065e-05, 2.865300000000348e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.819500000000169e-05, 2.812500000000384e-05, 2.8236000000000927e-05, 2.8624999999997403e-05, 2.863900000000391e-05, 2.8500000000000747e-05, 2.7999999999993308e-05, 2.813900000000341e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.477" endtime="20201115 23:03:11.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.466" endtime="20201115 23:03:11.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.491" endtime="20201115 23:03:11.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.499" endtime="20201115 23:03:11.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.495" endtime="20201115 23:03:11.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.486" endtime="20201115 23:03:11.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.980" endtime="20201115 23:03:11.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.976" endtime="20201115 23:03:11.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.974" endtime="20201115 23:03:11.526"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.531" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.553" endtime="20201115 23:03:11.569"></status>
</kw>
<msg timestamp="20201115 23:03:11.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.550" endtime="20201115 23:03:11.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.572" endtime="20201115 23:03:11.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.579" endtime="20201115 23:03:11.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.542" endtime="20201115 23:03:11.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.537" endtime="20201115 23:03:11.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.603" endtime="20201115 23:03:11.943"></status>
</kw>
<msg timestamp="20201115 23:03:11.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045569806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.600" endtime="20201115 23:03:11.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045569806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045598333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.952" endtime="20201115 23:03:11.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.971" endtime="20201115 23:03:11.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.592" endtime="20201115 23:03:11.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.588" endtime="20201115 23:03:11.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.988" level="INFO">${RESULT} = [{'time': 0.045598333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8527000000000413e-05, 'source_diff': 2.8527000000000413e-05}, {'time': 0.045631514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:11.979" endtime="20201115 23:03:11.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.020" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:11.990" endtime="20201115 23:03:12.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.031" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.029" endtime="20201115 23:03:12.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.038" level="INFO">VALUE: [2.8527000000000413e-05, 2.7986000000000677e-05, 2.8500000000000747e-05, 2.811100000000427e-05, 2.8818999999999373e-05, 2.8346999999998013e-05, 2.8319000000005812e-05, 2.8000000000000247e-05, 2.8402999999996292e-05, 2.8818999999999373e-05, 2.866599999999664e-05, 2.8819000000006312e-05, 2.8652999999996542e-05, 2.8652999999996542e-05, 2.865300000000348e-05, 2.818100000000212e-05, 2.8305999999998777e-05, 2.8318999999998873e-05, 2.8666999999996112e-05, 2.8166000000003077e-05, 2.8332999999998443e-05, 2.8652999999996542e-05, 2.7972000000001107e-05, 2.8152999999996042e-05, 2.8138999999996472e-05, 2.8486000000001177e-05, 2.8458000000002037e-05, 2.847300000000108e-05, 2.8304999999999303e-05, 2.866700000000305e-05, 2.8166000000003077e-05, 2.865199999999707e-05, 2.8332999999998443e-05, 2.8652000000004008e-05, 2.842999999999596e-05, 2.8818999999999373e-05, 2.8722000000001857e-05, 2.8833999999998416e-05, 2.8819999999998847e-05, 2.7958000000001537e-05, 2.8804999999999803e-05, 2.8805999999999277e-05, 2.8305999999998777e-05, 2.816700000000255e-05, 2.813900000000341e-05, 2.8318999999998873e-05, 2.8472000000001607e-05, 2.865300000000348e-05, 2.7985999999993738e-05, 2.8000000000000247e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.033" endtime="20201115 23:03:12.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.022" endtime="20201115 23:03:12.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.047" endtime="20201115 23:03:12.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.055" endtime="20201115 23:03:12.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.051" endtime="20201115 23:03:12.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.042" endtime="20201115 23:03:12.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.533" endtime="20201115 23:03:12.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.529" endtime="20201115 23:03:12.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.527" endtime="20201115 23:03:12.082"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.087" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.110" endtime="20201115 23:03:12.125"></status>
</kw>
<msg timestamp="20201115 23:03:12.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.106" endtime="20201115 23:03:12.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.128" endtime="20201115 23:03:12.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.135" endtime="20201115 23:03:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.099" endtime="20201115 23:03:12.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.092" endtime="20201115 23:03:12.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.158" endtime="20201115 23:03:12.494"></status>
</kw>
<msg timestamp="20201115 23:03:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04641425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:12.155" endtime="20201115 23:03:12.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046386111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04641425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:12.504" endtime="20201115 23:03:12.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.523" endtime="20201115 23:03:12.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.148" endtime="20201115 23:03:12.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.143" endtime="20201115 23:03:12.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:12.541" level="INFO">${RESULT} = [{'time': 0.04641425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8138999999996472e-05, 'source_diff': 2.8138999999996472e-05}, {'time': 0.046450403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:12.532" endtime="20201115 23:03:12.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.574" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:12.543" endtime="20201115 23:03:12.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.586" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.583" endtime="20201115 23:03:12.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.592" level="INFO">VALUE: [2.8138999999996472e-05, 2.794500000000144e-05, 2.820900000000126e-05, 2.7986000000000677e-05, 2.8318999999998873e-05, 2.7958000000001537e-05, 2.8833999999998416e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.868100000000262e-05, 2.8000000000000247e-05, 2.8180999999995182e-05, 2.8486000000001177e-05, 2.8833999999998416e-05, 2.833300000000538e-05, 2.8000000000000247e-05, 2.8124999999996902e-05, 2.8514000000000317e-05, 2.8333999999997916e-05, 2.7986000000000677e-05, 2.8832999999998943e-05, 2.8652000000004008e-05, 2.7972000000001107e-05, 2.847300000000108e-05, 2.813900000000341e-05, 2.8152000000003508e-05, 2.8514000000000317e-05, 2.8013999999999817e-05, 2.8471999999994668e-05, 2.8818999999999373e-05, 2.8805999999999277e-05, 2.8290999999999733e-05, 2.8166000000003077e-05, 2.7986000000000677e-05, 2.8152999999996042e-05, 2.8194000000002217e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8000000000000247e-05, 2.8013000000000343e-05, 2.8000000000000247e-05, 2.8666999999996112e-05, 2.8486000000001177e-05, 2.8318999999998873e-05, 2.8764000000000567e-05, 2.886100000000502e-05, 2.842999999999596e-05, 2.8818999999999373e-05, 2.7986000000000677e-05, 2.8486000000001177e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.588" endtime="20201115 23:03:12.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.576" endtime="20201115 23:03:12.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.601" endtime="20201115 23:03:12.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.611" endtime="20201115 23:03:12.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.605" endtime="20201115 23:03:12.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.597" endtime="20201115 23:03:12.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.088" endtime="20201115 23:03:12.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.084" endtime="20201115 23:03:12.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.082" endtime="20201115 23:03:12.637"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.642" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.664" endtime="20201115 23:03:12.680"></status>
</kw>
<msg timestamp="20201115 23:03:12.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.661" endtime="20201115 23:03:12.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.683" endtime="20201115 23:03:12.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.690" endtime="20201115 23:03:12.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.653" endtime="20201115 23:03:12.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.648" endtime="20201115 23:03:12.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.713" endtime="20201115 23:03:13.050"></status>
</kw>
<msg timestamp="20201115 23:03:13.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045585681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045614, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:12.710" endtime="20201115 23:03:13.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045585681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045614, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:13.059" endtime="20201115 23:03:13.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.079" endtime="20201115 23:03:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.702" endtime="20201115 23:03:13.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.698" endtime="20201115 23:03:13.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.096" level="INFO">${RESULT} = [{'time': 0.045614, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8318999999998873e-05, 'source_diff': 2.8318999999998873e-05}, {'time': 0.045652972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:13.087" endtime="20201115 23:03:13.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.127" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:13.098" endtime="20201115 23:03:13.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.138" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.136" endtime="20201115 23:03:13.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.144" level="INFO">VALUE: [2.8318999999998873e-05, 2.7986000000000677e-05, 2.815300000000298e-05, 2.8360999999997583e-05, 2.848700000000065e-05, 2.8805999999999277e-05, 2.8208000000001787e-05, 2.8818999999999373e-05, 2.8680000000003147e-05, 2.812500000000384e-05, 2.816700000000255e-05, 2.8819999999998847e-05, 2.8652999999996542e-05, 2.8471999999994668e-05, 2.8318999999998873e-05, 2.8305999999998777e-05, 2.8318999999998873e-05, 2.8138000000003938e-05, 2.8318999999998873e-05, 2.8818999999999373e-05, 2.8000000000000247e-05, 2.8804999999999803e-05, 2.815300000000298e-05, 2.8819999999998847e-05, 2.8319999999998346e-05, 2.8152000000003508e-05, 2.84579999999951e-05, 2.8166999999995612e-05, 2.8486000000001177e-05, 2.8804999999999803e-05, 2.7986000000000677e-05, 2.8152000000003508e-05, 2.8319999999998346e-05, 2.8833000000005882e-05, 2.797300000000058e-05, 2.847300000000108e-05, 2.8818999999999373e-05, 2.80970000000047e-05, 2.8486000000001177e-05, 2.8318999999998873e-05, 2.813900000000341e-05, 2.8304999999999303e-05, 2.8486000000001177e-05, 2.815300000000298e-05, 2.8819999999998847e-05, 2.8874999999997653e-05, 2.8138999999996472e-05, 2.8319999999998346e-05, 2.8013999999999817e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.141" endtime="20201115 23:03:13.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.129" endtime="20201115 23:03:13.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.157" endtime="20201115 23:03:13.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.165" endtime="20201115 23:03:13.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.161" endtime="20201115 23:03:13.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.150" endtime="20201115 23:03:13.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.644" endtime="20201115 23:03:13.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.640" endtime="20201115 23:03:13.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.638" endtime="20201115 23:03:13.192"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.197" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.219" endtime="20201115 23:03:13.235"></status>
</kw>
<msg timestamp="20201115 23:03:13.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.216" endtime="20201115 23:03:13.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.238" endtime="20201115 23:03:13.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.245" endtime="20201115 23:03:13.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.208" endtime="20201115 23:03:13.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.202" endtime="20201115 23:03:13.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.269" endtime="20201115 23:03:13.610"></status>
</kw>
<msg timestamp="20201115 23:03:13.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045785708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045814347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.266" endtime="20201115 23:03:13.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045785708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045814347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.619" endtime="20201115 23:03:13.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.638" endtime="20201115 23:03:13.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.258" endtime="20201115 23:03:13.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.253" endtime="20201115 23:03:13.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.656" level="INFO">${RESULT} = [{'time': 0.045814347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8638999999996972e-05, 'source_diff': 2.8638999999996972e-05}, {'time': 0.045850431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:13.647" endtime="20201115 23:03:13.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.687" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:13.658" endtime="20201115 23:03:13.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.698" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.696" endtime="20201115 23:03:13.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.704" level="INFO">VALUE: [2.8638999999996972e-05, 2.8124999999996902e-05, 2.813900000000341e-05, 2.8472000000001607e-05, 2.8290999999999733e-05, 2.866599999999664e-05, 2.8472000000001607e-05, 2.8819999999998847e-05, 2.7971999999994168e-05, 2.8486000000001177e-05, 2.7986000000000677e-05, 2.863900000000391e-05, 2.8638999999996972e-05, 2.8485999999994238e-05, 2.8500000000000747e-05, 2.8791999999999707e-05, 2.8000000000000247e-05, 2.8360999999997583e-05, 2.8652999999996542e-05, 2.815300000000298e-05, 2.8388999999996722e-05, 2.815300000000298e-05, 2.8319999999998346e-05, 2.8818999999999373e-05, 2.8652000000004008e-05, 2.8152999999996042e-05, 2.7972000000001107e-05, 2.8318999999998873e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8638999999996972e-05, 2.8611999999997306e-05, 2.8318999999998873e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.7986000000000677e-05, 2.8305999999998777e-05, 2.8124999999996902e-05, 2.8514000000000317e-05, 2.8652999999996542e-05, 2.8818999999999373e-05, 2.8374999999997152e-05, 2.8360999999997583e-05, 2.8486000000001177e-05, 2.8360999999997583e-05, 2.795900000000101e-05, 2.7986000000000677e-05, 2.815300000000298e-05, 2.790300000000273e-05, 2.8277999999999637e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.700" endtime="20201115 23:03:13.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.689" endtime="20201115 23:03:13.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.715" endtime="20201115 23:03:13.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.723" endtime="20201115 23:03:13.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.719" endtime="20201115 23:03:13.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.710" endtime="20201115 23:03:13.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.198" endtime="20201115 23:03:13.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.194" endtime="20201115 23:03:13.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.193" endtime="20201115 23:03:13.750"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.755" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.777" endtime="20201115 23:03:13.793"></status>
</kw>
<msg timestamp="20201115 23:03:13.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.774" endtime="20201115 23:03:13.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.796" endtime="20201115 23:03:13.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.803" endtime="20201115 23:03:13.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.766" endtime="20201115 23:03:13.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.760" endtime="20201115 23:03:13.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.827" endtime="20201115 23:03:14.166"></status>
</kw>
<msg timestamp="20201115 23:03:14.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045787556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.823" endtime="20201115 23:03:14.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045787556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.175" endtime="20201115 23:03:14.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.194" endtime="20201115 23:03:14.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.816" endtime="20201115 23:03:14.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.811" endtime="20201115 23:03:14.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.211" level="INFO">${RESULT} = [{'time': 0.045787556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.511199999999687e-05, 'source_diff': 3.511199999999687e-05}, {'time': 0.045827722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:14.202" endtime="20201115 23:03:14.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.243" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:14.214" endtime="20201115 23:03:14.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.254" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.252" endtime="20201115 23:03:14.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.261" level="INFO">VALUE: [3.511199999999687e-05, 3.51250000000039e-05, 3.590200000000432e-05, 3.5832999999999005e-05, 3.5152999999996104e-05, 3.494400000000203e-05, 3.5624999999997464e-05, 3.580599999999934e-05, 3.513900000000347e-05, 3.544400000000253e-05, 3.54580000000021e-05, 3.51250000000039e-05, 3.547200000000167e-05, 3.579199999999977e-05, 3.538900000000372e-05, 3.579199999999977e-05, 3.511100000000433e-05, 3.565199999999713e-05, 3.5860999999998144e-05, 3.595900000000207e-05, 3.572200000000192e-05, 3.5124999999996964e-05, 3.561100000000483e-05, 3.5082999999998254e-05, 3.525000000000056e-05, 3.529200000000621e-05, 3.497200000000117e-05, 3.5124999999996964e-05, 3.547199999999473e-05, 3.576400000000063e-05, 3.5290999999999795e-05, 3.5638999999997034e-05, 3.580599999999934e-05, 3.548600000000124e-05, 3.515199999999663e-05, 3.547200000000167e-05, 3.545900000000157e-05, 3.5445000000002e-05, 3.4902999999995854e-05, 3.5290999999999795e-05, 3.54580000000021e-05, 3.5110999999997394e-05, 3.5818999999999435e-05, 3.597300000000164e-05, 3.54580000000021e-05, 3.5445000000002e-05, 3.529199999999927e-05, 3.49580000000016e-05, 3.544399999999559e-05, 3.523600000000099e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.256" endtime="20201115 23:03:14.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.245" endtime="20201115 23:03:14.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.270" endtime="20201115 23:03:14.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.278" endtime="20201115 23:03:14.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.274" endtime="20201115 23:03:14.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.265" endtime="20201115 23:03:14.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.757" endtime="20201115 23:03:14.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.752" endtime="20201115 23:03:14.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.751" endtime="20201115 23:03:14.305"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.332" endtime="20201115 23:03:14.348"></status>
</kw>
<msg timestamp="20201115 23:03:14.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.328" endtime="20201115 23:03:14.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.351" endtime="20201115 23:03:14.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.357" endtime="20201115 23:03:14.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.321" endtime="20201115 23:03:14.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.315" endtime="20201115 23:03:14.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.381" endtime="20201115 23:03:14.717"></status>
</kw>
<msg timestamp="20201115 23:03:14.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045697972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.378" endtime="20201115 23:03:14.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045662653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045697972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.727" endtime="20201115 23:03:14.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.746" endtime="20201115 23:03:14.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.370" endtime="20201115 23:03:14.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.366" endtime="20201115 23:03:14.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.764" level="INFO">${RESULT} = [{'time': 0.045697972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5319000000005873e-05, 'source_diff': 3.5319000000005873e-05}, {'time': 0.045743222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:14.755" endtime="20201115 23:03:14.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:14.766" endtime="20201115 23:03:14.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.808" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.806" endtime="20201115 23:03:14.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.815" level="INFO">VALUE: [3.5319000000005873e-05, 3.552799999999995e-05, 3.49580000000016e-05, 3.52779999999997e-05, 3.5638999999997034e-05, 3.581999999999891e-05, 3.545799999999516e-05, 3.51250000000039e-05, 3.583399999999848e-05, 3.567999999999627e-05, 3.580599999999934e-05, 3.51250000000039e-05, 3.547200000000167e-05, 3.515300000000304e-05, 3.5652999999996604e-05, 3.5360999999997644e-05, 3.5610999999997894e-05, 3.565300000000354e-05, 3.5152999999996104e-05, 3.563900000000397e-05, 3.597199999999523e-05, 3.497200000000117e-05, 3.570900000000182e-05, 3.49580000000016e-05, 3.56250000000044e-05, 3.5304999999999365e-05, 3.497200000000117e-05, 3.5318999999998935e-05, 3.581999999999891e-05, 3.5818999999999435e-05, 3.497199999999423e-05, 3.529199999999927e-05, 3.51659999999962e-05, 3.566600000000364e-05, 3.51659999999962e-05, 3.5804999999999865e-05, 3.5638999999997034e-05, 3.5791000000000295e-05, 3.529199999999927e-05, 3.5152999999996104e-05, 3.54580000000021e-05, 3.54580000000021e-05, 3.550000000000081e-05, 3.602800000000045e-05, 3.498600000000074e-05, 3.515300000000304e-05, 3.5804999999999865e-05, 3.497199999999423e-05, 3.547200000000167e-05, 3.5318999999998935e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.810" endtime="20201115 23:03:14.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.799" endtime="20201115 23:03:14.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.824" endtime="20201115 23:03:14.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.832" endtime="20201115 23:03:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.828" endtime="20201115 23:03:14.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.819" endtime="20201115 23:03:14.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.311" endtime="20201115 23:03:14.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.307" endtime="20201115 23:03:14.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.306" endtime="20201115 23:03:14.859"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.886" endtime="20201115 23:03:14.902"></status>
</kw>
<msg timestamp="20201115 23:03:14.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.883" endtime="20201115 23:03:14.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.905" endtime="20201115 23:03:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.912" endtime="20201115 23:03:14.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.875" endtime="20201115 23:03:14.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.869" endtime="20201115 23:03:14.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.936" endtime="20201115 23:03:15.274"></status>
</kw>
<msg timestamp="20201115 23:03:15.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045508764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.932" endtime="20201115 23:03:15.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045508764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045544542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.284" endtime="20201115 23:03:15.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.302" endtime="20201115 23:03:15.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.925" endtime="20201115 23:03:15.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.920" endtime="20201115 23:03:15.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.320" level="INFO">${RESULT} = [{'time': 0.045544542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57780000000002e-05, 'source_diff': 3.57780000000002e-05}, {'time': 0.045587792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:15.311" endtime="20201115 23:03:15.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:15.322" endtime="20201115 23:03:15.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.362" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.360" endtime="20201115 23:03:15.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.369" level="INFO">VALUE: [3.57780000000002e-05, 3.581999999999891e-05, 3.579199999999977e-05, 3.530600000000578e-05, 3.5166999999995674e-05, 3.580599999999934e-05, 3.529200000000621e-05, 3.570800000000235e-05, 3.495799999999466e-05, 3.547200000000167e-05, 3.5610999999997894e-05, 3.545900000000157e-05, 3.5054999999999115e-05, 3.5318999999998935e-05, 3.493100000000193e-05, 3.5124999999996964e-05, 3.513900000000347e-05, 3.548600000000124e-05, 3.493000000000246e-05, 3.597200000000217e-05, 3.594399999999609e-05, 3.5290999999999795e-05, 3.552799999999995e-05, 3.581999999999891e-05, 3.5124999999996964e-05, 3.54580000000021e-05, 3.529199999999927e-05, 3.518100000000218e-05, 3.529199999999927e-05, 3.5624999999997464e-05, 3.498600000000074e-05, 3.5624999999997464e-05, 3.5110999999997394e-05, 3.494399999999509e-05, 3.579199999999977e-05, 3.538799999999731e-05, 3.5124999999996964e-05, 3.5624999999997464e-05, 3.57780000000002e-05, 3.513900000000347e-05, 3.52779999999997e-05, 3.5680999999995744e-05, 3.547200000000167e-05, 3.595799999999566e-05, 3.5694999999995314e-05, 3.5445000000002e-05, 3.5445000000002e-05, 3.526400000000013e-05, 3.5277000000000225e-05, 3.57780000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.365" endtime="20201115 23:03:15.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.353" endtime="20201115 23:03:15.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.378" endtime="20201115 23:03:15.381"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.386" endtime="20201115 23:03:15.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.382" endtime="20201115 23:03:15.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.373" endtime="20201115 23:03:15.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.866" endtime="20201115 23:03:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.861" endtime="20201115 23:03:15.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.860" endtime="20201115 23:03:15.413"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.418" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.440" endtime="20201115 23:03:15.457"></status>
</kw>
<msg timestamp="20201115 23:03:15.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.437" endtime="20201115 23:03:15.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.461" endtime="20201115 23:03:15.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.468" endtime="20201115 23:03:15.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.429" endtime="20201115 23:03:15.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.423" endtime="20201115 23:03:15.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.492" endtime="20201115 23:03:15.828"></status>
</kw>
<msg timestamp="20201115 23:03:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045573042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045608514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.488" endtime="20201115 23:03:15.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045573042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045608514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.838" endtime="20201115 23:03:15.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.857" endtime="20201115 23:03:15.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.481" endtime="20201115 23:03:15.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.476" endtime="20201115 23:03:15.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.874" level="INFO">${RESULT} = [{'time': 0.045608514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.547200000000167e-05, 'source_diff': 3.547200000000167e-05}, {'time': 0.045651611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:15.865" endtime="20201115 23:03:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.905" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:15.876" endtime="20201115 23:03:15.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.916" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.914" endtime="20201115 23:03:15.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.923" level="INFO">VALUE: [3.547200000000167e-05, 3.572200000000192e-05, 3.530599999999884e-05, 3.494399999999509e-05, 3.52779999999997e-05, 3.51250000000039e-05, 3.498600000000074e-05, 3.55979999999978e-05, 3.5290999999999795e-05, 3.5388999999996784e-05, 3.5610999999997894e-05, 3.49580000000016e-05, 3.579199999999977e-05, 3.49580000000016e-05, 3.544400000000253e-05, 3.529199999999927e-05, 3.52779999999997e-05, 3.551400000000038e-05, 3.561199999999737e-05, 3.54580000000021e-05, 3.49580000000016e-05, 3.511100000000433e-05, 3.52779999999997e-05, 3.529199999999927e-05, 3.5110999999997394e-05, 3.5096999999997824e-05, 3.5124999999996964e-05, 3.5138000000004e-05, 3.52779999999997e-05, 3.495900000000107e-05, 3.5277000000000225e-05, 3.5610999999997894e-05, 3.576400000000063e-05, 3.5610999999997894e-05, 3.495799999999466e-05, 3.5610999999997894e-05, 3.602800000000045e-05, 3.5402999999996354e-05, 3.49580000000016e-05, 3.545900000000157e-05, 3.533399999999798e-05, 3.523600000000099e-05, 3.511200000000381e-05, 3.5804999999999865e-05, 3.545900000000157e-05, 3.49580000000016e-05, 3.52779999999997e-05, 3.513900000000347e-05, 3.597300000000164e-05, 3.579199999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.919" endtime="20201115 23:03:15.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.907" endtime="20201115 23:03:15.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.932" endtime="20201115 23:03:15.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.940" endtime="20201115 23:03:15.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.936" endtime="20201115 23:03:15.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.928" endtime="20201115 23:03:15.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.419" endtime="20201115 23:03:15.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.415" endtime="20201115 23:03:15.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.414" endtime="20201115 23:03:15.967"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.972" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.995" endtime="20201115 23:03:16.012"></status>
</kw>
<msg timestamp="20201115 23:03:16.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.992" endtime="20201115 23:03:16.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.015" endtime="20201115 23:03:16.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.022" endtime="20201115 23:03:16.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.984" endtime="20201115 23:03:16.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.978" endtime="20201115 23:03:16.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.047" endtime="20201115 23:03:16.385"></status>
</kw>
<msg timestamp="20201115 23:03:16.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046983542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047018653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.043" endtime="20201115 23:03:16.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046983542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047018653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.395" endtime="20201115 23:03:16.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.413" endtime="20201115 23:03:16.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.036" endtime="20201115 23:03:16.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.031" endtime="20201115 23:03:16.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.431" level="INFO">${RESULT} = [{'time': 0.047018653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5110999999997394e-05, 'source_diff': 3.5110999999997394e-05}, {'time': 0.047064708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:16.422" endtime="20201115 23:03:16.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:16.462" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:16.433" endtime="20201115 23:03:16.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.473" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:03:16.471" endtime="20201115 23:03:16.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.480" level="INFO">VALUE: [3.5110999999997394e-05, 3.5568999999999185e-05, 3.52779999999997e-05, 3.51250000000039e-05, 3.5624999999997464e-05, 3.593000000000346e-05, 3.5804999999999865e-05, 3.541700000000286e-05, 3.57780000000002e-05, 3.4888999999996284e-05, 3.495900000000107e-05, 3.576400000000063e-05, 3.500000000000031e-05, 3.57780000000002e-05, 3.5610999999997894e-05, 3.5596999999998324e-05, 3.5791000000000295e-05, 3.568100000000268e-05, 3.554199999999952e-05, 3.547200000000167e-05, 3.5277000000000225e-05, 3.530599999999884e-05, 3.563900000000397e-05, 3.532000000000535e-05, 3.494399999999509e-05, 3.506999999999816e-05, 3.579199999999977e-05, 3.5138999999996534e-05, 3.529199999999927e-05, 3.5445000000002e-05, 3.54580000000021e-05, 3.5318999999998935e-05, 3.547200000000167e-05, 3.49580000000016e-05, 3.5610999999997894e-05, 3.5110999999997394e-05, 3.5138999999996534e-05, 3.5638999999997034e-05, 3.5610999999997894e-05, 3.561200000000431e-05, 3.5624999999997464e-05, 3.5777000000000725e-05, 3.5791000000000295e-05, 3.5472999999994204e-05, 3.57780000000002e-05, 3.5818999999999435e-05, 3.495900000000107e-05, 3.5290999999999795e-05, 3.495900000000107e-05, 3.597200000000217e-05]</msg>
<status status="PASS" starttime="20201115 23:03:16.476" endtime="20201115 23:03:16.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.464" endtime="20201115 23:03:16.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.489" endtime="20201115 23:03:16.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:16.497" endtime="20201115 23:03:16.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.493" endtime="20201115 23:03:16.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.484" endtime="20201115 23:03:16.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.974" endtime="20201115 23:03:16.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.970" endtime="20201115 23:03:16.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.968" endtime="20201115 23:03:16.525"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.530" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.552" endtime="20201115 23:03:16.568"></status>
</kw>
<msg timestamp="20201115 23:03:16.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.548" endtime="20201115 23:03:16.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.571" endtime="20201115 23:03:16.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.577" endtime="20201115 23:03:16.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.541" endtime="20201115 23:03:16.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.535" endtime="20201115 23:03:16.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.601" endtime="20201115 23:03:16.937"></status>
</kw>
<msg timestamp="20201115 23:03:16.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046363569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046398819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.597" endtime="20201115 23:03:16.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046363569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046398819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.947" endtime="20201115 23:03:16.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.965" endtime="20201115 23:03:16.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.590" endtime="20201115 23:03:16.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.585" endtime="20201115 23:03:16.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.983" level="INFO">${RESULT} = [{'time': 0.046398819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.525000000000056e-05, 'source_diff': 3.525000000000056e-05}, {'time': 0.046439, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:03:16.974" endtime="20201115 23:03:16.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.017" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:16.985" endtime="20201115 23:03:17.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.028" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.025" endtime="20201115 23:03:17.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.035" level="INFO">VALUE: [3.525000000000056e-05, 3.547200000000167e-05, 3.5638999999997034e-05, 3.545799999999516e-05, 3.56250000000044e-05, 3.529199999999927e-05, 3.5290999999999795e-05, 3.545900000000157e-05, 3.5624999999997464e-05, 3.5124999999996964e-05, 3.5110999999997394e-05, 3.49580000000016e-05, 3.561100000000483e-05, 3.51250000000039e-05, 3.49450000000015e-05, 3.579199999999977e-05, 3.516700000000261e-05, 3.579199999999977e-05, 3.5110999999997394e-05, 3.526400000000013e-05, 3.5804999999999865e-05, 3.5110999999997394e-05, 3.561100000000483e-05, 3.5846999999998574e-05, 3.5610999999997894e-05, 3.5791000000000295e-05, 3.4944999999994564e-05, 3.544400000000253e-05, 3.576400000000063e-05, 3.5444999999995064e-05, 3.575000000000106e-05, 3.547200000000167e-05, 3.600000000000131e-05, 3.5624999999997464e-05, 3.563900000000397e-05, 3.547200000000167e-05, 3.541599999999645e-05, 3.57780000000002e-05, 3.5791000000000295e-05, 3.597199999999523e-05, 3.595799999999566e-05, 3.5638999999997034e-05, 3.494399999999509e-05, 3.51250000000039e-05, 3.545799999999516e-05, 3.513900000000347e-05, 3.529199999999927e-05, 3.5624999999997464e-05, 3.570900000000182e-05, 3.54580000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.030" endtime="20201115 23:03:17.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.018" endtime="20201115 23:03:17.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.049" endtime="20201115 23:03:17.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.058" endtime="20201115 23:03:17.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.054" endtime="20201115 23:03:17.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.045" endtime="20201115 23:03:17.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.531" endtime="20201115 23:03:17.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.527" endtime="20201115 23:03:17.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.525" endtime="20201115 23:03:17.085"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.091" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.112" endtime="20201115 23:03:17.128"></status>
</kw>
<msg timestamp="20201115 23:03:17.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.109" endtime="20201115 23:03:17.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.132" endtime="20201115 23:03:17.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.138" endtime="20201115 23:03:17.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.102" endtime="20201115 23:03:17.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.096" endtime="20201115 23:03:17.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.162" endtime="20201115 23:03:17.500"></status>
</kw>
<msg timestamp="20201115 23:03:17.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045922653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045958444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.158" endtime="20201115 23:03:17.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045922653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045958444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.509" endtime="20201115 23:03:17.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.528" endtime="20201115 23:03:17.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.151" endtime="20201115 23:03:17.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.146" endtime="20201115 23:03:17.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.546" level="INFO">${RESULT} = [{'time': 0.045958444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5791000000000295e-05, 'source_diff': 3.5791000000000295e-05}, {'time': 0.046003639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:17.537" endtime="20201115 23:03:17.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.577" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:17.548" endtime="20201115 23:03:17.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.588" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.586" endtime="20201115 23:03:17.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.596" level="INFO">VALUE: [3.5791000000000295e-05, 3.598600000000174e-05, 3.5624999999997464e-05, 3.5624999999997464e-05, 3.561200000000431e-05, 3.5277000000000225e-05, 3.54580000000021e-05, 3.5791000000000295e-05, 3.580599999999934e-05, 3.5846999999998574e-05, 3.5346999999998074e-05, 3.5290999999999795e-05, 3.544400000000253e-05, 3.556999999999866e-05, 3.529199999999927e-05, 3.5152999999996104e-05, 3.495900000000107e-05, 3.511199999999687e-05, 3.529199999999927e-05, 3.5124999999996964e-05, 3.579199999999977e-05, 3.529199999999927e-05, 3.52779999999997e-05, 3.5110999999997394e-05, 3.579199999999977e-05, 3.49450000000015e-05, 3.5054999999999115e-05, 3.5610999999997894e-05, 3.495799999999466e-05, 3.595900000000207e-05, 3.580599999999934e-05, 3.5110999999997394e-05, 3.51250000000039e-05, 3.5624999999997464e-05, 3.568100000000268e-05, 3.52779999999997e-05, 3.544400000000253e-05, 3.5445000000002e-05, 3.5110999999997394e-05, 3.501399999999988e-05, 3.545900000000157e-05, 3.5110999999997394e-05, 3.547300000000114e-05, 3.5777000000000725e-05, 3.5304999999999365e-05, 3.543100000000243e-05, 3.5152999999996104e-05, 3.5096999999997824e-05, 3.579199999999977e-05, 3.515300000000304e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.591" endtime="20201115 23:03:17.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.579" endtime="20201115 23:03:17.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.605" endtime="20201115 23:03:17.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.613" endtime="20201115 23:03:17.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.609" endtime="20201115 23:03:17.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.600" endtime="20201115 23:03:17.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.092" endtime="20201115 23:03:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.088" endtime="20201115 23:03:17.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.086" endtime="20201115 23:03:17.640"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.667" endtime="20201115 23:03:17.683"></status>
</kw>
<msg timestamp="20201115 23:03:17.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.663" endtime="20201115 23:03:17.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.686" endtime="20201115 23:03:17.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.693" endtime="20201115 23:03:17.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.656" endtime="20201115 23:03:17.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.650" endtime="20201115 23:03:17.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.716" endtime="20201115 23:03:18.054"></status>
</kw>
<msg timestamp="20201115 23:03:18.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045511042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045553486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.713" endtime="20201115 23:03:18.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045511042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045553486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.064" endtime="20201115 23:03:18.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.083" endtime="20201115 23:03:18.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.706" endtime="20201115 23:03:18.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.701" endtime="20201115 23:03:18.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.102" level="INFO">${RESULT} = [{'time': 0.045553486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.244399999999565e-05, 'source_diff': 4.244399999999565e-05}, {'time': 0.045602653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:18.092" endtime="20201115 23:03:18.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.134" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:18.105" endtime="20201115 23:03:18.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.145" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.143" endtime="20201115 23:03:18.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.152" level="INFO">VALUE: [4.244399999999565e-05, 4.277800000000026e-05, 4.279199999999983e-05, 4.1945000000001564e-05, 4.226400000000019e-05, 4.2568999999999246e-05, 4.2554999999999676e-05, 4.277700000000079e-05, 4.276400000000069e-05, 4.2596999999998386e-05, 4.291599999999701e-05, 4.279199999999983e-05, 4.2431000000002494e-05, 4.242999999999608e-05, 4.294400000000309e-05, 4.2082999999998316e-05, 4.276400000000069e-05, 4.2110999999997456e-05, 4.2431000000002494e-05, 4.2068999999998746e-05, 4.222200000000148e-05, 4.2096999999997886e-05, 4.225000000000062e-05, 4.201300000000047e-05, 4.192999999999558e-05, 4.251400000000044e-05, 4.247200000000173e-05, 4.244400000000259e-05, 4.277799999999332e-05, 4.2874999999997776e-05, 4.227799999999976e-05, 4.279199999999983e-05, 4.206999999999822e-05, 4.226400000000019e-05, 4.20980000000043e-05, 4.2445000000002064e-05, 4.226400000000019e-05, 4.2110999999997456e-05, 4.269400000000284e-05, 4.2944999999995626e-05, 4.2459000000001634e-05, 4.2304999999999426e-05, 4.290200000000438e-05, 4.2459000000001634e-05, 4.245800000000216e-05, 4.195799999999472e-05, 4.2624999999997526e-05, 4.294400000000309e-05, 4.1931000000001994e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.147" endtime="20201115 23:03:18.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.136" endtime="20201115 23:03:18.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.161" endtime="20201115 23:03:18.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.169" endtime="20201115 23:03:18.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.165" endtime="20201115 23:03:18.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.156" endtime="20201115 23:03:18.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.646" endtime="20201115 23:03:18.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.642" endtime="20201115 23:03:18.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.641" endtime="20201115 23:03:18.196"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.223" endtime="20201115 23:03:18.239"></status>
</kw>
<msg timestamp="20201115 23:03:18.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.219" endtime="20201115 23:03:18.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.243" endtime="20201115 23:03:18.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.249" endtime="20201115 23:03:18.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.212" endtime="20201115 23:03:18.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.206" endtime="20201115 23:03:18.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.273" endtime="20201115 23:03:18.612"></status>
</kw>
<msg timestamp="20201115 23:03:18.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045819042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:18.269" endtime="20201115 23:03:18.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045819042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045861, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:18.621" endtime="20201115 23:03:18.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.640" endtime="20201115 23:03:18.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.262" endtime="20201115 23:03:18.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.257" endtime="20201115 23:03:18.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.658" level="INFO">${RESULT} = [{'time': 0.045861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195800000000166e-05, 'source_diff': 4.195800000000166e-05}, {'time': 0.045908153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:03:18.649" endtime="20201115 23:03:18.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.690" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:18.660" endtime="20201115 23:03:18.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.703" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.700" endtime="20201115 23:03:18.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.710" level="INFO">VALUE: [4.195800000000166e-05, 4.1945000000001564e-05, 4.2610999999997956e-05, 4.2445000000002064e-05, 4.293000000000352e-05, 4.2431000000002494e-05, 4.2931000000002995e-05, 4.243000000000302e-05, 4.227799999999976e-05, 4.1959000000001134e-05, 4.2430999999995556e-05, 4.2945000000002564e-05, 4.2290999999999856e-05, 4.245800000000216e-05, 4.2445000000002064e-05, 4.227799999999976e-05, 4.2124999999997026e-05, 4.2611000000004895e-05, 4.229199999999933e-05, 4.277800000000026e-05, 4.226400000000019e-05, 4.2624999999997526e-05, 4.277800000000026e-05, 4.2416999999995986e-05, 4.225000000000062e-05, 4.222200000000148e-05, 4.227799999999976e-05, 4.206999999999822e-05, 4.233399999999804e-05, 4.2959000000002134e-05, 4.2945000000002564e-05, 4.193000000000252e-05, 4.226300000000072e-05, 4.2610999999997956e-05, 4.193000000000252e-05, 4.295800000000266e-05, 4.2459000000001634e-05, 4.245800000000216e-05, 4.227799999999976e-05, 4.2096999999997886e-05, 4.2610999999997956e-05, 4.245800000000216e-05, 4.223600000000105e-05, 4.276400000000069e-05, 4.2459000000001634e-05, 4.2624999999997526e-05, 4.2582999999998816e-05, 4.1931000000001994e-05, 4.2625000000004465e-05, 4.2958999999995195e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.705" endtime="20201115 23:03:18.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.692" endtime="20201115 23:03:18.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.719" endtime="20201115 23:03:18.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.727" endtime="20201115 23:03:18.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.722" endtime="20201115 23:03:18.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.714" endtime="20201115 23:03:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.202" endtime="20201115 23:03:18.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.198" endtime="20201115 23:03:18.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.197" endtime="20201115 23:03:18.753"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.759" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.780" endtime="20201115 23:03:18.797"></status>
</kw>
<msg timestamp="20201115 23:03:18.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.777" endtime="20201115 23:03:18.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.800" endtime="20201115 23:03:18.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.806" endtime="20201115 23:03:18.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.770" endtime="20201115 23:03:18.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.764" endtime="20201115 23:03:18.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.830" endtime="20201115 23:03:19.166"></status>
</kw>
<msg timestamp="20201115 23:03:19.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045420722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045463014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.826" endtime="20201115 23:03:19.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045420722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045463014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.175" endtime="20201115 23:03:19.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.194" endtime="20201115 23:03:19.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.819" endtime="20201115 23:03:19.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.815" endtime="20201115 23:03:19.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.211" level="INFO">${RESULT} = [{'time': 0.045463014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.229200000000627e-05, 'source_diff': 4.229200000000627e-05}, {'time': 0.045510972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.202" endtime="20201115 23:03:19.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.245" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:19.214" endtime="20201115 23:03:19.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.256" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.253" endtime="20201115 23:03:19.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.262" level="INFO">VALUE: [4.229200000000627e-05, 4.2804999999999926e-05, 4.192999999999558e-05, 4.204199999999908e-05, 4.275000000000112e-05, 4.194400000000209e-05, 4.1917000000002425e-05, 4.226400000000019e-05, 4.223600000000105e-05, 4.250000000000087e-05, 4.208399999999779e-05, 4.245800000000216e-05, 4.2959000000002134e-05, 4.225000000000062e-05, 4.2597000000005325e-05, 4.293000000000352e-05, 4.258399999999829e-05, 4.194400000000209e-05, 4.2931000000002995e-05, 4.225000000000062e-05, 4.2110999999997456e-05, 4.2610999999997956e-05, 4.2596999999998386e-05, 4.276400000000069e-05, 4.275000000000112e-05, 4.2416999999995986e-05, 4.258399999999829e-05, 4.258399999999829e-05, 4.206999999999822e-05, 4.243000000000302e-05, 4.2290999999999856e-05, 4.20980000000043e-05, 4.2096999999997886e-05, 4.243000000000302e-05, 4.211200000000387e-05, 4.1917000000002425e-05, 4.2625000000004465e-05, 4.276399999999375e-05, 4.2068999999998746e-05, 4.225000000000062e-05, 4.25980000000048e-05, 4.2582999999998816e-05, 4.241599999999651e-05, 4.2375000000004215e-05, 4.225000000000062e-05, 4.275000000000112e-05, 4.2417000000002925e-05, 4.251400000000044e-05, 4.2097000000004825e-05, 4.243000000000302e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.258" endtime="20201115 23:03:19.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.246" endtime="20201115 23:03:19.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.271" endtime="20201115 23:03:19.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.279" endtime="20201115 23:03:19.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.275" endtime="20201115 23:03:19.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.266" endtime="20201115 23:03:19.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.760" endtime="20201115 23:03:19.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.756" endtime="20201115 23:03:19.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.754" endtime="20201115 23:03:19.306"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.311" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.332" endtime="20201115 23:03:19.349"></status>
</kw>
<msg timestamp="20201115 23:03:19.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.329" endtime="20201115 23:03:19.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.352" endtime="20201115 23:03:19.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.359" endtime="20201115 23:03:19.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.322" endtime="20201115 23:03:19.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.316" endtime="20201115 23:03:19.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.382" endtime="20201115 23:03:19.719"></status>
</kw>
<msg timestamp="20201115 23:03:19.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045021194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045063958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.379" endtime="20201115 23:03:19.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045021194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045063958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.729" endtime="20201115 23:03:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.749" endtime="20201115 23:03:19.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.372" endtime="20201115 23:03:19.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.367" endtime="20201115 23:03:19.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.766" level="INFO">${RESULT} = [{'time': 0.045063958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276400000000069e-05, 'source_diff': 4.276400000000069e-05}, {'time': 0.045117028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.757" endtime="20201115 23:03:19.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:19.768" endtime="20201115 23:03:19.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.808" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.806" endtime="20201115 23:03:19.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.815" level="INFO">VALUE: [4.276400000000069e-05, 4.208400000000473e-05, 4.2568999999999246e-05, 4.233400000000498e-05, 4.2582999999998816e-05, 4.276400000000069e-05, 4.226400000000019e-05, 4.2791000000000357e-05, 4.2416999999995986e-05, 4.2610999999997956e-05, 4.252800000000001e-05, 4.193000000000252e-05, 4.227799999999976e-05, 4.208399999999779e-05, 4.242999999999608e-05, 4.226400000000019e-05, 4.275000000000112e-05, 4.2082999999998316e-05, 4.2596999999998386e-05, 4.2277000000000287e-05, 4.2416999999995986e-05, 4.2083000000005255e-05, 4.2096999999997886e-05, 4.223600000000105e-05, 4.2430999999995556e-05, 4.2582999999998816e-05, 4.2431000000002494e-05, 4.2445000000002064e-05, 4.244400000000259e-05, 4.242999999999608e-05, 4.243000000000302e-05, 4.279199999999983e-05, 4.2082999999998316e-05, 4.2139000000003535e-05, 4.2709000000001884e-05, 4.2375000000004215e-05, 4.2054999999999176e-05, 4.2068999999998746e-05, 4.295799999999572e-05, 4.2582999999998816e-05, 4.2097000000004825e-05, 4.276400000000069e-05, 4.2597000000005325e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.201399999999994e-05, 4.1889000000003285e-05, 4.2931000000002995e-05, 4.2430999999995556e-05, 4.241599999999651e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.810" endtime="20201115 23:03:19.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.799" endtime="20201115 23:03:19.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.824" endtime="20201115 23:03:19.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.832" endtime="20201115 23:03:19.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.828" endtime="20201115 23:03:19.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.819" endtime="20201115 23:03:19.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.312" endtime="20201115 23:03:19.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.308" endtime="20201115 23:03:19.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.306" endtime="20201115 23:03:19.859"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.864" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.886" endtime="20201115 23:03:19.902"></status>
</kw>
<msg timestamp="20201115 23:03:19.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.883" endtime="20201115 23:03:19.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.906" endtime="20201115 23:03:19.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.912" endtime="20201115 23:03:19.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.876" endtime="20201115 23:03:19.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.869" endtime="20201115 23:03:19.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.938" endtime="20201115 23:03:20.275"></status>
</kw>
<msg timestamp="20201115 23:03:20.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046039208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046081431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.934" endtime="20201115 23:03:20.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046039208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046081431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.284" endtime="20201115 23:03:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.303" endtime="20201115 23:03:20.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.927" endtime="20201115 23:03:20.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.922" endtime="20201115 23:03:20.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.320" level="INFO">${RESULT} = [{'time': 0.046081431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2223000000000954e-05, 'source_diff': 4.2223000000000954e-05}, {'time': 0.046134597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:20.311" endtime="20201115 23:03:20.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:20.322" endtime="20201115 23:03:20.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.362" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.360" endtime="20201115 23:03:20.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.369" level="INFO">VALUE: [4.2223000000000954e-05, 4.2610999999997956e-05, 4.2582999999998816e-05, 4.276400000000069e-05, 4.279199999999983e-05, 4.275000000000112e-05, 4.2610999999997956e-05, 4.2458999999994695e-05, 4.2431000000002494e-05, 4.256999999999872e-05, 4.208399999999779e-05, 4.276400000000069e-05, 4.2360999999997706e-05, 4.226400000000019e-05, 4.2597000000005325e-05, 4.276400000000069e-05, 4.277700000000079e-05, 4.2096999999997886e-05, 4.2402999999996416e-05, 4.194400000000209e-05, 4.2082999999998316e-05, 4.225000000000062e-05, 4.2945000000002564e-05, 4.2583000000005755e-05, 4.209799999999736e-05, 4.2431000000002494e-05, 4.275000000000112e-05, 4.2582999999998816e-05, 4.2430999999995556e-05, 4.2290999999999856e-05, 4.2068999999998746e-05, 4.1945000000001564e-05, 4.261199999999743e-05, 4.2583000000005755e-05, 4.2610999999997956e-05, 4.2277000000000287e-05, 4.2110999999997456e-05, 4.2110999999997456e-05, 4.2568999999999246e-05, 4.2417000000002925e-05, 4.2402999999996416e-05, 4.279199999999983e-05, 4.275000000000112e-05, 4.2097000000004825e-05, 4.224999999999368e-05, 4.294399999999615e-05, 4.275000000000112e-05, 4.2568999999999246e-05, 4.2124999999997026e-05, 4.2625000000004465e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.364" endtime="20201115 23:03:20.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.353" endtime="20201115 23:03:20.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.378" endtime="20201115 23:03:20.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.387" endtime="20201115 23:03:20.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.381" endtime="20201115 23:03:20.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.373" endtime="20201115 23:03:20.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.865" endtime="20201115 23:03:20.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.861" endtime="20201115 23:03:20.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.859" endtime="20201115 23:03:20.413"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.418" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.440" endtime="20201115 23:03:20.456"></status>
</kw>
<msg timestamp="20201115 23:03:20.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.437" endtime="20201115 23:03:20.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.459" endtime="20201115 23:03:20.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.466" endtime="20201115 23:03:20.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.429" endtime="20201115 23:03:20.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.424" endtime="20201115 23:03:20.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.489" endtime="20201115 23:03:20.825"></status>
</kw>
<msg timestamp="20201115 23:03:20.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04512875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:20.486" endtime="20201115 23:03:20.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04512875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045170875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:20.835" endtime="20201115 23:03:20.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.853" endtime="20201115 23:03:20.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.479" endtime="20201115 23:03:20.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.474" endtime="20201115 23:03:20.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.871" level="INFO">${RESULT} = [{'time': 0.045170875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2124999999997026e-05, 'source_diff': 4.2124999999997026e-05}, {'time': 0.045222014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:20.862" endtime="20201115 23:03:20.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.901" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:20.873" endtime="20201115 23:03:20.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.913" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.910" endtime="20201115 23:03:20.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.919" level="INFO">VALUE: [4.2124999999997026e-05, 4.229199999999933e-05, 4.226400000000019e-05, 4.2277000000000287e-05, 4.2611000000004895e-05, 4.277800000000026e-05, 4.207000000000516e-05, 4.301400000000094e-05, 4.2430999999995556e-05, 4.2431000000002494e-05, 4.20980000000043e-05, 4.294400000000309e-05, 4.276400000000069e-05, 4.275000000000112e-05, 4.277800000000026e-05, 4.211200000000387e-05, 4.227799999999976e-05, 4.275000000000112e-05, 4.229199999999933e-05, 4.276400000000069e-05, 4.2430999999995556e-05, 4.256999999999872e-05, 4.207000000000516e-05, 4.2568999999999246e-05, 4.223600000000105e-05, 4.226400000000019e-05, 4.204199999999908e-05, 4.2110999999997456e-05, 4.2611000000004895e-05, 4.294399999999615e-05, 4.2082999999998316e-05, 4.277800000000026e-05, 4.2582999999998816e-05, 4.259799999999786e-05, 4.209799999999736e-05, 4.225000000000062e-05, 4.2832999999999066e-05, 4.242999999999608e-05, 4.277800000000026e-05, 4.244400000000259e-05, 4.226400000000019e-05, 4.2791000000000357e-05, 4.277700000000079e-05, 4.276400000000069e-05, 4.247200000000173e-05, 4.2431000000002494e-05, 4.1846999999997636e-05, 4.279199999999983e-05, 4.2082999999998316e-05, 4.241599999999651e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.915" endtime="20201115 23:03:20.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.903" endtime="20201115 23:03:20.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.929" endtime="20201115 23:03:20.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.937" endtime="20201115 23:03:20.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.933" endtime="20201115 23:03:20.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.924" endtime="20201115 23:03:20.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.420" endtime="20201115 23:03:20.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.416" endtime="20201115 23:03:20.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.414" endtime="20201115 23:03:20.964"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.969" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.990" endtime="20201115 23:03:21.007"></status>
</kw>
<msg timestamp="20201115 23:03:21.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.987" endtime="20201115 23:03:21.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.010" endtime="20201115 23:03:21.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.017" endtime="20201115 23:03:21.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.980" endtime="20201115 23:03:21.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.974" endtime="20201115 23:03:21.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.040" endtime="20201115 23:03:21.375"></status>
</kw>
<msg timestamp="20201115 23:03:21.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045082819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045125403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.037" endtime="20201115 23:03:21.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045082819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045125403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.384" endtime="20201115 23:03:21.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.402" endtime="20201115 23:03:21.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.029" endtime="20201115 23:03:21.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.025" endtime="20201115 23:03:21.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.420" level="INFO">${RESULT} = [{'time': 0.045125403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.258399999999829e-05, 'source_diff': 4.258399999999829e-05}, {'time': 0.045175486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.411" endtime="20201115 23:03:21.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.453" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:21.422" endtime="20201115 23:03:21.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.464" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.461" endtime="20201115 23:03:21.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.471" level="INFO">VALUE: [4.258399999999829e-05, 4.193000000000252e-05, 4.2930999999996056e-05, 4.1860999999997206e-05, 4.2917000000003425e-05, 4.293000000000352e-05, 4.2110999999997456e-05, 4.2417000000002925e-05, 4.226399999999325e-05, 4.2568999999999246e-05, 4.226400000000019e-05, 4.2417000000002925e-05, 4.226400000000019e-05, 4.2138999999996596e-05, 4.292999999999658e-05, 4.245800000000216e-05, 4.194399999999515e-05, 4.2569000000006185e-05, 4.2624999999997526e-05, 4.2582999999998816e-05, 4.275000000000112e-05, 4.277800000000026e-05, 4.258400000000523e-05, 4.2917000000003425e-05, 4.2597000000005325e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.204200000000602e-05, 4.225000000000062e-05, 4.2417000000002925e-05, 4.1916999999995486e-05, 4.2931000000002995e-05, 4.2944999999995626e-05, 4.2430999999995556e-05, 4.2431000000002494e-05, 4.2431000000002494e-05, 4.275000000000112e-05, 4.2611000000004895e-05, 4.241599999999651e-05, 4.226400000000019e-05, 4.25980000000048e-05, 4.225000000000062e-05, 4.274999999999418e-05, 4.276400000000069e-05, 4.244400000000259e-05, 4.208400000000473e-05, 4.2931000000002995e-05, 4.206999999999822e-05, 4.225000000000062e-05, 4.202799999999951e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.466" endtime="20201115 23:03:21.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.455" endtime="20201115 23:03:21.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.480" endtime="20201115 23:03:21.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.488" endtime="20201115 23:03:21.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.484" endtime="20201115 23:03:21.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.475" endtime="20201115 23:03:21.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.970" endtime="20201115 23:03:21.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.966" endtime="20201115 23:03:21.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.965" endtime="20201115 23:03:21.514"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.520" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.541" endtime="20201115 23:03:21.558"></status>
</kw>
<msg timestamp="20201115 23:03:21.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.538" endtime="20201115 23:03:21.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.561" endtime="20201115 23:03:21.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.568" endtime="20201115 23:03:21.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.531" endtime="20201115 23:03:21.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.525" endtime="20201115 23:03:21.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.591" endtime="20201115 23:03:21.926"></status>
</kw>
<msg timestamp="20201115 23:03:21.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045378778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:21.588" endtime="20201115 23:03:21.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045378778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:21.936" endtime="20201115 23:03:21.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.955" endtime="20201115 23:03:21.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.580" endtime="20201115 23:03:21.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.576" endtime="20201115 23:03:21.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.972" level="INFO">${RESULT} = [{'time': 0.045378778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.927799999999982e-05, 'source_diff': 4.927799999999982e-05}, {'time': 0.045433903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.963" endtime="20201115 23:03:21.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.005" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:21.975" endtime="20201115 23:03:22.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.017" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.014" endtime="20201115 23:03:22.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.024" level="INFO">VALUE: [4.927799999999982e-05, 4.954199999999964e-05, 4.9415999999996574e-05, 4.955499999999974e-05, 4.9917000000003486e-05, 4.902799999999957e-05, 4.9931000000003056e-05, 4.9415999999996574e-05, 4.909699999999795e-05, 4.9401999999997004e-05, 4.945800000000222e-05, 4.940299999999648e-05, 4.9417000000002986e-05, 4.91669999999958e-05, 4.995800000000272e-05, 4.9903000000003916e-05, 4.925000000000068e-05, 4.9237000000000586e-05, 4.956899999999931e-05, 4.956999999999878e-05, 4.973599999999467e-05, 4.927799999999982e-05, 4.923599999999417e-05, 4.924999999999374e-05, 4.958299999999888e-05, 4.965299999999673e-05, 4.956999999999878e-05, 4.948600000000136e-05, 4.912499999999709e-05, 4.922200000000154e-05, 4.956899999999931e-05, 4.9403000000003416e-05, 4.907000000000522e-05, 4.909699999999795e-05, 4.9639000000004097e-05, 4.974999999999424e-05, 4.8915999999996074e-05, 4.926400000000025e-05, 4.956999999999878e-05, 4.948599999999442e-05, 4.973599999999467e-05, 4.906999999999828e-05, 4.909699999999795e-05, 4.9917000000003486e-05, 4.957000000000572e-05, 4.976399999999381e-05, 4.922200000000154e-05, 4.906999999999828e-05, 4.979199999999989e-05, 4.909700000000489e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.019" endtime="20201115 23:03:22.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.007" endtime="20201115 23:03:22.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.032" endtime="20201115 23:03:22.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.041" endtime="20201115 23:03:22.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.037" endtime="20201115 23:03:22.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.028" endtime="20201115 23:03:22.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.521" endtime="20201115 23:03:22.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.517" endtime="20201115 23:03:22.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.515" endtime="20201115 23:03:22.067"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.073" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.095" endtime="20201115 23:03:22.113"></status>
</kw>
<msg timestamp="20201115 23:03:22.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.091" endtime="20201115 23:03:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.117" endtime="20201115 23:03:22.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.123" endtime="20201115 23:03:22.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.084" endtime="20201115 23:03:22.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.078" endtime="20201115 23:03:22.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.147" endtime="20201115 23:03:22.484"></status>
</kw>
<msg timestamp="20201115 23:03:22.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.143" endtime="20201115 23:03:22.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045863736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.494" endtime="20201115 23:03:22.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.520" endtime="20201115 23:03:22.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.136" endtime="20201115 23:03:22.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.131" endtime="20201115 23:03:22.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:22.539" level="INFO">${RESULT} = [{'time': 0.045952083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.834699999999557e-05, 'source_diff': 8.834699999999557e-05}, {'time': 0.046049319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:22.528" endtime="20201115 23:03:22.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.570" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:22.541" endtime="20201115 23:03:22.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.581" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.579" endtime="20201115 23:03:22.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.588" level="INFO">VALUE: [8.834699999999557e-05, 8.81250000000014e-05, 8.801400000000431e-05, 8.913900000000197e-05, 8.904100000000498e-05, 8.916600000000163e-05, 8.745800000000553e-05, 8.776399999999712e-05, 8.91670000000011e-05, 8.840300000000079e-05, 8.7944999999999e-05, 8.81670000000001e-05, 8.755600000000252e-05, 8.869400000000027e-05, 8.905500000000455e-05, 8.808300000000269e-05, 8.837499999999471e-05, 8.840300000000079e-05, 8.74449999999985e-05, 8.887499999999521e-05, 8.826399999999762e-05, 8.852800000000438e-05, 8.841700000000036e-05, 8.740299999999979e-05, 8.857000000000309e-05, 8.758300000000219e-05, 8.851399999999787e-05, 8.863900000000147e-05, 8.83050000000038e-05, 8.884699999999607e-05, 8.758400000000166e-05, 8.83050000000038e-05, 8.901399999999837e-05, 8.759700000000176e-05, 8.884800000000248e-05, 8.74449999999985e-05, 8.856900000000362e-05, 8.844400000000002e-05, 8.881900000000387e-05, 8.776400000000406e-05, 8.805499999999661e-05, 8.727799999999619e-05, 8.848599999999873e-05, 8.861100000000233e-05, 8.904200000000445e-05, 8.770799999999884e-05, 8.823599999999848e-05, 8.825000000000499e-05, 8.759700000000176e-05, 8.893000000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.584" endtime="20201115 23:03:22.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.572" endtime="20201115 23:03:22.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.597" endtime="20201115 23:03:22.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.606" endtime="20201115 23:03:22.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.601" endtime="20201115 23:03:22.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.593" endtime="20201115 23:03:22.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.074" endtime="20201115 23:03:22.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.070" endtime="20201115 23:03:22.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.068" endtime="20201115 23:03:22.633"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.660" endtime="20201115 23:03:22.678"></status>
</kw>
<msg timestamp="20201115 23:03:22.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.656" endtime="20201115 23:03:22.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.682" endtime="20201115 23:03:22.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.688" endtime="20201115 23:03:22.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.649" endtime="20201115 23:03:22.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.643" endtime="20201115 23:03:22.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.712" endtime="20201115 23:03:23.049"></status>
</kw>
<msg timestamp="20201115 23:03:23.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.708" endtime="20201115 23:03:23.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045579333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.058" endtime="20201115 23:03:23.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.077" endtime="20201115 23:03:23.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.701" endtime="20201115 23:03:23.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.696" endtime="20201115 23:03:23.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.095" level="INFO">${RESULT} = [{'time': 0.045579333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.986099999999664e-05, 'source_diff': 8.986099999999664e-05}, {'time': 0.045677556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:23.086" endtime="20201115 23:03:23.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.126" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:23.097" endtime="20201115 23:03:23.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.137" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.134" endtime="20201115 23:03:23.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.144" level="INFO">VALUE: [8.986099999999664e-05, 8.94999999999993e-05, 8.932000000000384e-05, 8.948599999999973e-05, 8.99999999999998e-05, 8.930600000000427e-05, 8.948599999999973e-05, 8.969500000000075e-05, 8.990299999999535e-05, 8.937500000000265e-05, 8.997300000000014e-05, 9.006999999999765e-05, 8.977699999999922e-05, 8.936100000000308e-05, 8.940299999999485e-05, 9.013900000000297e-05, 9.004199999999851e-05, 8.926399999999862e-05, 8.933300000000394e-05, 8.955499999999811e-05, 8.956900000000462e-05, 9.004200000000545e-05, 8.957000000000409e-05, 8.930599999999733e-05, 9.020800000000134e-05, 8.951399999999887e-05, 8.948599999999973e-05, 8.947200000000016e-05, 9.022300000000039e-05, 9.019400000000177e-05, 9.023600000000048e-05, 8.956899999999768e-05, 8.970800000000084e-05, 9.022200000000091e-05, 8.956999999999715e-05, 8.951400000000581e-05, 8.937500000000265e-05, 8.96670000000016e-05, 8.995900000000057e-05, 9.006899999999818e-05, 9.006899999999818e-05, 8.977799999999869e-05, 8.98329999999975e-05, 8.937499999999571e-05, 8.919400000000077e-05, 8.982000000000434e-05, 8.988900000000272e-05, 8.991700000000186e-05, 8.991700000000186e-05, 8.933399999999647e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.139" endtime="20201115 23:03:23.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.127" endtime="20201115 23:03:23.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.152" endtime="20201115 23:03:23.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.161" endtime="20201115 23:03:23.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.156" endtime="20201115 23:03:23.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.148" endtime="20201115 23:03:23.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.639" endtime="20201115 23:03:23.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.635" endtime="20201115 23:03:23.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.634" endtime="20201115 23:03:23.187"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.192" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.214" endtime="20201115 23:03:23.233"></status>
</kw>
<msg timestamp="20201115 23:03:23.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.211" endtime="20201115 23:03:23.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.237" endtime="20201115 23:03:23.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.244" endtime="20201115 23:03:23.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.204" endtime="20201115 23:03:23.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.198" endtime="20201115 23:03:23.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.269" endtime="20201115 23:03:23.606"></status>
</kw>
<msg timestamp="20201115 23:03:23.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045645764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045736889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.265" endtime="20201115 23:03:23.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045645764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045736889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.615" endtime="20201115 23:03:23.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.634" endtime="20201115 23:03:23.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.258" endtime="20201115 23:03:23.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.253" endtime="20201115 23:03:23.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.651" level="INFO">${RESULT} = [{'time': 0.045736889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.11250000000044e-05, 'source_diff': 9.11250000000044e-05}, {'time': 0.045834097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:23.642" endtime="20201115 23:03:23.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.685" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:23.654" endtime="20201115 23:03:23.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.696" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.694" endtime="20201115 23:03:23.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.703" level="INFO">VALUE: [9.11250000000044e-05, 9.059699999999782e-05, 9.112499999999746e-05, 9.073600000000098e-05, 9.054199999999901e-05, 9.043100000000193e-05, 9.073600000000098e-05, 9.041700000000236e-05, 9.098600000000123e-05, 9.03199999999979e-05, 9.095800000000209e-05, 9.041700000000236e-05, 9.063900000000347e-05, 9.0332999999998e-05, 9.111100000000483e-05, 9.080599999999883e-05, 9.052799999999944e-05, 9.086100000000458e-05, 9.115300000000354e-05, 9.091700000000286e-05, 9.033399999999747e-05, 9.120800000000234e-05, 9.120800000000234e-05, 9.087500000000415e-05, 9.127700000000072e-05, 9.034699999999757e-05, 9.087500000000415e-05, 9.106899999999918e-05, 9.091700000000286e-05, 9.111099999999789e-05, 9.05000000000003e-05, 9.045799999999465e-05, 9.116699999999617e-05, 9.067999999999576e-05, 9.054199999999901e-05, 9.069399999999533e-05, 9.069499999999481e-05, 9.051399999999987e-05, 9.091599999999644e-05, 9.066600000000313e-05, 9.072200000000141e-05, 9.072199999999447e-05, 9.098600000000123e-05, 9.061099999999739e-05, 9.072200000000141e-05, 9.092999999999601e-05, 9.097200000000166e-05, 9.068099999999524e-05, 9.105599999999908e-05, 9.044400000000202e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.698" endtime="20201115 23:03:23.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.687" endtime="20201115 23:03:23.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.712" endtime="20201115 23:03:23.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.720" endtime="20201115 23:03:23.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.716" endtime="20201115 23:03:23.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.707" endtime="20201115 23:03:23.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.194" endtime="20201115 23:03:23.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.190" endtime="20201115 23:03:23.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.188" endtime="20201115 23:03:23.747"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.774" endtime="20201115 23:03:23.793"></status>
</kw>
<msg timestamp="20201115 23:03:23.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.771" endtime="20201115 23:03:23.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.797" endtime="20201115 23:03:23.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.803" endtime="20201115 23:03:23.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.763" endtime="20201115 23:03:23.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.757" endtime="20201115 23:03:23.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.827" endtime="20201115 23:03:24.164"></status>
</kw>
<msg timestamp="20201115 23:03:24.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046390986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.824" endtime="20201115 23:03:24.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046390986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.173" endtime="20201115 23:03:24.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.192" endtime="20201115 23:03:24.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.817" endtime="20201115 23:03:24.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.812" endtime="20201115 23:03:24.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.210" level="INFO">${RESULT} = [{'time': 0.046390986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.193000000000395e-05, 'source_diff': 9.193000000000395e-05}, {'time': 0.046487278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.200" endtime="20201115 23:03:24.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.241" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:24.212" endtime="20201115 23:03:24.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.252" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.249" endtime="20201115 23:03:24.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.258" level="INFO">VALUE: [9.193000000000395e-05, 9.179200000000026e-05, 9.177700000000122e-05, 9.204100000000104e-05, 9.120800000000234e-05, 9.13199999999989e-05, 9.161099999999839e-05, 9.220800000000334e-05, 9.158299999999925e-05, 9.149999999999436e-05, 9.213900000000497e-05, 9.161199999999786e-05, 9.174999999999461e-05, 9.138900000000422e-05, 9.127799999999325e-05, 9.151400000000087e-05, 9.163899999999753e-05, 9.176400000000112e-05, 9.163799999999805e-05, 9.155500000000011e-05, 9.222200000000291e-05, 9.130599999999933e-05, 9.204200000000051e-05, 9.202800000000094e-05, 9.211100000000583e-05, 9.181899999999993e-05, 9.157000000000609e-05, 9.115300000000354e-05, 9.154200000000001e-05, 9.161099999999839e-05, 9.173600000000198e-05, 9.197200000000266e-05, 9.140200000000431e-05, 9.154200000000001e-05, 9.158300000000619e-05, 9.123599999999454e-05, 9.123600000000148e-05, 9.197300000000214e-05, 9.205600000000008e-05, 9.165200000000456e-05, 9.204100000000104e-05, 9.127800000000019e-05, 9.157000000000609e-05, 9.201400000000137e-05, 9.130599999999933e-05, 9.124999999999411e-05, 9.161199999999786e-05, 9.130599999999933e-05, 9.140199999999737e-05, 9.173599999999504e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.254" endtime="20201115 23:03:24.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.242" endtime="20201115 23:03:24.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.267" endtime="20201115 23:03:24.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.276" endtime="20201115 23:03:24.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.271" endtime="20201115 23:03:24.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.263" endtime="20201115 23:03:24.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.753" endtime="20201115 23:03:24.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.749" endtime="20201115 23:03:24.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.747" endtime="20201115 23:03:24.304"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.332" endtime="20201115 23:03:24.351"></status>
</kw>
<msg timestamp="20201115 23:03:24.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.328" endtime="20201115 23:03:24.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.354" endtime="20201115 23:03:24.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.360" endtime="20201115 23:03:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.321" endtime="20201115 23:03:24.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.315" endtime="20201115 23:03:24.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.384" endtime="20201115 23:03:24.722"></status>
</kw>
<msg timestamp="20201115 23:03:24.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047653431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047746014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.381" endtime="20201115 23:03:24.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047653431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047746014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.731" endtime="20201115 23:03:24.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.750" endtime="20201115 23:03:24.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.373" endtime="20201115 23:03:24.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.369" endtime="20201115 23:03:24.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.767" level="INFO">${RESULT} = [{'time': 0.047746014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.258300000000025e-05, 'source_diff': 9.258300000000025e-05}, {'time': 0.047844292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.758" endtime="20201115 23:03:24.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.798" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:24.769" endtime="20201115 23:03:24.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.809" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.807" endtime="20201115 23:03:24.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.816" level="INFO">VALUE: [9.258300000000025e-05, 9.23059999999934e-05, 9.286100000000658e-05, 9.308300000000075e-05, 9.248600000000273e-05, 9.293000000000495e-05, 9.25130000000024e-05, 9.263899999999853e-05, 9.287500000000615e-05, 9.222199999999597e-05, 9.295799999999715e-05, 9.254200000000101e-05, 9.24859999999958e-05, 9.286099999999964e-05, 9.255599999999364e-05, 9.273600000000298e-05, 9.286099999999964e-05, 9.259799999999929e-05, 9.248600000000273e-05, 9.280499999999442e-05, 9.284700000000007e-05, 9.25409999999946e-05, 9.281900000000093e-05, 9.272200000000341e-05, 9.231900000000043e-05, 9.313899999999903e-05, 9.238899999999828e-05, 9.297199999999672e-05, 9.265300000000504e-05, 9.230600000000033e-05, 9.281900000000093e-05, 9.318100000000468e-05, 9.266699999999767e-05, 9.305600000000108e-05, 9.280500000000136e-05, 9.263900000000547e-05, 9.230500000000086e-05, 9.312499999999946e-05, 9.258399999999972e-05, 9.286099999999964e-05, 9.280600000000083e-05, 9.227800000000119e-05, 9.222199999999597e-05, 9.252700000000197e-05, 9.284700000000007e-05, 9.244400000000402e-05, 9.280600000000083e-05, 9.241700000000436e-05, 9.224999999999511e-05, 9.287499999999921e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.812" endtime="20201115 23:03:24.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.800" endtime="20201115 23:03:24.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.826" endtime="20201115 23:03:24.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.834" endtime="20201115 23:03:24.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.830" endtime="20201115 23:03:24.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.821" endtime="20201115 23:03:24.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.311" endtime="20201115 23:03:24.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.307" endtime="20201115 23:03:24.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.305" endtime="20201115 23:03:24.861"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.888" endtime="20201115 23:03:24.907"></status>
</kw>
<msg timestamp="20201115 23:03:24.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.885" endtime="20201115 23:03:24.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.910" endtime="20201115 23:03:24.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.916" endtime="20201115 23:03:24.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.877" endtime="20201115 23:03:24.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.871" endtime="20201115 23:03:24.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.940" endtime="20201115 23:03:25.276"></status>
</kw>
<msg timestamp="20201115 23:03:25.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045606875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.937" endtime="20201115 23:03:25.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045606875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.286" endtime="20201115 23:03:25.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.305" endtime="20201115 23:03:25.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.929" endtime="20201115 23:03:25.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.925" endtime="20201115 23:03:25.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.323" level="INFO">${RESULT} = [{'time': 0.045606875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.326399999999568e-05, 'source_diff': 9.326399999999568e-05}, {'time': 0.045706139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:25.313" endtime="20201115 23:03:25.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.355" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:25.325" endtime="20201115 23:03:25.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.366" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.363" endtime="20201115 23:03:25.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.373" level="INFO">VALUE: [9.326399999999568e-05, 9.379200000000226e-05, 9.366699999999867e-05, 9.363899999999953e-05, 9.36659999999992e-05, 9.38880000000003e-05, 9.32079999999974e-05, 9.407000000000165e-05, 9.358399999999378e-05, 9.397200000000466e-05, 9.363899999999953e-05, 9.380499999999542e-05, 9.38200000000014e-05, 9.412500000000046e-05, 9.404100000000304e-05, 9.33200000000009e-05, 9.355600000000158e-05, 9.334700000000057e-05, 9.380600000000183e-05, 9.406899999999524e-05, 9.391699999999892e-05, 9.36529999999991e-05, 9.386100000000064e-05, 9.404200000000251e-05, 9.369400000000527e-05, 9.355499999999517e-05, 9.331999999999396e-05, 9.320900000000382e-05, 9.380600000000183e-05, 9.376399999999618e-05, 9.359700000000082e-05, 9.377800000000269e-05, 9.32079999999974e-05, 9.380499999999542e-05, 9.355600000000158e-05, 9.393099999999849e-05, 9.390199999999987e-05, 9.334800000000004e-05, 9.409700000000132e-05, 9.341599999999894e-05, 9.325000000000305e-05, 9.333400000000047e-05, 9.355600000000158e-05, 9.322200000000391e-05, 9.370800000000484e-05, 9.401400000000337e-05, 9.411100000000089e-05, 9.393099999999849e-05, 9.347199999999722e-05, 9.374999999999661e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.368" endtime="20201115 23:03:25.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.356" endtime="20201115 23:03:25.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.382" endtime="20201115 23:03:25.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.390" endtime="20201115 23:03:25.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.386" endtime="20201115 23:03:25.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.378" endtime="20201115 23:03:25.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.868" endtime="20201115 23:03:25.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.864" endtime="20201115 23:03:25.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.862" endtime="20201115 23:03:25.417"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.422" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.444" endtime="20201115 23:03:25.463"></status>
</kw>
<msg timestamp="20201115 23:03:25.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.441" endtime="20201115 23:03:25.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.466" endtime="20201115 23:03:25.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.473" endtime="20201115 23:03:25.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.434" endtime="20201115 23:03:25.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.428" endtime="20201115 23:03:25.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.496" endtime="20201115 23:03:25.833"></status>
</kw>
<msg timestamp="20201115 23:03:25.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045674361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045769361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.493" endtime="20201115 23:03:25.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045674361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045769361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.843" endtime="20201115 23:03:25.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.861" endtime="20201115 23:03:25.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.486" endtime="20201115 23:03:25.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.481" endtime="20201115 23:03:25.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.879" level="INFO">${RESULT} = [{'time': 0.045769361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.50000000000048e-05, 'source_diff': 9.50000000000048e-05}, {'time': 0.045874653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:25.870" endtime="20201115 23:03:25.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.913" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:25.881" endtime="20201115 23:03:25.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.924" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.922" endtime="20201115 23:03:25.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.931" level="INFO">VALUE: [9.50000000000048e-05, 9.493099999999949e-05, 9.440299999999985e-05, 9.477800000000369e-05, 9.508300000000275e-05, 9.469399999999933e-05, 9.443100000000593e-05, 9.440299999999985e-05, 9.425000000000405e-05, 9.48330000000025e-05, 9.454199999999607e-05, 9.422199999999797e-05, 9.457000000000215e-05, 9.455600000000258e-05, 9.429100000000329e-05, 9.513900000000103e-05, 9.480500000000336e-05, 9.476399999999718e-05, 9.44859999999978e-05, 9.426399999999668e-05, 9.441599999999994e-05, 9.425000000000405e-05, 9.49859999999983e-05, 9.42079999999984e-05, 9.455500000000311e-05, 9.454200000000301e-05, 9.443099999999899e-05, 9.422299999999745e-05, 9.462500000000096e-05, 9.44859999999978e-05, 9.448699999999727e-05, 9.466699999999967e-05, 9.451399999999693e-05, 9.445799999999865e-05, 9.51530000000006e-05, 9.451399999999693e-05, 9.512500000000146e-05, 9.46660000000002e-05, 9.490300000000035e-05, 9.512500000000146e-05, 9.456999999999521e-05, 9.490300000000035e-05, 9.47079999999989e-05, 9.441599999999994e-05, 9.512500000000146e-05, 9.42079999999984e-05, 9.498699999999777e-05, 9.448600000000473e-05, 9.424999999999711e-05, 9.504200000000351e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.926" endtime="20201115 23:03:25.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.915" endtime="20201115 23:03:25.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.940" endtime="20201115 23:03:25.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.948" endtime="20201115 23:03:25.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.944" endtime="20201115 23:03:25.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.935" endtime="20201115 23:03:25.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.424" endtime="20201115 23:03:25.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.420" endtime="20201115 23:03:25.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.418" endtime="20201115 23:03:25.975"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.002" endtime="20201115 23:03:26.021"></status>
</kw>
<msg timestamp="20201115 23:03:26.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.998" endtime="20201115 23:03:26.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.024" endtime="20201115 23:03:26.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.031" endtime="20201115 23:03:26.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.991" endtime="20201115 23:03:26.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.985" endtime="20201115 23:03:26.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.054" endtime="20201115 23:03:26.392"></status>
</kw>
<msg timestamp="20201115 23:03:26.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045953819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046049139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.051" endtime="20201115 23:03:26.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045953819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046049139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.401" endtime="20201115 23:03:26.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.420" endtime="20201115 23:03:26.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.043" endtime="20201115 23:03:26.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.039" endtime="20201115 23:03:26.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.438" level="INFO">${RESULT} = [{'time': 0.046049139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.53200000000029e-05, 'source_diff': 9.53200000000029e-05}, {'time': 0.046151347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:26.429" endtime="20201115 23:03:26.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:26.469" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:26.440" endtime="20201115 23:03:26.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.480" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:03:26.478" endtime="20201115 23:03:26.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.487" level="INFO">VALUE: [9.53200000000029e-05, 9.602800000000494e-05, 9.616700000000117e-05, 9.544499999999956e-05, 9.529099999999735e-05, 9.558400000000272e-05, 9.62080000000004e-05, 9.573599999999904e-05, 9.554199999999707e-05, 9.62080000000004e-05, 9.594400000000058e-05, 9.543000000000051e-05, 9.604200000000451e-05, 9.605600000000408e-05, 9.565200000000162e-05, 9.611100000000289e-05, 9.602800000000494e-05, 9.53880000000018e-05, 9.611200000000236e-05, 9.518000000000026e-05, 9.558299999999631e-05, 9.559700000000282e-05, 9.587499999999527e-05, 9.559799999999535e-05, 9.580600000000383e-05, 9.584699999999613e-05, 9.529100000000429e-05, 9.579099999999785e-05, 9.529099999999735e-05, 9.544499999999956e-05, 9.595899999999963e-05, 9.602800000000494e-05, 9.545799999999965e-05, 9.606900000000418e-05, 9.555599999999664e-05, 9.572200000000641e-05, 9.55000000000053e-05, 9.586200000000211e-05, 9.531899999999649e-05, 9.56530000000011e-05, 9.524999999999811e-05, 9.609799999999585e-05, 9.547199999999922e-05, 9.518000000000026e-05, 9.562500000000196e-05, 9.586100000000264e-05, 9.54859999999988e-05, 9.563900000000153e-05, 9.615299999999466e-05, 9.615299999999466e-05]</msg>
<status status="PASS" starttime="20201115 23:03:26.483" endtime="20201115 23:03:26.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.471" endtime="20201115 23:03:26.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.496" endtime="20201115 23:03:26.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:26.505" endtime="20201115 23:03:26.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.500" endtime="20201115 23:03:26.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.492" endtime="20201115 23:03:26.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.981" endtime="20201115 23:03:26.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.977" endtime="20201115 23:03:26.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.975" endtime="20201115 23:03:26.531"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.536" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.558" endtime="20201115 23:03:26.577"></status>
</kw>
<msg timestamp="20201115 23:03:26.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.555" endtime="20201115 23:03:26.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.581" endtime="20201115 23:03:26.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.587" endtime="20201115 23:03:26.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.548" endtime="20201115 23:03:26.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.542" endtime="20201115 23:03:26.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.611" endtime="20201115 23:03:26.947"></status>
</kw>
<msg timestamp="20201115 23:03:26.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045501889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045599153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.607" endtime="20201115 23:03:26.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045501889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045599153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.957" endtime="20201115 23:03:26.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.975" endtime="20201115 23:03:26.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.600" endtime="20201115 23:03:26.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.595" endtime="20201115 23:03:26.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.993" level="INFO">${RESULT} = [{'time': 0.045599153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.726400000000662e-05, 'source_diff': 9.726400000000662e-05}, {'time': 0.045700431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:26.984" endtime="20201115 23:03:26.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.024" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:26.995" endtime="20201115 23:03:27.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.035" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.033" endtime="20201115 23:03:27.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.042" level="INFO">VALUE: [9.726400000000662e-05, 9.674999999999961e-05, 9.640299999999491e-05, 9.712499999999652e-05, 9.687500000000321e-05, 9.647200000000022e-05, 9.649999999999936e-05, 9.65279999999985e-05, 9.688900000000278e-05, 9.727700000000672e-05, 9.67080000000009e-05, 9.709700000000432e-05, 9.701400000000637e-05, 9.693100000000149e-05, 9.64859999999998e-05, 9.627799999999825e-05, 9.706899999999824e-05, 9.673600000000004e-05, 9.669400000000133e-05, 9.692999999999508e-05, 9.662500000000296e-05, 9.629200000000476e-05, 9.633399999999653e-05, 9.640299999999491e-05, 9.684800000000354e-05, 9.706999999999771e-05, 9.690300000000235e-05, 9.627799999999825e-05, 9.718000000000226e-05, 9.65000000000063e-05, 9.658299999999731e-05, 9.69860000000003e-05, 9.651399999999893e-05, 9.679099999999885e-05, 9.645800000000065e-05, 9.708399999999728e-05, 9.626400000000562e-05, 9.651399999999893e-05, 9.65279999999985e-05, 9.662500000000296e-05, 9.701399999999943e-05, 9.723600000000054e-05, 9.679199999999832e-05, 9.716699999999523e-05, 9.640300000000185e-05, 9.723600000000054e-05, 9.712499999999652e-05, 9.681899999999799e-05, 9.668100000000124e-05, 9.66939999999944e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.038" endtime="20201115 23:03:27.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.026" endtime="20201115 23:03:27.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.051" endtime="20201115 23:03:27.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.060" endtime="20201115 23:03:27.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.055" endtime="20201115 23:03:27.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.047" endtime="20201115 23:03:27.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.538" endtime="20201115 23:03:27.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.534" endtime="20201115 23:03:27.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.532" endtime="20201115 23:03:27.086"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.091" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.113" endtime="20201115 23:03:27.132"></status>
</kw>
<msg timestamp="20201115 23:03:27.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.110" endtime="20201115 23:03:27.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.136" endtime="20201115 23:03:27.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.143" endtime="20201115 23:03:27.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.103" endtime="20201115 23:03:27.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.097" endtime="20201115 23:03:27.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.167" endtime="20201115 23:03:27.507"></status>
</kw>
<msg timestamp="20201115 23:03:27.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045652472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04574975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:27.163" endtime="20201115 23:03:27.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045652472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04574975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:27.516" endtime="20201115 23:03:27.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.535" endtime="20201115 23:03:27.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.156" endtime="20201115 23:03:27.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.151" endtime="20201115 23:03:27.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:27.552" level="INFO">${RESULT} = [{'time': 0.04574975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.727799999999925e-05, 'source_diff': 9.727799999999925e-05}, {'time': 0.045857972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:27.543" endtime="20201115 23:03:27.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.584" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:27.555" endtime="20201115 23:03:27.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.595" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.592" endtime="20201115 23:03:27.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.601" level="INFO">VALUE: [9.727799999999925e-05, 9.80410000000001e-05, 9.726399999999968e-05, 9.816700000000317e-05, 9.765299999999616e-05, 9.772200000000147e-05, 9.813900000000403e-05, 9.78059999999989e-05, 9.79860000000013e-05, 9.74860000000008e-05, 9.74860000000008e-05, 9.816699999999623e-05, 9.777799999999975e-05, 9.738899999999634e-05, 9.815299999999666e-05, 9.800000000000086e-05, 9.762499999999702e-05, 9.82080000000024e-05, 9.788899999999684e-05, 9.733299999999806e-05, 9.78479999999976e-05, 9.75279999999995e-05, 9.731899999999849e-05, 9.816700000000317e-05, 9.722300000000045e-05, 9.781899999999899e-05, 9.817999999999633e-05, 9.816699999999623e-05, 9.775000000000061e-05, 9.784700000000507e-05, 9.793100000000249e-05, 9.761100000000439e-05, 9.793099999999555e-05, 9.765299999999616e-05, 9.790299999999641e-05, 9.811100000000489e-05, 9.805499999999967e-05, 9.759699999999788e-05, 9.759699999999788e-05, 9.805499999999967e-05, 9.794500000000206e-05, 9.783399999999803e-05, 9.797200000000172e-05, 9.759799999999735e-05, 9.745800000000165e-05, 9.812499999999752e-05, 9.730499999999892e-05, 9.806999999999871e-05, 9.779199999999932e-05, 9.797200000000172e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.597" endtime="20201115 23:03:27.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.585" endtime="20201115 23:03:27.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.610" endtime="20201115 23:03:27.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.619" endtime="20201115 23:03:27.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.614" endtime="20201115 23:03:27.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.606" endtime="20201115 23:03:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.093" endtime="20201115 23:03:27.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.089" endtime="20201115 23:03:27.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.087" endtime="20201115 23:03:27.645"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.651" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.678" endtime="20201115 23:03:27.697"></status>
</kw>
<msg timestamp="20201115 23:03:27.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.675" endtime="20201115 23:03:27.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.700" endtime="20201115 23:03:27.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.707" endtime="20201115 23:03:27.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.662" endtime="20201115 23:03:27.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.656" endtime="20201115 23:03:27.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.730" endtime="20201115 23:03:28.069"></status>
</kw>
<msg timestamp="20201115 23:03:28.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0509335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051032472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:27.727" endtime="20201115 23:03:28.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0509335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051032472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:28.079" endtime="20201115 23:03:28.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.098" endtime="20201115 23:03:28.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.720" endtime="20201115 23:03:28.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.715" endtime="20201115 23:03:28.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.115" level="INFO">${RESULT} = [{'time': 0.051032472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.897200000000272e-05, 'source_diff': 9.897200000000272e-05}, {'time': 0.051141778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:28.106" endtime="20201115 23:03:28.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.148" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:28.117" endtime="20201115 23:03:28.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.160" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.157" endtime="20201115 23:03:28.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.166" level="INFO">VALUE: [9.897200000000272e-05, 9.88609999999987e-05, 9.892999999999708e-05, 9.84860000000018e-05, 9.841700000000342e-05, 9.845800000000265e-05, 9.850000000000136e-05, 9.894400000000358e-05, 9.900000000000186e-05, 9.86530000000041e-05, 9.83059999999994e-05, 9.92359999999956e-05, 9.87359999999951e-05, 9.827800000000025e-05, 9.84730000000017e-05, 9.91939999999969e-05, 9.917999999999733e-05, 9.854200000000007e-05, 9.904200000000057e-05, 9.88479999999986e-05, 9.83609999999982e-05, 9.890199999999794e-05, 9.86939999999964e-05, 9.847199999999529e-05, 9.861099999999845e-05, 9.919499999999637e-05, 9.897200000000272e-05, 9.879100000000085e-05, 9.855500000000017e-05, 9.84860000000018e-05, 9.890200000000487e-05, 9.827700000000078e-05, 9.86530000000041e-05, 9.894499999999612e-05, 9.844400000000308e-05, 9.888900000000478e-05, 9.912499999999852e-05, 9.837499999999777e-05, 9.845900000000213e-05, 9.861099999999845e-05, 9.855599999999964e-05, 9.854200000000007e-05, 9.908399999999928e-05, 9.850000000000136e-05, 9.827800000000025e-05, 9.888900000000478e-05, 9.854200000000007e-05, 9.872200000000247e-05, 9.88059999999999e-05, 9.840299999999691e-05]</msg>
<status status="PASS" starttime="20201115 23:03:28.162" endtime="20201115 23:03:28.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.150" endtime="20201115 23:03:28.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.175" endtime="20201115 23:03:28.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.184" endtime="20201115 23:03:28.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.179" endtime="20201115 23:03:28.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.171" endtime="20201115 23:03:28.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.652" endtime="20201115 23:03:28.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.648" endtime="20201115 23:03:28.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.646" endtime="20201115 23:03:28.211"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.216" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.238" endtime="20201115 23:03:28.257"></status>
</kw>
<msg timestamp="20201115 23:03:28.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.235" endtime="20201115 23:03:28.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.261" endtime="20201115 23:03:28.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.267" endtime="20201115 23:03:28.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.227" endtime="20201115 23:03:28.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.222" endtime="20201115 23:03:28.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.291" endtime="20201115 23:03:28.631"></status>
</kw>
<msg timestamp="20201115 23:03:28.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046509806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.287" endtime="20201115 23:03:28.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046509806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.641" endtime="20201115 23:03:28.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.659" endtime="20201115 23:03:28.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.280" endtime="20201115 23:03:28.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.275" endtime="20201115 23:03:28.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.677" level="INFO">${RESULT} = [{'time': 0.046509806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.988899999999884e-05, 'source_diff': 9.988899999999884e-05}, {'time': 0.046620111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:28.668" endtime="20201115 23:03:28.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.707" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:28.679" endtime="20201115 23:03:28.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.718" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.716" endtime="20201115 23:03:28.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.725" level="INFO">VALUE: [9.988899999999884e-05, 9.994399999999765e-05, 9.968100000000424e-05, 9.980500000000142e-05, 0.00010024999999999618, 0.00010024999999999618, 9.944500000000356e-05, 9.929200000000082e-05, 9.965299999999816e-05, 9.937499999999877e-05, 9.93479999999991e-05, 9.948599999999586e-05, 0.00010008300000000081, 0.0001001530000000056, 9.940299999999791e-05, 9.992999999999808e-05, 9.958399999999978e-05, 9.959699999999988e-05, 9.994500000000406e-05, 0.00010024999999999618, 0.00010015299999999866, 9.970799999999697e-05, 9.950000000000236e-05, 9.979200000000132e-05, 0.00010008300000000081, 0.00010011099999999995, 9.951300000000246e-05, 9.99860000000033e-05, 9.9513999999995e-05, 9.976400000000218e-05, 9.93060000000004e-05, 0.0001000139999999955, 0.00010013899999999909, 9.962500000000596e-05, 9.977800000000175e-05, 9.959699999999988e-05, 9.95280000000015e-05, 0.00010012499999999952, 9.98060000000009e-05, 9.951400000000193e-05, 0.00010015299999999866, 9.933400000000647e-05, 9.998700000000277e-05, 9.970900000000338e-05, 0.00010013899999999909, 9.970899999999644e-05, 9.995900000000363e-05, 9.99860000000033e-05, 9.954200000000107e-05, 0.0001002359999999966]</msg>
<status status="PASS" starttime="20201115 23:03:28.721" endtime="20201115 23:03:28.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.709" endtime="20201115 23:03:28.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.735" endtime="20201115 23:03:28.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.743" endtime="20201115 23:03:28.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.739" endtime="20201115 23:03:28.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.730" endtime="20201115 23:03:28.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.218" endtime="20201115 23:03:28.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.214" endtime="20201115 23:03:28.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.212" endtime="20201115 23:03:28.770"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.775" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.797" endtime="20201115 23:03:28.816"></status>
</kw>
<msg timestamp="20201115 23:03:28.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.794" endtime="20201115 23:03:28.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.820" endtime="20201115 23:03:28.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.826" endtime="20201115 23:03:28.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.786" endtime="20201115 23:03:28.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.780" endtime="20201115 23:03:28.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.850" endtime="20201115 23:03:29.187"></status>
</kw>
<msg timestamp="20201115 23:03:29.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04578975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045890556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:28.846" endtime="20201115 23:03:29.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04578975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045890556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:29.196" endtime="20201115 23:03:29.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.215" endtime="20201115 23:03:29.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.839" endtime="20201115 23:03:29.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.834" endtime="20201115 23:03:29.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.232" level="INFO">${RESULT} = [{'time': 0.045890556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001008060000000019, 'source_diff': 0.0001008060000000019}, {'time': 0.045997806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:29.223" endtime="20201115 23:03:29.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.262" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:29.234" endtime="20201115 23:03:29.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.273" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.271" endtime="20201115 23:03:29.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.281" level="INFO">VALUE: [0.0001008060000000019, 0.00010107000000000171, 0.00010044400000000508, 0.00010093100000000549, 0.00010116699999999923, 0.00010054200000000207, 0.00010070899999999744, 0.00010122200000000497, 0.00010048599999999686, 0.00010088899999999984, 0.00010073600000000404, 0.00010066699999999873, 0.00010079200000000232, 0.00010072200000000447, 0.0001008480000000006, 0.00010034700000000063, 0.00010113900000000009, 0.0001005559999999947, 0.00010033300000000106, 0.00010098599999999736, 0.00010052700000000303, 0.00010068000000000576, 0.00010062500000000002, 0.00010056900000000174, 0.00010043100000000499, 0.00010090299999999941, 0.00010104199999999564, 0.00010049999999999643, 0.00010080500000000242, 0.00010087500000000027, 0.0001010410000000031, 0.0001003610000000002, 0.00010108300000000181, 0.00010047199999999729, 0.00010120799999999847, 0.00010034700000000063, 0.00010061100000000045, 0.00010038899999999934, 0.00010049999999999643, 0.00010090299999999941, 0.00010045800000000465, 0.00010072299999999701, 0.00010102700000000353, 0.0001009159999999995, 0.00010107000000000171, 0.0001007359999999971, 0.00010063899999999959, 0.00010047199999999729, 0.00010112500000000052, 0.00010111100000000095]</msg>
<status status="PASS" starttime="20201115 23:03:29.276" endtime="20201115 23:03:29.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.264" endtime="20201115 23:03:29.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.290" endtime="20201115 23:03:29.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.298" endtime="20201115 23:03:29.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.294" endtime="20201115 23:03:29.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.285" endtime="20201115 23:03:29.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.776" endtime="20201115 23:03:29.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.772" endtime="20201115 23:03:29.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.771" endtime="20201115 23:03:29.325"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.330" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.352" endtime="20201115 23:03:29.371"></status>
</kw>
<msg timestamp="20201115 23:03:29.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.348" endtime="20201115 23:03:29.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.374" endtime="20201115 23:03:29.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.381" endtime="20201115 23:03:29.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.341" endtime="20201115 23:03:29.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.335" endtime="20201115 23:03:29.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.404" endtime="20201115 23:03:29.743"></status>
</kw>
<msg timestamp="20201115 23:03:29.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04562775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045729819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:29.401" endtime="20201115 23:03:29.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04562775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045729819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:29.752" endtime="20201115 23:03:29.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.770" endtime="20201115 23:03:29.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.394" endtime="20201115 23:03:29.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.389" endtime="20201115 23:03:29.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.788" level="INFO">${RESULT} = [{'time': 0.045729819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001020689999999963, 'source_diff': 0.0001020689999999963}, {'time': 0.045836097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:29.779" endtime="20201115 23:03:29.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.819" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:29.790" endtime="20201115 23:03:29.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.830" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.828" endtime="20201115 23:03:29.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.837" level="INFO">VALUE: [0.0001020689999999963, 0.00010174999999999768, 0.00010183400000000203, 0.00010158299999999537, 0.00010174999999999768, 0.00010204099999999716, 0.00010145799999999872, 0.00010165300000000016, 0.00010190200000000094, 0.00010222300000000545, 0.00010144499999999862, 0.00010177700000000428, 0.0001013610000000012, 0.00010211100000000195, 0.00010159700000000188, 0.00010201299999999802, 0.00010231999999999603, 0.00010141699999999948, 0.00010193100000000649, 0.00010170900000000538, 0.00010197199999999879, 0.00010166699999999973, 0.00010209700000000238, 0.00010177800000000375, 0.00010145899999999819, 0.00010204199999999664, 0.0001021809999999998, 0.0001020689999999963, 0.00010209700000000238, 0.00010229199999999689, 0.00010213900000000109, 0.00010206999999999578, 0.00010208300000000281, 0.00010148599999999786, 0.00010225000000000511, 0.00010172200000000547, 0.00010170899999999844, 0.00010137500000000077, 0.00010140299999999991, 0.00010187500000000127, 0.00010137500000000077, 0.00010179200000000332, 0.00010176399999999725, 0.00010194400000000658, 0.00010208299999999587, 0.00010190300000000041, 0.0001013339999999946, 0.0001020559999999962, 0.00010152700000000403, 0.0001021809999999998]</msg>
<status status="PASS" starttime="20201115 23:03:29.832" endtime="20201115 23:03:29.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.821" endtime="20201115 23:03:29.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.846" endtime="20201115 23:03:29.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.854" endtime="20201115 23:03:29.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.850" endtime="20201115 23:03:29.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.841" endtime="20201115 23:03:29.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.331" endtime="20201115 23:03:29.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.327" endtime="20201115 23:03:29.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.326" endtime="20201115 23:03:29.881"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.908" endtime="20201115 23:03:29.927"></status>
</kw>
<msg timestamp="20201115 23:03:29.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.905" endtime="20201115 23:03:29.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.931" endtime="20201115 23:03:29.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.937" endtime="20201115 23:03:29.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.897" endtime="20201115 23:03:29.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.891" endtime="20201115 23:03:29.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.961" endtime="20201115 23:03:30.298"></status>
</kw>
<msg timestamp="20201115 23:03:30.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045615944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045718361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.957" endtime="20201115 23:03:30.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045615944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045718361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.308" endtime="20201115 23:03:30.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.327" endtime="20201115 23:03:30.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.950" endtime="20201115 23:03:30.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.945" endtime="20201115 23:03:30.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.344" level="INFO">${RESULT} = [{'time': 0.045718361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010241700000000048, 'source_diff': 0.00010241700000000048}, {'time': 0.045827694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:30.335" endtime="20201115 23:03:30.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.377" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:30.346" endtime="20201115 23:03:30.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.388" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.385" endtime="20201115 23:03:30.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.394" level="INFO">VALUE: [0.00010241700000000048, 0.0001028610000000027, 0.00010261100000000245, 0.00010263899999999465, 0.00010306999999999678, 0.0001030559999999972, 0.00010280499999999748, 0.00010304199999999764, 0.00010272199999999954, 0.00010332000000000396, 0.00010245900000000613, 0.00010293100000000055, 0.00010263900000000159, 0.00010290300000000141, 0.00010249999999999843, 0.000102513999999998, 0.00010247200000000622, 0.00010288900000000184, 0.00010293000000000108, 0.0001025689999999968, 0.0001025559999999967, 0.00010265300000000116, 0.00010327699999999884, 0.0001032359999999996, 0.00010320800000000047, 0.0001028610000000027, 0.00010263900000000159, 0.0001023889999999944, 0.00010309700000000338, 0.0001024860000000058, 0.00010311100000000295, 0.00010251400000000493, 0.0001028060000000039, 0.00010265300000000116, 0.00010291699999999404, 0.0001027359999999991, 0.00010329199999999789, 0.00010262500000000202, 0.00010331999999999703, 0.00010248599999999886, 0.00010237500000000177, 0.00010313799999999568, 0.00010234700000000263, 0.00010340200000000244, 0.0001026940000000004, 0.0001032359999999996, 0.00010276399999999825, 0.00010232000000000296, 0.00010313900000000209, 0.00010277799999999782]</msg>
<status status="PASS" starttime="20201115 23:03:30.390" endtime="20201115 23:03:30.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.378" endtime="20201115 23:03:30.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.403" endtime="20201115 23:03:30.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.412" endtime="20201115 23:03:30.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.407" endtime="20201115 23:03:30.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.399" endtime="20201115 23:03:30.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.887" endtime="20201115 23:03:30.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.883" endtime="20201115 23:03:30.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.882" endtime="20201115 23:03:30.438"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.466" endtime="20201115 23:03:30.485"></status>
</kw>
<msg timestamp="20201115 23:03:30.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.462" endtime="20201115 23:03:30.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.489" endtime="20201115 23:03:30.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.496" endtime="20201115 23:03:30.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.455" endtime="20201115 23:03:30.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.449" endtime="20201115 23:03:30.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.522" endtime="20201115 23:03:30.859"></status>
</kw>
<msg timestamp="20201115 23:03:30.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045694208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.517" endtime="20201115 23:03:30.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045694208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045797653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.868" endtime="20201115 23:03:30.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.887" endtime="20201115 23:03:30.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.510" endtime="20201115 23:03:30.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.504" endtime="20201115 23:03:30.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.904" level="INFO">${RESULT} = [{'time': 0.045797653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010344500000000062, 'source_diff': 0.00010344500000000062}, {'time': 0.045910931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:30.895" endtime="20201115 23:03:30.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.935" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:30.906" endtime="20201115 23:03:30.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.946" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.944" endtime="20201115 23:03:30.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.953" level="INFO">VALUE: [0.00010344500000000062, 0.00010354200000000507, 0.0001036940000000014, 0.00010349999999999943, 0.00010387500000000327, 0.00010333400000000353, 0.00010340299999999497, 0.0001035280000000055, 0.00010351299999999952, 0.00010368000000000183, 0.00010397199999999385, 0.00010376399999999925, 0.00010407000000000471, 0.00010347200000000029, 0.00010354199999999814, 0.00010386200000000317, 0.00010411100000000395, 0.00010412499999999658, 0.00010344500000000062, 0.0001036810000000013, 0.00010361100000000345, 0.00010387500000000327, 0.00010368000000000183, 0.00010333300000000406, 0.00010380599999999796, 0.00010395800000000122, 0.00010383299999999762, 0.00010370800000000097, 0.00010374999999999968, 0.00010420800000000147, 0.00010415199999999625, 0.00010399999999999993, 0.00010341700000000148, 0.00010429199999999889, 0.00010343100000000105, 0.00010381999999999753, 0.00010365300000000216, 0.00010349999999999943, 0.00010352699999999909, 0.00010433299999999812, 0.00010359699999999694, 0.0001031940000000009, 0.00010361100000000345, 0.0001038889999999959, 0.0001037360000000001, 0.00010384699999999719, 0.00010361099999999651, 0.00010395800000000122, 0.00010349999999999943, 0.00010358299999999737]</msg>
<status status="PASS" starttime="20201115 23:03:30.948" endtime="20201115 23:03:30.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.937" endtime="20201115 23:03:30.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.962" endtime="20201115 23:03:30.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.970" endtime="20201115 23:03:30.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.966" endtime="20201115 23:03:30.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.957" endtime="20201115 23:03:30.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.445" endtime="20201115 23:03:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.441" endtime="20201115 23:03:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.439" endtime="20201115 23:03:30.997"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.024" endtime="20201115 23:03:31.044"></status>
</kw>
<msg timestamp="20201115 23:03:31.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.021" endtime="20201115 23:03:31.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.047" endtime="20201115 23:03:31.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.054" endtime="20201115 23:03:31.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.013" endtime="20201115 23:03:31.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.008" endtime="20201115 23:03:31.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.078" endtime="20201115 23:03:31.416"></status>
</kw>
<msg timestamp="20201115 23:03:31.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046074486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.074" endtime="20201115 23:03:31.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045969917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046074486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.425" endtime="20201115 23:03:31.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.443" endtime="20201115 23:03:31.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.067" endtime="20201115 23:03:31.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.062" endtime="20201115 23:03:31.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:31.460" level="INFO">${RESULT} = [{'time': 0.046074486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001045689999999988, 'source_diff': 0.0001045689999999988}, {'time': 0.046187639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:31.452" endtime="20201115 23:03:31.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:31.491" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:31.462" endtime="20201115 23:03:31.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.502" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:03:31.500" endtime="20201115 23:03:31.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.509" level="INFO">VALUE: [0.0001045689999999988, 0.0001043610000000042, 0.00010484699999999819, 0.00010455499999999923, 0.00010480599999999896, 0.00010494499999999518, 0.00010522300000000151, 0.00010484699999999819, 0.00010472200000000154, 0.000104514, 0.00010527800000000032, 0.00010500000000000093, 0.00010475000000000068, 0.00010484700000000513, 0.00010448600000000086, 0.00010475000000000068, 0.00010498700000000083, 0.00010434700000000463, 0.00010469500000000187, 0.00010470800000000197, 0.00010490300000000341, 0.00010529199999999989, 0.00010491700000000298, 0.00010484700000000513, 0.00010463900000000359, 0.00010461099999999751, 0.00010476400000000025, 0.00010490300000000341, 0.00010491700000000298, 0.00010462500000000402, 0.00010468099999999536, 0.00010500000000000093, 0.00010512499999999758, 0.00010491700000000298, 0.00010465299999999622, 0.00010468000000000283, 0.00010479199999999939, 0.00010468000000000283, 0.0001042360000000006, 0.00010458299999999837, 0.00010487500000000427, 0.00010476400000000025, 0.00010440299999999597, 0.00010493099999999561, 0.00010481899999999905, 0.0001050140000000005, 0.00010462499999999708, 0.00010515299999999672, 0.0001047360000000011, 0.00010509699999999844]</msg>
<status status="PASS" starttime="20201115 23:03:31.504" endtime="20201115 23:03:31.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.493" endtime="20201115 23:03:31.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.518" endtime="20201115 23:03:31.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:31.527" endtime="20201115 23:03:31.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.522" endtime="20201115 23:03:31.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.513" endtime="20201115 23:03:31.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.004" endtime="20201115 23:03:31.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.999" endtime="20201115 23:03:31.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.998" endtime="20201115 23:03:31.554"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.582" endtime="20201115 23:03:31.602"></status>
</kw>
<msg timestamp="20201115 23:03:31.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.579" endtime="20201115 23:03:31.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.605" endtime="20201115 23:03:31.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.612" endtime="20201115 23:03:31.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.572" endtime="20201115 23:03:31.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.565" endtime="20201115 23:03:31.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.636" endtime="20201115 23:03:31.974"></status>
</kw>
<msg timestamp="20201115 23:03:31.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047529986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047635764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.632" endtime="20201115 23:03:31.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047529986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047635764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.983" endtime="20201115 23:03:32.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.002" endtime="20201115 23:03:32.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.625" endtime="20201115 23:03:32.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.620" endtime="20201115 23:03:32.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.019" level="INFO">${RESULT} = [{'time': 0.047635764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010577799999999388, 'source_diff': 0.00010577799999999388}, {'time': 0.047752181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:32.010" endtime="20201115 23:03:32.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.049" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:32.021" endtime="20201115 23:03:32.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.060" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.058" endtime="20201115 23:03:32.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.067" level="INFO">VALUE: [0.00010577799999999388, 0.000105514000000001, 0.0001062360000000026, 0.00010579200000000039, 0.0001062219999999961, 0.00010552700000000109, 0.00010616700000000423, 0.00010631900000000055, 0.00010545900000000219, 0.00010577800000000082, 0.00010570800000000297, 0.00010588900000000484, 0.00010537499999999783, 0.00010566599999999732, 0.00010584700000000613, 0.00010556999999999928, 0.00010613899999999815, 0.00010552800000000057, 0.00010568099999999636, 0.00010569499999999593, 0.00010612499999999858, 0.00010602800000000107, 0.00010567999999999689, 0.000105514000000001, 0.0001055559999999997, 0.00010630600000000046, 0.00010601300000000202, 0.00010555500000000023, 0.00010602800000000107, 0.00010613899999999815, 0.00010586099999999876, 0.0001061810000000038, 0.0001061810000000038, 0.0001055689999999998, 0.00010536099999999826, 0.00010631900000000055, 0.00010583299999999962, 0.00010575000000000168, 0.00010611100000000595, 0.00010622200000000304, 0.0001060690000000003, 0.00010636099999999926, 0.00010613899999999815, 0.0001055689999999998, 0.00010608299999999987, 0.00010584699999999919, 0.00010617999999999739, 0.00010559699999999894, 0.00010612500000000552, 0.00010552800000000057]</msg>
<status status="PASS" starttime="20201115 23:03:32.063" endtime="20201115 23:03:32.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.051" endtime="20201115 23:03:32.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.076" endtime="20201115 23:03:32.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.085" endtime="20201115 23:03:32.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.080" endtime="20201115 23:03:32.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.071" endtime="20201115 23:03:32.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.561" endtime="20201115 23:03:32.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.557" endtime="20201115 23:03:32.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.555" endtime="20201115 23:03:32.112"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.139" endtime="20201115 23:03:32.158"></status>
</kw>
<msg timestamp="20201115 23:03:32.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.135" endtime="20201115 23:03:32.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.162" endtime="20201115 23:03:32.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.168" endtime="20201115 23:03:32.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.128" endtime="20201115 23:03:32.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.122" endtime="20201115 23:03:32.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.192" endtime="20201115 23:03:32.531"></status>
</kw>
<msg timestamp="20201115 23:03:32.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045582903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045689792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.188" endtime="20201115 23:03:32.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045582903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045689792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.540" endtime="20201115 23:03:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.559" endtime="20201115 23:03:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.181" endtime="20201115 23:03:32.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.176" endtime="20201115 23:03:32.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.577" level="INFO">${RESULT} = [{'time': 0.045689792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001068889999999989, 'source_diff': 0.0001068889999999989}, {'time': 0.045807083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:32.568" endtime="20201115 23:03:32.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.610" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:32.579" endtime="20201115 23:03:32.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.622" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.619" endtime="20201115 23:03:32.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.699" level="INFO">VALUE: [0.0001068889999999989, 0.00010651399999999506, 0.00010637499999999883, 0.00010719500000000437, 0.00010668000000000483, 0.00010627800000000132, 0.00010634699999999969, 0.00010716699999999829, 0.00010674999999999574, 0.00010679100000000191, 0.00010640299999999797, 0.00010630500000000098, 0.00010692999999999814, 0.00010658399999999985, 0.0001072219999999971, 0.00010648600000000286, 0.00010720799999999753, 0.00010679100000000191, 0.00010662499999999908, 0.00010662499999999908, 0.0001071940000000049, 0.00010699999999999599, 0.0001068340000000001, 0.00010648600000000286, 0.00010719499999999743, 0.00010715299999999872, 0.00010677800000000182, 0.00010640299999999797, 0.0001070140000000025, 0.00010737499999999983, 0.00010626400000000175, 0.00010676299999999583, 0.00010636099999999926, 0.00010693000000000508, 0.00010658300000000037, 0.00010690300000000541, 0.00010633300000000012, 0.00010649999999999549, 0.00010724999999999624, 0.00010651399999999506, 0.00010669499999999693, 0.00010617999999999739, 0.00010682000000000053, 0.00010620900000000294, 0.00010670799999999703, 0.00010677800000000182, 0.00010704099999999522, 0.00010634799999999917, 0.00010636099999999926, 0.00010654200000000114]</msg>
<status status="PASS" starttime="20201115 23:03:32.624" endtime="20201115 23:03:32.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.612" endtime="20201115 23:03:32.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.712" endtime="20201115 23:03:32.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.720" endtime="20201115 23:03:32.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.716" endtime="20201115 23:03:32.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.707" endtime="20201115 23:03:32.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.118" endtime="20201115 23:03:32.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.114" endtime="20201115 23:03:32.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.113" endtime="20201115 23:03:32.747"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.774" endtime="20201115 23:03:32.794"></status>
</kw>
<msg timestamp="20201115 23:03:32.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.771" endtime="20201115 23:03:32.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.797" endtime="20201115 23:03:32.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.803" endtime="20201115 23:03:32.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.764" endtime="20201115 23:03:32.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.758" endtime="20201115 23:03:32.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.827" endtime="20201115 23:03:33.167"></status>
</kw>
<msg timestamp="20201115 23:03:33.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045599444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.824" endtime="20201115 23:03:33.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045599444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045707181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.177" endtime="20201115 23:03:33.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.195" endtime="20201115 23:03:33.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.817" endtime="20201115 23:03:33.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.812" endtime="20201115 23:03:33.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.212" level="INFO">${RESULT} = [{'time': 0.045707181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010773699999999664, 'source_diff': 0.00010773699999999664}, {'time': 0.045823583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:33.203" endtime="20201115 23:03:33.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.245" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:33.214" endtime="20201115 23:03:33.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.256" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.254" endtime="20201115 23:03:33.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.262" level="INFO">VALUE: [0.00010773699999999664, 0.00010752700000000309, 0.00010741699999999854, 0.00010748600000000386, 0.00010798700000000383, 0.00010798599999999742, 0.00010745800000000472, 0.0001075419999999952, 0.00010794399999999871, 0.00010827800000000332, 0.00010831899999999561, 0.00010762500000000008, 0.00010809799999999398, 0.00010763899999999965, 0.00010740299999999897, 0.00010790299999999947, 0.00010780600000000196, 0.00010783300000000162, 0.00010804100000000316, 0.00010783299999999468, 0.00010748599999999692, 0.00010784700000000119, 0.0001082360000000046, 0.00010769399999999846, 0.00010752800000000257, 0.00010811100000000101, 0.0001080140000000035, 0.00010797199999999785, 0.00010792999999999914, 0.00010761100000000051, 0.00010744499999999768, 0.00010744399999999821, 0.00010761100000000051, 0.00010784700000000119, 0.00010820800000000547, 0.00010815299999999972, 0.00010779199999999545, 0.0001082769999999969, 0.00010830599999999552, 0.0001078889999999999, 0.0001075690000000018, 0.00010806999999999484, 0.00010786100000000076, 0.00010747200000000429, 0.00010750000000000343, 0.00010723599999999667, 0.00010787500000000033, 0.00010775000000000368, 0.00010755500000000223, 0.00010791599999999957]</msg>
<status status="PASS" starttime="20201115 23:03:33.258" endtime="20201115 23:03:33.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.247" endtime="20201115 23:03:33.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.271" endtime="20201115 23:03:33.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.280" endtime="20201115 23:03:33.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.275" endtime="20201115 23:03:33.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.267" endtime="20201115 23:03:33.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.754" endtime="20201115 23:03:33.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.750" endtime="20201115 23:03:33.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.748" endtime="20201115 23:03:33.306"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.311" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.334" endtime="20201115 23:03:33.354"></status>
</kw>
<msg timestamp="20201115 23:03:33.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.330" endtime="20201115 23:03:33.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.357" endtime="20201115 23:03:33.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.364" endtime="20201115 23:03:33.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.323" endtime="20201115 23:03:33.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.317" endtime="20201115 23:03:33.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.389" endtime="20201115 23:03:33.727"></status>
</kw>
<msg timestamp="20201115 23:03:33.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046667611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046776625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.384" endtime="20201115 23:03:33.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046667611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046776625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.736" endtime="20201115 23:03:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.755" endtime="20201115 23:03:33.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.377" endtime="20201115 23:03:33.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.372" endtime="20201115 23:03:33.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.772" level="INFO">${RESULT} = [{'time': 0.046776625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001090140000000045, 'source_diff': 0.0001090140000000045}, {'time': 0.046894972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:33.763" endtime="20201115 23:03:33.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.803" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:33.775" endtime="20201115 23:03:33.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.814" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.811" endtime="20201115 23:03:33.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.819" level="INFO">VALUE: [0.0001090140000000045, 0.00010883300000000262, 0.00010843099999999911, 0.00010841699999999954, 0.00010838800000000093, 0.00010852799999999663, 0.00010881900000000305, 0.00010827799999999638, 0.0001085560000000027, 0.00010918099999999986, 0.00010887500000000133, 0.00010907000000000278, 0.00010883299999999568, 0.000108514000000004, 0.00010884700000000219, 0.00010874999999999774, 0.00010909800000000192, 0.00010929199999999695, 0.00010840299999999997, 0.0001090419999999967, 0.00010911100000000201, 0.00010844499999999868, 0.00010908300000000287, 0.0001092219999999991, 0.00010898599999999842, 0.00010831899999999561, 0.00010904200000000364, 0.00010870799999999903, 0.00010891600000000057, 0.00010905599999999627, 0.00010834700000000169, 0.00010916600000000082, 0.00010844500000000562, 0.00010852700000000409, 0.00010902799999999713, 0.00010858300000000237, 0.00010882000000000253, 0.00010906899999999636, 0.00010874999999999774, 0.00010886099999999482, 0.00010926399999999781, 0.00010870799999999903, 0.00010913900000000115, 0.00010899999999999799, 0.00010851399999999706, 0.00010852700000000409, 0.00010855599999999577, 0.00010897199999999885, 0.00010880599999999602, 0.00010909700000000244]</msg>
<status status="PASS" starttime="20201115 23:03:33.816" endtime="20201115 23:03:33.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.805" endtime="20201115 23:03:33.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.828" endtime="20201115 23:03:33.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.836" endtime="20201115 23:03:33.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.832" endtime="20201115 23:03:33.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.824" endtime="20201115 23:03:33.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.313" endtime="20201115 23:03:33.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.309" endtime="20201115 23:03:33.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.307" endtime="20201115 23:03:33.863"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.868" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.890" endtime="20201115 23:03:33.910"></status>
</kw>
<msg timestamp="20201115 23:03:33.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.887" endtime="20201115 23:03:33.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.914" endtime="20201115 23:03:33.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.920" endtime="20201115 23:03:33.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.879" endtime="20201115 23:03:33.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.874" endtime="20201115 23:03:33.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.944" endtime="20201115 23:03:34.282"></status>
</kw>
<msg timestamp="20201115 23:03:34.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046057903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046168139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.940" endtime="20201115 23:03:34.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046057903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046168139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:34.291" endtime="20201115 23:03:34.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.311" endtime="20201115 23:03:34.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.933" endtime="20201115 23:03:34.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.928" endtime="20201115 23:03:34.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:34.328" level="INFO">${RESULT} = [{'time': 0.046168139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011023599999999967, 'source_diff': 0.00011023599999999967}, {'time': 0.046285458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:34.319" endtime="20201115 23:03:34.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:34.358" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:34.330" endtime="20201115 23:03:34.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.369" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:03:34.366" endtime="20201115 23:03:34.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.374" level="INFO">VALUE: [0.00011023599999999967, 0.00010999999999999899, 0.00011019400000000096, 0.00010962499999999514, 0.00010926399999999781, 0.0001093890000000014, 0.0001095690000000038, 0.00011034700000000369, 0.00011011100000000301, 0.00010970800000000003, 0.00010969499999999993, 0.00010994500000000018, 0.00011005599999999727, 0.00010945800000000672, 0.00011019400000000096, 0.000109514000000005, 0.00010980499999999754, 0.00010963900000000165, 0.00010961099999999557, 0.00011000000000000593, 0.00010934699999999575, 0.00010963899999999471, 0.00011019500000000043, 0.00010981999999999659, 0.00011029200000000489, 0.00011024999999999924, 0.00010940300000000097, 0.00011012500000000258, 0.00010984699999999625, 0.00011004200000000464, 0.00011013799999999574, 0.00010938899999999446, 0.00011013899999999521, 0.00010962500000000208, 0.00011002699999999865, 0.00011009799999999598, 0.00010997199999999985, 0.00010941600000000107, 0.00010991700000000104, 0.00010923599999999867, 0.00010926399999999781, 0.00011002799999999813, 0.00010923599999999867, 0.00010990199999999506, 0.00010937500000000183, 0.00010997199999999985, 0.00010987500000000233, 0.00010945899999999925, 0.000109596999999996, 0.00011012500000000258]</msg>
<status status="PASS" starttime="20201115 23:03:34.371" endtime="20201115 23:03:34.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.359" endtime="20201115 23:03:34.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.383" endtime="20201115 23:03:34.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:34.391" endtime="20201115 23:03:34.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.387" endtime="20201115 23:03:34.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.378" endtime="20201115 23:03:34.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.870" endtime="20201115 23:03:34.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.866" endtime="20201115 23:03:34.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.864" endtime="20201115 23:03:34.418"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.445" endtime="20201115 23:03:34.465"></status>
</kw>
<msg timestamp="20201115 23:03:34.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.442" endtime="20201115 23:03:34.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.468" endtime="20201115 23:03:34.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.475" endtime="20201115 23:03:34.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.434" endtime="20201115 23:03:34.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.429" endtime="20201115 23:03:34.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.499" endtime="20201115 23:03:34.840"></status>
</kw>
<msg timestamp="20201115 23:03:34.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045741917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045852792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:34.495" endtime="20201115 23:03:34.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045741917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045852792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:34.849" endtime="20201115 23:03:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.868" endtime="20201115 23:03:34.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.488" endtime="20201115 23:03:34.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.483" endtime="20201115 23:03:34.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:34.885" level="INFO">${RESULT} = [{'time': 0.045852792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011087500000000333, 'source_diff': 0.00011087500000000333}, {'time': 0.045972125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:34.876" endtime="20201115 23:03:34.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:34.917" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:34.887" endtime="20201115 23:03:34.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.928" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:03:34.926" endtime="20201115 23:03:34.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.933" level="INFO">VALUE: [0.00011087500000000333, 0.00011087500000000333, 0.00011112499999999664, 0.00011098699999999989, 0.00011048599999999992, 0.00011120800000000153, 0.00011036099999999632, 0.00011116700000000229, 0.00011104200000000564, 0.00011123600000000067, 0.00011083399999999716, 0.00011052699999999915, 0.00011040300000000197, 0.0001107220000000006, 0.00011062500000000308, 0.00011104200000000564, 0.00011098600000000042, 0.00011047299999999982, 0.0001109169999999951, 0.0001107220000000006, 0.00011070800000000103, 0.0001110560000000052, 0.00011047299999999982, 0.00011087500000000333, 0.00011069500000000093, 0.00011074999999999974, 0.00011080600000000496, 0.00011040300000000197, 0.00011033300000000412, 0.0001105419999999982, 0.00011062500000000308, 0.00011059799999999648, 0.00011066700000000179, 0.00011066700000000179, 0.00011059700000000394, 0.0001104020000000025, 0.00011087500000000333, 0.00011101399999999956, 0.00011061099999999657, 0.00011080600000000496, 0.00011079199999999845, 0.00011052699999999915, 0.00011051399999999906, 0.00011091599999999563, 0.00011074999999999974, 0.00011016700000000129, 0.00011025000000000618, 0.00011051399999999906, 0.00011113900000000315, 0.0001110419999999987]</msg>
<status status="PASS" starttime="20201115 23:03:34.930" endtime="20201115 23:03:34.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.919" endtime="20201115 23:03:34.936"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.942" endtime="20201115 23:03:34.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:34.950" endtime="20201115 23:03:34.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.946" endtime="20201115 23:03:34.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.938" endtime="20201115 23:03:34.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.425" endtime="20201115 23:03:34.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.421" endtime="20201115 23:03:34.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.419" endtime="20201115 23:03:34.977"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.982" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.004" endtime="20201115 23:03:35.024"></status>
</kw>
<msg timestamp="20201115 23:03:35.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.001" endtime="20201115 23:03:35.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.028" endtime="20201115 23:03:35.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.035" endtime="20201115 23:03:35.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.993" endtime="20201115 23:03:35.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.988" endtime="20201115 23:03:35.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.058" endtime="20201115 23:03:35.397"></status>
</kw>
<msg timestamp="20201115 23:03:35.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045977194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046088958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:35.055" endtime="20201115 23:03:35.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045977194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046088958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:35.406" endtime="20201115 23:03:35.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.425" endtime="20201115 23:03:35.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.048" endtime="20201115 23:03:35.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.043" endtime="20201115 23:03:35.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:35.443" level="INFO">${RESULT} = [{'time': 0.046088958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011176400000000031, 'source_diff': 0.00011176400000000031}, {'time': 0.046207319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:35.435" endtime="20201115 23:03:35.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:35.473" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:35.446" endtime="20201115 23:03:35.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.485" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:03:35.482" endtime="20201115 23:03:35.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.490" level="INFO">VALUE: [0.00011176400000000031, 0.00011187499999999739, 0.00011130600000000546, 0.0001117090000000015, 0.00011156999999999834, 0.00011236200000000474, 0.00011161099999999757, 0.00011202800000000013, 0.00011140199999999656, 0.00011168099999999542, 0.00011188899999999696, 0.00011194399999999577, 0.00011173600000000117, 0.00011161099999999757, 0.00011151400000000006, 0.00011126399999999981, 0.00011166699999999585, 0.00011170800000000203, 0.00011151400000000006, 0.00011155599999999877, 0.00011134799999999723, 0.00011195799999999534, 0.00011140299999999603, 0.00011175000000000074, 0.00011162499999999714, 0.00011195800000000228, 0.00011166599999999638, 0.00011225000000000124, 0.00011125000000000024, 0.0001122499999999943, 0.00011191700000000304, 0.00011151400000000006, 0.00011166699999999585, 0.00011184699999999825, 0.00011170800000000203, 0.0001118890000000039, 0.00011133299999999818, 0.00011161099999999757, 0.00011144500000000168, 0.00011137500000000383, 0.00011205599999999927, 0.00011147200000000135, 0.00011147300000000082, 0.0001115419999999992, 0.00011166599999999638, 0.0001113619999999968, 0.00011162499999999714, 0.00011200000000000099, 0.00011127799999999938, 0.00011211100000000501]</msg>
<status status="PASS" starttime="20201115 23:03:35.487" endtime="20201115 23:03:35.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.475" endtime="20201115 23:03:35.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.499" endtime="20201115 23:03:35.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:35.507" endtime="20201115 23:03:35.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.503" endtime="20201115 23:03:35.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.494" endtime="20201115 23:03:35.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.984" endtime="20201115 23:03:35.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.980" endtime="20201115 23:03:35.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.978" endtime="20201115 23:03:35.534"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.562" endtime="20201115 23:03:35.582"></status>
</kw>
<msg timestamp="20201115 23:03:35.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.558" endtime="20201115 23:03:35.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.585" endtime="20201115 23:03:35.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.591" endtime="20201115 23:03:35.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.551" endtime="20201115 23:03:35.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.544" endtime="20201115 23:03:35.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.615" endtime="20201115 23:03:35.955"></status>
</kw>
<msg timestamp="20201115 23:03:35.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046411306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:35.612" endtime="20201115 23:03:35.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046411306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046524319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:35.964" endtime="20201115 23:03:35.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.983" endtime="20201115 23:03:35.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.604" endtime="20201115 23:03:35.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.600" endtime="20201115 23:03:35.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:36.001" level="INFO">${RESULT} = [{'time': 0.046524319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011301300000000208, 'source_diff': 0.00011301300000000208}, {'time': 0.046645861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:35.991" endtime="20201115 23:03:36.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:36.031" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:36.003" endtime="20201115 23:03:36.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.042" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:03:36.040" endtime="20201115 23:03:36.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.048" level="INFO">VALUE: [0.00011301300000000208, 0.00011244399999999627, 0.00011261099999999857, 0.00011273599999999523, 0.00011261100000000551, 0.00011279100000000097, 0.00011256899999999986, 0.00011258400000000585, 0.00011280500000000054, 0.0001129169999999971, 0.00011225000000000124, 0.00011293000000000414, 0.0001130550000000008, 0.00011265299999999728, 0.00011243100000000311, 0.00011231999999999909, 0.00011288899999999796, 0.00011251400000000106, 0.00011270799999999609, 0.00011236100000000526, 0.00011295799999999634, 0.00011248599999999498, 0.00011284799999999873, 0.00011293099999999667, 0.00011231899999999961, 0.00011281900000000011, 0.00011251400000000106, 0.0001125420000000002, 0.00011284699999999925, 0.00011305600000000027, 0.00011299999999999505, 0.00011269500000000293, 0.0001129169999999971, 0.00011311099999999907, 0.00011256899999999986, 0.0001127220000000026, 0.00011240299999999703, 0.00011315199999999831, 0.00011272300000000207, 0.00011265299999999728, 0.00011255599999999977, 0.00011233299999999918, 0.00011277800000000088, 0.00011299999999999505, 0.00011247199999999541, 0.00011230599999999952, 0.00011275000000000174, 0.00011256999999999934, 0.00011227800000000038, 0.00011301400000000156]</msg>
<status status="PASS" starttime="20201115 23:03:36.045" endtime="20201115 23:03:36.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.033" endtime="20201115 23:03:36.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.057" endtime="20201115 23:03:36.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:36.066" endtime="20201115 23:03:36.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.061" endtime="20201115 23:03:36.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.052" endtime="20201115 23:03:36.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.540" endtime="20201115 23:03:36.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.536" endtime="20201115 23:03:36.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.535" endtime="20201115 23:03:36.092"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.119" endtime="20201115 23:03:36.139"></status>
</kw>
<msg timestamp="20201115 23:03:36.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.116" endtime="20201115 23:03:36.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.143" endtime="20201115 23:03:36.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.149" endtime="20201115 23:03:36.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.109" endtime="20201115 23:03:36.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.103" endtime="20201115 23:03:36.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.173" endtime="20201115 23:03:36.511"></status>
</kw>
<msg timestamp="20201115 23:03:36.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045569028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.169" endtime="20201115 23:03:36.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045569028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.520" endtime="20201115 23:03:36.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.539" endtime="20201115 23:03:36.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.162" endtime="20201115 23:03:36.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.157" endtime="20201115 23:03:36.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:36.557" level="INFO">${RESULT} = [{'time': 0.045682375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011334699999999975, 'source_diff': 0.00011334699999999975}, {'time': 0.045806903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:36.549" endtime="20201115 23:03:36.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:36.587" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:36.559" endtime="20201115 23:03:36.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.598" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:03:36.596" endtime="20201115 23:03:36.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.604" level="INFO">VALUE: [0.00011334699999999975, 0.00011395900000000375, 0.00011365299999999828, 0.00011331900000000061, 0.00011406900000000136, 0.00011397200000000385, 0.00011406900000000136, 0.0001140970000000005, 0.00011384700000000025, 0.00011375000000000274, 0.00011388799999999949, 0.00011334799999999923, 0.00011423600000000367, 0.00011426400000000281, 0.00011423599999999673, 0.00011395900000000375, 0.00011427800000000238, 0.00011373599999999623, 0.0001140420000000017, 0.0001139169999999981, 0.00011344399999999727, 0.00011434700000000075, 0.00011427799999999544, 0.00011344400000000421, 0.00011333399999999966, 0.00011345800000000378, 0.00011402800000000213, 0.00011347200000000335, 0.000113597, 0.00011370799999999709, 0.00011351399999999512, 0.00011345900000000325, 0.0001134299999999977, 0.00011408300000000093, 0.00011405600000000127, 0.00011427800000000238, 0.00011415199999999931, 0.00011333399999999966, 0.00011379200000000145, 0.00011393099999999767, 0.00011333300000000018, 0.00011391599999999863, 0.0001140550000000018, 0.00011407000000000084, 0.00011411100000000007, 0.00011377799999999494, 0.00011397200000000385, 0.00011420799999999759, 0.00011333399999999966, 0.00011395800000000428]</msg>
<status status="PASS" starttime="20201115 23:03:36.601" endtime="20201115 23:03:36.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.589" endtime="20201115 23:03:36.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.614" endtime="20201115 23:03:36.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:36.622" endtime="20201115 23:03:36.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.617" endtime="20201115 23:03:36.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.609" endtime="20201115 23:03:36.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.099" endtime="20201115 23:03:36.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.095" endtime="20201115 23:03:36.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.093" endtime="20201115 23:03:36.648"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.654" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.676" endtime="20201115 23:03:36.696"></status>
</kw>
<msg timestamp="20201115 23:03:36.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.672" endtime="20201115 23:03:36.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.699" endtime="20201115 23:03:36.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.706" endtime="20201115 23:03:36.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.665" endtime="20201115 23:03:36.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.659" endtime="20201115 23:03:36.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.731" endtime="20201115 23:03:37.071"></status>
</kw>
<msg timestamp="20201115 23:03:37.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045829806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.728" endtime="20201115 23:03:37.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045829806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045944639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.080" endtime="20201115 23:03:37.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.099" endtime="20201115 23:03:37.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.720" endtime="20201115 23:03:37.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.715" endtime="20201115 23:03:37.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:37.116" level="INFO">${RESULT} = [{'time': 0.045944639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011483300000000168, 'source_diff': 0.00011483300000000168}, {'time': 0.046070014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:37.107" endtime="20201115 23:03:37.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:37.148" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:37.118" endtime="20201115 23:03:37.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.159" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:03:37.157" endtime="20201115 23:03:37.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.166" level="INFO">VALUE: [0.00011483300000000168, 0.00011438899999999946, 0.00011500000000000399, 0.00011518099999999892, 0.00011476400000000331, 0.00011520800000000553, 0.00011447199999999741, 0.00011469499999999799, 0.00011429099999999554, 0.0001148049999999956, 0.00011483300000000168, 0.00011520799999999859, 0.00011436100000000032, 0.00011465199999999981, 0.0001147770000000034, 0.00011497200000000485, 0.00011450000000000349, 0.00011440299999999903, 0.00011480600000000202, 0.00011434800000000023, 0.0001150970000000015, 0.00011427800000000238, 0.00011456900000000186, 0.00011462500000000014, 0.00011505600000000227, 0.00011488899999999996, 0.0001145829999999945, 0.00011497199999999791, 0.00011512500000000064, 0.00011447199999999741, 0.00011498599999999748, 0.00011522199999999816, 0.00011488899999999996, 0.00011527799999999644, 0.00011490299999999953, 0.00011517999999999945, 0.00011495899999999781, 0.00011513900000000021, 0.00011481900000000211, 0.00011495899999999781, 0.00011505600000000227, 0.00011434699999999381, 0.00011465299999999928, 0.00011481900000000211, 0.00011470799999999809, 0.00011456900000000186, 0.00011480600000000202, 0.00011436100000000032, 0.00011445899999999731, 0.0001149169999999991]</msg>
<status status="PASS" starttime="20201115 23:03:37.162" endtime="20201115 23:03:37.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.150" endtime="20201115 23:03:37.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.175" endtime="20201115 23:03:37.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:37.183" endtime="20201115 23:03:37.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.179" endtime="20201115 23:03:37.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.170" endtime="20201115 23:03:37.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.655" endtime="20201115 23:03:37.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.651" endtime="20201115 23:03:37.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.649" endtime="20201115 23:03:37.209"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.215" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.237" endtime="20201115 23:03:37.257"></status>
</kw>
<msg timestamp="20201115 23:03:37.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.233" endtime="20201115 23:03:37.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.260" endtime="20201115 23:03:37.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.266" endtime="20201115 23:03:37.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.226" endtime="20201115 23:03:37.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.220" endtime="20201115 23:03:37.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.290" endtime="20201115 23:03:37.627"></status>
</kw>
<msg timestamp="20201115 23:03:37.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045644389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045759667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.287" endtime="20201115 23:03:37.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045644389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045759667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.636" endtime="20201115 23:03:37.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.655" endtime="20201115 23:03:37.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.279" endtime="20201115 23:03:37.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.275" endtime="20201115 23:03:37.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:37.674" level="INFO">${RESULT} = [{'time': 0.045759667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011527799999999644, 'source_diff': 0.00011527799999999644}, {'time': 0.045885014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:37.665" endtime="20201115 23:03:37.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:37.704" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:37.676" endtime="20201115 23:03:37.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.715" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:03:37.713" endtime="20201115 23:03:37.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.721" level="INFO">VALUE: [0.00011527799999999644, 0.0001162499999999983, 0.00011612500000000164, 0.00011627799999999744, 0.00011577800000000388, 0.00011568100000000636, 0.00011540300000000003, 0.00011634699999999581, 0.00011568099999999942, 0.0001152629999999974, 0.00011552800000000363, 0.00011620899999999906, 0.00011561100000000157, 0.00011551399999999712, 0.00011616700000000035, 0.00011579200000000345, 0.00011620799999999959, 0.00011613900000000121, 0.00011577800000000388, 0.00011570799999999909, 0.00011583300000000268, 0.00011606900000000336, 0.000115597000000002, 0.00011548600000000492, 0.00011590300000000053, 0.00011550000000000449, 0.00011550000000000449, 0.00011552699999999722, 0.00011544399999999927, 0.00011548599999999798, 0.00011572199999999866, 0.00011540300000000003, 0.00011615200000000131, 0.00011554099999999679, 0.00011625000000000524, 0.00011581899999999618, 0.00011527699999999697, 0.00011538900000000046, 0.00011537499999999395, 0.0001158750000000014, 0.00011597199999999891, 0.0001159300000000002, 0.0001162499999999983, 0.0001158620000000013, 0.00011595900000000575, 0.00011611100000000207, 0.00011583300000000268, 0.00011600000000000499, 0.00011620799999999959, 0.0001154169999999996]</msg>
<status status="PASS" starttime="20201115 23:03:37.718" endtime="20201115 23:03:37.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.706" endtime="20201115 23:03:37.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.730" endtime="20201115 23:03:37.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:37.739" endtime="20201115 23:03:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.734" endtime="20201115 23:03:37.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.725" endtime="20201115 23:03:37.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.216" endtime="20201115 23:03:37.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.212" endtime="20201115 23:03:37.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.210" endtime="20201115 23:03:37.766"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.771" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.793" endtime="20201115 23:03:37.813"></status>
</kw>
<msg timestamp="20201115 23:03:37.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.790" endtime="20201115 23:03:37.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.817" endtime="20201115 23:03:37.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.823" endtime="20201115 23:03:37.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.783" endtime="20201115 23:03:37.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.777" endtime="20201115 23:03:37.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.847" endtime="20201115 23:03:38.186"></status>
</kw>
<msg timestamp="20201115 23:03:38.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04639675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046514028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:37.844" endtime="20201115 23:03:38.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04639675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046514028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:38.195" endtime="20201115 23:03:38.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.219" endtime="20201115 23:03:38.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.836" endtime="20201115 23:03:38.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.831" endtime="20201115 23:03:38.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:38.237" level="INFO">${RESULT} = [{'time': 0.046514028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011727799999999844, 'source_diff': 0.00011727799999999844}, {'time': 0.046635361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:38.228" endtime="20201115 23:03:38.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:38.266" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:38.239" endtime="20201115 23:03:38.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.278" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:03:38.275" endtime="20201115 23:03:38.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.283" level="INFO">VALUE: [0.00011727799999999844, 0.00011654199999999726, 0.0001162499999999983, 0.0001165420000000042, 0.00011697299999999938, 0.00011701399999999862, 0.00011641600000000113, 0.00011645799999999984, 0.00011662500000000214, 0.00011659800000000248, 0.00011711099999999613, 0.00011669400000000052, 0.00011636100000000232, 0.00011644400000000027, 0.00011638899999999452, 0.00011643100000000017, 0.00011663900000000171, 0.00011711100000000307, 0.00011693100000000067, 0.00011709799999999604, 0.00011701399999999862, 0.00011698599999999948, 0.00011640300000000103, 0.00011654199999999726, 0.00011716700000000135, 0.00011687499999999545, 0.00011713900000000221, 0.00011633300000000318, 0.00011676399999999837, 0.00011713900000000221, 0.00011670899999999956, 0.00011686099999999588, 0.00011629100000000447, 0.00011693100000000067, 0.00011662500000000214, 0.00011669499999999999, 0.00011700000000000599, 0.00011665299999999434, 0.0001169170000000011, 0.00011730600000000452, 0.00011695899999999981, 0.00011718000000000145, 0.00011712500000000264, 0.00011709699999999656, 0.00011644400000000027, 0.00011670800000000009, 0.00011704100000000522, 0.00011716699999999441, 0.0001165550000000043, 0.00011722299999999963]</msg>
<status status="PASS" starttime="20201115 23:03:38.280" endtime="20201115 23:03:38.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.268" endtime="20201115 23:03:38.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.292" endtime="20201115 23:03:38.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:38.300" endtime="20201115 23:03:38.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.296" endtime="20201115 23:03:38.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.287" endtime="20201115 23:03:38.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.773" endtime="20201115 23:03:38.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.769" endtime="20201115 23:03:38.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.767" endtime="20201115 23:03:38.327"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.355" endtime="20201115 23:03:38.375"></status>
</kw>
<msg timestamp="20201115 23:03:38.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.351" endtime="20201115 23:03:38.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.378" endtime="20201115 23:03:38.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.385" endtime="20201115 23:03:38.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.344" endtime="20201115 23:03:38.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.338" endtime="20201115 23:03:38.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.409" endtime="20201115 23:03:38.757"></status>
</kw>
<msg timestamp="20201115 23:03:38.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046481514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04659925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:38.405" endtime="20201115 23:03:38.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046481514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04659925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:38.770" endtime="20201115 23:03:38.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.789" endtime="20201115 23:03:38.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.397" endtime="20201115 23:03:38.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.393" endtime="20201115 23:03:38.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:38.808" level="INFO">${RESULT} = [{'time': 0.04659925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011773600000000023, 'source_diff': 0.00011773600000000023}, {'time': 0.046723611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:38.799" endtime="20201115 23:03:38.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:38.838" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:38.810" endtime="20201115 23:03:38.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.849" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:03:38.846" endtime="20201115 23:03:38.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.854" level="INFO">VALUE: [0.00011773600000000023, 0.00011806899999999843, 0.00011761200000000305, 0.00011809699999999757, 0.00011722299999999963, 0.00011749999999999955, 0.00011784799999999679, 0.00011775000000000674, 0.00011791600000000263, 0.00011734800000000323, 0.00011744399999999433, 0.00011729199999999801, 0.00011755499999999836, 0.0001181249999999967, 0.00011763900000000271, 0.000117597000000004, 0.00011738900000000246, 0.00011751399999999912, 0.00011813900000000321, 0.00011818099999999498, 0.00011779199999999851, 0.00011741699999999466, 0.00011780599999999808, 0.00011780599999999808, 0.00011795900000000081, 0.0001178049999999986, 0.00011751400000000606, 0.00011816700000000235, 0.00011805499999999886, 0.00011744400000000127, 0.00011729199999999801, 0.00011783299999999775, 0.000117597000000004, 0.0001180970000000045, 0.0001172499999999993, 0.00011737499999999595, 0.00011729200000000495, 0.00011756900000000486, 0.0001175699999999974, 0.00011786099999999688, 0.00011751399999999912, 0.00011744500000000074, 0.0001174300000000017, 0.00011744500000000074, 0.00011748599999999998, 0.00011798600000000048, 0.00011797200000000091, 0.00011752799999999869, 0.000117695000000001, 0.00011804199999999876]</msg>
<status status="PASS" starttime="20201115 23:03:38.851" endtime="20201115 23:03:38.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.839" endtime="20201115 23:03:38.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.863" endtime="20201115 23:03:38.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:38.871" endtime="20201115 23:03:38.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.867" endtime="20201115 23:03:38.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.858" endtime="20201115 23:03:38.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.334" endtime="20201115 23:03:38.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.329" endtime="20201115 23:03:38.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.328" endtime="20201115 23:03:38.898"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.903" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.925" endtime="20201115 23:03:38.945"></status>
</kw>
<msg timestamp="20201115 23:03:38.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.921" endtime="20201115 23:03:38.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.948" endtime="20201115 23:03:38.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.955" endtime="20201115 23:03:38.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.914" endtime="20201115 23:03:38.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.908" endtime="20201115 23:03:38.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.979" endtime="20201115 23:03:39.316"></status>
</kw>
<msg timestamp="20201115 23:03:39.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045087097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045205903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:38.976" endtime="20201115 23:03:39.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045087097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045205903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.326" endtime="20201115 23:03:39.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.344" endtime="20201115 23:03:39.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.969" endtime="20201115 23:03:39.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.964" endtime="20201115 23:03:39.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:39.361" level="INFO">${RESULT} = [{'time': 0.045205903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011880599999999908, 'source_diff': 0.00011880599999999908}, {'time': 0.045333306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:39.352" endtime="20201115 23:03:39.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:39.393" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:39.363" endtime="20201115 23:03:39.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.404" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:03:39.402" endtime="20201115 23:03:39.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.409" level="INFO">VALUE: [0.00011880599999999908, 0.00011829199999999901, 0.00011915199999999737, 0.00011865200000000381, 0.00011854099999999979, 0.00011842999999999576, 0.00011876400000000037, 0.0001185829999999985, 0.0001187500000000008, 0.00011887499999999745, 0.0001188049999999996, 0.00011894400000000277, 0.00011851399999999318, 0.00011863899999999677, 0.00011872200000000166, 0.00011890300000000353, 0.00011847200000000141, 0.00011850000000000055, 0.00011866600000000338, 0.0001186249999999972, 0.00011883399999999822, 0.00011886099999999789, 0.0001191249999999977, 0.00011829199999999901, 0.0001185829999999985, 0.00011873599999999429, 0.00011886099999999789, 0.0001188049999999996, 0.00011836100000000432, 0.00011865300000000328, 0.00011820900000000106, 0.00011826399999999987, 0.00011831899999999868, 0.00011855499999999936, 0.00011897300000000138, 0.00011911099999999814, 0.00011863899999999677, 0.00011863899999999677, 0.00011877799999999994, 0.000119082999999999, 0.0001189300000000032, 0.00011904100000000029, 0.00011833399999999772, 0.00011838899999999652, 0.0001185829999999985, 0.00011848600000000098, 0.0001183049999999991, 0.00011900000000000105, 0.00011895900000000181, 0.00011852800000000663]</msg>
<status status="PASS" starttime="20201115 23:03:39.406" endtime="20201115 23:03:39.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.395" endtime="20201115 23:03:39.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.418" endtime="20201115 23:03:39.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:39.426" endtime="20201115 23:03:39.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.422" endtime="20201115 23:03:39.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.414" endtime="20201115 23:03:39.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.904" endtime="20201115 23:03:39.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.900" endtime="20201115 23:03:39.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.899" endtime="20201115 23:03:39.453"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.458" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.480" endtime="20201115 23:03:39.500"></status>
</kw>
<msg timestamp="20201115 23:03:39.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:39.477" endtime="20201115 23:03:39.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:39.504" endtime="20201115 23:03:39.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.511" endtime="20201115 23:03:39.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.470" endtime="20201115 23:03:39.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.463" endtime="20201115 23:03:39.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.535" endtime="20201115 23:03:39.873"></status>
</kw>
<msg timestamp="20201115 23:03:39.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045957125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.532" endtime="20201115 23:03:39.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045837097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045957125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.882" endtime="20201115 23:03:39.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.901" endtime="20201115 23:03:39.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.525" endtime="20201115 23:03:39.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.520" endtime="20201115 23:03:39.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:39.920" level="INFO">${RESULT} = [{'time': 0.045957125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012002800000000119, 'source_diff': 0.00012002800000000119}, {'time': 0.046082458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:39.911" endtime="20201115 23:03:39.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:39.949" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:39.922" endtime="20201115 23:03:39.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.960" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:03:39.958" endtime="20201115 23:03:39.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.965" level="INFO">VALUE: [0.00012002800000000119, 0.00011947200000000241, 0.00011937499999999795, 0.00011930599999999958, 0.00012033399999999972, 0.00011929200000000001, 0.00011923599999999479, 0.00011966700000000385, 0.00011986100000000582, 0.00011965299999999734, 0.0001197229999999952, 0.00011969400000000352, 0.00011968000000000395, 0.00011951400000000112, 0.0001195699999999994, 0.00011945900000000231, 0.00011987499999999846, 0.00011970900000000256, 0.00011972199999999572, 0.00011968099999999648, 0.00011929100000000054, 0.00011967999999999701, 0.00011986199999999836, 0.00011962500000000514, 0.00011948600000000198, 0.00011959799999999854, 0.00011930599999999958, 0.0001194170000000036, 0.00011965199999999787, 0.00012016699999999741, 0.00011987499999999846, 0.00011969399999999658, 0.0001195699999999994, 0.00011959699999999907, 0.0001192500000000013, 0.00012020899999999612, 0.00012009699999999957, 0.00011959699999999907, 0.00011947200000000241, 0.00011998599999999554, 0.00011987499999999846, 0.00012002800000000119, 0.00011922200000000216, 0.00011994399999999683, 0.00011948600000000198, 0.000120083, 0.00011931999999999915, 0.00011934699999999882, 0.00011948599999999504, 0.00011948600000000198]</msg>
<status status="PASS" starttime="20201115 23:03:39.962" endtime="20201115 23:03:39.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.951" endtime="20201115 23:03:39.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.974" endtime="20201115 23:03:39.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:39.983" endtime="20201115 23:03:40.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.978" endtime="20201115 23:03:40.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.969" endtime="20201115 23:03:40.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.459" endtime="20201115 23:03:40.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.455" endtime="20201115 23:03:40.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.454" endtime="20201115 23:03:40.010"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.037" endtime="20201115 23:03:40.057"></status>
</kw>
<msg timestamp="20201115 23:03:40.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.033" endtime="20201115 23:03:40.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.060" endtime="20201115 23:03:40.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.066" endtime="20201115 23:03:40.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.026" endtime="20201115 23:03:40.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.020" endtime="20201115 23:03:40.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.089" endtime="20201115 23:03:40.426"></status>
</kw>
<msg timestamp="20201115 23:03:40.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0452745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045395347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:40.086" endtime="20201115 23:03:40.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0452745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045395347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:40.436" endtime="20201115 23:03:40.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.454" endtime="20201115 23:03:40.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.079" endtime="20201115 23:03:40.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.074" endtime="20201115 23:03:40.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:40.471" level="INFO">${RESULT} = [{'time': 0.045395347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012084700000000032, 'source_diff': 0.00012084700000000032}, {'time': 0.045520681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:40.462" endtime="20201115 23:03:40.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:40.501" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:40.473" endtime="20201115 23:03:40.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.512" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:03:40.510" endtime="20201115 23:03:40.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.517" level="INFO">VALUE: [0.00012084700000000032, 0.00012061199999999911, 0.00012098600000000348, 0.00012100000000000305, 0.00012063900000000571, 0.00012123599999999679, 0.00012117999999999851, 0.00012063899999999877, 0.00012051399999999518, 0.00012070799999999715, 0.00012100000000000305, 0.00012033399999999972, 0.00012036099999999939, 0.00012116699999999841, 0.00012079199999999457, 0.00012088899999999903, 0.00012091599999999869, 0.00012126399999999593, 0.00012062500000000614, 0.00012047199999999647, 0.00012088899999999903, 0.00012050000000000255, 0.00012041599999999819, 0.00012123599999999679, 0.00012037499999999896, 0.0001202500000000023, 0.00012034799999999929, 0.00012090300000000553, 0.00012034699999999982, 0.00012044400000000427, 0.0001204579999999969, 0.00012052800000000169, 0.00012045899999999637, 0.00012080600000000108, 0.00012041600000000513, 0.00012119499999999755, 0.00012099999999999611, 0.00012102700000000272, 0.00012099999999999611, 0.0001208750000000064, 0.00012118000000000545, 0.0001207500000000028, 0.00012115300000000578, 0.0001204029999999981, 0.00012034699999999982, 0.00012109699999999363, 0.00012082000000000065, 0.00012047300000000288, 0.00012038899999999852, 0.00012048600000000298]</msg>
<status status="PASS" starttime="20201115 23:03:40.514" endtime="20201115 23:03:40.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.503" endtime="20201115 23:03:40.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.527" endtime="20201115 23:03:40.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:40.535" endtime="20201115 23:03:40.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.531" endtime="20201115 23:03:40.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.522" endtime="20201115 23:03:40.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.016" endtime="20201115 23:03:40.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.012" endtime="20201115 23:03:40.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.011" endtime="20201115 23:03:40.562"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.588" endtime="20201115 23:03:40.608"></status>
</kw>
<msg timestamp="20201115 23:03:40.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.585" endtime="20201115 23:03:40.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.612" endtime="20201115 23:03:40.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.618" endtime="20201115 23:03:40.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.578" endtime="20201115 23:03:40.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.572" endtime="20201115 23:03:40.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.642" endtime="20201115 23:03:40.979"></status>
</kw>
<msg timestamp="20201115 23:03:40.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04511675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:40.638" endtime="20201115 23:03:40.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04511675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:40.988" endtime="20201115 23:03:41.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.007" endtime="20201115 23:03:41.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.631" endtime="20201115 23:03:41.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.626" endtime="20201115 23:03:41.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:41.026" level="INFO">${RESULT} = [{'time': 0.04511675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012134699999999388, 'source_diff': 0.00012134699999999388}, {'time': 0.045244097, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:41.017" endtime="20201115 23:03:41.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:41.055" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:41.028" endtime="20201115 23:03:41.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.066" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:03:41.064" endtime="20201115 23:03:41.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.072" level="INFO">VALUE: [0.00012134699999999388, 0.00012188900000000003, 0.00012190200000000012, 0.00012126400000000287, 0.00012145800000000484, 0.00012134700000000082, 0.00012191599999999969, 0.0001213329999999943, 0.00012213900000000028, 0.0001212909999999956, 0.0001213329999999943, 0.00012201299999999721, 0.00012198599999999754, 0.00012155600000000183, 0.00012200000000000405, 0.00012138800000000005, 0.0001221109999999942, 0.00012124999999999636, 0.00012163899999999978, 0.000122083000000002, 0.00012201400000000362, 0.00012170799999999815, 0.00012170899999999762, 0.00012154100000000279, 0.0001214579999999979, 0.00012169399999999858, 0.00012206899999999549, 0.00012194399999999883, 0.00012199999999999711, 0.0001222779999999965, 0.00012147300000000388, 0.00012176400000000337, 0.00012133300000000125, 0.00012144399999999833, 0.00012209700000000157, 0.00012172200000000466, 0.0001216250000000002, 0.00012152800000000269, 0.00012137499999999996, 0.0001219029999999996, 0.00012186100000000089, 0.0001213050000000021, 0.00012202800000000319, 0.0001214300000000057, 0.00012219499999999855, 0.00012194399999999883, 0.00012219399999999908, 0.00012226400000000387, 0.00012154100000000279, 0.0001214579999999979]</msg>
<status status="PASS" starttime="20201115 23:03:41.068" endtime="20201115 23:03:41.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.057" endtime="20201115 23:03:41.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.081" endtime="20201115 23:03:41.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:41.089" endtime="20201115 23:03:41.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.085" endtime="20201115 23:03:41.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.076" endtime="20201115 23:03:41.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.568" endtime="20201115 23:03:41.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.564" endtime="20201115 23:03:41.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.563" endtime="20201115 23:03:41.116"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.121" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.142" endtime="20201115 23:03:41.163"></status>
</kw>
<msg timestamp="20201115 23:03:41.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.139" endtime="20201115 23:03:41.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.166" endtime="20201115 23:03:41.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.172" endtime="20201115 23:03:41.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.132" endtime="20201115 23:03:41.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.126" endtime="20201115 23:03:41.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.196" endtime="20201115 23:03:41.533"></status>
</kw>
<msg timestamp="20201115 23:03:41.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045246472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045368833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.192" endtime="20201115 23:03:41.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045246472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045368833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.543" endtime="20201115 23:03:41.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.561" endtime="20201115 23:03:41.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.185" endtime="20201115 23:03:41.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.180" endtime="20201115 23:03:41.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:41.578" level="INFO">${RESULT} = [{'time': 0.045368833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012236099999999445, 'source_diff': 0.00012236099999999445}, {'time': 0.045498194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:41.570" endtime="20201115 23:03:41.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:41.611" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:41.581" endtime="20201115 23:03:41.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.622" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:03:41.620" endtime="20201115 23:03:41.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.627" level="INFO">VALUE: [0.00012236099999999445, 0.00012247199999999847, 0.0001229160000000007, 0.00012313899999999434, 0.00012283400000000222, 0.00012245899999999837, 0.00012276400000000437, 0.00012318099999999998, 0.00012276399999999743, 0.0001227370000000047, 0.00012286100000000189, 0.0001231250000000017, 0.00012268, 0.0001224030000000001, 0.0001230280000000042, 0.00012236100000000139, 0.00012276299999999796, 0.00012326399999999793, 0.00012247199999999847, 0.00012255600000000283, 0.00012288900000000103, 0.00012323600000000573, 0.0001229030000000006, 0.0001225830000000025, 0.0001223329999999953, 0.00012297299999999844, 0.0001232359999999988, 0.00012304200000000376, 0.00012251399999999718, 0.00012266699999999991, 0.00012258400000000197, 0.0001231120000000016, 0.00012241699999999966, 0.00012248599999999804, 0.00012241699999999966, 0.00012259700000000207, 0.00012244399999999933, 0.0001222909999999966, 0.00012248599999999804, 0.00012306900000000343, 0.0001226250000000012, 0.0001230700000000029, 0.00012269399999999958, 0.0001222359999999978, 0.00012238900000000053, 0.00012316700000000042, 0.0001231109999999952, 0.00012251399999999718, 0.00012269499999999905, 0.0001224999999999976]</msg>
<status status="PASS" starttime="20201115 23:03:41.624" endtime="20201115 23:03:41.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.613" endtime="20201115 23:03:41.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.636" endtime="20201115 23:03:41.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:41.645" endtime="20201115 23:03:41.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.640" endtime="20201115 23:03:41.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.632" endtime="20201115 23:03:41.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.122" endtime="20201115 23:03:41.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.118" endtime="20201115 23:03:41.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.117" endtime="20201115 23:03:41.671"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.698" endtime="20201115 23:03:41.718"></status>
</kw>
<msg timestamp="20201115 23:03:41.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.695" endtime="20201115 23:03:41.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.721" endtime="20201115 23:03:41.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.728" endtime="20201115 23:03:41.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.687" endtime="20201115 23:03:41.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.681" endtime="20201115 23:03:41.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.751" endtime="20201115 23:03:42.087"></status>
</kw>
<msg timestamp="20201115 23:03:42.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045157181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.748" endtime="20201115 23:03:42.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045157181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045281028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.096" endtime="20201115 23:03:42.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.115" endtime="20201115 23:03:42.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.740" endtime="20201115 23:03:42.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.736" endtime="20201115 23:03:42.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:42.134" level="INFO">${RESULT} = [{'time': 0.045281028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012384700000000332, 'source_diff': 0.00012384700000000332}, {'time': 0.045412333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:42.125" endtime="20201115 23:03:42.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:42.163" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:42.136" endtime="20201115 23:03:42.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.174" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:03:42.172" endtime="20201115 23:03:42.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.179" level="INFO">VALUE: [0.00012384700000000332, 0.0001239999999999991, 0.00012386100000000289, 0.0001237920000000045, 0.000124083000000004, 0.0001236250000000022, 0.0001235129999999987, 0.00012370899999999962, 0.00012411100000000314, 0.00012359800000000254, 0.00012413900000000228, 0.00012397199999999997, 0.00012338900000000153, 0.00012384700000000332, 0.00012341699999999373, 0.00012404200000000476, 0.00012405500000000486, 0.00012402699999999878, 0.00012376399999999843, 0.00012408400000000347, 0.00012366700000000092, 0.00012388900000000203, 0.0001239580000000004, 0.00012384699999999638, 0.00012404200000000476, 0.00012370800000000015, 0.00012368100000000048, 0.00012393100000000074, 0.0001242359999999998, 0.00012369500000000005, 0.00012415300000000185, 0.00012415200000000237, 0.00012382000000000365, 0.00012331900000000368, 0.00012381899999999724, 0.0001238480000000028, 0.00012415199999999543, 0.00012386200000000236, 0.00012366700000000092, 0.00012354199999999732, 0.00012386099999999595, 0.00012386100000000289, 0.00012358400000000297, 0.00012393100000000074, 0.00012347199999999947, 0.00012384700000000332, 0.00012408299999999706, 0.00012345899999999937, 0.00012372199999999972, 0.0001241250000000027]</msg>
<status status="PASS" starttime="20201115 23:03:42.176" endtime="20201115 23:03:42.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.165" endtime="20201115 23:03:42.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.188" endtime="20201115 23:03:42.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:42.196" endtime="20201115 23:03:42.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.192" endtime="20201115 23:03:42.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.184" endtime="20201115 23:03:42.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.678" endtime="20201115 23:03:42.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.674" endtime="20201115 23:03:42.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.672" endtime="20201115 23:03:42.223"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.228" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.250" endtime="20201115 23:03:42.270"></status>
</kw>
<msg timestamp="20201115 23:03:42.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.246" endtime="20201115 23:03:42.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.273" endtime="20201115 23:03:42.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.280" endtime="20201115 23:03:42.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.239" endtime="20201115 23:03:42.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.233" endtime="20201115 23:03:42.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.304" endtime="20201115 23:03:42.641"></status>
</kw>
<msg timestamp="20201115 23:03:42.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04522025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045345472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:42.300" endtime="20201115 23:03:42.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04522025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045345472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:42.650" endtime="20201115 23:03:42.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.668" endtime="20201115 23:03:42.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.292" endtime="20201115 23:03:42.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.288" endtime="20201115 23:03:42.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:42.686" level="INFO">${RESULT} = [{'time': 0.045345472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012522200000000122, 'source_diff': 0.00012522200000000122}, {'time': 0.045480931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:42.677" endtime="20201115 23:03:42.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:42.715" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:42.688" endtime="20201115 23:03:42.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.726" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:03:42.724" endtime="20201115 23:03:42.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.731" level="INFO">VALUE: [0.00012522200000000122, 0.000124777999999999, 0.00012497200000000097, 0.00012443000000000176, 0.00012493000000000226, 0.00012433399999999678, 0.00012474999999999986, 0.00012526399999999993, 0.0001246250000000032, 0.00012491599999999575, 0.00012526399999999993, 0.0001244030000000021, 0.00012443100000000124, 0.00012504199999999882, 0.00012444400000000133, 0.00012440299999999516, 0.00012490199999999618, 0.00012518100000000199, 0.00012513899999999634, 0.00012487499999999652, 0.00012511100000000414, 0.00012429199999999807, 0.0001249450000000013, 0.00012525000000000036, 0.0001246250000000032, 0.00012445900000000037, 0.00012480499999999867, 0.0001251529999999959, 0.0001252360000000008, 0.00012452799999999875, 0.0001247909999999991, 0.0001250000000000001, 0.00012520800000000165, 0.00012526399999999993, 0.00012481900000000518, 0.0001250130000000002, 0.00012495900000000087, 0.00012465300000000235, 0.00012466699999999498, 0.00012498600000000054, 0.000124777999999999, 0.00012451399999999918, 0.0001247360000000003, 0.00012505499999999892, 0.00012433400000000372, 0.00012486099999999695, 0.00012501399999999968, 0.00012493000000000226, 0.0001246250000000032, 0.0001249030000000026]</msg>
<status status="PASS" starttime="20201115 23:03:42.728" endtime="20201115 23:03:42.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.717" endtime="20201115 23:03:42.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.740" endtime="20201115 23:03:42.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:42.748" endtime="20201115 23:03:42.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.744" endtime="20201115 23:03:42.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.736" endtime="20201115 23:03:42.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.229" endtime="20201115 23:03:42.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.225" endtime="20201115 23:03:42.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.224" endtime="20201115 23:03:42.775"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.802" endtime="20201115 23:03:42.822"></status>
</kw>
<msg timestamp="20201115 23:03:42.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.798" endtime="20201115 23:03:42.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.825" endtime="20201115 23:03:42.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.832" endtime="20201115 23:03:42.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.791" endtime="20201115 23:03:42.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.785" endtime="20201115 23:03:42.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.856" endtime="20201115 23:03:43.193"></status>
</kw>
<msg timestamp="20201115 23:03:43.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045404167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.852" endtime="20201115 23:03:43.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045404167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.202" endtime="20201115 23:03:43.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.220" endtime="20201115 23:03:43.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.845" endtime="20201115 23:03:43.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.841" endtime="20201115 23:03:43.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:43.239" level="INFO">${RESULT} = [{'time': 0.045404167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012597300000000144, 'source_diff': 0.00012597300000000144}, {'time': 0.045538639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:43.230" endtime="20201115 23:03:43.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:43.268" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:43.241" endtime="20201115 23:03:43.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.279" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:03:43.277" endtime="20201115 23:03:43.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.285" level="INFO">VALUE: [0.00012597300000000144, 0.00012568099999999555, 0.0001255559999999989, 0.00012604100000000035, 0.00012591699999999623, 0.00012604199999999982, 0.0001256250000000042, 0.0001257360000000013, 0.00012598600000000154, 0.00012569399999999564, 0.00012570800000000215, 0.0001255559999999989, 0.00012541699999999573, 0.00012587500000000446, 0.0001261800000000035, 0.00012622299999999476, 0.00012568100000000249, 0.00012563899999999684, 0.00012588900000000403, 0.00012579199999999957, 0.00012548600000000104, 0.0001261250000000047, 0.0001255000000000006, 0.00012540299999999616, 0.00012605499999999992, 0.0001256659999999965, 0.00012576400000000043, 0.00012554099999999985, 0.00012574999999999392, 0.0001254450000000018, 0.0001253329999999983, 0.00012551400000000018, 0.00012612499999999777, 0.00012580599999999914, 0.00012548600000000104, 0.00012554099999999985, 0.00012616700000000342, 0.00012587500000000446, 0.00012561100000000464, 0.00012542999999999582, 0.00012568100000000249, 0.0001262230000000017, 0.00012597200000000197, 0.00012580499999999967, 0.00012573599999999435, 0.00012608299999999906, 0.00012572200000000172, 0.00012538900000000353, 0.00012597199999999503, 0.00012616700000000342]</msg>
<status status="PASS" starttime="20201115 23:03:43.282" endtime="20201115 23:03:43.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.270" endtime="20201115 23:03:43.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.293" endtime="20201115 23:03:43.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:43.302" endtime="20201115 23:03:43.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.297" endtime="20201115 23:03:43.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.289" endtime="20201115 23:03:43.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.781" endtime="20201115 23:03:43.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.777" endtime="20201115 23:03:43.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.776" endtime="20201115 23:03:43.328"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.333" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.360" endtime="20201115 23:03:43.380"></status>
</kw>
<msg timestamp="20201115 23:03:43.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.357" endtime="20201115 23:03:43.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.384" endtime="20201115 23:03:43.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.390" endtime="20201115 23:03:43.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.349" endtime="20201115 23:03:43.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.339" endtime="20201115 23:03:43.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.414" endtime="20201115 23:03:43.750"></status>
</kw>
<msg timestamp="20201115 23:03:43.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.410" endtime="20201115 23:03:43.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050279875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.760" endtime="20201115 23:03:43.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.778" endtime="20201115 23:03:43.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.403" endtime="20201115 23:03:43.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.398" endtime="20201115 23:03:43.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:43.795" level="INFO">${RESULT} = [{'time': 0.050406931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001270560000000004, 'source_diff': 0.0001270560000000004}, {'time': 0.050543319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:43.786" endtime="20201115 23:03:43.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:43.827" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:43.797" endtime="20201115 23:03:43.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.838" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:03:43.836" endtime="20201115 23:03:43.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.843" level="INFO">VALUE: [0.0001270560000000004, 0.0001270690000000005, 0.00012656999999999946, 0.00012729200000000107, 0.00012647199999999553, 0.00012654100000000085, 0.00012642999999999682, 0.0001271109999999992, 0.00012640299999999716, 0.0001264030000000041, 0.00012695799999999646, 0.00012651400000000118, 0.0001265000000000016, 0.0001264439999999964, 0.00012715200000000537, 0.00012677799999999406, 0.00012658399999999903, 0.0001263889999999976, 0.00012722299999999576, 0.00012694400000000383, 0.0001262780000000005, 0.0001271120000000056, 0.00012634699999999888, 0.0001273200000000002, 0.00012669400000000358, 0.0001264309999999963, 0.0001268889999999981, 0.00012644400000000333, 0.00012655500000000042, 0.00012645799999999596, 0.00012690299999999766, 0.0001266109999999987, 0.00012637499999999802, 0.00012670800000000315, 0.00012649999999999467, 0.00012729099999999466, 0.0001270409999999944, 0.00012652800000000075, 0.00012687500000000546, 0.00012640299999999716, 0.00012698600000000254, 0.00012663899999999784, 0.0001271109999999992, 0.00012669500000000306, 0.00012665300000000435, 0.00012691699999999723, 0.0001265000000000016, 0.00012636100000000539, 0.00012663899999999784, 0.00012631899999999974]</msg>
<status status="PASS" starttime="20201115 23:03:43.840" endtime="20201115 23:03:43.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.829" endtime="20201115 23:03:43.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.852" endtime="20201115 23:03:43.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:43.861" endtime="20201115 23:03:43.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.856" endtime="20201115 23:03:43.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.848" endtime="20201115 23:03:43.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.335" endtime="20201115 23:03:43.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.331" endtime="20201115 23:03:43.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.329" endtime="20201115 23:03:43.888"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.914" endtime="20201115 23:03:43.935"></status>
</kw>
<msg timestamp="20201115 23:03:43.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.911" endtime="20201115 23:03:43.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.938" endtime="20201115 23:03:43.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.945" endtime="20201115 23:03:43.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.904" endtime="20201115 23:03:43.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.898" endtime="20201115 23:03:43.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.969" endtime="20201115 23:03:44.305"></status>
</kw>
<msg timestamp="20201115 23:03:44.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045007764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045135694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.966" endtime="20201115 23:03:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045007764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045135694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:44.315" endtime="20201115 23:03:44.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.333" endtime="20201115 23:03:44.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.958" endtime="20201115 23:03:44.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.954" endtime="20201115 23:03:44.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:44.351" level="INFO">${RESULT} = [{'time': 0.045135694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012792999999999832, 'source_diff': 0.00012792999999999832}, {'time': 0.045274208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:44.343" endtime="20201115 23:03:44.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:44.381" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:44.354" endtime="20201115 23:03:44.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.392" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:03:44.390" endtime="20201115 23:03:44.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.397" level="INFO">VALUE: [0.00012792999999999832, 0.00012815200000000637, 0.00012765300000000535, 0.00012737499999999902, 0.00012808300000000106, 0.00012752800000000175, 0.0001273889999999986, 0.00012815199999999943, 0.00012825000000000336, 0.00012773599999999635, 0.00012733399999999978, 0.00012786099999999995, 0.00012770900000000363, 0.0001280560000000014, 0.00012763899999999884, 0.0001282769999999961, 0.00012834800000000035, 0.0001281110000000002, 0.00012783400000000028, 0.00012759700000000013, 0.00012807000000000096, 0.0001279859999999966, 0.00012745799999999696, 0.00012759700000000013, 0.0001282780000000025, 0.00012790299999999866, 0.0001276529999999984, 0.00012730500000000117, 0.00012769399999999764, 0.00012755499999999448, 0.00012752800000000175, 0.00012774999999999592, 0.00012747199999999653, 0.00012819399999999814, 0.00012798600000000354, 0.00012831900000000174, 0.000127472999999996, 0.0001281529999999989, 0.00012775000000000286, 0.00012768100000000449, 0.00012830600000000164, 0.00012787500000000646, 0.0001276120000000061, 0.0001278889999999991, 0.00012790299999999866, 0.00012808300000000106, 0.00012786099999999995, 0.00012824999999999642, 0.00012790199999999918, 0.00012758400000000003]</msg>
<status status="PASS" starttime="20201115 23:03:44.394" endtime="20201115 23:03:44.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.383" endtime="20201115 23:03:44.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.407" endtime="20201115 23:03:44.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:44.415" endtime="20201115 23:03:44.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.411" endtime="20201115 23:03:44.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.402" endtime="20201115 23:03:44.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.894" endtime="20201115 23:03:44.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.890" endtime="20201115 23:03:44.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.889" endtime="20201115 23:03:44.441"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.447" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.468" endtime="20201115 23:03:44.489"></status>
</kw>
<msg timestamp="20201115 23:03:44.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:44.465" endtime="20201115 23:03:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:44.492" endtime="20201115 23:03:44.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.498" endtime="20201115 23:03:44.502"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.458" endtime="20201115 23:03:44.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.452" endtime="20201115 23:03:44.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.522" endtime="20201115 23:03:44.857"></status>
</kw>
<msg timestamp="20201115 23:03:44.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045099264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045228181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:44.518" endtime="20201115 23:03:44.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045099264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045228181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:44.866" endtime="20201115 23:03:44.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.884" endtime="20201115 23:03:44.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.511" endtime="20201115 23:03:44.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.506" endtime="20201115 23:03:44.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:44.901" level="INFO">${RESULT} = [{'time': 0.045228181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012891699999999923, 'source_diff': 0.00012891699999999923}, {'time': 0.045367583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:44.893" endtime="20201115 23:03:44.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:44.931" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:44.904" endtime="20201115 23:03:44.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.942" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:03:44.940" endtime="20201115 23:03:44.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.948" level="INFO">VALUE: [0.00012891699999999923, 0.00012843000000000576, 0.0001287910000000031, 0.0001287769999999966, 0.00012874999999999692, 0.00012843100000000524, 0.00012901399999999674, 0.00012891699999999923, 0.000128680000000006, 0.0001284439999999984, 0.00012862500000000027, 0.0001291529999999999, 0.00012858400000000103, 0.00012840299999999916, 0.0001289309999999988, 0.00012879099999999616, 0.00012849999999999667, 0.00012891699999999923, 0.0001292079999999987, 0.0001282780000000025, 0.00012845799999999796, 0.00012875000000000386, 0.00012886100000000095, 0.00012831900000000174, 0.0001290690000000025, 0.00012909700000000163, 0.00012833400000000078, 0.0001292910000000036, 0.00012925000000000436, 0.00012841699999999873, 0.00012865199999999993, 0.0001292360000000048, 0.00012904199999999588, 0.0001291389999999934, 0.00012890299999999966, 0.0001286110000000007, 0.00012919399999999914, 0.0001285560000000019, 0.00012890299999999966, 0.00012909799999999416, 0.0001283889999999996, 0.0001284439999999984, 0.00012920900000000513, 0.00012929199999999613, 0.00012863899999999984, 0.00012912499999999383, 0.00012887500000000052, 0.00012872199999999778, 0.0001290279999999963, 0.00012897199999999803]</msg>
<status status="PASS" starttime="20201115 23:03:44.944" endtime="20201115 23:03:44.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.933" endtime="20201115 23:03:44.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.957" endtime="20201115 23:03:44.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:44.965" endtime="20201115 23:03:44.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.961" endtime="20201115 23:03:44.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.952" endtime="20201115 23:03:44.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.448" endtime="20201115 23:03:44.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.444" endtime="20201115 23:03:44.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.442" endtime="20201115 23:03:44.992"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.998" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.021" endtime="20201115 23:03:45.041"></status>
</kw>
<msg timestamp="20201115 23:03:45.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:45.017" endtime="20201115 23:03:45.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:45.045" endtime="20201115 23:03:45.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.051" endtime="20201115 23:03:45.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.010" endtime="20201115 23:03:45.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.004" endtime="20201115 23:03:45.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.075" endtime="20201115 23:03:45.410"></status>
</kw>
<msg timestamp="20201115 23:03:45.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047341528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047470917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.071" endtime="20201115 23:03:45.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047341528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047470917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.419" endtime="20201115 23:03:45.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.437" endtime="20201115 23:03:45.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.064" endtime="20201115 23:03:45.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.059" endtime="20201115 23:03:45.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:45.456" level="INFO">${RESULT} = [{'time': 0.047470917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001293890000000006, 'source_diff': 0.0001293890000000006}, {'time': 0.047607306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:45.448" endtime="20201115 23:03:45.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:45.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:45.459" endtime="20201115 23:03:45.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.497" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:03:45.495" endtime="20201115 23:03:45.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.503" level="INFO">VALUE: [0.0001293890000000006, 0.00012945900000000538, 0.0001293880000000011, 0.0001300969999999957, 0.00012975000000000486, 0.00012940300000000016, 0.00012940300000000016, 0.00013005499999999698, 0.00012963900000000084, 0.00012966699999999998, 0.0001302089999999992, 0.00012952800000000375, 0.0001295000000000046, 0.00012968099999999955, 0.00012930500000000317, 0.0001303059999999967, 0.00012980499999999673, 0.00013006899999999655, 0.0001300279999999973, 0.00012958299999999562, 0.00012930600000000264, 0.00013018000000000057, 0.00012955500000000342, 0.00012990200000000118, 0.00012941699999999973, 0.0001301530000000009, 0.00012958300000000256, 0.000130263999999998, 0.0001297079999999992, 0.00012930500000000317, 0.00012986100000000195, 0.0001300969999999957, 0.00013024999999999842, 0.00012991700000000023, 0.00012966699999999998, 0.00013013800000000186, 0.00012931900000000274, 0.0001298200000000027, 0.00012963900000000084, 0.0001297769999999976, 0.00012941699999999973, 0.00012952800000000375, 0.00013015299999999397, 0.00012945799999999896, 0.0001298200000000027, 0.00012966699999999998, 0.00013022199999999928, 0.00013009700000000263, 0.0001294309999999993, 0.0001295409999999969]</msg>
<status status="PASS" starttime="20201115 23:03:45.500" endtime="20201115 23:03:45.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.488" endtime="20201115 23:03:45.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.511" endtime="20201115 23:03:45.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:45.520" endtime="20201115 23:03:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.515" endtime="20201115 23:03:45.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.507" endtime="20201115 23:03:45.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.999" endtime="20201115 23:03:45.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.995" endtime="20201115 23:03:45.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.993" endtime="20201115 23:03:45.546"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.551" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.573" endtime="20201115 23:03:45.594"></status>
</kw>
<msg timestamp="20201115 23:03:45.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:45.570" endtime="20201115 23:03:45.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:45.597" endtime="20201115 23:03:45.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.603" endtime="20201115 23:03:45.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.562" endtime="20201115 23:03:45.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.557" endtime="20201115 23:03:45.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.627" endtime="20201115 23:03:45.963"></status>
</kw>
<msg timestamp="20201115 23:03:45.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045371208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.623" endtime="20201115 23:03:45.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045240889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045371208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.972" endtime="20201115 23:03:45.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.991" endtime="20201115 23:03:45.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.616" endtime="20201115 23:03:45.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.611" endtime="20201115 23:03:45.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:46.008" level="INFO">${RESULT} = [{'time': 0.045371208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013031900000000374, 'source_diff': 0.00013031900000000374}, {'time': 0.045512583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:46.000" endtime="20201115 23:03:46.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:46.041" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:46.011" endtime="20201115 23:03:46.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.052" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:03:46.050" endtime="20201115 23:03:46.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.058" level="INFO">VALUE: [0.00013031900000000374, 0.00013041600000000125, 0.00013030600000000364, 0.00013065299999999447, 0.0001309859999999996, 0.0001303880000000021, 0.00013109700000000363, 0.00013066700000000098, 0.00013108299999999712, 0.00013076400000000543, 0.00013063799999999542, 0.00013109700000000363, 0.0001310690000000045, 0.0001308890000000021, 0.0001311809999999941, 0.00013112500000000277, 0.00013112500000000277, 0.00013088899999999515, 0.00013068100000000055, 0.0001311530000000019, 0.00013088899999999515, 0.0001306530000000014, 0.000130860999999996, 0.0001309310000000008, 0.00013074999999999892, 0.0001307089999999997, 0.00013130500000000517, 0.00013040300000000116, 0.00013084800000000285, 0.0001307080000000002, 0.0001311389999999954, 0.00013129199999999813, 0.00013044499999999987, 0.00013079199999999763, 0.00013081999999999677, 0.00013084700000000338, 0.0001305969999999962, 0.0001312080000000007, 0.0001304440000000004, 0.00013058299999999662, 0.00013083400000000328, 0.00013068000000000107, 0.0001304859999999991, 0.0001308189999999973, 0.00013101299999999927, 0.00013090300000000166, 0.000130860999999996, 0.00013068000000000107, 0.00013097200000000003, 0.0001307639999999985]</msg>
<status status="PASS" starttime="20201115 23:03:46.055" endtime="20201115 23:03:46.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.043" endtime="20201115 23:03:46.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.067" endtime="20201115 23:03:46.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:46.075" endtime="20201115 23:03:46.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.070" endtime="20201115 23:03:46.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.062" endtime="20201115 23:03:46.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.553" endtime="20201115 23:03:46.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.549" endtime="20201115 23:03:46.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.547" endtime="20201115 23:03:46.101"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.107" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.128" endtime="20201115 23:03:46.149"></status>
</kw>
<msg timestamp="20201115 23:03:46.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:46.125" endtime="20201115 23:03:46.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:46.152" endtime="20201115 23:03:46.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.158" endtime="20201115 23:03:46.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.117" endtime="20201115 23:03:46.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.112" endtime="20201115 23:03:46.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.182" endtime="20201115 23:03:46.517"></status>
</kw>
<msg timestamp="20201115 23:03:46.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045017, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045148403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:46.178" endtime="20201115 23:03:46.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045017, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045148403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:46.527" endtime="20201115 23:03:46.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.545" endtime="20201115 23:03:46.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.171" endtime="20201115 23:03:46.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.166" endtime="20201115 23:03:46.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:46.564" level="INFO">${RESULT} = [{'time': 0.045148403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013140299999999522, 'source_diff': 0.00013140299999999522}, {'time': 0.045287833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:46.555" endtime="20201115 23:03:46.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:46.593" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:46.566" endtime="20201115 23:03:46.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.604" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:03:46.602" endtime="20201115 23:03:46.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.609" level="INFO">VALUE: [0.00013140299999999522, 0.00013158299999999762, 0.00013162499999999633, 0.00013180500000000567, 0.0001319440000000019, 0.0001314860000000001, 0.0001318189999999983, 0.0001321110000000042, 0.00013156999999999752, 0.00013227799999999956, 0.00013143000000000182, 0.0001318059999999982, 0.00013158300000000456, 0.0001314440000000014, 0.0001322080000000017, 0.0001316110000000037, 0.00013161099999999676, 0.0001319860000000006, 0.0001314860000000001, 0.00013173600000000035, 0.00013145800000000096, 0.00013151399999999924, 0.00013222200000000128, 0.00013166700000000198, 0.0001319860000000006, 0.00013223600000000085, 0.0001315980000000036, 0.00013131999999999727, 0.0001318189999999983, 0.000131860999999997, 0.00013237499999999708, 0.00013191700000000223, 0.00013204199999999888, 0.00013188899999999615, 0.00013173600000000035, 0.000131473, 0.0001318059999999982, 0.0001316110000000037, 0.00013229199999999913, 0.00013234700000000488, 0.00013190300000000266, 0.00013177799999999906, 0.00013212499999999683, 0.00013166700000000198, 0.0001317090000000007, 0.00013186100000000395, 0.00013174999999999992, 0.00013207000000000496, 0.00013165200000000293, 0.00013158299999999762]</msg>
<status status="PASS" starttime="20201115 23:03:46.606" endtime="20201115 23:03:46.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.595" endtime="20201115 23:03:46.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.618" endtime="20201115 23:03:46.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:46.627" endtime="20201115 23:03:46.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.622" endtime="20201115 23:03:46.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.614" endtime="20201115 23:03:46.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.108" endtime="20201115 23:03:46.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.104" endtime="20201115 23:03:46.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.102" endtime="20201115 23:03:46.653"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.658" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.680" endtime="20201115 23:03:46.700"></status>
</kw>
<msg timestamp="20201115 23:03:46.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:46.676" endtime="20201115 23:03:46.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:46.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:46.704" endtime="20201115 23:03:46.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.711" endtime="20201115 23:03:46.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.669" endtime="20201115 23:03:46.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.663" endtime="20201115 23:03:46.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:46.734" endtime="20201115 23:03:47.072"></status>
</kw>
<msg timestamp="20201115 23:03:47.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044933014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045065556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:46.731" endtime="20201115 23:03:47.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044933014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045065556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:47.081" endtime="20201115 23:03:47.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.099" endtime="20201115 23:03:47.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.724" endtime="20201115 23:03:47.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.719" endtime="20201115 23:03:47.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:47.117" level="INFO">${RESULT} = [{'time': 0.045065556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013254199999999938, 'source_diff': 0.00013254199999999938}, {'time': 0.045205972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:47.108" endtime="20201115 23:03:47.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:47.146" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:47.119" endtime="20201115 23:03:47.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.157" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:03:47.155" endtime="20201115 23:03:47.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.162" level="INFO">VALUE: [0.00013254199999999938, 0.0001326389999999969, 0.000132860999999998, 0.00013262500000000427, 0.0001330280000000003, 0.00013267999999999613, 0.0001331530000000039, 0.00013330500000000023, 0.00013283299999999887, 0.00013243099999999536, 0.00013265200000000393, 0.0001328189999999993, 0.00013251400000000024, 0.0001327090000000017, 0.00013322200000000228, 0.00013323600000000185, 0.0001331809999999961, 0.00013257000000000546, 0.00013293099999999586, 0.00013273600000000135, 0.00013244500000000187, 0.00013259700000000513, 0.00013256899999999905, 0.00013283299999999887, 0.00013256999999999852, 0.0001326809999999956, 0.00013311099999999826, 0.00013309700000000563, 0.0001324169999999958, 0.00013233400000000478, 0.00013329200000000013, 0.00013248700000000058, 0.00013269400000000264, 0.000132473000000001, 0.00013251400000000024, 0.0001331809999999961, 0.0001324440000000024, 0.0001331389999999974, 0.0001330410000000004, 0.0001330280000000003, 0.00013250000000000067, 0.00013301400000000074, 0.00013261199999999723, 0.00013279199999999963, 0.0001326389999999969, 0.00013295799999999552, 0.00013318100000000305, 0.00013311099999999826, 0.00013244500000000187, 0.00013283299999999887]</msg>
<status status="PASS" starttime="20201115 23:03:47.159" endtime="20201115 23:03:47.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.148" endtime="20201115 23:03:47.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.171" endtime="20201115 23:03:47.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:47.179" endtime="20201115 23:03:47.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.175" endtime="20201115 23:03:47.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.167" endtime="20201115 23:03:47.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.659" endtime="20201115 23:03:47.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.656" endtime="20201115 23:03:47.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:46.654" endtime="20201115 23:03:47.206"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.211" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.234" endtime="20201115 23:03:47.256"></status>
</kw>
<msg timestamp="20201115 23:03:47.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:47.230" endtime="20201115 23:03:47.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:47.259" endtime="20201115 23:03:47.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.265" endtime="20201115 23:03:47.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.223" endtime="20201115 23:03:47.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.217" endtime="20201115 23:03:47.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.289" endtime="20201115 23:03:47.635"></status>
</kw>
<msg timestamp="20201115 23:03:47.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046147194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:47.285" endtime="20201115 23:03:47.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046147194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:47.644" endtime="20201115 23:03:47.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.663" endtime="20201115 23:03:47.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.278" endtime="20201115 23:03:47.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.273" endtime="20201115 23:03:47.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:47.681" level="INFO">${RESULT} = [{'time': 0.046281097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013390299999999772, 'source_diff': 0.00013390299999999772}, {'time': 0.046420403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:47.672" endtime="20201115 23:03:47.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:47.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:47.683" endtime="20201115 23:03:47.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.722" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:03:47.720" endtime="20201115 23:03:47.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.727" level="INFO">VALUE: [0.00013390299999999772, 0.0001340280000000013, 0.00013372200000000278, 0.00013411099999999926, 0.00013366700000000398, 0.00013370799999999627, 0.00013397200000000303, 0.00013362499999999833, 0.0001336389999999979, 0.00013405499999999404, 0.00013383299999999987, 0.00013404200000000088, 0.00013350000000000167, 0.00013395900000000294, 0.00013373600000000235, 0.00013363900000000484, 0.00013333299999999937, 0.00013372200000000278, 0.00013344500000000287, 0.0001337080000000032, 0.00013384699999999944, 0.00013386199999999848, 0.00013358299999999962, 0.00013381999999999977, 0.00013349999999999473, 0.0001339860000000026, 0.0001337080000000032, 0.00013373600000000235, 0.0001340280000000013, 0.00013415299999999797, 0.00013351400000000124, 0.00013365299999999747, 0.000134264000000002, 0.00013388899999999815, 0.0001343049999999943, 0.0001336660000000045, 0.00013387499999999858, 0.00013386200000000542, 0.00013406900000000055, 0.00013393099999999686, 0.00013355599999999995, 0.00013370799999999627, 0.00013399999999999523, 0.00013407000000000002, 0.00013418000000000457, 0.0001336530000000044, 0.0001338890000000051, 0.00013420799999999677, 0.00013362500000000527, 0.00013375000000000192]</msg>
<status status="PASS" starttime="20201115 23:03:47.724" endtime="20201115 23:03:47.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.713" endtime="20201115 23:03:47.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.736" endtime="20201115 23:03:47.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:47.745" endtime="20201115 23:03:47.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.740" endtime="20201115 23:03:47.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.731" endtime="20201115 23:03:47.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.213" endtime="20201115 23:03:47.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.209" endtime="20201115 23:03:47.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.207" endtime="20201115 23:03:47.771"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.798" endtime="20201115 23:03:47.821"></status>
</kw>
<msg timestamp="20201115 23:03:47.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:47.795" endtime="20201115 23:03:47.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:47.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:47.824" endtime="20201115 23:03:47.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.830" endtime="20201115 23:03:47.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.788" endtime="20201115 23:03:47.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.782" endtime="20201115 23:03:47.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:47.854" endtime="20201115 23:03:48.204"></status>
</kw>
<msg timestamp="20201115 23:03:48.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045452778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045587833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:47.850" endtime="20201115 23:03:48.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045452778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045587833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:48.213" endtime="20201115 23:03:48.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.231" endtime="20201115 23:03:48.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.843" endtime="20201115 23:03:48.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.838" endtime="20201115 23:03:48.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:48.248" level="INFO">${RESULT} = [{'time': 0.045587833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013505500000000198, 'source_diff': 0.00013505500000000198}, {'time': 0.04572825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:48.239" endtime="20201115 23:03:48.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:48.280" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:48.250" endtime="20201115 23:03:48.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.291" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:03:48.289" endtime="20201115 23:03:48.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.296" level="INFO">VALUE: [0.00013505500000000198, 0.00013433300000000037, 0.00013448599999999616, 0.0001352090000000042, 0.00013470799999999727, 0.00013488899999999915, 0.00013444500000000387, 0.00013533300000000137, 0.00013484700000000044, 0.00013522200000000428, 0.00013497200000000403, 0.00013469500000000412, 0.00013437499999999908, 0.0001351939999999982, 0.00013511100000000026, 0.0001345280000000018, 0.00013484700000000044, 0.00013480500000000173, 0.00013447200000000353, 0.00013452700000000234, 0.00013494499999999743, 0.00013466699999999804, 0.0001351389999999994, 0.00013511199999999973, 0.00013474999999999598, 0.00013466599999999856, 0.0001343890000000056, 0.0001349860000000036, 0.00013448599999999616, 0.0001350280000000023, 0.0001343609999999995, 0.00013524999999999648, 0.0001349440000000049, 0.00013437499999999908, 0.00013513799999999992, 0.0001352919999999952, 0.00013458300000000062, 0.00013457000000000052, 0.00013525000000000342, 0.00013511100000000026, 0.00013455600000000095, 0.00013450000000000267, 0.0001351939999999982, 0.00013524999999999648, 0.00013450000000000267, 0.000134861, 0.00013480599999999426, 0.00013532000000000127, 0.00013470799999999727, 0.00013441700000000473]</msg>
<status status="PASS" starttime="20201115 23:03:48.293" endtime="20201115 23:03:48.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.282" endtime="20201115 23:03:48.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.306" endtime="20201115 23:03:48.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:48.314" endtime="20201115 23:03:48.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.310" endtime="20201115 23:03:48.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.301" endtime="20201115 23:03:48.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.778" endtime="20201115 23:03:48.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.774" endtime="20201115 23:03:48.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:47.772" endtime="20201115 23:03:48.340"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.346" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.368" endtime="20201115 23:03:48.389"></status>
</kw>
<msg timestamp="20201115 23:03:48.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:48.364" endtime="20201115 23:03:48.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:48.392" endtime="20201115 23:03:48.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.398" endtime="20201115 23:03:48.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.357" endtime="20201115 23:03:48.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.351" endtime="20201115 23:03:48.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.422" endtime="20201115 23:03:48.755"></status>
</kw>
<msg timestamp="20201115 23:03:48.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045646639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045782569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:48.418" endtime="20201115 23:03:48.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045646639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045782569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:48.765" endtime="20201115 23:03:48.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.783" endtime="20201115 23:03:48.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.411" endtime="20201115 23:03:48.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.406" endtime="20201115 23:03:48.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:48.801" level="INFO">${RESULT} = [{'time': 0.045782569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013592999999999938, 'source_diff': 0.00013592999999999938}, {'time': 0.045926014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:48.793" endtime="20201115 23:03:48.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:48.831" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:48.804" endtime="20201115 23:03:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.842" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:03:48.840" endtime="20201115 23:03:48.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.848" level="INFO">VALUE: [0.00013592999999999938, 0.0001354860000000041, 0.00013529200000000213, 0.0001359719999999981, 0.00013613800000000092, 0.00013586099999999407, 0.0001354860000000041, 0.00013627699999999715, 0.00013595799999999852, 0.0001355410000000029, 0.00013634700000000194, 0.00013575000000000392, 0.00013611100000000126, 0.00013549999999999673, 0.00013597299999999757, 0.00013548599999999716, 0.00013572199999999784, 0.000135861000000001, 0.0001354860000000041, 0.00013541599999999931, 0.00013604200000000288, 0.00013570899999999775, 0.0001360970000000017, 0.0001356389999999999, 0.0001356389999999999, 0.00013579099999999622, 0.00013555499999999554, 0.00013545900000000444, 0.0001356660000000065, 0.00013604200000000288, 0.00013599999999999723, 0.00013545799999999802, 0.00013547299999999707, 0.0001360269999999969, 0.00013620799999999877, 0.0001360139999999968, 0.00013549999999999673, 0.0001360970000000017, 0.0001360970000000017, 0.0001356389999999999, 0.0001361939999999992, 0.00013624999999999748, 0.00013609800000000116, 0.00013592999999999938, 0.00013537500000000008, 0.000135861000000001, 0.000135958999999998, 0.0001354719999999976, 0.00013592999999999938, 0.0001359719999999981]</msg>
<status status="PASS" starttime="20201115 23:03:48.844" endtime="20201115 23:03:48.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.833" endtime="20201115 23:03:48.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.857" endtime="20201115 23:03:48.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:48.865" endtime="20201115 23:03:48.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.861" endtime="20201115 23:03:48.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.852" endtime="20201115 23:03:48.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.347" endtime="20201115 23:03:48.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.343" endtime="20201115 23:03:48.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.341" endtime="20201115 23:03:48.892"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.918" endtime="20201115 23:03:48.939"></status>
</kw>
<msg timestamp="20201115 23:03:48.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:48.915" endtime="20201115 23:03:48.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:48.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:48.942" endtime="20201115 23:03:48.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.949" endtime="20201115 23:03:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.908" endtime="20201115 23:03:48.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.902" endtime="20201115 23:03:48.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:48.972" endtime="20201115 23:03:49.309"></status>
</kw>
<msg timestamp="20201115 23:03:49.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0449815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045118278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:48.969" endtime="20201115 23:03:49.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0449815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045118278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:03:49.318" endtime="20201115 23:03:49.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.336" endtime="20201115 23:03:49.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.961" endtime="20201115 23:03:49.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.957" endtime="20201115 23:03:49.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:49.353" level="INFO">${RESULT} = [{'time': 0.045118278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013677799999999712, 'source_diff': 0.00013677799999999712}, {'time': 0.045260722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:49.345" endtime="20201115 23:03:49.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:49.384" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:49.356" endtime="20201115 23:03:49.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.394" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:03:49.392" endtime="20201115 23:03:49.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.400" level="INFO">VALUE: [0.00013677799999999712, 0.00013666600000000056, 0.00013637499999999414, 0.00013702799999999737, 0.000136958999999999, 0.0001366809999999996, 0.00013680500000000373, 0.00013693099999999986, 0.00013707000000000302, 0.0001366390000000009, 0.00013651400000000424, 0.00013657000000000252, 0.00013642999999999988, 0.00013724999999999848, 0.00013640200000000074, 0.00013670799999999927, 0.0001368049999999968, 0.00013708299999999618, 0.00013694399999999995, 0.00013684700000000244, 0.000136958999999999, 0.00013636200000000098, 0.00013676399999999755, 0.00013720799999999977, 0.00013673599999999841, 0.00013640300000000022, 0.00013687500000000158, 0.00013726399999999805, 0.00013683400000000234, 0.0001369860000000056, 0.0001368060000000032, 0.00013704099999999747, 0.00013729200000000413, 0.00013708300000000312, 0.00013720799999999977, 0.0001372919999999972, 0.00013661099999999482, 0.00013699999999999823, 0.0001363480000000014, 0.00013684700000000244, 0.0001373060000000037, 0.0001371940000000002, 0.0001372919999999972, 0.00013665300000000047, 0.00013656900000000305, 0.0001366390000000009, 0.00013659799999999472, 0.0001363610000000015, 0.000137264000000005, 0.0001365970000000022]</msg>
<status status="PASS" starttime="20201115 23:03:49.397" endtime="20201115 23:03:49.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.385" endtime="20201115 23:03:49.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.409" endtime="20201115 23:03:49.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:49.417" endtime="20201115 23:03:49.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.412" endtime="20201115 23:03:49.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.404" endtime="20201115 23:03:49.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.898" endtime="20201115 23:03:49.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.894" endtime="20201115 23:03:49.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:48.892" endtime="20201115 23:03:49.443"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.470" endtime="20201115 23:03:49.491"></status>
</kw>
<msg timestamp="20201115 23:03:49.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:49.467" endtime="20201115 23:03:49.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:49.494" endtime="20201115 23:03:49.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.501" endtime="20201115 23:03:49.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.460" endtime="20201115 23:03:49.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.454" endtime="20201115 23:03:49.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.524" endtime="20201115 23:03:49.858"></status>
</kw>
<msg timestamp="20201115 23:03:49.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045157639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045295931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:49.521" endtime="20201115 23:03:49.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045157639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045295931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:49.867" endtime="20201115 23:03:49.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.886" endtime="20201115 23:03:49.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.514" endtime="20201115 23:03:49.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.509" endtime="20201115 23:03:49.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:49.905" level="INFO">${RESULT} = [{'time': 0.045295931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001382919999999982, 'source_diff': 0.0001382919999999982}, {'time': 0.045444319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:49.896" endtime="20201115 23:03:49.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:49.934" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:49.907" endtime="20201115 23:03:49.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.945" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:03:49.943" endtime="20201115 23:03:49.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.950" level="INFO">VALUE: [0.0001382919999999982, 0.00013761099999999582, 0.0001374170000000008, 0.00013766700000000104, 0.00013804200000000488, 0.00013765300000000147, 0.00013749999999999873, 0.0001378190000000043, 0.0001379170000000013, 0.000137959, 0.000137861000000003, 0.00013769500000000018, 0.00013791599999999488, 0.00013790300000000172, 0.00013745800000000002, 0.00013815299999999503, 0.00013755599999999701, 0.0001373610000000025, 0.00013743100000000036, 0.00013772199999999984, 0.00013822200000000034, 0.00013799999999999923, 0.00013743100000000036, 0.0001376249999999954, 0.00013772200000000678, 0.00013741600000000131, 0.00013809799999999622, 0.0001375689999999971, 0.00013816600000000206, 0.00013774999999999898, 0.00013808300000000412, 0.0001381249999999959, 0.00013761099999999582, 0.00013836099999999657, 0.00013802799999999837, 0.0001379170000000013, 0.00013754199999999744, 0.0001381799999999947, 0.00013781899999999736, 0.00013770800000000027, 0.00013774999999999898, 0.00013811100000000326, 0.00013751400000000524, 0.00013748599999999916, 0.00013807000000000402, 0.0001380269999999989, 0.0001380689999999976, 0.0001376810000000006, 0.00013748599999999916, 0.00013761200000000223]</msg>
<status status="PASS" starttime="20201115 23:03:49.947" endtime="20201115 23:03:49.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.936" endtime="20201115 23:03:49.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:49.959" endtime="20201115 23:03:49.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:49.967" endtime="20201115 23:03:49.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.963" endtime="20201115 23:03:49.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.955" endtime="20201115 23:03:49.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.450" endtime="20201115 23:03:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.446" endtime="20201115 23:03:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.444" endtime="20201115 23:03:49.994"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:49.999" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.021" endtime="20201115 23:03:50.042"></status>
</kw>
<msg timestamp="20201115 23:03:50.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:50.018" endtime="20201115 23:03:50.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:50.046" endtime="20201115 23:03:50.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.052" endtime="20201115 23:03:50.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.011" endtime="20201115 23:03:50.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.005" endtime="20201115 23:03:50.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.076" endtime="20201115 23:03:50.414"></status>
</kw>
<msg timestamp="20201115 23:03:50.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045992681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:50.072" endtime="20201115 23:03:50.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045992681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046131778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:50.424" endtime="20201115 23:03:50.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.442" endtime="20201115 23:03:50.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.065" endtime="20201115 23:03:50.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.060" endtime="20201115 23:03:50.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:50.459" level="INFO">${RESULT} = [{'time': 0.046131778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013909699999999775, 'source_diff': 0.00013909699999999775}, {'time': 0.04628125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:50.450" endtime="20201115 23:03:50.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:50.491" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:50.461" endtime="20201115 23:03:50.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.502" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:03:50.500" endtime="20201115 23:03:50.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.507" level="INFO">VALUE: [0.00013909699999999775, 0.0001385970000000042, 0.00013925000000000048, 0.0001383190000000048, 0.0001388060000000052, 0.00013830500000000523, 0.00013906900000000555, 0.00013905499999999904, 0.0001386390000000029, 0.00013882000000000477, 0.0001390139999999998, 0.00013855599999999801, 0.00013844400000000145, 0.0001385139999999993, 0.00013876399999999955, 0.0001385139999999993, 0.00013870800000000127, 0.00013933400000000484, 0.00013893100000000186, 0.00013922200000000134, 0.00013916700000000254, 0.00013838900000000265, 0.0001385269999999994, 0.00013883299999999793, 0.00013856999999999758, 0.00013879099999999922, 0.000138861000000004, 0.0001390139999999998, 0.00013883299999999793, 0.00013863899999999596, 0.00013934700000000494, 0.00013837500000000308, 0.00013911099999999732, 0.00013887500000000358, 0.00013874999999999998, 0.0001388049999999988, 0.00013842999999999495, 0.00013858299999999768, 0.0001384720000000006, 0.00013865300000000247, 0.0001385139999999993, 0.00013930599999999876, 0.0001389720000000011, 0.00013843100000000136, 0.0001384590000000005, 0.0001388049999999988, 0.0001387919999999987, 0.00013872200000000084, 0.00013855600000000495, 0.00013931899999999886]</msg>
<status status="PASS" starttime="20201115 23:03:50.504" endtime="20201115 23:03:50.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.493" endtime="20201115 23:03:50.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.516" endtime="20201115 23:03:50.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:50.524" endtime="20201115 23:03:50.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.520" endtime="20201115 23:03:50.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.512" endtime="20201115 23:03:50.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.001" endtime="20201115 23:03:50.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.997" endtime="20201115 23:03:50.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:49.995" endtime="20201115 23:03:50.551"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.556" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.577" endtime="20201115 23:03:50.598"></status>
</kw>
<msg timestamp="20201115 23:03:50.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:50.574" endtime="20201115 23:03:50.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:50.602" endtime="20201115 23:03:50.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.609" endtime="20201115 23:03:50.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.567" endtime="20201115 23:03:50.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.561" endtime="20201115 23:03:50.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.632" endtime="20201115 23:03:50.965"></status>
</kw>
<msg timestamp="20201115 23:03:50.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044985792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:50.629" endtime="20201115 23:03:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:50.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044985792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045126028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:50.974" endtime="20201115 23:03:50.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:50.992" endtime="20201115 23:03:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.622" endtime="20201115 23:03:50.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.617" endtime="20201115 23:03:51.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:51.011" level="INFO">${RESULT} = [{'time': 0.045126028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014023600000000191, 'source_diff': 0.00014023600000000191}, {'time': 0.045273444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:51.002" endtime="20201115 23:03:51.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:51.041" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:51.013" endtime="20201115 23:03:51.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.052" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:03:51.049" endtime="20201115 23:03:51.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.057" level="INFO">VALUE: [0.00014023600000000191, 0.00014027700000000115, 0.0001394590000000015, 0.0001401390000000044, 0.00014012500000000483, 0.0001402920000000002, 0.00013973600000000141, 0.00013941600000000332, 0.00014013899999999746, 0.00013941600000000332, 0.00014004199999999994, 0.00013936099999999757, 0.00013952799999999987, 0.00013954099999999997, 0.0001396669999999961, 0.0001398889999999972, 0.0001401249999999979, 0.0001394019999999968, 0.0001396810000000026, 0.0001399999999999943, 0.00013945899999999456, 0.00013954199999999944, 0.0001401390000000044, 0.00014031999999999933, 0.00013993100000000286, 0.00013965300000000347, 0.00013956900000000605, 0.00013933299999999843, 0.00014011099999999832, 0.00013981899999999936, 0.00014005599999999951, 0.00014001399999999387, 0.00013963899999999696, 0.0001401390000000044, 0.00013995800000000252, 0.00013994500000000243, 0.00013950000000000073, 0.00013995799999999559, 0.00014000000000000123, 0.00013938799999999724, 0.0001398469999999985, 0.0001396249999999974, 0.00013975000000000098, 0.00013955499999999954, 0.00013948600000000116, 0.00013990300000000372, 0.00013959699999999825, 0.00013952799999999987, 0.00013936099999999757, 0.00014019399999999627]</msg>
<status status="PASS" starttime="20201115 23:03:51.054" endtime="20201115 23:03:51.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.042" endtime="20201115 23:03:51.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.066" endtime="20201115 23:03:51.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:51.074" endtime="20201115 23:03:51.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.070" endtime="20201115 23:03:51.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.061" endtime="20201115 23:03:51.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.557" endtime="20201115 23:03:51.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.553" endtime="20201115 23:03:51.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:50.552" endtime="20201115 23:03:51.100"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.106" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.128" endtime="20201115 23:03:51.149"></status>
</kw>
<msg timestamp="20201115 23:03:51.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:51.125" endtime="20201115 23:03:51.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:51.152" endtime="20201115 23:03:51.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.159" endtime="20201115 23:03:51.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.118" endtime="20201115 23:03:51.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.111" endtime="20201115 23:03:51.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.182" endtime="20201115 23:03:51.523"></status>
</kw>
<msg timestamp="20201115 23:03:51.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:51.179" endtime="20201115 23:03:51.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045734333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:51.532" endtime="20201115 23:03:51.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.550" endtime="20201115 23:03:51.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.171" endtime="20201115 23:03:51.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.167" endtime="20201115 23:03:51.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:51.567" level="INFO">${RESULT} = [{'time': 0.045874736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014040299999999728, 'source_diff': 0.00014040299999999728}, {'time': 0.046024208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:51.559" endtime="20201115 23:03:51.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:51.597" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:51.569" endtime="20201115 23:03:51.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.608" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:03:51.606" endtime="20201115 23:03:51.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.614" level="INFO">VALUE: [0.00014040299999999728, 0.0001409999999999953, 0.00014104100000000147, 0.00014058299999999968, 0.00014115299999999803, 0.0001411249999999989, 0.00014061099999999882, 0.00014038800000000518, 0.00014118099999999717, 0.00014090299999999778, 0.0001413199999999934, 0.00014047300000000207, 0.00014054200000000044, 0.00014081999999999983, 0.00014076400000000155, 0.00014048700000000164, 0.00014126399999999512, 0.0001411940000000042, 0.00014037499999999814, 0.00014061099999999882, 0.00014051399999999437, 0.0001407920000000007, 0.00014111099999999932, 0.00014056999999999958, 0.00014115299999999803, 0.0001407219999999959, 0.00014094400000000396, 0.0001407920000000007, 0.00014045800000000302, 0.00014075000000000198, 0.00014090299999999778, 0.0001411669999999976, 0.00014122200000000334, 0.00014030599999999976, 0.00014102799999999444, 0.00014118099999999717, 0.00014055600000000001, 0.0001406940000000037, 0.00014087500000000558, 0.00014066700000000404, 0.0001406669999999971, 0.00014043099999999642, 0.00014123599999999598, 0.0001410140000000018, 0.00014063899999999796, 0.00014081999999999983, 0.00014055500000000054, 0.00014065299999999753, 0.00014095799999999659, 0.00014104200000000094]</msg>
<status status="PASS" starttime="20201115 23:03:51.610" endtime="20201115 23:03:51.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.599" endtime="20201115 23:03:51.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.622" endtime="20201115 23:03:51.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:51.631" endtime="20201115 23:03:51.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.626" endtime="20201115 23:03:51.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.618" endtime="20201115 23:03:51.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.107" endtime="20201115 23:03:51.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.103" endtime="20201115 23:03:51.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.101" endtime="20201115 23:03:51.658"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.685" endtime="20201115 23:03:51.706"></status>
</kw>
<msg timestamp="20201115 23:03:51.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:51.681" endtime="20201115 23:03:51.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:51.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:51.709" endtime="20201115 23:03:51.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.716" endtime="20201115 23:03:51.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.674" endtime="20201115 23:03:51.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.668" endtime="20201115 23:03:51.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:51.739" endtime="20201115 23:03:52.073"></status>
</kw>
<msg timestamp="20201115 23:03:52.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045120639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045262264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:51.735" endtime="20201115 23:03:52.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045120639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045262264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:52.082" endtime="20201115 23:03:52.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.100" endtime="20201115 23:03:52.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.728" endtime="20201115 23:03:52.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.724" endtime="20201115 23:03:52.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:52.119" level="INFO">${RESULT} = [{'time': 0.045262264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014162500000000633, 'source_diff': 0.00014162500000000633}, {'time': 0.045409653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:52.110" endtime="20201115 23:03:52.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:52.149" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:52.121" endtime="20201115 23:03:52.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.160" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:03:52.157" endtime="20201115 23:03:52.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.165" level="INFO">VALUE: [0.00014162500000000633, 0.00014144500000000393, 0.00014202800000000237, 0.00014219500000000468, 0.00014236100000000057, 0.00014155600000000101, 0.00014174999999999605, 0.00014186100000000007, 0.00014180600000000126, 0.00014180600000000126, 0.00014175000000000298, 0.00014215299999999903, 0.00014169499999999724, 0.00014195799999999759, 0.00014204200000000194, 0.0001421799999999987, 0.00014236100000000057, 0.00014145799999999709, 0.0001415690000000011, 0.00014213899999999946, 0.00014191699999999835, 0.00014147300000000307, 0.00014176399999999562, 0.00014152799999999494, 0.00014186100000000007, 0.00014141699999999785, 0.00014218099999999817, 0.0001420270000000029, 0.00014148599999999623, 0.0001423889999999997, 0.00014191600000000582, 0.0001416249999999994, 0.0001421249999999999, 0.00014176400000000255, 0.00014154100000000197, 0.00014150000000000273, 0.00014148600000000316, 0.00014174999999999605, 0.00014140299999999828, 0.0001415690000000011, 0.00014182000000000083, 0.00014193100000000486, 0.00014201399999999587, 0.00014177800000000212, 0.00014213899999999946, 0.00014152800000000187, 0.00014181900000000136, 0.00014213899999999946, 0.00014138799999999924, 0.00014175000000000298]</msg>
<status status="PASS" starttime="20201115 23:03:52.162" endtime="20201115 23:03:52.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.151" endtime="20201115 23:03:52.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.175" endtime="20201115 23:03:52.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:52.183" endtime="20201115 23:03:52.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.178" endtime="20201115 23:03:52.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.170" endtime="20201115 23:03:52.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.665" endtime="20201115 23:03:52.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.661" endtime="20201115 23:03:52.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:51.659" endtime="20201115 23:03:52.209"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.214" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.237" endtime="20201115 23:03:52.259"></status>
</kw>
<msg timestamp="20201115 23:03:52.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:52.234" endtime="20201115 23:03:52.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:52.262" endtime="20201115 23:03:52.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.269" endtime="20201115 23:03:52.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.226" endtime="20201115 23:03:52.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.220" endtime="20201115 23:03:52.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.292" endtime="20201115 23:03:52.630"></status>
</kw>
<msg timestamp="20201115 23:03:52.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046705667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046848986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:52.289" endtime="20201115 23:03:52.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046705667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046848986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:52.639" endtime="20201115 23:03:52.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.658" endtime="20201115 23:03:52.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.282" endtime="20201115 23:03:52.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.277" endtime="20201115 23:03:52.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:52.675" level="INFO">${RESULT} = [{'time': 0.046848986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014331900000000286, 'source_diff': 0.00014331900000000286}, {'time': 0.046999431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:52.666" endtime="20201115 23:03:52.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:52.707" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:52.677" endtime="20201115 23:03:52.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.718" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:03:52.716" endtime="20201115 23:03:52.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.724" level="INFO">VALUE: [0.00014331900000000286, 0.00014284800000000097, 0.0001427219999999979, 0.00014252800000000287, 0.00014293100000000586, 0.0001424999999999968, 0.00014258400000000115, 0.0001424999999999968, 0.00014305500000000304, 0.0001426250000000004, 0.00014304100000000347, 0.00014255500000000254, 0.000143347000000002, 0.00014318099999999917, 0.00014259700000000125, 0.00014330599999999583, 0.00014261100000000082, 0.00014265299999999953, 0.00014316600000000013, 0.00014265299999999953, 0.00014282000000000183, 0.00014261100000000082, 0.00014273599999999748, 0.0001429999999999973, 0.00014318099999999917, 0.00014308299999999524, 0.00014308300000000218, 0.0001423889999999997, 0.00014248599999999723, 0.00014254200000000244, 0.00014243099999999842, 0.00014274999999999705, 0.00014248599999999723, 0.00014309700000000175, 0.00014291699999999935, 0.00014254099999999603, 0.00014304200000000294, 0.00014309700000000175, 0.0001432219999999984, 0.00014270799999999834, 0.00014331900000000286, 0.0001432920000000032, 0.00014326399999999712, 0.00014281899999999542, 0.00014240299999999928, 0.00014244399999999852, 0.00014327800000000362, 0.00014297199999999816, 0.00014258299999999474, 0.00014287500000000064]</msg>
<status status="PASS" starttime="20201115 23:03:52.720" endtime="20201115 23:03:52.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.709" endtime="20201115 23:03:52.727"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.733" endtime="20201115 23:03:52.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:52.741" endtime="20201115 23:03:52.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.737" endtime="20201115 23:03:52.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.728" endtime="20201115 23:03:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.216" endtime="20201115 23:03:52.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.212" endtime="20201115 23:03:52.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.210" endtime="20201115 23:03:52.768"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.794" endtime="20201115 23:03:52.816"></status>
</kw>
<msg timestamp="20201115 23:03:52.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:52.791" endtime="20201115 23:03:52.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:52.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:52.819" endtime="20201115 23:03:52.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.825" endtime="20201115 23:03:52.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.784" endtime="20201115 23:03:52.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.778" endtime="20201115 23:03:52.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:52.849" endtime="20201115 23:03:53.185"></status>
</kw>
<msg timestamp="20201115 23:03:53.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045249653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:52.845" endtime="20201115 23:03:53.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045249653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:53.194" endtime="20201115 23:03:53.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.212" endtime="20201115 23:03:53.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.838" endtime="20201115 23:03:53.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.833" endtime="20201115 23:03:53.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:53.231" level="INFO">${RESULT} = [{'time': 0.045249653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014401399999999787, 'source_diff': 0.00014401399999999787}, {'time': 0.045400097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:53.222" endtime="20201115 23:03:53.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:53.261" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:53.234" endtime="20201115 23:03:53.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.273" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:03:53.271" endtime="20201115 23:03:53.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.279" level="INFO">VALUE: [0.00014401399999999787, 0.00014342999999999995, 0.00014387500000000164, 0.00014419499999999974, 0.00014355500000000354, 0.00014355599999999608, 0.00014342999999999995, 0.00014347299999999813, 0.00014363899999999402, 0.00014405600000000351, 0.0001435270000000044, 0.00014359800000000172, 0.00014411100000000232, 0.00014348599999999823, 0.00014391600000000088, 0.00014436100000000257, 0.0001434720000000056, 0.00014373599999999848, 0.00014354200000000344, 0.00014377799999999719, 0.00014376399999999762, 0.00014344399999999952, 0.0001435969999999953, 0.00014366600000000063, 0.0001440690000000036, 0.00014377800000000412, 0.00014415300000000103, 0.0001443050000000043, 0.000144138000000002, 0.000144041999999997, 0.00014374999999999805, 0.00014419400000000027, 0.00014418100000000017, 0.00014370799999999934, 0.00014397199999999916, 0.0001437920000000037, 0.00014348600000000516, 0.00014413900000000146, 0.00014427700000000515, 0.0001438470000000025, 0.0001439999999999983, 0.00014374999999999805, 0.00014415300000000103, 0.00014395799999999959, 0.0001436800000000002, 0.00014337500000000114, 0.0001441800000000007, 0.00014376399999999762, 0.00014426399999999812, 0.000144138000000002]</msg>
<status status="PASS" starttime="20201115 23:03:53.276" endtime="20201115 23:03:53.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.264" endtime="20201115 23:03:53.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.288" endtime="20201115 23:03:53.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:53.297" endtime="20201115 23:03:53.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.292" endtime="20201115 23:03:53.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.283" endtime="20201115 23:03:53.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.774" endtime="20201115 23:03:53.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.770" endtime="20201115 23:03:53.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:52.769" endtime="20201115 23:03:53.324"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.329" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.351" endtime="20201115 23:03:53.372"></status>
</kw>
<msg timestamp="20201115 23:03:53.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:53.348" endtime="20201115 23:03:53.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:53.376" endtime="20201115 23:03:53.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.382" endtime="20201115 23:03:53.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.340" endtime="20201115 23:03:53.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.335" endtime="20201115 23:03:53.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.406" endtime="20201115 23:03:53.740"></status>
</kw>
<msg timestamp="20201115 23:03:53.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045500167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:53.402" endtime="20201115 23:03:53.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045500167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:53.749" endtime="20201115 23:03:53.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.768" endtime="20201115 23:03:53.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.395" endtime="20201115 23:03:53.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.390" endtime="20201115 23:03:53.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:53.785" level="INFO">${RESULT} = [{'time': 0.045644736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014456899999999717, 'source_diff': 0.00014456899999999717}, {'time': 0.045799167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:53.776" endtime="20201115 23:03:53.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:53.815" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:53.787" endtime="20201115 23:03:53.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.826" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:03:53.824" endtime="20201115 23:03:53.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.831" level="INFO">VALUE: [0.00014456899999999717, 0.0001447089999999998, 0.00014468100000000067, 0.0001446250000000024, 0.00014493000000000145, 0.00014530600000000476, 0.0001448749999999957, 0.00014456999999999665, 0.00014451399999999837, 0.0001446250000000024, 0.0001444999999999988, 0.00014480600000000426, 0.00014497299999999963, 0.00014476299999999914, 0.0001452920000000052, 0.0001450549999999981, 0.00014462499999999545, 0.00014448600000000617, 0.00014458399999999622, 0.00014455599999999708, 0.00014476399999999862, 0.00014520800000000084, 0.00014436100000000257, 0.00014447199999999966, 0.000144445, 0.00014495900000000006, 0.00014486100000000307, 0.0001447089999999998, 0.000145041999999998, 0.00014508299999999724, 0.0001450549999999981, 0.00014468100000000067, 0.00014458300000000368, 0.00014447299999999913, 0.00014481899999999742, 0.0001447219999999999, 0.00014479199999999776, 0.00014511099999999638, 0.00014527799999999869, 0.00014484800000000297, 0.00014461100000000282, 0.00014486099999999613, 0.00014487500000000264, 0.00014505600000000451, 0.0001449020000000023, 0.00014494400000000102, 0.0001445969999999963, 0.00014519400000000127, 0.0001448050000000048, 0.00014483300000000393]</msg>
<status status="PASS" starttime="20201115 23:03:53.828" endtime="20201115 23:03:53.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.817" endtime="20201115 23:03:53.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.840" endtime="20201115 23:03:53.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:53.848" endtime="20201115 23:03:53.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.844" endtime="20201115 23:03:53.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.835" endtime="20201115 23:03:53.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.331" endtime="20201115 23:03:53.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.327" endtime="20201115 23:03:53.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.325" endtime="20201115 23:03:53.875"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.880" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.901" endtime="20201115 23:03:53.923"></status>
</kw>
<msg timestamp="20201115 23:03:53.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:53.898" endtime="20201115 23:03:53.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:53.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:53.926" endtime="20201115 23:03:53.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.932" endtime="20201115 23:03:53.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.891" endtime="20201115 23:03:53.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.885" endtime="20201115 23:03:53.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:53.961" endtime="20201115 23:03:54.296"></status>
</kw>
<msg timestamp="20201115 23:03:54.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045169847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045316167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:53.952" endtime="20201115 23:03:54.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045169847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045316167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:54.306" endtime="20201115 23:03:54.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.325" endtime="20201115 23:03:54.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.945" endtime="20201115 23:03:54.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.940" endtime="20201115 23:03:54.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:54.343" level="INFO">${RESULT} = [{'time': 0.045316167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001463199999999984, 'source_diff': 0.0001463199999999984}, {'time': 0.045469611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:54.335" endtime="20201115 23:03:54.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:54.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:54.346" endtime="20201115 23:03:54.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.384" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:03:54.382" endtime="20201115 23:03:54.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.390" level="INFO">VALUE: [0.0001463199999999984, 0.00014611099999999738, 0.00014590300000000278, 0.0001454999999999998, 0.0001454999999999998, 0.0001462499999999936, 0.00014630499999999935, 0.00014547200000000066, 0.00014543000000000195, 0.00014613900000000346, 0.00014561099999999688, 0.00014538800000000324, 0.00014631899999999892, 0.0001453890000000027, 0.00014615300000000303, 0.00014563899999999602, 0.00014584699999999756, 0.00014587500000000364, 0.00014563799999999655, 0.00014637500000000414, 0.00014606899999999867, 0.0001461250000000039, 0.00014541700000000185, 0.00014579199999999876, 0.00014565300000000253, 0.00014634800000000447, 0.00014577799999999919, 0.00014584800000000397, 0.00014616699999999566, 0.0001459169999999954, 0.00014606899999999867, 0.00014556899999999817, 0.0001461529999999961, 0.00014550000000000674, 0.00014590300000000278, 0.00014631899999999892, 0.00014569400000000177, 0.00014572300000000038, 0.00014584800000000397, 0.00014641700000000285, 0.00014618100000000217, 0.00014541700000000185, 0.00014540299999999534, 0.00014536099999999663, 0.0001463329999999985, 0.0001460969999999978, 0.00014572300000000038, 0.00014586100000000407, 0.00014569500000000124, 0.00014534699999999706]</msg>
<status status="PASS" starttime="20201115 23:03:54.387" endtime="20201115 23:03:54.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.375" endtime="20201115 23:03:54.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.398" endtime="20201115 23:03:54.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:54.407" endtime="20201115 23:03:54.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.402" endtime="20201115 23:03:54.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.394" endtime="20201115 23:03:54.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.881" endtime="20201115 23:03:54.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.877" endtime="20201115 23:03:54.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:53.875" endtime="20201115 23:03:54.433"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.460" endtime="20201115 23:03:54.481"></status>
</kw>
<msg timestamp="20201115 23:03:54.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:54.457" endtime="20201115 23:03:54.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:54.485" endtime="20201115 23:03:54.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.492" endtime="20201115 23:03:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.450" endtime="20201115 23:03:54.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.444" endtime="20201115 23:03:54.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.515" endtime="20201115 23:03:54.851"></status>
</kw>
<msg timestamp="20201115 23:03:54.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:54.512" endtime="20201115 23:03:54.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045605458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:54.860" endtime="20201115 23:03:54.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.878" endtime="20201115 23:03:54.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.505" endtime="20201115 23:03:54.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.500" endtime="20201115 23:03:54.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:54.895" level="INFO">${RESULT} = [{'time': 0.045605458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001473890000000047, 'source_diff': 0.0001473890000000047}, {'time': 0.045757958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:54.887" endtime="20201115 23:03:54.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:54.928" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:54.897" endtime="20201115 23:03:54.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.938" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:03:54.936" endtime="20201115 23:03:54.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.944" level="INFO">VALUE: [0.0001473890000000047, 0.0001473890000000047, 0.00014713900000000446, 0.00014730500000000035, 0.00014640299999999634, 0.00014736200000000504, 0.00014709799999999829, 0.00014686099999999813, 0.00014725000000000155, 0.0001466659999999967, 0.00014675000000000105, 0.0001471529999999971, 0.00014643100000000242, 0.0001473199999999994, 0.00014643099999999548, 0.00014680499999999985, 0.00014680600000000626, 0.00014643099999999548, 0.0001468749999999977, 0.00014706899999999967, 0.00014643100000000242, 0.0001473619999999981, 0.00014641700000000285, 0.00014681899999999942, 0.00014723600000000198, 0.0001471670000000036, 0.0001469870000000012, 0.00014701299999999445, 0.00014695900000000206, 0.00014718100000000317, 0.00014673600000000148, 0.00014661099999999788, 0.00014647300000000113, 0.00014694399999999608, 0.00014645799999999515, 0.00014743099999999648, 0.0001467220000000019, 0.0001473329999999995, 0.00014690300000000378, 0.00014712499999999795, 0.00014647199999999472, 0.0001469580000000026, 0.00014705599999999958, 0.00014668100000000267, 0.000147042, 0.00014663900000000396, 0.00014686099999999813, 0.00014648600000000123, 0.0001469859999999948, 0.00014697199999999522]</msg>
<status status="PASS" starttime="20201115 23:03:54.941" endtime="20201115 23:03:54.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.929" endtime="20201115 23:03:54.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:54.952" endtime="20201115 23:03:54.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:54.961" endtime="20201115 23:03:54.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.956" endtime="20201115 23:03:54.984"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.948" endtime="20201115 23:03:54.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.440" endtime="20201115 23:03:54.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.436" endtime="20201115 23:03:54.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.434" endtime="20201115 23:03:54.987"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:54.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.015" endtime="20201115 23:03:55.037"></status>
</kw>
<msg timestamp="20201115 23:03:55.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:55.012" endtime="20201115 23:03:55.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:55.040" endtime="20201115 23:03:55.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.046" endtime="20201115 23:03:55.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.005" endtime="20201115 23:03:55.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.998" endtime="20201115 23:03:55.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.069" endtime="20201115 23:03:55.411"></status>
</kw>
<msg timestamp="20201115 23:03:55.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046262181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046409708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:55.066" endtime="20201115 23:03:55.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046262181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046409708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:55.420" endtime="20201115 23:03:55.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.438" endtime="20201115 23:03:55.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.059" endtime="20201115 23:03:55.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.054" endtime="20201115 23:03:55.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:55.457" level="INFO">${RESULT} = [{'time': 0.046409708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014752700000000146, 'source_diff': 0.00014752700000000146}, {'time': 0.046565111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:55.448" endtime="20201115 23:03:55.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:55.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:55.459" endtime="20201115 23:03:55.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.497" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:03:55.495" endtime="20201115 23:03:55.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.503" level="INFO">VALUE: [0.00014752700000000146, 0.0001474169999999969, 0.00014794399999999708, 0.00014802800000000144, 0.00014799999999999536, 0.00014794399999999708, 0.0001476529999999976, 0.00014780500000000085, 0.00014822199999999647, 0.0001483749999999992, 0.00014784699999999956, 0.00014788899999999827, 0.0001480969999999998, 0.00014743099999999648, 0.00014779200000000076, 0.00014751399999999443, 0.0001475969999999993, 0.0001478749999999987, 0.00014763899999999802, 0.0001480969999999998, 0.0001478199999999999, 0.00014798600000000273, 0.00014773600000000248, 0.00014822199999999647, 0.0001476670000000041, 0.00014751400000000137, 0.0001475000000000018, 0.00014777800000000119, 0.00014744400000000352, 0.0001475420000000005, 0.00014825000000000255, 0.0001474729999999952, 0.00014831999999999346, 0.00014797300000000263, 0.00014754199999999357, 0.0001475420000000005, 0.0001483200000000004, 0.00014793100000000392, 0.00014784699999999956, 0.0001477220000000029, 0.0001482079999999969, 0.00014751400000000137, 0.00014751399999999443, 0.00014823600000000298, 0.00014834700000000006, 0.0001482770000000022, 0.0001480550000000011, 0.00014755600000000008, 0.00014818099999999723, 0.00014812499999999895]</msg>
<status status="PASS" starttime="20201115 23:03:55.500" endtime="20201115 23:03:55.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.488" endtime="20201115 23:03:55.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.511" endtime="20201115 23:03:55.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:55.520" endtime="20201115 23:03:55.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.515" endtime="20201115 23:03:55.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.507" endtime="20201115 23:03:55.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.994" endtime="20201115 23:03:55.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.990" endtime="20201115 23:03:55.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:54.988" endtime="20201115 23:03:55.547"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.574" endtime="20201115 23:03:55.595"></status>
</kw>
<msg timestamp="20201115 23:03:55.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:55.570" endtime="20201115 23:03:55.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:55.598" endtime="20201115 23:03:55.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.605" endtime="20201115 23:03:55.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.563" endtime="20201115 23:03:55.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.557" endtime="20201115 23:03:55.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.628" endtime="20201115 23:03:55.964"></status>
</kw>
<msg timestamp="20201115 23:03:55.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045246319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045395042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:55.625" endtime="20201115 23:03:55.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:55.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045246319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045395042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:55.973" endtime="20201115 23:03:55.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:55.991" endtime="20201115 23:03:55.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.618" endtime="20201115 23:03:55.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.613" endtime="20201115 23:03:56.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:56.010" level="INFO">${RESULT} = [{'time': 0.045395042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014872299999999644, 'source_diff': 0.00014872299999999644}, {'time': 0.045550528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:56.001" endtime="20201115 23:03:56.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:56.040" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:56.012" endtime="20201115 23:03:56.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.051" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:03:56.049" endtime="20201115 23:03:56.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.056" level="INFO">VALUE: [0.00014872299999999644, 0.00014877800000000219, 0.0001485970000000003, 0.00014851400000000237, 0.00014933400000000097, 0.00014879100000000228, 0.00014915199999999962, 0.00014911100000000038, 0.00014888899999999927, 0.00014849999999999586, 0.00014847300000000313, 0.0001487499999999961, 0.00014838899999999877, 0.00014856900000000117, 0.00014875000000000305, 0.0001492079999999979, 0.0001483330000000005, 0.00014880500000000185, 0.00014902800000000244, 0.00014923599999999704, 0.00014858300000000074, 0.00014922299999999694, 0.00014880500000000185, 0.00014863899999999902, 0.00014884800000000004, 0.00014840199999999887, 0.0001488749999999997, 0.00014875000000000305, 0.00014876399999999568, 0.0001487770000000027, 0.00014858300000000074, 0.00014906900000000167, 0.00014930500000000235, 0.00014875000000000305, 0.00014861099999999988, 0.0001487220000000039, 0.00014895799999999765, 0.00014884800000000004, 0.00014923599999999704, 0.00014840299999999834, 0.00014920800000000484, 0.00014866699999999816, 0.00014938899999999977, 0.00014881899999999448, 0.0001493750000000002, 0.00014929200000000226, 0.00014917999999999876, 0.00014855499999999466, 0.00014930600000000183, 0.0001487090000000038]</msg>
<status status="PASS" starttime="20201115 23:03:56.053" endtime="20201115 23:03:56.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.042" endtime="20201115 23:03:56.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.066" endtime="20201115 23:03:56.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:56.074" endtime="20201115 23:03:56.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.070" endtime="20201115 23:03:56.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.061" endtime="20201115 23:03:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.553" endtime="20201115 23:03:56.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.549" endtime="20201115 23:03:56.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:55.548" endtime="20201115 23:03:56.101"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.106" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.127" endtime="20201115 23:03:56.149"></status>
</kw>
<msg timestamp="20201115 23:03:56.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:56.124" endtime="20201115 23:03:56.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:56.152" endtime="20201115 23:03:56.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.159" endtime="20201115 23:03:56.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.117" endtime="20201115 23:03:56.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.111" endtime="20201115 23:03:56.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.182" endtime="20201115 23:03:56.522"></status>
</kw>
<msg timestamp="20201115 23:03:56.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045040792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045190528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:56.179" endtime="20201115 23:03:56.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045040792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045190528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:56.531" endtime="20201115 23:03:56.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.549" endtime="20201115 23:03:56.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.171" endtime="20201115 23:03:56.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.167" endtime="20201115 23:03:56.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:56.568" level="INFO">${RESULT} = [{'time': 0.045190528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014973599999999754, 'source_diff': 0.00014973599999999754}, {'time': 0.045346014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:56.559" endtime="20201115 23:03:56.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:56.598" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:56.570" endtime="20201115 23:03:56.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.609" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:03:56.606" endtime="20201115 23:03:56.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.615" level="INFO">VALUE: [0.00014973599999999754, 0.00015033299999999555, 0.00015002800000000344, 0.00015031900000000292, 0.00014976399999999668, 0.00014981900000000242, 0.0001495829999999948, 0.00014976399999999668, 0.00015011200000000086, 0.0001498200000000019, 0.00014958300000000174, 0.000150042000000003, 0.00014986100000000113, 0.00015036100000000163, 0.0001498750000000007, 0.0001500000000000043, 0.00014958300000000174, 0.0001498750000000007, 0.00014993099999999898, 0.00014948600000000423, 0.00014968099999999873, 0.00014961200000000036, 0.00015020899999999837, 0.0001498750000000007, 0.0001498750000000007, 0.0001499859999999978, 0.00015001399999999693, 0.00015044499999999905, 0.00014940299999999934, 0.0001498750000000007, 0.00014988900000000027, 0.0001503330000000025, 0.0001498750000000007, 0.00014951299999999695, 0.00014945899999999762, 0.00014945799999999815, 0.00015043100000000642, 0.00015030499999999641, 0.00014998600000000473, 0.00014936100000000063, 0.00014988900000000027, 0.0001495970000000013, 0.00014997200000000516, 0.00014944399999999858, 0.00014948600000000423, 0.00014999999999999736, 0.00014994400000000602, 0.0001501530000000001, 0.0001498059999999954, 0.00014972199999999797]</msg>
<status status="PASS" starttime="20201115 23:03:56.611" endtime="20201115 23:03:56.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.599" endtime="20201115 23:03:56.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.624" endtime="20201115 23:03:56.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:56.632" endtime="20201115 23:03:56.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.628" endtime="20201115 23:03:56.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.619" endtime="20201115 23:03:56.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.107" endtime="20201115 23:03:56.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.103" endtime="20201115 23:03:56.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.102" endtime="20201115 23:03:56.659"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.686" endtime="20201115 23:03:56.708"></status>
</kw>
<msg timestamp="20201115 23:03:56.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:56.682" endtime="20201115 23:03:56.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:56.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:56.712" endtime="20201115 23:03:56.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.718" endtime="20201115 23:03:56.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.675" endtime="20201115 23:03:56.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.669" endtime="20201115 23:03:56.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:56.741" endtime="20201115 23:03:57.084"></status>
</kw>
<msg timestamp="20201115 23:03:57.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045200486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045351056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:56.738" endtime="20201115 23:03:57.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045200486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045351056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:57.093" endtime="20201115 23:03:57.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.111" endtime="20201115 23:03:57.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.731" endtime="20201115 23:03:57.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.726" endtime="20201115 23:03:57.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:57.128" level="INFO">${RESULT} = [{'time': 0.045351056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015057000000000265, 'source_diff': 0.00015057000000000265}, {'time': 0.045508458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:57.120" endtime="20201115 23:03:57.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:57.161" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:57.131" endtime="20201115 23:03:57.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.172" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:03:57.170" endtime="20201115 23:03:57.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.178" level="INFO">VALUE: [0.00015057000000000265, 0.00015104100000000453, 0.00015063900000000102, 0.0001505829999999958, 0.00015094499999999955, 0.00015112500000000195, 0.00015116700000000066, 0.0001509859999999988, 0.00015108300000000324, 0.00015049999999999786, 0.00015043, 0.0001510279999999975, 0.00015054199999999657, 0.0001509300000000005, 0.00015130600000000383, 0.0001506530000000006, 0.00015063900000000102, 0.0001507220000000059, 0.0001507079999999994, 0.00015127799999999775, 0.0001510970000000028, 0.00015036100000000163, 0.0001512079999999999, 0.00015123599999999904, 0.00015081999999999596, 0.00015044400000000652, 0.00015106899999999673, 0.00015066700000000016, 0.00015079100000000428, 0.0001503330000000025, 0.00015111099999999544, 0.00015044399999999958, 0.00015052800000000394, 0.0001508750000000017, 0.00015126399999999818, 0.00015088900000000127, 0.00015086100000000213, 0.00015063800000000155, 0.0001508750000000017, 0.0001505829999999958, 0.0001511949999999998, 0.00015138900000000177, 0.00015099999999999836, 0.00015043, 0.00015040300000000034, 0.0001510970000000028, 0.00015127799999999775, 0.0001513750000000022, 0.00015063900000000102, 0.00015076399999999768]</msg>
<status status="PASS" starttime="20201115 23:03:57.175" endtime="20201115 23:03:57.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.163" endtime="20201115 23:03:57.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.186" endtime="20201115 23:03:57.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:57.195" endtime="20201115 23:03:57.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.190" endtime="20201115 23:03:57.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.182" endtime="20201115 23:03:57.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.665" endtime="20201115 23:03:57.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.661" endtime="20201115 23:03:57.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:56.660" endtime="20201115 23:03:57.221"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.226" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.248" endtime="20201115 23:03:57.269"></status>
</kw>
<msg timestamp="20201115 23:03:57.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:57.244" endtime="20201115 23:03:57.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:57.273" endtime="20201115 23:03:57.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.279" endtime="20201115 23:03:57.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.237" endtime="20201115 23:03:57.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.231" endtime="20201115 23:03:57.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.302" endtime="20201115 23:03:57.646"></status>
</kw>
<msg timestamp="20201115 23:03:57.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044954014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045106306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:57.299" endtime="20201115 23:03:57.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044954014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045106306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:57.655" endtime="20201115 23:03:57.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.674" endtime="20201115 23:03:57.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.292" endtime="20201115 23:03:57.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.287" endtime="20201115 23:03:57.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:57.693" level="INFO">${RESULT} = [{'time': 0.045106306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015229199999999832, 'source_diff': 0.00015229199999999832}, {'time': 0.045265806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:57.684" endtime="20201115 23:03:57.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:57.722" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:57.695" endtime="20201115 23:03:57.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.733" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:03:57.731" endtime="20201115 23:03:57.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.738" level="INFO">VALUE: [0.00015229199999999832, 0.0001519729999999997, 0.00015154199999999757, 0.00015191699999999447, 0.00015188899999999533, 0.00015179200000000476, 0.00015209699999999687, 0.00015186100000000313, 0.0001522080000000009, 0.00015163900000000202, 0.00015154199999999757, 0.00015158400000000322, 0.00015211100000000338, 0.00015205499999999816, 0.0001517080000000004, 0.00015151400000000537, 0.00015145800000000015, 0.00015191699999999447, 0.0001519170000000014, 0.00015234700000000406, 0.00015141699999999397, 0.0001522780000000057, 0.00015195800000000065, 0.00015237499999999626, 0.00015215199999999568, 0.00015223600000000004, 0.00015143100000000048, 0.0001520279999999985, 0.0001514729999999992, 0.00015191699999999447, 0.00015213900000000252, 0.00015184699999999662, 0.00015193100000000098, 0.0001520279999999985, 0.00015158300000000374, 0.00015216699999999472, 0.0001519029999999949, 0.0001521660000000022, 0.00015201399999999893, 0.000151527999999998, 0.00015140300000000134, 0.00015226399999999918, 0.00015215299999999515, 0.0001521939999999944, 0.00015188899999999533, 0.0001519300000000015, 0.00015220900000000037, 0.00015233299999999755, 0.00015167999999999432, 0.00015209699999999687]</msg>
<status status="PASS" starttime="20201115 23:03:57.735" endtime="20201115 23:03:57.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.724" endtime="20201115 23:03:57.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.747" endtime="20201115 23:03:57.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:57.755" endtime="20201115 23:03:57.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.751" endtime="20201115 23:03:57.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.743" endtime="20201115 23:03:57.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.228" endtime="20201115 23:03:57.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.224" endtime="20201115 23:03:57.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.222" endtime="20201115 23:03:57.782"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.809" endtime="20201115 23:03:57.830"></status>
</kw>
<msg timestamp="20201115 23:03:57.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:57.805" endtime="20201115 23:03:57.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:57.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:57.834" endtime="20201115 23:03:57.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.840" endtime="20201115 23:03:57.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.798" endtime="20201115 23:03:57.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.792" endtime="20201115 23:03:57.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:57.864" endtime="20201115 23:03:58.200"></status>
</kw>
<msg timestamp="20201115 23:03:58.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045217097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045369708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:57.860" endtime="20201115 23:03:58.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045217097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045369708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:58.210" endtime="20201115 23:03:58.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.228" endtime="20201115 23:03:58.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.853" endtime="20201115 23:03:58.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.848" endtime="20201115 23:03:58.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:58.245" level="INFO">${RESULT} = [{'time': 0.045369708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015261100000000388, 'source_diff': 0.00015261100000000388}, {'time': 0.045530139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:58.236" endtime="20201115 23:03:58.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:58.275" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:58.247" endtime="20201115 23:03:58.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.286" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:03:58.283" endtime="20201115 23:03:58.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.291" level="INFO">VALUE: [0.00015261100000000388, 0.0001524860000000003, 0.00015273600000000054, 0.00015316700000000266, 0.00015283299999999805, 0.00015251399999999943, 0.00015273600000000054, 0.0001529730000000007, 0.0001524860000000003, 0.00015286199999999667, 0.00015327799999999975, 0.00015290300000000284, 0.0001524029999999954, 0.00015238900000000277, 0.000153124999999997, 0.00015283399999999753, 0.00015255599999999814, 0.00015293100000000198, 0.00015255599999999814, 0.0001533609999999977, 0.00015319400000000233, 0.00015262500000000345, 0.00015276399999999968, 0.00015266599999999575, 0.0001524170000000019, 0.00015262500000000345, 0.0001524170000000019, 0.0001530829999999983, 0.00015245800000000115, 0.00015301399999999993, 0.00015273600000000054, 0.00015322200000000147, 0.00015297200000000122, 0.00015330499999999941, 0.00015249999999999986, 0.00015309699999999787, 0.00015258400000000422, 0.00015254199999999857, 0.00015338899999999683, 0.00015308400000000472, 0.00015322199999999453, 0.0001528059999999984, 0.00015290199999999643, 0.00015293100000000198, 0.00015306899999999873, 0.00015280499999999891, 0.00015320799999999496, 0.00015329199999999932, 0.00015281899999999848, 0.00015308300000000524]</msg>
<status status="PASS" starttime="20201115 23:03:58.288" endtime="20201115 23:03:58.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.277" endtime="20201115 23:03:58.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.300" endtime="20201115 23:03:58.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:58.308" endtime="20201115 23:03:58.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.304" endtime="20201115 23:03:58.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.295" endtime="20201115 23:03:58.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.788" endtime="20201115 23:03:58.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.784" endtime="20201115 23:03:58.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:57.783" endtime="20201115 23:03:58.334"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.340" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.361" endtime="20201115 23:03:58.383"></status>
</kw>
<msg timestamp="20201115 23:03:58.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:58.358" endtime="20201115 23:03:58.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:58.386" endtime="20201115 23:03:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.393" endtime="20201115 23:03:58.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.351" endtime="20201115 23:03:58.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.345" endtime="20201115 23:03:58.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.417" endtime="20201115 23:03:58.763"></status>
</kw>
<msg timestamp="20201115 23:03:58.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:58.414" endtime="20201115 23:03:58.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045347056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:58.772" endtime="20201115 23:03:58.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.790" endtime="20201115 23:03:58.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.406" endtime="20201115 23:03:58.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.402" endtime="20201115 23:03:58.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:58.809" level="INFO">${RESULT} = [{'time': 0.045501389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001543330000000065, 'source_diff': 0.0001543330000000065}, {'time': 0.045660778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:58.800" endtime="20201115 23:03:58.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:58.839" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:58.811" endtime="20201115 23:03:58.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.850" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:03:58.848" endtime="20201115 23:03:58.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.856" level="INFO">VALUE: [0.0001543330000000065, 0.00015359699999999837, 0.00015417999999999682, 0.00015433299999999955, 0.0001537080000000024, 0.00015401400000000093, 0.00015391699999999647, 0.00015361100000000488, 0.00015345800000000215, 0.00015347200000000172, 0.00015404199999999313, 0.00015392999999999657, 0.0001534730000000012, 0.00015350000000000086, 0.0001539170000000034, 0.00015433299999999955, 0.00015405500000000016, 0.00015415299999999715, 0.00015367999999999632, 0.00015379199999999982, 0.00015427800000000075, 0.00015413899999999758, 0.00015347200000000172, 0.00015377800000000025, 0.00015383299999999905, 0.0001541809999999963, 0.00015395800000000265, 0.00015343100000000248, 0.0001543059999999999, 0.00015352700000000052, 0.00015408300000000624, 0.0001539860000000018, 0.0001536530000000036, 0.0001542500000000016, 0.00015361100000000488, 0.00015359699999999837, 0.00015347199999999478, 0.0001538059999999994, 0.0001537080000000024, 0.00015354199999999957, 0.0001541809999999963, 0.0001537500000000011, 0.00015400000000000136, 0.00015363900000000402, 0.00015405599999999964, 0.00015409699999999887, 0.0001540829999999993, 0.00015434699999999912, 0.0001533479999999976, 0.00015422199999999553]</msg>
<status status="PASS" starttime="20201115 23:03:58.853" endtime="20201115 23:03:58.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.841" endtime="20201115 23:03:58.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.865" endtime="20201115 23:03:58.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:58.873" endtime="20201115 23:03:58.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.868" endtime="20201115 23:03:58.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.860" endtime="20201115 23:03:58.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.341" endtime="20201115 23:03:58.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.337" endtime="20201115 23:03:58.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.335" endtime="20201115 23:03:58.899"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.927" endtime="20201115 23:03:58.949"></status>
</kw>
<msg timestamp="20201115 23:03:58.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:58.923" endtime="20201115 23:03:58.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:58.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:58.952" endtime="20201115 23:03:58.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.958" endtime="20201115 23:03:58.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.916" endtime="20201115 23:03:58.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.910" endtime="20201115 23:03:58.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:58.982" endtime="20201115 23:03:59.318"></status>
</kw>
<msg timestamp="20201115 23:03:59.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045820042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045974847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:58.978" endtime="20201115 23:03:59.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045820042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045974847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:59.327" endtime="20201115 23:03:59.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.345" endtime="20201115 23:03:59.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.971" endtime="20201115 23:03:59.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.966" endtime="20201115 23:03:59.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:59.362" level="INFO">${RESULT} = [{'time': 0.045974847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015480500000000091, 'source_diff': 0.00015480500000000091}, {'time': 0.046134292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:59.354" endtime="20201115 23:03:59.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:59.395" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:59.365" endtime="20201115 23:03:59.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.406" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:03:59.404" endtime="20201115 23:03:59.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.411" level="INFO">VALUE: [0.00015480500000000091, 0.00015462499999999851, 0.00015513899999999858, 0.00015512499999999901, 0.00015494500000000355, 0.00015500000000000236, 0.00015465299999999765, 0.00015504200000000107, 0.00015498599999999585, 0.0001550700000000002, 0.00015512500000000595, 0.0001547500000000021, 0.00015481900000000048, 0.00015541699999999797, 0.00015518100000000423, 0.00015467999999999732, 0.0001548609999999992, 0.00015526399999999524, 0.00015515299999999815, 0.00015488900000000527, 0.00015516699999999772, 0.00015455500000000066, 0.00015487499999999876, 0.00015515199999999868, 0.00015483300000000005, 0.00015500000000000236, 0.00015520899999999643, 0.00015469400000000383, 0.00015470799999999646, 0.00015500000000000236, 0.00015490199999999843, 0.00015522200000000347, 0.00015463899999999808, 0.0001546950000000033, 0.00015513899999999858, 0.00015499999999999542, 0.00015530599999999395, 0.00015443099999999654, 0.00015477800000000125, 0.0001553609999999997, 0.00015449999999999492, 0.00015522200000000347, 0.00015472199999999603, 0.00015500000000000236, 0.00015470900000000287, 0.00015530500000000141, 0.0001550410000000016, 0.00015505500000000116, 0.00015443099999999654, 0.0001546809999999968]</msg>
<status status="PASS" starttime="20201115 23:03:59.408" endtime="20201115 23:03:59.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.397" endtime="20201115 23:03:59.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.420" endtime="20201115 23:03:59.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:59.429" endtime="20201115 23:03:59.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.424" endtime="20201115 23:03:59.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.415" endtime="20201115 23:03:59.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.906" endtime="20201115 23:03:59.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.902" endtime="20201115 23:03:59.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:58.900" endtime="20201115 23:03:59.456"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.484" endtime="20201115 23:03:59.507"></status>
</kw>
<msg timestamp="20201115 23:03:59.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:59.480" endtime="20201115 23:03:59.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:59.510" endtime="20201115 23:03:59.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.517" endtime="20201115 23:03:59.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.472" endtime="20201115 23:03:59.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.466" endtime="20201115 23:03:59.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.540" endtime="20201115 23:03:59.877"></status>
</kw>
<msg timestamp="20201115 23:03:59.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046987403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:59.537" endtime="20201115 23:03:59.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046987403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:59.886" endtime="20201115 23:03:59.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.904" endtime="20201115 23:03:59.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.529" endtime="20201115 23:03:59.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.525" endtime="20201115 23:03:59.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:59.923" level="INFO">${RESULT} = [{'time': 0.047142847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015544400000000458, 'source_diff': 0.00015544400000000458}, {'time': 0.047304292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:59.914" endtime="20201115 23:03:59.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:59.953" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:03:59.925" endtime="20201115 23:03:59.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.964" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:03:59.961" endtime="20201115 23:03:59.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:59.969" level="INFO">VALUE: [0.00015544400000000458, 0.0001556809999999978, 0.0001559860000000038, 0.0001554449999999971, 0.00015584700000000062, 0.00015608399999999384, 0.0001559449999999976, 0.00015611100000000044, 0.00015548599999999635, 0.00015559700000000037, 0.0001560280000000025, 0.00015577700000000277, 0.0001560280000000025, 0.0001557500000000031, 0.00015562499999999951, 0.0001560700000000012, 0.0001559029999999989, 0.00015570899999999693, 0.0001553609999999997, 0.0001557779999999953, 0.00015626400000000318, 0.00015630500000000241, 0.0001559730000000037, 0.00015563899999999908, 0.00015623699999999657, 0.00015615299999999915, 0.000155430000000005, 0.00015629200000000232, 0.00015555499999999473, 0.00015581899999999455, 0.00015569499999999736, 0.0001555830000000008, 0.00015541600000000544, 0.00015591699999999847, 0.00015544399999999764, 0.00015541699999999797, 0.00015566700000000516, 0.0001561939999999984, 0.00015548700000000276, 0.0001560410000000026, 0.0001554579999999972, 0.00015581900000000148, 0.00015622300000000394, 0.00015597199999999728, 0.00015573600000000354, 0.0001563339999999941, 0.00015563899999999908, 0.00015605500000000216, 0.00015565199999999918, 0.00015632000000000146]</msg>
<status status="PASS" starttime="20201115 23:03:59.966" endtime="20201115 23:03:59.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.955" endtime="20201115 23:03:59.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:59.979" endtime="20201115 23:03:59.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:59.987" endtime="20201115 23:04:00.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.982" endtime="20201115 23:04:00.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.974" endtime="20201115 23:04:00.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.462" endtime="20201115 23:04:00.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.458" endtime="20201115 23:04:00.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:59.456" endtime="20201115 23:04:00.013"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.040" endtime="20201115 23:04:00.062"></status>
</kw>
<msg timestamp="20201115 23:04:00.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:00.037" endtime="20201115 23:04:00.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:00.065" endtime="20201115 23:04:00.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.072" endtime="20201115 23:04:00.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.030" endtime="20201115 23:04:00.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.024" endtime="20201115 23:04:00.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.095" endtime="20201115 23:04:00.430"></status>
</kw>
<msg timestamp="20201115 23:04:00.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045458861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:04:00.092" endtime="20201115 23:04:00.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0453015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045458861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:04:00.440" endtime="20201115 23:04:00.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.458" endtime="20201115 23:04:00.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.084" endtime="20201115 23:04:00.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.080" endtime="20201115 23:04:00.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:04:00.477" level="INFO">${RESULT} = [{'time': 0.045458861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001573610000000017, 'source_diff': 0.0001573610000000017}, {'time': 0.045622361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:04:00.468" endtime="20201115 23:04:00.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:04:00.507" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:04:00.480" endtime="20201115 23:04:00.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.519" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:04:00.517" endtime="20201115 23:04:00.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.526" level="INFO">VALUE: [0.0001573610000000017, 0.00015722199999999853, 0.000157013999999997, 0.00015663900000000008, 0.0001567909999999964, 0.00015729200000000332, 0.0001568610000000012, 0.0001565700000000017, 0.00015709700000000187, 0.00015679199999999588, 0.00015679200000000282, 0.00015655500000000266, 0.00015743000000000007, 0.00015638899999999983, 0.00015668000000000626, 0.00015687500000000076, 0.0001565700000000017, 0.0001564579999999982, 0.0001570830000000023, 0.0001565830000000018, 0.00015655500000000266, 0.00015684700000000162, 0.00015694400000000608, 0.00015662499999999357, 0.00015697299999999775, 0.00015736200000000117, 0.00015709700000000187, 0.00015731900000000298, 0.00015701400000000393, 0.00015655600000000214, 0.00015704200000000307, 0.00015683299999999512, 0.00015713900000000058, 0.00015665299999999965, 0.00015683300000000205, 0.0001571939999999994, 0.00015701400000000393, 0.00015665299999999965, 0.00015691699999999947, 0.00015731900000000298, 0.0001565830000000018, 0.00015715300000000015, 0.00015708299999999537, 0.00015687500000000076, 0.00015665299999999965, 0.00015688900000000033, 0.00015684799999999416, 0.00015708299999999537, 0.00015720799999999896, 0.000156528000000003]</msg>
<status status="PASS" starttime="20201115 23:04:00.521" endtime="20201115 23:04:00.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.509" endtime="20201115 23:04:00.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.535" endtime="20201115 23:04:00.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:04:00.543" endtime="20201115 23:04:00.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.539" endtime="20201115 23:04:00.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.530" endtime="20201115 23:04:00.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.020" endtime="20201115 23:04:00.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.016" endtime="20201115 23:04:00.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.014" endtime="20201115 23:04:00.570"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.575" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.597" endtime="20201115 23:04:00.619"></status>
</kw>
<msg timestamp="20201115 23:04:00.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:00.594" endtime="20201115 23:04:00.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:00.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:00.622" endtime="20201115 23:04:00.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.629" endtime="20201115 23:04:00.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.586" endtime="20201115 23:04:00.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.581" endtime="20201115 23:04:00.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:00.652" endtime="20201115 23:04:00.986"></status>
</kw>
<msg timestamp="20201115 23:04:00.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045596167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045753722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:04:00.649" endtime="20201115 23:04:00.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045596167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045753722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:04:00.995" endtime="20201115 23:04:01.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.014" endtime="20201115 23:04:01.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.642" endtime="20201115 23:04:01.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.637" endtime="20201115 23:04:01.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:04:01.033" level="INFO">${RESULT} = [{'time': 0.045753722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015755499999999673, 'source_diff': 0.00015755499999999673}, {'time': 0.045922236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:04:01.024" endtime="20201115 23:04:01.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:04:01.063" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:04:01.036" endtime="20201115 23:04:01.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.074" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:04:01.072" endtime="20201115 23:04:01.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.079" level="INFO">VALUE: [0.00015755499999999673, 0.00015749999999999792, 0.00015772199999999903, 0.00015829199999999738, 0.00015748599999999835, 0.0001577909999999974, 0.0001581380000000021, 0.00015751299999999802, 0.00015820899999999943, 0.00015816600000000125, 0.0001581940000000004, 0.0001582779999999978, 0.000158013999999998, 0.0001577359999999986, 0.00015804199999999713, 0.0001574030000000004, 0.00015799999999999842, 0.0001574860000000053, 0.00015755600000000314, 0.00015784700000000262, 0.0001579030000000009, 0.0001580559999999967, 0.00015770799999999946, 0.000157916000000001, 0.00015783300000000305, 0.00015742999999999313, 0.00015787499999999483, 0.0001575559999999962, 0.00015743000000000007, 0.00015801400000000493, 0.00015784700000000262, 0.00015792999999999363, 0.0001575830000000028, 0.0001581940000000004, 0.00015806999999999627, 0.0001574579999999992, 0.00015799999999999842, 0.00015744399999999964, 0.00015793000000000057, 0.00015783400000000253, 0.00015765300000000065, 0.00015816700000000072, 0.00015770899999999893, 0.00015765300000000065, 0.0001579030000000009, 0.00015743099999999954, 0.00015763900000000108, 0.0001581380000000021, 0.0001578060000000034, 0.00015791599999999406]</msg>
<status status="PASS" starttime="20201115 23:04:01.076" endtime="20201115 23:04:01.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.065" endtime="20201115 23:04:01.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.089" endtime="20201115 23:04:01.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:04:01.099" endtime="20201115 23:04:01.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.094" endtime="20201115 23:04:01.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.084" endtime="20201115 23:04:01.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.577" endtime="20201115 23:04:01.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.572" endtime="20201115 23:04:01.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:00.571" endtime="20201115 23:04:01.128"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.163" endtime="20201115 23:04:01.187"></status>
</kw>
<msg timestamp="20201115 23:04:01.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:01.158" endtime="20201115 23:04:01.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:04:01.191" endtime="20201115 23:04:01.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.198" endtime="20201115 23:04:01.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.148" endtime="20201115 23:04:01.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.141" endtime="20201115 23:04:01.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.226" endtime="20201115 23:04:01.564"></status>
</kw>
<msg timestamp="20201115 23:04:01.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.056692889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056851583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:04:01.222" endtime="20201115 23:04:01.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.056692889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056851583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:04:01.574" endtime="20201115 23:04:01.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.593" endtime="20201115 23:04:01.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.214" endtime="20201115 23:04:01.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.208" endtime="20201115 23:04:01.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:04:01.610" level="INFO">${RESULT} = [{'time': 0.056851583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015869399999999395, 'source_diff': 0.00015869399999999395}, {'time': 0.057019139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:04:01.601" endtime="20201115 23:04:01.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:04:01.642" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:04:01.612" endtime="20201115 23:04:01.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.653" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:04:01.651" endtime="20201115 23:04:01.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:04:01.659" level="INFO">VALUE: [0.00015869399999999395, 0.0001590700000000042, 0.0001592779999999988, 0.00015874999999999917, 0.00015902699999999909, 0.00015844400000000064, 0.0001589030000000019, 0.00015872200000000003, 0.00015930599999999795, 0.0001585139999999985, 0.00015862499999999558, 0.0001587359999999996, 0.0001586810000000008, 0.00015876399999999874, 0.00015920900000000043, 0.00015874999999999917, 0.00015876399999999874, 0.00015858299999999687, 0.00015847199999999978, 0.0001591109999999965, 0.00015887500000000276, 0.0001587909999999984, 0.0001586940000000009, 0.00015915300000000215, 0.00015897200000000028, 0.0001585830000000038, 0.00015913900000000258, 0.0001587359999999996, 0.00015883299999999712, 0.00015866600000000175, 0.0001585139999999985, 0.0001586940000000009, 0.00015930599999999795, 0.00015913900000000258, 0.00015913900000000258, 0.00015880499999999798, 0.0001589580000000007, 0.00015847200000000672, 0.0001590549999999913, 0.00015924999999999967, 0.00015891699999999453, 0.00015854100000001203, 0.000159223, 0.00015865299999999471, 0.0001585979999999959, 0.0001590830000000043, 0.0001589580000000007, 0.00015865199999999524, 0.00015857000000001065, 0.00015904199999999813]</msg>
<status status="PASS" starttime="20201115 23:04:01.656" endtime="20201115 23:04:01.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.644" endtime="20201115 23:04:01.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:04:01.667" endtime="20201115 23:04:01.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:04:01.676" endtime="20201115 23:04:01.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.671" endtime="20201115 23:04:01.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.663" endtime="20201115 23:04:01.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.136" endtime="20201115 23:04:01.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.131" endtime="20201115 23:04:01.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.129" endtime="20201115 23:04:01.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.940" endtime="20201115 23:04:01.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:04:01.714" endtime="20201115 23:04:01.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.709" endtime="20201115 23:04:01.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:04:01.707" endtime="20201115 23:04:01.738"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:03:05.813" endtime="20201115 23:04:01.739" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:02:06.243" endtime="20201115 23:04:01.752"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:02:02.434" endtime="20201115 23:04:01.785"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_samr21-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
